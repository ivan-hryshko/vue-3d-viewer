(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["vue-3d-viewer"] = factory();
	else
		root["vue-3d-viewer"] = factory();
})((typeof self !== 'undefined' ? self : this), function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "fb15");
/******/ })
/************************************************************************/
/******/ ({

/***/ "00ee":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "019d":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_viewer_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("a678");
/* harmony import */ var _node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_viewer_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_vue_style_loader_index_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_viewer_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__);
/* unused harmony reexport * */


/***/ }),

/***/ "0366":
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__("1c0b");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "057f":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyNames = __webpack_require__("241c").f;

var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "06cf":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createPropertyDescriptor = __webpack_require__("5c6c");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var has = __webpack_require__("5135");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");

var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "07ac":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var $values = __webpack_require__("6f53").values;

// `Object.values` method
// https://tc39.es/ecma262/#sec-object.values
$({ target: 'Object', stat: true }, {
  values: function values(O) {
    return $values(O);
  }
});


/***/ }),

/***/ "0b25":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");

// `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length or index');
  return length;
};


/***/ }),

/***/ "0cfb":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var fails = __webpack_require__("d039");
var createElement = __webpack_require__("cc12");

// Thank's IE8 for his funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "1468":
/***/ (function(module, exports) {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ "159b":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var forEach = __webpack_require__("17c2");
var createNonEnumerableProperty = __webpack_require__("9112");

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
}


/***/ }),

/***/ "17c2":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $forEach = __webpack_require__("b727").forEach;
var arrayMethodIsStrict = __webpack_require__("a640");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
} : [].forEach;


/***/ }),

/***/ "19aa":
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "1be4":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "1c0b":
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "1c35":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__("1fb5")
var ieee754 = __webpack_require__("9152")
var isArray = __webpack_require__("e3db")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "1c7e":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "1cdc":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /(iphone|ipod|ipad).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "1d80":
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "1dde":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "1fb5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "2266":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var bind = __webpack_require__("0366");
var getIteratorMethod = __webpack_require__("35a1");
var iteratorClose = __webpack_require__("2a62");

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      } return new Result(false);
    }
    iterator = iterFn.call(iterable);
  }

  next = iterator.next;
  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator);
      throw error;
    }
    if (typeof result == 'object' && result && result instanceof Result) return result;
  } return new Result(false);
};


/***/ }),

/***/ "23cb":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "23e7":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var setGlobal = __webpack_require__("ce4e");
var copyConstructorProperties = __webpack_require__("e893");
var isForced = __webpack_require__("94ca");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "241c":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "24fb":
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "2532":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var notARegExp = __webpack_require__("5a34");
var requireObjectCoercible = __webpack_require__("1d80");
var correctIsRegExpLogic = __webpack_require__("ab13");

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~String(requireObjectCoercible(this))
      .indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "2626":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__("d066");
var definePropertyModule = __webpack_require__("9bf2");
var wellKnownSymbol = __webpack_require__("b622");
var DESCRIPTORS = __webpack_require__("83ab");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "2a62":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");

module.exports = function (iterator) {
  var returnMethod = iterator['return'];
  if (returnMethod !== undefined) {
    return anObject(returnMethod.call(iterator)).value;
  }
};


/***/ }),

/***/ "2cf4":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var fails = __webpack_require__("d039");
var bind = __webpack_require__("0366");
var html = __webpack_require__("1be4");
var createElement = __webpack_require__("cc12");
var IS_IOS = __webpack_require__("1cdc");
var IS_NODE = __webpack_require__("605d");

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins -- safe
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    typeof postMessage == 'function' &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "2d00":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var userAgent = __webpack_require__("342f");

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;


/***/ }),

/***/ "2e19":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// UNUSED EXPORTS: Subscription, SubscriptionObserver, Observable

// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/_symbols.js
const hasSymbols = () => typeof Symbol === "function";
const hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);
const getSymbol = (name) => hasSymbol(name) ? Symbol[name] : "@@" + name;
function registerObservableSymbol() {
    if (hasSymbols() && !hasSymbol("observable")) {
        Symbol.observable = Symbol("observable");
    }
}
if (!hasSymbol("asyncIterator")) {
    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for("Symbol.asyncIterator");
}

// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/observable.js
/**
 * Based on <https://raw.githubusercontent.com/zenparsing/zen-observable/master/src/Observable.js>
 * At commit: f63849a8c60af5d514efc8e9d6138d8273c49ad6
 */
/// <reference path="../types/symbols.d.ts" />

const SymbolIterator = getSymbol("iterator");
const SymbolObservable = getSymbol("observable");
const SymbolSpecies = getSymbol("species");
// === Abstract Operations ===
function getMethod(obj, key) {
    const value = obj[key];
    if (value == null) {
        return undefined;
    }
    if (typeof value !== "function") {
        throw new TypeError(value + " is not a function");
    }
    return value;
}
function getSpecies(obj) {
    let ctor = obj.constructor;
    if (ctor !== undefined) {
        ctor = ctor[SymbolSpecies];
        if (ctor === null) {
            ctor = undefined;
        }
    }
    return ctor !== undefined ? ctor : observable_Observable;
}
function isObservable(x) {
    return x instanceof observable_Observable; // SPEC: Brand check
}
function hostReportError(error) {
    if (hostReportError.log) {
        hostReportError.log(error);
    }
    else {
        setTimeout(() => { throw error; }, 0);
    }
}
function enqueue(fn) {
    Promise.resolve().then(() => {
        try {
            fn();
        }
        catch (e) {
            hostReportError(e);
        }
    });
}
function cleanupSubscription(subscription) {
    const cleanup = subscription._cleanup;
    if (cleanup === undefined) {
        return;
    }
    subscription._cleanup = undefined;
    if (!cleanup) {
        return;
    }
    try {
        if (typeof cleanup === "function") {
            cleanup();
        }
        else {
            const unsubscribe = getMethod(cleanup, "unsubscribe");
            if (unsubscribe) {
                unsubscribe.call(cleanup);
            }
        }
    }
    catch (e) {
        hostReportError(e);
    }
}
function closeSubscription(subscription) {
    subscription._observer = undefined;
    subscription._queue = undefined;
    subscription._state = "closed";
}
function flushSubscription(subscription) {
    const queue = subscription._queue;
    if (!queue) {
        return;
    }
    subscription._queue = undefined;
    subscription._state = "ready";
    for (const item of queue) {
        notifySubscription(subscription, item.type, item.value);
        if (subscription._state === "closed") {
            break;
        }
    }
}
function notifySubscription(subscription, type, value) {
    subscription._state = "running";
    const observer = subscription._observer;
    try {
        const m = observer ? getMethod(observer, type) : undefined;
        switch (type) {
            case "next":
                if (m)
                    m.call(observer, value);
                break;
            case "error":
                closeSubscription(subscription);
                if (m)
                    m.call(observer, value);
                else
                    throw value;
                break;
            case "complete":
                closeSubscription(subscription);
                if (m)
                    m.call(observer);
                break;
        }
    }
    catch (e) {
        hostReportError(e);
    }
    if (subscription._state === "closed") {
        cleanupSubscription(subscription);
    }
    else if (subscription._state === "running") {
        subscription._state = "ready";
    }
}
function onNotify(subscription, type, value) {
    if (subscription._state === "closed") {
        return;
    }
    if (subscription._state === "buffering") {
        subscription._queue = subscription._queue || [];
        subscription._queue.push({ type, value });
        return;
    }
    if (subscription._state !== "ready") {
        subscription._state = "buffering";
        subscription._queue = [{ type, value }];
        enqueue(() => flushSubscription(subscription));
        return;
    }
    notifySubscription(subscription, type, value);
}
class Subscription {
    constructor(observer, subscriber) {
        // ASSERT: observer is an object
        // ASSERT: subscriber is callable
        this._cleanup = undefined;
        this._observer = observer;
        this._queue = undefined;
        this._state = "initializing";
        const subscriptionObserver = new SubscriptionObserver(this);
        try {
            this._cleanup = subscriber.call(undefined, subscriptionObserver);
        }
        catch (e) {
            subscriptionObserver.error(e);
        }
        if (this._state === "initializing") {
            this._state = "ready";
        }
    }
    get closed() {
        return this._state === "closed";
    }
    unsubscribe() {
        if (this._state !== "closed") {
            closeSubscription(this);
            cleanupSubscription(this);
        }
    }
}
class SubscriptionObserver {
    constructor(subscription) { this._subscription = subscription; }
    get closed() { return this._subscription._state === "closed"; }
    next(value) { onNotify(this._subscription, "next", value); }
    error(value) { onNotify(this._subscription, "error", value); }
    complete() { onNotify(this._subscription, "complete"); }
}
/**
 * The basic Observable class. This primitive is used to wrap asynchronous
 * data streams in a common standardized data type that is interoperable
 * between libraries and can be composed to represent more complex processes.
 */
class observable_Observable {
    constructor(subscriber) {
        if (!(this instanceof observable_Observable)) {
            throw new TypeError("Observable cannot be called as a function");
        }
        if (typeof subscriber !== "function") {
            throw new TypeError("Observable initializer must be a function");
        }
        this._subscriber = subscriber;
    }
    subscribe(nextOrObserver, onError, onComplete) {
        if (typeof nextOrObserver !== "object" || nextOrObserver === null) {
            nextOrObserver = {
                next: nextOrObserver,
                error: onError,
                complete: onComplete
            };
        }
        return new Subscription(nextOrObserver, this._subscriber);
    }
    pipe(first, ...mappers) {
        // tslint:disable-next-line no-this-assignment
        let intermediate = this;
        for (const mapper of [first, ...mappers]) {
            intermediate = mapper(intermediate);
        }
        return intermediate;
    }
    tap(nextOrObserver, onError, onComplete) {
        const tapObserver = typeof nextOrObserver !== "object" || nextOrObserver === null
            ? {
                next: nextOrObserver,
                error: onError,
                complete: onComplete
            }
            : nextOrObserver;
        return new observable_Observable(observer => {
            return this.subscribe({
                next(value) {
                    tapObserver.next && tapObserver.next(value);
                    observer.next(value);
                },
                error(error) {
                    tapObserver.error && tapObserver.error(error);
                    observer.error(error);
                },
                complete() {
                    tapObserver.complete && tapObserver.complete();
                    observer.complete();
                },
                start(subscription) {
                    tapObserver.start && tapObserver.start(subscription);
                }
            });
        });
    }
    forEach(fn) {
        return new Promise((resolve, reject) => {
            if (typeof fn !== "function") {
                reject(new TypeError(fn + " is not a function"));
                return;
            }
            function done() {
                subscription.unsubscribe();
                resolve();
            }
            const subscription = this.subscribe({
                next(value) {
                    try {
                        fn(value, done);
                    }
                    catch (e) {
                        reject(e);
                        subscription.unsubscribe();
                    }
                },
                error: reject,
                complete: resolve,
            });
        });
    }
    map(fn) {
        if (typeof fn !== "function") {
            throw new TypeError(fn + " is not a function");
        }
        const C = getSpecies(this);
        return new C(observer => this.subscribe({
            next(value) {
                let propagatedValue = value;
                try {
                    propagatedValue = fn(value);
                }
                catch (e) {
                    return observer.error(e);
                }
                observer.next(propagatedValue);
            },
            error(e) { observer.error(e); },
            complete() { observer.complete(); },
        }));
    }
    filter(fn) {
        if (typeof fn !== "function") {
            throw new TypeError(fn + " is not a function");
        }
        const C = getSpecies(this);
        return new C(observer => this.subscribe({
            next(value) {
                try {
                    if (!fn(value))
                        return;
                }
                catch (e) {
                    return observer.error(e);
                }
                observer.next(value);
            },
            error(e) { observer.error(e); },
            complete() { observer.complete(); },
        }));
    }
    reduce(fn, seed) {
        if (typeof fn !== "function") {
            throw new TypeError(fn + " is not a function");
        }
        const C = getSpecies(this);
        const hasSeed = arguments.length > 1;
        let hasValue = false;
        let acc = seed;
        return new C(observer => this.subscribe({
            next(value) {
                const first = !hasValue;
                hasValue = true;
                if (!first || hasSeed) {
                    try {
                        acc = fn(acc, value);
                    }
                    catch (e) {
                        return observer.error(e);
                    }
                }
                else {
                    acc = value;
                }
            },
            error(e) { observer.error(e); },
            complete() {
                if (!hasValue && !hasSeed) {
                    return observer.error(new TypeError("Cannot reduce an empty sequence"));
                }
                observer.next(acc);
                observer.complete();
            },
        }));
    }
    concat(...sources) {
        const C = getSpecies(this);
        return new C(observer => {
            let subscription;
            let index = 0;
            function startNext(next) {
                subscription = next.subscribe({
                    next(v) { observer.next(v); },
                    error(e) { observer.error(e); },
                    complete() {
                        if (index === sources.length) {
                            subscription = undefined;
                            observer.complete();
                        }
                        else {
                            startNext(C.from(sources[index++]));
                        }
                    },
                });
            }
            startNext(this);
            return () => {
                if (subscription) {
                    subscription.unsubscribe();
                    subscription = undefined;
                }
            };
        });
    }
    flatMap(fn) {
        if (typeof fn !== "function") {
            throw new TypeError(fn + " is not a function");
        }
        const C = getSpecies(this);
        return new C(observer => {
            const subscriptions = [];
            const outer = this.subscribe({
                next(value) {
                    let normalizedValue;
                    if (fn) {
                        try {
                            normalizedValue = fn(value);
                        }
                        catch (e) {
                            return observer.error(e);
                        }
                    }
                    else {
                        normalizedValue = value;
                    }
                    const inner = C.from(normalizedValue).subscribe({
                        next(innerValue) { observer.next(innerValue); },
                        error(e) { observer.error(e); },
                        complete() {
                            const i = subscriptions.indexOf(inner);
                            if (i >= 0)
                                subscriptions.splice(i, 1);
                            completeIfDone();
                        },
                    });
                    subscriptions.push(inner);
                },
                error(e) { observer.error(e); },
                complete() { completeIfDone(); },
            });
            function completeIfDone() {
                if (outer.closed && subscriptions.length === 0) {
                    observer.complete();
                }
            }
            return () => {
                subscriptions.forEach(s => s.unsubscribe());
                outer.unsubscribe();
            };
        });
    }
    [SymbolObservable]() { return this; }
    static from(x) {
        const C = (typeof this === "function" ? this : observable_Observable);
        if (x == null) {
            throw new TypeError(x + " is not an object");
        }
        const observableMethod = getMethod(x, SymbolObservable);
        if (observableMethod) {
            const observable = observableMethod.call(x);
            if (Object(observable) !== observable) {
                throw new TypeError(observable + " is not an object");
            }
            if (isObservable(observable) && observable.constructor === C) {
                return observable;
            }
            return new C(observer => observable.subscribe(observer));
        }
        if (hasSymbol("iterator")) {
            const iteratorMethod = getMethod(x, SymbolIterator);
            if (iteratorMethod) {
                return new C(observer => {
                    enqueue(() => {
                        if (observer.closed)
                            return;
                        for (const item of iteratorMethod.call(x)) {
                            observer.next(item);
                            if (observer.closed)
                                return;
                        }
                        observer.complete();
                    });
                });
            }
        }
        if (Array.isArray(x)) {
            return new C(observer => {
                enqueue(() => {
                    if (observer.closed)
                        return;
                    for (const item of x) {
                        observer.next(item);
                        if (observer.closed)
                            return;
                    }
                    observer.complete();
                });
            });
        }
        throw new TypeError(x + " is not observable");
    }
    static of(...items) {
        const C = (typeof this === "function" ? this : observable_Observable);
        return new C(observer => {
            enqueue(() => {
                if (observer.closed)
                    return;
                for (const item of items) {
                    observer.next(item);
                    if (observer.closed)
                        return;
                }
                observer.complete();
            });
        });
    }
    static get [SymbolSpecies]() { return this; }
}
if (hasSymbols()) {
    Object.defineProperty(observable_Observable, Symbol("extensions"), {
        value: {
            symbol: SymbolObservable,
            hostReportError,
        },
        configurable: true,
    });
}
/* harmony default export */ var observable = __webpack_exports__["a"] = (observable_Observable);


/***/ }),

/***/ "342f":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "34eb":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = Object({"NODE_ENV":"production","BASE_URL":"/"}).DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __webpack_require__("dc90")(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "35a1":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("f5df");
var Iterators = __webpack_require__("3f8c");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "37e8":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var anObject = __webpack_require__("825a");
var objectKeys = __webpack_require__("df75");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
  return O;
};


/***/ }),

/***/ "3bbe":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  } return it;
};


/***/ }),

/***/ "3ca3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var charAt = __webpack_require__("6547").charAt;
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "3f8c":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "428f":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global;


/***/ }),

/***/ "4362":
/***/ (function(module, exports, __webpack_require__) {

exports.nextTick = function nextTick(fn) {
    var args = Array.prototype.slice.call(arguments);
    args.shift();
    setTimeout(function () {
        fn.apply(null, args);
    }, 0);
};

exports.platform = exports.arch = 
exports.execPath = exports.title = 'browser';
exports.pid = 1;
exports.browser = true;
exports.env = {};
exports.argv = [];

exports.binding = function (name) {
	throw new Error('No such module. (Possibly not yet loaded)')
};

(function () {
    var cwd = '/';
    var path;
    exports.cwd = function () { return cwd };
    exports.chdir = function (dir) {
        if (!path) path = __webpack_require__("df7c");
        cwd = path.resolve(dir, cwd);
    };
})();

exports.exit = exports.kill = 
exports.umask = exports.dlopen = 
exports.uptime = exports.memoryUsage = 
exports.uvCounters = function() {};
exports.features = {};


/***/ }),

/***/ "44ad":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");
var classof = __webpack_require__("c6b6");

var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "44d2":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var create = __webpack_require__("7c73");
var definePropertyModule = __webpack_require__("9bf2");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "44de":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "44e7":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var classof = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "4840":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var aFunction = __webpack_require__("1c0b");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "4930":
/***/ (function(module, exports, __webpack_require__) {

var IS_NODE = __webpack_require__("605d");
var V8_VERSION = __webpack_require__("2d00");
var fails = __webpack_require__("d039");

module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  /* global Symbol -- required for testing */
  return !Symbol.sham &&
    // Chrome 38 Symbol has incorrect toString conversion
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    (IS_NODE ? V8_VERSION === 38 : V8_VERSION > 37 && V8_VERSION < 41);
});


/***/ }),

/***/ "499e":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ addStylesClient; });

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/listToStyles.js
/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}

// CONCATENATED MODULE: ./node_modules/vue-style-loader/lib/addStylesClient.js
/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/



var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

function addStylesClient (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),

/***/ "4d64":
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__("fc6a");
var toLength = __webpack_require__("50c4");
var toAbsoluteIndex = __webpack_require__("23cb");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "4de4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $filter = __webpack_require__("b727").filter;
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "4df4":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__("0366");
var toObject = __webpack_require__("7b0b");
var callWithSafeIterationClosing = __webpack_require__("9bdd");
var isArrayIteratorMethod = __webpack_require__("e95a");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var getIteratorMethod = __webpack_require__("35a1");

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();
    for (;!(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "50c4":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "5135":
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "5692":
/***/ (function(module, exports, __webpack_require__) {

var IS_PURE = __webpack_require__("c430");
var store = __webpack_require__("c6cd");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.9.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "56ef":
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__("d066");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var anObject = __webpack_require__("825a");

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "5a34":
/***/ (function(module, exports, __webpack_require__) {

var isRegExp = __webpack_require__("44e7");

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "5c6c":
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "5f4b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WorkerEventType; });
/// <reference lib="dom" />
// tslint:disable max-classes-per-file

/** Event as emitted by worker thread. Subscribe to using `Thread.events(thread)`. */
var WorkerEventType;
(function (WorkerEventType) {
    WorkerEventType["internalError"] = "internalError";
    WorkerEventType["message"] = "message";
    WorkerEventType["termination"] = "termination";
})(WorkerEventType || (WorkerEventType = {}));


/***/ }),

/***/ "605d":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");
var global = __webpack_require__("da84");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "621a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__("da84");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_ARRAY_BUFFER = __webpack_require__("a981");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefineAll = __webpack_require__("e2cc");
var fails = __webpack_require__("d039");
var anInstance = __webpack_require__("19aa");
var toInteger = __webpack_require__("a691");
var toLength = __webpack_require__("50c4");
var toIndex = __webpack_require__("0b25");
var IEEE754 = __webpack_require__("77a7");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var getOwnPropertyNames = __webpack_require__("241c").f;
var defineProperty = __webpack_require__("9bf2").f;
var arrayFill = __webpack_require__("81d5");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var $DataView = global[DATA_VIEW];
var $DataViewPrototype = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype = Object.prototype;
var RangeError = global.RangeError;

var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;

var packInt8 = function (number) {
  return [number & 0xFF];
};

var packInt16 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var unpackInt32 = function (buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packFloat32 = function (number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function (number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function (Constructor, key) {
  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });
};

var get = function (view, count, index, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = bytes.slice(start, start + count);
  return isLittleEndian ? pack : pack.reverse();
};

var set = function (view, count, index, conversion, value, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);
  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    setInternalState(this, {
      bytes: arrayFill.call(new Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) this.byteLength = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = getInternalState(buffer).byteLength;
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset
    });
    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength');
    addGetter($DataView, 'buffer');
    addGetter($DataView, 'byteLength');
    addGetter($DataView, 'byteOffset');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
    }
  });
} else {
  /* eslint-disable no-new -- required for testing */
  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1);
  }) || fails(function () {
    new NativeArrayBuffer();
    new NativeArrayBuffer(1.5);
    new NativeArrayBuffer(NaN);
    return NativeArrayBuffer.name != ARRAY_BUFFER;
  })) {
  /* eslint-enable no-new -- required for testing */
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new NativeArrayBuffer(toIndex(length));
    };
    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];
    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) {
        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
      }
    }
    ArrayBufferPrototype.constructor = $ArrayBuffer;
  }

  // WebKit bug - the same parent prototype for typed arrays and data view
  if (setPrototypeOf && getPrototypeOf($DataViewPrototype) !== ObjectPrototype) {
    setPrototypeOf($DataViewPrototype, ObjectPrototype);
  }

  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer(2));
  var nativeSetInt8 = $DataViewPrototype.setInt8;
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataViewPrototype, {
    setInt8: function setInt8(byteOffset, value) {
      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, { unsafe: true });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);

module.exports = {
  ArrayBuffer: $ArrayBuffer,
  DataView: $DataView
};


/***/ }),

/***/ "6547":
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__("a691");
var requireObjectCoercible = __webpack_require__("1d80");

// `String.prototype.{ codePointAt, at }` methods implementation
var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING ? S.charAt(position) : first
        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "65f0":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var wellKnownSymbol = __webpack_require__("b622");

var SPECIES = wellKnownSymbol('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "69f3":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__("7f9a");
var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");
var createNonEnumerableProperty = __webpack_require__("9112");
var objectHas = __webpack_require__("5135");
var shared = __webpack_require__("c6cd");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");

var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "6c3a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ createProxyFunction; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ createProxyModule; });

// EXTERNAL MODULE: ./node_modules/debug/src/browser.js
var browser = __webpack_require__("34eb");
var browser_default = /*#__PURE__*/__webpack_require__.n(browser);

// EXTERNAL MODULE: ./node_modules/observable-fns/dist.esm/observable.js + 1 modules
var observable = __webpack_require__("2e19");

// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/subject.js

// TODO: This observer iteration approach looks inelegant and expensive
// Idea: Come up with super class for Subscription that contains the
//       notify*, ... methods and use it here
/**
 * A subject is a "hot" observable (see `multicast`) that has its observer
 * methods (`.next(value)`, `.error(error)`, `.complete()`) exposed.
 *
 * Be careful, though! With great power comes great responsibility. Only use
 * the `Subject` when you really need to trigger updates "from the outside" and
 * try to keep the code that can access it to a minimum. Return
 * `Observable.from(mySubject)` to not allow other code to mutate.
 */
class subject_MulticastSubject extends observable["a" /* default */] {
    constructor() {
        super(observer => {
            this._observers.add(observer);
            return () => this._observers.delete(observer);
        });
        this._observers = new Set();
    }
    next(value) {
        for (const observer of this._observers) {
            observer.next(value);
        }
    }
    error(error) {
        for (const observer of this._observers) {
            observer.error(error);
        }
    }
    complete() {
        for (const observer of this._observers) {
            observer.complete();
        }
    }
}
/* harmony default export */ var dist_esm_subject = (subject_MulticastSubject);

// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/unsubscribe.js
/**
 * Unsubscribe from a subscription returned by something that looks like an observable,
 * but is not necessarily our observable implementation.
 */
function unsubscribe(subscription) {
    if (typeof subscription === "function") {
        subscription();
    }
    else if (subscription && typeof subscription.unsubscribe === "function") {
        subscription.unsubscribe();
    }
}
/* harmony default export */ var dist_esm_unsubscribe = (unsubscribe);

// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/multicast.js



// TODO: Subject already creates additional observables "under the hood",
//       now we introduce even more. A true native MulticastObservable
//       would be preferable.
/**
 * Takes a "cold" observable and returns a wrapping "hot" observable that
 * proxies the input observable's values and errors.
 *
 * An observable is called "cold" when its initialization function is run
 * for each new subscriber. This is how observable-fns's `Observable`
 * implementation works.
 *
 * A hot observable is an observable where new subscribers subscribe to
 * the upcoming values of an already-initialiazed observable.
 *
 * The multicast observable will lazily subscribe to the source observable
 * once it has its first own subscriber and will unsubscribe from the
 * source observable when its last own subscriber unsubscribed.
 */
function multicast(coldObservable) {
    const subject = new dist_esm_subject();
    let sourceSubscription;
    let subscriberCount = 0;
    return new observable["a" /* default */](observer => {
        // Init source subscription lazily
        if (!sourceSubscription) {
            sourceSubscription = coldObservable.subscribe(subject);
        }
        // Pipe all events from `subject` into this observable
        const subscription = subject.subscribe(observer);
        subscriberCount++;
        return () => {
            subscriberCount--;
            subscription.unsubscribe();
            // Close source subscription once last subscriber has unsubscribed
            if (subscriberCount === 0) {
                dist_esm_unsubscribe(sourceSubscription);
                sourceSubscription = undefined;
            }
        };
    });
}
/* harmony default export */ var dist_esm_multicast = (multicast);

// EXTERNAL MODULE: ./node_modules/threads/dist-esm/common.js + 1 modules
var common = __webpack_require__("dc2a");

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/observable-promise.js

const doNothing = () => undefined;
const returnInput = (input) => input;
const runDeferred = (fn) => Promise.resolve().then(fn);
function fail(error) {
    throw error;
}
function isThenable(thing) {
    return thing && typeof thing.then === "function";
}
/**
 * Creates a hybrid, combining the APIs of an Observable and a Promise.
 *
 * It is used to proxy async process states when we are initially not sure
 * if that async process will yield values once (-> Promise) or multiple
 * times (-> Observable).
 *
 * Note that the observable promise inherits some of the observable's characteristics:
 * The `init` function will be called *once for every time anyone subscribes to it*.
 *
 * If this is undesired, derive a hot observable from it using `makeHot()` and
 * subscribe to that.
 */
class observable_promise_ObservablePromise extends observable["a" /* default */] {
    constructor(init) {
        super(originalObserver => {
            // tslint:disable-next-line no-this-assignment
            const self = this;
            const observer = Object.assign(Object.assign({}, originalObserver), { complete() {
                    originalObserver.complete();
                    self.onCompletion();
                }, error(error) {
                    originalObserver.error(error);
                    self.onError(error);
                },
                next(value) {
                    originalObserver.next(value);
                    self.onNext(value);
                } });
            try {
                this.initHasRun = true;
                return init(observer);
            }
            catch (error) {
                observer.error(error);
            }
        });
        this.initHasRun = false;
        this.fulfillmentCallbacks = [];
        this.rejectionCallbacks = [];
        this.firstValueSet = false;
        this.state = "pending";
    }
    onNext(value) {
        if (!this.firstValueSet) {
            this.firstValue = value;
            this.firstValueSet = true;
        }
    }
    onError(error) {
        this.state = "rejected";
        this.rejection = error;
        for (const onRejected of this.rejectionCallbacks) {
            // Promisifying the call to turn errors into unhandled promise rejections
            // instead of them failing sync and cancelling the iteration
            runDeferred(() => onRejected(error));
        }
    }
    onCompletion() {
        this.state = "fulfilled";
        for (const onFulfilled of this.fulfillmentCallbacks) {
            // Promisifying the call to turn errors into unhandled promise rejections
            // instead of them failing sync and cancelling the iteration
            runDeferred(() => onFulfilled(this.firstValue));
        }
    }
    then(onFulfilledRaw, onRejectedRaw) {
        const onFulfilled = onFulfilledRaw || returnInput;
        const onRejected = onRejectedRaw || fail;
        let onRejectedCalled = false;
        return new Promise((resolve, reject) => {
            const rejectionCallback = (error) => {
                if (onRejectedCalled)
                    return;
                onRejectedCalled = true;
                try {
                    resolve(onRejected(error));
                }
                catch (anotherError) {
                    reject(anotherError);
                }
            };
            const fulfillmentCallback = (value) => {
                try {
                    resolve(onFulfilled(value));
                }
                catch (error) {
                    rejectionCallback(error);
                }
            };
            if (!this.initHasRun) {
                this.subscribe({ error: rejectionCallback });
            }
            if (this.state === "fulfilled") {
                return resolve(onFulfilled(this.firstValue));
            }
            if (this.state === "rejected") {
                onRejectedCalled = true;
                return resolve(onRejected(this.rejection));
            }
            this.fulfillmentCallbacks.push(fulfillmentCallback);
            this.rejectionCallbacks.push(rejectionCallback);
        });
    }
    catch(onRejected) {
        return this.then(undefined, onRejected);
    }
    finally(onCompleted) {
        const handler = onCompleted || doNothing;
        return this.then((value) => {
            handler();
            return value;
        }, () => handler());
    }
    static from(thing) {
        if (isThenable(thing)) {
            return new observable_promise_ObservablePromise(observer => {
                const onFulfilled = (value) => {
                    observer.next(value);
                    observer.complete();
                };
                const onRejected = (error) => {
                    observer.error(error);
                };
                thing.then(onFulfilled, onRejected);
            });
        }
        else {
            return super.from(thing);
        }
    }
}

// EXTERNAL MODULE: ./node_modules/threads/dist-esm/transferable.js
var transferable = __webpack_require__("cd8f");

// EXTERNAL MODULE: ./node_modules/threads/dist-esm/types/messages.js
var messages = __webpack_require__("cea9");

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/master/invocation-proxy.js
/*
 * This source file contains the code for proxying calls in the master thread to calls in the workers
 * by `.postMessage()`-ing.
 *
 * Keep in mind that this code can make or break the program's performance! Need to optimize more…
 */






const debugMessages = browser_default()("threads:master:messages");
let nextJobUID = 1;
const dedupe = (array) => Array.from(new Set(array));
const isJobErrorMessage = (data) => data && data.type === messages["b" /* WorkerMessageType */].error;
const isJobResultMessage = (data) => data && data.type === messages["b" /* WorkerMessageType */].result;
const isJobStartMessage = (data) => data && data.type === messages["b" /* WorkerMessageType */].running;
function createObservableForJob(worker, jobUID) {
    return new observable["a" /* default */](observer => {
        let asyncType;
        const messageHandler = ((event) => {
            debugMessages("Message from worker:", event.data);
            if (!event.data || event.data.uid !== jobUID)
                return;
            if (isJobStartMessage(event.data)) {
                asyncType = event.data.resultType;
            }
            else if (isJobResultMessage(event.data)) {
                if (asyncType === "promise") {
                    if (typeof event.data.payload !== "undefined") {
                        observer.next(Object(common["a" /* deserialize */])(event.data.payload));
                    }
                    observer.complete();
                    worker.removeEventListener("message", messageHandler);
                }
                else {
                    if (event.data.payload) {
                        observer.next(Object(common["a" /* deserialize */])(event.data.payload));
                    }
                    if (event.data.complete) {
                        observer.complete();
                        worker.removeEventListener("message", messageHandler);
                    }
                }
            }
            else if (isJobErrorMessage(event.data)) {
                const error = Object(common["a" /* deserialize */])(event.data.error);
                if (asyncType === "promise" || !asyncType) {
                    observer.error(error);
                }
                else {
                    observer.error(error);
                }
                worker.removeEventListener("message", messageHandler);
            }
        });
        worker.addEventListener("message", messageHandler);
        return () => {
            if (asyncType === "observable" || !asyncType) {
                const cancelMessage = {
                    type: messages["a" /* MasterMessageType */].cancel,
                    uid: jobUID
                };
                worker.postMessage(cancelMessage);
            }
            worker.removeEventListener("message", messageHandler);
        };
    });
}
function prepareArguments(rawArgs) {
    if (rawArgs.length === 0) {
        // Exit early if possible
        return {
            args: [],
            transferables: []
        };
    }
    const args = [];
    const transferables = [];
    for (const arg of rawArgs) {
        if (Object(transferable["b" /* isTransferDescriptor */])(arg)) {
            args.push(Object(common["b" /* serialize */])(arg.send));
            transferables.push(...arg.transferables);
        }
        else {
            args.push(Object(common["b" /* serialize */])(arg));
        }
    }
    return {
        args,
        transferables: transferables.length === 0 ? transferables : dedupe(transferables)
    };
}
function createProxyFunction(worker, method) {
    return ((...rawArgs) => {
        const uid = nextJobUID++;
        const { args, transferables } = prepareArguments(rawArgs);
        const runMessage = {
            type: messages["a" /* MasterMessageType */].run,
            uid,
            method,
            args
        };
        debugMessages("Sending command to run function to worker:", runMessage);
        try {
            worker.postMessage(runMessage, transferables);
        }
        catch (error) {
            return observable_promise_ObservablePromise.from(Promise.reject(error));
        }
        return observable_promise_ObservablePromise.from(dist_esm_multicast(createObservableForJob(worker, uid)));
    });
}
function createProxyModule(worker, methodNames) {
    const proxy = {};
    for (const methodName of methodNames) {
        proxy[methodName] = createProxyFunction(worker, methodName);
    }
    return proxy;
}


/***/ }),

/***/ "6eeb":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var setGlobal = __webpack_require__("ce4e");
var inspectSource = __webpack_require__("8925");
var InternalStateModule = __webpack_require__("69f3");

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var state;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) {
      createNonEnumerableProperty(value, 'name', key);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof key == 'string' ? key : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "6f53":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var objectKeys = __webpack_require__("df75");
var toIndexedObject = __webpack_require__("fc6a");
var propertyIsEnumerable = __webpack_require__("d1e7").f;

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable.call(O, key)) {
        result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "731b":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return spawn; });
/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("34eb");
/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(debug__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var observable_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("2e19");
/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("dc2a");
/* harmony import */ var _promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("7fc3");
/* harmony import */ var _symbols__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("7b0a");
/* harmony import */ var _types_master__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("5f4b");
/* harmony import */ var _invocation_proxy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("6c3a");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};







const debugMessages = debug__WEBPACK_IMPORTED_MODULE_0___default()("threads:master:messages");
const debugSpawn = debug__WEBPACK_IMPORTED_MODULE_0___default()("threads:master:spawn");
const debugThreadUtils = debug__WEBPACK_IMPORTED_MODULE_0___default()("threads:master:thread-utils");
const isInitMessage = (data) => data && data.type === "init";
const isUncaughtErrorMessage = (data) => data && data.type === "uncaughtError";
const initMessageTimeout = typeof process !== "undefined" && Object({"NODE_ENV":"production","BASE_URL":"/"}).THREADS_WORKER_INIT_TIMEOUT
    ? Number.parseInt(Object({"NODE_ENV":"production","BASE_URL":"/"}).THREADS_WORKER_INIT_TIMEOUT, 10)
    : 10000;
function withTimeout(promise, timeoutInMs, errorMessage) {
    return __awaiter(this, void 0, void 0, function* () {
        let timeoutHandle;
        const timeout = new Promise((resolve, reject) => {
            timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);
        });
        const result = yield Promise.race([
            promise,
            timeout
        ]);
        clearTimeout(timeoutHandle);
        return result;
    });
}
function receiveInitMessage(worker) {
    return new Promise((resolve, reject) => {
        const messageHandler = ((event) => {
            debugMessages("Message from worker before finishing initialization:", event.data);
            if (isInitMessage(event.data)) {
                worker.removeEventListener("message", messageHandler);
                resolve(event.data);
            }
            else if (isUncaughtErrorMessage(event.data)) {
                worker.removeEventListener("message", messageHandler);
                reject(Object(_common__WEBPACK_IMPORTED_MODULE_2__[/* deserialize */ "a"])(event.data.error));
            }
        });
        worker.addEventListener("message", messageHandler);
    });
}
function createEventObservable(worker, workerTermination) {
    return new observable_fns__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"](observer => {
        const messageHandler = ((messageEvent) => {
            const workerEvent = {
                type: _types_master__WEBPACK_IMPORTED_MODULE_5__[/* WorkerEventType */ "a"].message,
                data: messageEvent.data
            };
            observer.next(workerEvent);
        });
        const rejectionHandler = ((errorEvent) => {
            debugThreadUtils("Unhandled promise rejection event in thread:", errorEvent);
            const workerEvent = {
                type: _types_master__WEBPACK_IMPORTED_MODULE_5__[/* WorkerEventType */ "a"].internalError,
                error: Error(errorEvent.reason)
            };
            observer.next(workerEvent);
        });
        worker.addEventListener("message", messageHandler);
        worker.addEventListener("unhandledrejection", rejectionHandler);
        workerTermination.then(() => {
            const terminationEvent = {
                type: _types_master__WEBPACK_IMPORTED_MODULE_5__[/* WorkerEventType */ "a"].termination
            };
            worker.removeEventListener("message", messageHandler);
            worker.removeEventListener("unhandledrejection", rejectionHandler);
            observer.next(terminationEvent);
            observer.complete();
        });
    });
}
function createTerminator(worker) {
    const [termination, resolver] = Object(_promise__WEBPACK_IMPORTED_MODULE_3__[/* createPromiseWithResolver */ "a"])();
    const terminate = () => __awaiter(this, void 0, void 0, function* () {
        debugThreadUtils("Terminating worker");
        // Newer versions of worker_threads workers return a promise
        yield worker.terminate();
        resolver();
    });
    return { terminate, termination };
}
function setPrivateThreadProps(raw, worker, workerEvents, terminate) {
    const workerErrors = workerEvents
        .filter(event => event.type === _types_master__WEBPACK_IMPORTED_MODULE_5__[/* WorkerEventType */ "a"].internalError)
        .map(errorEvent => errorEvent.error);
    // tslint:disable-next-line prefer-object-spread
    return Object.assign(raw, {
        [_symbols__WEBPACK_IMPORTED_MODULE_4__[/* $errors */ "a"]]: workerErrors,
        [_symbols__WEBPACK_IMPORTED_MODULE_4__[/* $events */ "b"]]: workerEvents,
        [_symbols__WEBPACK_IMPORTED_MODULE_4__[/* $terminate */ "c"]]: terminate,
        [_symbols__WEBPACK_IMPORTED_MODULE_4__[/* $worker */ "e"]]: worker
    });
}
/**
 * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin
 * abstraction layer to provide the transparent API and verifies that
 * the worker has initialized successfully.
 *
 * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.
 * @param [options]
 * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.
 */
function spawn(worker, options) {
    return __awaiter(this, void 0, void 0, function* () {
        debugSpawn("Initializing new thread");
        const initMessage = yield withTimeout(receiveInitMessage(worker), options && options.timeout ? options.timeout : initMessageTimeout, `Timeout: Did not receive an init message from worker after ${initMessageTimeout}ms. Make sure the worker calls expose().`);
        const exposed = initMessage.exposed;
        const { termination, terminate } = createTerminator(worker);
        const events = createEventObservable(worker, termination);
        if (exposed.type === "function") {
            const proxy = Object(_invocation_proxy__WEBPACK_IMPORTED_MODULE_6__[/* createProxyFunction */ "a"])(worker);
            return setPrivateThreadProps(proxy, worker, events, terminate);
        }
        else if (exposed.type === "module") {
            const proxy = Object(_invocation_proxy__WEBPACK_IMPORTED_MODULE_6__[/* createProxyModule */ "b"])(worker, exposed.methods);
            return setPrivateThreadProps(proxy, worker, events, terminate);
        }
        else {
            const type = exposed.type;
            throw Error(`Worker init message states unexpected type of expose(): ${type}`);
        }
    });
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "7418":
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "746f":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var has = __webpack_require__("5135");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineProperty = __webpack_require__("9bf2").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "77a7":
/***/ (function(module, exports) {

// IEEE754 conversions based on https://github.com/feross/ieee754
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

var pack = function (number, mantissaLength, bytes) {
  var buffer = new Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare -- NaN check
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    if (number * (c = pow(2, -exponent)) < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }
  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);
  buffer[--index] |= sign * 128;
  return buffer;
};

var unpack = function (buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

module.exports = {
  pack: pack,
  unpack: unpack
};


/***/ }),

/***/ "7839":
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "7b0a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return $errors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return $events; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return $terminate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return $transferable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return $worker; });
const $errors = Symbol("thread.errors");
const $events = Symbol("thread.events");
const $terminate = Symbol("thread.terminate");
const $transferable = Symbol("thread.transferable");
const $worker = Symbol("thread.worker");


/***/ }),

/***/ "7b0b":
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__("1d80");

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "7c73":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var defineProperties = __webpack_require__("37e8");
var enumBugKeys = __webpack_require__("7839");
var hiddenKeys = __webpack_require__("d012");
var html = __webpack_require__("1be4");
var documentCreateElement = __webpack_require__("cc12");
var sharedKey = __webpack_require__("f772");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    /* global ActiveXObject -- old IE */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : defineProperties(result, Properties);
};


/***/ }),

/***/ "7dd0":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var createIteratorConstructor = __webpack_require__("9ed3");
var getPrototypeOf = __webpack_require__("e163");
var setPrototypeOf = __webpack_require__("d2bb");
var setToStringTag = __webpack_require__("d44e");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");
var Iterators = __webpack_require__("3f8c");
var IteratorsCore = __webpack_require__("ae93");

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "7f9a":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var inspectSource = __webpack_require__("8925");

var WeakMap = global.WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "7fc3":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createPromiseWithResolver; });
const doNothing = () => undefined;
/**
 * Creates a new promise and exposes its resolver function.
 * Use with care!
 */
function createPromiseWithResolver() {
    let alreadyResolved = false;
    let resolvedTo;
    let resolver = doNothing;
    const promise = new Promise(resolve => {
        if (alreadyResolved) {
            resolve(resolvedTo);
        }
        else {
            resolver = resolve;
        }
    });
    const exposedResolver = (value) => {
        alreadyResolved = true;
        resolvedTo = value;
        resolver();
    };
    return [promise, exposedResolver];
}


/***/ }),

/***/ "81d5":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__("7b0b");
var toAbsoluteIndex = __webpack_require__("23cb");
var toLength = __webpack_require__("50c4");

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "825a":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "83ab":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "8418":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__("c04e");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "861d":
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "8875":
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// addapted from the document.currentScript polyfill by Adam Miller
// MIT license
// source: https://github.com/amiller-gh/currentScript-polyfill

// added support for Firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1620505

(function (root, factory) {
  if (true) {
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
}(typeof self !== 'undefined' ? self : this, function () {
  function getCurrentScript () {
    var descriptor = Object.getOwnPropertyDescriptor(document, 'currentScript')
    // for chrome
    if (!descriptor && 'currentScript' in document && document.currentScript) {
      return document.currentScript
    }

    // for other browsers with native support for currentScript
    if (descriptor && descriptor.get !== getCurrentScript && document.currentScript) {
      return document.currentScript
    }
  
    // IE 8-10 support script readyState
    // IE 11+ & Firefox support stack trace
    try {
      throw new Error();
    }
    catch (err) {
      // Find the second match for the "at" string to get file src url from stack.
      var ieStackRegExp = /.*at [^(]*\((.*):(.+):(.+)\)$/ig,
        ffStackRegExp = /@([^@]*):(\d+):(\d+)\s*$/ig,
        stackDetails = ieStackRegExp.exec(err.stack) || ffStackRegExp.exec(err.stack),
        scriptLocation = (stackDetails && stackDetails[1]) || false,
        line = (stackDetails && stackDetails[2]) || false,
        currentLocation = document.location.href.replace(document.location.hash, ''),
        pageSource,
        inlineScriptSourceRegExp,
        inlineScriptSource,
        scripts = document.getElementsByTagName('script'); // Live NodeList collection
  
      if (scriptLocation === currentLocation) {
        pageSource = document.documentElement.outerHTML;
        inlineScriptSourceRegExp = new RegExp('(?:[^\\n]+?\\n){0,' + (line - 2) + '}[^<]*<script>([\\d\\D]*?)<\\/script>[\\d\\D]*', 'i');
        inlineScriptSource = pageSource.replace(inlineScriptSourceRegExp, '$1').trim();
      }
  
      for (var i = 0; i < scripts.length; i++) {
        // If ready state is interactive, return the script tag
        if (scripts[i].readyState === 'interactive') {
          return scripts[i];
        }
  
        // If src matches, return the script tag
        if (scripts[i].src === scriptLocation) {
          return scripts[i];
        }
  
        // If inline source matches, return the script tag
        if (
          scriptLocation === currentLocation &&
          scripts[i].innerHTML &&
          scripts[i].innerHTML.trim() === inlineScriptSource
        ) {
          return scripts[i];
        }
      }
  
      // If no match, return null
      return null;
    }
  };

  return getCurrentScript
}));


/***/ }),

/***/ "8925":
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__("c6cd");

var functionToString = Function.toString;

// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "90e3":
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};


/***/ }),

/***/ "9112":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var definePropertyModule = __webpack_require__("9bf2");
var createPropertyDescriptor = __webpack_require__("5c6c");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "9152":
/***/ (function(module, exports) {

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "94ca":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "96cf":
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),

/***/ "9781":
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__("24fb");
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, ".vue-3d-viewer{position:absolute;width:100%;height:100%}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ "99af":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var createProperty = __webpack_require__("8418");
var arraySpeciesCreate = __webpack_require__("65f0");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");
var wellKnownSymbol = __webpack_require__("b622");
var V8_VERSION = __webpack_require__("2d00");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "9bdd":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var iteratorClose = __webpack_require__("2a62");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    iteratorClose(iterator);
    throw error;
  }
};


/***/ }),

/***/ "9bf2":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var IE8_DOM_DEFINE = __webpack_require__("0cfb");
var anObject = __webpack_require__("825a");
var toPrimitive = __webpack_require__("c04e");

var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "9ed3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__("ae93").IteratorPrototype;
var create = __webpack_require__("7c73");
var createPropertyDescriptor = __webpack_require__("5c6c");
var setToStringTag = __webpack_require__("d44e");
var Iterators = __webpack_require__("3f8c");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "a4b4":
/***/ (function(module, exports, __webpack_require__) {

var userAgent = __webpack_require__("342f");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "a4d3":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var IS_PURE = __webpack_require__("c430");
var DESCRIPTORS = __webpack_require__("83ab");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");
var fails = __webpack_require__("d039");
var has = __webpack_require__("5135");
var isArray = __webpack_require__("e8b5");
var isObject = __webpack_require__("861d");
var anObject = __webpack_require__("825a");
var toObject = __webpack_require__("7b0b");
var toIndexedObject = __webpack_require__("fc6a");
var toPrimitive = __webpack_require__("c04e");
var createPropertyDescriptor = __webpack_require__("5c6c");
var nativeObjectCreate = __webpack_require__("7c73");
var objectKeys = __webpack_require__("df75");
var getOwnPropertyNamesModule = __webpack_require__("241c");
var getOwnPropertyNamesExternal = __webpack_require__("057f");
var getOwnPropertySymbolsModule = __webpack_require__("7418");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");
var propertyIsEnumerableModule = __webpack_require__("d1e7");
var createNonEnumerableProperty = __webpack_require__("9112");
var redefine = __webpack_require__("6eeb");
var shared = __webpack_require__("5692");
var sharedKey = __webpack_require__("f772");
var hiddenKeys = __webpack_require__("d012");
var uid = __webpack_require__("90e3");
var wellKnownSymbol = __webpack_require__("b622");
var wrappedWellKnownSymbolModule = __webpack_require__("e538");
var defineWellKnownSymbol = __webpack_require__("746f");
var setToStringTag = __webpack_require__("d44e");
var InternalStateModule = __webpack_require__("69f3");
var $forEach = __webpack_require__("b727").forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);
  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;
      while (arguments.length > index) args.push(arguments[index++]);
      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "a630":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var from = __webpack_require__("4df4");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "a640":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "a678":
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__("9781");
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var add = __webpack_require__("499e").default
var update = add("9ad5c01e", content, true, {"sourceMap":false,"shadowMode":false});

/***/ }),

/***/ "a691":
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "a981":
/***/ (function(module, exports) {

module.exports = typeof ArrayBuffer !== 'undefined' && typeof DataView !== 'undefined';


/***/ }),

/***/ "ab13":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "ae93":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__("d039");
var getPrototypeOf = __webpack_require__("e163");
var createNonEnumerableProperty = __webpack_require__("9112");
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");
var IS_PURE = __webpack_require__("c430");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "b041":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classof = __webpack_require__("f5df");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "b0c0":
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__("83ab");
var defineProperty = __webpack_require__("9bf2").f;

var FunctionPrototype = Function.prototype;
var FunctionPrototypeToString = FunctionPrototype.toString;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !(NAME in FunctionPrototype)) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return FunctionPrototypeToString.call(this).match(nameRE)[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "b575":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var getOwnPropertyDescriptor = __webpack_require__("06cf").f;
var macrotask = __webpack_require__("2cf4").set;
var IS_IOS = __webpack_require__("1cdc");
var IS_WEBOS_WEBKIT = __webpack_require__("a4b4");
var IS_NODE = __webpack_require__("605d");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    then = promise.then;
    notify = function () {
      then.call(promise, flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "b622":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var shared = __webpack_require__("5692");
var has = __webpack_require__("5135");
var uid = __webpack_require__("90e3");
var NATIVE_SYMBOL = __webpack_require__("4930");
var USE_SYMBOL_AS_UID = __webpack_require__("fdbf");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    if (NATIVE_SYMBOL && has(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "b64b":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var toObject = __webpack_require__("7b0b");
var nativeKeys = __webpack_require__("df75");
var fails = __webpack_require__("d039");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "b727":
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__("0366");
var IndexedObject = __webpack_require__("44ad");
var toObject = __webpack_require__("7b0b");
var toLength = __webpack_require__("50c4");
var arraySpeciesCreate = __webpack_require__("65f0");

var push = [].push;

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push.call(target, value); // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push.call(target, value); // filterOut
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod(7)
};


/***/ }),

/***/ "c04e":
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__("861d");

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "c19f":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var global = __webpack_require__("da84");
var arrayBufferModule = __webpack_require__("621a");
var setSpecies = __webpack_require__("2626");

var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor
$({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {
  ArrayBuffer: ArrayBuffer
});

setSpecies(ARRAY_BUFFER);


/***/ }),

/***/ "c430":
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "c6b6":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "c6cd":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var setGlobal = __webpack_require__("ce4e");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "c8ba":
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "ca84":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toIndexedObject = __webpack_require__("fc6a");
var indexOf = __webpack_require__("4d64").indexOf;
var hiddenKeys = __webpack_require__("d012");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "caad":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var $includes = __webpack_require__("4d64").includes;
var addToUnscopables = __webpack_require__("44d2");

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "cc12":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var isObject = __webpack_require__("861d");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "cd8f":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return isTransferDescriptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Transfer; });
/* harmony import */ var _symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("7b0a");

function isTransferable(thing) {
    if (!thing || typeof thing !== "object")
        return false;
    // Don't check too thoroughly, since the list of transferable things in JS might grow over time
    return true;
}
function isTransferDescriptor(thing) {
    return thing && typeof thing === "object" && thing[_symbols__WEBPACK_IMPORTED_MODULE_0__[/* $transferable */ "d"]];
}
function Transfer(payload, transferables) {
    if (!transferables) {
        if (!isTransferable(payload))
            throw Error();
        transferables = [payload];
    }
    return {
        [_symbols__WEBPACK_IMPORTED_MODULE_0__[/* $transferable */ "d"]]: true,
        send: payload,
        transferables
    };
}


/***/ }),

/***/ "cdf9":
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__("825a");
var isObject = __webpack_require__("861d");
var newPromiseCapability = __webpack_require__("f069");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "ce4e":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var createNonEnumerableProperty = __webpack_require__("9112");

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "cea9":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MasterMessageType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return WorkerMessageType; });
/////////////////////////////
// Messages sent by master:
var MasterMessageType;
(function (MasterMessageType) {
    MasterMessageType["cancel"] = "cancel";
    MasterMessageType["run"] = "run";
})(MasterMessageType || (MasterMessageType = {}));
////////////////////////////
// Messages sent by worker:
var WorkerMessageType;
(function (WorkerMessageType) {
    WorkerMessageType["error"] = "error";
    WorkerMessageType["init"] = "init";
    WorkerMessageType["result"] = "result";
    WorkerMessageType["running"] = "running";
    WorkerMessageType["uncaughtError"] = "uncaughtError";
})(WorkerMessageType || (WorkerMessageType = {}));


/***/ }),

/***/ "d012":
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "d039":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "d066":
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__("428f");
var global = __webpack_require__("da84");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "d1e7":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "d28b":
/***/ (function(module, exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__("746f");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "d2bb":
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var anObject = __webpack_require__("825a");
var aPossiblePrototype = __webpack_require__("3bbe");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "d3b7":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var redefine = __webpack_require__("6eeb");
var toString = __webpack_require__("b041");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "d44e":
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__("9bf2").f;
var has = __webpack_require__("5135");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "da10":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Sy; });
/* unused harmony export Unified3dLoader */
var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function t(e,t,r){return e(r={path:t,exports:{},require:function(e,t){return n(null==t&&r.path)}},r.exports),r.exports}function n(){throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs")}var r=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.DEFAULT_CONFIG=void 0;t.DEFAULT_CONFIG={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null}})),i=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e){return e&&!0===e.constructor.prototype.isBigNumber||!1}function i(e){return e&&"object"===n(e)&&!0===Object.getPrototypeOf(e).isComplex||!1}function a(e){return e&&"object"===n(e)&&!0===Object.getPrototypeOf(e).isFraction||!1}function o(e){return e&&!0===e.constructor.prototype.isUnit||!1}Object.defineProperty(t,"__esModule",{value:!0}),t.isNumber=function(e){return"number"==typeof e},t.isBigNumber=r,t.isComplex=i,t.isFraction=a,t.isUnit=o,t.isString=function(e){return"string"==typeof e},t.isMatrix=c,t.isCollection=function(e){return Array.isArray(e)||c(e)},t.isDenseMatrix=function(e){return e&&e.isDenseMatrix&&!0===e.constructor.prototype.isMatrix||!1},t.isSparseMatrix=function(e){return e&&e.isSparseMatrix&&!0===e.constructor.prototype.isMatrix||!1},t.isRange=u,t.isIndex=l,t.isBoolean=function(e){return"boolean"==typeof e},t.isResultSet=d,t.isHelp=f,t.isFunction=function(e){return"function"==typeof e},t.isDate=function(e){return e instanceof Date},t.isRegExp=function(e){return e instanceof RegExp},t.isObject=function(e){return!(!e||"object"!==n(e)||e.constructor!==Object||i(e)||a(e))},t.isNull=function(e){return null===e},t.isUndefined=function(e){return void 0===e},t.isAccessorNode=function(e){return e&&!0===e.isAccessorNode&&!0===e.constructor.prototype.isNode||!1},t.isArrayNode=function(e){return e&&!0===e.isArrayNode&&!0===e.constructor.prototype.isNode||!1},t.isAssignmentNode=function(e){return e&&!0===e.isAssignmentNode&&!0===e.constructor.prototype.isNode||!1},t.isBlockNode=function(e){return e&&!0===e.isBlockNode&&!0===e.constructor.prototype.isNode||!1},t.isConditionalNode=function(e){return e&&!0===e.isConditionalNode&&!0===e.constructor.prototype.isNode||!1},t.isConstantNode=function(e){return e&&!0===e.isConstantNode&&!0===e.constructor.prototype.isNode||!1},t.isFunctionAssignmentNode=function(e){return e&&!0===e.isFunctionAssignmentNode&&!0===e.constructor.prototype.isNode||!1},t.isFunctionNode=function(e){return e&&!0===e.isFunctionNode&&!0===e.constructor.prototype.isNode||!1},t.isIndexNode=function(e){return e&&!0===e.isIndexNode&&!0===e.constructor.prototype.isNode||!1},t.isNode=p,t.isObjectNode=function(e){return e&&!0===e.isObjectNode&&!0===e.constructor.prototype.isNode||!1},t.isOperatorNode=function(e){return e&&!0===e.isOperatorNode&&!0===e.constructor.prototype.isNode||!1},t.isParenthesisNode=function(e){return e&&!0===e.isParenthesisNode&&!0===e.constructor.prototype.isNode||!1},t.isRangeNode=function(e){return e&&!0===e.isRangeNode&&!0===e.constructor.prototype.isNode||!1},t.isSymbolNode=function(e){return e&&!0===e.isSymbolNode&&!0===e.constructor.prototype.isNode||!1},t.isChain=m,t.typeOf=function(e){var t=n(e);if("object"===t)return null===e?"null":Array.isArray(e)?"Array":e instanceof Date?"Date":e instanceof RegExp?"RegExp":r(e)?"BigNumber":i(e)?"Complex":a(e)?"Fraction":c(e)?"Matrix":o(e)?"Unit":l(e)?"Index":u(e)?"Range":d(e)?"ResultSet":p(e)?e.type:m(e)?"Chain":f(e)?"Help":"Object";return"function"===t?"Function":t},t.isArray=void 0;var s=Array.isArray;function c(e){return e&&!0===e.constructor.prototype.isMatrix||!1}function u(e){return e&&!0===e.constructor.prototype.isRange||!1}function l(e){return e&&!0===e.constructor.prototype.isIndex||!1}function d(e){return e&&!0===e.constructor.prototype.isResultSet||!1}function f(e){return e&&!0===e.constructor.prototype.isHelp||!1}function p(e){return e&&!0===e.isNode&&!0===e.constructor.prototype.isNode||!1}function m(e){return e&&!0===e.constructor.prototype.isChain||!1}t.isArray=s})),a=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){var n={};for(var r in e)a(e,r)&&(n[r]=t(e[r]));return n}function a(e,t){return e&&Object.hasOwnProperty.call(e,t)}function o(e,t){if("string"==typeof t)return c(t)?o(e,t.split(".")):e[t];for(var n=e,r=0;r<t.length;r++){var i=t[r];n=n?n[i]:void 0}return n}function s(e,t,n){if("string"==typeof t)return c(t)?s(e,t.split("."),n):(e[t]=n,e);for(var r=e,i=0;i<t.length-1;i++){var a=t[i];void 0===r[a]&&(r[a]={}),r=r[a]}t.length>0&&(r[t[t.length-1]]=n);return e}function c(e){return-1!==e.indexOf(".")}Object.defineProperty(t,"__esModule",{value:!0}),t.clone=function e(t){var a=n(t);if("number"===a||"string"===a||"boolean"===a||null==t)return t;if("function"==typeof t.clone)return t.clone();if(Array.isArray(t))return t.map((function(t){return e(t)}));if(t instanceof Date)return new Date(t.valueOf());if((0,i.isBigNumber)(t))return t;if(t instanceof RegExp)throw new TypeError("Cannot clone "+t);return r(t,e)},t.mapObject=r,t.extend=function(e,t){for(var n in t)a(t,n)&&(e[n]=t[n]);return e},t.deepExtend=function e(t,n){if(Array.isArray(n))throw new TypeError("Arrays are not supported by deepExtend");for(var r in n)if(a(n,r)&&!(r in Object.prototype)&&!(r in Function.prototype))if(n[r]&&n[r].constructor===Object)void 0===t[r]&&(t[r]={}),t[r]&&t[r].constructor===Object?e(t[r],n[r]):t[r]=n[r];else{if(Array.isArray(n[r]))throw new TypeError("Arrays are not supported by deepExtend");t[r]=n[r]}return t},t.deepStrictEqual=function e(t,n){var r,i,a;if(Array.isArray(t)){if(!Array.isArray(n))return!1;if(t.length!==n.length)return!1;for(i=0,a=t.length;i<a;i++)if(!e(t[i],n[i]))return!1;return!0}if("function"==typeof t)return t===n;if(t instanceof Object){if(Array.isArray(n)||!(n instanceof Object))return!1;for(r in t)if(!(r in n)||!e(t[r],n[r]))return!1;for(r in n)if(!(r in t)||!e(t[r],n[r]))return!1;return!0}return t===n},t.deepFlatten=function(e){var t={};return function e(t,r){for(var i in t)if(a(t,i)){var o=t[i];"object"===n(o)&&null!==o?e(o,r):r[i]=o}}(e,t),t},t.canDefineProperty=function(){try{if(Object.defineProperty)return Object.defineProperty({},"x",{get:function(){}}),!0}catch(e){}return!1},t.lazy=function(e,t,n){var r,i=!0;Object.defineProperty(e,t,{get:function(){return i&&(r=n(),i=!1),r},set:function(e){r=e,i=!1},configurable:!0,enumerable:!0})},t.traverse=function e(t,n){if(n&&"string"==typeof n)return e(t,n.split("."));var r=t;if(n)for(var i=0;i<n.length;i++){var a=n[i];a in r||(r[a]={}),r=r[a]}return r},t.hasOwnProperty=a,t.isLegacyFactory=function(e){return e&&"function"==typeof e.factory},t.get=o,t.set=s,t.pick=function(e,t,n){for(var r={},i=0;i<t.length;i++){var a=t[i],c=o(e,a);void 0!==c&&s(r,a,n?n(c,a):c)}return r},t.pickShallow=function(e,t){for(var n={},r=0;r<t.length;r++){var i=t[r],a=e[i];void 0!==a&&(n[i]=a)}return n},t.values=function(e){return Object.keys(e).map((function(t){return e[t]}))}})),o=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.configFactory=function(e,t){function s(r){if(r){var s=(0,a.mapObject)(e,a.clone);o(r,"matrix",n),o(r,"number",i),(0,a.deepExtend)(e,r);var c=(0,a.mapObject)(e,a.clone),u=(0,a.mapObject)(r,a.clone);return t("config",c,s,u),c}return(0,a.mapObject)(e,a.clone)}return s.MATRIX_OPTIONS=n,s.NUMBER_OPTIONS=i,Object.keys(r.DEFAULT_CONFIG).forEach((function(t){Object.defineProperty(s,t,{get:function(){return e[t]},enumerable:!0,configurable:!0})})),s},t.NUMBER_OPTIONS=t.MATRIX_OPTIONS=void 0;var n=["Matrix","Array"];t.MATRIX_OPTIONS=n;var i=["number","BigNumber","Fraction"];function o(e,t,n){void 0===e[t]||function(e,t){return-1!==e.indexOf(t)}(n,e[t])||console.warn('Warning: Unknown value "'+e[t]+'" for configuration option "'+t+'". Available options: '+n.map((function(e){return JSON.stringify(e)})).join(", ")+".")}t.NUMBER_OPTIONS=i})),s=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,"__esModule",{value:!0}),t.config=void 0;var i=function(e){if(e)throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");return Object.freeze(r.DEFAULT_CONFIG)};t.config=i,n(i,r.DEFAULT_CONFIG,{MATRIX_OPTIONS:o.MATRIX_OPTIONS,NUMBER_OPTIONS:o.NUMBER_OPTIONS})})),c=t((function(e,t){e.exports=function(){function e(){return!0}function t(){return!1}function n(){}return function r(){var i=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:function(e){return"object"==typeof e&&null!==e&&e.constructor===Object}},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],a={name:"any",test:e},o=[],s=[],c={types:i,conversions:s,ignore:o};function u(e){var t=F(c.types,(function(t){return t.name===e}));if(t)return t;if("any"===e)return a;var n=F(c.types,(function(t){return t.name.toLowerCase()===e.toLowerCase()}));throw new TypeError('Unknown type "'+e+'"'+(n?'. Did you mean "'+n.name+'"?':""))}function l(e){return e===a?999:c.types.indexOf(e)}function d(e){var t=F(c.types,(function(t){return t.test(e)}));if(t)return t.name;throw new TypeError("Value has unknown type. Value: "+e)}function f(e){return e.map((function(e){var t=e.types.map(x);return(e.restParam?"...":"")+t.join("|")})).join(",")}function p(e,t){var n=0===e.indexOf("..."),r=(n?e.length>3?e.slice(3):"any":e).split("|").map(C).filter(T).filter(E),i=function(e,t){var n={};return e.forEach((function(e){-1!==t.indexOf(e.from)||-1===t.indexOf(e.to)||n[e.from]||(n[e.from]=e)})),Object.keys(n).map((function(e){return n[e]}))}(t,r),a=r.map((function(e){var t=u(e);return{name:e,typeIndex:l(t),test:t.test,conversion:null,conversionIndex:-1}})),o=i.map((function(e){var n=u(e.from);return{name:e.from,typeIndex:l(n),test:n.test,conversion:e,conversionIndex:t.indexOf(e)}}));return{types:a.concat(o),restParam:n}}function m(e){var t=B(e);return!!t&&t.restParam}function h(e){return e.types.some((function(e){return null!=e.conversion}))}function y(t){if(t&&0!==t.types.length){if(1===t.types.length)return u(t.types[0].name).test;if(2===t.types.length){var n=u(t.types[0].name).test,r=u(t.types[1].name).test;return function(e){return n(e)||r(e)}}var i=t.types.map((function(e){return u(e.name).test}));return function(e){for(var t=0;t<i.length;t++)if(i[t](e))return!0;return!1}}return e}function v(e){var t,n,r,i;if(m(e)){var a=(t=(i=e,i.slice(0,i.length-1)).map(y)).length,o=y(B(e));return function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return function(e){for(var t=a;t<e.length;t++)if(!o(e[t]))return!1;return!0}(e)&&e.length>=a+1}}return 0===e.length?function(e){return 0===e.length}:1===e.length?(n=y(e[0]),function(e){return n(e[0])&&1===e.length}):2===e.length?(n=y(e[0]),r=y(e[1]),function(e){return n(e[0])&&r(e[1])&&2===e.length}):(t=e.map(y),function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return e.length===t.length})}function g(e,t){return t<e.params.length?e.params[t]:m(e.params)?B(e.params):null}function b(e,t,n){var r=g(e,t);return(r?n?r.types.filter(D):r.types:[]).map(x)}function x(e){return e.name}function D(e){return null===e.conversion||void 0===e.conversion}function _(e,t){var n=function(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=!0;return Object.keys(t)}(U(e,(function(e){return b(e,t,!1)})));return-1!==n.indexOf("any")?["any"]:n}function w(e,t,n){var r,i,a,o=e||"unnamed",s=n;for(a=0;a<t.length;a++){var c=s.filter((function(e){var n=y(g(e,a));return(a<e.params.length||m(e.params))&&n(t[a])}));if(0===c.length){if((i=_(s,a)).length>0){var u=d(t[a]);return(r=new TypeError("Unexpected type of argument in function "+o+" (expected: "+i.join(" or ")+", actual: "+u+", index: "+a+")")).data={category:"wrongType",fn:o,index:a,actual:u,expected:i},r}}else s=c}var l=s.map((function(e){return m(e.params)?1/0:e.params.length}));if(t.length<Math.min.apply(null,l))return i=_(s,a),(r=new TypeError("Too few arguments in function "+o+" (expected: "+i.join(" or ")+", index: "+t.length+")")).data={category:"tooFewArgs",fn:o,index:t.length,expected:i},r;var f=Math.max.apply(null,l);return t.length>f?((r=new TypeError("Too many arguments in function "+o+" (expected: "+f+", actual: "+t.length+")")).data={category:"tooManyArgs",fn:o,index:t.length,expectedLength:f},r):((r=new TypeError('Arguments of type "'+t.join(", ")+'" do not match any of the defined signatures of function '+o+".")).data={category:"mismatch",actual:t.map(d)},r)}function N(e){for(var t=999,n=0;n<e.types.length;n++)D(e.types[n])&&(t=Math.min(t,e.types[n].typeIndex));return t}function M(e){for(var t=999,n=0;n<e.types.length;n++)D(e.types[n])||(t=Math.min(t,e.types[n].conversionIndex));return t}function O(e,t){var n;return 0!=(n=e.restParam-t.restParam)||0!=(n=h(e)-h(t))||0!=(n=N(e)-N(t))?n:M(e)-M(t)}function S(e,t){var n,r,i=Math.min(e.params.length,t.params.length);if(0!=(r=e.params.some(h)-t.params.some(h)))return r;for(n=0;n<i;n++)if(0!=(r=h(e.params[n])-h(t.params[n])))return r;for(n=0;n<i;n++)if(0!==(r=O(e.params[n],t.params[n])))return r;return e.params.length-t.params.length}function P(e){var t,n,r,i,a=[],o=[];switch(e.types.forEach((function(e){e.conversion&&(a.push(u(e.conversion.from).test),o.push(e.conversion.convert))})),o.length){case 0:return function(e){return e};case 1:return t=a[0],r=o[0],function(e){return t(e)?r(e):e};case 2:return t=a[0],n=a[1],r=o[0],i=o[1],function(e){return t(e)?r(e):n(e)?i(e):e};default:return function(e){for(var t=0;t<o.length;t++)if(a[t](e))return o[t](e);return e}}}function j(e,t){return function e(n,r,i){if(r<n.length){var a,o=n[r],s=t?o.types.filter(D):o.types;if(o.restParam){var c=s.filter(D);a=c.length<s.length?[c,s]:[s]}else a=s.map((function(e){return[e]}));return U(a,(function(t){return e(n,r+1,i.concat([t]))}))}return[i.map((function(e,t){return{types:e,restParam:t===n.length-1&&m(n)}}))]}(e,0,[])}function A(e,r){if(0===Object.keys(r).length)throw new SyntaxError("No signatures provided");var i=[];Object.keys(r).map((function(e){return function(e,t,n){var r=[];return""!==e.trim()&&(r=e.split(",").map(C).map((function(e,t,r){var i=p(e,n);if(i.restParam&&t!==r.length-1)throw new SyntaxError('Unexpected rest parameter "'+e+'": only allowed for the last parameter');return i}))),r.some(I)?null:{params:r,fn:t}}(e,r[e],c.conversions)})).filter(k).forEach((function(e){var t=F(i,(function(t){return function(e,t){for(var n=Math.max(e.params.length,t.params.length),r=0;r<n;r++)if(!q(b(e,r,!0),b(t,r,!0)))return!1;var i=e.params.length,a=t.params.length,o=m(e.params),s=m(t.params);return o?s?i===a:a>=i:s?i>=a:i===a}(t,e)}));if(t)throw new TypeError('Conflicting signatures "'+f(t.params)+'" and "'+f(e.params)+'".');i.push(e)}));var a=U(i,(function(e){return(e?j(e.params,!1):[]).map((function(t){return{params:t,fn:e.fn}}))})).filter(k);a.sort(S);var o=a[0]&&a[0].params.length<=2&&!m(a[0].params),s=a[1]&&a[1].params.length<=2&&!m(a[1].params),u=a[2]&&a[2].params.length<=2&&!m(a[2].params),l=a[3]&&a[3].params.length<=2&&!m(a[3].params),d=a[4]&&a[4].params.length<=2&&!m(a[4].params),g=a[5]&&a[5].params.length<=2&&!m(a[5].params),x=o&&s&&u&&l&&d&&g,D=a.map((function(e){return v(e.params)})),_=o?y(a[0].params[0]):t,N=s?y(a[1].params[0]):t,M=u?y(a[2].params[0]):t,O=l?y(a[3].params[0]):t,A=d?y(a[4].params[0]):t,E=g?y(a[5].params[0]):t,T=o?y(a[0].params[1]):t,B=s?y(a[1].params[1]):t,R=u?y(a[2].params[1]):t,L=l?y(a[3].params[1]):t,H=d?y(a[4].params[1]):t,Z=g?y(a[5].params[1]):t,V=a.map((function(e){return function(e,t){var n=t;if(e.some(h)){var r=m(e),i=e.map(P);n=function(){for(var e=[],n=r?arguments.length-1:arguments.length,a=0;a<n;a++)e[a]=i[a](arguments[a]);return r&&(e[n]=arguments[n].map(i[n])),t.apply(this,e)}}var a=n;if(m(e)){var o=e.length-1;a=function(){return n.apply(this,z(arguments,0,o).concat([z(arguments,o)]))}}return a}(e.params,e.fn)})),W=o?V[0]:n,G=s?V[1]:n,$=u?V[2]:n,Q=l?V[3]:n,X=d?V[4]:n,Y=g?V[5]:n,J=o?a[0].params.length:-1,K=s?a[1].params.length:-1,ee=u?a[2].params.length:-1,te=l?a[3].params.length:-1,ne=d?a[4].params.length:-1,re=g?a[5].params.length:-1,ie=x?6:0,ae=a.length,oe=function(){for(var t=ie;t<ae;t++)if(D[t](arguments))return V[t].apply(this,arguments);throw w(e,arguments,a)},se=function e(t,n){return arguments.length===J&&_(t)&&T(n)?W.apply(e,arguments):arguments.length===K&&N(t)&&B(n)?G.apply(e,arguments):arguments.length===ee&&M(t)&&R(n)?$.apply(e,arguments):arguments.length===te&&O(t)&&L(n)?Q.apply(e,arguments):arguments.length===ne&&A(t)&&H(n)?X.apply(e,arguments):arguments.length===re&&E(t)&&Z(n)?Y.apply(e,arguments):oe.apply(e,arguments)};try{Object.defineProperty(se,"name",{value:e})}catch(e){}return se.signatures=function(e){var t={};return e.forEach((function(e){e.params.some(h)||j(e.params,!0).forEach((function(n){t[f(n)]=e.fn}))})),t}(a),se}function E(e){return-1===c.ignore.indexOf(e)}function C(e){return e.trim()}function T(e){return!!e}function k(e){return null!==e}function I(e){return 0===e.types.length}function B(e){return e[e.length-1]}function z(e,t,n){return Array.prototype.slice.call(e,t,n)}function R(e,t){return-1!==e.indexOf(t)}function q(e,t){for(var n=0;n<e.length;n++)if(R(t,e[n]))return!0;return!1}function F(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return e[n]}function U(e,t){return Array.prototype.concat.apply([],e.map(t))}function L(e){for(var t="",n=0;n<e.length;n++){var r=e[n];if(("object"==typeof r.signatures||"string"==typeof r.signature)&&""!==r.name)if(""===t)t=r.name;else if(t!==r.name){var i=new Error("Function names do not match (expected: "+t+", actual: "+r.name+")");throw i.data={actual:r.name,expected:t},i}}return t}function H(e){var t,n={};function r(e,r){if(n.hasOwnProperty(e)&&r!==n[e])throw(t=new Error('Signature "'+e+'" is defined twice')).data={signature:e},t}for(var i=0;i<e.length;i++){var a=e[i];if("object"==typeof a.signatures)for(var o in a.signatures)a.signatures.hasOwnProperty(o)&&(r(o,a.signatures[o]),n[o]=a.signatures[o]);else{if("string"!=typeof a.signature)throw(t=new TypeError("Function is no typed-function (index: "+i+")")).data={index:i},t;r(a.signature,a),n[a.signature]=a}}return n}return(c=A("typed",{"string, Object":A,Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);return A(L(t),e)},"...Function":function(e){return A(L(e),H(e))},"string, ...Function":function(e,t){return A(e,H(t))}})).create=r,c.types=i,c.conversions=s,c.ignore=o,c.convert=function(e,t){var n=d(e);if(t===n)return e;for(var r=0;r<c.conversions.length;r++){var i=c.conversions[r];if(i.from===n&&i.to===t)return i.convert(e)}throw new Error("Cannot convert from "+n+" to "+t)},c.find=function(e,t){if(!e.signatures)throw new TypeError("Function is no typed-function");var n;if("string"==typeof t){n=t.split(",");for(var r=0;r<n.length;r++)n[r]=n[r].trim()}else{if(!Array.isArray(t))throw new TypeError("String array or a comma separated string expected");n=t}var i=n.join(","),a=e.signatures[i];if(a)return a;throw new TypeError("Signature not found (signature: "+(e.name||"unnamed")+"("+n.join(", ")+"))")},c.addType=function(e,t){if(!e||"string"!=typeof e.name||"function"!=typeof e.test)throw new TypeError("Object with properties {name: string, test: function} expected");if(!1!==t)for(var n=0;n<c.types.length;n++)if("Object"===c.types[n].name)return void c.types.splice(n,0,e);c.types.push(e)},c.addConversion=function(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");c.conversions.push(e)},c}()}()})),u=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isInteger=function(e){if("boolean"==typeof e)return!0;return!!isFinite(e)&&e===Math.round(e)},t.format=function(e,t){if("function"==typeof t)return t(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n,r="auto";t&&(t.notation&&(r=t.notation),(0,i.isNumber)(t)?n=t:(0,i.isNumber)(t.precision)&&(n=t.precision));switch(r){case"fixed":return d(e,n);case"exponential":return f(e,n);case"engineering":return l(e,n);case"auto":return p(e,n,t&&t).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+r+'". Choose "auto", "exponential", or "fixed".')}},t.splitNumber=u,t.toEngineering=l,t.toFixed=d,t.toExponential=f,t.toPrecision=p,t.roundDigits=m,t.digits=function(e){return e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length},t.nearlyEqual=function(e,t,n){if(null==n)return e===t;if(e===t)return!0;if(isNaN(e)||isNaN(t))return!1;if(isFinite(e)&&isFinite(t)){var r=Math.abs(e-t);return r<y||r<=Math.max(Math.abs(e),Math.abs(t))*n}return!1},t.tanh=t.sinh=t.cosh=t.atanh=t.asinh=t.acosh=t.DBL_EPSILON=t.expm1=t.cbrt=t.log1p=t.log10=t.log2=t.sign=void 0;var n=Math.sign||function(e){return e>0?1:e<0?-1:0};t.sign=n;var r=Math.log2||function(e){return Math.log(e)/Math.LN2};t.log2=r;var a=Math.log10||function(e){return Math.log(e)/Math.LN10};t.log10=a;var o=Math.log1p||function(e){return Math.log(e+1)};t.log1p=o;var s=Math.cbrt||function(e){if(0===e)return e;var t,n=e<0;return n&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,n?-t:t};t.cbrt=s;var c=Math.expm1||function(e){return e>=2e-4||e<=-2e-4?Math.exp(e)-1:e+e*e/2+e*e*e/6};function u(e){var t=String(e).toLowerCase().match(/^0*?(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+e);var n=t[1],r=t[2],i=parseFloat(t[4]||"0"),a=r.indexOf(".");i+=-1!==a?a-1:r.length-1;var o=r.replace(".","").replace(/^0*/,(function(e){return i-=e.length,""})).replace(/0*$/,"").split("").map((function(e){return parseInt(e)}));return 0===o.length&&(o.push(0),i++),{sign:n,coefficients:o,exponent:i}}function l(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=m(u(e),t),r=n.exponent,a=n.coefficients,o=r%3==0?r:r<0?r-3-r%3:r-r%3;if((0,i.isNumber)(t))for(;t>a.length||r-o+1>a.length;)a.push(0);else for(var s=Math.abs(r-o)-(a.length-1),c=0;c<s;c++)a.push(0);for(var l=Math.abs(r-o),d=1;l>0;)d++,l--;var f=a.slice(d).join(""),p=(0,i.isNumber)(t)&&f.length||f.match(/[1-9]/)?"."+f:"",h=a.slice(0,d).join("")+p+"e"+(r>=0?"+":"")+o.toString();return n.sign+h}function d(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=u(e),r="number"==typeof t?m(n,n.exponent+1+t):n,i=r.coefficients,a=r.exponent+1,o=a+(t||0);return i.length<o&&(i=i.concat(h(o-i.length))),a<0&&(i=h(1-a).concat(i),a=1),a<i.length&&i.splice(a,0,0===a?"0.":"."),r.sign+i.join("")}function f(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=u(e),r=t?m(n,t):n,i=r.coefficients,a=r.exponent;i.length<t&&(i=i.concat(h(t-i.length)));var o=i.shift();return r.sign+o+(i.length>0?"."+i.join(""):"")+"e"+(a>=0?"+":"")+a}function p(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var r=n&&void 0!==n.lowerExp?n.lowerExp:-3,i=n&&void 0!==n.upperExp?n.upperExp:5,a=u(e),o=t?m(a,t):a;if(o.exponent<r||o.exponent>=i)return f(e,t);var s=o.coefficients,c=o.exponent;s.length<t&&(s=s.concat(h(t-s.length))),s=s.concat(h(c-s.length+1+(s.length<t?t-s.length:0)));var l=c>0?c:0;return l<(s=h(-c).concat(s)).length-1&&s.splice(l+1,0,"."),o.sign+s.join("")}function m(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},r=n.coefficients;t<=0;)r.unshift(0),n.exponent++,t++;if(r.length>t&&r.splice(t,r.length-t)[0]>=5){var i=t-1;for(r[i]++;10===r[i];)r.pop(),0===i&&(r.unshift(0),n.exponent++,i++),r[--i]++}return n}function h(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}t.expm1=c;var y=Number.EPSILON||2220446049250313e-31;t.DBL_EPSILON=y;var v=Math.acosh||function(e){return Math.log(Math.sqrt(e*e-1)+e)};t.acosh=v;var g=Math.asinh||function(e){return Math.log(Math.sqrt(e*e+1)+e)};t.asinh=g;var b=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2};t.atanh=b;var x=Math.cosh||function(e){return(Math.exp(e)+Math.exp(-e))/2};t.cosh=x;var D=Math.sinh||function(e){return(Math.exp(e)-Math.exp(-e))/2};t.sinh=D;var _=Math.tanh||function(e){var t=Math.exp(2*e);return(t-1)/(t+1)};t.tanh=_})),l=t((function(e,t){function n(e,t){var n=e.e,r=n%3==0?n:n<0?n-3-n%3:n-n%3,i=e.mul(Math.pow(10,-r)),a=i.toPrecision(t);return-1!==a.indexOf("e")&&(a=i.toString()),a+"e"+(n>=0?"+":"")+r.toString()}function r(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()}function i(e,t){return e.toFixed(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.format=function(e,t){if("function"==typeof t)return t(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var a,o="auto";void 0!==t&&(t.notation&&(o=t.notation),"number"==typeof t?a=t:t.precision&&(a=t.precision));switch(o){case"fixed":return i(e,a);case"exponential":return r(e,a);case"engineering":return n(e,a);case"auto":var s=t&&void 0!==t.lowerExp?t.lowerExp:-3,c=t&&void 0!==t.upperExp?t.upperExp:5;if(e.isZero())return"0";var u=e.toSignificantDigits(a),l=u.e;return(l>=s&&l<c?u.toFixed():r(e,a)).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+o+'". Choose "auto", "exponential", or "fixed".')}},t.toEngineering=n,t.toExponential=r,t.toFixed=i})),d=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){return"number"==typeof e?(0,u.format)(e,t):(0,i.isBigNumber)(e)?(0,l.format)(e,t):function(e){return e&&"object"===n(e)&&"number"==typeof e.s&&"number"==typeof e.n&&"number"==typeof e.d||!1}(e)?t&&"decimal"===t.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?function e(t,n){if(Array.isArray(t)){for(var i="[",a=t.length,o=0;o<a;o++)0!==o&&(i+=", "),i+=e(t[o],n);return i+="]"}return r(t,n)}(e,t):(0,i.isString)(e)?'"'+e+'"':"function"==typeof e?e.syntax?String(e.syntax):"function":e&&"object"===n(e)?"function"==typeof e.format?e.format(t):e&&e.toString(t)!=={}.toString()?e.toString(t):"{"+Object.keys(e).map((function(n){return'"'+n+'": '+r(e[n],t)})).join(", ")+"}":String(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.endsWith=function(e,t){var n=e.length-t.length,r=e.length;return e.substring(n,r)===t},t.format=r,t.stringify=function(e){var t=String(e),n="",r=0;for(;r<t.length;){var i=t.charAt(r);"\\"===i?(n+=i,r++,""!==(i=t.charAt(r))&&-1!=='"\\/bfnrtu'.indexOf(i)||(n+="\\"),n+=i):n+='"'===i?'\\"':i,r++}return'"'+n+'"'},t.escape=function(e){var t=String(e);return t=t.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")},t.compareText=function(e,t){if(!(0,i.isString)(e))throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: "+(0,i.typeOf)(e)+", index: 0)");if(!(0,i.isString)(t))throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: "+(0,i.typeOf)(t)+", index: 1)");return e===t?0:e>t?1:-1}})),f=t((function(e,t){function n(e,t,r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=r,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}Object.defineProperty(t,"__esModule",{value:!0}),t.DimensionError=n,n.prototype=new RangeError,n.prototype.constructor=RangeError,n.prototype.name="DimensionError",n.prototype.isDimensionError=!0})),p=t((function(e,t){function n(e,t,r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=r),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}Object.defineProperty(t,"__esModule",{value:!0}),t.IndexError=n,n.prototype=new RangeError,n.prototype.constructor=RangeError,n.prototype.name="IndexError",n.prototype.isIndexError=!0})),m=t((function(e,t){function n(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function r(e){if(!Array.isArray(e))return e;var t=[];return e.forEach((function e(n){Array.isArray(n)?n.forEach(e):t.push(n)})),t}Object.defineProperty(t,"__esModule",{value:!0}),t.arraySize=n,t.validate=function(e,t){if(0===t.length){if(Array.isArray(e))throw new f.DimensionError(e.length,0)}else!function e(t,n,r){var i,a=t.length;if(a!==n[r])throw new f.DimensionError(a,n[r]);if(r<n.length-1){var o=r+1;for(i=0;i<a;i++){var s=t[i];if(!Array.isArray(s))throw new f.DimensionError(n.length-1,n.length,"<");e(t[i],n,o)}}else for(i=0;i<a;i++)if(Array.isArray(t[i]))throw new f.DimensionError(n.length+1,n.length,">")}(e,t,0)},t.validateIndex=function(e,t){if(!(0,i.isNumber)(e)||!(0,u.isInteger)(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0||"number"==typeof t&&e>=t)throw new p.IndexError(e,t)},t.resize=function(e,t,n){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");t.forEach((function(e){if(!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+(0,d.format)(t)+")")}));var r=void 0!==n?n:0;return function e(t,n,r,i){var a,o,s=t.length,c=n[r],u=Math.min(s,c);if(t.length=c,r<n.length-1){var l=r+1;for(a=0;a<u;a++)o=t[a],Array.isArray(o)||(o=[o],t[a]=o),e(o,n,l,i);for(a=u;a<c;a++)o=[],t[a]=o,e(o,n,l,i)}else{for(a=0;a<u;a++)for(;Array.isArray(t[a]);)t[a]=t[a][0];for(a=u;a<c;a++)t[a]=i}}(e,t,0,r),e},t.reshape=function(e,t){var i,a=r(e);function o(e){return e.reduce((function(e,t){return e*t}))}if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new f.DimensionError(0,o(n(e)),"!=");for(var s=1,c=0;c<t.length;c++)s*=t[c];if(a.length!==s)throw new f.DimensionError(o(t),o(n(e)),"!=");try{i=function(e,t){for(var n,r=e,i=t.length-1;i>0;i--){var a=t[i];n=[];for(var o=r.length/a,s=0;s<o;s++)n.push(r.slice(s*a,(s+1)*a));r=n}return r}(a,t)}catch(r){if(r instanceof f.DimensionError)throw new f.DimensionError(o(t),o(n(e)),"!=");throw r}return i},t.squeeze=function(e,t){var r=t||n(e);for(;Array.isArray(e)&&1===e.length;)e=e[0],r.shift();var i=r.length;for(;1===r[i-1];)i--;i<r.length&&(e=function e(t,n,r){var i,a;if(r<n){var o=r+1;for(i=0,a=t.length;i<a;i++)t[i]=e(t[i],n,o)}else for(;Array.isArray(t);)t=t[0];return t}(e,i,0),r.length=i);return e},t.unsqueeze=function(e,t,r,i){var a=i||n(e);if(r)for(var o=0;o<r;o++)e=[e],a.unshift(1);e=function e(t,n,r){var i,a;if(Array.isArray(t)){var o=r+1;for(i=0,a=t.length;i<a;i++)t[i]=e(t[i],n,o)}else for(var s=r;s<n;s++)t=[t];return t}(e,t,0);for(;a.length<t;)a.push(1);return e},t.flatten=r,t.map=function(e,t){return Array.prototype.map.call(e,t)},t.forEach=function(e,t){Array.prototype.forEach.call(e,t)},t.filter=function(e,t){if(1!==n(e).length)throw new Error("Only one dimensional matrices supported");return Array.prototype.filter.call(e,t)},t.filterRegExp=function(e,t){if(1!==n(e).length)throw new Error("Only one dimensional matrices supported");return Array.prototype.filter.call(e,(function(e){return t.test(e)}))},t.join=function(e,t){return Array.prototype.join.call(e,t)},t.identify=function(e){if(!Array.isArray(e))throw new TypeError("Array input expected");if(0===e.length)return e;var t=[],n=0;t[0]={value:e[0],identifier:0};for(var r=1;r<e.length;r++)e[r]===e[r-1]?n++:n=0,t.push({value:e[r],identifier:n});return t},t.generalize=function(e){if(!Array.isArray(e))throw new TypeError("Array input expected");if(0===e.length)return e;for(var t=[],n=0;n<e.length;n++)t.push(e[n].value);return t},t.getArrayDataType=function e(t,n){for(var r,i=0,a=0;a<t.length;a++){var o=t[a],s=Array.isArray(o);if(0===a&&s&&(i=o.length),s&&o.length!==i)return;var c=s?e(o,n):n(o);if(void 0===r)r=c;else if(r!==c)return"mixed"}return r},t.last=function(e){return e[e.length-1]},t.initial=function(e){return e.slice(0,e.length-1)},t.contains=function(e,t){return-1!==e.indexOf(t)}})),h=t((function(e,t){function n(e){var t={};function n(e,i){if(r(e)){if((0,m.contains)(e.dependencies,i.fn||i.name))return!0;if(e.dependencies.some((function(e){return n(t[e],i)})))return!0}return!1}e.forEach((function(e){t[e.fn]=e}));var i=[];function a(e){for(var t=0;t<i.length&&!n(i[t],e);)t++;i.splice(t,0,e)}return e.filter(r).forEach(a),e.filter((function(e){return!r(e)})).forEach(a),i}function r(e){return"function"==typeof e&&"string"==typeof e.fn&&Array.isArray(e.dependencies)}function i(e,t,n){if(!t.filter((function(e){return!o(e)})).every((function(e){return void 0!==n[e]}))){var r=t.filter((function(e){return void 0===n[e]}));throw new Error('Cannot create function "'.concat(e,'", ')+"some dependencies are missing: ".concat(r.map((function(e){return'"'.concat(e,'"')})).join(", "),"."))}}function o(e){return e&&"?"===e[0]}function s(e){return e&&"?"===e[0]?e.slice(1):e}Object.defineProperty(t,"__esModule",{value:!0}),t.factory=function(e,t,n,r){function o(r){var o=(0,a.pickShallow)(r,t.map(s));return i(e,t,r),n(o)}o.isFactory=!0,o.fn=e,o.dependencies=t.slice().sort(),r&&(o.meta=r);return o},t.sortFactories=n,t.create=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n(e).forEach((function(e){return e(t)})),t},t.isFactory=r,t.assertDependencies=i,t.isOptionalDependency=o,t.stripOptionalNotation=s})),y=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTyped=void 0;var n,r=(n=c)&&n.__esModule?n:{default:n};var a=function(){return a=r.default.create,r.default},o=["?BigNumber","?Complex","?DenseMatrix","?Fraction"],s=(0,h.factory)("typed",o,(function(e){var t=e.BigNumber,n=e.Complex,r=e.DenseMatrix,o=e.Fraction,s=a();return s.types=[{name:"number",test:i.isNumber},{name:"Complex",test:i.isComplex},{name:"BigNumber",test:i.isBigNumber},{name:"Fraction",test:i.isFraction},{name:"Unit",test:i.isUnit},{name:"string",test:i.isString},{name:"Chain",test:i.isChain},{name:"Array",test:i.isArray},{name:"Matrix",test:i.isMatrix},{name:"DenseMatrix",test:i.isDenseMatrix},{name:"SparseMatrix",test:i.isSparseMatrix},{name:"Range",test:i.isRange},{name:"Index",test:i.isIndex},{name:"boolean",test:i.isBoolean},{name:"ResultSet",test:i.isResultSet},{name:"Help",test:i.isHelp},{name:"function",test:i.isFunction},{name:"Date",test:i.isDate},{name:"RegExp",test:i.isRegExp},{name:"null",test:i.isNull},{name:"undefined",test:i.isUndefined},{name:"AccessorNode",test:i.isAccessorNode},{name:"ArrayNode",test:i.isArrayNode},{name:"AssignmentNode",test:i.isAssignmentNode},{name:"BlockNode",test:i.isBlockNode},{name:"ConditionalNode",test:i.isConditionalNode},{name:"ConstantNode",test:i.isConstantNode},{name:"FunctionNode",test:i.isFunctionNode},{name:"FunctionAssignmentNode",test:i.isFunctionAssignmentNode},{name:"IndexNode",test:i.isIndexNode},{name:"Node",test:i.isNode},{name:"ObjectNode",test:i.isObjectNode},{name:"OperatorNode",test:i.isOperatorNode},{name:"ParenthesisNode",test:i.isParenthesisNode},{name:"RangeNode",test:i.isRangeNode},{name:"SymbolNode",test:i.isSymbolNode},{name:"Object",test:i.isObject}],s.conversions=[{from:"number",to:"BigNumber",convert:function(e){if(t||l(e),(0,u.digits)(e)>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+e+"). Use function bignumber(x) to convert to BigNumber.");return new t(e)}},{from:"number",to:"Complex",convert:function(e){return n||d(e),new n(e,0)}},{from:"number",to:"string",convert:function(e){return e+""}},{from:"BigNumber",to:"Complex",convert:function(e){return n||d(e),new n(e.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(e){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(e){return n||d(e),new n(e.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(e){o||f(e);var t=new o(e);if(t.valueOf()!==e)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+e+"). Use function fraction(x) to convert to Fraction.");return t}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"string",to:"BigNumber",convert:function(e){t||l(e);try{return new t(e)}catch(t){throw new Error('Cannot convert "'+e+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(e){o||f(e);try{return new o(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(e){n||d(e);try{return new n(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Complex')}}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(e){return t||l(e),new t(+e)}},{from:"boolean",to:"Fraction",convert:function(e){return o||f(e),new o(+e)}},{from:"boolean",to:"string",convert:function(e){return String(e)}},{from:"Array",to:"Matrix",convert:function(e){return r||function(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}(),new r(e)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}],s}));function l(e){throw new Error("Cannot convert value ".concat(e," into a BigNumber: no class 'BigNumber' provided"))}function d(e){throw new Error("Cannot convert value ".concat(e," into a Complex number: no class 'Complex' provided"))}function f(e){throw new Error("Cannot convert value ".concat(e," into a Fraction, no class 'Fraction' provided."))}t.createTyped=s})),v=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createResultSet=void 0;var n=[],r=(0,h.factory)("ResultSet",n,(function(){function e(t){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");this.entries=t||[]}return e.prototype.type="ResultSet",e.prototype.isResultSet=!0,e.prototype.valueOf=function(){return this.entries},e.prototype.toString=function(){return"["+this.entries.join(", ")+"]"},e.prototype.toJSON=function(){return{mathjs:"ResultSet",entries:this.entries}},e.fromJSON=function(t){return new e(t.entries)},e}),{isClass:!0});t.createResultSet=r})),g=t((function(t){!function(e){var n,r,i,a,o=9e15,s="0123456789abcdef",c="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",u="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",l={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},d=!0,f="[DecimalError] Invalid argument: ",p=Math.floor,m=Math.pow,h=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,y=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,v=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,g=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,b=1e7,x=c.length-1,D=u.length-1,_={name:"[object Decimal]"};function w(e){var t,n,r,i=e.length-1,a="",o=e[0];if(i>0){for(a+=o,t=1;t<i;t++)(n=7-(r=e[t]+"").length)&&(a+=k(n)),a+=r;(n=7-(r=(o=e[t])+"").length)&&(a+=k(n))}else if(0===o)return"0";for(;o%10==0;)o/=10;return a+o}function N(e,t,n){if(e!==~~e||e<t||e>n)throw Error(f+e)}function M(e,t,n,r){var i,a,o,s;for(a=e[0];a>=10;a/=10)--t;return--t<0?(t+=7,i=0):(i=Math.ceil((t+1)/7),t%=7),a=m(10,7-t),s=e[i]%a|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),o=n<4&&99999==s||n>3&&49999==s||5e4==s||0==s):o=(n<4&&s+1==a||n>3&&s+1==a/2)&&(e[i+1]/a/100|0)==m(10,t-2)-1||(s==a/2||0==s)&&0==(e[i+1]/a/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),o=(r||n<4)&&9999==s||!r&&n>3&&4999==s):o=((r||n<4)&&s+1==a||!r&&n>3&&s+1==a/2)&&(e[i+1]/a/1e3|0)==m(10,t-3)-1,o}function O(e,t,n){for(var r,i,a=[0],o=0,c=e.length;o<c;){for(i=a.length;i--;)a[i]*=t;for(a[0]+=s.indexOf(e.charAt(o++)),r=0;r<a.length;r++)a[r]>n-1&&(void 0===a[r+1]&&(a[r+1]=0),a[r+1]+=a[r]/n|0,a[r]%=n)}return a.reverse()}_.absoluteValue=_.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),P(e)},_.ceil=function(){return P(new this.constructor(this),this.e+1,2)},_.comparedTo=_.cmp=function(e){var t,n,r,i,a=this,o=a.d,s=(e=new a.constructor(e)).d,c=a.s,u=e.s;if(!o||!s)return c&&u?c!==u?c:o===s?0:!o^c<0?1:-1:NaN;if(!o[0]||!s[0])return o[0]?c:s[0]?-u:0;if(c!==u)return c;if(a.e!==e.e)return a.e>e.e^c<0?1:-1;for(t=0,n=(r=o.length)<(i=s.length)?r:i;t<n;++t)if(o[t]!==s[t])return o[t]>s[t]^c<0?1:-1;return r===i?0:r>i^c<0?1:-1},_.cosine=_.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r,i=t.d.length;i<32?(n=Math.ceil(i/3),r=(1/Z(4,n)).toString()):(n=16,r="2.3283064365386962890625e-10");e.precision+=n,t=H(e,1,t.times(r),new e(1));for(var a=n;a--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=n,t}(r,V(r,n)),r.precision=e,r.rounding=t,P(2==a||3==a?n.neg():n,e,t,!0)):new r(1):new r(NaN)},_.cubeRoot=_.cbrt=function(){var e,t,n,r,i,a,o,s,c,u,l=this,f=l.constructor;if(!l.isFinite()||l.isZero())return new f(l);for(d=!1,(a=l.s*m(l.s*l,1/3))&&Math.abs(a)!=1/0?r=new f(a.toString()):(n=w(l.d),(a=((e=l.e)-n.length+1)%3)&&(n+=1==a||-2==a?"0":"00"),a=m(n,1/3),e=p((e+1)/3)-(e%3==(e<0?-1:2)),(r=new f(n=a==1/0?"5e"+e:(n=a.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=l.s),o=(e=f.precision)+3;;)if(u=(c=(s=r).times(s).times(s)).plus(l),r=S(u.plus(l).times(s),u.plus(c),o+2,1),w(s.d).slice(0,o)===(n=w(r.d)).slice(0,o)){if("9999"!=(n=n.slice(o-3,o+1))&&(i||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(P(r,e+1,1),t=!r.times(r).times(r).eq(l));break}if(!i&&(P(s,e+1,0),s.times(s).times(s).eq(l))){r=s;break}o+=4,i=1}return d=!0,P(r,e,f.rounding,t)},_.decimalPlaces=_.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=7*((e=t.length-1)-p(this.e/7)),e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},_.dividedBy=_.div=function(e){return S(this,new this.constructor(e))},_.dividedToIntegerBy=_.divToInt=function(e){var t=this.constructor;return P(S(this,new t(e),0,1,1),t.precision,t.rounding)},_.equals=_.eq=function(e){return 0===this.cmp(e)},_.floor=function(){return P(new this.constructor(this),this.e+1,3)},_.greaterThan=_.gt=function(e){return this.cmp(e)>0},_.greaterThanOrEqualTo=_.gte=function(e){var t=this.cmp(e);return 1==t||0===t},_.hyperbolicCosine=_.cosh=function(){var e,t,n,r,i,a=this,o=a.constructor,s=new o(1);if(!a.isFinite())return new o(a.s?1/0:NaN);if(a.isZero())return s;n=o.precision,r=o.rounding,o.precision=n+Math.max(a.e,a.sd())+4,o.rounding=1,(i=a.d.length)<32?t=(1/Z(4,e=Math.ceil(i/3))).toString():(e=16,t="2.3283064365386962890625e-10"),a=H(o,1,a.times(t),new o(1),!0);for(var c,u=e,l=new o(8);u--;)c=a.times(a),a=s.minus(c.times(l.minus(c.times(l))));return P(a,o.precision=n,o.rounding=r,!0)},_.hyperbolicSine=_.sinh=function(){var e,t,n,r,i=this,a=i.constructor;if(!i.isFinite()||i.isZero())return new a(i);if(t=a.precision,n=a.rounding,a.precision=t+Math.max(i.e,i.sd())+4,a.rounding=1,(r=i.d.length)<3)i=H(a,2,i,i,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,i=H(a,2,i=i.times(1/Z(5,e)),i,!0);for(var o,s=new a(5),c=new a(16),u=new a(20);e--;)o=i.times(i),i=i.times(s.plus(o.times(c.times(o).plus(u))))}return a.precision=t,a.rounding=n,P(i,t,n,!0)},_.hyperbolicTangent=_.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,S(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},_.inverseCosine=_.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),i=n.precision,a=n.rounding;return-1!==r?0===r?t.isNeg()?C(n,i,a):new n(0):new n(NaN):t.isZero()?C(n,i+4,a).times(.5):(n.precision=i+6,n.rounding=1,t=t.asin(),e=C(n,i+4,a).times(.5),n.precision=i,n.rounding=a,e.minus(t))},_.inverseHyperbolicCosine=_.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,d=!1,n=n.times(n).minus(1).sqrt().plus(n),d=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},_.inverseHyperbolicSine=_.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,d=!1,n=n.times(n).plus(1).sqrt().plus(n),d=!0,r.precision=e,r.rounding=t,n.ln())},_.inverseHyperbolicTangent=_.atanh=function(){var e,t,n,r,i=this,a=i.constructor;return i.isFinite()?i.e>=0?new a(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=a.precision,t=a.rounding,r=i.sd(),Math.max(r,e)<2*-i.e-1?P(new a(i),e,t,!0):(a.precision=n=r-i.e,i=S(i.plus(1),new a(1).minus(i),n+e,1),a.precision=e+4,a.rounding=1,i=i.ln(),a.precision=e,a.rounding=t,i.times(.5))):new a(NaN)},_.inverseSine=_.asin=function(){var e,t,n,r,i=this,a=i.constructor;return i.isZero()?new a(i):(t=i.abs().cmp(1),n=a.precision,r=a.rounding,-1!==t?0===t?((e=C(a,n+4,r).times(.5)).s=i.s,e):new a(NaN):(a.precision=n+6,a.rounding=1,i=i.div(new a(1).minus(i.times(i)).sqrt().plus(1)).atan(),a.precision=n,a.rounding=r,i.times(2)))},_.inverseTangent=_.atan=function(){var e,t,n,r,i,a,o,s,c,u=this,l=u.constructor,f=l.precision,p=l.rounding;if(u.isFinite()){if(u.isZero())return new l(u);if(u.abs().eq(1)&&f+4<=D)return(o=C(l,f+4,p).times(.25)).s=u.s,o}else{if(!u.s)return new l(NaN);if(f+4<=D)return(o=C(l,f+4,p).times(.5)).s=u.s,o}for(l.precision=s=f+10,l.rounding=1,e=n=Math.min(28,s/7+2|0);e;--e)u=u.div(u.times(u).plus(1).sqrt().plus(1));for(d=!1,t=Math.ceil(s/7),r=1,c=u.times(u),o=new l(u),i=u;-1!==e;)if(i=i.times(c),a=o.minus(i.div(r+=2)),i=i.times(c),void 0!==(o=a.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===a.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),d=!0,P(o,l.precision=f,l.rounding=p,!0)},_.isFinite=function(){return!!this.d},_.isInteger=_.isInt=function(){return!!this.d&&p(this.e/7)>this.d.length-2},_.isNaN=function(){return!this.s},_.isNegative=_.isNeg=function(){return this.s<0},_.isPositive=_.isPos=function(){return this.s>0},_.isZero=function(){return!!this.d&&0===this.d[0]},_.lessThan=_.lt=function(e){return this.cmp(e)<0},_.lessThanOrEqualTo=_.lte=function(e){return this.cmp(e)<1},_.logarithm=_.log=function(e){var t,n,r,i,a,o,s,c,u=this.constructor,l=u.precision,f=u.rounding;if(null==e)e=new u(10),t=!0;else{if(n=(e=new u(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new u(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new u(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(n.length>1)a=!0;else{for(i=n[0];i%10==0;)i/=10;a=1!==i}if(d=!1,o=q(this,s=l+5),r=t?E(u,s+10):q(e,s),M((c=S(o,r,s,1)).d,i=l,f))do{if(o=q(this,s+=10),r=t?E(u,s+10):q(e,s),c=S(o,r,s,1),!a){+w(c.d).slice(i+1,i+15)+1==1e14&&(c=P(c,l+1,0));break}}while(M(c.d,i+=10,f));return d=!0,P(c,l,f)},_.minus=_.sub=function(e){var t,n,r,i,a,o,s,c,u,l,f,m,h=this,y=h.constructor;if(e=new y(e),!h.d||!e.d)return h.s&&e.s?h.d?e.s=-e.s:e=new y(e.d||h.s!==e.s?h:NaN):e=new y(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.plus(e);if(u=h.d,m=e.d,s=y.precision,c=y.rounding,!u[0]||!m[0]){if(m[0])e.s=-e.s;else{if(!u[0])return new y(3===c?-0:0);e=new y(h)}return d?P(e,s,c):e}if(n=p(e.e/7),l=p(h.e/7),u=u.slice(),a=l-n){for((f=a<0)?(t=u,a=-a,o=m.length):(t=m,n=l,o=u.length),a>(r=Math.max(Math.ceil(s/7),o)+2)&&(a=r,t.length=1),t.reverse(),r=a;r--;)t.push(0);t.reverse()}else{for((f=(r=u.length)<(o=m.length))&&(o=r),r=0;r<o;r++)if(u[r]!=m[r]){f=u[r]<m[r];break}a=0}for(f&&(t=u,u=m,m=t,e.s=-e.s),o=u.length,r=m.length-o;r>0;--r)u[o++]=0;for(r=m.length;r>a;){if(u[--r]<m[r]){for(i=r;i&&0===u[--i];)u[i]=b-1;--u[i],u[r]+=b}u[r]-=m[r]}for(;0===u[--o];)u.pop();for(;0===u[0];u.shift())--n;return u[0]?(e.d=u,e.e=A(u,n),d?P(e,s,c):e):new y(3===c?-0:0)},_.modulo=_.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?P(new r(n),r.precision,r.rounding):(d=!1,9==r.modulo?(t=S(n,e.abs(),0,3,1)).s*=e.s:t=S(n,e,0,r.modulo,1),t=t.times(e),d=!0,n.minus(t))},_.naturalExponential=_.exp=function(){return R(this)},_.naturalLogarithm=_.ln=function(){return q(this)},_.negated=_.neg=function(){var e=new this.constructor(this);return e.s=-e.s,P(e)},_.plus=_.add=function(e){var t,n,r,i,a,o,s,c,u,l,f=this,m=f.constructor;if(e=new m(e),!f.d||!e.d)return f.s&&e.s?f.d||(e=new m(e.d||f.s===e.s?f:NaN)):e=new m(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.minus(e);if(u=f.d,l=e.d,s=m.precision,c=m.rounding,!u[0]||!l[0])return l[0]||(e=new m(f)),d?P(e,s,c):e;if(a=p(f.e/7),r=p(e.e/7),u=u.slice(),i=a-r){for(i<0?(n=u,i=-i,o=l.length):(n=l,r=a,o=u.length),i>(o=(a=Math.ceil(s/7))>o?a+1:o+1)&&(i=o,n.length=1),n.reverse();i--;)n.push(0);n.reverse()}for((o=u.length)-(i=l.length)<0&&(i=o,n=l,l=u,u=n),t=0;i;)t=(u[--i]=u[i]+l[i]+t)/b|0,u[i]%=b;for(t&&(u.unshift(t),++r),o=u.length;0==u[--o];)u.pop();return e.d=u,e.e=A(u,r),d?P(e,s,c):e},_.precision=_.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(f+e);return n.d?(t=T(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},_.round=function(){var e=this,t=e.constructor;return P(new t(e),e.e+1,t.rounding)},_.sine=_.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return H(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=t.times(1/Z(5,n)),t=H(e,2,t,t);for(var i,a=new e(5),o=new e(16),s=new e(20);n--;)i=t.times(t),t=t.times(a.plus(i.times(o.times(i).minus(s))));return t}(r,V(r,n)),r.precision=e,r.rounding=t,P(a>2?n.neg():n,e,t,!0)):new r(NaN)},_.squareRoot=_.sqrt=function(){var e,t,n,r,i,a,o=this,s=o.d,c=o.e,u=o.s,l=o.constructor;if(1!==u||!s||!s[0])return new l(!u||u<0&&(!s||s[0])?NaN:s?o:1/0);for(d=!1,0==(u=Math.sqrt(+o))||u==1/0?(((t=w(s)).length+c)%2==0&&(t+="0"),u=Math.sqrt(t),c=p((c+1)/2)-(c<0||c%2),r=new l(t=u==1/0?"5e"+c:(t=u.toExponential()).slice(0,t.indexOf("e")+1)+c)):r=new l(u.toString()),n=(c=l.precision)+3;;)if(r=(a=r).plus(S(o,a,n+2,1)).times(.5),w(a.d).slice(0,n)===(t=w(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(i||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(P(r,c+1,1),e=!r.times(r).eq(o));break}if(!i&&(P(a,c+1,0),a.times(a).eq(o))){r=a;break}n+=4,i=1}return d=!0,P(r,c,l.rounding,e)},_.tangent=_.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=S(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,P(2==a||4==a?n.neg():n,e,t,!0)):new r(NaN)},_.times=_.mul=function(e){var t,n,r,i,a,o,s,c,u,l=this,f=l.constructor,m=l.d,h=(e=new f(e)).d;if(e.s*=l.s,!(m&&m[0]&&h&&h[0]))return new f(!e.s||m&&!m[0]&&!h||h&&!h[0]&&!m?NaN:m&&h?0*e.s:e.s/0);for(n=p(l.e/7)+p(e.e/7),(c=m.length)<(u=h.length)&&(a=m,m=h,h=a,o=c,c=u,u=o),a=[],r=o=c+u;r--;)a.push(0);for(r=u;--r>=0;){for(t=0,i=c+r;i>r;)s=a[i]+h[r]*m[i-r-1]+t,a[i--]=s%b|0,t=s/b|0;a[i]=(a[i]+t)%b|0}for(;!a[--o];)a.pop();return t?++n:a.shift(),e.d=a,e.e=A(a,n),d?P(e,f.precision,f.rounding):e},_.toBinary=function(e,t){return W(this,2,e,t)},_.toDecimalPlaces=_.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(N(e,0,1e9),void 0===t?t=r.rounding:N(t,0,8),P(n,e+n.e+1,t))},_.toExponential=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=j(r,!0):(N(e,0,1e9),void 0===t?t=i.rounding:N(t,0,8),n=j(r=P(new i(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},_.toFixed=function(e,t){var n,r,i=this,a=i.constructor;return void 0===e?n=j(i):(N(e,0,1e9),void 0===t?t=a.rounding:N(t,0,8),n=j(r=P(new a(i),e+i.e+1,t),!1,e+r.e+1)),i.isNeg()&&!i.isZero()?"-"+n:n},_.toFraction=function(e){var t,n,r,i,a,o,s,c,u,l,p,h,y=this,v=y.d,g=y.constructor;if(!v)return new g(y);if(u=n=new g(1),r=c=new g(0),o=(a=(t=new g(r)).e=T(v)-y.e-1)%7,t.d[0]=m(10,o<0?7+o:o),null==e)e=a>0?t:u;else{if(!(s=new g(e)).isInt()||s.lt(u))throw Error(f+s);e=s.gt(t)?a>0?t:u:s}for(d=!1,s=new g(w(v)),l=g.precision,g.precision=a=7*v.length*2;p=S(s,t,0,1,1),1!=(i=n.plus(p.times(r))).cmp(e);)n=r,r=i,i=u,u=c.plus(p.times(i)),c=i,i=t,t=s.minus(p.times(i)),s=i;return i=S(e.minus(n),r,0,1,1),c=c.plus(i.times(u)),n=n.plus(i.times(r)),c.s=u.s=y.s,h=S(u,r,a,1).minus(y).abs().cmp(S(c,n,a,1).minus(y).abs())<1?[u,r]:[c,n],g.precision=l,d=!0,h},_.toHexadecimal=_.toHex=function(e,t){return W(this,16,e,t)},_.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:N(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(d=!1,n=S(n,e,0,t,1).times(e),d=!0,P(n)):(e.s=n.s,n=e),n},_.toNumber=function(){return+this},_.toOctal=function(e,t){return W(this,8,e,t)},_.toPower=_.pow=function(e){var t,n,r,i,a,o,s=this,c=s.constructor,u=+(e=new c(e));if(!(s.d&&e.d&&s.d[0]&&e.d[0]))return new c(m(+s,u));if((s=new c(s)).eq(1))return s;if(r=c.precision,a=c.rounding,e.eq(1))return P(s,r,a);if((t=p(e.e/7))>=e.d.length-1&&(n=u<0?-u:u)<=9007199254740991)return i=I(c,s,n,r),e.s<0?new c(1).div(i):P(i,r,a);if((o=s.s)<0){if(t<e.d.length-1)return new c(NaN);if(0==(1&e.d[t])&&(o=1),0==s.e&&1==s.d[0]&&1==s.d.length)return s.s=o,s}return(t=0!=(n=m(+s,u))&&isFinite(n)?new c(n+"").e:p(u*(Math.log("0."+w(s.d))/Math.LN10+s.e+1)))>c.maxE+1||t<c.minE-1?new c(t>0?o/0:0):(d=!1,c.rounding=s.s=1,n=Math.min(12,(t+"").length),(i=R(e.times(q(s,r+n)),r)).d&&M((i=P(i,r+5,1)).d,r,a)&&(t=r+10,+w((i=P(R(e.times(q(s,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=P(i,r+1,0))),i.s=o,d=!0,c.rounding=a,P(i,r,a))},_.toPrecision=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=j(r,r.e<=i.toExpNeg||r.e>=i.toExpPos):(N(e,1,1e9),void 0===t?t=i.rounding:N(t,0,8),n=j(r=P(new i(r),e,t),e<=r.e||r.e<=i.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},_.toSignificantDigits=_.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(N(e,1,1e9),void 0===t?t=n.rounding:N(t,0,8)),P(new n(this),e,t)},_.toString=function(){var e=this,t=e.constructor,n=j(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},_.truncated=_.trunc=function(){return P(new this.constructor(this),this.e+1,1)},_.valueOf=_.toJSON=function(){var e=this,t=e.constructor,n=j(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var S=function(){function e(e,t,n){var r,i=0,a=e.length;for(e=e.slice();a--;)r=e[a]*t+i,e[a]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function t(e,t,n,r){var i,a;if(n!=r)a=n>r?1:-1;else for(i=a=0;i<n;i++)if(e[i]!=t[i]){a=e[i]>t[i]?1:-1;break}return a}function n(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(i,a,o,s,c,u){var l,d,f,m,h,y,v,g,x,D,_,w,N,M,O,S,j,A,E,C,T=i.constructor,k=i.s==a.s?1:-1,I=i.d,B=a.d;if(!(I&&I[0]&&B&&B[0]))return new T(i.s&&a.s&&(I?!B||I[0]!=B[0]:B)?I&&0==I[0]||!B?0*k:k/0:NaN);for(u?(h=1,d=i.e-a.e):(u=b,h=7,d=p(i.e/h)-p(a.e/h)),E=B.length,j=I.length,D=(x=new T(k)).d=[],f=0;B[f]==(I[f]||0);f++);if(B[f]>(I[f]||0)&&d--,null==o?(M=o=T.precision,s=T.rounding):M=c?o+(i.e-a.e)+1:o,M<0)D.push(1),y=!0;else{if(M=M/h+2|0,f=0,1==E){for(m=0,B=B[0],M++;(f<j||m)&&M--;f++)O=m*u+(I[f]||0),D[f]=O/B|0,m=O%B|0;y=m||f<j}else{for((m=u/(B[0]+1)|0)>1&&(B=e(B,m,u),I=e(I,m,u),E=B.length,j=I.length),S=E,w=(_=I.slice(0,E)).length;w<E;)_[w++]=0;(C=B.slice()).unshift(0),A=B[0],B[1]>=u/2&&++A;do{m=0,(l=t(B,_,E,w))<0?(N=_[0],E!=w&&(N=N*u+(_[1]||0)),(m=N/A|0)>1?(m>=u&&(m=u-1),1==(l=t(v=e(B,m,u),_,g=v.length,w=_.length))&&(m--,n(v,E<g?C:B,g,u))):(0==m&&(l=m=1),v=B.slice()),(g=v.length)<w&&v.unshift(0),n(_,v,w,u),-1==l&&(l=t(B,_,E,w=_.length))<1&&(m++,n(_,E<w?C:B,w,u)),w=_.length):0===l&&(m++,_=[0]),D[f++]=m,l&&_[0]?_[w++]=I[S]||0:(_=[I[S]],w=1)}while((S++<j||void 0!==_[0])&&M--);y=void 0!==_[0]}D[0]||D.shift()}if(1==h)x.e=d,r=y;else{for(f=1,m=D[0];m>=10;m/=10)f++;x.e=f+d*h-1,P(x,c?o+x.e+1:o,s,y)}return x}}();function P(e,t,n,r){var i,a,o,s,c,u,l,f,p,h=e.constructor;e:if(null!=t){if(!(f=e.d))return e;for(i=1,s=f[0];s>=10;s/=10)i++;if((a=t-i)<0)a+=7,o=t,c=(l=f[p=0])/m(10,i-o-1)%10|0;else if((p=Math.ceil((a+1)/7))>=(s=f.length)){if(!r)break e;for(;s++<=p;)f.push(0);l=c=0,i=1,o=(a%=7)-7+1}else{for(l=s=f[p],i=1;s>=10;s/=10)i++;c=(o=(a%=7)-7+i)<0?0:l/m(10,i-o-1)%10|0}if(r=r||t<0||void 0!==f[p+1]||(o<0?l:l%m(10,i-o-1)),u=n<4?(c||r)&&(0==n||n==(e.s<0?3:2)):c>5||5==c&&(4==n||r||6==n&&(a>0?o>0?l/m(10,i-o):0:f[p-1])%10&1||n==(e.s<0?8:7)),t<1||!f[0])return f.length=0,u?(t-=e.e+1,f[0]=m(10,(7-t%7)%7),e.e=-t||0):f[0]=e.e=0,e;if(0==a?(f.length=p,s=1,p--):(f.length=p+1,s=m(10,7-a),f[p]=o>0?(l/m(10,i-o)%m(10,o)|0)*s:0),u)for(;;){if(0==p){for(a=1,o=f[0];o>=10;o/=10)a++;for(o=f[0]+=s,s=1;o>=10;o/=10)s++;a!=s&&(e.e++,f[0]==b&&(f[0]=1));break}if(f[p]+=s,f[p]!=b)break;f[p--]=0,s=1}for(a=f.length;0===f[--a];)f.pop()}return d&&(e.e>h.maxE?(e.d=null,e.e=NaN):e.e<h.minE&&(e.e=0,e.d=[0])),e}function j(e,t,n){if(!e.isFinite())return F(e);var r,i=e.e,a=w(e.d),o=a.length;return t?(n&&(r=n-o)>0?a=a.charAt(0)+"."+a.slice(1)+k(r):o>1&&(a=a.charAt(0)+"."+a.slice(1)),a=a+(e.e<0?"e":"e+")+e.e):i<0?(a="0."+k(-i-1)+a,n&&(r=n-o)>0&&(a+=k(r))):i>=o?(a+=k(i+1-o),n&&(r=n-i-1)>0&&(a=a+"."+k(r))):((r=i+1)<o&&(a=a.slice(0,r)+"."+a.slice(r)),n&&(r=n-o)>0&&(i+1===o&&(a+="."),a+=k(r))),a}function A(e,t){var n=e[0];for(t*=7;n>=10;n/=10)t++;return t}function E(e,t,n){if(t>x)throw d=!0,n&&(e.precision=n),Error("[DecimalError] Precision limit exceeded");return P(new e(c),t,1,!0)}function C(e,t,n){if(t>D)throw Error("[DecimalError] Precision limit exceeded");return P(new e(u),t,n,!0)}function T(e){var t=e.length-1,n=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function k(e){for(var t="";e--;)t+="0";return t}function I(e,t,n,r){var i,a=new e(1),o=Math.ceil(r/7+4);for(d=!1;;){if(n%2&&G((a=a.times(t)).d,o)&&(i=!0),0===(n=p(n/2))){n=a.d.length-1,i&&0===a.d[n]&&++a.d[n];break}G((t=t.times(t)).d,o)}return d=!0,a}function B(e){return 1&e.d[e.d.length-1]}function z(e,t,n){for(var r,i=new e(t[0]),a=0;++a<t.length;){if(!(r=new e(t[a])).s){i=r;break}i[n](r)&&(i=r)}return i}function R(e,t){var n,r,i,a,o,s,c,u=0,l=0,f=0,p=e.constructor,h=p.rounding,y=p.precision;if(!e.d||!e.d[0]||e.e>17)return new p(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(d=!1,c=y):c=t,s=new p(.03125);e.e>-2;)e=e.times(s),f+=5;for(c+=r=Math.log(m(2,f))/Math.LN10*2+5|0,n=a=o=new p(1),p.precision=c;;){if(a=P(a.times(e),c,1),n=n.times(++l),w((s=o.plus(S(a,n,c,1))).d).slice(0,c)===w(o.d).slice(0,c)){for(i=f;i--;)o=P(o.times(o),c,1);if(null!=t)return p.precision=y,o;if(!(u<3&&M(o.d,c-r,h,u)))return P(o,p.precision=y,h,d=!0);p.precision=c+=10,n=a=s=new p(1),l=0,u++}o=s}}function q(e,t){var n,r,i,a,o,s,c,u,l,f,p,m=1,h=e,y=h.d,v=h.constructor,g=v.rounding,b=v.precision;if(h.s<0||!y||!y[0]||!h.e&&1==y[0]&&1==y.length)return new v(y&&!y[0]?-1/0:1!=h.s?NaN:y?0:h);if(null==t?(d=!1,l=b):l=t,v.precision=l+=10,r=(n=w(y)).charAt(0),!(Math.abs(a=h.e)<15e14))return u=E(v,l+2,b).times(a+""),h=q(new v(r+"."+n.slice(1)),l-10).plus(u),v.precision=b,null==t?P(h,b,g,d=!0):h;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=w((h=h.times(e)).d)).charAt(0),m++;for(a=h.e,r>1?(h=new v("0."+n),a++):h=new v(r+"."+n.slice(1)),f=h,c=o=h=S(h.minus(1),h.plus(1),l,1),p=P(h.times(h),l,1),i=3;;){if(o=P(o.times(p),l,1),w((u=c.plus(S(o,new v(i),l,1))).d).slice(0,l)===w(c.d).slice(0,l)){if(c=c.times(2),0!==a&&(c=c.plus(E(v,l+2,b).times(a+""))),c=S(c,new v(m),l,1),null!=t)return v.precision=b,c;if(!M(c.d,l-10,g,s))return P(c,v.precision=b,g,d=!0);v.precision=l+=10,u=o=h=S(f.minus(1),f.plus(1),l,1),p=P(h.times(h),l,1),i=s=1}c=u,i+=2}}function F(e){return String(e.s*e.s/0)}function U(e,t){var n,r,i;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%7,n<0&&(r+=7),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=7;r<i;)e.d.push(+t.slice(r,r+=7));r=7-(t=t.slice(r)).length}else r-=i;for(;r--;)t+="0";e.d.push(+t),d&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function L(e,t){var r,i,a,o,s,c,u,l,p;if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(y.test(t))r=16,t=t.toLowerCase();else if(h.test(t))r=2;else{if(!v.test(t))throw Error(f+t);r=8}for((o=t.search(/p/i))>0?(u=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),s=(o=t.indexOf("."))>=0,i=e.constructor,s&&(o=(c=(t=t.replace(".","")).length)-o,a=I(i,new i(r),o,2*o)),o=p=(l=O(t,r,b)).length-1;0===l[o];--o)l.pop();return o<0?new i(0*e.s):(e.e=A(l,p),e.d=l,d=!1,s&&(e=S(e,a,4*c)),u&&(e=e.times(Math.abs(u)<54?m(2,u):n.pow(2,u))),d=!0,e)}function H(e,t,n,r,i){var a,o,s,c,u=e.precision,l=Math.ceil(u/7);for(d=!1,c=n.times(n),s=new e(r);;){if(o=S(s.times(c),new e(t++*t++),u,1),s=i?r.plus(o):r.minus(o),r=S(o.times(c),new e(t++*t++),u,1),void 0!==(o=s.plus(r)).d[l]){for(a=l;o.d[a]===s.d[a]&&a--;);if(-1==a)break}a=s,s=r,r=o,o=a}return d=!0,o.d.length=l+1,o}function Z(e,t){for(var n=e;--t;)n*=e;return n}function V(e,t){var n,r=t.s<0,i=C(e,e.precision,1),o=i.times(.5);if((t=t.abs()).lte(o))return a=r?4:1,t;if((n=t.divToInt(i)).isZero())a=r?3:2;else{if((t=t.minus(n.times(i))).lte(o))return a=B(n)?r?2:3:r?4:1,t;a=B(n)?r?1:4:r?3:2}return t.minus(i).abs()}function W(e,t,n,i){var a,o,c,u,l,d,f,p,m,h=e.constructor,y=void 0!==n;if(y?(N(n,1,1e9),void 0===i?i=h.rounding:N(i,0,8)):(n=h.precision,i=h.rounding),e.isFinite()){for(y?(a=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):a=t,(c=(f=j(e)).indexOf("."))>=0&&(f=f.replace(".",""),(m=new h(1)).e=f.length-c,m.d=O(j(m),10,a),m.e=m.d.length),o=l=(p=O(f,10,a)).length;0==p[--l];)p.pop();if(p[0]){if(c<0?o--:((e=new h(e)).d=p,e.e=o,p=(e=S(e,m,n,i,0,a)).d,o=e.e,d=r),c=p[n],u=a/2,d=d||void 0!==p[n+1],d=i<4?(void 0!==c||d)&&(0===i||i===(e.s<0?3:2)):c>u||c===u&&(4===i||d||6===i&&1&p[n-1]||i===(e.s<0?8:7)),p.length=n,d)for(;++p[--n]>a-1;)p[n]=0,n||(++o,p.unshift(1));for(l=p.length;!p[l-1];--l);for(c=0,f="";c<l;c++)f+=s.charAt(p[c]);if(y){if(l>1)if(16==t||8==t){for(c=16==t?4:3,--l;l%c;l++)f+="0";for(l=(p=O(f,a,t)).length;!p[l-1];--l);for(c=1,f="1.";c<l;c++)f+=s.charAt(p[c])}else f=f.charAt(0)+"."+f.slice(1);f=f+(o<0?"p":"p+")+o}else if(o<0){for(;++o;)f="0"+f;f="0."+f}else if(++o>l)for(o-=l;o--;)f+="0";else o<l&&(f=f.slice(0,o)+"."+f.slice(o))}else f=y?"0p+0":"0";f=(16==t?"0x":2==t?"0b":8==t?"0o":"")+f}else f=F(e);return e.s<0?"-"+f:f}function G(e,t){if(e.length>t)return e.length=t,!0}function $(e){return new this(e).abs()}function Q(e){return new this(e).acos()}function X(e){return new this(e).acosh()}function Y(e,t){return new this(e).plus(t)}function J(e){return new this(e).asin()}function K(e){return new this(e).asinh()}function ee(e){return new this(e).atan()}function te(e){return new this(e).atanh()}function ne(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,a=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?C(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=C(this,a,1).times(.5)).s=e.s:t.s<0?(this.precision=a,this.rounding=1,n=this.atan(S(e,t,a,1)),t=C(this,a,1),this.precision=r,this.rounding=i,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(S(e,t,a,1)):(n=C(this,a,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function re(e){return new this(e).cbrt()}function ie(e){return P(e=new this(e),e.e+1,2)}function ae(e){if(!e||"object"!=typeof e)throw Error("[DecimalError] Object expected");var t,n,r,i=!0===e.defaults,a=["precision",1,1e9,"rounding",0,8,"toExpNeg",-o,0,"toExpPos",0,o,"maxE",0,o,"minE",-o,0,"modulo",0,9];for(t=0;t<a.length;t+=3)if(n=a[t],i&&(this[n]=l[n]),void 0!==(r=e[n])){if(!(p(r)===r&&r>=a[t+1]&&r<=a[t+2]))throw Error(f+n+": "+r);this[n]=r}if(n="crypto",i&&(this[n]=l[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(f+n+": "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error("[DecimalError] crypto unavailable");this[n]=!0}else this[n]=!1}return this}function oe(e){return new this(e).cos()}function se(e){return new this(e).cosh()}function ce(e,t){return new this(e).div(t)}function ue(e){return new this(e).exp()}function le(e){return P(e=new this(e),e.e+1,3)}function de(){var e,t,n=new this(0);for(d=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return d=!0,new this(1/0);n=t}return d=!0,n.sqrt()}function fe(e){return e instanceof n||e&&"[object Decimal]"===e.name||!1}function pe(e){return new this(e).ln()}function me(e,t){return new this(e).log(t)}function he(e){return new this(e).log(2)}function ye(e){return new this(e).log(10)}function ve(){return z(this,arguments,"lt")}function ge(){return z(this,arguments,"gt")}function be(e,t){return new this(e).mod(t)}function xe(e,t){return new this(e).mul(t)}function De(e,t){return new this(e).pow(t)}function _e(e){var t,n,r,i,a=0,o=new this(1),s=[];if(void 0===e?e=this.precision:N(e,1,1e9),r=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));a<r;)(i=t[a])>=429e7?t[a]=crypto.getRandomValues(new Uint32Array(1))[0]:s[a++]=i%1e7;else{if(!crypto.randomBytes)throw Error("[DecimalError] crypto unavailable");for(t=crypto.randomBytes(r*=4);a<r;)(i=t[a]+(t[a+1]<<8)+(t[a+2]<<16)+((127&t[a+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,a):(s.push(i%1e7),a+=4);a=r/4}else for(;a<r;)s[a++]=1e7*Math.random()|0;for(e%=7,(r=s[--a])&&e&&(i=m(10,7-e),s[a]=(r/i|0)*i);0===s[a];a--)s.pop();if(a<0)n=0,s=[0];else{for(n=-1;0===s[0];n-=7)s.shift();for(r=1,i=s[0];i>=10;i/=10)r++;r<7&&(n-=7-r)}return o.e=n,o.d=s,o}function we(e){return P(e=new this(e),e.e+1,this.rounding)}function Ne(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Me(e){return new this(e).sin()}function Oe(e){return new this(e).sinh()}function Se(e){return new this(e).sqrt()}function Pe(e,t){return new this(e).sub(t)}function je(e){return new this(e).tan()}function Ae(e){return new this(e).tanh()}function Ee(e){return P(e=new this(e),e.e+1,1)}(n=function e(t){var n,r,i;function a(e){var t,n,r,i=this;if(!(i instanceof a))return new a(e);if(i.constructor=a,e instanceof a)return i.s=e.s,void(d?!e.d||e.e>a.maxE?(i.e=NaN,i.d=null):e.e<a.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if("number"===(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(d?t>a.maxE?(i.e=NaN,i.d=null):t<a.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):U(i,e.toString())}if("string"!==r)throw Error(f+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),g.test(e)?U(i,e):L(i,e)}if(a.prototype=_,a.ROUND_UP=0,a.ROUND_DOWN=1,a.ROUND_CEIL=2,a.ROUND_FLOOR=3,a.ROUND_HALF_UP=4,a.ROUND_HALF_DOWN=5,a.ROUND_HALF_EVEN=6,a.ROUND_HALF_CEIL=7,a.ROUND_HALF_FLOOR=8,a.EUCLID=9,a.config=a.set=ae,a.clone=e,a.isDecimal=fe,a.abs=$,a.acos=Q,a.acosh=X,a.add=Y,a.asin=J,a.asinh=K,a.atan=ee,a.atanh=te,a.atan2=ne,a.cbrt=re,a.ceil=ie,a.cos=oe,a.cosh=se,a.div=ce,a.exp=ue,a.floor=le,a.hypot=de,a.ln=pe,a.log=me,a.log10=ye,a.log2=he,a.max=ve,a.min=ge,a.mod=be,a.mul=xe,a.pow=De,a.random=_e,a.round=we,a.sign=Ne,a.sin=Me,a.sinh=Oe,a.sqrt=Se,a.sub=Pe,a.tan=je,a.tanh=Ae,a.trunc=Ee,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return a.config(t),a}(l)).default=n.Decimal=n,c=new n(c),u=new n(u),t.exports?("function"==typeof Symbol&&"symbol"==typeof Symbol.iterator&&(_[Symbol.for("nodejs.util.inspect.custom")]=_.toString,_[Symbol.toStringTag]="Decimal"),t.exports=n):(e||(e="undefined"!=typeof self&&self&&self.self==self?self:window),i=e.Decimal,n.noConflict=function(){return e.Decimal=i,n},e.Decimal=n)}(e)})),b=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBigNumberClass=void 0;var n,r=(n=g)&&n.__esModule?n:{default:n};var i=["?on","config"],a=(0,h.factory)("BigNumber",i,(function(e){var t=e.on,n=e.config,i=r.default.clone({precision:n.precision,modulo:9});return i.prototype.type="BigNumber",i.prototype.isBigNumber=!0,i.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},i.fromJSON=function(e){return new i(e.value)},t&&t("config",(function(e,t){e.precision!==t.precision&&i.config({precision:e.precision})})),i}),{isClass:!0});t.createBigNumberClass=a})),x=t((function(e,t){
/**
 * @license Complex.js v2.0.11 11/02/2016
 *
 * Copyright (c) 2016, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/
!function(n){var r=function(e){return.5*(Math.exp(e)+Math.exp(-e))},i=function(e){return.5*(Math.exp(e)-Math.exp(-e))},a=function(){throw SyntaxError("Invalid Param")};function o(e,t){var n=Math.abs(e),r=Math.abs(t);return 0===e?Math.log(r):0===t?Math.log(n):n<3e3&&r<3e3?.5*Math.log(e*e+t*t):Math.log(e/Math.cos(Math.atan2(t,e)))}function s(e,t){if(!(this instanceof s))return new s(e,t);var n=function(e,t){var n={re:0,im:0};if(null==e)n.re=n.im=0;else if(void 0!==t)n.re=e,n.im=t;else switch(typeof e){case"object":if("im"in e&&"re"in e)n.re=e.re,n.im=e.im;else if("abs"in e&&"arg"in e){if(!Number.isFinite(e.abs)&&Number.isFinite(e.arg))return s.INFINITY;n.re=e.abs*Math.cos(e.arg),n.im=e.abs*Math.sin(e.arg)}else if("r"in e&&"phi"in e){if(!Number.isFinite(e.r)&&Number.isFinite(e.phi))return s.INFINITY;n.re=e.r*Math.cos(e.phi),n.im=e.r*Math.sin(e.phi)}else 2===e.length?(n.re=e[0],n.im=e[1]):a();break;case"string":n.im=n.re=0;var r=e.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),i=1,o=0;null===r&&a();for(var c=0;c<r.length;c++){var u=r[c];" "===u||"\t"===u||"\n"===u||("+"===u?i++:"-"===u?o++:"i"===u||"I"===u?(i+o===0&&a()," "===r[c+1]||isNaN(r[c+1])?n.im+=parseFloat((o%2?"-":"")+"1"):(n.im+=parseFloat((o%2?"-":"")+r[c+1]),c++),i=o=0):((i+o===0||isNaN(u))&&a(),"i"===r[c+1]||"I"===r[c+1]?(n.im+=parseFloat((o%2?"-":"")+u),c++):n.re+=parseFloat((o%2?"-":"")+u),i=o=0))}i+o>0&&a();break;case"number":n.im=0,n.re=e;break;default:a()}return n}(e,t);this.re=n.re,this.im=n.im}s.prototype={re:0,im:0,sign:function(){var e=this.abs();return new s(this.re/e,this.im/e)},add:function(e,t){var n=new s(e,t);return this.isInfinite()&&n.isInfinite()?s.NAN:this.isInfinite()||n.isInfinite()?s.INFINITY:new s(this.re+n.re,this.im+n.im)},sub:function(e,t){var n=new s(e,t);return this.isInfinite()&&n.isInfinite()?s.NAN:this.isInfinite()||n.isInfinite()?s.INFINITY:new s(this.re-n.re,this.im-n.im)},mul:function(e,t){var n=new s(e,t);return this.isInfinite()&&n.isZero()||this.isZero()&&n.isInfinite()?s.NAN:this.isInfinite()||n.isInfinite()?s.INFINITY:0===n.im&&0===this.im?new s(this.re*n.re,0):new s(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(e,t){var n=new s(e,t);if(this.isZero()&&n.isZero()||this.isInfinite()&&n.isInfinite())return s.NAN;if(this.isInfinite()||n.isZero())return s.INFINITY;if(this.isZero()||n.isInfinite())return s.ZERO;e=this.re,t=this.im;var r,i,a=n.re,o=n.im;return 0===o?new s(e/a,t/a):Math.abs(a)<Math.abs(o)?new s((e*(i=a/o)+t)/(r=a*i+o),(t*i-e)/r):new s((e+t*(i=o/a))/(r=o*i+a),(t-e*i)/r)},pow:function(e,t){var n=new s(e,t);if(e=this.re,t=this.im,n.isZero())return s.ONE;if(0===n.im){if(0===t&&e>=0)return new s(Math.pow(e,n.re),0);if(0===e)switch((n.re%4+4)%4){case 0:return new s(Math.pow(t,n.re),0);case 1:return new s(0,Math.pow(t,n.re));case 2:return new s(-Math.pow(t,n.re),0);case 3:return new s(0,-Math.pow(t,n.re))}}if(0===e&&0===t&&n.re>0&&n.im>=0)return s.ZERO;var r=Math.atan2(t,e),i=o(e,t);return e=Math.exp(n.re*i-n.im*r),t=n.im*i+n.re*r,new s(e*Math.cos(t),e*Math.sin(t))},sqrt:function(){var e,t,n=this.re,r=this.im,i=this.abs();if(n>=0){if(0===r)return new s(Math.sqrt(n),0);e=.5*Math.sqrt(2*(i+n))}else e=Math.abs(r)/Math.sqrt(2*(i-n));return t=n<=0?.5*Math.sqrt(2*(i-n)):Math.abs(r)/Math.sqrt(2*(i+n)),new s(e,r<0?-t:t)},exp:function(){var e=Math.exp(this.re);return this.im,new s(e*Math.cos(this.im),e*Math.sin(this.im))},expm1:function(){var e=this.re,t=this.im;return new s(Math.expm1(e)*Math.cos(t)+function(e){var t=Math.PI/4;if(e<-t||e>t)return Math.cos(e)-1;var n=e*e;return n*(n*(1/24+n*(-1/720+n*(1/40320+n*(-1/3628800+n*(1/4790014600+n*(-1/87178291200+n*(1/20922789888e3)))))))-.5)}(t),Math.exp(e)*Math.sin(t))},log:function(){var e=this.re,t=this.im;return new s(o(e,t),Math.atan2(t,e))},abs:function(){return e=this.re,t=this.im,n=Math.abs(e),r=Math.abs(t),n<3e3&&r<3e3?Math.sqrt(n*n+r*r):(n<r?(n=r,r=e/t):r=t/e,n*Math.sqrt(1+r*r));var e,t,n,r},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var e=this.re,t=this.im;return new s(Math.sin(e)*r(t),Math.cos(e)*i(t))},cos:function(){var e=this.re,t=this.im;return new s(Math.cos(e)*r(t),-Math.sin(e)*i(t))},tan:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)+r(t);return new s(Math.sin(e)/n,i(t)/n)},cot:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)-r(t);return new s(-Math.sin(e)/n,i(t)/n)},sec:function(){var e=this.re,t=this.im,n=.5*r(2*t)+.5*Math.cos(2*e);return new s(Math.cos(e)*r(t)/n,Math.sin(e)*i(t)/n)},csc:function(){var e=this.re,t=this.im,n=.5*r(2*t)-.5*Math.cos(2*e);return new s(Math.sin(e)*r(t)/n,-Math.cos(e)*i(t)/n)},asin:function(){var e=this.re,t=this.im,n=new s(t*t-e*e+1,-2*e*t).sqrt(),r=new s(n.re-t,n.im+e).log();return new s(r.im,-r.re)},acos:function(){var e=this.re,t=this.im,n=new s(t*t-e*e+1,-2*e*t).sqrt(),r=new s(n.re-t,n.im+e).log();return new s(Math.PI/2-r.im,r.re)},atan:function(){var e=this.re,t=this.im;if(0===e){if(1===t)return new s(0,1/0);if(-1===t)return new s(0,-1/0)}var n=e*e+(1-t)*(1-t),r=new s((1-t*t-e*e)/n,-2*e/n).log();return new s(-.5*r.im,.5*r.re)},acot:function(){var e=this.re,t=this.im;if(0===t)return new s(Math.atan2(1,e),0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).atan():new s(0!==e?e/0:0,0!==t?-t/0:0).atan()},asec:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new s(0,1/0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).acos():new s(0!==e?e/0:0,0!==t?-t/0:0).acos()},acsc:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new s(Math.PI/2,1/0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).asin():new s(0!==e?e/0:0,0!==t?-t/0:0).asin()},sinh:function(){var e=this.re,t=this.im;return new s(i(e)*Math.cos(t),r(e)*Math.sin(t))},cosh:function(){var e=this.re,t=this.im;return new s(r(e)*Math.cos(t),i(e)*Math.sin(t))},tanh:function(){var e=2*this.re,t=2*this.im,n=r(e)+Math.cos(t);return new s(i(e)/n,Math.sin(t)/n)},coth:function(){var e=2*this.re,t=2*this.im,n=r(e)-Math.cos(t);return new s(i(e)/n,-Math.sin(t)/n)},csch:function(){var e=this.re,t=this.im,n=Math.cos(2*t)-r(2*e);return new s(-2*i(e)*Math.cos(t)/n,2*r(e)*Math.sin(t)/n)},sech:function(){var e=this.re,t=this.im,n=Math.cos(2*t)+r(2*e);return new s(2*r(e)*Math.cos(t)/n,-2*i(e)*Math.sin(t)/n)},asinh:function(){var e=this.im;this.im=-this.re,this.re=e;var t=this.asin();return this.re=-this.im,this.im=e,e=t.re,t.re=-t.im,t.im=e,t},acosh:function(){var e=this.acos();if(e.im<=0){var t=e.re;e.re=-e.im,e.im=t}else{t=e.im;e.im=-e.re,e.re=t}return e},atanh:function(){var e=this.re,t=this.im,n=e>1&&0===t,r=1-e,i=1+e,a=r*r+t*t,c=0!==a?new s((i*r-t*t)/a,(t*r+i*t)/a):new s(-1!==e?e/0:0,0!==t?t/0:0),u=c.re;return c.re=o(c.re,c.im)/2,c.im=Math.atan2(c.im,u)/2,n&&(c.im=-c.im),c},acoth:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new s(0,Math.PI/2);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).atanh():new s(0!==e?e/0:0,0!==t?-t/0:0).atanh()},acsch:function(){var e=this.re,t=this.im;if(0===t)return new s(0!==e?Math.log(e+Math.sqrt(e*e+1)):1/0,0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).asinh():new s(0!==e?e/0:0,0!==t?-t/0:0).asinh()},asech:function(){var e=this.re,t=this.im;if(this.isZero())return s.INFINITY;var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).acosh():new s(0!==e?e/0:0,0!==t?-t/0:0).acosh()},inverse:function(){if(this.isZero())return s.INFINITY;if(this.isInfinite())return s.ZERO;var e=this.re,t=this.im,n=e*e+t*t;return new s(e/n,-t/n)},conjugate:function(){return new s(this.re,-this.im)},neg:function(){return new s(-this.re,-this.im)},ceil:function(e){return e=Math.pow(10,e||0),new s(Math.ceil(this.re*e)/e,Math.ceil(this.im*e)/e)},floor:function(e){return e=Math.pow(10,e||0),new s(Math.floor(this.re*e)/e,Math.floor(this.im*e)/e)},round:function(e){return e=Math.pow(10,e||0),new s(Math.round(this.re*e)/e,Math.round(this.im*e)/e)},equals:function(e,t){var n=new s(e,t);return Math.abs(n.re-this.re)<=s.EPSILON&&Math.abs(n.im-this.im)<=s.EPSILON},clone:function(){return new s(this.re,this.im)},toString:function(){var e=this.re,t=this.im,n="";return this.isNaN()?"NaN":this.isZero()?"0":this.isInfinite()?"Infinity":(0!==e&&(n+=e),0!==t&&(0!==e?n+=t<0?" - ":" + ":t<0&&(n+="-"),1!==(t=Math.abs(t))&&(n+=t),n+="i"),n||"0")},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return!(0!==this.re&&-0!==this.re||0!==this.im&&-0!==this.im)},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},s.ZERO=new s(0,0),s.ONE=new s(1,0),s.I=new s(0,1),s.PI=new s(Math.PI,0),s.E=new s(Math.E,0),s.INFINITY=new s(1/0,1/0),s.NAN=new s(NaN,NaN),s.EPSILON=1e-16,Object.defineProperty(t,"__esModule",{value:!0}),s.default=s,s.Complex=s,e.exports=s}()})),D=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createComplexClass=void 0;var n,r=(n=x)&&n.__esModule?n:{default:n};function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=[],s=(0,h.factory)("Complex",o,(function(){return r.default.prototype.type="Complex",r.default.prototype.isComplex=!0,r.default.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},r.default.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},r.default.prototype.format=function(e){var t=this.im,n=this.re,r=(0,u.format)(this.re,e),a=(0,u.format)(this.im,e),o=(0,i.isNumber)(e)?e:e?e.precision:null;if(null!==o){var s=Math.pow(10,-o);Math.abs(n/t)<s&&(n=0),Math.abs(t/n)<s&&(t=0)}return 0===t?r:0===n?1===t?"i":-1===t?"-i":a+"i":t<0?-1===t?r+" - i":r+" - "+a.substring(1)+"i":1===t?r+" + i":r+" + "+a+"i"},r.default.fromPolar=function(e){switch(arguments.length){case 1:var t=arguments[0];if("object"===a(t))return(0,r.default)(t);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var n=arguments[0],o=arguments[1];if((0,i.isNumber)(n)){if((0,i.isUnit)(o)&&o.hasBase("ANGLE")&&(o=o.toNumber("rad")),(0,i.isNumber)(o))return new r.default({r:n,phi:o});throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},r.default.prototype.valueOf=r.default.prototype.toString,r.default.fromJSON=function(e){return new r.default(e)},r.default.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},r.default}),{isClass:!0});t.createComplexClass=s})),_=t((function(e,t){
/**
 * @license Fraction.js v4.0.12 09/09/2015
 * http://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2015, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/
!function(n){var r={s:1,n:0,d:1};function i(e){function t(){var t=Error.apply(this,arguments);t.name=this.name=e,this.stack=t.stack,this.message=t.message}function n(){}return n.prototype=Error.prototype,t.prototype=new n,t}var a=d.DivisionByZero=i("DivisionByZero"),o=d.InvalidParameter=i("InvalidParameter");function s(e,t){return isNaN(e=parseInt(e,10))&&c(),e*t}function c(){throw new o}var u=function(e,t){var n,i=0,o=1,u=1,l=0,d=0,f=0,p=1,m=1,h=0,y=1,v=1,g=1,b=1e7;if(null==e);else if(void 0!==t)u=(i=e)*(o=t);else switch(typeof e){case"object":"d"in e&&"n"in e?(i=e.n,o=e.d,"s"in e&&(i*=e.s)):0 in e?(i=e[0],1 in e&&(o=e[1])):c(),u=i*o;break;case"number":if(e<0&&(u=e,e=-e),e%1==0)i=e;else if(e>0){for(e>=1&&(e/=m=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));y<=b&&g<=b;){if(e===(n=(h+v)/(y+g))){y+g<=b?(i=h+v,o=y+g):g>y?(i=v,o=g):(i=h,o=y);break}e>n?(h+=v,y+=g):(v+=h,g+=y),y>b?(i=v,o=g):(i=h,o=y)}i*=m}else(isNaN(e)||isNaN(t))&&(o=i=NaN);break;case"string":if(null===(y=e.match(/\d+|./g))&&c(),"-"===y[h]?(u=-1,h++):"+"===y[h]&&h++,y.length===h+1?d=s(y[h++],u):"."===y[h+1]||"."===y[h]?("."!==y[h]&&(l=s(y[h++],u)),(++h+1===y.length||"("===y[h+1]&&")"===y[h+3]||"'"===y[h+1]&&"'"===y[h+3])&&(d=s(y[h],u),p=Math.pow(10,y[h].length),h++),("("===y[h]&&")"===y[h+2]||"'"===y[h]&&"'"===y[h+2])&&(f=s(y[h+1],u),m=Math.pow(10,y[h+1].length)-1,h+=3)):"/"===y[h+1]||":"===y[h+1]?(d=s(y[h],u),p=s(y[h+2],1),h+=3):"/"===y[h+3]&&" "===y[h+1]&&(l=s(y[h],u),d=s(y[h+2],u),p=s(y[h+4],1),h+=5),y.length<=h){u=i=f+(o=p*m)*l+m*d;break}default:c()}if(0===o)throw new a;r.s=u<0?-1:1,r.n=Math.abs(i),r.d=Math.abs(o)};function l(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}function d(e,t){if(!(this instanceof d))return new d(e,t);u(e,t),e=d.REDUCE?l(r.d,r.n):1,this.s=r.s,this.n=r.n/e,this.d=r.d/e}d.REDUCE=1,d.prototype={s:1,n:0,d:1,abs:function(){return new d(this.n,this.d)},neg:function(){return new d(-this.s*this.n,this.d)},add:function(e,t){return u(e,t),new d(this.s*this.n*r.d+r.s*this.d*r.n,this.d*r.d)},sub:function(e,t){return u(e,t),new d(this.s*this.n*r.d-r.s*this.d*r.n,this.d*r.d)},mul:function(e,t){return u(e,t),new d(this.s*r.s*this.n*r.n,this.d*r.d)},div:function(e,t){return u(e,t),new d(this.s*r.s*this.n*r.d,this.d*r.n)},clone:function(){return new d(this)},mod:function(e,t){return isNaN(this.n)||isNaN(this.d)?new d(NaN):void 0===e?new d(this.s*this.n%this.d,1):(u(e,t),0===r.n&&0===this.d&&d(0,0),new d(this.s*(r.d*this.n)%(r.n*this.d),r.d*this.d))},gcd:function(e,t){return u(e,t),new d(l(r.n,this.n)*l(r.d,this.d),r.d*this.d)},lcm:function(e,t){return u(e,t),0===r.n&&0===this.n?new d:new d(r.n*this.n,l(r.n,this.n)*l(r.d,this.d))},ceil:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new d(NaN):new d(Math.ceil(e*this.s*this.n/this.d),e)},floor:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new d(NaN):new d(Math.floor(e*this.s*this.n/this.d),e)},round:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new d(NaN):new d(Math.round(e*this.s*this.n/this.d),e)},inverse:function(){return new d(this.s*this.d,this.n)},pow:function(e){return e<0?new d(Math.pow(this.s*this.d,-e),Math.pow(this.n,-e)):new d(Math.pow(this.s*this.n,e),Math.pow(this.d,e))},equals:function(e,t){return u(e,t),this.s*this.n*r.d==r.s*r.n*this.d},compare:function(e,t){u(e,t);var n=this.s*this.n*r.d-r.s*r.n*this.d;return(0<n)-(n<0)},simplify:function(e){if(isNaN(this.n)||isNaN(this.d))return this;var t=this.abs().toContinued();function n(e){return 1===e.length?new d(e[0]):n(e.slice(1)).inverse().add(e[0])}e=e||.001;for(var r=0;r<t.length;r++){var i=n(t.slice(0,r+1));if(i.sub(this.abs()).abs().valueOf()<e)return i.mul(this.s)}return this},divisible:function(e,t){return u(e,t),!(!(r.n*this.d)||this.n*r.d%(r.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var t,n="",r=this.n,i=this.d;return this.s<0&&(n+="-"),1===i?n+=r:(e&&(t=Math.floor(r/i))>0&&(n+=t,n+=" ",r%=i),n+=r,n+="/",n+=i),n},toLatex:function(e){var t,n="",r=this.n,i=this.d;return this.s<0&&(n+="-"),1===i?n+=r:(e&&(t=Math.floor(r/i))>0&&(n+=t,r%=i),n+="\\frac{",n+=r,n+="}{",n+=i,n+="}"),n},toContinued:function(){var e,t=this.n,n=this.d,r=[];if(isNaN(this.n)||isNaN(this.d))return r;do{r.push(Math.floor(t/n)),e=t%n,t=n,n=e}while(1!==t);return r},toString:function(e){var t,n=this.n,r=this.d;if(isNaN(n)||isNaN(r))return"NaN";d.REDUCE||(n/=t=l(n,r),r/=t),e=e||15;var i=function(e,t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var n=10%t,r=1;1!==n;r++)if(n=10*n%t,r>2e3)return 0;return r}(0,r),a=function(e,t,n){for(var r=1,i=function(e,t,n){for(var r=1;t>0;e=e*e%n,t>>=1)1&t&&(r=r*e%n);return r}(10,n,t),a=0;a<300;a++){if(r===i)return a;r=10*r%t,i=10*i%t}return 0}(0,r,i),o=-1===this.s?"-":"";if(o+=n/r|0,n%=r,(n*=10)&&(o+="."),i){for(var s=a;s--;)o+=n/r|0,n%=r,n*=10;o+="(";for(s=i;s--;)o+=n/r|0,n%=r,n*=10;o+=")"}else for(s=e;n&&s--;)o+=n/r|0,n%=r,n*=10;return o}},Object.defineProperty(t,"__esModule",{value:!0}),d.default=d,d.Fraction=d,e.exports=d}()})),w=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFractionClass=void 0;var n,r=(n=_)&&n.__esModule?n:{default:n};var i=[],a=(0,h.factory)("Fraction",i,(function(){return r.default.prototype.type="Fraction",r.default.prototype.isFraction=!0,r.default.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},r.default.fromJSON=function(e){return new r.default(e)},r.default}),{isClass:!0});t.createFractionClass=a})),N=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRangeClass=void 0;var n=[],r=(0,h.factory)("Range",n,(function(){function e(t,n,r){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");var a=null!=t,o=null!=n,s=null!=r;if(a)if((0,i.isBigNumber)(t))t=t.toNumber();else if("number"!=typeof t)throw new TypeError("Parameter start must be a number");if(o)if((0,i.isBigNumber)(n))n=n.toNumber();else if("number"!=typeof n)throw new TypeError("Parameter end must be a number");if(s)if((0,i.isBigNumber)(r))r=r.toNumber();else if("number"!=typeof r)throw new TypeError("Parameter step must be a number");this.start=a?parseFloat(t):0,this.end=o?parseFloat(n):0,this.step=s?parseFloat(r):1}return e.prototype.type="Range",e.prototype.isRange=!0,e.parse=function(t){if("string"!=typeof t)return null;var n=t.split(":").map((function(e){return parseFloat(e)}));if(n.some((function(e){return isNaN(e)})))return null;switch(n.length){case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[2],n[1]);default:return null}},e.prototype.clone=function(){return new e(this.start,this.end,this.step)},e.prototype.size=function(){var e=0,t=this.start,n=this.step,r=this.end-t;return(0,u.sign)(n)===(0,u.sign)(r)?e=Math.ceil(r/n):0===r&&(e=0),isNaN(e)&&(e=0),[e]},e.prototype.min=function(){var e=this.size()[0];return e>0?this.step>0?this.start:this.start+(e-1)*this.step:void 0},e.prototype.max=function(){var e=this.size()[0];return e>0?this.step>0?this.start+(e-1)*this.step:this.start:void 0},e.prototype.forEach=function(e){var t=this.start,n=this.step,r=this.end,i=0;if(n>0)for(;t<r;)e(t,[i],this),t+=n,i++;else if(n<0)for(;t>r;)e(t,[i],this),t+=n,i++},e.prototype.map=function(e){var t=[];return this.forEach((function(n,r,i){t[r[0]]=e(n,r,i)})),t},e.prototype.toArray=function(){var e=[];return this.forEach((function(t,n){e[n[0]]=t})),e},e.prototype.valueOf=function(){return this.toArray()},e.prototype.format=function(e){var t=(0,u.format)(this.start,e);return 1!==this.step&&(t+=":"+(0,u.format)(this.step,e)),t+=":"+(0,u.format)(this.end,e)},e.prototype.toString=function(){return this.format()},e.prototype.toJSON=function(){return{mathjs:"Range",start:this.start,end:this.end,step:this.step}},e.fromJSON=function(t){return new e(t.start,t.end,t.step)},e}),{isClass:!0});t.createRangeClass=r})),M=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMatrixClass=void 0;var n=[],r=(0,h.factory)("Matrix",n,(function(){function e(){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator")}return e.prototype.type="Matrix",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},e.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},e.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},e.prototype.subset=function(e,t,n){throw new Error("Cannot invoke subset on a Matrix interface")},e.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},e.prototype.set=function(e,t,n){throw new Error("Cannot invoke set on a Matrix interface")},e.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},e.prototype.reshape=function(e,t){throw new Error("Cannot invoke reshape on a Matrix interface")},e.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},e.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},e.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},e.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},e.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},e.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},e.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},e.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},e}),{isClass:!0});t.createMatrixClass=r})),O=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDenseMatrixClass=void 0;var n=["Matrix"],r=(0,h.factory)("DenseMatrix",n,(function(e){var t=e.Matrix;function n(e,t){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!(0,i.isString)(t))throw new Error("Invalid datatype: "+t);if((0,i.isMatrix)(e))"DenseMatrix"===e.type?(this._data=(0,a.clone)(e._data),this._size=(0,a.clone)(e._size),this._datatype=t||e._datatype):(this._data=e.toArray(),this._size=e.size(),this._datatype=t||e._datatype);else if(e&&(0,i.isArray)(e.data)&&(0,i.isArray)(e.size))this._data=e.data,this._size=e.size,(0,m.validate)(this._data,this._size),this._datatype=t||e.datatype;else if((0,i.isArray)(e))this._data=function e(t){for(var n=0,r=t.length;n<r;n++){var a=t[n];(0,i.isArray)(a)?t[n]=e(a):a&&!0===a.isMatrix&&(t[n]=e(a.valueOf()))}return t}(e),this._size=(0,m.arraySize)(this._data),(0,m.validate)(this._data,this._size),this._datatype=t;else{if(e)throw new TypeError("Unsupported type of data ("+(0,i.typeOf)(e)+")");this._data=[],this._size=[0],this._datatype=t}}function r(e,t){if(!(0,i.isIndex)(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var r=t.size();if(r.length!==e._size.length)throw new f.DimensionError(r.length,e._size.length);for(var a=t.min(),o=t.max(),s=0,c=e._size.length;s<c;s++)(0,m.validateIndex)(a[s],e._size[s]),(0,m.validateIndex)(o[s],e._size[s]);return new n(function e(t,n,r,i){var a=i===r-1,o=n.dimension(i);return a?o.map((function(e){return(0,m.validateIndex)(e,t.length),t[e]})).valueOf():o.map((function(a){(0,m.validateIndex)(a,t.length);var o=t[a];return e(o,n,r,i+1)})).valueOf()}(e._data,t,r.length,0),e._datatype)}function o(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var o,s=t.size(),u=t.isScalar();if((0,i.isMatrix)(n)?(o=n.size(),n=n.valueOf()):o=(0,m.arraySize)(n),u){if(0!==o.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(s.length<e._size.length)throw new f.DimensionError(s.length,e._size.length,"<");if(o.length<s.length){for(var l=0,d=0;1===s[l]&&1===o[l];)l++;for(;1===s[l];)d++,l++;n=(0,m.unsqueeze)(n,s.length,d,o)}if(!(0,a.deepStrictEqual)(s,o))throw new f.DimensionError(s,o,">");c(e,t.max().map((function(e){return e+1})),r);var p=s.length;!function e(t,n,r,i,a){var o=a===i-1,s=n.dimension(a);o?s.forEach((function(e,n){(0,m.validateIndex)(e),t[e]=r[n[0]]})):s.forEach((function(o,s){(0,m.validateIndex)(o),e(t[o],n,r[s[0]],i,a+1)}))}(e._data,t,n,p,0)}return e}function s(e,t,n){if(0===t.length){for(var r=e._data;(0,i.isArray)(r);)r=r[0];return r}return e._size=t.slice(0),e._data=(0,m.resize)(e._data,e._size,n),e}function c(e,t,n){for(var r=e._size.slice(0),i=!1;r.length<t.length;)r.push(0),i=!0;for(var a=0,o=t.length;a<o;a++)t[a]>r[a]&&(r[a]=t[a],i=!0);i&&s(e,r,n)}return n.prototype=new t,n.prototype.createDenseMatrix=function(e,t){return new n(e,t)},n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return(0,m.getArrayDataType)(this._data,i.typeOf)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(e,t){return new n(e,t)},n.prototype.subset=function(e,t,n){switch(arguments.length){case 1:return r(this,e);case 2:case 3:return o(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(e){if(!(0,i.isArray)(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new f.DimensionError(e.length,this._size.length);for(var t=0;t<e.length;t++)(0,m.validateIndex)(e[t],this._size[t]);for(var n=this._data,r=0,a=e.length;r<a;r++){var o=e[r];(0,m.validateIndex)(o,n.length),n=n[o]}return n},n.prototype.set=function(e,t,n){if(!(0,i.isArray)(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new f.DimensionError(e.length,this._size.length,"<");var r,a,o;c(this,e.map((function(e){return e+1})),n);var s=this._data;for(r=0,a=e.length-1;r<a;r++)o=e[r],(0,m.validateIndex)(o,s.length),s=s[o];return o=e[e.length-1],(0,m.validateIndex)(o,s.length),s[o]=t,this},n.prototype.resize=function(e,t,n){if(!(0,i.isCollection)(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((function(e){return Array.isArray(e)&&1===e.length?e[0]:e}));return s(n?this.clone():this,r,t)},n.prototype.reshape=function(e,t){var n=t?this.clone():this;return n._data=(0,m.reshape)(n._data,e),n._size=e.slice(0),n},n.prototype.clone=function(){return new n({data:(0,a.clone)(this._data),size:(0,a.clone)(this._size),datatype:this._datatype})},n.prototype.size=function(){return this._size.slice(0)},n.prototype.map=function(e){var t=this,r=function n(r,a){return(0,i.isArray)(r)?r.map((function(e,t){return n(e,a.concat(t))})):e(r,a,t)}(this._data,[]);return new n(r,void 0!==this._datatype?(0,m.getArrayDataType)(r,i.typeOf):void 0)},n.prototype.forEach=function(e){var t=this;!function n(r,a){(0,i.isArray)(r)?r.forEach((function(e,t){n(e,a.concat(t))})):e(r,a,t)}(this._data,[])},n.prototype.toArray=function(){return(0,a.clone)(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(e){return(0,d.format)(this._data,e)},n.prototype.toString=function(){return(0,d.format)(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(e){if(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=e>0?e:0,r=e<0?-e:0,a=this._size[0],o=this._size[1],s=Math.min(a-r,o-t),c=[],l=0;l<s;l++)c[l]=this._data[l+r][l+t];return new n({data:c,size:[s],datatype:this._datatype})},n.diagonal=function(e,t,r,a){if(!(0,i.isArray)(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<1)throw new Error("Size values must be positive integers");return e})),r){if((0,i.isBigNumber)(r)&&(r=r.toNumber()),!(0,i.isNumber)(r)||!(0,u.isInteger)(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var o,s=r>0?r:0,c=r<0?-r:0,l=e[0],d=e[1],f=Math.min(l-c,d-s);if((0,i.isArray)(t)){if(t.length!==f)throw new Error("Invalid value array length");o=function(e){return t[e]}}else if((0,i.isMatrix)(t)){var p=t.size();if(1!==p.length||p[0]!==f)throw new Error("Invalid matrix length");o=function(e){return t.get([e])}}else o=function(){return t};a||(a=(0,i.isBigNumber)(o(0))?o(0).mul(0):0);var h=[];if(e.length>0){h=(0,m.resize)(h,e,a);for(var y=0;y<f;y++)h[y+c][y+s]=o(y)}return new n({data:h,size:[l,d]})},n.fromJSON=function(e){return new n(e)},n.prototype.swapRows=function(e,t){if(!((0,i.isNumber)(e)&&(0,u.isInteger)(e)&&(0,i.isNumber)(t)&&(0,u.isInteger)(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return(0,m.validateIndex)(e,this._size[0]),(0,m.validateIndex)(t,this._size[0]),n._swapRows(e,t,this._data),this},n._swapRows=function(e,t,n){var r=n[e];n[e]=n[t],n[t]=r},n}),{isClass:!0});t.createDenseMatrixClass=r})),S=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createClone=void 0;var n=["typed"],r=(0,h.factory)("clone",n,(function(e){return(0,e.typed)("clone",{any:a.clone})}));t.createClone=r})),P=t((function(e,t){function n(e,t,r){var i,a,o,s;if(t<=0){if(Array.isArray(e[0])){for(s=function(e){var t,n,r=e.length,i=e[0].length,a=[];for(n=0;n<i;n++){var o=[];for(t=0;t<r;t++)o.push(e[t][n]);a.push(o)}return a}(e),a=[],i=0;i<s.length;i++)a[i]=n(s[i],t-1,r);return a}for(o=e[0],i=1;i<e.length;i++)o=r(o,e[i]);return o}for(a=[],i=0;i<e.length;i++)a[i]=n(e[i],t-1,r);return a}Object.defineProperty(t,"__esModule",{value:!0}),t.containsCollections=function(e){for(var t=0;t<e.length;t++)if((0,i.isCollection)(e[t]))return!0;return!1},t.deepForEach=function e(t,n){(0,i.isMatrix)(t)&&(t=t.valueOf());for(var r=0,a=t.length;r<a;r++){var o=t[r];Array.isArray(o)?e(o,n):n(o)}},t.deepMap=function e(t,n,r){return t&&"function"==typeof t.map?t.map((function(t){return e(t,n)})):n(t)},t.reduce=function(e,t,r){var a=Array.isArray(e)?(0,m.arraySize)(e):e.size();if(t<0||t>=a.length)throw new p.IndexError(t,a.length);return(0,i.isMatrix)(e)?e.create(n(e.valueOf(),t,r)):n(e,t,r)},t.scatter=function(e,t,n,r,i,a,o,s,c,u,l){var d,f,p,m,h=e._values,y=e._index,v=e._ptr;if(r)for(f=v[t],p=v[t+1],d=f;d<p;d++)m=y[d],n[m]!==a?(n[m]=a,o.push(m),u?(r[m]=c?s(h[d],l):s(l,h[d]),i[m]=a):r[m]=h[d]):(r[m]=c?s(h[d],r[m]):s(r[m],h[d]),i[m]=a);else for(f=v[t],p=v[t+1],d=f;d<p;d++)m=y[d],n[m]!==a?(n[m]=a,o.push(m)):i[m]=a}})),j=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsInteger=void 0;var n=["typed"],r=(0,h.factory)("isInteger",n,(function(e){return(0,e.typed)("isInteger",{number:u.isInteger,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsInteger=r})),A=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.absNumber=i,t.addNumber=a,t.subtractNumber=o,t.multiplyNumber=s,t.divideNumber=c,t.unaryMinusNumber=l,t.unaryPlusNumber=d,t.cbrtNumber=f,t.ceilNumber=p,t.cubeNumber=m,t.expNumber=h,t.expm1Number=y,t.fixNumber=v,t.floorNumber=g,t.gcdNumber=b,t.lcmNumber=x,t.logNumber=D,t.log10Number=_,t.log2Number=w,t.log1pNumber=N,t.modNumber=M,t.nthRootNumber=O,t.signNumber=S,t.sqrtNumber=P,t.squareNumber=j,t.xgcdNumber=A,t.powNumber=E,t.roundNumber=C,t.normNumber=T;var n="number",r="number, number";function i(e){return Math.abs(e)}function a(e,t){return e+t}function o(e,t){return e-t}function s(e,t){return e*t}function c(e,t){return e/t}function l(e){return-e}function d(e){return e}function f(e){return(0,u.cbrt)(e)}function p(e){return Math.ceil(e)}function m(e){return e*e*e}function h(e){return Math.exp(e)}function y(e){return(0,u.expm1)(e)}function v(e){return e>0?Math.floor(e):Math.ceil(e)}function g(e){return Math.floor(e)}function b(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Parameters in function gcd must be integer numbers");for(var n;0!==t;)n=e%t,e=t,t=n;return e<0?-e:e}function x(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Parameters in function lcm must be integer numbers");if(0===e||0===t)return 0;for(var n,r=e*t;0!==t;)t=e%(n=t),e=n;return Math.abs(r/e)}function D(e){return Math.log(e)}function _(e){return(0,u.log10)(e)}function w(e){return(0,u.log2)(e)}function N(e){return(0,u.log1p)(e)}function M(e,t){if(t>0)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error("Cannot calculate mod for a negative divisor")}function O(e,t){var n=t<0;if(n&&(t=-t),0===t)throw new Error("Root must be non-zero");if(e<0&&Math.abs(t)%2!=1)throw new Error("Root must be odd when a is negative.");if(0===e)return n?1/0:0;if(!isFinite(e))return n?0:e;var r=Math.pow(Math.abs(e),1/t);return r=e<0?-r:r,n?1/r:r}function S(e){return(0,u.sign)(e)}function P(e){return Math.sqrt(e)}function j(e){return e*e}function A(e,t){var n,r,i,a=0,o=1,s=1,c=0;if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Parameters in function xgcd must be integer numbers");for(;t;)i=e-(r=Math.floor(e/t))*t,n=a,a=o-r*a,o=n,n=s,s=c-r*s,c=n,e=t,t=i;return e<0?[-e,-o,-c]:[e,e?o:0,c]}function E(e,t){return e*e<1&&t===1/0||e*e>1&&t===-1/0?0:Math.pow(e,t)}function C(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return parseFloat((0,u.toFixed)(e,t))}function T(e){return Math.abs(e)}i.signature=n,a.signature=r,o.signature=r,s.signature=r,c.signature=r,l.signature=n,d.signature=n,f.signature=n,p.signature=n,m.signature=n,h.signature=n,y.signature=n,v.signature=n,g.signature=n,b.signature=r,x.signature=r,D.signature=n,_.signature=n,w.signature=n,N.signature=n,M.signature=r,O.signature=r,S.signature=n,P.signature=n,j.signature=n,A.signature=r,E.signature=r,C.signature=r,T.signature=n})),E=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitAndNumber=r,t.bitNotNumber=i,t.bitOrNumber=a,t.bitXorNumber=o,t.leftShiftNumber=s,t.rightArithShiftNumber=c,t.rightLogShiftNumber=l;var n="number, number";function r(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Integers expected in function bitAnd");return e&t}function i(e){if(!(0,u.isInteger)(e))throw new Error("Integer expected in function bitNot");return~e}function a(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Integers expected in function bitOr");return e|t}function o(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Integers expected in function bitXor");return e^t}function s(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Integers expected in function leftShift");return e<<t}function c(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Integers expected in function rightArithShift");return e>>t}function l(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error("Integers expected in function rightLogShift");return e>>>t}r.signature=n,i.signature="number",a.signature=n,o.signature=n,s.signature=n,c.signature=n,l.signature=n})),C=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.product=function e(t,n){if(n<t)return 1;if(n===t)return n;var r=n+t>>1;return e(t,r)*e(r+1,n)}})),T=t((function(e,t){function n(e,t){if(!(0,u.isInteger)(e)||e<0)throw new TypeError("Positive integer value expected in function combinations");if(!(0,u.isInteger)(t)||t<0)throw new TypeError("Positive integer value expected in function combinations");if(t>e)throw new TypeError("k must be less than or equal to n");var n=e-t;return t<n?(0,C.product)(n+1,e)/(0,C.product)(1,t):(0,C.product)(t+1,e)/(0,C.product)(1,n)}Object.defineProperty(t,"__esModule",{value:!0}),t.combinationsNumber=n,n.signature="number, number"})),k=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.phi=t.e=t.tau=t.pi=void 0;var n=Math.PI;t.pi=n;var r=2*Math.PI;t.tau=r;var i=Math.E;t.e=i;t.phi=1.618033988749895})),I=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.notNumber=r,t.orNumber=i,t.xorNumber=a,t.andNumber=o;var n="number, number";function r(e){return!e}function i(e,t){return!(!e&&!t)}function a(e,t){return!!e!=!!t}function o(e,t){return!(!e||!t)}r.signature="number",i.signature=n,a.signature=n,o.signature=n})),B=Object.freeze({__proto__:null}),z=t((function(e,t){function n(e){var t;if((0,u.isInteger)(e))return e<=0?isFinite(e)?1/0:NaN:e>171?1/0:(0,C.product)(1,e-1);if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*n(1-e));if(e>=171.35)return 1/0;if(e>85){var a=e*e,o=a*e,s=o*e,c=s*e;return Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*a)-139/(51840*o)-571/(2488320*s)+163879/(209018880*c)+5246819/(75246796800*c*e))}--e,t=i[0];for(var l=1;l<i.length;++l)t+=i[l]/(e+l);var d=e+r+.5;return Math.sqrt(2*Math.PI)*Math.pow(d,e+.5)*Math.exp(-d)*t}Object.defineProperty(t,"__esModule",{value:!0}),t.gammaNumber=n,t.gammaP=t.gammaG=void 0,n.signature="number";var r=4.7421875;t.gammaG=r;var i=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22];t.gammaP=i})),R=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acosNumber=r,t.acoshNumber=i,t.acotNumber=a,t.acothNumber=o,t.acscNumber=s,t.acschNumber=c,t.asecNumber=l,t.asechNumber=d,t.asinNumber=f,t.asinhNumber=p,t.atanNumber=m,t.atan2Number=h,t.atanhNumber=y,t.cosNumber=v,t.coshNumber=g,t.cotNumber=b,t.cothNumber=x,t.cscNumber=D,t.cschNumber=_,t.secNumber=w,t.sechNumber=N,t.sinNumber=M,t.sinhNumber=O,t.tanNumber=S,t.tanhNumber=P;var n="number";function r(e){return Math.acos(e)}function i(e){return(0,u.acosh)(e)}function a(e){return Math.atan(1/e)}function o(e){return isFinite(e)?(Math.log((e+1)/e)+Math.log(e/(e-1)))/2:0}function s(e){return Math.asin(1/e)}function c(e){var t=1/e;return Math.log(t+Math.sqrt(t*t+1))}function l(e){return Math.acos(1/e)}function d(e){var t=1/e,n=Math.sqrt(t*t-1);return Math.log(n+t)}function f(e){return Math.asin(e)}function p(e){return(0,u.asinh)(e)}function m(e){return Math.atan(e)}function h(e,t){return Math.atan2(e,t)}function y(e){return(0,u.atanh)(e)}function v(e){return Math.cos(e)}function g(e){return(0,u.cosh)(e)}function b(e){return 1/Math.tan(e)}function x(e){var t=Math.exp(2*e);return(t+1)/(t-1)}function D(e){return 1/Math.sin(e)}function _(e){return 0===e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*(0,u.sign)(e)}function w(e){return 1/Math.cos(e)}function N(e){return 2/(Math.exp(e)+Math.exp(-e))}function M(e){return Math.sin(e)}function O(e){return(0,u.sinh)(e)}function S(e){return Math.tan(e)}function P(e){return(0,u.tanh)(e)}r.signature=n,i.signature=n,a.signature=n,o.signature=n,s.signature=n,c.signature=n,l.signature=n,d.signature=n,f.signature=n,p.signature=n,m.signature=n,h.signature="number, number",y.signature=n,v.signature=n,g.signature=n,b.signature=n,x.signature=n,D.signature=n,_.signature=n,w.signature=n,N.signature=n,M.signature=n,O.signature=n,S.signature=n,P.signature=n})),q=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isIntegerNumber=r,t.isNegativeNumber=i,t.isPositiveNumber=a,t.isZeroNumber=o,t.isNaNNumber=s;var n="number";function r(e){return(0,u.isInteger)(e)}function i(e){return e<0}function a(e){return e>0}function o(e){return 0===e}function s(e){return Number.isNaN(e)}r.signature=n,i.signature=n,a.signature=n,o.signature=n,s.signature=n})),F=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(A).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===A[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return A[e]}}))})),Object.keys(E).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===E[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return E[e]}}))})),Object.keys(T).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===T[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return T[e]}}))})),Object.keys(k).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===k[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return k[e]}}))})),Object.keys(I).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===I[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return I[e]}}))})),Object.keys(B).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===B[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return B[e]}}))})),Object.keys(z).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===z[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return z[e]}}))})),Object.keys(R).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===R[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return R[e]}}))})),Object.keys(q).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in t&&t[e]===q[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return q[e]}}))}))})),U=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsNegative=void 0;var n=["typed"],r=(0,h.factory)("isNegative",n,(function(e){return(0,e.typed)("isNegative",{number:F.isNegativeNumber,BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0},Unit:function(e){return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsNegative=r})),L=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsNumeric=void 0;var n=["typed"],r=(0,h.factory)("isNumeric",n,(function(e){return(0,e.typed)("isNumeric",{"number | BigNumber | Fraction | boolean":function(){return!0},"Complex | Unit | string | null | undefined | Node":function(){return!1},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsNumeric=r})),H=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createHasNumericValue=void 0;var n="hasNumericValue",r=["typed","isNumeric"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.isNumeric;return t(n,{string:function(e){return e.trim().length>0&&!isNaN(Number(e))},any:function(e){return r(e)}})}));t.createHasNumericValue=i})),Z=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsPositive=void 0;var n=["typed"],r=(0,h.factory)("isPositive",n,(function(e){return(0,e.typed)("isPositive",{number:F.isPositiveNumber,BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s>0&&e.n>0},Unit:function(e){return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsPositive=r})),V=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsZero=void 0;var n=["typed"],r=(0,h.factory)("isZero",n,(function(e){return(0,e.typed)("isZero",{number:F.isZeroNumber,BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsZero=r})),W=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsNaN=void 0;var n=["typed"],r=(0,h.factory)("isNaN",n,(function(e){return(0,e.typed)("isNaN",{number:F.isNaNNumber,BigNumber:function(e){return e.isNaN()},Fraction:function(e){return!1},Complex:function(e){return e.isNaN()},Unit:function(e){return Number.isNaN(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,Number.isNaN)}})}));t.createIsNaN=r})),G=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTypeOf=void 0;var n=["typed"],r=(0,h.factory)("typeOf",n,(function(e){return(0,e.typed)("typeOf",{any:i.typeOf})}));t.createTypeOf=r})),$=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nearlyEqual=function(e,t,n){if(null==n)return e.eq(t);if(e.eq(t))return!0;if(e.isNaN()||t.isNaN())return!1;if(e.isFinite()&&t.isFinite()){var r=e.minus(t).abs();if(r.isZero())return!0;var i=e.constructor.max(e.abs(),t.abs());return r.lte(i.times(n))}return!1}})),Q=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.complexEquals=function(e,t,n){return(0,u.nearlyEqual)(e.re,t.re,n)&&(0,u.nearlyEqual)(e.im,t.im,n)}})),X=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createEqualScalarNumber=t.createEqualScalar=void 0;var n="equalScalar",r=["typed","config"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config;return t(n,{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)||(0,$.nearlyEqual)(e,t,r.epsilon)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,t){return(0,Q.complexEquals)(e,t,r.epsilon)},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)}})}));t.createEqualScalar=i;var a=(0,h.factory)(n,["typed","config"],(function(e){var t=e.typed,r=e.config;return t(n,{"number, number":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createEqualScalarNumber=a})),Y=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSparseMatrixClass=void 0;var n=["typed","equalScalar","Matrix"],r=(0,h.factory)("SparseMatrix",n,(function(e){var t=e.typed,n=e.equalScalar,r=e.Matrix;function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!(0,i.isString)(t))throw new Error("Invalid datatype: "+t);if((0,i.isMatrix)(e))!function(e,t,n){"SparseMatrix"===t.type?(e._values=t._values?(0,a.clone)(t._values):void 0,e._index=(0,a.clone)(t._index),e._ptr=(0,a.clone)(t._ptr),e._size=(0,a.clone)(t._size),e._datatype=n||t._datatype):s(e,t.valueOf(),n||t._datatype)}(this,e,t);else if(e&&(0,i.isArray)(e.index)&&(0,i.isArray)(e.ptr)&&(0,i.isArray)(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if((0,i.isArray)(e))s(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+(0,i.typeOf)(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}function s(e,r,a){e._values=[],e._index=[],e._ptr=[],e._datatype=a;var o=r.length,s=0,c=n,u=0;if((0,i.isString)(a)&&(c=t.find(n,[a,a])||n,u=t.convert(0,a)),o>0){var l=0;do{e._ptr.push(e._index.length);for(var d=0;d<o;d++){var f=r[d];if((0,i.isArray)(f)){if(0===l&&s<f.length&&(s=f.length),l<f.length){var p=f[l];c(p,u)||(e._values.push(p),e._index.push(d))}}else 0===l&&s<1&&(s=1),c(f,u)||(e._values.push(f),e._index.push(d))}l++}while(l<s)}e._ptr.push(e._index.length),e._size=[o,s]}function c(e,t){if(!(0,i.isIndex)(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n,r,a,s,c=t.size();if(c.length!==e._size.length)throw new f.DimensionError(c.length,e._size.length);var u=t.min(),l=t.max();for(n=0,r=e._size.length;n<r;n++)(0,m.validateIndex)(u[n],e._size[n]),(0,m.validateIndex)(l[n],e._size[n]);var d=e._values,p=e._index,h=e._ptr,y=t.dimension(0),v=t.dimension(1),g=[],b=[];y.forEach((function(e,t){b[e]=t[0],g[e]=!0}));var x=d?[]:void 0,D=[],_=[];return v.forEach((function(e){for(_.push(D.length),a=h[e],s=h[e+1];a<s;a++)n=p[a],!0===g[n]&&(D.push(b[n]),x&&x.push(d[a]))})),_.push(D.length),new o({values:x,index:D,ptr:_,size:c,datatype:e._datatype})}function l(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var o,s=t.size(),c=t.isScalar();if((0,i.isMatrix)(n)?(o=n.size(),n=n.toArray()):o=(0,m.arraySize)(n),c){if(0!==o.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(1!==s.length&&2!==s.length)throw new f.DimensionError(s.length,e._size.length,"<");if(o.length<s.length){for(var u=0,l=0;1===s[u]&&1===o[u];)u++;for(;1===s[u];)l++,u++;n=(0,m.unsqueeze)(n,s.length,l,o)}if(!(0,a.deepStrictEqual)(s,o))throw new f.DimensionError(s,o,">");for(var d=t.min()[0],p=t.min()[1],h=o[0],y=o[1],v=0;v<h;v++)for(var g=0;g<y;g++){var b=n[v][g];e.set([v+d,g+p],b,r)}}return e}function p(e,t,n,r){if(n-t==0)return n;for(var i=t;i<n;i++)if(r[i]===e)return i;return t}function h(e,t,n,r,i,a,o){i.splice(e,0,r),a.splice(e,0,t);for(var s=n+1;s<o.length;s++)o[s]++}function y(e,r,a,o){var s=o||0,c=n,u=0;(0,i.isString)(e._datatype)&&(c=t.find(n,[e._datatype,e._datatype])||n,u=t.convert(0,e._datatype),s=t.convert(s,e._datatype));var l,d,f,p=!c(s,u),m=e._size[0],h=e._size[1];if(a>h){for(d=h;d<a;d++)if(e._ptr[d]=e._values.length,p)for(l=0;l<m;l++)e._values.push(s),e._index.push(l);e._ptr[a]=e._values.length}else a<h&&(e._ptr.splice(a+1,h-a),e._values.splice(e._ptr[a],e._values.length),e._index.splice(e._ptr[a],e._index.length));if(h=a,r>m){if(p){var y=0;for(d=0;d<h;d++){e._ptr[d]=e._ptr[d]+y,f=e._ptr[d+1]+y;var v=0;for(l=m;l<r;l++,v++)e._values.splice(f+v,0,s),e._index.splice(f+v,0,l),y++}e._ptr[h]=e._values.length}}else if(r<m){var g=0;for(d=0;d<h;d++){e._ptr[d]=e._ptr[d]-g;var b=e._ptr[d],x=e._ptr[d+1]-g;for(f=b;f<x;f++)(l=e._index[f])>r-1&&(e._values.splice(f,1),e._index.splice(f,1),g++)}e._ptr[d]=e._values.length}return e._size[0]=r,e._size[1]=a,e}function v(e,t,n,r,i){var o,s,c=r[0],u=r[1],l=[];for(o=0;o<c;o++)for(l[o]=[],s=0;s<u;s++)l[o][s]=0;for(s=0;s<u;s++)for(var d=n[s],f=n[s+1],p=d;p<f;p++)l[o=t[p]][s]=e?i?(0,a.clone)(e[p]):e[p]:1;return l}return o.prototype=new r,o.prototype.createSparseMatrix=function(e,t){return new o(e,t)},o.prototype.type="SparseMatrix",o.prototype.isSparseMatrix=!0,o.prototype.getDataType=function(){return(0,m.getArrayDataType)(this._values,i.typeOf)},o.prototype.storage=function(){return"sparse"},o.prototype.datatype=function(){return this._datatype},o.prototype.create=function(e,t){return new o(e,t)},o.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},o.prototype.subset=function(e,t,n){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return c(this,e);case 2:case 3:return l(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},o.prototype.get=function(e){if(!(0,i.isArray)(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new f.DimensionError(e.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var t=e[0],n=e[1];(0,m.validateIndex)(t,this._size[0]),(0,m.validateIndex)(n,this._size[1]);var r=p(t,this._ptr[n],this._ptr[n+1],this._index);return r<this._ptr[n+1]&&this._index[r]===t?this._values[r]:0},o.prototype.set=function(e,r,a){if(!(0,i.isArray)(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new f.DimensionError(e.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var o=e[0],s=e[1],c=this._size[0],u=this._size[1],l=n,d=0;(0,i.isString)(this._datatype)&&(l=t.find(n,[this._datatype,this._datatype])||n,d=t.convert(0,this._datatype)),(o>c-1||s>u-1)&&(y(this,Math.max(o+1,c),Math.max(s+1,u),a),c=this._size[0],u=this._size[1]),(0,m.validateIndex)(o,c),(0,m.validateIndex)(s,u);var v=p(o,this._ptr[s],this._ptr[s+1],this._index);return v<this._ptr[s+1]&&this._index[v]===o?l(r,d)?function(e,t,n,r,i){n.splice(e,1),r.splice(e,1);for(var a=t+1;a<i.length;a++)i[a]--}(v,s,this._values,this._index,this._ptr):this._values[v]=r:h(v,o,s,r,this._values,this._index,this._ptr),this},o.prototype.resize=function(e,t,n){if(!(0,i.isCollection)(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((function(e){return Array.isArray(e)&&1===e.length?e[0]:e}));if(2!==r.length)throw new Error("Only two dimensions matrix are supported");return r.forEach((function(e){if(!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+(0,d.format)(r)+")")})),y(n?this.clone():this,r[0],r[1],t)},o.prototype.reshape=function(e,t){if(!(0,i.isArray)(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Sparse matrices can only be reshaped in two dimensions");if(e.forEach((function(t){if(!(0,i.isNumber)(t)||!(0,u.isInteger)(t)||t<0)throw new TypeError("Invalid size, must contain positive integers (size: "+(0,d.format)(e)+")")})),this._size[0]*this._size[1]!=e[0]*e[1])throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var n=t?this.clone():this;if(this._size[0]===e[0]&&this._size[1]===e[1])return n;for(var r=[],a=0;a<n._ptr.length;a++)for(var o=0;o<n._ptr[a+1]-n._ptr[a];o++)r.push(a);for(var s=n._values.slice(),c=n._index.slice(),l=0;l<n._index.length;l++){var f=c[l],m=r[l],y=f*n._size[1]+m;r[l]=y%e[1],c[l]=Math.floor(y/e[1])}n._values.length=0,n._index.length=0,n._ptr.length=e[1]+1,n._size=e.slice();for(var v=0;v<n._ptr.length;v++)n._ptr[v]=0;for(var g=0;g<s.length;g++){var b=c[g],x=r[g],D=s[g];h(p(b,n._ptr[x],n._ptr[x+1],n._index),b,x,D,n._values,n._index,n._ptr)}return n},o.prototype.clone=function(){return new o({values:this._values?(0,a.clone)(this._values):void 0,index:(0,a.clone)(this._index),ptr:(0,a.clone)(this._ptr),size:(0,a.clone)(this._size),datatype:this._datatype})},o.prototype.size=function(){return this._size.slice(0)},o.prototype.map=function(e,r){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var a=this;return function(e,r,a,s,c,u,l){var d=[],f=[],p=[],m=n,h=0;(0,i.isString)(e._datatype)&&(m=t.find(n,[e._datatype,e._datatype])||n,h=t.convert(0,e._datatype));for(var y=function(e,t,n){e=u(e,t,n),m(e,h)||(d.push(e),f.push(t))},v=s;v<=c;v++){p.push(d.length);var g=e._ptr[v],b=e._ptr[v+1];if(l)for(var x=g;x<b;x++){var D=e._index[x];D>=r&&D<=a&&y(e._values[x],D-r,v-s)}else{for(var _={},w=g;w<b;w++){var N=e._index[w];_[N]=e._values[w]}for(var M=r;M<=a;M++){var O=M in _?_[M]:0;y(O,M-r,v-s)}}}return p.push(d.length),new o({values:d,index:f,ptr:p,size:[a-r+1,c-s+1]})}(this,0,this._size[0]-1,0,this._size[1]-1,(function(t,n,r){return e(t,[n,r],a)}),r)},o.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var n=this._size[0],r=this._size[1],i=0;i<r;i++){var a=this._ptr[i],o=this._ptr[i+1];if(t)for(var s=a;s<o;s++){var c=this._index[s];e(this._values[s],[c,i],this)}else{for(var u={},l=a;l<o;l++){u[this._index[l]]=this._values[l]}for(var d=0;d<n;d++){e(d in u?u[d]:0,[d,i],this)}}}},o.prototype.toArray=function(){return v(this._values,this._index,this._ptr,this._size,!0)},o.prototype.valueOf=function(){return v(this._values,this._index,this._ptr,this._size,!1)},o.prototype.format=function(e){for(var t=this._size[0],n=this._size[1],r=this.density(),i="Sparse Matrix ["+(0,d.format)(t,e)+" x "+(0,d.format)(n,e)+"] density: "+(0,d.format)(r,e)+"\n",a=0;a<n;a++)for(var o=this._ptr[a],s=this._ptr[a+1],c=o;c<s;c++){var u=this._index[c];i+="\n    ("+(0,d.format)(u,e)+", "+(0,d.format)(a,e)+") ==> "+(this._values?(0,d.format)(this._values[c],e):"X")}return i},o.prototype.toString=function(){return(0,d.format)(this.toArray())},o.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},o.prototype.diagonal=function(e){if(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=e>0?e:0,n=e<0?-e:0,r=this._size[0],a=this._size[1],s=Math.min(r-n,a-t),c=[],l=[],d=[];d[0]=0;for(var f=t;f<a&&c.length<s;f++)for(var p=this._ptr[f],m=this._ptr[f+1],h=p;h<m;h++){var y=this._index[h];if(y===f-t+n){c.push(this._values[h]),l[c.length-1]=y-n;break}}return d.push(c.length),new o({values:c,index:l,ptr:d,size:[s,1]})},o.fromJSON=function(e){return new o(e)},o.diagonal=function(e,r,a,s,c){if(!(0,i.isArray)(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<1)throw new Error("Size values must be positive integers");return e})),a){if((0,i.isBigNumber)(a)&&(a=a.toNumber()),!(0,i.isNumber)(a)||!(0,u.isInteger)(a))throw new TypeError("The parameter k must be an integer number")}else a=0;var l=n,d=0;(0,i.isString)(c)&&(l=t.find(n,[c,c])||n,d=t.convert(0,c));var f,p=a>0?a:0,m=a<0?-a:0,h=e[0],y=e[1],v=Math.min(h-m,y-p);if((0,i.isArray)(r)){if(r.length!==v)throw new Error("Invalid value array length");f=function(e){return r[e]}}else if((0,i.isMatrix)(r)){var g=r.size();if(1!==g.length||g[0]!==v)throw new Error("Invalid matrix length");f=function(e){return r.get([e])}}else f=function(){return r};for(var b=[],x=[],D=[],_=0;_<y;_++){D.push(b.length);var w=_-p;if(w>=0&&w<v){var N=f(w);l(N,d)||(x.push(w+m),b.push(N))}}return D.push(b.length),new o({values:b,index:x,ptr:D,size:[h,y]})},o.prototype.swapRows=function(e,t){if(!((0,i.isNumber)(e)&&(0,u.isInteger)(e)&&(0,i.isNumber)(t)&&(0,u.isInteger)(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return(0,m.validateIndex)(e,this._size[0]),(0,m.validateIndex)(t,this._size[0]),o._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},o._forEachRow=function(e,t,n,r,i){for(var a=r[e],o=r[e+1],s=a;s<o;s++)i(n[s],t[s])},o._swapRows=function(e,t,n,r,i,a){for(var o=0;o<n;o++){var s=a[o],c=a[o+1],u=p(e,s,c,i),l=p(t,s,c,i);if(u<c&&l<c&&i[u]===e&&i[l]===t){if(r){var d=r[u];r[u]=r[l],r[l]=d}}else if(u<c&&i[u]===e&&(l>=c||i[l]!==t)){var f=r?r[u]:void 0;i.splice(l,0,t),r&&r.splice(l,0,f),i.splice(l<=u?u+1:u,1),r&&r.splice(l<=u?u+1:u,1)}else if(l<c&&i[l]===t&&(u>=c||i[u]!==e)){var m=r?r[l]:void 0;i.splice(u,0,e),r&&r.splice(u,0,m),i.splice(u<=l?l+1:l,1),r&&r.splice(u<=l?l+1:l,1)}}},o}),{isClass:!0});t.createSparseMatrixClass=r})),J=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createNumber=void 0;var n=["typed"],r=(0,h.factory)("number",n,(function(e){var t=(0,e.typed)("number",{"":function(){return 0},number:function(e){return e},string:function(e){if("NaN"===e)return NaN;var t=Number(e);if(isNaN(t))throw new SyntaxError('String "'+e+'" is no valid number');if(["0b","0o","0x"].includes(e.substring(0,2))){if(t>Math.pow(2,32)-1)throw new SyntaxError('String "'.concat(e,'" is out of range'));2147483648&t&&(t=-1*~(t-1))}return t},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error("Second argument with valueless unit expected")},null:function(e){return 0},"Unit, string | Unit":function(e,t){return e.toNumber(t)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}});return t.fromJSON=function(e){return parseFloat(e.value)},t}));t.createNumber=r})),K=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createString=void 0;var n=["typed"],r=(0,h.factory)("string",n,(function(e){return(0,e.typed)("string",{"":function(){return""},number:u.format,null:function(e){return"null"},boolean:function(e){return e+""},string:function(e){return e},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)},any:function(e){return String(e)}})}));t.createString=r})),ee=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBoolean=void 0;var n=["typed"],r=(0,h.factory)("boolean",n,(function(e){return(0,e.typed)("boolean",{"":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},null:function(e){return!1},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;var n=Number(e);if(""!==e&&!isNaN(n))return!!n;throw new Error('Cannot convert "'+e+'" to a boolean')},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createBoolean=r})),te=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBignumber=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("bignumber",n,(function(e){var t=e.typed,n=e.BigNumber;return t("bignumber",{"":function(){return new n(0)},number:function(e){return new n(e+"")},string:function(e){return new n(e)},BigNumber:function(e){return e},Fraction:function(e){return new n(e.n).div(e.d).times(e.s)},null:function(e){return new n(0)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createBignumber=r})),ne=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createComplex=void 0;var n=["typed","Complex"],r=(0,h.factory)("complex",n,(function(e){var t=e.typed,n=e.Complex;return t("complex",{"":function(){return n.ZERO},number:function(e){return new n(e,0)},"number, number":function(e,t){return new n(e,t)},"BigNumber, BigNumber":function(e,t){return new n(e.toNumber(),t.toNumber())},Fraction:function(e){return new n(e.valueOf(),0)},Complex:function(e){return e.clone()},string:function(e){return n(e)},null:function(e){return n(0)},Object:function(e){if("re"in e&&"im"in e)return new n(e.re,e.im);if("r"in e&&"phi"in e||"abs"in e&&"arg"in e)return new n(e);throw new Error("Expected object with properties (re and im) or (r and phi) or (abs and arg)")},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createComplex=r})),re=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFraction=void 0;var n=["typed","Fraction"],r=(0,h.factory)("fraction",n,(function(e){var t=e.typed,n=e.Fraction;return t("fraction",{number:function(e){if(!isFinite(e)||isNaN(e))throw new Error(e+" cannot be represented as a fraction");return new n(e)},string:function(e){return new n(e)},"number, number":function(e,t){return new n(e,t)},null:function(e){return new n(0)},BigNumber:function(e){return new n(e.toString())},Fraction:function(e){return e},Object:function(e){return new n(e)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createFraction=r})),ie=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMatrix=void 0;var n=["typed","Matrix","DenseMatrix","SparseMatrix"],r=(0,h.factory)("matrix",n,(function(e){var t=e.typed,n=(e.Matrix,e.DenseMatrix),r=e.SparseMatrix;return t("matrix",{"":function(){return i([])},string:function(e){return i([],e)},"string, string":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},"Array | Matrix, string":i,"Array | Matrix, string, string":i});function i(e,t,i){if("dense"===t||"default"===t||void 0===t)return new n(e,i);if("sparse"===t)return new r(e,i);throw new TypeError("Unknown matrix type "+JSON.stringify(t)+".")}}));t.createMatrix=r})),ae=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSplitUnit=void 0;var n=["typed"],r=(0,h.factory)("splitUnit",n,(function(e){return(0,e.typed)("splitUnit",{"Unit, Array":function(e,t){return e.splitUnit(t)}})}));t.createSplitUnit=r})),oe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUnaryMinus=void 0;var n=["typed"],r=(0,h.factory)("unaryMinus",n,(function(e){return(0,e.typed)("unaryMinus",{number:F.unaryMinusNumber,Complex:function(e){return e.neg()},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=this(e.value),t},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createUnaryMinus=r})),se=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUnaryPlus=void 0;var n=["typed","config","BigNumber"],r=(0,h.factory)("unaryPlus",n,(function(e){var t=e.typed,n=e.config,r=e.BigNumber;return t("unaryPlus",{number:F.unaryPlusNumber,Complex:function(e){return e},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},"boolean | string":function(e){return"BigNumber"===n.number?new r(+e):+e}})}));t.createUnaryPlus=r})),ce=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAbs=void 0;var n=["typed"],r=(0,h.factory)("abs",n,(function(e){return(0,e.typed)("abs",{number:F.absNumber,Complex:function(e){return e.abs()},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.abs()}})}));t.createAbs=r})),ue=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createApply=void 0;var n=["typed","isInteger"],r=(0,h.factory)("apply",n,(function(e){var t=e.typed,n=e.isInteger;return t("apply",{"Array | Matrix, number | BigNumber, function":function(e,t,r){if(!n(t))throw new TypeError("Integer number expected for dimension");var o=Array.isArray(e)?(0,m.arraySize)(e):e.size();if(t<0||t>=o.length)throw new p.IndexError(t,o.length);return(0,i.isMatrix)(e)?e.create(a(e.valueOf(),t,r)):a(e,t,r)}})}));function a(e,t,n){var r,i,o;if(t<=0){if(Array.isArray(e[0])){for(o=function(e){var t,n,r=e.length,i=e[0].length,a=[];for(n=0;n<i;n++){var o=[];for(t=0;t<r;t++)o.push(e[t][n]);a.push(o)}return a}(e),i=[],r=0;r<o.length;r++)i[r]=a(o[r],t-1,n);return i}return n(e)}for(i=[],r=0;r<e.length;r++)i[r]=a(e[r],t-1,n);return i}t.createApply=r})),le=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAddScalar=void 0;var n=["typed"],r=(0,h.factory)("addScalar",n,(function(e){return(0,e.typed)("addScalar",{"number, number":F.addNumber,"Complex, Complex":function(e,t){return e.add(t)},"BigNumber, BigNumber":function(e,t){return e.plus(t)},"Fraction, Fraction":function(e,t){return e.add(t)},"Unit, Unit":function(e,t){if(null===e.value||void 0===e.value)throw new Error("Parameter x contains a unit with undefined value");if(null===t.value||void 0===t.value)throw new Error("Parameter y contains a unit with undefined value");if(!e.equalBase(t))throw new Error("Units do not match");var n=e.clone();return n.value=this(n.value,t.value),n.fixPrefix=!1,n}})}));t.createAddScalar=r})),de=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCbrt=void 0;var n=["config","typed","isNegative","unaryMinus","matrix","Complex","BigNumber","Fraction"],r=(0,h.factory)("cbrt",n,(function(e){var t=e.config,n=e.typed,r=e.isNegative,a=e.unaryMinus,o=e.matrix,s=e.Complex,c=e.BigNumber,u=e.Fraction;return n("cbrt",{number:F.cbrtNumber,Complex:l,"Complex, boolean":l,BigNumber:function(e){return e.cbrt()},Unit:function(e){if(e.value&&(0,i.isComplex)(e.value)){var t=e.clone();return t.value=1,(t=t.pow(1/3)).value=l(e.value),t}var n,o=r(e.value);o&&(e.value=a(e.value)),n=(0,i.isBigNumber)(e.value)?new c(1).div(3):(0,i.isFraction)(e.value)?new u(1,3):1/3;var s=e.pow(n);return o&&(s.value=a(s.value)),s},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}});function l(e,n){var r=e.arg()/3,i=e.abs(),a=new s((0,F.cbrtNumber)(i),0).mul(new s(0,r).exp());if(n){var c=[a,new s((0,F.cbrtNumber)(i),0).mul(new s(0,r+2*Math.PI/3).exp()),new s((0,F.cbrtNumber)(i),0).mul(new s(0,r-2*Math.PI/3).exp())];return"Array"===t.matrix?c:o(c)}return a}}));t.createCbrt=r})),fe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm11=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm11",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i,a){var o=e._values,s=e._index,c=e._ptr,u=e._size,l=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var d,f=u[0],p=u[1],m=n,h=0,y=i;"string"==typeof l&&(d=l,m=t.find(n,[d,d]),h=t.convert(0,d),r=t.convert(r,d),y=t.find(i,[d,d]));for(var v=[],g=[],b=[],x=0;x<p;x++){b[x]=g.length;for(var D=c[x],_=c[x+1],w=D;w<_;w++){var N=s[w],M=a?y(r,o[w]):y(o[w],r);m(M,h)||(g.push(N),v.push(M))}}return b[p]=g.length,e.createSparseMatrix({values:v,index:g,ptr:b,size:[f,p],datatype:d})}}));t.createAlgorithm11=r})),pe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm14=void 0;var n=["typed"],r=(0,h.factory)("algorithm14",n,(function(e){var t=e.typed;return function(e,n,r,i){var o,s=e._data,c=e._size,u=e._datatype,l=r;"string"==typeof u&&(o=u,n=t.convert(n,o),l=t.find(r,[o,o]));var d=c.length>0?function e(t,n,r,i,a,o,s){var c=[];if(n===r.length-1)for(var u=0;u<i;u++)c[u]=s?t(o,a[u]):t(a[u],o);else for(var l=0;l<i;l++)c[l]=e(t,n+1,r,r[n+1],a[l],o,s);return c}(l,0,c,c[0],s,n,i):[];return e.createDenseMatrix({data:d,size:(0,a.clone)(c),datatype:o})}}));t.createAlgorithm14=r})),me=t((function(e,t){function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,"__esModule",{value:!0}),t.createCeil=void 0;var i=["typed","config","round","matrix","equalScalar"],a=(0,h.factory)("ceil",i,(function(e){var t=e.typed,r=e.config,i=e.round,a=e.matrix,o=e.equalScalar,s=(0,fe.createAlgorithm11)({typed:t,equalScalar:o}),c=(0,pe.createAlgorithm14)({typed:t});return t("ceil",{number:function(e){return(0,u.nearlyEqual)(e,i(e),r.epsilon)?i(e):(0,F.ceilNumber)(e)},"number, number":function(e,t){if((0,u.nearlyEqual)(e,i(e,t),r.epsilon))return i(e,t);var a=n("".concat(e,"e").split("e"),2),o=a[0],s=a[1],c=Math.ceil(Number("".concat(o,"e").concat(Number(s)+t))),l=n("".concat(c,"e").split("e"),2);return o=l[0],s=l[1],Number("".concat(o,"e").concat(Number(s)-t))},Complex:function(e){return e.ceil()},"Complex, number":function(e,t){return e.ceil(t)},BigNumber:function(e){return(0,$.nearlyEqual)(e,i(e),r.epsilon)?i(e):e.ceil()},"BigNumber, BigNumber":function(e,t){return(0,$.nearlyEqual)(e,i(e,t),r.epsilon)?i(e,t):e.toDecimalPlaces(t.toNumber(),g.Decimal.ROUND_CEIL)},Fraction:function(e){return e.ceil()},"Fraction, number":function(e,t){return e.ceil(t)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},"Array | Matrix, number":function(e,t){var n=this;return(0,P.deepMap)(e,(function(e){return n(e,t)}),!0)},"SparseMatrix, number | BigNumber":function(e,t){return s(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return c(e,t,this,!1)},"number | Complex | BigNumber, Array":function(e,t){return c(a(t),e,this,!0).valueOf()}})}));t.createCeil=a})),he=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCube=void 0;var n=["typed"],r=(0,h.factory)("cube",n,(function(e){return(0,e.typed)("cube",{number:F.cubeNumber,Complex:function(e){return e.mul(e).mul(e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.pow(3)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.pow(3)}})}));t.createCube=r})),ye=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createExp=void 0;var n=["typed"],r=(0,h.factory)("exp",n,(function(e){return(0,e.typed)("exp",{number:F.expNumber,Complex:function(e){return e.exp()},BigNumber:function(e){return e.exp()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createExp=r})),ve=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createExpm1=void 0;var n=["typed","Complex"],r=(0,h.factory)("expm1",n,(function(e){var t=e.typed,n=e.Complex;return t("expm1",{number:F.expm1Number,Complex:function(e){var t=Math.exp(e.re);return new n(t*Math.cos(e.im)-1,t*Math.sin(e.im))},BigNumber:function(e){return e.exp().minus(1)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createExpm1=r})),ge=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFix=void 0;var n=["typed","Complex","matrix","ceil","floor"],r=(0,h.factory)("fix",n,(function(e){var t=e.typed,n=e.Complex,r=e.matrix,i=e.ceil,a=e.floor,o=(0,pe.createAlgorithm14)({typed:t});return t("fix",{number:function(e){return e>0?a(e):i(e)},"number, number | BigNumber":function(e,t){return e>0?a(e,t):i(e,t)},Complex:function(e){return new n(e.re>0?Math.floor(e.re):Math.ceil(e.re),e.im>0?Math.floor(e.im):Math.ceil(e.im))},"Complex, number | BigNumber":function(e,t){return new n(e.re>0?a(e.re,t):i(e.re,t),e.im>0?a(e.im,t):i(e.im,t))},BigNumber:function(e){return e.isNegative()?i(e):a(e)},"BigNumber, number | BigNumber":function(e,t){return e.isNegative()?i(e,t):a(e,t)},Fraction:function(e){return e.s<0?e.ceil():e.floor()},"Fraction, number | BigNumber":function(e,t){return e.s<0?e.ceil(t):e.floor(t)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},"Array | Matrix, number | BigNumber":function(e,t){var n=this;return(0,P.deepMap)(e,(function(e){return n(e,t)}),!0)},"number | Complex | BigNumber, Array":function(e,t){return o(r(t),e,this,!0).valueOf()}})}));t.createFix=r})),be=t((function(e,t){function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,"__esModule",{value:!0}),t.createFloor=void 0;var i=["typed","config","round","matrix","equalScalar"],a=(0,h.factory)("floor",i,(function(e){var t=e.typed,r=e.config,i=e.round,a=e.matrix,o=e.equalScalar,s=(0,fe.createAlgorithm11)({typed:t,equalScalar:o}),c=(0,pe.createAlgorithm14)({typed:t});return t("floor",{number:function(e){return(0,u.nearlyEqual)(e,i(e),r.epsilon)?i(e):Math.floor(e)},"number, number":function(e,t){if((0,u.nearlyEqual)(e,i(e,t),r.epsilon))return i(e,t);var a=n("".concat(e,"e").split("e"),2),o=a[0],s=a[1],c=Math.floor(Number("".concat(o,"e").concat(Number(s)+t))),l=n("".concat(c,"e").split("e"),2);return o=l[0],s=l[1],Number("".concat(o,"e").concat(Number(s)-t))},Complex:function(e){return e.floor()},"Complex, number":function(e,t){return e.floor(t)},BigNumber:function(e){return(0,$.nearlyEqual)(e,i(e),r.epsilon)?i(e):e.floor()},"BigNumber, BigNumber":function(e,t){return(0,$.nearlyEqual)(e,i(e,t),r.epsilon)?i(e,t):e.toDecimalPlaces(t.toNumber(),g.Decimal.ROUND_FLOOR)},Fraction:function(e){return e.floor()},"Fraction, number":function(e,t){return e.floor(t)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},"Array | Matrix, number":function(e,t){var n=this;return(0,P.deepMap)(e,(function(e){return n(e,t)}),!0)},"SparseMatrix, number | BigNumber":function(e,t){return s(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return c(e,t,this,!1)},"number | Complex | BigNumber, Array":function(e,t){return c(a(t),e,this,!0).valueOf()}})}));t.createFloor=a})),xe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm01=void 0;var n=["typed"],r=(0,h.factory)("algorithm01",n,(function(e){var t=e.typed;return function(e,n,r,i){var a=e._data,o=e._size,s=e._datatype,c=n._values,u=n._index,l=n._ptr,d=n._size,p=n._datatype;if(o.length!==d.length)throw new f.DimensionError(o.length,d.length);if(o[0]!==d[0]||o[1]!==d[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+d+")");if(!c)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var m,h,y=o[0],v=o[1],g="string"==typeof s&&s===p?s:void 0,b=g?t.find(r,[g,g]):r,x=[];for(m=0;m<y;m++)x[m]=[];var D=[],_=[];for(h=0;h<v;h++){for(var w=h+1,N=l[h],M=l[h+1],O=N;O<M;O++)D[m=u[O]]=i?b(c[O],a[m][h]):b(a[m][h],c[O]),_[m]=w;for(m=0;m<y;m++)_[m]===w?x[m][h]=D[m]:x[m][h]=a[m][h]}return e.createDenseMatrix({data:x,size:[y,v],datatype:g})}}));t.createAlgorithm01=r})),De=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm04=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm04",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+m+")");var y,v=c[0],g=c[1],b=n,x=0,D=i;"string"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));var _,w,N,M,O,S=a&&l?[]:void 0,P=[],j=[],A=a&&l?[]:void 0,E=a&&l?[]:void 0,C=[],T=[];for(w=0;w<g;w++){j[w]=P.length;var k=w+1;for(M=s[w],O=s[w+1],N=M;N<O;N++)_=o[N],P.push(_),C[_]=k,A&&(A[_]=a[N]);for(M=p[w],O=p[w+1],N=M;N<O;N++)if(C[_=d[N]]===k){if(A){var I=D(A[_],l[N]);b(I,x)?C[_]=null:A[_]=I}}else P.push(_),T[_]=k,E&&(E[_]=l[N]);if(A&&E)for(N=j[w];N<P.length;)C[_=P[N]]===k?(S[N]=A[_],N++):T[_]===k?(S[N]=E[_],N++):P.splice(N,1)}return j[g]=P.length,e.createSparseMatrix({values:S,index:P,ptr:j,size:[v,g],datatype:y})}}));t.createAlgorithm04=r})),_e=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm10=void 0;var n=["typed","DenseMatrix"],r=(0,h.factory)("algorithm10",n,(function(e){var t=e.typed,n=e.DenseMatrix;return function(e,r,i,a){var o=e._values,s=e._index,c=e._ptr,u=e._size,l=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var d,f=u[0],p=u[1],m=i;"string"==typeof l&&(d=l,r=t.convert(r,d),m=t.find(i,[d,d]));for(var h=[],y=[],v=[],g=0;g<p;g++){for(var b=g+1,x=c[g],D=c[g+1],_=x;_<D;_++){var w=s[_];y[w]=o[_],v[w]=b}for(var N=0;N<f;N++)0===g&&(h[N]=[]),v[N]===b?h[N][g]=a?m(r,y[N]):m(y[N],r):h[N][g]=r}return new n({data:h,size:[f,p],datatype:d})}}));t.createAlgorithm10=r})),we=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm13=void 0;var n=["typed"],r=(0,h.factory)("algorithm13",n,(function(e){var t=e.typed;return function(e,n,r){var i,a=e._data,o=e._size,s=e._datatype,c=n._data,u=n._size,l=n._datatype,d=[];if(o.length!==u.length)throw new f.DimensionError(o.length,u.length);for(var p=0;p<o.length;p++){if(o[p]!==u[p])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+u+")");d[p]=o[p]}var m=r;"string"==typeof s&&s===l&&(i=s,m=t.find(r,[i,i]));var h=d.length>0?function e(t,n,r,i,a,o){var s=[];if(n===r.length-1)for(var c=0;c<i;c++)s[c]=t(a[c],o[c]);else for(var u=0;u<i;u++)s[u]=e(t,n+1,r,r[n+1],a[u],o[u]);return s}(m,0,d,d[0],a,c):[];return e.createDenseMatrix({data:h,size:d,datatype:i})}}));t.createAlgorithm13=r})),Ne=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createGcd=void 0;var n=["typed","matrix","equalScalar","BigNumber","DenseMatrix"],r=(0,h.factory)("gcd",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.BigNumber,a=e.DenseMatrix,o=(0,xe.createAlgorithm01)({typed:t}),s=(0,De.createAlgorithm04)({typed:t,equalScalar:r}),c=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:a}),u=(0,we.createAlgorithm13)({typed:t}),l=(0,pe.createAlgorithm14)({typed:t});return t("gcd",{"number, number":F.gcdNumber,"BigNumber, BigNumber":function(e,t){if(!e.isInt()||!t.isInt())throw new Error("Parameters in function gcd must be integer numbers");var n=new i(0);for(;!t.isZero();){var r=e.mod(t);e=t,t=r}return e.lt(n)?e.neg():e},"Fraction, Fraction":function(e,t){return e.gcd(t)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return c(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return l(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return c(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return l(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return l(n(e),t,this,!1).valueOf()},"number | BigNumber, Array":function(e,t){return l(n(t),e,this,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}})}));t.createGcd=r})),Me=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm02=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm02",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i,a){var o=e._data,s=e._size,c=e._datatype,u=r._values,l=r._index,d=r._ptr,p=r._size,m=r._datatype;if(s.length!==p.length)throw new f.DimensionError(s.length,p.length);if(s[0]!==p[0]||s[1]!==p[1])throw new RangeError("Dimension mismatch. Matrix A ("+s+") must match Matrix B ("+p+")");if(!u)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var h,y=s[0],v=s[1],g=n,b=0,x=i;"string"==typeof c&&c===m&&(h=c,g=t.find(n,[h,h]),b=t.convert(0,h),x=t.find(i,[h,h]));for(var D=[],_=[],w=[],N=0;N<v;N++){w[N]=_.length;for(var M=d[N],O=d[N+1],S=M;S<O;S++){var P=l[S],j=a?x(u[S],o[P][N]):x(o[P][N],u[S]);g(j,b)||(_.push(P),D.push(j))}}return w[v]=_.length,r.createSparseMatrix({values:D,index:_,ptr:w,size:[y,v],datatype:h})}}));t.createAlgorithm02=r})),Oe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm06=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm06",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._size,s=e._datatype,c=r._values,u=r._size,l=r._datatype;if(o.length!==u.length)throw new f.DimensionError(o.length,u.length);if(o[0]!==u[0]||o[1]!==u[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+u+")");var d,p=o[0],m=o[1],h=n,y=0,v=i;"string"==typeof s&&s===l&&(d=s,h=t.find(n,[d,d]),y=t.convert(0,d),v=t.find(i,[d,d]));for(var g=a&&c?[]:void 0,b=[],x=[],D=g?[]:void 0,_=[],w=[],N=0;N<m;N++){x[N]=b.length;var M=N+1;if((0,P.scatter)(e,N,_,D,w,M,b,v),(0,P.scatter)(r,N,_,D,w,M,b,v),D)for(var O=x[N];O<b.length;){var S=b[O];if(w[S]===M){var j=D[S];h(j,y)?b.splice(O,1):(g.push(j),O++)}else b.splice(O,1)}else for(var A=x[N];A<b.length;){w[b[A]]!==M?b.splice(A,1):A++}}return x[m]=b.length,e.createSparseMatrix({values:g,index:b,ptr:x,size:[p,m],datatype:d})}}));t.createAlgorithm06=r})),Se=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLcm=void 0;var n=["typed","matrix","equalScalar"],r=(0,h.factory)("lcm",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),a=(0,Oe.createAlgorithm06)({typed:t,equalScalar:r}),o=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t("lcm",{"number, number":F.lcmNumber,"BigNumber, BigNumber":function(e,t){if(!e.isInt()||!t.isInt())throw new Error("Parameters in function lcm must be integer numbers");if(e.isZero())return e;if(t.isZero())return t;var n=e.times(t);for(;!t.isZero();){var r=t;t=e.mod(r),e=r}return n.div(e).abs()},"Fraction, Fraction":function(e,t){return e.lcm(t)},"SparseMatrix, SparseMatrix":function(e,t){return a(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return s(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return o(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return c(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return o(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return c(n(e),t,this,!1).valueOf()},"number | BigNumber, Array":function(e,t){return c(n(t),e,this,!0).valueOf()},"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}})}));t.createLcm=r})),Pe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLog10=void 0;var n=["typed","config","Complex"],r=(0,h.factory)("log10",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t("log10",{number:function(e){return e>=0||n.predictable?(0,F.log10Number)(e):new r(e,0).log().div(Math.LN10)},Complex:function(e){return new r(e).log().div(Math.LN10)},BigNumber:function(e){return!e.isNegative()||n.predictable?e.log():new r(e.toNumber(),0).log().div(Math.LN10)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createLog10=r})),je=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLog2=void 0;var n=["typed","config","Complex"],r=(0,h.factory)("log2",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t("log2",{number:function(e){return e>=0||n.predictable?(0,F.log2Number)(e):i(new r(e,0))},Complex:i,BigNumber:function(e){return!e.isNegative()||n.predictable?e.log(2):i(new r(e.toNumber(),0))},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}});function i(e){var t=Math.sqrt(e.re*e.re+e.im*e.im);return new r(Math.log2?Math.log2(t):Math.log(t)/Math.LN2,Math.atan2(e.im,e.re)/Math.LN2)}}));t.createLog2=r})),Ae=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm03=void 0;var n=["typed"],r=(0,h.factory)("algorithm03",n,(function(e){var t=e.typed;return function(e,n,r,i){var a=e._data,o=e._size,s=e._datatype,c=n._values,u=n._index,l=n._ptr,d=n._size,p=n._datatype;if(o.length!==d.length)throw new f.DimensionError(o.length,d.length);if(o[0]!==d[0]||o[1]!==d[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+d+")");if(!c)throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");var m,h=o[0],y=o[1],v=0,g=r;"string"==typeof s&&s===p&&(m=s,v=t.convert(0,m),g=t.find(r,[m,m]));for(var b=[],x=0;x<h;x++)b[x]=[];for(var D=[],_=[],w=0;w<y;w++){for(var N=w+1,M=l[w],O=l[w+1],S=M;S<O;S++){var P=u[S];D[P]=i?g(c[S],a[P][w]):g(a[P][w],c[S]),_[P]=N}for(var j=0;j<h;j++)_[j]===N?b[j][w]=D[j]:b[j][w]=i?g(v,a[j][w]):g(a[j][w],v)}return e.createDenseMatrix({data:b,size:[h,y],datatype:m})}}));t.createAlgorithm03=r})),Ee=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm05=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm05",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+m+")");var y,v=c[0],g=c[1],b=n,x=0,D=i;"string"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));var _,w,N,M,O=a&&l?[]:void 0,S=[],P=[],j=O?[]:void 0,A=O?[]:void 0,E=[],C=[];for(w=0;w<g;w++){P[w]=S.length;var T=w+1;for(N=s[w],M=s[w+1];N<M;N++)_=o[N],S.push(_),E[_]=T,j&&(j[_]=a[N]);for(N=p[w],M=p[w+1];N<M;N++)E[_=d[N]]!==T&&S.push(_),C[_]=T,A&&(A[_]=l[N]);if(O)for(N=P[w];N<S.length;){var k=E[_=S[N]],I=C[_];if(k===T||I===T){var B=D(k===T?j[_]:x,I===T?A[_]:x);b(B,x)?S.splice(N,1):(O.push(B),N++)}}}return P[g]=S.length,e.createSparseMatrix({values:O,index:S,ptr:P,size:[v,g],datatype:y})}}));t.createAlgorithm05=r})),Ce=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm12=void 0;var n=["typed","DenseMatrix"],r=(0,h.factory)("algorithm12",n,(function(e){var t=e.typed,n=e.DenseMatrix;return function(e,r,i,a){var o=e._values,s=e._index,c=e._ptr,u=e._size,l=e._datatype;if(!o)throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");var d,f=u[0],p=u[1],m=i;"string"==typeof l&&(d=l,r=t.convert(r,d),m=t.find(i,[d,d]));for(var h=[],y=[],v=[],g=0;g<p;g++){for(var b=g+1,x=c[g],D=c[g+1],_=x;_<D;_++){var w=s[_];y[w]=o[_],v[w]=b}for(var N=0;N<f;N++)0===g&&(h[N]=[]),v[N]===b?h[N][g]=a?m(r,y[N]):m(y[N],r):h[N][g]=a?m(r,0):m(0,r)}return new n({data:h,size:[f,p],datatype:d})}}));t.createAlgorithm12=r})),Te=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMod=void 0;var n=["typed","matrix","equalScalar","DenseMatrix"],r=(0,h.factory)("mod",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,Ee.createAlgorithm05)({typed:t,equalScalar:r}),c=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),u=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t("mod",{"number, number":F.modNumber,"BigNumber, BigNumber":function(e,t){if(t.isNeg())throw new Error("Cannot calculate mod for a negative divisor");return t.isZero()?e:e.mod(t)},"Fraction, Fraction":function(e,t){if(t.compare(0)<0)throw new Error("Cannot calculate mod for a negative divisor");return e.compare(0)>=0?e.mod(t):e.mod(t).add(t).mod(t)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return u(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(n(t),e,this,!0).valueOf()}})}));t.createMod=r})),ke=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMultiplyScalar=void 0;var n=["typed"],r=(0,h.factory)("multiplyScalar",n,(function(e){return(0,e.typed)("multiplyScalar",{"number, number":F.multiplyNumber,"Complex, Complex":function(e,t){return e.mul(t)},"BigNumber, BigNumber":function(e,t){return e.times(t)},"Fraction, Fraction":function(e,t){return e.mul(t)},"number | Fraction | BigNumber | Complex, Unit":function(e,t){var n=t.clone();return n.value=null===n.value?n._normalize(e):this(n.value,e),n},"Unit, number | Fraction | BigNumber | Complex":function(e,t){var n=e.clone();return n.value=null===n.value?n._normalize(t):this(n.value,t),n},"Unit, Unit":function(e,t){return e.multiply(t)}})}));t.createMultiplyScalar=r})),Ie=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMultiply=void 0;var n=["typed","matrix","addScalar","multiplyScalar","equalScalar","dot"],r=(0,h.factory)("multiply",n,(function(e){var t=e.typed,n=e.matrix,r=e.addScalar,o=e.multiplyScalar,s=e.equalScalar,c=e.dot,u=(0,fe.createAlgorithm11)({typed:t,equalScalar:s}),l=(0,pe.createAlgorithm14)({typed:t});function d(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");break;case 2:if(e[0]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Vector length ("+e[0]+") must match Matrix rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix columns ("+e[1]+") must match Vector length ("+t[0]+")");break;case 2:if(e[1]!==t[0])throw new RangeError("Dimension mismatch in multiplication. Matrix A columns ("+e[1]+") must match Matrix B rows ("+t[0]+")");break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has "+t.length+" dimensions)")}break;default:throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has "+e.length+" dimensions)")}}function f(e,n){if("dense"!==n.storage())throw new Error("Support for SparseMatrix not implemented");return function(e,n){var i,a=e._data,s=e._size,c=e._datatype,u=n._data,l=n._size,d=n._datatype,f=s[0],p=l[1],m=r,h=o;c&&d&&c===d&&"string"==typeof c&&(i=c,m=t.find(r,[i,i]),h=t.find(o,[i,i]));for(var y=[],v=0;v<p;v++){for(var g=h(a[0],u[0][v]),b=1;b<f;b++)g=m(g,h(a[b],u[b][v]));y[v]=g}return e.createDenseMatrix({data:y,size:[p],datatype:i})}(e,n)}var p=t("_multiplyMatrixVector",{"DenseMatrix, any":function(e,n){var i,a=e._data,s=e._size,c=e._datatype,u=n._data,l=n._datatype,d=s[0],f=s[1],p=r,m=o;c&&l&&c===l&&"string"==typeof c&&(i=c,p=t.find(r,[i,i]),m=t.find(o,[i,i]));for(var h=[],y=0;y<d;y++){for(var v=a[y],g=m(v[0],u[0]),b=1;b<f;b++)g=p(g,m(v[b],u[b]));h[y]=g}return e.createDenseMatrix({data:h,size:[d],datatype:i})},"SparseMatrix, any":function(e,n){var i=e._values,a=e._index,c=e._ptr,u=e._datatype;if(!i)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var l,d=n._data,f=n._datatype,p=e._size[0],m=n._size[0],h=[],y=[],v=[],g=r,b=o,x=s,D=0;u&&f&&u===f&&"string"==typeof u&&(l=u,g=t.find(r,[l,l]),b=t.find(o,[l,l]),x=t.find(s,[l,l]),D=t.convert(0,l));var _=[],w=[];v[0]=0;for(var N=0;N<m;N++){var M=d[N];if(!x(M,D))for(var O=c[N],S=c[N+1],P=O;P<S;P++){var j=a[P];w[j]?_[j]=g(_[j],b(M,i[P])):(w[j]=!0,y.push(j),_[j]=b(M,i[P]))}}for(var A=y.length,E=0;E<A;E++){var C=y[E];h[E]=_[C]}return v[1]=y.length,e.createSparseMatrix({values:h,index:y,ptr:v,size:[p,1],datatype:l})}}),h=t("_multiplyMatrixMatrix",{"DenseMatrix, DenseMatrix":function(e,n){var i,a=e._data,s=e._size,c=e._datatype,u=n._data,l=n._size,d=n._datatype,f=s[0],p=s[1],m=l[1],h=r,y=o;c&&d&&c===d&&"string"==typeof c&&(i=c,h=t.find(r,[i,i]),y=t.find(o,[i,i]));for(var v=[],g=0;g<f;g++){var b=a[g];v[g]=[];for(var x=0;x<m;x++){for(var D=y(b[0],u[0][x]),_=1;_<p;_++)D=h(D,y(b[_],u[_][x]));v[g][x]=D}}return e.createDenseMatrix({data:v,size:[f,m],datatype:i})},"DenseMatrix, SparseMatrix":function(e,n){var i=e._data,a=e._size,c=e._datatype,u=n._values,l=n._index,d=n._ptr,f=n._size,p=n._datatype;if(!u)throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");var m,h=a[0],y=f[1],v=r,g=o,b=s,x=0;c&&p&&c===p&&"string"==typeof c&&(m=c,v=t.find(r,[m,m]),g=t.find(o,[m,m]),b=t.find(s,[m,m]),x=t.convert(0,m));for(var D=[],_=[],w=[],N=n.createSparseMatrix({values:D,index:_,ptr:w,size:[h,y],datatype:m}),M=0;M<y;M++){w[M]=_.length;var O=d[M],S=d[M+1];if(S>O)for(var P=0,j=0;j<h;j++){for(var A=j+1,E=void 0,C=O;C<S;C++){var T=l[C];P!==A?(E=g(i[j][T],u[C]),P=A):E=v(E,g(i[j][T],u[C]))}P!==A||b(E,x)||(_.push(j),D.push(E))}}return w[y]=_.length,N},"SparseMatrix, DenseMatrix":function(e,n){var i=e._values,a=e._index,c=e._ptr,u=e._datatype;if(!i)throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");var l,d=n._data,f=n._datatype,p=e._size[0],m=n._size[0],h=n._size[1],y=r,v=o,g=s,b=0;u&&f&&u===f&&"string"==typeof u&&(l=u,y=t.find(r,[l,l]),v=t.find(o,[l,l]),g=t.find(s,[l,l]),b=t.convert(0,l));for(var x=[],D=[],_=[],w=e.createSparseMatrix({values:x,index:D,ptr:_,size:[p,h],datatype:l}),N=[],M=[],O=0;O<h;O++){_[O]=D.length;for(var S=O+1,P=0;P<m;P++){var j=d[P][O];if(!g(j,b))for(var A=c[P],E=c[P+1],C=A;C<E;C++){var T=a[C];M[T]!==S?(M[T]=S,D.push(T),N[T]=v(j,i[C])):N[T]=y(N[T],v(j,i[C]))}}for(var k=_[O],I=D.length,B=k;B<I;B++){var z=D[B];x[B]=N[z]}}return _[h]=D.length,w},"SparseMatrix, SparseMatrix":function(e,n){var i,a=e._values,s=e._index,c=e._ptr,u=e._datatype,l=n._values,d=n._index,f=n._ptr,p=n._datatype,m=e._size[0],h=n._size[1],y=a&&l,v=r,g=o;u&&p&&u===p&&"string"==typeof u&&(i=u,v=t.find(r,[i,i]),g=t.find(o,[i,i]));for(var b,x,D,_,w,N,M,O,S=y?[]:void 0,P=[],j=[],A=e.createSparseMatrix({values:S,index:P,ptr:j,size:[m,h],datatype:i}),E=y?[]:void 0,C=[],T=0;T<h;T++){j[T]=P.length;var k=T+1;for(w=f[T],N=f[T+1],_=w;_<N;_++)if(O=d[_],y)for(x=c[O],D=c[O+1],b=x;b<D;b++)M=s[b],C[M]!==k?(C[M]=k,P.push(M),E[M]=g(l[_],a[b])):E[M]=v(E[M],g(l[_],a[b]));else for(x=c[O],D=c[O+1],b=x;b<D;b++)M=s[b],C[M]!==k&&(C[M]=k,P.push(M));if(y)for(var I=j[T],B=P.length,z=I;z<B;z++){var R=P[z];S[z]=E[R]}}return j[h]=P.length,A}});return t("multiply",(0,a.extend)({"Array, Array":function(e,t){d((0,m.arraySize)(e),(0,m.arraySize)(t));var r=this(n(e),n(t));return(0,i.isMatrix)(r)?r.valueOf():r},"Matrix, Matrix":function(e,t){var n=e.size(),r=t.size();return d(n,r),1===n.length?1===r.length?function(e,t,n){if(0===n)throw new Error("Cannot multiply two empty vectors");return c(e,t)}(e,t,n[0]):f(e,t):1===r.length?p(e,t):h(e,t)},"Matrix, Array":function(e,t){return this(e,n(t))},"Array, Matrix":function(e,t){return this(n(e,t.storage()),t)},"SparseMatrix, any":function(e,t){return u(e,t,o,!1)},"DenseMatrix, any":function(e,t){return l(e,t,o,!1)},"any, SparseMatrix":function(e,t){return u(t,e,o,!0)},"any, DenseMatrix":function(e,t){return l(t,e,o,!0)},"Array, any":function(e,t){return l(n(e),t,o,!1).valueOf()},"any, Array":function(e,t){return l(n(t),e,o,!0).valueOf()},"any, any":o,"any, any, ...any":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}},o.signatures))}));t.createMultiply=r})),Be=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createNthRootNumber=t.createNthRoot=void 0;var n="nthRoot",r=["typed","matrix","equalScalar","BigNumber"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=e.equalScalar,a=e.BigNumber,o=(0,xe.createAlgorithm01)({typed:t}),s=(0,Me.createAlgorithm02)({typed:t,equalScalar:i}),c=(0,Oe.createAlgorithm06)({typed:t,equalScalar:i}),u=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t}),f="Complex number not supported in function nthRoot. Use nthRoots instead.";return t(n,{number:function(e){return(0,F.nthRootNumber)(e,2)},"number, number":F.nthRootNumber,BigNumber:function(e){return p(e,new a(2))},Complex:function(e){throw new Error(f)},"Complex, number":function(e,t){throw new Error(f)},"BigNumber, BigNumber":p,"Array | Matrix":function(e){return this(e,2)},"SparseMatrix, SparseMatrix":function(e,t){if(1===t.density())return c(e,t,this);throw new Error("Root must be non-zero")},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){if(1===t.density())return o(e,t,this,!1);throw new Error("Root must be non-zero")},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, number | BigNumber":function(e,t){return u(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return d(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){if(1===t.density())return u(t,e,this,!0);throw new Error("Root must be non-zero")},"number | BigNumber, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(r(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,r(t)).valueOf()}});function p(e,t){var n=a.precision,r=a.clone({precision:n+2}),i=new a(0),o=new r(1),s=t.isNegative();if(s&&(t=t.neg()),t.isZero())throw new Error("Root must be non-zero");if(e.isNegative()&&!t.abs().mod(2).equals(1))throw new Error("Root must be odd when a is negative.");if(e.isZero())return s?new r(1/0):0;if(!e.isFinite())return s?i:e;var c=e.abs().pow(o.div(t));return c=e.isNeg()?c.neg():c,new a((s?o.div(c):c).toPrecision(n))}}));t.createNthRoot=i;var a=(0,h.factory)(n,["typed"],(function(e){return(0,e.typed)(n,{number:F.nthRootNumber,"number, number":F.nthRootNumber})}));t.createNthRootNumber=a})),ze=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSign=void 0;var n=["typed","BigNumber","Fraction","complex"],r=(0,h.factory)("sign",n,(function(e){var t=e.typed,n=e.BigNumber,r=e.complex,i=e.Fraction;return t("sign",{number:F.signNumber,Complex:function(e){return 0===e.im?r((0,F.signNumber)(e.re)):e.sign()},BigNumber:function(e){return new n(e.cmp(0))},Fraction:function(e){return new i(e.s,1)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return this(e.value)}})}));t.createSign=r})),Re=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSqrt=void 0;var n=["config","typed","Complex"],r=(0,h.factory)("sqrt",n,(function(e){var t=e.config,n=e.typed,r=e.Complex;return n("sqrt",{number:i,Complex:function(e){return e.sqrt()},BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():i(e.toNumber())},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.pow(.5)}});function i(e){return isNaN(e)?NaN:e>=0||t.predictable?Math.sqrt(e):new r(e,0).sqrt()}}));t.createSqrt=r})),qe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSquare=void 0;var n=["typed"],r=(0,h.factory)("square",n,(function(e){return(0,e.typed)("square",{number:F.squareNumber,Complex:function(e){return e.mul(e)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.pow(2)}})}));t.createSquare=r})),Fe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSubtract=void 0;var n=["typed","matrix","equalScalar","addScalar","unaryMinus","DenseMatrix"],r=(0,h.factory)("subtract",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,a=e.addScalar,o=e.unaryMinus,s=e.DenseMatrix,c=(0,xe.createAlgorithm01)({typed:t}),u=(0,Ae.createAlgorithm03)({typed:t}),l=(0,Ee.createAlgorithm05)({typed:t,equalScalar:r}),d=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:s}),f=(0,we.createAlgorithm13)({typed:t}),p=(0,pe.createAlgorithm14)({typed:t});return t("subtract",{"number, number":function(e,t){return e-t},"Complex, Complex":function(e,t){return e.sub(t)},"BigNumber, BigNumber":function(e,t){return e.minus(t)},"Fraction, Fraction":function(e,t){return e.sub(t)},"Unit, Unit":function(e,t){if(null===e.value)throw new Error("Parameter x contains a unit with undefined value");if(null===t.value)throw new Error("Parameter y contains a unit with undefined value");if(!e.equalBase(t))throw new Error("Units do not match");var n=e.clone();return n.value=this(n.value,t.value),n.fixPrefix=!1,n},"SparseMatrix, SparseMatrix":function(e,t){return i(e,t),l(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(e,t),u(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t),c(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return i(e,t),f(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return d(e,o(t),a)},"DenseMatrix, any":function(e,t){return p(e,t,this)},"any, SparseMatrix":function(e,t){return d(t,e,this,!0)},"any, DenseMatrix":function(e,t){return p(t,e,this,!0)},"Array, any":function(e,t){return p(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return p(n(t),e,this,!0).valueOf()}})}));function i(e,t){var n=e.size(),r=t.size();if(n.length!==r.length)throw new f.DimensionError(n.length,r.length)}t.createSubtract=r})),Ue=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createXgcd=void 0;var n=["typed","config","matrix","BigNumber"],r=(0,h.factory)("xgcd",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,i=e.BigNumber;return t("xgcd",{"number, number":function(e,t){var i=(0,F.xgcdNumber)(e,t);return"Array"===n.matrix?i:r(i)},"BigNumber, BigNumber":function(e,t){var a,o,s,c,u=new i(0),l=new i(1),d=u,f=l,p=l,m=u;if(!e.isInt()||!t.isInt())throw new Error("Parameters in function xgcd must be integer numbers");for(;!t.isZero();)o=e.div(t).floor(),s=e.mod(t),a=d,d=f.minus(o.times(d)),f=a,a=p,p=m.minus(o.times(p)),m=a,e=t,t=s;c=e.lt(u)?[e.neg(),f.neg(),m.neg()]:[e,e.isZero()?0:f,m];return"Array"===n.matrix?c:r(c)}})}));t.createXgcd=r})),Le=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm09=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm09",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+m+")");var y,v=c[0],g=c[1],b=n,x=0,D=i;"string"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));var _,w,N,M,O,S=a&&l?[]:void 0,P=[],j=[],A=S?[]:void 0,E=[];for(w=0;w<g;w++){j[w]=P.length;var C=w+1;if(A)for(M=p[w],O=p[w+1],N=M;N<O;N++)E[_=d[N]]=C,A[_]=l[N];for(M=s[w],O=s[w+1],N=M;N<O;N++)if(_=o[N],A){var T=E[_]===C?A[_]:x,k=D(a[N],T);b(k,x)||(P.push(_),S.push(k))}else P.push(_)}return j[g]=P.length,e.createSparseMatrix({values:S,index:P,ptr:j,size:[v,g],datatype:y})}}));t.createAlgorithm09=r})),He=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDotMultiply=void 0;var n=["typed","matrix","equalScalar","multiplyScalar"],r=(0,h.factory)("dotMultiply",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.multiplyScalar,a=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),o=(0,Le.createAlgorithm09)({typed:t,equalScalar:r}),s=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t("dotMultiply",{"any, any":i,"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,i,!1)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,i,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,i,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,i)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,i,!1)},"DenseMatrix, any":function(e,t){return u(e,t,i,!1)},"any, SparseMatrix":function(e,t){return s(t,e,i,!0)},"any, DenseMatrix":function(e,t){return u(t,e,i,!0)},"Array, any":function(e,t){return u(n(e),t,i,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,i,!0).valueOf()}})}));t.createDotMultiply=r})),Ze=t((function(e,t){function n(e){if(e.isFinite()&&!e.isInteger())throw new Error("Integer expected in function bitNot");var t=e.constructor,n=t.precision;t.config({precision:1e9});var r=e.plus(new t(1));return r.s=-r.s||null,t.config({precision:n}),r}function r(e,t,r){var a,o,s,c,u,l=e.constructor,d=+(e.s<0),f=+(t.s<0);if(d){a=i(n(e));for(var p=0;p<a.length;++p)a[p]^=1}else a=i(e);if(f){o=i(n(t));for(var m=0;m<o.length;++m)o[m]^=1}else o=i(t);a.length<=o.length?(s=a,c=o,u=d):(s=o,c=a,u=f);var h=s.length,y=c.length,v=1^r(d,f),g=new l(1^v),b=new l(1),x=new l(2),D=l.precision;for(l.config({precision:1e9});h>0;)r(s[--h],c[--y])===v&&(g=g.plus(b)),b=b.times(x);for(;y>0;)r(u,c[--y])===v&&(g=g.plus(b)),b=b.times(x);return l.config({precision:D}),0===v&&(g.s=-g.s),g}function i(e){for(var t=e.d,n=t[0]+"",r=1;r<t.length;++r){for(var i=t[r]+"",a=7-i.length;a--;)i="0"+i;n+=i}for(var o=n.length;"0"===n.charAt(o);)o--;var s=e.e,c=n.slice(0,o+1||1),u=c.length;if(s>0)if(++s>u)for(s-=u;s--;)c+="0";else s<u&&(c=c.slice(0,s)+"."+c.slice(s));for(var l=[0],d=0;d<c.length;){for(var f=l.length;f--;)l[f]*=10;l[0]+=parseInt(c.charAt(d++));for(var p=0;p<l.length;++p)l[p]>1&&(null!==l[p+1]&&void 0!==l[p+1]||(l[p+1]=0),l[p+1]+=l[p]>>1,l[p]&=1)}return l.reverse()}Object.defineProperty(t,"__esModule",{value:!0}),t.bitAndBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitAnd");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()===t.isNegative()?e:new n(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new n(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new n(0):e}return r(e,t,(function(e,t){return e&t}))},t.bitNotBigNumber=n,t.bitOrBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitOr");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);var i=new n(-1);if(e.isZero()||t.eq(i)||e.eq(t))return t;if(t.isZero()||e.eq(i))return e;if(!e.isFinite()||!t.isFinite())return!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?i:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e;return r(e,t,(function(e,t){return e|t}))},t.bitwise=r,t.bitXor=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function bitXor");var i=e.constructor;if(e.isNaN()||t.isNaN())return new i(NaN);if(e.isZero())return t;if(t.isZero())return e;if(e.eq(t))return new i(0);var a=new i(-1);if(e.eq(a))return n(t);if(t.eq(a))return n(e);if(!e.isFinite()||!t.isFinite())return e.isFinite()||t.isFinite()?new i(e.isNegative()===t.isNegative()?1/0:-1/0):a;return r(e,t,(function(e,t){return e^t}))},t.leftShiftBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function leftShift");var n=e.constructor;if(e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero())return new n(NaN);if(e.isZero()||t.isZero())return e;if(!e.isFinite()&&!t.isFinite())return new n(NaN);if(t.lt(55))return e.times(Math.pow(2,t.toNumber())+"");return e.times(new n(2).pow(t))},t.rightArithShiftBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error("Integers expected in function rightArithShift");var n=e.constructor;if(e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero())return new n(NaN);if(e.isZero()||t.isZero())return e;if(!t.isFinite())return e.isNegative()?new n(-1):e.isFinite()?new n(0):new n(NaN);if(t.lt(55))return e.div(Math.pow(2,t.toNumber())+"").floor();return e.div(new n(2).pow(t)).floor()}})),Ve=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBitAnd=void 0;var n=["typed","matrix","equalScalar"],r=(0,h.factory)("bitAnd",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),a=(0,Oe.createAlgorithm06)({typed:t,equalScalar:r}),o=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t("bitAnd",{"number, number":F.bitAndNumber,"BigNumber, BigNumber":Ze.bitAndBigNumber,"SparseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return s(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));t.createBitAnd=r})),We=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBitNot=void 0;var n=["typed"],r=(0,h.factory)("bitNot",n,(function(e){return(0,e.typed)("bitNot",{number:F.bitNotNumber,BigNumber:Ze.bitNotBigNumber,"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createBitNot=r})),Ge=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBitOr=void 0;var n=["typed","matrix","equalScalar","DenseMatrix"],r=(0,h.factory)("bitOr",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,xe.createAlgorithm01)({typed:t}),o=(0,De.createAlgorithm04)({typed:t,equalScalar:r}),s=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t("bitOr",{"number, number":F.bitOrNumber,"BigNumber, BigNumber":Ze.bitOrBigNumber,"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,this,!1)},"DenseMatrix, any":function(e,t){return u(e,t,this,!1)},"any, SparseMatrix":function(e,t){return s(t,e,this,!0)},"any, DenseMatrix":function(e,t){return u(t,e,this,!0)},"Array, any":function(e,t){return u(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,this,!0).valueOf()}})}));t.createBitOr=r})),$e=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm07=void 0;var n=["typed","DenseMatrix"],r=(0,h.factory)("algorithm07",n,(function(e){var t=e.typed,n=e.DenseMatrix;return function(e,i,a){var o=e._size,s=e._datatype,c=i._size,u=i._datatype;if(o.length!==c.length)throw new f.DimensionError(o.length,c.length);if(o[0]!==c[0]||o[1]!==c[1])throw new RangeError("Dimension mismatch. Matrix A ("+o+") must match Matrix B ("+c+")");var l,d,p,m=o[0],h=o[1],y=0,v=a;"string"==typeof s&&s===u&&(l=s,y=t.convert(0,l),v=t.find(a,[l,l]));var g=[];for(d=0;d<m;d++)g[d]=[];var b=[],x=[],D=[],_=[];for(p=0;p<h;p++){var w=p+1;for(r(e,p,D,b,w),r(i,p,_,x,w),d=0;d<m;d++){var N=D[d]===w?b[d]:y,M=_[d]===w?x[d]:y;g[d][p]=v(N,M)}}return new n({data:g,size:[m,h],datatype:l})};function r(e,t,n,r,i){for(var a=e._values,o=e._index,s=e._ptr,c=s[t],u=s[t+1];c<u;c++){var l=o[c];n[l]=i,r[l]=a[c]}}}));t.createAlgorithm07=r})),Qe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBitXor=void 0;var n=["typed","matrix","DenseMatrix"],r=(0,h.factory)("bitXor",n,(function(e){var t=e.typed,n=e.matrix,r=e.DenseMatrix,i=(0,Ae.createAlgorithm03)({typed:t}),a=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:r}),o=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t("bitXor",{"number, number":F.bitXorNumber,"BigNumber, BigNumber":Ze.bitXor,"SparseMatrix, SparseMatrix":function(e,t){return a(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return s(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));t.createBitXor=r})),Xe=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createArg=void 0;var n=["typed"],r=(0,h.factory)("arg",n,(function(e){return(0,e.typed)("arg",{number:function(e){return Math.atan2(0,e)},BigNumber:function(e){return e.constructor.atan2(0,e)},Complex:function(e){return e.arg()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createArg=r})),Ye=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createConj=void 0;var n=["typed"],r=(0,h.factory)("conj",n,(function(e){return(0,e.typed)("conj",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.conjugate()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createConj=r})),Je=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIm=void 0;var n=["typed"],r=(0,h.factory)("im",n,(function(e){return(0,e.typed)("im",{number:function(e){return 0},BigNumber:function(e){return e.mul(0)},Complex:function(e){return e.im},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIm=r})),Ke=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRe=void 0;var n=["typed"],r=(0,h.factory)("re",n,(function(e){return(0,e.typed)("re",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.re},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createRe=r})),et=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createNot=void 0;var n=["typed"],r=(0,h.factory)("not",n,(function(e){return(0,e.typed)("not",{number:F.notNumber,Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return null===e.value||this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createNot=r})),tt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createOr=void 0;var n=["typed","matrix","equalScalar","DenseMatrix"],r=(0,h.factory)("or",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,Ae.createAlgorithm03)({typed:t}),o=(0,Ee.createAlgorithm05)({typed:t,equalScalar:r}),s=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t("or",{"number, number":F.orNumber,"Complex, Complex":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},"BigNumber, BigNumber":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},"Unit, Unit":function(e,t){return this(e.value||0,t.value||0)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,this,!1)},"DenseMatrix, any":function(e,t){return u(e,t,this,!1)},"any, SparseMatrix":function(e,t){return s(t,e,this,!0)},"any, DenseMatrix":function(e,t){return u(t,e,this,!0)},"Array, any":function(e,t){return u(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,this,!0).valueOf()}})}));t.createOr=r})),nt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createXor=void 0;var n=["typed","matrix","DenseMatrix"],r=(0,h.factory)("xor",n,(function(e){var t=e.typed,n=e.matrix,r=e.DenseMatrix,i=(0,Ae.createAlgorithm03)({typed:t}),a=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:r}),o=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t("xor",{"number, number":F.xorNumber,"Complex, Complex":function(e,t){return(0!==e.re||0!==e.im)!=(0!==t.re||0!==t.im)},"BigNumber, BigNumber":function(e,t){return(!e.isZero()&&!e.isNaN())!=(!t.isZero()&&!t.isNaN())},"Unit, Unit":function(e,t){return this(e.value||0,t.value||0)},"SparseMatrix, SparseMatrix":function(e,t){return a(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return i(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return i(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return s(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return o(e,t,this,!1)},"DenseMatrix, any":function(e,t){return c(e,t,this,!1)},"any, SparseMatrix":function(e,t){return o(t,e,this,!0)},"any, DenseMatrix":function(e,t){return c(t,e,this,!0)},"Array, any":function(e,t){return c(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));t.createXor=r})),rt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createConcat=void 0;var n=["typed","matrix","isInteger"],r=(0,h.factory)("concat",n,(function(e){var t=e.typed,n=e.matrix,r=e.isInteger;return t("concat",{"...Array | Matrix | number | BigNumber":function(e){var t,s,c=e.length,u=-1,l=!1,d=[];for(t=0;t<c;t++){var h=e[t];if((0,i.isMatrix)(h)&&(l=!0),(0,i.isNumber)(h)||(0,i.isBigNumber)(h)){if(t!==c-1)throw new Error("Dimension must be specified as last argument");if(s=u,u=h.valueOf(),!r(u))throw new TypeError("Integer number expected for dimension");if(u<0||t>0&&u>s)throw new p.IndexError(u,s+1)}else{var y=(0,a.clone)(h).valueOf(),v=(0,m.arraySize)(y);if(d[t]=y,s=u,u=v.length-1,t>0&&u!==s)throw new f.DimensionError(s+1,u+1)}}if(0===d.length)throw new SyntaxError("At least one matrix expected");for(var g=d.shift();d.length;)g=o(g,d.shift(),u,0);return l?n(g):g},"...string":function(e){return e.join("")}})}));function o(e,t,n,r){if(r<n){if(e.length!==t.length)throw new f.DimensionError(e.length,t.length);for(var i=[],a=0;a<e.length;a++)i[a]=o(e[a],t[a],n,r+1);return i}return e.concat(t)}t.createConcat=r})),it=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createColumn=void 0;var n=["typed","Index","matrix","range"],r=(0,h.factory)("column",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,i=e.range;return t("column",{"Matrix, number":o,"Array, number":function(e,t){return o(r((0,a.clone)(e)),t).valueOf()}});function o(e,t){if(2!==e.size().length)throw new Error("Only two dimensional matrix is supported");(0,m.validateIndex)(t,e.size()[1]);var r=i(0,e.size()[0]),a=new n(r,t);return e.subset(a)}}));t.createColumn=r})),at=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCross=void 0;var n=["typed","matrix","subtract","multiply"],r=(0,h.factory)("cross",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,i=e.multiply;return t("cross",{"Matrix, Matrix":function(e,t){return n(a(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return n(a(e.toArray(),t))},"Array, Matrix":function(e,t){return n(a(e,t.toArray()))},"Array, Array":a});function a(e,t){var n=Math.max((0,m.arraySize)(e).length,(0,m.arraySize)(t).length);e=(0,m.squeeze)(e),t=(0,m.squeeze)(t);var a=(0,m.arraySize)(e),o=(0,m.arraySize)(t);if(1!==a.length||1!==o.length||3!==a[0]||3!==o[0])throw new RangeError("Vectors with length 3 expected (Size A = ["+a.join(", ")+"], B = ["+o.join(", ")+"])");var s=[r(i(e[1],t[2]),i(e[2],t[1])),r(i(e[2],t[0]),i(e[0],t[2])),r(i(e[0],t[1]),i(e[1],t[0]))];return n>1?[s]:s}}));t.createCross=r})),ot=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDiag=void 0;var n=["typed","matrix","DenseMatrix","SparseMatrix"],r=(0,h.factory)("diag",n,(function(e){var t=e.typed,n=e.matrix,r=e.DenseMatrix,a=e.SparseMatrix;return t("diag",{Array:function(e){return o(e,0,(0,m.arraySize)(e),null)},"Array, number":function(e,t){return o(e,t,(0,m.arraySize)(e),null)},"Array, BigNumber":function(e,t){return o(e,t.toNumber(),(0,m.arraySize)(e),null)},"Array, string":function(e,t){return o(e,0,(0,m.arraySize)(e),t)},"Array, number, string":function(e,t,n){return o(e,t,(0,m.arraySize)(e),n)},"Array, BigNumber, string":function(e,t,n){return o(e,t.toNumber(),(0,m.arraySize)(e),n)},Matrix:function(e){return o(e,0,e.size(),e.storage())},"Matrix, number":function(e,t){return o(e,t,e.size(),e.storage())},"Matrix, BigNumber":function(e,t){return o(e,t.toNumber(),e.size(),e.storage())},"Matrix, string":function(e,t){return o(e,0,e.size(),t)},"Matrix, number, string":function(e,t,n){return o(e,t,e.size(),n)},"Matrix, BigNumber, string":function(e,t,n){return o(e,t.toNumber(),e.size(),n)}});function o(e,t,o,s){if(!(0,u.isInteger)(t))throw new TypeError("Second parameter in function diag must be an integer");var c=t>0?t:0,l=t<0?-t:0;switch(o.length){case 1:return function(e,t,n,i,o,s){var c=[i+o,i+s];if(n&&"sparse"!==n&&"dense"!==n)throw new TypeError("Unknown matrix type ".concat(n,'"'));var u="sparse"===n?a.diagonal(c,e,t):r.diagonal(c,e,t);return null!==n?u:u.valueOf()}(e,t,s,o[0],l,c);case 2:return function(e,t,r,a,o,s){if((0,i.isMatrix)(e)){var c=e.diagonal(t);return null!==r?r!==c.storage()?n(c,r):c:c.valueOf()}for(var u=Math.min(a[0]-o,a[1]-s),l=[],d=0;d<u;d++)l[d]=e[d+o][d+s];return null!==r?n(l):l}(e,t,s,o,l,c)}throw new RangeError("Matrix for function diag must be 2 dimensional")}}));t.createDiag=r})),st=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.memoize=function(e,t){return function r(){"object"!==n(r.cache)&&(r.cache={});for(var i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];var o=t?t(i):JSON.stringify(i);return o in r.cache||(r.cache[o]=e.apply(e,i)),r.cache[o]}},t.memoizeCompare=function(e,t){var n=function n(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];for(var a=0;a<n.cache.length;a++){var o=n.cache[a];if(t(r,o.args))return o.res}var s=e.apply(e,r);return n.cache.unshift({args:r,res:s}),s};return n.cache=[],n},t.maxArgumentCount=function(e){return Object.keys(e.signatures||{}).reduce((function(e,t){var n=(t.match(/,/g)||[]).length+1;return Math.max(e,n)}),-1)}})),ct=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFilter=void 0;var n=["typed"],r=(0,h.factory)("filter",n,(function(e){return(0,e.typed)("filter",{"Array, function":i,"Matrix, function":function(e,t){return e.create(i(e.toArray(),t))},"Array, RegExp":m.filterRegExp,"Matrix, RegExp":function(e,t){return e.create((0,m.filterRegExp)(e.toArray(),t))}})}));function i(e,t){var n=(0,st.maxArgumentCount)(t);return(0,m.filter)(e,(function(e,r,i){return 1===n?t(e):2===n?t(e,[r]):t(e,[r],i)}))}t.createFilter=r})),ut=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFlatten=void 0;var n=["typed","matrix"],r=(0,h.factory)("flatten",n,(function(e){var t=e.typed,n=e.matrix;return t("flatten",{Array:function(e){return(0,m.flatten)((0,a.clone)(e))},Matrix:function(e){var t=(0,m.flatten)((0,a.clone)(e.toArray()));return n(t)}})}));t.createFlatten=r})),lt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createForEach=void 0;var n=["typed"],r=(0,h.factory)("forEach",n,(function(e){return(0,e.typed)("forEach",{"Array, function":i,"Matrix, function":function(e,t){return e.forEach(t)}})}));function i(e,t){var n=(0,st.maxArgumentCount)(t);!function r(i,a){Array.isArray(i)?(0,m.forEach)(i,(function(e,t){r(e,a.concat(t))})):1===n?t(i):2===n?t(i,a):t(i,a,e)}(e,[])}t.createForEach=r})),dt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createGetMatrixDataType=void 0;var n="getMatrixDataType",r=["typed"],a=(0,h.factory)(n,r,(function(e){return(0,e.typed)(n,{Array:function(e){return(0,m.getArrayDataType)(e,i.typeOf)},Matrix:function(e){return e.getDataType()}})}));t.createGetMatrixDataType=a})),ft=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIdentity=void 0;var n=["typed","config","matrix","BigNumber","DenseMatrix","SparseMatrix"],r=(0,h.factory)("identity",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,a=e.BigNumber,o=e.DenseMatrix,s=e.SparseMatrix;return t("identity",{"":function(){return"Matrix"===n.matrix?r([]):[]},string:function(e){return r(e)},"number | BigNumber":function(e){return l(e,e,"Matrix"===n.matrix?"dense":void 0)},"number | BigNumber, string":function(e,t){return l(e,e,t)},"number | BigNumber, number | BigNumber":function(e,t){return l(e,t,"Matrix"===n.matrix?"dense":void 0)},"number | BigNumber, number | BigNumber, string":function(e,t,n){return l(e,t,n)},Array:function(e){return c(e)},"Array, string":function(e,t){return c(e,t)},Matrix:function(e){return c(e.valueOf(),e.storage())},"Matrix, string":function(e,t){return c(e.valueOf(),t)}});function c(e,t){switch(e.length){case 0:return t?r(t):[];case 1:return l(e[0],e[0],t);case 2:return l(e[0],e[1],t);default:throw new Error("Vector containing two values expected")}}function l(e,t,n){var r=(0,i.isBigNumber)(e)||(0,i.isBigNumber)(t)?a:null;if((0,i.isBigNumber)(e)&&(e=e.toNumber()),(0,i.isBigNumber)(t)&&(t=t.toNumber()),!(0,u.isInteger)(e)||e<1)throw new Error("Parameters in function identity must be positive integers");if(!(0,u.isInteger)(t)||t<1)throw new Error("Parameters in function identity must be positive integers");var c=r?new a(1):1,l=r?new r(0):0,d=[e,t];if(n){if("sparse"===n)return s.diagonal(d,c,0,l);if("dense"===n)return o.diagonal(d,c,0,l);throw new TypeError('Unknown matrix type "'.concat(n,'"'))}for(var f=(0,m.resize)([],d,l),p=e<t?e:t,h=0;h<p;h++)f[h][h]=c;return f}}));t.createIdentity=r})),pt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createKron=void 0;var n=["typed","matrix","multiplyScalar"],r=(0,h.factory)("kron",n,(function(e){var t=e.typed,n=e.matrix,r=e.multiplyScalar;return t("kron",{"Matrix, Matrix":function(e,t){return n(i(e.toArray(),t.toArray()))},"Matrix, Array":function(e,t){return n(i(e.toArray(),t))},"Array, Matrix":function(e,t){return n(i(e,t.toArray()))},"Array, Array":i});function i(e,t){if(1===(0,m.arraySize)(e).length&&(e=[e]),1===(0,m.arraySize)(t).length&&(t=[t]),(0,m.arraySize)(e).length>2||(0,m.arraySize)(t).length>2)throw new RangeError("Vectors with dimensions greater then 2 are not supported expected (Size x = "+JSON.stringify(e.length)+", y = "+JSON.stringify(t.length)+")");var n=[],i=[];return e.map((function(e){return t.map((function(t){return i=[],n.push(i),e.map((function(e){return t.map((function(t){return i.push(r(e,t))}))}))}))}))&&n}}));t.createKron=r})),mt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMap=void 0;var n=["typed"],r=(0,h.factory)("map",n,(function(e){return(0,e.typed)("map",{"Array, function":i,"Matrix, function":function(e,t){return e.map(t)}})}));function i(e,t){var n=(0,st.maxArgumentCount)(t);return function r(i,a){return Array.isArray(i)?i.map((function(e,t){return r(e,a.concat(t))})):1===n?t(i):2===n?t(i,a):t(i,a,e)}(e,[])}t.createMap=r})),ht=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDiff=void 0;var n=["typed","matrix","subtract","number"],r=(0,h.factory)("diff",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,a=e.number;return t("diff",{"Array | Matrix":function(e){return(0,i.isMatrix)(e)?n(s(e.toArray())):s(e)},"Array | Matrix, number":function(e,t){if(!(0,u.isInteger)(t))throw new RangeError("Dimension must be a whole number");return(0,i.isMatrix)(e)?n(o(e.toArray(),t)):o(e,t)},"Array | Matrix, BigNumber":function(e,t){return this(e,a(t))}});function o(e,t){if((0,i.isMatrix)(e)&&(e=e.toArray()),!Array.isArray(e))throw RangeError("Array/Matrix does not have that many dimensions");if(t>0){var n=[];return e.forEach((function(e){n.push(o(e,t-1))})),n}if(0===t)return s(e);throw RangeError("Cannot have negative dimension")}function s(e){var t=[],n=e.length;if(n<2)return e;for(var r=1;r<n;r++)t.push(c(e[r-1],e[r]));return t}function c(e,t){(0,i.isMatrix)(e)&&(e=e.toArray()),(0,i.isMatrix)(t)&&(t=t.toArray());var n=Array.isArray(e),a=Array.isArray(t);if(n&&a)return function(e,t){if(e.length!==t.length)throw RangeError("Not all sub-arrays have the same length");for(var n=[],r=e.length,i=0;i<r;i++)n.push(c(e[i],t[i]));return n}(e,t);if(!n&&!a)return r(t,e);throw TypeError("Cannot calculate difference between 1 array and 1 non-array")}}));t.createDiff=r})),yt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createOnes=void 0;var n=["typed","config","matrix","BigNumber"],r=(0,h.factory)("ones",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,a=e.BigNumber;return t("ones",{"":function(){return"Array"===n.matrix?o([]):o([],"default")},"...number | BigNumber | string":function(e){if("string"==typeof e[e.length-1]){var t=e.pop();return o(e,t)}return"Array"===n.matrix?o(e):o(e,"default")},Array:o,Matrix:function(e){var t=e.storage();return o(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return o(e.valueOf(),t)}});function o(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){(0,i.isBigNumber)(e)&&(t=!0,r[n]=e.toNumber())})),t}(e)?new a(1):1;if(function(e){e.forEach((function(e){if("number"!=typeof e||!(0,u.isInteger)(e)||e<0)throw new Error("Parameters in function ones must be positive integers")}))}(e),t){var o=r(t);return e.length>0?o.resize(e,n):o}var s=[];return e.length>0?(0,m.resize)(s,e,n):s}}));t.createOnes=r})),vt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.noBignumber=function(){throw new Error('No "bignumber" implementation available')},t.noFraction=function(){throw new Error('No "fraction" implementation available')},t.noMatrix=function(){throw new Error('No "matrix" implementation available')},t.noIndex=function(){throw new Error('No "index" implementation available')},t.noSubset=function(){throw new Error('No "matrix" implementation available')}})),gt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRange=void 0;var n=["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],r=(0,h.factory)("range",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,i=e.bignumber,a=e.smaller,o=e.smallerEq,s=e.larger,c=e.largerEq;return t("range",{string:l,"string, boolean":l,"number, number":function(e,t){return u(d(e,t,1))},"number, number, number":function(e,t,n){return u(d(e,t,n))},"number, number, boolean":function(e,t,n){return u(n?f(e,t,1):d(e,t,1))},"number, number, number, boolean":function(e,t,n,r){return u(r?f(e,t,n):d(e,t,n))},"BigNumber, BigNumber":function(e,t){return u(p(e,t,new(0,e.constructor)(1)))},"BigNumber, BigNumber, BigNumber":function(e,t,n){return u(p(e,t,n))},"BigNumber, BigNumber, boolean":function(e,t,n){var r=e.constructor;return u(n?m(e,t,new r(1)):p(e,t,new r(1)))},"BigNumber, BigNumber, BigNumber, boolean":function(e,t,n,r){return u(r?m(e,t,n):p(e,t,n))}});function u(e){return"Matrix"===n.matrix?r?r(e):(0,vt.noMatrix)():e}function l(e,t){var r=function(e){var t=e.split(":").map((function(e){return Number(e)}));if(t.some((function(e){return isNaN(e)})))return null;switch(t.length){case 2:return{start:t[0],end:t[1],step:1};case 3:return{start:t[0],end:t[2],step:t[1]};default:return null}}(e);if(!r)throw new SyntaxError('String "'+e+'" is no valid range');return"BigNumber"===n.number?(void 0===i&&(0,vt.noBignumber)(),u((t?m:p)(i(r.start),i(r.end),i(r.step)))):u((t?f:d)(r.start,r.end,r.step))}function d(e,t,n){var r=[],i=e;if(n>0)for(;a(i,t);)r.push(i),i+=n;else if(n<0)for(;s(i,t);)r.push(i),i+=n;return r}function f(e,t,n){var r=[],i=e;if(n>0)for(;o(i,t);)r.push(i),i+=n;else if(n<0)for(;c(i,t);)r.push(i),i+=n;return r}function p(e,t,n){var r=i(0),o=[],c=e;if(n.gt(r))for(;a(c,t);)o.push(c),c=c.plus(n);else if(n.lt(r))for(;s(c,t);)o.push(c),c=c.plus(n);return o}function m(e,t,n){var r=i(0),a=[],s=e;if(n.gt(r))for(;o(s,t);)a.push(s),s=s.plus(n);else if(n.lt(r))for(;c(s,t);)a.push(s),s=s.plus(n);return a}}));t.createRange=r})),bt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createReshape=void 0;var n=["typed","isInteger","matrix"],r=(0,h.factory)("reshape",n,(function(e){var t=e.typed,n=e.isInteger,r=e.matrix;return t("reshape",{"Matrix, Array":function(e,t){return e.reshape?e.reshape(t):r((0,m.reshape)(e.valueOf(),t))},"Array, Array":function(e,t){return t.forEach((function(e){if(!n(e))throw new TypeError("Invalid size for dimension: "+e)})),(0,m.reshape)(e,t)}})}));t.createReshape=r})),xt=t((function(e,t){function n(e,t,r,i){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=r,this.max=i,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+r+(null!=i?"-"+i:"")+" expected)",this.stack=(new Error).stack}Object.defineProperty(t,"__esModule",{value:!0}),t.ArgumentsError=n,n.prototype=new Error,n.prototype.constructor=Error,n.prototype.name="ArgumentsError",n.prototype.isArgumentsError=!0})),Dt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createResize=void 0;var n=["config","matrix"],r=(0,h.factory)("resize",n,(function(e){var t=e.config,n=e.matrix;return function(e,o,s){if(2!==arguments.length&&3!==arguments.length)throw new xt.ArgumentsError("resize",arguments.length,2,3);if((0,i.isMatrix)(o)&&(o=o.valueOf()),(0,i.isBigNumber)(o[0])&&(o=o.map((function(e){return(0,i.isBigNumber)(e)?e.toNumber():e}))),(0,i.isMatrix)(e))return e.resize(o,s,!0);if("string"==typeof e)return r(e,o,s);var c=!Array.isArray(e)&&"Array"!==t.matrix;if(0===o.length){for(;Array.isArray(e);)e=e[0];return(0,a.clone)(e)}Array.isArray(e)||(e=[e]),e=(0,a.clone)(e);var u=(0,m.resize)(e,o,s);return c?n(u):u};function r(e,t,n){if(void 0!==n){if("string"!=typeof n||1!==n.length)throw new TypeError("Single character expected as defaultValue")}else n=" ";if(1!==t.length)throw new f.DimensionError(t.length,1);var r=t[0];if("number"!=typeof r||!(0,u.isInteger)(r))throw new TypeError("Invalid size, must contain positive integers (size: "+(0,d.format)(t)+")");if(e.length>r)return e.substring(0,r);if(e.length<r){for(var i=e,a=0,o=r-e.length;a<o;a++)i+=n;return i}return e}}));t.createResize=r})),_t=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRotate=void 0;var n=["typed","multiply","rotationMatrix"],r=(0,h.factory)("rotate",n,(function(e){var t=e.typed,n=e.multiply,r=e.rotationMatrix;return t("rotate",{"Array , number | BigNumber | Complex | Unit":function(e,t){return i(e,2),n(r(t),e).toArray()},"Matrix , number | BigNumber | Complex | Unit":function(e,t){return i(e,2),n(r(t),e)},"Array, number | BigNumber | Complex | Unit, Array | Matrix":function(e,t,a){return i(e,3),n(r(t,a),e)},"Matrix, number | BigNumber | Complex | Unit, Array | Matrix":function(e,t,a){return i(e,3),n(r(t,a),e)}});function i(e,t){var n=Array.isArray(e)?(0,m.arraySize)(e):e.size();if(n.length>2)throw new RangeError("Vector must be of dimensions 1x".concat(t));if(2===n.length&&1!==n[1])throw new RangeError("Vector must be of dimensions 1x".concat(t));if(n[0]!==t)throw new RangeError("Vector must be of dimensions 1x".concat(t))}}));t.createRotate=r})),wt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRotationMatrix=void 0;var n="rotationMatrix",r=["typed","config","multiplyScalar","addScalar","unaryMinus","norm","matrix","BigNumber","DenseMatrix","SparseMatrix","cos","sin"],a=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,a=e.multiplyScalar,o=e.addScalar,s=e.unaryMinus,c=e.norm,u=e.BigNumber,l=e.matrix,d=e.DenseMatrix,f=e.SparseMatrix,p=e.cos,m=e.sin;return t(n,{"":function(){return"Matrix"===r.matrix?l([]):[]},string:function(e){return l(e)},"number | BigNumber | Complex | Unit":function(e){return h(e,"Matrix"===r.matrix?"dense":void 0)},"number | BigNumber | Complex | Unit, string":function(e,t){return h(e,t)},"number | BigNumber | Complex | Unit, Array":function(e,t){var n=l(t);return y(n),b(e,n,void 0)},"number | BigNumber | Complex | Unit, Matrix":function(e,t){y(t);var n=t.storage()||("Matrix"===r.matrix?"dense":void 0);return b(e,t,n)},"number | BigNumber | Complex | Unit, Array, string":function(e,t,n){var r=l(t);return y(r),b(e,r,n)},"number | BigNumber | Complex | Unit, Matrix, string":function(e,t,n){return y(t),b(e,t,n)}});function h(e,t){var n=(0,i.isBigNumber)(e)?new u(-1):-1,r=p(e),o=m(e);return g([[r,a(n,o)],[o,r]],t)}function y(e){var t=e.size();if(t.length<1||3!==t[0])throw new RangeError("Vector must be of dimensions 1x3")}function v(e){return e.reduce((function(e,t){return a(e,t)}))}function g(e,t){if(t){if("sparse"===t)return new f(e);if("dense"===t)return new d(e);throw new TypeError('Unknown matrix type "'.concat(t,'"'))}return e}function b(e,t,n){var r=c(t);if(0===r)throw new RangeError("Rotation around zero vector");var a=(0,i.isBigNumber)(e)?u:null,l=a?new a(1):1,d=a?new a(-1):-1,f=a?new a(t.get([0])/r):t.get([0])/r,h=a?new a(t.get([1])/r):t.get([1])/r,y=a?new a(t.get([2])/r):t.get([2])/r,b=p(e),x=o(l,s(b)),D=m(e);return g([[o(b,v([f,f,x])),o(v([f,h,x]),v([d,y,D])),o(v([f,y,x]),v([h,D]))],[o(v([f,h,x]),v([y,D])),o(b,v([h,h,x])),o(v([h,y,x]),v([d,f,D]))],[o(v([f,y,x]),v([d,h,D])),o(v([h,y,x]),v([f,D])),o(b,v([y,y,x]))]],n)}}));t.createRotationMatrix=a})),Nt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRow=void 0;var n=["typed","Index","matrix","range"],r=(0,h.factory)("row",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,i=e.range;return t("row",{"Matrix, number":o,"Array, number":function(e,t){return o(r((0,a.clone)(e)),t).valueOf()}});function o(e,t){if(2!==e.size().length)throw new Error("Only two dimensional matrix is supported");(0,m.validateIndex)(t,e.size()[0]);var r=i(0,e.size()[1]),a=new n(t,r);return e.subset(a)}}));t.createRow=r})),Mt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSize=void 0;var n=["typed","config","?matrix"],r=(0,h.factory)("size",n,(function(e){var t=e.typed,n=e.config,r=e.matrix;return t("size",{Matrix:function(e){return e.create(e.size())},Array:m.arraySize,string:function(e){return"Array"===n.matrix?[e.length]:r([e.length])},"number | Complex | BigNumber | Unit | boolean | null":function(e){return"Array"===n.matrix?[]:r?r([]):(0,vt.noMatrix)()}})}));t.createSize=r})),Ot=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSqueeze=void 0;var n=["typed","matrix"],r=(0,h.factory)("squeeze",n,(function(e){var t=e.typed,n=e.matrix;return t("squeeze",{Array:function(e){return(0,m.squeeze)((0,a.clone)(e))},Matrix:function(e){var t=(0,m.squeeze)(e.toArray());return Array.isArray(t)?n(t):t},any:function(e){return(0,a.clone)(e)}})}));t.createSqueeze=r})),St=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){return!(!e||"object"!==n(e))&&(!!(0,a.hasOwnProperty)(s,t)||!(t in Object.prototype)&&!(t in Function.prototype))}function i(e,t){return null!=e&&"function"==typeof e[t]&&(!((0,a.hasOwnProperty)(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e))&&(!!(0,a.hasOwnProperty)(c,t)||!(t in Object.prototype)&&!(t in Function.prototype)))}function o(e){return"object"===n(e)&&e&&e.constructor===Object}Object.defineProperty(t,"__esModule",{value:!0}),t.getSafeProperty=function(e,t){if(o(e)&&r(e,t))return e[t];if("function"==typeof e[t]&&i(e,t))throw new Error('Cannot access method "'+t+'" as a property');throw new Error('No access to property "'+t+'"')},t.setSafeProperty=function(e,t,n){if(o(e)&&r(e,t))return e[t]=n,n;throw new Error('No access to property "'+t+'"')},t.isSafeProperty=r,t.validateSafeMethod=function(e,t){if(!i(e,t))throw new Error('No access to method "'+t+'"')},t.isSafeMethod=i,t.isPlainObject=o;var s={length:!0,name:!0},c={toString:!0,valueOf:!0,toLocaleString:!0}})),Pt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSubset=void 0;var n=["typed","matrix"],r=(0,h.factory)("subset",n,(function(e){var t=e.typed,n=e.matrix;return t("subset",{"Array, Index":function(e,t){var r=n(e).subset(t);return t.isScalar()?r:r.valueOf()},"Matrix, Index":function(e,t){return e.subset(t)},"Object, Index":c,"string, Index":o,"Array, Index, any":function(e,t,r){return n((0,a.clone)(e)).subset(t,r,void 0).valueOf()},"Array, Index, any, any":function(e,t,r,i){return n((0,a.clone)(e)).subset(t,r,i).valueOf()},"Matrix, Index, any":function(e,t,n){return e.clone().subset(t,n)},"Matrix, Index, any, any":function(e,t,n,r){return e.clone().subset(t,n,r)},"string, Index, string":s,"string, Index, string, string":s,"Object, Index, any":u})}));function o(e,t){if(!(0,i.isIndex)(t))throw new TypeError("Index expected");if(1!==t.size().length)throw new f.DimensionError(t.size().length,1);var n=e.length;(0,m.validateIndex)(t.min()[0],n),(0,m.validateIndex)(t.max()[0],n);var r=t.dimension(0),a="";return r.forEach((function(t){a+=e.charAt(t)})),a}function s(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Index expected");if(1!==t.size().length)throw new f.DimensionError(t.size().length,1);if(void 0!==r){if("string"!=typeof r||1!==r.length)throw new TypeError("Single character expected as defaultValue")}else r=" ";var i=t.dimension(0);if(i.size()[0]!==n.length)throw new f.DimensionError(i.size()[0],n.length);var a=e.length;(0,m.validateIndex)(t.min()[0]),(0,m.validateIndex)(t.max()[0]);for(var o=[],s=0;s<a;s++)o[s]=e.charAt(s);if(i.forEach((function(e,t){o[e]=n.charAt(t[0])})),o.length>a)for(var c=a-1,u=o.length;c<u;c++)o[c]||(o[c]=r);return o.join("")}function c(e,t){if(1!==t.size().length)throw new f.DimensionError(t.size(),1);var n=t.dimension(0);if("string"!=typeof n)throw new TypeError("String expected as index to retrieve an object property");return(0,St.getSafeProperty)(e,n)}function u(e,t,n){if(1!==t.size().length)throw new f.DimensionError(t.size(),1);var r=t.dimension(0);if("string"!=typeof r)throw new TypeError("String expected as index to retrieve an object property");var i=(0,a.clone)(e);return(0,St.setSafeProperty)(i,r,n),i}t.createSubset=r})),jt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTranspose=void 0;var n=["typed","matrix"],r=(0,h.factory)("transpose",n,(function(e){var t=e.typed,n=e.matrix;return t("transpose",{Array:function(e){return this(n(e)).valueOf()},Matrix:function(e){var t,n=e.size();switch(n.length){case 1:t=e.clone();break;case 2:var r=n[0],i=n[1];if(0===i)throw new RangeError("Cannot transpose a 2D matrix with no columns (size: "+(0,d.format)(n)+")");switch(e.storage()){case"dense":t=function(e,t,n){for(var r,i=e._data,o=[],s=0;s<n;s++){r=o[s]=[];for(var c=0;c<t;c++)r[c]=(0,a.clone)(i[c][s])}return e.createDenseMatrix({data:o,size:[n,t],datatype:e._datatype})}(e,r,i);break;case"sparse":t=function(e,t,n){for(var r,i,o,s=e._values,c=e._index,u=e._ptr,l=s?[]:void 0,d=[],f=[],p=[],m=0;m<t;m++)p[m]=0;for(r=0,i=c.length;r<i;r++)p[c[r]]++;for(var h=0,y=0;y<t;y++)f.push(h),h+=p[y],p[y]=f[y];for(f.push(h),o=0;o<n;o++)for(var v=u[o],g=u[o+1],b=v;b<g;b++){var x=p[c[b]]++;d[x]=o,s&&(l[x]=(0,a.clone)(s[b]))}return e.createSparseMatrix({values:l,index:d,ptr:f,size:[n,t],datatype:e._datatype})}(e,r,i)}break;default:throw new RangeError("Matrix must be a vector or two dimensional (size: "+(0,d.format)(this._size)+")")}return t},any:function(e){return(0,a.clone)(e)}})}));t.createTranspose=r})),At=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCtranspose=void 0;var n=["typed","transpose","conj"],r=(0,h.factory)("ctranspose",n,(function(e){var t=e.typed,n=e.transpose,r=e.conj;return t("ctranspose",{any:function(e){return r(n(e))}})}));t.createCtranspose=r})),Et=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createZeros=void 0;var n=["typed","config","matrix","BigNumber"],r=(0,h.factory)("zeros",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,a=e.BigNumber;return t("zeros",{"":function(){return"Array"===n.matrix?o([]):o([],"default")},"...number | BigNumber | string":function(e){if("string"==typeof e[e.length-1]){var t=e.pop();return o(e,t)}return"Array"===n.matrix?o(e):o(e,"default")},Array:o,Matrix:function(e){var t=e.storage();return o(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return o(e.valueOf(),t)}});function o(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){(0,i.isBigNumber)(e)&&(t=!0,r[n]=e.toNumber())})),t}(e)?new a(0):0;if(function(e){e.forEach((function(e){if("number"!=typeof e||!(0,u.isInteger)(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")}))}(e),t){var o=r(t);return e.length>0?o.resize(e,n):o}var s=[];return e.length>0?(0,m.resize)(s,e,n):s}}));t.createZeros=r})),Ct=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createErf=void 0;var n=["typed"],r=(0,h.factory)("erf",n,(function(e){return(0,e.typed)("name",{number:function(e){var t=Math.abs(e);return t>=c?(0,u.sign)(e):t<=i?(0,u.sign)(e)*function(e){var t,n=e*e,r=o[0][4]*n,i=n;for(t=0;t<3;t+=1)r=(r+o[0][t])*n,i=(i+s[0][t])*n;return e*(r+o[0][3])/(i+s[0][3])}(t):t<=4?(0,u.sign)(e)*(1-function(e){var t,n=o[1][8]*e,r=e;for(t=0;t<7;t+=1)n=(n+o[1][t])*e,r=(r+s[1][t])*e;var i=(n+o[1][7])/(r+s[1][7]),a=parseInt(16*e)/16,c=(e-a)*(e+a);return Math.exp(-a*a)*Math.exp(-c)*i}(t)):(0,u.sign)(e)*(1-function(e){var t,n=1/(e*e),r=o[2][5]*n,i=n;for(t=0;t<4;t+=1)r=(r+o[2][t])*n,i=(i+s[2][t])*n;var c=n*(r+o[2][4])/(i+s[2][4]);c=(a-c)/e,n=parseInt(16*e)/16;var u=(e-n)*(e+n);return Math.exp(-n*n)*Math.exp(-u)*c}(t))},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createErf=r;var i=.46875,a=.5641895835477563,o=[[3.1611237438705655,113.86415415105016,377.485237685302,3209.3775891384694,.18577770618460315],[.5641884969886701,8.883149794388377,66.11919063714163,298.6351381974001,881.952221241769,1712.0476126340707,2051.0783778260716,1230.3393547979972,2.1531153547440383e-8],[.30532663496123236,.36034489994980445,.12578172611122926,.016083785148742275,.0006587491615298378,.016315387137302097]],s=[[23.601290952344122,244.02463793444417,1282.6165260773723,2844.236833439171],[15.744926110709835,117.6939508913125,537.1811018620099,1621.3895745666903,3290.7992357334597,4362.619090143247,3439.3676741437216,1230.3393548037495],[2.568520192289822,1.8729528499234604,.5279051029514285,.06051834131244132,.0023352049762686918]],c=Math.pow(2,53)})),Tt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMode=void 0;var n=["typed","isNaN","isNumeric"],r=(0,h.factory)("mode",n,(function(e){var t=e.typed,n=e.isNaN,r=e.isNumeric;return t("mode",{"Array | Matrix":i,"...":function(e){return i(e)}});function i(e){if(0===(e=(0,m.flatten)(e.valueOf())).length)throw new Error("Cannot calculate mode of an empty array");for(var t={},i=[],a=0,o=0;o<e.length;o++){var s=e[o];if(r(s)&&n(s))throw new Error("Cannot calculate mode of an array containing NaN values");s in t||(t[s]=0),t[s]++,t[s]===a?i.push(s):t[s]>a&&(a=t[s],i=[s])}return i}}));t.createMode=r})),kt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.improveErrorMessage=function(e,t,n){var r;if(-1!==String(e).indexOf("Unexpected type"))return r=arguments.length>2?" (type: "+(0,i.typeOf)(n)+", value: "+JSON.stringify(n)+")":" (type: "+e.data.actual+")",new TypeError("Cannot calculate "+t+", unexpected type of argument"+r);if(-1!==String(e).indexOf("complex numbers"))return r=arguments.length>2?" (type: "+(0,i.typeOf)(n)+", value: "+JSON.stringify(n)+")":"",new TypeError("Cannot calculate "+t+", no ordering relation is defined for complex numbers"+r);return e}})),It=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createProd=void 0;var n=["typed","config","multiplyScalar","numeric"],r=(0,h.factory)("prod",n,(function(e){var t=e.typed,n=e.config,r=e.multiplyScalar,i=e.numeric;return t("prod",{"Array | Matrix":a,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("prod(A, dim) is not yet supported")},"...":function(e){return a(e)}});function a(e){var t;if((0,P.deepForEach)(e,(function(e){try{t=void 0===t?e:r(t,e)}catch(t){throw(0,kt.improveErrorMessage)(t,"prod",e)}})),"string"==typeof t&&(t=i(t,n.number)),void 0===t)throw new Error("Cannot calculate prod of an empty array");return t}}));t.createProd=r})),Bt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFormat=void 0;var n=["typed"],r=(0,h.factory)("format",n,(function(e){return(0,e.typed)("format",{any:d.format,"any, Object | function | number":d.format})}));t.createFormat=r})),zt=t((function(e,t){function n(e){var t={2:"0b",8:"0o",16:"0x"}[e];return function(n){if(n>Math.pow(2,31)-1||n<-Math.pow(2,31))throw new Error("Value must be in range [-2^31, 2^31-1]");if(!(0,u.isInteger)(n))throw new Error("Value must be an integer");return n<0&&(n+=Math.pow(2,32)),"".concat(t).concat(n.toString(e))}}Object.defineProperty(t,"__esModule",{value:!0}),t.createBaseFormatterFactory=function(e,t){return(0,h.factory)(e,r,(function(r){return(0,r.typed)(e,{number:n(t)})}))};var r=["typed"]})),Rt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBin=void 0;var n=(0,zt.createBaseFormatterFactory)("bin",2);t.createBin=n})),qt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createOct=void 0;var n=(0,zt.createBaseFormatterFactory)("oct",8);t.createOct=n})),Ft=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createHex=void 0;var n=(0,zt.createBaseFormatterFactory)("hex",16);t.createHex=n})),Ut=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createPrint=void 0;var n=["typed"],r=(0,h.factory)("print",n,(function(e){return(0,e.typed)("print",{"string, Object | Array":a,"string, Object | Array, number | Object":a})}));function a(e,t,n){return e.replace(/\$([\w.]+)/g,(function(e,r){for(var a=r.split("."),o=t[a.shift()];a.length&&void 0!==o;){var s=a.shift();o=s?o[s]:o+"."}return void 0!==o?(0,i.isString)(o)?o:(0,d.format)(o,n):e}))}t.createPrint=r})),Lt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTo=void 0;var n=["typed","matrix"],r=(0,h.factory)("to",n,(function(e){var t=e.typed,n=e.matrix,r=(0,we.createAlgorithm13)({typed:t}),i=(0,pe.createAlgorithm14)({typed:t});return t("to",{"Unit, Unit | string":function(e,t){return e.to(t)},"Matrix, Matrix":function(e,t){return r(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"Matrix, any":function(e,t){return i(e,t,this,!1)},"any, Matrix":function(e,t){return i(t,e,this,!0)},"Array, any":function(e,t){return i(n(e),t,this,!1).valueOf()},"any, Array":function(e,t){return i(n(t),e,this,!0).valueOf()}})}));t.createTo=r})),Ht=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIsPrime=void 0;var n=["typed"],r=(0,h.factory)("isPrime",n,(function(e){return(0,e.typed)("isPrime",{number:function(e){if(0*e!=0)return!1;if(e<=3)return e>1;if(e%2==0||e%3==0)return!1;for(var t=5;t*t<=e;t+=6)if(e%t==0||e%(t+2)==0)return!1;return!0},BigNumber:function(e){if(0*e.toNumber()!=0)return!1;if(e.lte(3))return e.gt(1);if(e.mod(2).eq(0)||e.mod(3).eq(0))return!1;for(var t=5;e.gte(t*t);t+=6)if(e.mod(t).eq(0)||e.mod(t+2).eq(0))return!1;return!0},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsPrime=r})),Zt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createNumeric=void 0;var n=["number","?bignumber","?fraction"],r=(0,h.factory)("numeric",n,(function(e){var t=e.number,n=e.bignumber,r=e.fraction,a={string:!0,number:!0,BigNumber:!0,Fraction:!0},o={number:function(e){return t(e)},BigNumber:n?function(e){return n(e)}:vt.noBignumber,Fraction:r?function(e){return r(e)}:vt.noFraction};return function(e,t){var n=(0,i.typeOf)(e);if(!(n in a))throw new TypeError("Cannot convert "+e+' of type "'+n+'"; valid input types are '+Object.keys(a).join(", "));if(!(t in o))throw new TypeError("Cannot convert "+e+' to type "'+t+'"; valid output types are '+Object.keys(o).join(", "));return t===n?e:o[t](e)}}));t.createNumeric=r})),Vt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDivideScalar=void 0;var n=["typed","numeric"],r=(0,h.factory)("divideScalar",n,(function(e){var t=e.typed,n=e.numeric;return t("divideScalar",{"number, number":function(e,t){return e/t},"Complex, Complex":function(e,t){return e.div(t)},"BigNumber, BigNumber":function(e,t){return e.div(t)},"Fraction, Fraction":function(e,t){return e.div(t)},"Unit, number | Fraction | BigNumber":function(e,t){var r=e.clone(),a=n(1,(0,i.typeOf)(t));return r.value=this(null===r.value?r._normalize(a):r.value,t),r},"number | Fraction | BigNumber, Unit":function(e,t){var r=t.clone();r=r.pow(-1);var a=n(1,(0,i.typeOf)(e));return r.value=this(e,null===t.value?t._normalize(a):t.value),r},"Unit, Unit":function(e,t){return e.divide(t)}})}));t.createDivideScalar=r})),Wt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createPow=void 0;var n=["typed","config","identity","multiply","matrix","fraction","number","Complex"],r=(0,h.factory)("pow",n,(function(e){var t=e.typed,n=e.config,r=e.identity,i=e.multiply,a=e.matrix,o=e.number,s=e.fraction,c=e.Complex;return t("pow",{"number, number":l,"Complex, Complex":function(e,t){return e.pow(t)},"BigNumber, BigNumber":function(e,t){return t.isInteger()||e>=0||n.predictable?e.pow(t):new c(e.toNumber(),0).pow(t.toNumber(),0)},"Fraction, Fraction":function(e,t){if(1!==t.d){if(n.predictable)throw new Error("Function pow does not support non-integer exponents for fractions.");return l(e.valueOf(),t.valueOf())}return e.pow(t)},"Array, number":d,"Array, BigNumber":function(e,t){return d(e,t.toNumber())},"Matrix, number":f,"Matrix, BigNumber":function(e,t){return f(e,t.toNumber())},"Unit, number | BigNumber":function(e,t){return e.pow(t)}});function l(e,t){if(n.predictable&&!(0,u.isInteger)(t)&&e<0)try{var r=s(t),i=o(r);if((t===i||Math.abs((t-i)/t)<1e-14)&&r.d%2==1)return(r.n%2==0?1:-1)*Math.pow(-e,t)}catch(e){}return n.predictable&&(e<-1&&t===1/0||e>-1&&e<0&&t===-1/0)?NaN:(0,u.isInteger)(t)||e>=0||n.predictable?(0,F.powNumber)(e,t):e*e<1&&t===1/0||e*e>1&&t===-1/0?0:new c(e,0).pow(t,0)}function d(e,t){if(!(0,u.isInteger)(t)||t<0)throw new TypeError("For A^b, b must be a positive integer (value is "+t+")");var n=(0,m.arraySize)(e);if(2!==n.length)throw new Error("For A^b, A must be 2 dimensional (A has "+n.length+" dimensions)");if(n[0]!==n[1])throw new Error("For A^b, A must be square (size is "+n[0]+"x"+n[1]+")");for(var a=r(n[0]).valueOf(),o=e;t>=1;)1==(1&t)&&(a=i(o,a)),t>>=1,o=i(o,o);return a}function f(e,t){return a(d(e.valueOf(),t))}}));t.createPow=r})),Gt=t((function(e,t){function n(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function r(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0}),t.createRoundNumber=t.createRound=void 0;var a="Number of decimals in function round must be an integer",o=["typed","matrix","equalScalar","zeros","BigNumber","DenseMatrix"],s=(0,h.factory)("round",o,(function(e){var t=e.typed,n=e.matrix,i=e.equalScalar,o=e.zeros,s=e.BigNumber,u=e.DenseMatrix,l=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),d=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:u}),f=(0,pe.createAlgorithm14)({typed:t});return t("round",r(r({},c),{},{Complex:function(e){return e.round()},"Complex, number":function(e,t){if(t%1)throw new TypeError(a);return e.round(t)},"Complex, BigNumber":function(e,t){if(!t.isInteger())throw new TypeError(a);var n=t.toNumber();return e.round(n)},"number, BigNumber":function(e,t){if(!t.isInteger())throw new TypeError(a);return new s(e).toDecimalPlaces(t.toNumber())},BigNumber:function(e){return e.toDecimalPlaces(0)},"BigNumber, BigNumber":function(e,t){if(!t.isInteger())throw new TypeError(a);return e.toDecimalPlaces(t.toNumber())},Fraction:function(e){return e.round()},"Fraction, number":function(e,t){if(t%1)throw new TypeError(a);return e.round(t)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)},"SparseMatrix, number | BigNumber":function(e,t){return l(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return f(e,t,this,!1)},"number | Complex | BigNumber, SparseMatrix":function(e,t){return i(e,0)?o(t.size(),t.storage()):d(t,e,this,!0)},"number | Complex | BigNumber, DenseMatrix":function(e,t){return i(e,0)?o(t.size(),t.storage()):f(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return f(n(e),t,this,!1).valueOf()},"number | Complex | BigNumber, Array":function(e,t){return f(n(t),e,this,!0).valueOf()}}))}));t.createRound=s;var c={number:F.roundNumber,"number, number":function(e,t){if(!(0,u.isInteger)(t))throw new TypeError(a);if(t<0||t>15)throw new Error("Number of decimals in function round must be in te range of 0-15");return(0,F.roundNumber)(e,t)}},l=(0,h.factory)("round",["typed"],(function(e){return(0,e.typed)("round",c)}));t.createRoundNumber=l})),$t=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLog=void 0;var n=["config","typed","divideScalar","Complex"],r=(0,h.factory)("log",n,(function(e){var t=e.typed,n=e.config,r=e.divideScalar,i=e.Complex;return t("log",{number:function(e){return e>=0||n.predictable?(0,F.logNumber)(e):new i(e,0).log()},Complex:function(e){return e.log()},BigNumber:function(e){return!e.isNegative()||n.predictable?e.ln():new i(e.toNumber(),0).log()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)},"any, any":function(e,t){return r(this(e),this(t))}})}));t.createLog=r})),Qt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLog1p=void 0;var n=["typed","config","divideScalar","log","Complex"],r=(0,h.factory)("log1p",n,(function(e){var t=e.typed,n=e.config,r=e.divideScalar,i=e.log,a=e.Complex;return t("log1p",{number:function(e){return e>=-1||n.predictable?(0,u.log1p)(e):o(new a(e,0))},Complex:o,BigNumber:function(e){var t=e.plus(1);return!t.isNegative()||n.predictable?t.ln():o(new a(e.toNumber(),0))},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)},"any, any":function(e,t){return r(this(e),i(t))}});function o(e){var t=e.re+1;return new a(Math.log(Math.sqrt(t*t+e.im*e.im)),Math.atan2(e.im,t))}}));t.createLog1p=r})),Xt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createNthRoots=void 0;var n=["config","typed","divideScalar","Complex"],r=(0,h.factory)("nthRoots",n,(function(e){var t=e.typed,n=(e.config,e.divideScalar,e.Complex),r=[function(e){return new n(e,0)},function(e){return new n(0,e)},function(e){return new n(-e,0)},function(e){return new n(0,-e)}];function i(e,t){if(t<0)throw new Error("Root must be greater than zero");if(0===t)throw new Error("Root must be non-zero");if(t%1!=0)throw new Error("Root must be an integer");if(0===e||0===e.abs())return[new n(0,0)];var i,a="number"==typeof e;(a||0===e.re||0===e.im)&&(i=a?2*+(e<0):0===e.im?2*+(e.re<0):2*+(e.im<0)+1);for(var o=e.arg(),s=e.abs(),c=[],u=Math.pow(s,1/t),l=0;l<t;l++){var d=(i+4*l)/t;d!==Math.round(d)?c.push(new n({r:u,phi:(o+2*Math.PI*l)/t})):c.push(r[d%4](u))}return c}return t("nthRoots",{Complex:function(e){return i(e,2)},"Complex, number":i})}));t.createNthRoots=r})),Yt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDotPow=void 0;var n=["typed","equalScalar","matrix","pow","DenseMatrix"],r=(0,h.factory)("dotPow",n,(function(e){var t=e.typed,n=e.equalScalar,r=e.matrix,i=e.pow,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,fe.createAlgorithm11)({typed:t,equalScalar:n}),u=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t("dotPow",{"any, any":i,"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,i,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,i,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,i,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,i)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return u(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(r(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(r(t),e,this,!0).valueOf()}})}));t.createDotPow=r})),Jt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDotDivide=void 0;var n=["typed","matrix","equalScalar","divideScalar","DenseMatrix"],r=(0,h.factory)("dotDivide",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.divideScalar,a=e.DenseMatrix,o=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),s=(0,Ae.createAlgorithm03)({typed:t}),c=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),u=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),l=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),d=(0,we.createAlgorithm13)({typed:t}),f=(0,pe.createAlgorithm14)({typed:t});return t("dotDivide",{"any, any":i,"SparseMatrix, SparseMatrix":function(e,t){return c(e,t,i,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,i,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,i,!1)},"DenseMatrix, DenseMatrix":function(e,t){return d(e,t,i)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return u(e,t,i,!1)},"DenseMatrix, any":function(e,t){return f(e,t,i,!1)},"any, SparseMatrix":function(e,t){return l(t,e,i,!0)},"any, DenseMatrix":function(e,t){return f(t,e,i,!0)},"Array, any":function(e,t){return f(n(e),t,i,!1).valueOf()},"any, Array":function(e,t){return f(n(t),e,i,!0).valueOf()}})}));t.createDotDivide=r})),Kt=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSolveValidation=function(e){var t=e.DenseMatrix;return function(e,n,r){var a=e.size();if(2!==a.length)throw new RangeError("Matrix must be two dimensional (size: "+(0,d.format)(a)+")");var o=a[0];if(o!==a[1])throw new RangeError("Matrix must be square (size: "+(0,d.format)(a)+")");var s=[];if((0,i.isMatrix)(n)){var c=n.size(),u=n._data;if(1===c.length){if(c[0]!==o)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(var l=0;l<o;l++)s[l]=[u[l]];return new t({data:s,size:[o,1],datatype:n._datatype})}if(2===c.length){if(c[0]!==o||1!==c[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");if((0,i.isDenseMatrix)(n)){if(r){s=[];for(var f=0;f<o;f++)s[f]=[u[f][0]];return new t({data:s,size:[o,1],datatype:n._datatype})}return n}if((0,i.isSparseMatrix)(n)){for(var p=0;p<o;p++)s[p]=[0];for(var h=n._values,y=n._index,v=n._ptr,g=v[1],b=v[0];b<g;b++){s[y[b]][0]=h[b]}return new t({data:s,size:[o,1],datatype:n._datatype})}}throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.")}if((0,i.isArray)(n)){var x=(0,m.arraySize)(n);if(1===x.length){if(x[0]!==o)throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(var D=0;D<o;D++)s[D]=[n[D]];return new t({data:s,size:[o,1]})}if(2===x.length){if(x[0]!==o||1!==x[1])throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");for(var _=0;_<o;_++)s[_]=[n[_][0]];return new t({data:s,size:[o,1]})}throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.")}}}})),en=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLsolve=void 0;var n=["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],r=(0,h.factory)("lsolve",n,(function(e){var t=e.typed,n=e.matrix,r=e.divideScalar,i=e.multiplyScalar,a=e.subtract,o=e.equalScalar,s=e.DenseMatrix,c=(0,Kt.createSolveValidation)({DenseMatrix:s});return t("lsolve",{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=e._values,f=e._index,p=e._ptr,m=[],h=0;h<l;h++){var y=n[h][0]||0;if(o(y,0))m[h]=[0];else{for(var v=0,g=[],b=[],x=p[h],D=p[h+1],_=x;_<D;_++){var w=f[_];w===h?v=d[_]:w>h&&(g.push(d[_]),b.push(w))}if(o(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var N=r(y,v),M=0,O=b.length;M<O;M++){var S=b[M];n[S]=[a(n[S][0]||0,i(N,g[M]))]}m[h]=[N]}}return new s({data:m,size:[u,1]})}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return u(e,t)},"Array, Array | Matrix":function(e,t){return u(n(e),t).valueOf()}});function u(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=[],f=e._data,p=0;p<l;p++){var m=n[p][0]||0,h=void 0;if(o(m,0))h=0;else{var y=f[p][p];if(o(y,0))throw new Error("Linear system cannot be solved since matrix is singular");h=r(m,y);for(var v=p+1;v<u;v++)n[v]=[a(n[v][0]||0,i(h,f[v][p]))]}d[p]=[h]}return new s({data:d,size:[u,1]})}}));t.createLsolve=r})),tn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUsolve=void 0;var n=["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],r=(0,h.factory)("usolve",n,(function(e){var t=e.typed,n=e.matrix,r=e.divideScalar,i=e.multiplyScalar,a=e.subtract,o=e.equalScalar,s=e.DenseMatrix,c=(0,Kt.createSolveValidation)({DenseMatrix:s});return t("usolve",{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=e._values,f=e._index,p=e._ptr,m=[],h=l-1;h>=0;h--){var y=n[h][0]||0;if(o(y,0))m[h]=[0];else{for(var v=0,g=[],b=[],x=p[h],D=p[h+1]-1;D>=x;D--){var _=f[D];_===h?v=d[D]:_<h&&(g.push(d[D]),b.push(_))}if(o(v,0))throw new Error("Linear system cannot be solved since matrix is singular");for(var w=r(y,v),N=0,M=b.length;N<M;N++){var O=b[N];n[O]=[a(n[O][0],i(w,g[N]))]}m[h]=[w]}}return new s({data:m,size:[u,1]})}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return u(e,t)},"Array, Array | Matrix":function(e,t){return u(n(e),t).valueOf()}});function u(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=[],f=e._data,p=l-1;p>=0;p--){var m=n[p][0]||0,h=void 0;if(o(m,0))h=0;else{var y=f[p][p];if(o(y,0))throw new Error("Linear system cannot be solved since matrix is singular");h=r(m,y);for(var v=p-1;v>=0;v--)n[v]=[a(n[v][0]||0,i(h,f[v][p]))]}d[p]=[h]}return new s({data:d,size:[u,1]})}}));t.createUsolve=r})),nn=t((function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,"__esModule",{value:!0}),t.createLsolveAll=void 0;var i=["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],a=(0,h.factory)("lsolveAll",i,(function(e){var t=e.typed,r=e.matrix,i=e.divideScalar,a=e.multiplyScalar,o=e.subtract,s=e.equalScalar,c=e.DenseMatrix,u=(0,Kt.createSolveValidation)({DenseMatrix:c});return t("lsolveAll",{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._size[0],d=e._size[1],f=e._values,p=e._index,m=e._ptr,h=0;h<d;h++)for(var y=r.length,v=0;v<y;v++){for(var g=r[v],b=[],x=[],D=m[h],_=m[h+1],w=0,N=D;N<_;N++){var M=p[N];M===h?w=f[N]:M>h&&(b.push(f[N]),x.push(M))}if(s(w,0))if(s(g[h],0)){if(0===v){var O=n(g);O[h]=1;for(var S=0,P=x.length;S<P;S++){var j=x[S];O[j]=o(O[j],b[S])}r.push(O)}}else{if(0===v)return[];r.splice(v,1),v-=1,y-=1}else{g[h]=i(g[h],w);for(var A=0,E=x.length;A<E;A++){var C=x[A];g[C]=o(g[C],a(g[h],b[A]))}}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[l,1]})}))}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return l(e,t)},"Array, Array | Matrix":function(e,t){return l(r(e),t).map((function(e){return e.valueOf()}))}});function l(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._data,d=e._size[0],f=e._size[1],p=0;p<f;p++)for(var m=r.length,h=0;h<m;h++){var y=r[h];if(s(l[p][p],0))if(s(y[p],0)){if(0===h){var v=n(y);v[p]=1;for(var g=p+1;g<f;g++)v[g]=o(v[g],l[g][p]);r.push(v)}}else{if(0===h)return[];r.splice(h,1),h-=1,m-=1}else{y[p]=i(y[p],l[p][p]);for(var b=p+1;b<f;b++)y[b]=o(y[b],a(y[p],l[b][p]))}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[d,1]})}))}}));t.createLsolveAll=a})),rn=t((function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,"__esModule",{value:!0}),t.createUsolveAll=void 0;var i=["typed","matrix","divideScalar","multiplyScalar","subtract","equalScalar","DenseMatrix"],a=(0,h.factory)("usolveAll",i,(function(e){var t=e.typed,r=e.matrix,i=e.divideScalar,a=e.multiplyScalar,o=e.subtract,s=e.equalScalar,c=e.DenseMatrix,u=(0,Kt.createSolveValidation)({DenseMatrix:c});return t("usolveAll",{"SparseMatrix, Array | Matrix":function(e,t){return function(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._size[0],d=e._size[1],f=e._values,p=e._index,m=e._ptr,h=d-1;h>=0;h--)for(var y=r.length,v=0;v<y;v++){for(var g=r[v],b=[],x=[],D=m[h],_=m[h+1],w=0,N=_-1;N>=D;N--){var M=p[N];M===h?w=f[N]:M<h&&(b.push(f[N]),x.push(M))}if(s(w,0))if(s(g[h],0)){if(0===v){var O=n(g);O[h]=1;for(var S=0,P=x.length;S<P;S++){var j=x[S];O[j]=o(O[j],b[S])}r.push(O)}}else{if(0===v)return[];r.splice(v,1),v-=1,y-=1}else{g[h]=i(g[h],w);for(var A=0,E=x.length;A<E;A++){var C=x[A];g[C]=o(g[C],a(g[h],b[A]))}}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[l,1]})}))}(e,t)},"DenseMatrix, Array | Matrix":function(e,t){return l(e,t)},"Array, Array | Matrix":function(e,t){return l(r(e),t).map((function(e){return e.valueOf()}))}});function l(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._data,d=e._size[0],f=e._size[1]-1;f>=0;f--)for(var p=r.length,m=0;m<p;m++){var h=r[m];if(s(l[f][f],0))if(s(h[f],0)){if(0===m){var y=n(h);y[f]=1;for(var v=f-1;v>=0;v--)y[v]=o(y[v],l[v][f]);r.push(y)}}else{if(0===m)return[];r.splice(m,1),m-=1,p-=1}else{h[f]=i(h[f],l[f][f]);for(var g=f-1;g>=0;g--)h[g]=o(h[g],a(h[f],l[g][f]))}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[d,1]})}))}}));t.createUsolveAll=a})),an=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAlgorithm08=void 0;var n=["typed","equalScalar"],r=(0,h.factory)("algorithm08",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError("Dimension mismatch. Matrix A ("+c+") must match Matrix B ("+m+")");if(!a||!l)throw new Error("Cannot perform operation on Pattern Sparse Matrices");var y,v=c[0],g=c[1],b=n,x=0,D=i;"string"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));for(var _,w,N,M,O=[],S=[],P=[],j=[],A=[],E=0;E<g;E++){P[E]=S.length;var C=E+1;for(w=s[E],N=s[E+1],_=w;_<N;_++)A[M=o[_]]=C,j[M]=a[_],S.push(M);for(w=p[E],N=p[E+1],_=w;_<N;_++)A[M=d[_]]===C&&(j[M]=D(j[M],l[_]));for(_=P[E];_<S.length;){var T=j[M=S[_]];b(T,x)?S.splice(_,1):(O.push(T),_++)}}return P[g]=S.length,e.createSparseMatrix({values:O,index:S,ptr:P,size:[v,g],datatype:y})}}));t.createAlgorithm08=r})),on=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLeftShift=void 0;var n=["typed","matrix","equalScalar","zeros","DenseMatrix"],r=(0,h.factory)("leftShift",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.zeros,a=e.DenseMatrix,o=(0,xe.createAlgorithm01)({typed:t}),s=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),c=(0,an.createAlgorithm08)({typed:t,equalScalar:r}),u=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:a}),l=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),d=(0,we.createAlgorithm13)({typed:t}),f=(0,pe.createAlgorithm14)({typed:t});return t("leftShift",{"number, number":F.leftShiftNumber,"BigNumber, BigNumber":Ze.leftShiftBigNumber,"SparseMatrix, SparseMatrix":function(e,t){return c(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return d(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():l(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return r(t,0)?e.clone():f(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return r(e,0)?i(t.size(),t.storage()):u(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return r(e,0)?i(t.size(),t.storage()):f(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(n(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,n(t)).valueOf()}})}));t.createLeftShift=r})),sn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRightArithShift=void 0;var n="rightArithShift",r=["typed","matrix","equalScalar","zeros","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=e.equalScalar,a=e.zeros,o=e.DenseMatrix,s=(0,xe.createAlgorithm01)({typed:t}),c=(0,Me.createAlgorithm02)({typed:t,equalScalar:i}),u=(0,an.createAlgorithm08)({typed:t,equalScalar:i}),l=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:o}),d=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),f=(0,we.createAlgorithm13)({typed:t}),p=(0,pe.createAlgorithm14)({typed:t});return t(n,{"number, number":F.rightArithShiftNumber,"BigNumber, BigNumber":Ze.rightArithShiftBigNumber,"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return c(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return f(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, number | BigNumber":function(e,t){return i(t,0)?e.clone():d(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return i(t,0)?e.clone():p(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return i(e,0)?a(t.size(),t.storage()):l(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return i(e,0)?a(t.size(),t.storage()):p(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(r(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,r(t)).valueOf()}})}));t.createRightArithShift=i})),cn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRightLogShift=void 0;var n="rightLogShift",r=["typed","matrix","equalScalar","zeros","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=e.equalScalar,a=e.zeros,o=e.DenseMatrix,s=(0,xe.createAlgorithm01)({typed:t}),c=(0,Me.createAlgorithm02)({typed:t,equalScalar:i}),u=(0,an.createAlgorithm08)({typed:t,equalScalar:i}),l=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:o}),d=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),f=(0,we.createAlgorithm13)({typed:t}),p=(0,pe.createAlgorithm14)({typed:t});return t(n,{"number, number":F.rightLogShiftNumber,"SparseMatrix, SparseMatrix":function(e,t){return u(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return c(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return f(e,t,this)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, number | BigNumber":function(e,t){return i(t,0)?e.clone():d(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return i(t,0)?e.clone():p(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return i(e,0)?a(t.size(),t.storage()):l(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return i(e,0)?a(t.size(),t.storage()):p(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return this(r(e),t).valueOf()},"number | BigNumber, Array":function(e,t){return this(e,r(t)).valueOf()}})}));t.createRightLogShift=i})),un=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAnd=void 0;var n=["typed","matrix","equalScalar","zeros","not"],r=(0,h.factory)("and",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.zeros,a=e.not,o=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),s=(0,Oe.createAlgorithm06)({typed:t,equalScalar:r}),c=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),u=(0,we.createAlgorithm13)({typed:t}),l=(0,pe.createAlgorithm14)({typed:t});return t("and",{"number, number":F.andNumber,"Complex, Complex":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},"BigNumber, BigNumber":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},"Unit, Unit":function(e,t){return this(e.value||0,t.value||0)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return u(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return a(t)?i(e.size(),e.storage()):c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return a(t)?i(e.size(),e.storage()):l(e,t,this,!1)},"any, SparseMatrix":function(e,t){return a(e)?i(e.size(),e.storage()):c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return a(e)?i(e.size(),e.storage()):l(t,e,this,!0)},"Array, any":function(e,t){return this(n(e),t).valueOf()},"any, Array":function(e,t){return this(e,n(t)).valueOf()}})}));t.createAnd=r})),ln=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCompareNumber=t.createCompare=void 0;var n="compare",r=["typed","config","matrix","equalScalar","BigNumber","Fraction","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.equalScalar,a=e.matrix,o=e.BigNumber,s=e.Fraction,c=e.DenseMatrix,l=(0,Ae.createAlgorithm03)({typed:t}),d=(0,Ee.createAlgorithm05)({typed:t,equalScalar:i}),f=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:c}),p=(0,we.createAlgorithm13)({typed:t}),m=(0,pe.createAlgorithm14)({typed:t});return t(n,{"boolean, boolean":function(e,t){return e===t?0:e>t?1:-1},"number, number":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)?0:e>t?1:-1},"BigNumber, BigNumber":function(e,t){return(0,$.nearlyEqual)(e,t,r.epsilon)?new o(0):new o(e.cmp(t))},"Fraction, Fraction":function(e,t){return new s(e.compare(t))},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return d(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return l(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return l(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return p(e,t,this)},"Array, Array":function(e,t){return this(a(e),a(t)).valueOf()},"Array, Matrix":function(e,t){return this(a(e),t)},"Matrix, Array":function(e,t){return this(e,a(t))},"SparseMatrix, any":function(e,t){return f(e,t,this,!1)},"DenseMatrix, any":function(e,t){return m(e,t,this,!1)},"any, SparseMatrix":function(e,t){return f(t,e,this,!0)},"any, DenseMatrix":function(e,t){return m(t,e,this,!0)},"Array, any":function(e,t){return m(a(e),t,this,!1).valueOf()},"any, Array":function(e,t){return m(a(t),e,this,!0).valueOf()}})}));t.createCompare=i;var a=(0,h.factory)(n,["typed","config"],(function(e){var t=e.typed,r=e.config;return t(n,{"number, number":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)?0:e>t?1:-1}})}));t.createCompareNumber=a})),dn=function e(t,n){var r,i,a=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,o=/(^[ ]*|[ ]*$)/g,s=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,c=/^0x[0-9a-f]+$/i,u=/^0/,l=function(t){return e.insensitive&&(""+t).toLowerCase()||""+t},d=l(t).replace(o,"")||"",f=l(n).replace(o,"")||"",p=d.replace(a,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),m=f.replace(a,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),h=parseInt(d.match(c),16)||1!==p.length&&d.match(s)&&Date.parse(d),y=parseInt(f.match(c),16)||h&&f.match(s)&&Date.parse(f)||null;if(y){if(h<y)return-1;if(h>y)return 1}for(var v=0,g=Math.max(p.length,m.length);v<g;v++){if(r=!(p[v]||"").match(u)&&parseFloat(p[v])||p[v]||0,i=!(m[v]||"").match(u)&&parseFloat(m[v])||m[v]||0,isNaN(r)!==isNaN(i))return isNaN(r)?1:-1;if(typeof r!=typeof i&&(r+="",i+=""),r<i)return-1;if(r>i)return 1}return 0},fn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCompareNatural=void 0;var n,r=(n=dn)&&n.__esModule?n:{default:n};var a="compareNatural",o=["typed","compare"],s=(0,h.factory)(a,o,(function(e){var t=e.typed,n=e.compare,o=n.signatures["boolean,boolean"];return t(a,{"any, any":function(e,t){var a,c=(0,i.typeOf)(e),u=(0,i.typeOf)(t);if(!("number"!==c&&"BigNumber"!==c&&"Fraction"!==c||"number"!==u&&"BigNumber"!==u&&"Fraction"!==u))return"0"!==(a=n(e,t)).toString()?a>0?1:-1:(0,r.default)(c,u);if("Array"===c||"Matrix"===c||"Array"===u||"Matrix"===u)return 0!==(a=function e(t,n,r){if((0,i.isSparseMatrix)(n)&&(0,i.isSparseMatrix)(r))return s(t,n.toJSON().values,r.toJSON().values);if((0,i.isSparseMatrix)(n))return e(t,n.toArray(),r);if((0,i.isSparseMatrix)(r))return e(t,n,r.toArray());if((0,i.isDenseMatrix)(n))return e(t,n.toJSON().data,r);if((0,i.isDenseMatrix)(r))return e(t,n,r.toJSON().data);if(!Array.isArray(n))return e(t,[n],r);if(!Array.isArray(r))return e(t,n,[r]);return s(t,n,r)}(this,e,t))?a:(0,r.default)(c,u);if(c!==u)return(0,r.default)(c,u);if("Complex"===c)return function(e,t){if(e.re>t.re)return 1;if(e.re<t.re)return-1;if(e.im>t.im)return 1;if(e.im<t.im)return-1;return 0}(e,t);if("Unit"===c)return e.equalBase(t)?this(e.value,t.value):s(this,e.formatUnits(),t.formatUnits());if("boolean"===c)return o(e,t);if("string"===c)return(0,r.default)(e,t);if("Object"===c)return function(e,t,n){var i=Object.keys(t),a=Object.keys(n);i.sort(r.default),a.sort(r.default);var o=s(e,i,a);if(0!==o)return o;for(var c=0;c<i.length;c++){var u=e(t[i[c]],n[a[c]]);if(0!==u)return u}return 0}(this,e,t);if("null"===c)return 0;if("undefined"===c)return 0;throw new TypeError('Unsupported type of value "'+c+'"')}});function s(e,t,n){for(var r=0,i=Math.min(t.length,n.length);r<i;r++){var a=e(t[r],n[r]);if(0!==a)return a}return t.length>n.length?1:t.length<n.length?-1:0}}));t.createCompareNatural=s})),pn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCompareTextNumber=t.createCompareText=void 0;var n="compareText",r=["typed","matrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=(0,we.createAlgorithm13)({typed:t}),a=(0,pe.createAlgorithm14)({typed:t});return t(n,{"any, any":d.compareText,"DenseMatrix, DenseMatrix":function(e,t){return i(e,t,d.compareText)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"DenseMatrix, any":function(e,t){return a(e,t,d.compareText,!1)},"any, DenseMatrix":function(e,t){return a(t,e,d.compareText,!0)},"Array, any":function(e,t){return a(r(e),t,d.compareText,!1).valueOf()},"any, Array":function(e,t){return a(r(t),e,d.compareText,!0).valueOf()}})}));t.createCompareText=i;var a=(0,h.factory)(n,["typed"],(function(e){return(0,e.typed)(n,{"any, any":d.compareText})}));t.createCompareTextNumber=a})),mn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createEqualNumber=t.createEqual=void 0;var n=["typed","matrix","equalScalar","DenseMatrix"],r=(0,h.factory)("equal",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,Ae.createAlgorithm03)({typed:t}),o=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:i}),s=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t("equal",{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:r(e,t)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,r)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,r,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,r,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,r)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, any":function(e,t){return s(e,t,r,!1)},"DenseMatrix, any":function(e,t){return u(e,t,r,!1)},"any, SparseMatrix":function(e,t){return s(t,e,r,!0)},"any, DenseMatrix":function(e,t){return u(t,e,r,!0)},"Array, any":function(e,t){return u(n(e),t,r,!1).valueOf()},"any, Array":function(e,t){return u(n(t),e,r,!0).valueOf()}})}));t.createEqual=r;var i=(0,h.factory)("equal",["typed","equalScalar"],(function(e){var t=e.typed,n=e.equalScalar;return t("equal",{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:n(e,t)}})}));t.createEqualNumber=i})),hn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createEqualText=void 0;var n=["typed","compareText","isZero"],r=(0,h.factory)("equalText",n,(function(e){var t=e.typed,n=e.compareText,r=e.isZero;return t("equalText",{"any, any":function(e,t){return r(n(e,t))}})}));t.createEqualText=r})),yn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSmallerNumber=t.createSmaller=void 0;var n="smaller",r=["typed","config","matrix","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{"boolean, boolean":function(e,t){return e<t},"number, number":function(e,t){return e<t&&!(0,u.nearlyEqual)(e,t,r.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lt(t)&&!(0,$.nearlyEqual)(e,t,r.epsilon)},"Fraction, Fraction":function(e,t){return-1===e.compare(t)},"Complex, Complex":function(e,t){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(i(e),i(t)).valueOf()},"Array, Matrix":function(e,t){return this(i(e),t)},"Matrix, Array":function(e,t){return this(e,i(t))},"SparseMatrix, any":function(e,t){return c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(i(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createSmaller=i;var a=(0,h.factory)(n,["typed","config"],(function(e){var t=e.typed,r=e.config;return t(n,{"number, number":function(e,t){return e<t&&!(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createSmallerNumber=a})),vn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSmallerEqNumber=t.createSmallerEq=void 0;var n="smallerEq",r=["typed","config","matrix","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{"boolean, boolean":function(e,t){return e<=t},"number, number":function(e,t){return e<=t||(0,u.nearlyEqual)(e,t,r.epsilon)},"BigNumber, BigNumber":function(e,t){return e.lte(t)||(0,$.nearlyEqual)(e,t,r.epsilon)},"Fraction, Fraction":function(e,t){return 1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(i(e),i(t)).valueOf()},"Array, Matrix":function(e,t){return this(i(e),t)},"Matrix, Array":function(e,t){return this(e,i(t))},"SparseMatrix, any":function(e,t){return c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(i(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createSmallerEq=i;var a=(0,h.factory)(n,["typed","config"],(function(e){var t=e.typed,r=e.config;return t(n,{"number, number":function(e,t){return e<=t||(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createSmallerEqNumber=a})),gn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLargerNumber=t.createLarger=void 0;var n="larger",r=["typed","config","matrix","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{"boolean, boolean":function(e,t){return e>t},"number, number":function(e,t){return e>t&&!(0,u.nearlyEqual)(e,t,r.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gt(t)&&!(0,$.nearlyEqual)(e,t,r.epsilon)},"Fraction, Fraction":function(e,t){return 1===e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(i(e),i(t)).valueOf()},"Array, Matrix":function(e,t){return this(i(e),t)},"Matrix, Array":function(e,t){return this(e,i(t))},"SparseMatrix, any":function(e,t){return c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(i(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createLarger=i;var a=(0,h.factory)(n,["typed","config"],(function(e){var t=e.typed,r=e.config;return t(n,{"number, number":function(e,t){return e>t&&!(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createLargerNumber=a})),bn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLargerEqNumber=t.createLargerEq=void 0;var n="largerEq",r=["typed","config","matrix","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{"boolean, boolean":function(e,t){return e>=t},"number, number":function(e,t){return e>=t||(0,u.nearlyEqual)(e,t,r.epsilon)},"BigNumber, BigNumber":function(e,t){return e.gte(t)||(0,$.nearlyEqual)(e,t,r.epsilon)},"Fraction, Fraction":function(e,t){return-1!==e.compare(t)},"Complex, Complex":function(){throw new TypeError("No ordering relation is defined for complex numbers")},"Unit, Unit":function(e,t){if(!e.equalBase(t))throw new Error("Cannot compare units with different base");return this(e.value,t.value)},"SparseMatrix, SparseMatrix":function(e,t){return s(e,t,this)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return o(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,this)},"Array, Array":function(e,t){return this(i(e),i(t)).valueOf()},"Array, Matrix":function(e,t){return this(i(e),t)},"Matrix, Array":function(e,t){return this(e,i(t))},"SparseMatrix, any":function(e,t){return c(e,t,this,!1)},"DenseMatrix, any":function(e,t){return d(e,t,this,!1)},"any, SparseMatrix":function(e,t){return c(t,e,this,!0)},"any, DenseMatrix":function(e,t){return d(t,e,this,!0)},"Array, any":function(e,t){return d(i(e),t,this,!1).valueOf()},"any, Array":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createLargerEq=i;var a=(0,h.factory)(n,["typed","config"],(function(e){var t=e.typed,r=e.config;return t(n,{"number, number":function(e,t){return e>=t||(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createLargerEqNumber=a})),xn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDeepEqual=void 0;var n=["typed","equal"],r=(0,h.factory)("deepEqual",n,(function(e){var t=e.typed,n=e.equal;return t("deepEqual",{"any, any":function(e,t){return function e(t,r){if(Array.isArray(t)){if(Array.isArray(r)){var i=t.length;if(i!==r.length)return!1;for(var a=0;a<i;a++)if(!e(t[a],r[a]))return!1;return!0}return!1}return!Array.isArray(r)&&n(t,r)}(e.valueOf(),t.valueOf())}})}));t.createDeepEqual=r})),Dn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUnequalNumber=t.createUnequal=void 0;var n=["typed","config","equalScalar","matrix","DenseMatrix"],r=(0,h.factory)("unequal",n,(function(e){var t=e.typed,n=(e.config,e.equalScalar),r=e.matrix,i=e.DenseMatrix,a=(0,Ae.createAlgorithm03)({typed:t}),o=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:i}),s=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:l(e,t)},"SparseMatrix, SparseMatrix":function(e,t){return o(e,t,l)},"SparseMatrix, DenseMatrix":function(e,t){return a(t,e,l,!0)},"DenseMatrix, SparseMatrix":function(e,t){return a(e,t,l,!1)},"DenseMatrix, DenseMatrix":function(e,t){return c(e,t,l)},"Array, Array":function(e,t){return this(r(e),r(t)).valueOf()},"Array, Matrix":function(e,t){return this(r(e),t)},"Matrix, Array":function(e,t){return this(e,r(t))},"SparseMatrix, any":function(e,t){return s(e,t,l,!1)},"DenseMatrix, any":function(e,t){return u(e,t,l,!1)},"any, SparseMatrix":function(e,t){return s(t,e,l,!0)},"any, DenseMatrix":function(e,t){return u(t,e,l,!0)},"Array, any":function(e,t){return u(r(e),t,l,!1).valueOf()},"any, Array":function(e,t){return u(r(t),e,l,!0).valueOf()}});function l(e,t){return!n(e,t)}}));t.createUnequal=r;var i=(0,h.factory)("unequal",["typed","equalScalar"],(function(e){var t=e.typed,n=e.equalScalar;return t("unequal",{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:!n(e,t)}})}));t.createUnequalNumber=i})),_n=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createPartitionSelect=void 0;var n="partitionSelect",r=["typed","isNumeric","isNaN","compare"],a=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.isNumeric,a=e.isNaN,o=e.compare,s=o,c=function(e,t){return-o(e,t)};return t(n,{"Array | Matrix, number":function(e,t){return l(e,t,s)},"Array | Matrix, number, string":function(e,t,n){if("asc"===n)return l(e,t,s);if("desc"===n)return l(e,t,c);throw new Error('Compare string must be "asc" or "desc"')},"Array | Matrix, number, function":l});function l(e,t,n){if(!(0,u.isInteger)(t)||t<0)throw new Error("k must be a non-negative integer");if((0,i.isMatrix)(e)){if(e.size().length>1)throw new Error("Only one dimensional matrices supported");return d(e.valueOf(),t,n)}if(Array.isArray(e))return d(e,t,n)}function d(e,t,n){if(t>=e.length)throw new Error("k out of bounds");for(var i=0;i<e.length;i++)if(r(e[i])&&a(e[i]))return e[i];for(var o=0,s=e.length-1;o<s;){for(var c=o,u=s,l=e[Math.floor(Math.random()*(s-o+1))+o];c<u;)if(n(e[c],l)>=0){var d=e[u];e[u]=e[c],e[c]=d,--u}else++c;n(e[c],l)>0&&--c,t<=c?s=c:o=c+1}return e[t]}}));t.createPartitionSelect=a})),wn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSort=void 0;var n=["typed","matrix","compare","compareNatural"],r=(0,h.factory)("sort",n,(function(e){var t=e.typed,n=e.matrix,r=e.compare,i=e.compareNatural,a=r,o=function(e,t){return-r(e,t)};return t("sort",{Array:function(e){return c(e),e.sort(a)},Matrix:function(e){return u(e),n(e.toArray().sort(a),e.storage())},"Array, function":function(e,t){return c(e),e.sort(t)},"Matrix, function":function(e,t){return u(e),n(e.toArray().sort(t),e.storage())},"Array, string":function(e,t){return c(e),e.sort(s(t))},"Matrix, string":function(e,t){return u(e),n(e.toArray().sort(s(t)),e.storage())}});function s(e){if("asc"===e)return a;if("desc"===e)return o;if("natural"===e)return i;throw new Error('String "asc", "desc", or "natural" expected')}function c(e){if(1!==(0,m.arraySize)(e).length)throw new Error("One dimensional array expected")}function u(e){if(1!==e.size().length)throw new Error("One dimensional matrix expected")}}));t.createSort=r})),Nn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMax=void 0;var n=["typed","config","numeric","larger"],r=(0,h.factory)("max",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,i=e.larger;return t("max",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){return(0,P.reduce)(e,t.valueOf(),a)},"...":function(e){if((0,P.containsCollections)(e))throw new TypeError("Scalar values expected in function max");return o(e)}});function a(e,t){try{return i(e,t)?e:t}catch(e){throw(0,kt.improveErrorMessage)(e,"max",t)}}function o(e){var t;if((0,P.deepForEach)(e,(function(e){try{isNaN(e)&&"number"==typeof e?t=NaN:(void 0===t||i(e,t))&&(t=e)}catch(t){throw(0,kt.improveErrorMessage)(t,"max",e)}})),void 0===t)throw new Error("Cannot calculate max of an empty array");return"string"==typeof t&&(t=r(t,n.number)),t}}));t.createMax=r})),Mn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMin=void 0;var n=["typed","config","numeric","smaller"],r=(0,h.factory)("min",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,i=e.smaller;return t("min",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){return(0,P.reduce)(e,t.valueOf(),a)},"...":function(e){if((0,P.containsCollections)(e))throw new TypeError("Scalar values expected in function min");return o(e)}});function a(e,t){try{return i(e,t)?e:t}catch(e){throw(0,kt.improveErrorMessage)(e,"min",t)}}function o(e){var t;if((0,P.deepForEach)(e,(function(e){try{isNaN(e)&&"number"==typeof e?t=NaN:(void 0===t||i(e,t))&&(t=e)}catch(t){throw(0,kt.improveErrorMessage)(t,"min",e)}})),void 0===t)throw new Error("Cannot calculate min of an empty array");return"string"==typeof t&&(t=r(t,n.number)),t}}));t.createMin=r})),On=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createImmutableDenseMatrixClass=void 0;var n=["smaller","DenseMatrix"],r=(0,h.factory)("ImmutableDenseMatrix",n,(function(e){var t=e.smaller,n=e.DenseMatrix;function r(e,t){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!(0,i.isString)(t))throw new Error("Invalid datatype: "+t);if((0,i.isMatrix)(e)||(0,i.isArray)(e)){var a=new n(e,t);this._data=a._data,this._size=a._size,this._datatype=a._datatype,this._min=null,this._max=null}else if(e&&(0,i.isArray)(e.data)&&(0,i.isArray)(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError("Unsupported type of data ("+(0,i.typeOf)(e)+")");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}return r.prototype=new n,r.prototype.type="ImmutableDenseMatrix",r.prototype.isImmutableDenseMatrix=!0,r.prototype.subset=function(e){switch(arguments.length){case 1:var t=n.prototype.subset.call(this,e);return(0,i.isMatrix)(t)?new r({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error("Cannot invoke set subset on an Immutable Matrix instance");default:throw new SyntaxError("Wrong number of arguments")}},r.prototype.set=function(){throw new Error("Cannot invoke set on an Immutable Matrix instance")},r.prototype.resize=function(){throw new Error("Cannot invoke resize on an Immutable Matrix instance")},r.prototype.reshape=function(){throw new Error("Cannot invoke reshape on an Immutable Matrix instance")},r.prototype.clone=function(){return new r({data:(0,a.clone)(this._data),size:(0,a.clone)(this._size),datatype:this._datatype})},r.prototype.toJSON=function(){return{mathjs:"ImmutableDenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},r.fromJSON=function(e){return new r(e)},r.prototype.swapRows=function(){throw new Error("Cannot invoke swapRows on an Immutable Matrix instance")},r.prototype.min=function(){if(null===this._min){var e=null;this.forEach((function(n){(null===e||t(n,e))&&(e=n)})),this._min=null!==e?e:void 0}return this._min},r.prototype.max=function(){if(null===this._max){var e=null;this.forEach((function(n){(null===e||t(e,n))&&(e=n)})),this._max=null!==e?e:void 0}return this._max},r}),{isClass:!0});t.createImmutableDenseMatrixClass=r})),Sn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIndexClass=void 0;var n=["ImmutableDenseMatrix"],r=(0,h.factory)("Index",n,(function(e){var t=e.ImmutableDenseMatrix;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this._dimensions=[],this._isScalar=!0;for(var t=0,a=arguments.length;t<a;t++){var o=arguments[t];if((0,i.isRange)(o))this._dimensions.push(o),this._isScalar=!1;else if(Array.isArray(o)||(0,i.isMatrix)(o)){var s=r(o.valueOf());this._dimensions.push(s);var c=s.size();1===c.length&&1===c[0]||(this._isScalar=!1)}else if("number"==typeof o)this._dimensions.push(r([o]));else{if("string"!=typeof o)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");this._dimensions.push(o)}}}function r(e){for(var n=0,r=e.length;n<r;n++)if("number"!=typeof e[n]||!(0,u.isInteger)(e[n]))throw new TypeError("Index parameters must be positive integer numbers");return new t(e)}return n.prototype.type="Index",n.prototype.isIndex=!0,n.prototype.clone=function(){var e=new n;return e._dimensions=(0,a.clone)(this._dimensions),e._isScalar=this._isScalar,e},n.create=function(e){var t=new n;return n.apply(t,e),t},n.prototype.size=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]="string"==typeof r?1:r.size()[0]}return e},n.prototype.max=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]="string"==typeof r?r:r.max()}return e},n.prototype.min=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]="string"==typeof r?r:r.min()}return e},n.prototype.forEach=function(e){for(var t=0,n=this._dimensions.length;t<n;t++)e(this._dimensions[t],t,this)},n.prototype.dimension=function(e){return this._dimensions[e]||null},n.prototype.isObjectProperty=function(){return 1===this._dimensions.length&&"string"==typeof this._dimensions[0]},n.prototype.getObjectProperty=function(){return this.isObjectProperty()?this._dimensions[0]:null},n.prototype.isScalar=function(){return this._isScalar},n.prototype.toArray=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e.push("string"==typeof r?r:r.toArray())}return e},n.prototype.valueOf=n.prototype.toArray,n.prototype.toString=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];"string"==typeof r?e.push(JSON.stringify(r)):e.push(r.toString())}return"["+e.join(", ")+"]"},n.prototype.toJSON=function(){return{mathjs:"Index",dimensions:this._dimensions}},n.fromJSON=function(e){return n.create(e.dimensions)},n}),{isClass:!0});t.createIndexClass=r})),Pn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFibonacciHeapClass=void 0;var n=["smaller","larger"],r=(0,h.factory)("FibonacciHeap",n,(function(e){var t=e.smaller,n=e.larger,r=1/Math.log((1+Math.sqrt(5))/2);function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this._minimum=null,this._size=0}function a(e,t,n){t.left.right=t.right,t.right.left=t.left,n.degree--,n.child===t&&(n.child=t.right),0===n.degree&&(n.child=null),t.left=e,t.right=e.right,e.right=t,t.right.left=t,t.parent=null,t.mark=!1}i.prototype.type="FibonacciHeap",i.prototype.isFibonacciHeap=!0,i.prototype.insert=function(e,n){var r={key:e,value:n,degree:0};if(this._minimum){var i=this._minimum;r.left=i,r.right=i.right,i.right=r,r.right.left=r,t(e,i.key)&&(this._minimum=r)}else r.left=r,r.right=r,this._minimum=r;return this._size++,r},i.prototype.size=function(){return this._size},i.prototype.clear=function(){this._minimum=null,this._size=0},i.prototype.isEmpty=function(){return 0===this._size},i.prototype.extractMinimum=function(){var e=this._minimum;if(null===e)return e;for(var i=this._minimum,a=e.degree,s=e.child;a>0;){var c=s.right;s.left.right=s.right,s.right.left=s.left,s.left=i,s.right=i.right,i.right=s,s.right.left=s,s.parent=null,s=c,a--}return e.left.right=e.right,e.right.left=e.left,i=e===e.right?null:function(e,i){var a,s=Math.floor(Math.log(i)*r)+1,c=new Array(s),u=0,l=e;if(l)for(u++,l=l.right;l!==e;)u++,l=l.right;for(;u>0;){for(var d=l.degree,f=l.right;a=c[d];){if(n(l.key,a.key)){var p=a;a=l,l=p}o(a,l),c[d]=null,d++}c[d]=l,l=f,u--}e=null;for(var m=0;m<s;m++)(a=c[m])&&(e?(a.left.right=a.right,a.right.left=a.left,a.left=e,a.right=e.right,e.right=a,a.right.left=a,t(a.key,e.key)&&(e=a)):e=a);return e}(i=e.right,this._size),this._size--,this._minimum=i,e},i.prototype.remove=function(e){this._minimum=function(e,n,r){n.key=r;var i=n.parent;i&&t(n.key,i.key)&&(a(e,n,i),function e(t,n){var r=n.parent;if(!r)return;n.mark?(a(t,n,r),e(r)):n.mark=!0}(e,i));t(n.key,e.key)&&(e=n);return e}(this._minimum,e,-1),this.extractMinimum()};var o=function(e,t){e.left.right=e.right,e.right.left=e.left,e.parent=t,t.child?(e.left=t.child,e.right=t.child.right,t.child.right=e,e.right.left=e):(t.child=e,e.right=e,e.left=e),t.degree++,e.mark=!1};return i}),{isClass:!0});t.createFibonacciHeapClass=r})),jn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSpaClass=void 0;var n=["addScalar","equalScalar","FibonacciHeap"],r=(0,h.factory)("Spa",n,(function(e){var t=e.addScalar,n=e.equalScalar,r=e.FibonacciHeap;function i(){if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");this._values=[],this._heap=new r}return i.prototype.type="Spa",i.prototype.isSpa=!0,i.prototype.set=function(e,t){if(this._values[e])this._values[e].value=t;else{var n=this._heap.insert(e,t);this._values[e]=n}},i.prototype.get=function(e){var t=this._values[e];return t?t.value:0},i.prototype.accumulate=function(e,n){var r=this._values[e];r?r.value=t(r.value,n):(r=this._heap.insert(e,n),this._values[e]=r)},i.prototype.forEach=function(e,t,r){var i=this._heap,a=this._values,o=[],s=i.extractMinimum();for(s&&o.push(s);s&&s.key<=t;)s.key>=e&&(n(s.value,0)||r(s.key,s.value,this)),(s=i.extractMinimum())&&o.push(s);for(var c=0;c<o.length;c++){var u=o[c];a[(s=i.insert(u.key,u.value)).key]=s}},i.prototype.swap=function(e,t){var n=this._values[e],r=this._values[t];if(!n&&r)n=this._heap.insert(e,r.value),this._heap.remove(r),this._values[e]=n,this._values[t]=void 0;else if(n&&!r)r=this._heap.insert(t,n.value),this._heap.remove(n),this._values[t]=r,this._values[e]=void 0;else if(n&&r){var i=n.value;n.value=r.value,r.value=i}},i}),{isClass:!0});t.createSpaClass=r})),An=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBigNumberTau=t.createBigNumberPi=t.createBigNumberPhi=t.createBigNumberE=void 0;var n=(0,st.memoize)((function(e){return new e(1).exp()}),o);t.createBigNumberE=n;var r=(0,st.memoize)((function(e){return new e(1).plus(new e(5).sqrt()).div(2)}),o);t.createBigNumberPhi=r;var i=(0,st.memoize)((function(e){return e.acos(-1)}),o);t.createBigNumberPi=i;var a=(0,st.memoize)((function(e){return i(e).times(2)}),o);function o(e){return e[0].precision}t.createBigNumberTau=a})),En=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,"__esModule",{value:!0}),t.createUnitClass=void 0;var u=["?on","config","addScalar","subtract","multiplyScalar","divideScalar","pow","abs","fix","round","equal","isNumeric","format","number","Complex","BigNumber","Fraction"],l=(0,h.factory)("Unit",u,(function(e){var t,o,c,u=e.on,l=e.config,f=e.addScalar,p=e.subtract,m=e.multiplyScalar,h=e.divideScalar,y=e.pow,v=e.abs,g=e.fix,b=e.round,x=e.equal,D=e.isNumeric,_=e.format,w=e.number,N=e.Complex,M=e.BigNumber,O=e.Fraction,S=w;function P(e,t){if(!(this instanceof P))throw new Error("Constructor must be called with the new operator");if(null!=e&&!D(e)&&!(0,i.isComplex)(e))throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");if(void 0!==t&&("string"!=typeof t||""===t))throw new TypeError("Second parameter in Unit constructor must be a string");if(void 0!==t){var n=P.parse(t);this.units=n.units,this.dimensions=n.dimensions}else{this.units=[{unit:L,prefix:R.NONE,power:0}],this.dimensions=[];for(var r=0;r<q.length;r++)this.dimensions[r]=0}this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.skipAutomaticSimplification=!0}function j(){for(;" "===c||"\t"===c;)E()}function A(e){return e>="0"&&e<="9"}function E(){o++,c=t.charAt(o)}function C(e){o=e,c=t.charAt(o)}function T(){var e="",t=o;if("+"===c?E():"-"===c&&(e+=c,E()),!function(e){return e>="0"&&e<="9"||"."===e}(c))return C(t),null;if("."===c){if(e+=c,E(),!A(c))return C(t),null}else{for(;A(c);)e+=c,E();"."===c&&(e+=c,E())}for(;A(c);)e+=c,E();if("E"===c||"e"===c){var n="",r=o;if(n+=c,E(),"+"!==c&&"-"!==c||(n+=c,E()),!A(c))return C(r),e;for(e+=n;A(c);)e+=c,E()}return e}function k(){for(var e="";A(c)||P.isValidAlpha(c);)e+=c,E();var t=e.charAt(0);return P.isValidAlpha(t)?e:null}function I(e){return c===e?(E(),e):null}function B(e){if((0,a.hasOwnProperty)(H,e)){var t=H[e];return{unit:t,prefix:t.prefixes[""]}}for(var n in H)if((0,a.hasOwnProperty)(H,n)&&(0,d.endsWith)(e,n)){var r=H[n],i=e.length-n.length,o=e.substring(0,i),s=(0,a.hasOwnProperty)(r.prefixes,o)?r.prefixes[o]:void 0;if(void 0!==s)return{unit:r,prefix:s}}return null}function z(e){return e.equalBase(F.NONE)&&null!==e.value&&!l.predictable?e.value:e}P.prototype.type="Unit",P.prototype.isUnit=!0,P.parse=function(e,n){if(n=n||{},o=-1,c="","string"!=typeof(t=e))throw new TypeError("Invalid argument in Unit.parse, string expected");var r=new P;r.units=[];var i=1,a=!1;E(),j();var s=T(),u=null;if(s){if("BigNumber"===l.number)u=new M(s);else if("Fraction"===l.number)try{u=new O(s)}catch(e){u=parseFloat(s)}else u=parseFloat(s);j(),I("*")?(i=1,a=!0):I("/")&&(i=-1,a=!0)}for(var d=[],f=1;;){for(j();"("===c;)d.push(i),f*=i,i=1,E(),j();var p=void 0;if(!c)break;var m=c;if(null===(p=k()))throw new SyntaxError('Unexpected "'+m+'" in "'+t+'" at index '+o.toString());var h=B(p);if(null===h)throw new SyntaxError('Unit "'+p+'" not found.');var y=i*f;if(j(),I("^")){j();var v=T();if(null===v)throw new SyntaxError('In "'+e+'", "^" must be followed by a floating-point number');y*=v}r.units.push({unit:h.unit,prefix:h.prefix,power:y});for(var g=0;g<q.length;g++)r.dimensions[g]+=(h.unit.dimensions[g]||0)*y;for(j();")"===c;){if(0===d.length)throw new SyntaxError('Unmatched ")" in "'+t+'" at index '+o.toString());f/=d.pop(),E(),j()}if(a=!1,I("*")?(i=1,a=!0):I("/")?(i=-1,a=!0):i=1,h.unit.base){var b=h.unit.base.key;W.auto[b]={unit:h.unit,prefix:h.prefix}}}if(j(),c)throw new SyntaxError('Could not parse: "'+e+'"');if(a)throw new SyntaxError('Trailing characters: "'+e+'"');if(0!==d.length)throw new SyntaxError('Unmatched "(" in "'+t+'"');if(0===r.units.length&&!n.allowNoUnits)throw new SyntaxError('"'+e+'" contains no units');return r.value=void 0!==u?r._normalize(u):null,r},P.prototype.clone=function(){var e=new P;e.fixPrefix=this.fixPrefix,e.skipAutomaticSimplification=this.skipAutomaticSimplification,e.value=(0,a.clone)(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var n in e.units[t]={},this.units[t])(0,a.hasOwnProperty)(this.units[t],n)&&(e.units[t][n]=this.units[t][n]);return e},P.prototype._isDerived=function(){return 0!==this.units.length&&(this.units.length>1||Math.abs(this.units[0].power-1)>1e-15)},P.prototype._normalize=function(e){var t,n,r,a,o;if(null==e||0===this.units.length)return e;if(this._isDerived()){var s=e;o=P._getNumberConverter((0,i.typeOf)(e));for(var c=0;c<this.units.length;c++)t=o(this.units[c].unit.value),a=o(this.units[c].prefix.value),r=o(this.units[c].power),s=m(s,y(m(t,a),r));return s}return t=(o=P._getNumberConverter((0,i.typeOf)(e)))(this.units[0].unit.value),n=o(this.units[0].unit.offset),a=o(this.units[0].prefix.value),m(f(e,n),m(t,a))},P.prototype._denormalize=function(e,t){var n,r,a,o,s;if(null==e||0===this.units.length)return e;if(this._isDerived()){var c=e;s=P._getNumberConverter((0,i.typeOf)(e));for(var u=0;u<this.units.length;u++)n=s(this.units[u].unit.value),o=s(this.units[u].prefix.value),a=s(this.units[u].power),c=h(c,y(m(n,o),a));return c}return n=(s=P._getNumberConverter((0,i.typeOf)(e)))(this.units[0].unit.value),o=s(this.units[0].prefix.value),r=s(this.units[0].unit.offset),p(h(h(e,n),null==t?o:t),r)},P.isValuelessUnit=function(e){return null!==B(e)},P.prototype.hasBase=function(e){if("string"==typeof e&&(e=F[e]),!e)return!1;for(var t=0;t<q.length;t++)if(Math.abs((this.dimensions[t]||0)-(e.dimensions[t]||0))>1e-12)return!1;return!0},P.prototype.equalBase=function(e){for(var t=0;t<q.length;t++)if(Math.abs((this.dimensions[t]||0)-(e.dimensions[t]||0))>1e-12)return!1;return!0},P.prototype.equals=function(e){return this.equalBase(e)&&x(this.value,e.value)},P.prototype.multiply=function(e){for(var t=this.clone(),n=0;n<q.length;n++)t.dimensions[n]=(this.dimensions[n]||0)+(e.dimensions[n]||0);for(var r=0;r<e.units.length;r++){var i=s({},e.units[r]);t.units.push(i)}if(null!==this.value||null!==e.value){var a=null===this.value?this._normalize(1):this.value,o=null===e.value?e._normalize(1):e.value;t.value=m(a,o)}else t.value=null;return t.skipAutomaticSimplification=!1,z(t)},P.prototype.divide=function(e){for(var t=this.clone(),n=0;n<q.length;n++)t.dimensions[n]=(this.dimensions[n]||0)-(e.dimensions[n]||0);for(var r=0;r<e.units.length;r++){var i=s(s({},e.units[r]),{},{power:-e.units[r].power});t.units.push(i)}if(null!==this.value||null!==e.value){var a=null===this.value?this._normalize(1):this.value,o=null===e.value?e._normalize(1):e.value;t.value=h(a,o)}else t.value=null;return t.skipAutomaticSimplification=!1,z(t)},P.prototype.pow=function(e){for(var t=this.clone(),n=0;n<q.length;n++)t.dimensions[n]=(this.dimensions[n]||0)*e;for(var r=0;r<t.units.length;r++)t.units[r].power*=e;return null!==t.value?t.value=y(t.value,e):t.value=null,t.skipAutomaticSimplification=!1,z(t)},P.prototype.abs=function(){var e=this.clone();for(var t in e.value=null!==e.value?v(e.value):null,e.units)"VA"!==e.units[t].unit.name&&"VAR"!==e.units[t].unit.name||(e.units[t].unit=H.W);return e},P.prototype.to=function(e){var t,n=null===this.value?this._normalize(1):this.value;if("string"==typeof e){if(t=P.parse(e),!this.equalBase(t))throw new Error("Units do not match ('".concat(t.toString(),"' != '").concat(this.toString(),"')"));if(null!==t.value)throw new Error("Cannot convert to a unit with a value");return t.value=(0,a.clone)(n),t.fixPrefix=!0,t.skipAutomaticSimplification=!0,t}if((0,i.isUnit)(e)){if(!this.equalBase(e))throw new Error("Units do not match ('".concat(e.toString(),"' != '").concat(this.toString(),"')"));if(null!==e.value)throw new Error("Cannot convert to a unit with a value");return(t=e.clone()).value=(0,a.clone)(n),t.fixPrefix=!0,t.skipAutomaticSimplification=!0,t}throw new Error("String or Unit expected as parameter")},P.prototype.toNumber=function(e){return S(this.toNumeric(e))},P.prototype.toNumeric=function(e){var t;return(t=e?this.to(e):this.clone())._isDerived()||0===t.units.length?t._denormalize(t.value):t._denormalize(t.value,t.units[0].prefix.value)},P.prototype.toString=function(){return this.format()},P.prototype.toJSON=function(){return{mathjs:"Unit",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},P.fromJSON=function(e){var t=new P(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},P.prototype.valueOf=P.prototype.toString,P.prototype.simplify=function(){var e,t,n=this.clone(),r=[];for(var i in G)if((0,a.hasOwnProperty)(G,i)&&n.hasBase(F[i])){e=i;break}if("NONE"===e)n.units=[];else if(e&&(0,a.hasOwnProperty)(G,e)&&(t=G[e]),t)n.units=[{unit:t.unit,prefix:t.prefix,power:1}];else{for(var o=!1,s=0;s<q.length;s++){var c=q[s];Math.abs(n.dimensions[s]||0)>1e-12&&((0,a.hasOwnProperty)(G,c)?r.push({unit:G[c].unit,prefix:G[c].prefix,power:n.dimensions[s]||0}):o=!0)}r.length<n.units.length&&!o&&(n.units=r)}return n},P.prototype.toSI=function(){for(var e=this.clone(),t=[],n=0;n<q.length;n++){var r=q[n];if(Math.abs(e.dimensions[n]||0)>1e-12){if(!(0,a.hasOwnProperty)(W.si,r))throw new Error("Cannot express custom unit "+r+" in SI units");t.push({unit:W.si[r].unit,prefix:W.si[r].prefix,power:e.dimensions[n]||0})}}return e.units=t,e.fixPrefix=!0,e.skipAutomaticSimplification=!0,e},P.prototype.formatUnits=function(){for(var e="",t="",n=0,r=0,i=0;i<this.units.length;i++)this.units[i].power>0?(n++,e+=" "+this.units[i].prefix.name+this.units[i].unit.name,Math.abs(this.units[i].power-1)>1e-15&&(e+="^"+this.units[i].power)):this.units[i].power<0&&r++;if(r>0)for(var a=0;a<this.units.length;a++)this.units[a].power<0&&(n>0?(t+=" "+this.units[a].prefix.name+this.units[a].unit.name,Math.abs(this.units[a].power+1)>1e-15&&(t+="^"+-this.units[a].power)):(t+=" "+this.units[a].prefix.name+this.units[a].unit.name,t+="^"+this.units[a].power));e=e.substr(1),t=t.substr(1),n>1&&r>0&&(e="("+e+")"),r>1&&n>0&&(t="("+t+")");var o=e;return n>0&&r>0&&(o+=" / "),o+=t},P.prototype.format=function(e){var t=this.skipAutomaticSimplification||null===this.value?this.clone():this.simplify(),n=!1;for(var r in void 0!==t.value&&null!==t.value&&(0,i.isComplex)(t.value)&&(n=Math.abs(t.value.re)<1e-14),t.units)(0,a.hasOwnProperty)(t.units,r)&&t.units[r].unit&&("VA"===t.units[r].unit.name&&n?t.units[r].unit=H.VAR:"VAR"!==t.units[r].unit.name||n||(t.units[r].unit=H.VA));1!==t.units.length||t.fixPrefix||Math.abs(t.units[0].power-Math.round(t.units[0].power))<1e-14&&(t.units[0].prefix=t._bestPrefix());var o=t._denormalize(t.value),s=null!==t.value?_(o,e||{}):"",c=t.formatUnits();return t.value&&(0,i.isComplex)(t.value)&&(s="("+s+")"),c.length>0&&s.length>0&&(s+=" "),s+=c},P.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");if(Math.abs(this.units[0].power-Math.round(this.units[0].power))>=1e-14)throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");var e=null!==this.value?v(this.value):0,t=v(this.units[0].unit.value),n=this.units[0].prefix;if(0===e)return n;var r=this.units[0].power,i=Math.log(e/Math.pow(n.value*t,r))/Math.LN10-1.2;if(i>-2.200001&&i<1.800001)return n;i=Math.abs(i);var o=this.units[0].unit.prefixes;for(var s in o)if((0,a.hasOwnProperty)(o,s)){var c=o[s];if(c.scientific){var u=Math.abs(Math.log(e/Math.pow(c.value*t,r))/Math.LN10-1.2);(u<i||u===i&&c.name.length<n.name.length)&&(n=c,i=u)}}return n},P.prototype.splitUnit=function(e){for(var t=this.clone(),n=[],r=0;r<e.length&&(t=t.to(e[r]),r!==e.length-1);r++){var i=t.toNumeric(),a=b(i),o=new P(x(a,i)?a:g(t.toNumeric()),e[r].toString());n.push(o),t=p(t,o)}for(var s=0,c=0;c<n.length;c++)s=f(s,n[c].value);return x(s,this.value)&&(t.value=0),n.push(t),n};var R={NONE:{"":{name:"",value:1,scientific:!0}},SHORT:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:10,scientific:!1},h:{name:"h",value:100,scientific:!1},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0},d:{name:"d",value:.1,scientific:!1},c:{name:"c",value:.01,scientific:!1},m:{name:"m",value:.001,scientific:!0},u:{name:"u",value:1e-6,scientific:!0},n:{name:"n",value:1e-9,scientific:!0},p:{name:"p",value:1e-12,scientific:!0},f:{name:"f",value:1e-15,scientific:!0},a:{name:"a",value:1e-18,scientific:!0},z:{name:"z",value:1e-21,scientific:!0},y:{name:"y",value:1e-24,scientific:!0}},LONG:{"":{name:"",value:1,scientific:!0},deca:{name:"deca",value:10,scientific:!1},hecto:{name:"hecto",value:100,scientific:!1},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0},deci:{name:"deci",value:.1,scientific:!1},centi:{name:"centi",value:.01,scientific:!1},milli:{name:"milli",value:.001,scientific:!0},micro:{name:"micro",value:1e-6,scientific:!0},nano:{name:"nano",value:1e-9,scientific:!0},pico:{name:"pico",value:1e-12,scientific:!0},femto:{name:"femto",value:1e-15,scientific:!0},atto:{name:"atto",value:1e-18,scientific:!0},zepto:{name:"zepto",value:1e-21,scientific:!0},yocto:{name:"yocto",value:1e-24,scientific:!0}},SQUARED:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:100,scientific:!1},h:{name:"h",value:1e4,scientific:!1},k:{name:"k",value:1e6,scientific:!0},M:{name:"M",value:1e12,scientific:!0},G:{name:"G",value:1e18,scientific:!0},T:{name:"T",value:1e24,scientific:!0},P:{name:"P",value:1e30,scientific:!0},E:{name:"E",value:1e36,scientific:!0},Z:{name:"Z",value:1e42,scientific:!0},Y:{name:"Y",value:1e48,scientific:!0},d:{name:"d",value:.01,scientific:!1},c:{name:"c",value:1e-4,scientific:!1},m:{name:"m",value:1e-6,scientific:!0},u:{name:"u",value:1e-12,scientific:!0},n:{name:"n",value:1e-18,scientific:!0},p:{name:"p",value:1e-24,scientific:!0},f:{name:"f",value:1e-30,scientific:!0},a:{name:"a",value:1e-36,scientific:!0},z:{name:"z",value:1e-42,scientific:!0},y:{name:"y",value:1e-48,scientific:!0}},CUBIC:{"":{name:"",value:1,scientific:!0},da:{name:"da",value:1e3,scientific:!1},h:{name:"h",value:1e6,scientific:!1},k:{name:"k",value:1e9,scientific:!0},M:{name:"M",value:1e18,scientific:!0},G:{name:"G",value:1e27,scientific:!0},T:{name:"T",value:1e36,scientific:!0},P:{name:"P",value:1e45,scientific:!0},E:{name:"E",value:1e54,scientific:!0},Z:{name:"Z",value:1e63,scientific:!0},Y:{name:"Y",value:1e72,scientific:!0},d:{name:"d",value:.001,scientific:!1},c:{name:"c",value:1e-6,scientific:!1},m:{name:"m",value:1e-9,scientific:!0},u:{name:"u",value:1e-18,scientific:!0},n:{name:"n",value:1e-27,scientific:!0},p:{name:"p",value:1e-36,scientific:!0},f:{name:"f",value:1e-45,scientific:!0},a:{name:"a",value:1e-54,scientific:!0},z:{name:"z",value:1e-63,scientific:!0},y:{name:"y",value:1e-72,scientific:!0}},BINARY_SHORT_SI:{"":{name:"",value:1,scientific:!0},k:{name:"k",value:1e3,scientific:!0},M:{name:"M",value:1e6,scientific:!0},G:{name:"G",value:1e9,scientific:!0},T:{name:"T",value:1e12,scientific:!0},P:{name:"P",value:1e15,scientific:!0},E:{name:"E",value:1e18,scientific:!0},Z:{name:"Z",value:1e21,scientific:!0},Y:{name:"Y",value:1e24,scientific:!0}},BINARY_SHORT_IEC:{"":{name:"",value:1,scientific:!0},Ki:{name:"Ki",value:1024,scientific:!0},Mi:{name:"Mi",value:Math.pow(1024,2),scientific:!0},Gi:{name:"Gi",value:Math.pow(1024,3),scientific:!0},Ti:{name:"Ti",value:Math.pow(1024,4),scientific:!0},Pi:{name:"Pi",value:Math.pow(1024,5),scientific:!0},Ei:{name:"Ei",value:Math.pow(1024,6),scientific:!0},Zi:{name:"Zi",value:Math.pow(1024,7),scientific:!0},Yi:{name:"Yi",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG_SI:{"":{name:"",value:1,scientific:!0},kilo:{name:"kilo",value:1e3,scientific:!0},mega:{name:"mega",value:1e6,scientific:!0},giga:{name:"giga",value:1e9,scientific:!0},tera:{name:"tera",value:1e12,scientific:!0},peta:{name:"peta",value:1e15,scientific:!0},exa:{name:"exa",value:1e18,scientific:!0},zetta:{name:"zetta",value:1e21,scientific:!0},yotta:{name:"yotta",value:1e24,scientific:!0}},BINARY_LONG_IEC:{"":{name:"",value:1,scientific:!0},kibi:{name:"kibi",value:1024,scientific:!0},mebi:{name:"mebi",value:Math.pow(1024,2),scientific:!0},gibi:{name:"gibi",value:Math.pow(1024,3),scientific:!0},tebi:{name:"tebi",value:Math.pow(1024,4),scientific:!0},pebi:{name:"pebi",value:Math.pow(1024,5),scientific:!0},exi:{name:"exi",value:Math.pow(1024,6),scientific:!0},zebi:{name:"zebi",value:Math.pow(1024,7),scientific:!0},yobi:{name:"yobi",value:Math.pow(1024,8),scientific:!0}},BTU:{"":{name:"",value:1,scientific:!0},MM:{name:"MM",value:1e6,scientific:!0}}};R.SHORTLONG=r({},R.SHORT,R.LONG),R.BINARY_SHORT=r({},R.BINARY_SHORT_SI,R.BINARY_SHORT_IEC),R.BINARY_LONG=r({},R.BINARY_LONG_SI,R.BINARY_LONG_IEC);var q=["MASS","LENGTH","TIME","CURRENT","TEMPERATURE","LUMINOUS_INTENSITY","AMOUNT_OF_SUBSTANCE","ANGLE","BIT"],F={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(var U in F)(0,a.hasOwnProperty)(F,U)&&(F[U].key=U);var L={name:"",base:{},value:1,offset:0,dimensions:q.map((function(e){return 0}))},H={meter:{name:"meter",base:F.LENGTH,prefixes:R.LONG,value:1,offset:0},inch:{name:"inch",base:F.LENGTH,prefixes:R.NONE,value:.0254,offset:0},foot:{name:"foot",base:F.LENGTH,prefixes:R.NONE,value:.3048,offset:0},yard:{name:"yard",base:F.LENGTH,prefixes:R.NONE,value:.9144,offset:0},mile:{name:"mile",base:F.LENGTH,prefixes:R.NONE,value:1609.344,offset:0},link:{name:"link",base:F.LENGTH,prefixes:R.NONE,value:.201168,offset:0},rod:{name:"rod",base:F.LENGTH,prefixes:R.NONE,value:5.0292,offset:0},chain:{name:"chain",base:F.LENGTH,prefixes:R.NONE,value:20.1168,offset:0},angstrom:{name:"angstrom",base:F.LENGTH,prefixes:R.NONE,value:1e-10,offset:0},m:{name:"m",base:F.LENGTH,prefixes:R.SHORT,value:1,offset:0},in:{name:"in",base:F.LENGTH,prefixes:R.NONE,value:.0254,offset:0},ft:{name:"ft",base:F.LENGTH,prefixes:R.NONE,value:.3048,offset:0},yd:{name:"yd",base:F.LENGTH,prefixes:R.NONE,value:.9144,offset:0},mi:{name:"mi",base:F.LENGTH,prefixes:R.NONE,value:1609.344,offset:0},li:{name:"li",base:F.LENGTH,prefixes:R.NONE,value:.201168,offset:0},rd:{name:"rd",base:F.LENGTH,prefixes:R.NONE,value:5.02921,offset:0},ch:{name:"ch",base:F.LENGTH,prefixes:R.NONE,value:20.1168,offset:0},mil:{name:"mil",base:F.LENGTH,prefixes:R.NONE,value:254e-7,offset:0},m2:{name:"m2",base:F.SURFACE,prefixes:R.SQUARED,value:1,offset:0},sqin:{name:"sqin",base:F.SURFACE,prefixes:R.NONE,value:64516e-8,offset:0},sqft:{name:"sqft",base:F.SURFACE,prefixes:R.NONE,value:.09290304,offset:0},sqyd:{name:"sqyd",base:F.SURFACE,prefixes:R.NONE,value:.83612736,offset:0},sqmi:{name:"sqmi",base:F.SURFACE,prefixes:R.NONE,value:2589988.110336,offset:0},sqrd:{name:"sqrd",base:F.SURFACE,prefixes:R.NONE,value:25.29295,offset:0},sqch:{name:"sqch",base:F.SURFACE,prefixes:R.NONE,value:404.6873,offset:0},sqmil:{name:"sqmil",base:F.SURFACE,prefixes:R.NONE,value:6.4516e-10,offset:0},acre:{name:"acre",base:F.SURFACE,prefixes:R.NONE,value:4046.86,offset:0},hectare:{name:"hectare",base:F.SURFACE,prefixes:R.NONE,value:1e4,offset:0},m3:{name:"m3",base:F.VOLUME,prefixes:R.CUBIC,value:1,offset:0},L:{name:"L",base:F.VOLUME,prefixes:R.SHORT,value:.001,offset:0},l:{name:"l",base:F.VOLUME,prefixes:R.SHORT,value:.001,offset:0},litre:{name:"litre",base:F.VOLUME,prefixes:R.LONG,value:.001,offset:0},cuin:{name:"cuin",base:F.VOLUME,prefixes:R.NONE,value:16387064e-12,offset:0},cuft:{name:"cuft",base:F.VOLUME,prefixes:R.NONE,value:.028316846592,offset:0},cuyd:{name:"cuyd",base:F.VOLUME,prefixes:R.NONE,value:.764554857984,offset:0},teaspoon:{name:"teaspoon",base:F.VOLUME,prefixes:R.NONE,value:5e-6,offset:0},tablespoon:{name:"tablespoon",base:F.VOLUME,prefixes:R.NONE,value:15e-6,offset:0},drop:{name:"drop",base:F.VOLUME,prefixes:R.NONE,value:5e-8,offset:0},gtt:{name:"gtt",base:F.VOLUME,prefixes:R.NONE,value:5e-8,offset:0},minim:{name:"minim",base:F.VOLUME,prefixes:R.NONE,value:6.161152e-8,offset:0},fluiddram:{name:"fluiddram",base:F.VOLUME,prefixes:R.NONE,value:36966911e-13,offset:0},fluidounce:{name:"fluidounce",base:F.VOLUME,prefixes:R.NONE,value:2957353e-11,offset:0},gill:{name:"gill",base:F.VOLUME,prefixes:R.NONE,value:.0001182941,offset:0},cc:{name:"cc",base:F.VOLUME,prefixes:R.NONE,value:1e-6,offset:0},cup:{name:"cup",base:F.VOLUME,prefixes:R.NONE,value:.0002365882,offset:0},pint:{name:"pint",base:F.VOLUME,prefixes:R.NONE,value:.0004731765,offset:0},quart:{name:"quart",base:F.VOLUME,prefixes:R.NONE,value:.0009463529,offset:0},gallon:{name:"gallon",base:F.VOLUME,prefixes:R.NONE,value:.003785412,offset:0},beerbarrel:{name:"beerbarrel",base:F.VOLUME,prefixes:R.NONE,value:.1173478,offset:0},oilbarrel:{name:"oilbarrel",base:F.VOLUME,prefixes:R.NONE,value:.1589873,offset:0},hogshead:{name:"hogshead",base:F.VOLUME,prefixes:R.NONE,value:.238481,offset:0},fldr:{name:"fldr",base:F.VOLUME,prefixes:R.NONE,value:36966911e-13,offset:0},floz:{name:"floz",base:F.VOLUME,prefixes:R.NONE,value:2957353e-11,offset:0},gi:{name:"gi",base:F.VOLUME,prefixes:R.NONE,value:.0001182941,offset:0},cp:{name:"cp",base:F.VOLUME,prefixes:R.NONE,value:.0002365882,offset:0},pt:{name:"pt",base:F.VOLUME,prefixes:R.NONE,value:.0004731765,offset:0},qt:{name:"qt",base:F.VOLUME,prefixes:R.NONE,value:.0009463529,offset:0},gal:{name:"gal",base:F.VOLUME,prefixes:R.NONE,value:.003785412,offset:0},bbl:{name:"bbl",base:F.VOLUME,prefixes:R.NONE,value:.1173478,offset:0},obl:{name:"obl",base:F.VOLUME,prefixes:R.NONE,value:.1589873,offset:0},g:{name:"g",base:F.MASS,prefixes:R.SHORT,value:.001,offset:0},gram:{name:"gram",base:F.MASS,prefixes:R.LONG,value:.001,offset:0},ton:{name:"ton",base:F.MASS,prefixes:R.SHORT,value:907.18474,offset:0},t:{name:"t",base:F.MASS,prefixes:R.SHORT,value:1e3,offset:0},tonne:{name:"tonne",base:F.MASS,prefixes:R.LONG,value:1e3,offset:0},grain:{name:"grain",base:F.MASS,prefixes:R.NONE,value:6479891e-11,offset:0},dram:{name:"dram",base:F.MASS,prefixes:R.NONE,value:.0017718451953125,offset:0},ounce:{name:"ounce",base:F.MASS,prefixes:R.NONE,value:.028349523125,offset:0},poundmass:{name:"poundmass",base:F.MASS,prefixes:R.NONE,value:.45359237,offset:0},hundredweight:{name:"hundredweight",base:F.MASS,prefixes:R.NONE,value:45.359237,offset:0},stick:{name:"stick",base:F.MASS,prefixes:R.NONE,value:.115,offset:0},stone:{name:"stone",base:F.MASS,prefixes:R.NONE,value:6.35029318,offset:0},gr:{name:"gr",base:F.MASS,prefixes:R.NONE,value:6479891e-11,offset:0},dr:{name:"dr",base:F.MASS,prefixes:R.NONE,value:.0017718451953125,offset:0},oz:{name:"oz",base:F.MASS,prefixes:R.NONE,value:.028349523125,offset:0},lbm:{name:"lbm",base:F.MASS,prefixes:R.NONE,value:.45359237,offset:0},cwt:{name:"cwt",base:F.MASS,prefixes:R.NONE,value:45.359237,offset:0},s:{name:"s",base:F.TIME,prefixes:R.SHORT,value:1,offset:0},min:{name:"min",base:F.TIME,prefixes:R.NONE,value:60,offset:0},h:{name:"h",base:F.TIME,prefixes:R.NONE,value:3600,offset:0},second:{name:"second",base:F.TIME,prefixes:R.LONG,value:1,offset:0},sec:{name:"sec",base:F.TIME,prefixes:R.LONG,value:1,offset:0},minute:{name:"minute",base:F.TIME,prefixes:R.NONE,value:60,offset:0},hour:{name:"hour",base:F.TIME,prefixes:R.NONE,value:3600,offset:0},day:{name:"day",base:F.TIME,prefixes:R.NONE,value:86400,offset:0},week:{name:"week",base:F.TIME,prefixes:R.NONE,value:604800,offset:0},month:{name:"month",base:F.TIME,prefixes:R.NONE,value:2629800,offset:0},year:{name:"year",base:F.TIME,prefixes:R.NONE,value:31557600,offset:0},decade:{name:"decade",base:F.TIME,prefixes:R.NONE,value:315576e3,offset:0},century:{name:"century",base:F.TIME,prefixes:R.NONE,value:315576e4,offset:0},millennium:{name:"millennium",base:F.TIME,prefixes:R.NONE,value:315576e5,offset:0},hertz:{name:"Hertz",base:F.FREQUENCY,prefixes:R.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:"Hz",base:F.FREQUENCY,prefixes:R.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:"rad",base:F.ANGLE,prefixes:R.SHORT,value:1,offset:0},radian:{name:"radian",base:F.ANGLE,prefixes:R.LONG,value:1,offset:0},deg:{name:"deg",base:F.ANGLE,prefixes:R.SHORT,value:null,offset:0},degree:{name:"degree",base:F.ANGLE,prefixes:R.LONG,value:null,offset:0},grad:{name:"grad",base:F.ANGLE,prefixes:R.SHORT,value:null,offset:0},gradian:{name:"gradian",base:F.ANGLE,prefixes:R.LONG,value:null,offset:0},cycle:{name:"cycle",base:F.ANGLE,prefixes:R.NONE,value:null,offset:0},arcsec:{name:"arcsec",base:F.ANGLE,prefixes:R.NONE,value:null,offset:0},arcmin:{name:"arcmin",base:F.ANGLE,prefixes:R.NONE,value:null,offset:0},A:{name:"A",base:F.CURRENT,prefixes:R.SHORT,value:1,offset:0},ampere:{name:"ampere",base:F.CURRENT,prefixes:R.LONG,value:1,offset:0},K:{name:"K",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:0},degC:{name:"degC",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:273.15},degF:{name:"degF",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:459.67},degR:{name:"degR",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:0},kelvin:{name:"kelvin",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:0},celsius:{name:"celsius",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:273.15},fahrenheit:{name:"fahrenheit",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:459.67},rankine:{name:"rankine",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:0},mol:{name:"mol",base:F.AMOUNT_OF_SUBSTANCE,prefixes:R.SHORT,value:1,offset:0},mole:{name:"mole",base:F.AMOUNT_OF_SUBSTANCE,prefixes:R.LONG,value:1,offset:0},cd:{name:"cd",base:F.LUMINOUS_INTENSITY,prefixes:R.SHORT,value:1,offset:0},candela:{name:"candela",base:F.LUMINOUS_INTENSITY,prefixes:R.LONG,value:1,offset:0},N:{name:"N",base:F.FORCE,prefixes:R.SHORT,value:1,offset:0},newton:{name:"newton",base:F.FORCE,prefixes:R.LONG,value:1,offset:0},dyn:{name:"dyn",base:F.FORCE,prefixes:R.SHORT,value:1e-5,offset:0},dyne:{name:"dyne",base:F.FORCE,prefixes:R.LONG,value:1e-5,offset:0},lbf:{name:"lbf",base:F.FORCE,prefixes:R.NONE,value:4.4482216152605,offset:0},poundforce:{name:"poundforce",base:F.FORCE,prefixes:R.NONE,value:4.4482216152605,offset:0},kip:{name:"kip",base:F.FORCE,prefixes:R.LONG,value:4448.2216,offset:0},J:{name:"J",base:F.ENERGY,prefixes:R.SHORT,value:1,offset:0},joule:{name:"joule",base:F.ENERGY,prefixes:R.SHORT,value:1,offset:0},erg:{name:"erg",base:F.ENERGY,prefixes:R.NONE,value:1e-7,offset:0},Wh:{name:"Wh",base:F.ENERGY,prefixes:R.SHORT,value:3600,offset:0},BTU:{name:"BTU",base:F.ENERGY,prefixes:R.BTU,value:1055.05585262,offset:0},eV:{name:"eV",base:F.ENERGY,prefixes:R.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:"electronvolt",base:F.ENERGY,prefixes:R.LONG,value:1602176565e-28,offset:0},W:{name:"W",base:F.POWER,prefixes:R.SHORT,value:1,offset:0},watt:{name:"watt",base:F.POWER,prefixes:R.LONG,value:1,offset:0},hp:{name:"hp",base:F.POWER,prefixes:R.NONE,value:745.6998715386,offset:0},VAR:{name:"VAR",base:F.POWER,prefixes:R.SHORT,value:N.I,offset:0},VA:{name:"VA",base:F.POWER,prefixes:R.SHORT,value:1,offset:0},Pa:{name:"Pa",base:F.PRESSURE,prefixes:R.SHORT,value:1,offset:0},psi:{name:"psi",base:F.PRESSURE,prefixes:R.NONE,value:6894.75729276459,offset:0},atm:{name:"atm",base:F.PRESSURE,prefixes:R.NONE,value:101325,offset:0},bar:{name:"bar",base:F.PRESSURE,prefixes:R.SHORTLONG,value:1e5,offset:0},torr:{name:"torr",base:F.PRESSURE,prefixes:R.NONE,value:133.322,offset:0},mmHg:{name:"mmHg",base:F.PRESSURE,prefixes:R.NONE,value:133.322,offset:0},mmH2O:{name:"mmH2O",base:F.PRESSURE,prefixes:R.NONE,value:9.80665,offset:0},cmH2O:{name:"cmH2O",base:F.PRESSURE,prefixes:R.NONE,value:98.0665,offset:0},coulomb:{name:"coulomb",base:F.ELECTRIC_CHARGE,prefixes:R.LONG,value:1,offset:0},C:{name:"C",base:F.ELECTRIC_CHARGE,prefixes:R.SHORT,value:1,offset:0},farad:{name:"farad",base:F.ELECTRIC_CAPACITANCE,prefixes:R.LONG,value:1,offset:0},F:{name:"F",base:F.ELECTRIC_CAPACITANCE,prefixes:R.SHORT,value:1,offset:0},volt:{name:"volt",base:F.ELECTRIC_POTENTIAL,prefixes:R.LONG,value:1,offset:0},V:{name:"V",base:F.ELECTRIC_POTENTIAL,prefixes:R.SHORT,value:1,offset:0},ohm:{name:"ohm",base:F.ELECTRIC_RESISTANCE,prefixes:R.SHORTLONG,value:1,offset:0},henry:{name:"henry",base:F.ELECTRIC_INDUCTANCE,prefixes:R.LONG,value:1,offset:0},H:{name:"H",base:F.ELECTRIC_INDUCTANCE,prefixes:R.SHORT,value:1,offset:0},siemens:{name:"siemens",base:F.ELECTRIC_CONDUCTANCE,prefixes:R.LONG,value:1,offset:0},S:{name:"S",base:F.ELECTRIC_CONDUCTANCE,prefixes:R.SHORT,value:1,offset:0},weber:{name:"weber",base:F.MAGNETIC_FLUX,prefixes:R.LONG,value:1,offset:0},Wb:{name:"Wb",base:F.MAGNETIC_FLUX,prefixes:R.SHORT,value:1,offset:0},tesla:{name:"tesla",base:F.MAGNETIC_FLUX_DENSITY,prefixes:R.LONG,value:1,offset:0},T:{name:"T",base:F.MAGNETIC_FLUX_DENSITY,prefixes:R.SHORT,value:1,offset:0},b:{name:"b",base:F.BIT,prefixes:R.BINARY_SHORT,value:1,offset:0},bits:{name:"bits",base:F.BIT,prefixes:R.BINARY_LONG,value:1,offset:0},B:{name:"B",base:F.BIT,prefixes:R.BINARY_SHORT,value:8,offset:0},bytes:{name:"bytes",base:F.BIT,prefixes:R.BINARY_LONG,value:8,offset:0}},Z={meters:"meter",inches:"inch",feet:"foot",yards:"yard",miles:"mile",links:"link",rods:"rod",chains:"chain",angstroms:"angstrom",lt:"l",litres:"litre",liter:"litre",liters:"litre",teaspoons:"teaspoon",tablespoons:"tablespoon",minims:"minim",fluiddrams:"fluiddram",fluidounces:"fluidounce",gills:"gill",cups:"cup",pints:"pint",quarts:"quart",gallons:"gallon",beerbarrels:"beerbarrel",oilbarrels:"oilbarrel",hogsheads:"hogshead",gtts:"gtt",grams:"gram",tons:"ton",tonnes:"tonne",grains:"grain",drams:"dram",ounces:"ounce",poundmasses:"poundmass",hundredweights:"hundredweight",sticks:"stick",lb:"lbm",lbs:"lbm",kips:"kip",acres:"acre",hectares:"hectare",sqfeet:"sqft",sqyard:"sqyd",sqmile:"sqmi",sqmiles:"sqmi",mmhg:"mmHg",mmh2o:"mmH2O",cmh2o:"cmH2O",seconds:"second",secs:"second",minutes:"minute",mins:"minute",hours:"hour",hr:"hour",hrs:"hour",days:"day",weeks:"week",months:"month",years:"year",decades:"decade",centuries:"century",millennia:"millennium",hertz:"hertz",radians:"radian",degrees:"degree",gradians:"gradian",cycles:"cycle",arcsecond:"arcsec",arcseconds:"arcsec",arcminute:"arcmin",arcminutes:"arcmin",BTUs:"BTU",watts:"watt",joules:"joule",amperes:"ampere",coulombs:"coulomb",volts:"volt",ohms:"ohm",farads:"farad",webers:"weber",teslas:"tesla",electronvolts:"electronvolt",moles:"mole",bit:"bits",byte:"bytes"};function V(e){if("BigNumber"===e.number){var t=(0,An.createBigNumberPi)(M);H.rad.value=new M(1),H.deg.value=t.div(180),H.grad.value=t.div(200),H.cycle.value=t.times(2),H.arcsec.value=t.div(648e3),H.arcmin.value=t.div(10800)}else H.rad.value=1,H.deg.value=Math.PI/180,H.grad.value=Math.PI/200,H.cycle.value=2*Math.PI,H.arcsec.value=Math.PI/648e3,H.arcmin.value=Math.PI/10800;H.radian.value=H.rad.value,H.degree.value=H.deg.value,H.gradian.value=H.grad.value}V(l),u&&u("config",(function(e,t){e.number!==t.number&&V(e)}));var W={si:{NONE:{unit:L,prefix:R.NONE[""]},LENGTH:{unit:H.m,prefix:R.SHORT[""]},MASS:{unit:H.g,prefix:R.SHORT.k},TIME:{unit:H.s,prefix:R.SHORT[""]},CURRENT:{unit:H.A,prefix:R.SHORT[""]},TEMPERATURE:{unit:H.K,prefix:R.SHORT[""]},LUMINOUS_INTENSITY:{unit:H.cd,prefix:R.SHORT[""]},AMOUNT_OF_SUBSTANCE:{unit:H.mol,prefix:R.SHORT[""]},ANGLE:{unit:H.rad,prefix:R.SHORT[""]},BIT:{unit:H.bits,prefix:R.SHORT[""]},FORCE:{unit:H.N,prefix:R.SHORT[""]},ENERGY:{unit:H.J,prefix:R.SHORT[""]},POWER:{unit:H.W,prefix:R.SHORT[""]},PRESSURE:{unit:H.Pa,prefix:R.SHORT[""]},ELECTRIC_CHARGE:{unit:H.C,prefix:R.SHORT[""]},ELECTRIC_CAPACITANCE:{unit:H.F,prefix:R.SHORT[""]},ELECTRIC_POTENTIAL:{unit:H.V,prefix:R.SHORT[""]},ELECTRIC_RESISTANCE:{unit:H.ohm,prefix:R.SHORT[""]},ELECTRIC_INDUCTANCE:{unit:H.H,prefix:R.SHORT[""]},ELECTRIC_CONDUCTANCE:{unit:H.S,prefix:R.SHORT[""]},MAGNETIC_FLUX:{unit:H.Wb,prefix:R.SHORT[""]},MAGNETIC_FLUX_DENSITY:{unit:H.T,prefix:R.SHORT[""]},FREQUENCY:{unit:H.Hz,prefix:R.SHORT[""]}}};W.cgs=JSON.parse(JSON.stringify(W.si)),W.cgs.LENGTH={unit:H.m,prefix:R.SHORT.c},W.cgs.MASS={unit:H.g,prefix:R.SHORT[""]},W.cgs.FORCE={unit:H.dyn,prefix:R.SHORT[""]},W.cgs.ENERGY={unit:H.erg,prefix:R.NONE[""]},W.us=JSON.parse(JSON.stringify(W.si)),W.us.LENGTH={unit:H.ft,prefix:R.NONE[""]},W.us.MASS={unit:H.lbm,prefix:R.NONE[""]},W.us.TEMPERATURE={unit:H.degF,prefix:R.NONE[""]},W.us.FORCE={unit:H.lbf,prefix:R.NONE[""]},W.us.ENERGY={unit:H.BTU,prefix:R.BTU[""]},W.us.POWER={unit:H.hp,prefix:R.NONE[""]},W.us.PRESSURE={unit:H.psi,prefix:R.NONE[""]},W.auto=JSON.parse(JSON.stringify(W.si));var G=W.auto;for(var $ in P.setUnitSystem=function(e){if(!(0,a.hasOwnProperty)(W,e))throw new Error("Unit system "+e+" does not exist. Choices are: "+Object.keys(W).join(", "));G=W[e]},P.getUnitSystem=function(){for(var e in W)if((0,a.hasOwnProperty)(W,e)&&W[e]===G)return e},P.typeConverters={BigNumber:function(e){return new M(e+"")},Fraction:function(e){return new O(e)},Complex:function(e){return e},number:function(e){return e}},P._getNumberConverter=function(e){if(!P.typeConverters[e])throw new TypeError('Unsupported type "'+e+'"');return P.typeConverters[e]},H)if((0,a.hasOwnProperty)(H,$)){var Q=H[$];Q.dimensions=Q.base.dimensions}for(var X in Z)if((0,a.hasOwnProperty)(Z,X)){var Y=H[Z[X]],J={};for(var K in Y)(0,a.hasOwnProperty)(Y,K)&&(J[K]=Y[K]);J.name=X,H[X]=J}return P.isValidAlpha=function(e){return/^[a-zA-Z]$/.test(e)},P.createUnit=function(e,t){if("object"!==n(e))throw new TypeError("createUnit expects first parameter to be of type 'Object'");if(t&&t.override)for(var r in e)if((0,a.hasOwnProperty)(e,r)&&P.deleteUnit(r),e[r].aliases)for(var i=0;i<e[r].aliases.length;i++)P.deleteUnit(e[r].aliases[i]);var o;for(var s in e)(0,a.hasOwnProperty)(e,s)&&(o=P.createUnitSingle(s,e[s]));return o},P.createUnitSingle=function(e,t,r){if(null==t&&(t={}),"string"!=typeof e)throw new TypeError("createUnitSingle expects first parameter to be of type 'string'");if((0,a.hasOwnProperty)(H,e))throw new Error('Cannot create unit "'+e+'": a unit with that name already exists');!function(e){for(var t=0;t<e.length;t++){if(c=e.charAt(t),0===t&&!P.isValidAlpha(c))throw new Error('Invalid unit name (must begin with alpha character): "'+e+'"');if(t>0&&!P.isValidAlpha(c)&&!A(c))throw new Error('Invalid unit name (only alphanumeric characters are allowed): "'+e+'"')}}(e);var i,o,s,u=null,l=[],d=0;if(t&&"Unit"===t.type)u=t.clone();else if("string"==typeof t)""!==t&&(i=t);else{if("object"!==n(t))throw new TypeError('Cannot create unit "'+e+'" from "'+t.toString()+'": expecting "string" or "Unit" or "Object"');i=t.definition,o=t.prefixes,d=t.offset,s=t.baseName,t.aliases&&(l=t.aliases.valueOf())}if(l)for(var f=0;f<l.length;f++)if((0,a.hasOwnProperty)(H,l[f]))throw new Error('Cannot create alias "'+l[f]+'": a unit with that name already exists');if(i&&"string"==typeof i&&!u)try{u=P.parse(i,{allowNoUnits:!0})}catch(t){throw t.message='Could not create unit "'+e+'" from "'+i+'": '+t.message,t}else i&&"Unit"===i.type&&(u=i.clone());l=l||[],d=d||0,o=o&&o.toUpperCase&&R[o.toUpperCase()]||R.NONE;var p={};if(u){p={name:e,value:u.value,dimensions:u.dimensions.slice(0),prefixes:o,offset:d};var m=!1;for(var h in F)if((0,a.hasOwnProperty)(F,h)){for(var y=!0,v=0;v<q.length;v++)if(Math.abs((p.dimensions[v]||0)-(F[h].dimensions[v]||0))>1e-12){y=!1;break}if(y){m=!0,p.base=F[h];break}}if(!m){s=s||e+"_STUFF";var g={dimensions:u.dimensions.slice(0)};g.key=s,F[s]=g,G[s]={unit:p,prefix:R.NONE[""]},p.base=F[s]}}else{if(s=s||e+"_STUFF",q.indexOf(s)>=0)throw new Error('Cannot create new base unit "'+e+'": a base unit with that name already exists (and cannot be overridden)');for(var b in q.push(s),F)(0,a.hasOwnProperty)(F,b)&&(F[b].dimensions[q.length-1]=0);for(var x={dimensions:[]},D=0;D<q.length;D++)x.dimensions[D]=0;x.dimensions[q.length-1]=1,x.key=s,F[s]=x,p={name:e,value:1,dimensions:F[s].dimensions.slice(0),prefixes:o,offset:d,base:F[s]},G[s]={unit:p,prefix:R.NONE[""]}}P.UNITS[e]=p;for(var _=0;_<l.length;_++){var w=l[_],N={};for(var M in p)(0,a.hasOwnProperty)(p,M)&&(N[M]=p[M]);N.name=w,P.UNITS[w]=N}return new P(null,e)},P.deleteUnit=function(e){delete P.UNITS[e]},P.PREFIXES=R,P.BASE_DIMENSIONS=q,P.BASE_UNITS=F,P.UNIT_SYSTEMS=W,P.UNITS=H,P}),{isClass:!0});t.createUnitClass=l})),Cn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUnitFunction=void 0;var n=["typed","Unit"],r=(0,h.factory)("unit",n,(function(e){var t=e.typed,n=e.Unit;return t("unit",{Unit:function(e){return e.clone()},string:function(e){return n.isValuelessUnit(e)?new n(null,e):n.parse(e,{allowNoUnits:!0})},"number | BigNumber | Fraction | Complex, string":function(e,t){return new n(e,t)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createUnitFunction=r})),Tn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSparse=void 0;var n=["typed","SparseMatrix"],r=(0,h.factory)("sparse",n,(function(e){var t=e.typed,n=e.SparseMatrix;return t("sparse",{"":function(){return new n([])},string:function(e){return new n([],e)},"Array | Matrix":function(e){return new n(e)},"Array | Matrix, string":function(e,t){return new n(e,t)}})}));t.createSparse=r})),kn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCreateUnit=void 0;var n=["typed","Unit"],r=(0,h.factory)("createUnit",n,(function(e){var t=e.typed,n=e.Unit;return t("createUnit",{"Object, Object":function(e,t){return n.createUnit(e,t)},Object:function(e){return n.createUnit(e,{})},"string, Unit | string | Object, Object":function(e,t,r){var i={};return i[e]=t,n.createUnit(i,r)},"string, Unit | string | Object":function(e,t){var r={};return r[e]=t,n.createUnit(r,{})},string:function(e){var t={};return t[e]={},n.createUnit(t,{})}})}));t.createCreateUnit=r})),In=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAcos=void 0;var n=["typed","config","Complex"],r=(0,h.factory)("acos",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t("acos",{number:function(e){return e>=-1&&e<=1||n.predictable?Math.acos(e):new r(e,0).acos()},Complex:function(e){return e.acos()},BigNumber:function(e){return e.acos()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcos=r})),Bn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAcosh=void 0;var n=["typed","config","Complex"],r=(0,h.factory)("acosh",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t("acosh",{number:function(e){return e>=1||n.predictable?(0,F.acoshNumber)(e):e<=-1?new r(Math.log(Math.sqrt(e*e-1)-e),Math.PI):new r(e,0).acosh()},Complex:function(e){return e.acosh()},BigNumber:function(e){return e.acosh()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcosh=r})),zn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAcot=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("acot",n,(function(e){var t=e.typed,n=e.BigNumber;return t("acot",{number:F.acotNumber,Complex:function(e){return e.acot()},BigNumber:function(e){return new n(1).div(e).atan()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcot=r})),Rn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAcoth=void 0;var n=["typed","config","Complex","BigNumber"],r=(0,h.factory)("acoth",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t("acoth",{number:function(e){return e>=1||e<=-1||n.predictable?(0,F.acothNumber)(e):new r(e,0).acoth()},Complex:function(e){return e.acoth()},BigNumber:function(e){return new i(1).div(e).atanh()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcoth=r})),qn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAcsc=void 0;var n=["typed","config","Complex","BigNumber"],r=(0,h.factory)("acsc",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t("acsc",{number:function(e){return e<=-1||e>=1||n.predictable?(0,F.acscNumber)(e):new r(e,0).acsc()},Complex:function(e){return e.acsc()},BigNumber:function(e){return new i(1).div(e).asin()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcsc=r})),Fn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAcsch=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("acsch",n,(function(e){var t=e.typed,n=e.BigNumber;return t("acsch",{number:F.acschNumber,Complex:function(e){return e.acsch()},BigNumber:function(e){return new n(1).div(e).asinh()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcsch=r})),Un=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAsec=void 0;var n=["typed","config","Complex","BigNumber"],r=(0,h.factory)("asec",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t("asec",{number:function(e){return e<=-1||e>=1||n.predictable?(0,F.asecNumber)(e):new r(e,0).asec()},Complex:function(e){return e.asec()},BigNumber:function(e){return new i(1).div(e).acos()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAsec=r})),Ln=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAsech=void 0;var n=["typed","config","Complex","BigNumber"],r=(0,h.factory)("asech",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t("asech",{number:function(e){if(e<=1&&e>=-1||n.predictable){var t=1/e;if(t>0||n.predictable)return(0,F.asechNumber)(e);var i=Math.sqrt(t*t-1);return new r(Math.log(i-t),Math.PI)}return new r(e,0).asech()},Complex:function(e){return e.asech()},BigNumber:function(e){return new i(1).div(e).acosh()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createAsech=r})),Hn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAsin=void 0;var n=["typed","config","Complex"],r=(0,h.factory)("asin",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t("asin",{number:function(e){return e>=-1&&e<=1||n.predictable?Math.asin(e):new r(e,0).asin()},Complex:function(e){return e.asin()},BigNumber:function(e){return e.asin()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAsin=r})),Zn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAsinh=void 0;var n=["typed"],r=(0,h.factory)("asinh",n,(function(e){return(0,e.typed)("asinh",{number:F.asinhNumber,Complex:function(e){return e.asinh()},BigNumber:function(e){return e.asinh()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAsinh=r})),Vn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAtan=void 0;var n=["typed"],r=(0,h.factory)("atan",n,(function(e){return(0,e.typed)("atan",{number:function(e){return Math.atan(e)},Complex:function(e){return e.atan()},BigNumber:function(e){return e.atan()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAtan=r})),Wn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAtan2=void 0;var n=["typed","matrix","equalScalar","BigNumber","DenseMatrix"],r=(0,h.factory)("atan2",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.BigNumber,a=e.DenseMatrix,o=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),s=(0,Ae.createAlgorithm03)({typed:t}),c=(0,Le.createAlgorithm09)({typed:t,equalScalar:r}),u=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),l=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),d=(0,we.createAlgorithm13)({typed:t}),f=(0,pe.createAlgorithm14)({typed:t});return t("atan2",{"number, number":Math.atan2,"BigNumber, BigNumber":function(e,t){return i.atan2(e,t)},"SparseMatrix, SparseMatrix":function(e,t){return c(e,t,this,!1)},"SparseMatrix, DenseMatrix":function(e,t){return o(t,e,this,!0)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,this,!1)},"DenseMatrix, DenseMatrix":function(e,t){return d(e,t,this)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"SparseMatrix, number | BigNumber":function(e,t){return u(e,t,this,!1)},"DenseMatrix, number | BigNumber":function(e,t){return f(e,t,this,!1)},"number | BigNumber, SparseMatrix":function(e,t){return l(t,e,this,!0)},"number | BigNumber, DenseMatrix":function(e,t){return f(t,e,this,!0)},"Array, number | BigNumber":function(e,t){return f(n(e),t,this,!1).valueOf()},"number | BigNumber, Array":function(e,t){return f(n(t),e,this,!0).valueOf()}})}));t.createAtan2=r})),Gn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAtanh=void 0;var n=["typed","config","Complex"],r=(0,h.factory)("atanh",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t("atanh",{number:function(e){return e<=1&&e>=-1||n.predictable?(0,F.atanhNumber)(e):new r(e,0).atanh()},Complex:function(e){return e.atanh()},BigNumber:function(e){return e.atanh()},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAtanh=r})),$n=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCos=void 0;var n=["typed"],r=(0,h.factory)("cos",n,(function(e){return(0,e.typed)("cos",{number:Math.cos,Complex:function(e){return e.cos()},BigNumber:function(e){return e.cos()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cos is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createCos=r})),Qn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCosh=void 0;var n=["typed"],r=(0,h.factory)("cosh",n,(function(e){return(0,e.typed)("cosh",{number:u.cosh,Complex:function(e){return e.cosh()},BigNumber:function(e){return e.cosh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cosh is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createCosh=r})),Xn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCot=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("cot",n,(function(e){var t=e.typed,n=e.BigNumber;return t("cot",{number:F.cotNumber,Complex:function(e){return e.cot()},BigNumber:function(e){return new n(1).div(e.tan())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function cot is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createCot=r})),Yn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCoth=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("coth",n,(function(e){var t=e.typed,n=e.BigNumber;return t("coth",{number:F.cothNumber,Complex:function(e){return e.coth()},BigNumber:function(e){return new n(1).div(e.tanh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function coth is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createCoth=r})),Jn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsc=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("csc",n,(function(e){var t=e.typed,n=e.BigNumber;return t("csc",{number:F.cscNumber,Complex:function(e){return e.csc()},BigNumber:function(e){return new n(1).div(e.sin())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function csc is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createCsc=r})),Kn=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsch=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("csch",n,(function(e){var t=e.typed,n=e.BigNumber;return t("csch",{number:F.cschNumber,Complex:function(e){return e.csch()},BigNumber:function(e){return new n(1).div(e.sinh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function csch is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createCsch=r})),er=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSec=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("sec",n,(function(e){var t=e.typed,n=e.BigNumber;return t("sec",{number:F.secNumber,Complex:function(e){return e.sec()},BigNumber:function(e){return new n(1).div(e.cos())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sec is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createSec=r})),tr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSech=void 0;var n=["typed","BigNumber"],r=(0,h.factory)("sech",n,(function(e){var t=e.typed,n=e.BigNumber;return t("sech",{number:F.sechNumber,Complex:function(e){return e.sech()},BigNumber:function(e){return new n(1).div(e.cosh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sech is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createSech=r})),nr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSin=void 0;var n=["typed"],r=(0,h.factory)("sin",n,(function(e){return(0,e.typed)("sin",{number:Math.sin,Complex:function(e){return e.sin()},BigNumber:function(e){return e.sin()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sin is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createSin=r})),rr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSinh=void 0;var n=["typed"],r=(0,h.factory)("sinh",n,(function(e){return(0,e.typed)("sinh",{number:F.sinhNumber,Complex:function(e){return e.sinh()},BigNumber:function(e){return e.sinh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function sinh is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createSinh=r})),ir=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTan=void 0;var n=["typed"],r=(0,h.factory)("tan",n,(function(e){return(0,e.typed)("tan",{number:Math.tan,Complex:function(e){return e.tan()},BigNumber:function(e){return e.tan()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function tan is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createTan=r})),ar=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTanh=void 0;var n=["typed"],r=(0,h.factory)("tanh",n,(function(e){return(0,e.typed)("tanh",{number:u.tanh,Complex:function(e){return e.tanh()},BigNumber:function(e){return e.tanh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError("Unit in function tanh is no angle");return this(e.value)},"Array | Matrix":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createTanh=r})),or=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetCartesian=void 0;var n=["typed","size","subset","compareNatural","Index","DenseMatrix"],r=(0,h.factory)("setCartesian",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index,o=e.DenseMatrix;return t("setCartesian",{"Array | Matrix, Array | Matrix":function(e,t){var s=[];if(0!==r(n(e),new a(0))&&0!==r(n(t),new a(0))){var c=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i),u=(0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(i);s=[];for(var l=0;l<c.length;l++)for(var d=0;d<u.length;d++)s.push([c[l],u[d]])}return Array.isArray(e)&&Array.isArray(t)?s:new o(s)}})}));t.createSetCartesian=r})),sr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetDifference=void 0;var n="setDifference",r=["typed","size","subset","compareNatural","Index","DenseMatrix"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.size,i=e.subset,a=e.compareNatural,o=e.Index,s=e.DenseMatrix;return t(n,{"Array | Matrix, Array | Matrix":function(e,t){var n;if(0===i(r(e),new o(0)))n=[];else{if(0===i(r(t),new o(0)))return(0,m.flatten)(e.toArray());var c,u=(0,m.identify)((0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(a)),l=(0,m.identify)((0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(a));n=[];for(var d=0;d<u.length;d++){c=!1;for(var f=0;f<l.length;f++)if(0===a(u[d].value,l[f].value)&&u[d].identifier===l[f].identifier){c=!0;break}c||n.push(u[d])}}return Array.isArray(e)&&Array.isArray(t)?(0,m.generalize)(n):new s((0,m.generalize)(n))}})}));t.createSetDifference=i})),cr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetDistinct=void 0;var n=["typed","size","subset","compareNatural","Index","DenseMatrix"],r=(0,h.factory)("setDistinct",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index,o=e.DenseMatrix;return t("setDistinct",{"Array | Matrix":function(e){var t;if(0===r(n(e),new a(0)))t=[];else{var s=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i);(t=[]).push(s[0]);for(var c=1;c<s.length;c++)0!==i(s[c],s[c-1])&&t.push(s[c])}return Array.isArray(e)?t:new o(t)}})}));t.createSetDistinct=r})),ur=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetIntersect=void 0;var n=["typed","size","subset","compareNatural","Index","DenseMatrix"],r=(0,h.factory)("setIntersect",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index,o=e.DenseMatrix;return t("setIntersect",{"Array | Matrix, Array | Matrix":function(e,t){var s;if(0===r(n(e),new a(0))||0===r(n(t),new a(0)))s=[];else{var c=(0,m.identify)((0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i)),u=(0,m.identify)((0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(i));s=[];for(var l=0;l<c.length;l++)for(var d=0;d<u.length;d++)if(0===i(c[l].value,u[d].value)&&c[l].identifier===u[d].identifier){s.push(c[l]);break}}return Array.isArray(e)&&Array.isArray(t)?(0,m.generalize)(s):new o((0,m.generalize)(s))}})}));t.createSetIntersect=r})),lr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetIsSubset=void 0;var n=["typed","size","subset","compareNatural","Index"],r=(0,h.factory)("setIsSubset",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index;return t("setIsSubset",{"Array | Matrix, Array | Matrix":function(e,t){if(0===r(n(e),new a(0)))return!0;if(0===r(n(t),new a(0)))return!1;for(var o,s=(0,m.identify)((0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i)),c=(0,m.identify)((0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(i)),u=0;u<s.length;u++){o=!1;for(var l=0;l<c.length;l++)if(0===i(s[u].value,c[l].value)&&s[u].identifier===c[l].identifier){o=!0;break}if(!1===o)return!1}return!0}})}));t.createSetIsSubset=r})),dr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetMultiplicity=void 0;var n="setMultiplicity",r=["typed","size","subset","compareNatural","Index"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.size,i=e.subset,a=e.compareNatural,o=e.Index;return t(n,{"number | BigNumber | Fraction | Complex, Array | Matrix":function(e,t){if(0===i(r(t),new o(0)))return 0;for(var n=(0,m.flatten)(Array.isArray(t)?t:t.toArray()),s=0,c=0;c<n.length;c++)0===a(n[c],e)&&s++;return s}})}));t.createSetMultiplicity=i})),fr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetPowerset=void 0;var n=["typed","size","subset","compareNatural","Index"],r=(0,h.factory)("setPowerset",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index;return t("setPowerset",{"Array | Matrix":function(e){if(0===r(n(e),new a(0)))return[];for(var t=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i),s=[],c=0;c.toString(2).length<=t.length;)s.push(o(t,c.toString(2).split("").reverse())),c++;return function(e){for(var t=[],n=e.length-1;n>0;n--)for(var r=0;r<n;r++)e[r].length>e[r+1].length&&(t=e[r],e[r]=e[r+1],e[r+1]=t);return e}(s)}});function o(e,t){for(var n=[],r=0;r<t.length;r++)"1"===t[r]&&n.push(e[r]);return n}}));t.createSetPowerset=r})),pr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetSize=void 0;var n=["typed","compareNatural"],r=(0,h.factory)("setSize",n,(function(e){var t=e.typed,n=e.compareNatural;return t("setSize",{"Array | Matrix":function(e){return Array.isArray(e)?(0,m.flatten)(e).length:(0,m.flatten)(e.toArray()).length},"Array | Matrix, boolean":function(e,t){if(!1===t||0===e.length)return Array.isArray(e)?(0,m.flatten)(e).length:(0,m.flatten)(e.toArray()).length;for(var r=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(n),i=1,a=1;a<r.length;a++)0!==n(r[a],r[a-1])&&i++;return i}})}));t.createSetSize=r})),mr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetSymDifference=void 0;var n="setSymDifference",r=["typed","size","concat","subset","setDifference","Index"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.size,i=e.concat,a=e.subset,o=e.setDifference,s=e.Index;return t(n,{"Array | Matrix, Array | Matrix":function(e,t){if(0===a(r(e),new s(0)))return(0,m.flatten)(t);if(0===a(r(t),new s(0)))return(0,m.flatten)(e);var n=(0,m.flatten)(e),c=(0,m.flatten)(t);return i(o(n,c),o(c,n))}})}));t.createSetSymDifference=i})),hr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSetUnion=void 0;var n=["typed","size","concat","subset","setIntersect","setSymDifference","Index"],r=(0,h.factory)("setUnion",n,(function(e){var t=e.typed,n=e.size,r=e.concat,i=e.subset,a=e.setIntersect,o=e.setSymDifference,s=e.Index;return t("setUnion",{"Array | Matrix, Array | Matrix":function(e,t){if(0===i(n(e),new s(0)))return(0,m.flatten)(t);if(0===i(n(t),new s(0)))return(0,m.flatten)(e);var c=(0,m.flatten)(e),u=(0,m.flatten)(t);return r(o(c,u),a(c,u))}})}));t.createSetUnion=r})),yr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAdd=void 0;var n=["typed","matrix","addScalar","equalScalar","DenseMatrix","SparseMatrix"],r=(0,h.factory)("add",n,(function(e){var t=e.typed,n=e.matrix,r=e.addScalar,i=e.equalScalar,o=e.DenseMatrix,s=(e.SparseMatrix,(0,xe.createAlgorithm01)({typed:t})),c=(0,De.createAlgorithm04)({typed:t,equalScalar:i}),u=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:o}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t("add",(0,a.extend)({"DenseMatrix, DenseMatrix":function(e,t){return l(e,t,r)},"DenseMatrix, SparseMatrix":function(e,t){return s(e,t,r,!1)},"SparseMatrix, DenseMatrix":function(e,t){return s(t,e,r,!0)},"SparseMatrix, SparseMatrix":function(e,t){return c(e,t,r)},"Array, Array":function(e,t){return this(n(e),n(t)).valueOf()},"Array, Matrix":function(e,t){return this(n(e),t)},"Matrix, Array":function(e,t){return this(e,n(t))},"DenseMatrix, any":function(e,t){return d(e,t,r,!1)},"SparseMatrix, any":function(e,t){return u(e,t,r,!1)},"any, DenseMatrix":function(e,t){return d(t,e,r,!0)},"any, SparseMatrix":function(e,t){return u(t,e,r,!0)},"Array, any":function(e,t){return d(n(e),t,r,!1).valueOf()},"any, Array":function(e,t){return d(n(t),e,r,!0).valueOf()},"any, any":r,"any, any, ...any":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}},r.signatures))}));t.createAdd=r})),vr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createHypot=void 0;var n=["typed","abs","addScalar","divideScalar","multiplyScalar","sqrt","smaller","isPositive"],r=(0,h.factory)("hypot",n,(function(e){var t=e.typed,n=e.abs,r=e.addScalar,i=e.divideScalar,a=e.multiplyScalar,o=e.sqrt,s=e.smaller,c=e.isPositive;return t("hypot",{"... number | BigNumber":function(e){for(var t=0,u=0,l=0;l<e.length;l++){var d=n(e[l]);s(u,d)?(t=a(t,a(i(u,d),i(u,d))),t=r(t,1),u=d):t=r(t,c(d)?a(i(d,u),i(d,u)):d)}return a(u,o(t))},Array:function(e){return this.apply(this,(0,m.flatten)(e))},Matrix:function(e){return this.apply(this,(0,m.flatten)(e.toArray()))}})}));t.createHypot=r})),gr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createNorm=void 0;var n=["typed","abs","add","pow","conj","sqrt","multiply","equalScalar","larger","smaller","matrix","ctranspose","eigs"],r=(0,h.factory)("norm",n,(function(e){var t=e.typed,n=e.abs,r=e.add,i=e.pow,a=e.conj,o=e.sqrt,s=e.multiply,c=e.equalScalar,u=e.larger,l=e.smaller,d=e.matrix,f=e.ctranspose,p=e.eigs;return t("norm",{number:Math.abs,Complex:function(e){return e.abs()},BigNumber:function(e){return e.abs()},boolean:function(e){return Math.abs(e)},Array:function(e){return y(d(e),2)},Matrix:function(e){return y(e,2)},"number | Complex | BigNumber | boolean, number | BigNumber | string":function(e){return this(e)},"Array, number | BigNumber | string":function(e,t){return y(d(e),t)},"Matrix, number | BigNumber | string":function(e,t){return y(e,t)}});function m(e,t){if(t===Number.POSITIVE_INFINITY||"inf"===t)return function(e){var t=0;return e.forEach((function(e){var r=n(e);u(r,t)&&(t=r)}),!0),t}(e);if(t===Number.NEGATIVE_INFINITY||"-inf"===t)return function(e){var t;return e.forEach((function(e){var r=n(e);t&&!l(r,t)||(t=r)}),!0),t||0}(e);if("fro"===t)return y(e,2);if("number"==typeof t&&!isNaN(t)){if(!c(t,0)){var a=0;return e.forEach((function(e){a=r(i(n(e),t),a)}),!0),i(a,1/t)}return Number.POSITIVE_INFINITY}throw new Error("Unsupported parameter value")}function h(e,t){if(1===t)return function(e){var t=[],i=0;return e.forEach((function(e,a){var o=a[1],s=r(t[o]||0,n(e));u(s,i)&&(i=s),t[o]=s}),!0),i}(e);if(t===Number.POSITIVE_INFINITY||"inf"===t)return function(e){var t=[],i=0;return e.forEach((function(e,a){var o=a[0],s=r(t[o]||0,n(e));u(s,i)&&(i=s),t[o]=s}),!0),i}(e);if("fro"===t)return function(e){var t=0;return e.forEach((function(e,n){t=r(t,s(e,a(e)))})),n(o(t))}(e);if(2===t)return function(e){var t=e.size();if(t[0]!==t[1])throw new RangeError("Invalid matrix dimensions");var r=f(e),i=s(r,e),a=p(i).values,c=a.get([a.size()[0]-1]);return n(o(c))}(e);throw new Error("Unsupported parameter value "+t)}function y(e,t){var n=e.size();if(1===n.length)return m(e,t);if(2===n.length){if(n[0]&&n[1])return h(e,t);throw new RangeError("Invalid matrix dimensions")}}}));t.createNorm=r})),br=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDot=void 0;var n=["typed","addScalar","multiplyScalar","conj","size"],r=(0,h.factory)("dot",n,(function(e){var t=e.typed,n=e.addScalar,r=e.multiplyScalar,a=e.conj,o=e.size;return t("dot",{"Array | DenseMatrix, Array | DenseMatrix":function(e,o){var u=s(e,o),l=(0,i.isMatrix)(e)?e._data:e,d=(0,i.isMatrix)(e)?e._datatype:void 0,f=(0,i.isMatrix)(o)?o._data:o,p=(0,i.isMatrix)(o)?o._datatype:void 0,m=2===c(e).length,h=2===c(o).length,y=n,v=r;if(d&&p&&d===p&&"string"==typeof d){var g=d;y=t.find(n,[g,g]),v=t.find(r,[g,g])}if(!m&&!h){for(var b=v(a(l[0]),f[0]),x=1;x<u;x++)b=y(b,v(a(l[x]),f[x]));return b}if(!m&&h){for(var D=v(a(l[0]),f[0][0]),_=1;_<u;_++)D=y(D,v(a(l[_]),f[_][0]));return D}if(m&&!h){for(var w=v(a(l[0][0]),f[0]),N=1;N<u;N++)w=y(w,v(a(l[N][0]),f[N]));return w}if(m&&h){for(var M=v(a(l[0][0]),f[0][0]),O=1;O<u;O++)M=y(M,v(a(l[O][0]),f[O][0]));return M}},"SparseMatrix, SparseMatrix":function(e,t){s(e,t);var i=e._index,a=e._values,o=t._index,c=t._values,u=0,l=n,d=r,f=0,p=0;for(;f<i.length&&p<o.length;){var m=i[f],h=o[p];m<h?f++:m>h?p++:m===h&&(u=l(u,d(a[f],c[p])),f++,p++)}return u}});function s(e,t){var n,r,i=c(e),a=c(t);if(1===i.length)n=i[0];else{if(2!==i.length||1!==i[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+i.join(", ")+")");n=i[0]}if(1===a.length)r=a[0];else{if(2!==a.length||1!==a[1])throw new RangeError("Expected a column vector, instead got a matrix of size ("+a.join(", ")+")");r=a[0]}if(n!==r)throw new RangeError("Vectors must have equal length ("+n+" != "+r+")");if(0===n)throw new RangeError("Cannot calculate the dot product of empty vectors");return n}function c(e){return(0,i.isMatrix)(e)?e.size():o(e)}}));t.createDot=r})),xr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createTrace=void 0;var n=["typed","matrix","add"],r=(0,h.factory)("trace",n,(function(e){var t=e.typed,n=e.matrix,r=e.add;return t("trace",{Array:function(e){return i(n(e))},SparseMatrix:function(e){var t=e._values,n=e._index,i=e._ptr,a=e._size,o=a[0],s=a[1];if(o===s){var c=0;if(t.length>0)for(var u=0;u<s;u++)for(var l=i[u],f=i[u+1],p=l;p<f;p++){var m=n[p];if(m===u){c=r(c,t[p]);break}if(m>u)break}return c}throw new RangeError("Matrix must be square (size: "+(0,d.format)(a)+")")},DenseMatrix:i,any:a.clone});function i(e){var t=e._size,n=e._data;switch(t.length){case 1:if(1===t[0])return(0,a.clone)(n[0]);throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");case 2:var i=t[0];if(i===t[1]){for(var o=0,s=0;s<i;s++)o=r(o,n[s][s]);return o}throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+(0,d.format)(t)+")")}}}));t.createTrace=r})),Dr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIndex=void 0;var n=["typed","Index"],r=(0,h.factory)("index",n,(function(e){var t=e.typed,n=e.Index;return t("index",{"...number | string | BigNumber | Range | Array | Matrix":function(e){var t=e.map((function(e){return(0,i.isBigNumber)(e)?e.toNumber():Array.isArray(e)||(0,i.isMatrix)(e)?e.map((function(e){return(0,i.isBigNumber)(e)?e.toNumber():e})):e})),r=new n;return n.apply(r,t),r}})}));t.createIndex=r})),_r=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.keywords=void 0;t.keywords={end:!0}})),wr=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.createNode=void 0;var r=["mathWithTransform"],o=(0,h.factory)("Node",r,(function(e){var t=e.mathWithTransform;function r(){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator")}return r.prototype.evaluate=function(e){return this.compile().evaluate(e)},r.prototype.type="Node",r.prototype.isNode=!0,r.prototype.comment="",r.prototype.compile=function(){var e=this._compile(t,{}),n={};return{evaluate:function(t){var r=t||{};return function(e){for(var t in e)if((0,a.hasOwnProperty)(e,t)&&t in _r.keywords)throw new Error('Scope contains an illegal symbol, "'+t+'" is a reserved keyword')}(r),e(r,n,null)}}},r.prototype._compile=function(e,t){throw new Error("Method _compile should be implemented by type "+this.type)},r.prototype.forEach=function(e){throw new Error("Cannot run forEach on a Node interface")},r.prototype.map=function(e){throw new Error("Cannot run map on a Node interface")},r.prototype._ifNode=function(e){if(!(0,i.isNode)(e))throw new TypeError("Callback function must return a Node");return e},r.prototype.traverse=function(e){e(this,null,null),function e(t,n){t.forEach((function(t,r,i){n(t,r,i),e(t,n)}))}(this,e)},r.prototype.transform=function(e){return function t(n,r,i){var a=e(n,r,i);return a!==n?a:n.map(t)}(this,null,null)},r.prototype.filter=function(e){var t=[];return this.traverse((function(n,r,i){e(n,r,i)&&t.push(n)})),t},r.prototype.clone=function(){throw new Error("Cannot clone a Node interface")},r.prototype.cloneDeep=function(){return this.map((function(e){return e.cloneDeep()}))},r.prototype.equals=function(e){return!!e&&(0,a.deepStrictEqual)(this,e)},r.prototype.toString=function(e){var t;if(e&&"object"===n(e))switch(n(e.handler)){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toString(e)},r.prototype.toJSON=function(){throw new Error("Cannot serialize object: toJSON not implemented by "+this.type)},r.prototype.toHTML=function(e){var t;if(e&&"object"===n(e))switch(n(e.handler)){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this.toHTML(e)},r.prototype._toString=function(){throw new Error("_toString not implemented for "+this.type)},r.prototype.toTex=function(e){var t;if(e&&"object"===n(e))switch(n(e.handler)){case"object":case"undefined":break;case"function":t=e.handler(this,e);break;default:throw new TypeError("Object or function expected as callback")}return void 0!==t?t:this._toTex(e)},r.prototype._toTex=function(e){throw new Error("_toTex not implemented for "+this.type)},r.prototype.getIdentifier=function(){return this.type},r.prototype.getContent=function(){return this},r}),{isClass:!0,isNode:!0});t.createNode=o})),Nr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.errorTransform=function(e){if(e&&e.isIndexError)return new p.IndexError(e.index+1,e.min+1,void 0!==e.max?e.max+1:void 0);return e}})),Mr=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.accessFactory=function(e){var t=e.subset;return function(e,r){try{if(Array.isArray(e))return t(e,r);if(e&&"function"==typeof e.subset)return e.subset(r);if("string"==typeof e)return t(e,r);if("object"===n(e)){if(!r.isObjectProperty())throw new TypeError("Cannot apply a numeric index as object property");return(0,St.getSafeProperty)(e,r.getObjectProperty())}throw new TypeError("Cannot apply index: unsupported type of object")}catch(e){throw(0,Nr.errorTransform)(e)}}}})),Or=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAccessorNode=void 0;var n=["subset","Node"],r=(0,h.factory)("AccessorNode",n,(function(e){var t=e.subset,n=e.Node,r=(0,Mr.accessFactory)({subset:t});function a(e,t){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if(!(0,i.isNode)(e))throw new TypeError('Node expected for parameter "object"');if(!(0,i.isIndexNode)(t))throw new TypeError('IndexNode expected for parameter "index"');this.object=e||null,this.index=t,Object.defineProperty(this,"name",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}.bind(this),set:function(){throw new Error("Cannot assign a new name, name is read-only")}})}function o(e){return!((0,i.isAccessorNode)(e)||(0,i.isArrayNode)(e)||(0,i.isConstantNode)(e)||(0,i.isFunctionNode)(e)||(0,i.isObjectNode)(e)||(0,i.isParenthesisNode)(e)||(0,i.isSymbolNode)(e))}return a.prototype=new n,a.prototype.type="AccessorNode",a.prototype.isAccessorNode=!0,a.prototype._compile=function(e,t){var n=this.object._compile(e,t),i=this.index._compile(e,t);if(this.index.isObjectProperty()){var a=this.index.getObjectProperty();return function(e,t,r){return(0,St.getSafeProperty)(n(e,t,r),a)}}return function(e,t,a){var o=n(e,t,a),s=i(e,t,o);return r(o,s)}},a.prototype.forEach=function(e){e(this.object,"object",this),e(this.index,"index",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.object,"object",this)),this._ifNode(e(this.index,"index",this)))},a.prototype.clone=function(){return new a(this.object,this.index)},a.prototype._toString=function(e){var t=this.object.toString(e);return o(this.object)&&(t="("+t+")"),t+this.index.toString(e)},a.prototype.toHTML=function(e){var t=this.object.toHTML(e);return o(this.object)&&(t='<span class="math-parenthesis math-round-parenthesis">(</span>'+t+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+this.index.toHTML(e)},a.prototype._toTex=function(e){var t=this.object.toTex(e);return o(this.object)&&(t="\\left(' + object + '\\right)"),t+this.index.toTex(e)},a.prototype.toJSON=function(){return{mathjs:"AccessorNode",object:this.object,index:this.index}},a.fromJSON=function(e){return new a(e.object,e.index)},a}),{isClass:!0,isNode:!0});t.createAccessorNode=r})),Sr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createArrayNode=void 0;var n=["Node"],r=(0,h.factory)("ArrayNode",n,(function(e){var t=e.Node;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(this.items=e||[],!Array.isArray(this.items)||!this.items.every(i.isNode))throw new TypeError("Array containing Nodes expected")}return n.prototype=new t,n.prototype.type="ArrayNode",n.prototype.isArrayNode=!0,n.prototype._compile=function(e,t){var n=(0,m.map)(this.items,(function(n){return n._compile(e,t)}));if("Array"!==e.config.matrix){var r=e.matrix;return function(e,t,i){return r((0,m.map)(n,(function(n){return n(e,t,i)})))}}return function(e,t,r){return(0,m.map)(n,(function(n){return n(e,t,r)}))}},n.prototype.forEach=function(e){for(var t=0;t<this.items.length;t++){e(this.items[t],"items["+t+"]",this)}},n.prototype.map=function(e){for(var t=[],r=0;r<this.items.length;r++)t[r]=this._ifNode(e(this.items[r],"items["+r+"]",this));return new n(t)},n.prototype.clone=function(){return new n(this.items.slice(0))},n.prototype._toString=function(e){return"["+this.items.map((function(t){return t.toString(e)})).join(", ")+"]"},n.prototype.toJSON=function(){return{mathjs:"ArrayNode",items:this.items}},n.fromJSON=function(e){return new n(e.items)},n.prototype.toHTML=function(e){return'<span class="math-parenthesis math-square-parenthesis">[</span>'+this.items.map((function(t){return t.toHTML(e)})).join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'},n.prototype._toTex=function(e){var t="\\begin{bmatrix}";return this.items.forEach((function(n){n.items?t+=n.items.map((function(t){return t.toTex(e)})).join("&"):t+=n.toTex(e),t+="\\\\"})),t+="\\end{bmatrix}"},n}),{isClass:!0,isNode:!0});t.createArrayNode=r})),Pr=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.assignFactory=function(e){var t=e.subset,r=e.matrix;return function(e,i,a){try{if(Array.isArray(e))return r(e).subset(i,a).valueOf();if(e&&"function"==typeof e.subset)return e.subset(i,a);if("string"==typeof e)return t(e,i,a);if("object"===n(e)){if(!i.isObjectProperty())throw TypeError("Cannot apply a numeric index as object property");return(0,St.setSafeProperty)(e,i.getObjectProperty(),a),e}throw new TypeError("Cannot apply index: unsupported type of object")}catch(e){throw(0,Nr.errorTransform)(e)}}}})),jr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getPrecedence=r,t.getAssociativity=function(e,t){var i=e;"keep"!==t&&(i=e.getContent());var o=i.getIdentifier(),s=r(i,t);if(null===s)return null;var c=n[s][o];if((0,a.hasOwnProperty)(c,"associativity")){if("left"===c.associativity)return"left";if("right"===c.associativity)return"right";throw Error("'"+o+"' has the invalid associativity '"+c.associativity+"'.")}return null},t.isAssociativeWith=function(e,t,i){var o="keep"!==i?e.getContent():e,s="keep"!==i?e.getContent():t,c=o.getIdentifier(),u=s.getIdentifier(),l=r(o,i);if(null===l)return null;var d=n[l][c];if((0,a.hasOwnProperty)(d,"associativeWith")&&d.associativeWith instanceof Array){for(var f=0;f<d.associativeWith.length;f++)if(d.associativeWith[f]===u)return!0;return!1}return null},t.properties=void 0;var n=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{associativity:"left",associativeWith:[]}},{"OperatorNode:and":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{associativity:"left",associativeWith:[]},"OperatorNode:unequal":{associativity:"left",associativeWith:[]},"OperatorNode:smaller":{associativity:"left",associativeWith:[]},"OperatorNode:larger":{associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{associativity:"left",associativeWith:[]},RelationalNode:{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{associativity:"left",associativeWith:[]}},{"OperatorNode:to":{associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{associativity:"left",associativeWith:[]},"OperatorNode:mod":{associativity:"left",associativeWith:[]}},{"OperatorNode:unaryPlus":{associativity:"right"},"OperatorNode:unaryMinus":{associativity:"right"},"OperatorNode:bitNot":{associativity:"right"},"OperatorNode:not":{associativity:"right"}},{"OperatorNode:pow":{associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{associativity:"left"}},{"OperatorNode:transpose":{associativity:"left"}}];function r(e,t){var r=e;"keep"!==t&&(r=e.getContent());for(var i=r.getIdentifier(),a=0;a<n.length;a++)if(i in n[a])return a;return null}t.properties=n})),Ar=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createAssignmentNode=void 0;var n=["subset","?matrix","Node"],r=(0,h.factory)("AssignmentNode",n,(function(e){var t=e.subset,n=e.matrix,r=e.Node,a=(0,Mr.accessFactory)({subset:t}),o=(0,Pr.assignFactory)({subset:t,matrix:n});function s(e,t,n){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(this.object=e,this.index=n?t:null,this.value=n||t,!(0,i.isSymbolNode)(e)&&!(0,i.isAccessorNode)(e))throw new TypeError('SymbolNode or AccessorNode expected as "object"');if((0,i.isSymbolNode)(e)&&"end"===e.name)throw new Error('Cannot assign to symbol "end"');if(this.index&&!(0,i.isIndexNode)(this.index))throw new TypeError('IndexNode expected as "index"');if(!(0,i.isNode)(this.value))throw new TypeError('Node expected as "value"');Object.defineProperty(this,"name",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}.bind(this),set:function(){throw new Error("Cannot assign a new name, name is read-only")}})}function c(e,t){t||(t="keep");var n=(0,jr.getPrecedence)(e,t),r=(0,jr.getPrecedence)(e.value,t);return"all"===t||null!==r&&r<=n}return s.prototype=new r,s.prototype.type="AssignmentNode",s.prototype.isAssignmentNode=!0,s.prototype._compile=function(e,t){var n=this.object._compile(e,t),r=this.index?this.index._compile(e,t):null,s=this.value._compile(e,t),c=this.object.name;if(this.index){if(this.index.isObjectProperty()){var u=this.index.getObjectProperty();return function(e,t,r){var i=n(e,t,r),a=s(e,t,r);return(0,St.setSafeProperty)(i,u,a)}}if((0,i.isSymbolNode)(this.object))return function(e,t,i){var a=n(e,t,i),u=s(e,t,i),l=r(e,t,a);return(0,St.setSafeProperty)(e,c,o(a,l,u)),u};var l=this.object.object._compile(e,t);if(this.object.index.isObjectProperty()){var d=this.object.index.getObjectProperty();return function(e,t,n){var i=l(e,t,n),a=(0,St.getSafeProperty)(i,d),c=r(e,t,a),u=s(e,t,n);return(0,St.setSafeProperty)(i,d,o(a,c,u)),u}}var f=this.object.index._compile(e,t);return function(e,t,n){var i=l(e,t,n),c=f(e,t,i),u=a(i,c),d=r(e,t,u),p=s(e,t,n);return o(i,c,o(u,d,p)),p}}if(!(0,i.isSymbolNode)(this.object))throw new TypeError("SymbolNode expected as object");return function(e,t,n){return(0,St.setSafeProperty)(e,c,s(e,t,n))}},s.prototype.forEach=function(e){e(this.object,"object",this),this.index&&e(this.index,"index",this),e(this.value,"value",this)},s.prototype.map=function(e){return new s(this._ifNode(e(this.object,"object",this)),this.index?this._ifNode(e(this.index,"index",this)):null,this._ifNode(e(this.value,"value",this)))},s.prototype.clone=function(){return new s(this.object,this.index,this.value)},s.prototype._toString=function(e){var t=this.object.toString(e),n=this.index?this.index.toString(e):"",r=this.value.toString(e);return c(this,e&&e.parenthesis)&&(r="("+r+")"),t+n+" = "+r},s.prototype.toJSON=function(){return{mathjs:"AssignmentNode",object:this.object,index:this.index,value:this.value}},s.fromJSON=function(e){return new s(e.object,e.index,e.value)},s.prototype.toHTML=function(e){var t=this.object.toHTML(e),n=this.index?this.index.toHTML(e):"",r=this.value.toHTML(e);return c(this,e&&e.parenthesis)&&(r='<span class="math-paranthesis math-round-parenthesis">(</span>'+r+'<span class="math-paranthesis math-round-parenthesis">)</span>'),t+n+'<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+r},s.prototype._toTex=function(e){var t=this.object.toTex(e),n=this.index?this.index.toTex(e):"",r=this.value.toTex(e);return c(this,e&&e.parenthesis)&&(r="\\left(".concat(r,"\\right)")),t+n+":="+r},s}),{isClass:!0,isNode:!0});t.createAssignmentNode=r})),Er=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBlockNode=void 0;var n=["ResultSet","Node"],r=(0,h.factory)("BlockNode",n,(function(e){var t=e.ResultSet,n=e.Node;function r(e){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new Error("Array expected");this.blocks=e.map((function(e){var t=e&&e.node,n=!e||void 0===e.visible||e.visible;if(!(0,i.isNode)(t))throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof n)throw new TypeError('Property "visible" must be a boolean');return{node:t,visible:n}}))}return r.prototype=new n,r.prototype.type="BlockNode",r.prototype.isBlockNode=!0,r.prototype._compile=function(e,n){var r=(0,m.map)(this.blocks,(function(t){return{evaluate:t.node._compile(e,n),visible:t.visible}}));return function(e,n,i){var a=[];return(0,m.forEach)(r,(function(t){var r=t.evaluate(e,n,i);t.visible&&a.push(r)})),new t(a)}},r.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,"blocks["+t+"].node",this)},r.prototype.map=function(e){for(var t=[],n=0;n<this.blocks.length;n++){var i=this.blocks[n],a=this._ifNode(e(i.node,"blocks["+n+"].node",this));t[n]={node:a,visible:i.visible}}return new r(t)},r.prototype.clone=function(){return new r(this.blocks.map((function(e){return{node:e.node,visible:e.visible}})))},r.prototype._toString=function(e){return this.blocks.map((function(t){return t.node.toString(e)+(t.visible?"":";")})).join("\n")},r.prototype.toJSON=function(){return{mathjs:"BlockNode",blocks:this.blocks}},r.fromJSON=function(e){return new r(e.blocks)},r.prototype.toHTML=function(e){return this.blocks.map((function(t){return t.node.toHTML(e)+(t.visible?"":'<span class="math-separator">;</span>')})).join('<span class="math-separator"><br /></span>')},r.prototype._toTex=function(e){return this.blocks.map((function(t){return t.node.toTex(e)+(t.visible?"":";")})).join("\\;\\;\n")},r}),{isClass:!0,isNode:!0});t.createBlockNode=r})),Cr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createConditionalNode=void 0;var n=["Node"],r=(0,h.factory)("ConditionalNode",n,(function(e){var t=e.Node;function n(e,t,r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!(0,i.isNode)(e))throw new TypeError("Parameter condition must be a Node");if(!(0,i.isNode)(t))throw new TypeError("Parameter trueExpr must be a Node");if(!(0,i.isNode)(r))throw new TypeError("Parameter falseExpr must be a Node");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n.prototype=new t,n.prototype.type="ConditionalNode",n.prototype.isConditionalNode=!0,n.prototype._compile=function(e,t){var n=this.condition._compile(e,t),r=this.trueExpr._compile(e,t),a=this.falseExpr._compile(e,t);return function(e,t,o){return function(e){if("number"==typeof e||"boolean"==typeof e||"string"==typeof e)return!!e;if(e){if((0,i.isBigNumber)(e))return!e.isZero();if((0,i.isComplex)(e))return!(!e.re&&!e.im);if((0,i.isUnit)(e))return!!e.value}if(null==e)return!1;throw new TypeError('Unsupported type of condition "'+(0,i.typeOf)(e)+'"')}(n(e,t,o))?r(e,t,o):a(e,t,o)}},n.prototype.forEach=function(e){e(this.condition,"condition",this),e(this.trueExpr,"trueExpr",this),e(this.falseExpr,"falseExpr",this)},n.prototype.map=function(e){return new n(this._ifNode(e(this.condition,"condition",this)),this._ifNode(e(this.trueExpr,"trueExpr",this)),this._ifNode(e(this.falseExpr,"falseExpr",this)))},n.prototype.clone=function(){return new n(this.condition,this.trueExpr,this.falseExpr)},n.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=(0,jr.getPrecedence)(this,t),r=this.condition.toString(e),i=(0,jr.getPrecedence)(this.condition,t);("all"===t||"OperatorNode"===this.condition.type||null!==i&&i<=n)&&(r="("+r+")");var a=this.trueExpr.toString(e),o=(0,jr.getPrecedence)(this.trueExpr,t);("all"===t||"OperatorNode"===this.trueExpr.type||null!==o&&o<=n)&&(a="("+a+")");var s=this.falseExpr.toString(e),c=(0,jr.getPrecedence)(this.falseExpr,t);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==c&&c<=n)&&(s="("+s+")"),r+" ? "+a+" : "+s},n.prototype.toJSON=function(){return{mathjs:"ConditionalNode",condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}},n.fromJSON=function(e){return new n(e.condition,e.trueExpr,e.falseExpr)},n.prototype.toHTML=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=(0,jr.getPrecedence)(this,t),r=this.condition.toHTML(e),i=(0,jr.getPrecedence)(this.condition,t);("all"===t||"OperatorNode"===this.condition.type||null!==i&&i<=n)&&(r='<span class="math-parenthesis math-round-parenthesis">(</span>'+r+'<span class="math-parenthesis math-round-parenthesis">)</span>');var a=this.trueExpr.toHTML(e),o=(0,jr.getPrecedence)(this.trueExpr,t);("all"===t||"OperatorNode"===this.trueExpr.type||null!==o&&o<=n)&&(a='<span class="math-parenthesis math-round-parenthesis">(</span>'+a+'<span class="math-parenthesis math-round-parenthesis">)</span>');var s=this.falseExpr.toHTML(e),c=(0,jr.getPrecedence)(this.falseExpr,t);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==c&&c<=n)&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>'),r+'<span class="math-operator math-conditional-operator">?</span>'+a+'<span class="math-operator math-conditional-operator">:</span>'+s},n.prototype._toTex=function(e){return"\\begin{cases} {"+this.trueExpr.toTex(e)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(e)+"}\\\\{"+this.falseExpr.toTex(e)+"}, &\\quad{\\text{otherwise}}\\end{cases}"},n}),{isClass:!0,isNode:!0});t.createConditionalNode=r})),Tr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},kr={"{":"\\{","}":"\\}","\\":"\\textbackslash{}","#":"\\#",$:"\\$","%":"\\%","&":"\\&","^":"\\textasciicircum{}",_:"\\_","~":"\\textasciitilde{}"},Ir={"–":"\\--","—":"\\---"," ":"~","\t":"\\qquad{}","\r\n":"\\newline{}","\n":"\\newline{}"},Br=function(e,t){return Tr({},e,t)},zr=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.preserveFormatting,r=void 0!==n&&n,i=t.escapeMapFn,a=void 0===i?Br:i,o=String(e),s="",c=a(Tr({},kr),r?Tr({},Ir):{}),u=Object.keys(c),l=function(){var e=!1;u.forEach((function(t,n){e||o.length>=t.length&&o.slice(0,t.length)===t&&(s+=c[u[n]],o=o.slice(t.length,o.length),e=!0)})),e||(s+=o.slice(0,1),o=o.slice(1,o.length))};o;)l();return s},Rr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.escapeLatex=u,t.toSymbol=function(e,t){if(t=void 0!==t&&t)return(0,a.hasOwnProperty)(c,e)?c[e]:"\\mathrm{"+u(e)+"}";if((0,a.hasOwnProperty)(i,e))return i[e];return u(e)},t.defaultTemplate=t.latexFunctions=t.latexOperators=t.latexSymbols=void 0;var n,r=(n=zr)&&n.__esModule?n:{default:n};var i={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"};t.latexSymbols=i;var o={transpose:"^\\top",ctranspose:"^H",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"\\~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"};t.latexOperators=o;var s={abs:{1:"\\left|${args[0]}\\right|"},add:{2:"\\left(${args[0]}".concat(o.add,"${args[1]}\\right)")},cbrt:{1:"\\sqrt[3]{${args[0]}}"},ceil:{1:"\\left\\lceil${args[0]}\\right\\rceil"},cube:{1:"\\left(${args[0]}\\right)^3"},divide:{2:"\\frac{${args[0]}}{${args[1]}}"},dotDivide:{2:"\\left(${args[0]}".concat(o.dotDivide,"${args[1]}\\right)")},dotMultiply:{2:"\\left(${args[0]}".concat(o.dotMultiply,"${args[1]}\\right)")},dotPow:{2:"\\left(${args[0]}".concat(o.dotPow,"${args[1]}\\right)")},exp:{1:"\\exp\\left(${args[0]}\\right)"},expm1:"\\left(e".concat(o.pow,"{${args[0]}}-1\\right)"),fix:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},floor:{1:"\\left\\lfloor${args[0]}\\right\\rfloor"},gcd:"\\gcd\\left(${args}\\right)",hypot:"\\hypot\\left(${args}\\right)",log:{1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},log10:{1:"\\log_{10}\\left(${args[0]}\\right)"},log1p:{1:"\\ln\\left(${args[0]}+1\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}+1\\right)"},log2:"\\log_{2}\\left(${args[0]}\\right)",mod:{2:"\\left(${args[0]}".concat(o.mod,"${args[1]}\\right)")},multiply:{2:"\\left(${args[0]}".concat(o.multiply,"${args[1]}\\right)")},norm:{1:"\\left\\|${args[0]}\\right\\|",2:void 0},nthRoot:{2:"\\sqrt[${args[1]}]{${args[0]}}"},nthRoots:{2:"\\{y : $y^{args[1]} = {${args[0]}}\\}"},pow:{2:"\\left(${args[0]}\\right)".concat(o.pow,"{${args[1]}}")},round:{1:"\\left\\lfloor${args[0]}\\right\\rceil",2:void 0},sign:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},sqrt:{1:"\\sqrt{${args[0]}}"},square:{1:"\\left(${args[0]}\\right)^2"},subtract:{2:"\\left(${args[0]}".concat(o.subtract,"${args[1]}\\right)")},unaryMinus:{1:"".concat(o.unaryMinus,"\\left(${args[0]}\\right)")},unaryPlus:{1:"".concat(o.unaryPlus,"\\left(${args[0]}\\right)")},bitAnd:{2:"\\left(${args[0]}".concat(o.bitAnd,"${args[1]}\\right)")},bitNot:{1:o.bitNot+"\\left(${args[0]}\\right)"},bitOr:{2:"\\left(${args[0]}".concat(o.bitOr,"${args[1]}\\right)")},bitXor:{2:"\\left(${args[0]}".concat(o.bitXor,"${args[1]}\\right)")},leftShift:{2:"\\left(${args[0]}".concat(o.leftShift,"${args[1]}\\right)")},rightArithShift:{2:"\\left(${args[0]}".concat(o.rightArithShift,"${args[1]}\\right)")},rightLogShift:{2:"\\left(${args[0]}".concat(o.rightLogShift,"${args[1]}\\right)")},bellNumbers:{1:"\\mathrm{B}_{${args[0]}}"},catalan:{1:"\\mathrm{C}_{${args[0]}}"},stirlingS2:{2:"\\mathrm{S}\\left(${args}\\right)"},arg:{1:"\\arg\\left(${args[0]}\\right)"},conj:{1:"\\left(${args[0]}\\right)^*"},im:{1:"\\Im\\left\\lbrace${args[0]}\\right\\rbrace"},re:{1:"\\Re\\left\\lbrace${args[0]}\\right\\rbrace"},and:{2:"\\left(${args[0]}".concat(o.and,"${args[1]}\\right)")},not:{1:o.not+"\\left(${args[0]}\\right)"},or:{2:"\\left(${args[0]}".concat(o.or,"${args[1]}\\right)")},xor:{2:"\\left(${args[0]}".concat(o.xor,"${args[1]}\\right)")},cross:{2:"\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"},ctranspose:{1:"\\left(${args[0]}\\right)".concat(o.ctranspose)},det:{1:"\\det\\left(${args[0]}\\right)"},dot:{2:"\\left(${args[0]}\\cdot${args[1]}\\right)"},expm:{1:"\\exp\\left(${args[0]}\\right)"},inv:{1:"\\left(${args[0]}\\right)^{-1}"},sqrtm:{1:"{${args[0]}}".concat(o.pow,"{\\frac{1}{2}}")},trace:{1:"\\mathrm{tr}\\left(${args[0]}\\right)"},transpose:{1:"\\left(${args[0]}\\right)".concat(o.transpose)},combinations:{2:"\\binom{${args[0]}}{${args[1]}}"},combinationsWithRep:{2:"\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"},factorial:{1:"\\left(${args[0]}\\right)".concat(o.factorial)},gamma:{1:"\\Gamma\\left(${args[0]}\\right)"},equal:{2:"\\left(${args[0]}".concat(o.equal,"${args[1]}\\right)")},larger:{2:"\\left(${args[0]}".concat(o.larger,"${args[1]}\\right)")},largerEq:{2:"\\left(${args[0]}".concat(o.largerEq,"${args[1]}\\right)")},smaller:{2:"\\left(${args[0]}".concat(o.smaller,"${args[1]}\\right)")},smallerEq:{2:"\\left(${args[0]}".concat(o.smallerEq,"${args[1]}\\right)")},unequal:{2:"\\left(${args[0]}".concat(o.unequal,"${args[1]}\\right)")},erf:{1:"erf\\left(${args[0]}\\right)"},max:"\\max\\left(${args}\\right)",min:"\\min\\left(${args}\\right)",variance:"\\mathrm{Var}\\left(${args}\\right)",acos:{1:"\\cos^{-1}\\left(${args[0]}\\right)"},acosh:{1:"\\cosh^{-1}\\left(${args[0]}\\right)"},acot:{1:"\\cot^{-1}\\left(${args[0]}\\right)"},acoth:{1:"\\coth^{-1}\\left(${args[0]}\\right)"},acsc:{1:"\\csc^{-1}\\left(${args[0]}\\right)"},acsch:{1:"\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"},asec:{1:"\\sec^{-1}\\left(${args[0]}\\right)"},asech:{1:"\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"},asin:{1:"\\sin^{-1}\\left(${args[0]}\\right)"},asinh:{1:"\\sinh^{-1}\\left(${args[0]}\\right)"},atan:{1:"\\tan^{-1}\\left(${args[0]}\\right)"},atan2:{2:"\\mathrm{atan2}\\left(${args}\\right)"},atanh:{1:"\\tanh^{-1}\\left(${args[0]}\\right)"},cos:{1:"\\cos\\left(${args[0]}\\right)"},cosh:{1:"\\cosh\\left(${args[0]}\\right)"},cot:{1:"\\cot\\left(${args[0]}\\right)"},coth:{1:"\\coth\\left(${args[0]}\\right)"},csc:{1:"\\csc\\left(${args[0]}\\right)"},csch:{1:"\\mathrm{csch}\\left(${args[0]}\\right)"},sec:{1:"\\sec\\left(${args[0]}\\right)"},sech:{1:"\\mathrm{sech}\\left(${args[0]}\\right)"},sin:{1:"\\sin\\left(${args[0]}\\right)"},sinh:{1:"\\sinh\\left(${args[0]}\\right)"},tan:{1:"\\tan\\left(${args[0]}\\right)"},tanh:{1:"\\tanh\\left(${args[0]}\\right)"},to:{2:"\\left(${args[0]}".concat(o.to,"${args[1]}\\right)")},numeric:function(e,t){return e.args[0].toTex()},number:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},string:{0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},bignumber:{0:"0",1:"\\left(${args[0]}\\right)"},complex:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+".concat(i.i,"\\cdot\\left(${args[1]}\\right)\\right)")},matrix:{0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},sparse:{0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},unit:{1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"}};t.latexFunctions=s;t.defaultTemplate="\\mathrm{${name}}\\left(${args}\\right)";var c={deg:"^\\circ"};function u(e){return(0,r.default)(e,{preserveFormatting:!0})}})),qr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createConstantNode=void 0;var n=["Node"],r=(0,h.factory)("ConstantNode",n,(function(e){var t=e.Node;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this.value=e}return n.prototype=new t,n.prototype.type="ConstantNode",n.prototype.isConstantNode=!0,n.prototype._compile=function(e,t){var n=this.value;return function(){return n}},n.prototype.forEach=function(e){},n.prototype.map=function(e){return this.clone()},n.prototype.clone=function(){return new n(this.value)},n.prototype._toString=function(e){return(0,d.format)(this.value,e)},n.prototype.toHTML=function(e){var t=this._toString(e);switch((0,i.typeOf)(this.value)){case"number":case"BigNumber":case"Fraction":return'<span class="math-number">'+t+"</span>";case"string":return'<span class="math-string">'+t+"</span>";case"boolean":return'<span class="math-boolean">'+t+"</span>";case"null":return'<span class="math-null-symbol">'+t+"</span>";case"undefined":return'<span class="math-undefined">'+t+"</span>";default:return'<span class="math-symbol">'+t+"</span>"}},n.prototype.toJSON=function(){return{mathjs:"ConstantNode",value:this.value}},n.fromJSON=function(e){return new n(e.value)},n.prototype._toTex=function(e){var t=this._toString(e);switch((0,i.typeOf)(this.value)){case"string":return"\\mathtt{"+(0,Rr.escapeLatex)(t)+"}";case"number":case"BigNumber":if(!isFinite(this.value))return this.value.valueOf()<0?"-\\infty":"\\infty";var n=t.toLowerCase().indexOf("e");return-1!==n?t.substring(0,n)+"\\cdot10^{"+t.substring(n+1)+"}":t;case"Fraction":return this.value.toLatex();default:return t}},n}),{isClass:!0,isNode:!0});t.createConstantNode=r})),Fr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFunctionAssignmentNode=void 0;var n=["typed","Node"],r=(0,h.factory)("FunctionAssignmentNode",n,(function(e){var t=e.typed,n=e.Node;function r(e,t,n){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(t))throw new TypeError('Array containing strings or objects expected for parameter "params"');if(!(0,i.isNode)(n))throw new TypeError('Node expected for parameter "expr"');if(e in _r.keywords)throw new Error('Illegal function name, "'+e+'" is a reserved keyword');this.name=e,this.params=t.map((function(e){return e&&e.name||e})),this.types=t.map((function(e){return e&&e.type||"any"})),this.expr=n}function a(e,t){var n=(0,jr.getPrecedence)(e,t),r=(0,jr.getPrecedence)(e.expr,t);return"all"===t||null!==r&&r<=n}return r.prototype=new n,r.prototype.type="FunctionAssignmentNode",r.prototype.isFunctionAssignmentNode=!0,r.prototype._compile=function(e,n){var r=Object.create(n);(0,m.forEach)(this.params,(function(e){r[e]=!0}));var i=this.expr._compile(e,r),a=this.name,o=this.params,s=(0,m.join)(this.types,","),c=a+"("+(0,m.join)(this.params,", ")+")";return function(e,n,r){var u={};u[s]=function(){for(var t=Object.create(n),a=0;a<o.length;a++)t[o[a]]=arguments[a];return i(e,t,r)};var l=t(a,u);return l.syntax=c,(0,St.setSafeProperty)(e,a,l),l}},r.prototype.forEach=function(e){e(this.expr,"expr",this)},r.prototype.map=function(e){var t=this._ifNode(e(this.expr,"expr",this));return new r(this.name,this.params.slice(0),t)},r.prototype.clone=function(){return new r(this.name,this.params.slice(0),this.expr)},r.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=this.expr.toString(e);return a(this,t)&&(n="("+n+")"),this.name+"("+this.params.join(", ")+") = "+n},r.prototype.toJSON=function(){var e=this.types;return{mathjs:"FunctionAssignmentNode",name:this.name,params:this.params.map((function(t,n){return{name:t,type:e[n]}})),expr:this.expr}},r.fromJSON=function(e){return new r(e.name,e.params,e.expr)},r.prototype.toHTML=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=[],r=0;r<this.params.length;r++)n.push('<span class="math-symbol math-parameter">'+(0,d.escape)(this.params[r])+"</span>");var i=this.expr.toHTML(e);return a(this,t)&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>'),'<span class="math-function">'+(0,d.escape)(this.name)+'</span><span class="math-parenthesis math-round-parenthesis">(</span>'+n.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+i},r.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=this.expr.toTex(e);return a(this,t)&&(n="\\left(".concat(n,"\\right)")),"\\mathrm{"+this.name+"}\\left("+this.params.map(Rr.toSymbol).join(",")+"\\right):="+n},r}),{isClass:!0,isNode:!0});t.createFunctionAssignmentNode=r})),Ur=t((function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,"__esModule",{value:!0}),t.createIndexNode=void 0;var a=["Range","Node","size"],o=(0,h.factory)("IndexNode",a,(function(e){var t=e.Range,r=e.Node,a=e.size;function o(e,t){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");if(this.dimensions=e,this.dotNotation=t||!1,!Array.isArray(e)||!e.every(i.isNode))throw new TypeError('Array containing Nodes expected for parameter "dimensions"');if(this.dotNotation&&!this.isObjectProperty())throw new Error("dotNotation only applicable for object properties")}function s(e,n,r){return new t((0,i.isBigNumber)(e)?e.toNumber():e,(0,i.isBigNumber)(n)?n.toNumber():n,(0,i.isBigNumber)(r)?r.toNumber():r)}return o.prototype=new r,o.prototype.type="IndexNode",o.prototype.isIndexNode=!0,o.prototype._compile=function(e,t){var r=(0,m.map)(this.dimensions,(function(n,r){if((0,i.isRangeNode)(n)){if(n.needsEnd()){var o=Object.create(t);o.end=!0;var c=n.start._compile(e,o),u=n.end._compile(e,o),l=n.step?n.step._compile(e,o):function(){return 1};return function(e,t,n){var i=a(n).valueOf(),o=Object.create(t);return o.end=i[r],s(c(e,o,n),u(e,o,n),l(e,o,n))}}var d=n.start._compile(e,t),f=n.end._compile(e,t),p=n.step?n.step._compile(e,t):function(){return 1};return function(e,t,n){return s(d(e,t,n),f(e,t,n),p(e,t,n))}}if((0,i.isSymbolNode)(n)&&"end"===n.name){var m=Object.create(t);m.end=!0;var h=n._compile(e,m);return function(e,t,n){var i=a(n).valueOf(),o=Object.create(t);return o.end=i[r],h(e,o,n)}}var y=n._compile(e,t);return function(e,t,n){return y(e,t,n)}})),o=(0,St.getSafeProperty)(e,"index");return function(e,t,i){var a=(0,m.map)(r,(function(n){return n(e,t,i)}));return o.apply(void 0,n(a))}},o.prototype.forEach=function(e){for(var t=0;t<this.dimensions.length;t++)e(this.dimensions[t],"dimensions["+t+"]",this)},o.prototype.map=function(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this._ifNode(e(this.dimensions[n],"dimensions["+n+"]",this));return new o(t,this.dotNotation)},o.prototype.clone=function(){return new o(this.dimensions.slice(0),this.dotNotation)},o.prototype.isObjectProperty=function(){return 1===this.dimensions.length&&(0,i.isConstantNode)(this.dimensions[0])&&"string"==typeof this.dimensions[0].value},o.prototype.getObjectProperty=function(){return this.isObjectProperty()?this.dimensions[0].value:null},o.prototype._toString=function(e){return this.dotNotation?"."+this.getObjectProperty():"["+this.dimensions.join(", ")+"]"},o.prototype.toJSON=function(){return{mathjs:"IndexNode",dimensions:this.dimensions,dotNotation:this.dotNotation}},o.fromJSON=function(e){return new o(e.dimensions,e.dotNotation)},o.prototype.toHTML=function(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this.dimensions[n].toHTML();return this.dotNotation?'<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">'+(0,d.escape)(this.getObjectProperty())+"</span>":'<span class="math-parenthesis math-square-parenthesis">[</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'},o.prototype._toTex=function(e){var t=this.dimensions.map((function(t){return t.toTex(e)}));return this.dotNotation?"."+this.getObjectProperty():"_{"+t.join(",")+"}"},o}),{isClass:!0,isNode:!0});t.createIndexNode=o})),Lr=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.createObjectNode=void 0;var r=["Node"],o=(0,h.factory)("ObjectNode",r,(function(e){var t=e.Node;function r(e){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");if(this.properties=e||{},e&&("object"!==n(e)||!Object.keys(e).every((function(t){return(0,i.isNode)(e[t])}))))throw new TypeError("Object containing Nodes expected")}return r.prototype=new t,r.prototype.type="ObjectNode",r.prototype.isObjectNode=!0,r.prototype._compile=function(e,t){var n={};for(var r in this.properties)if((0,a.hasOwnProperty)(this.properties,r)){var i=(0,d.stringify)(r),o=JSON.parse(i);if(!(0,St.isSafeProperty)(this.properties,o))throw new Error('No access to property "'+o+'"');n[o]=this.properties[r]._compile(e,t)}return function(e,t,r){var i={};for(var o in n)(0,a.hasOwnProperty)(n,o)&&(i[o]=n[o](e,t,r));return i}},r.prototype.forEach=function(e){for(var t in this.properties)(0,a.hasOwnProperty)(this.properties,t)&&e(this.properties[t],"properties["+(0,d.stringify)(t)+"]",this)},r.prototype.map=function(e){var t={};for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&(t[n]=this._ifNode(e(this.properties[n],"properties["+(0,d.stringify)(n)+"]",this)));return new r(t)},r.prototype.clone=function(){var e={};for(var t in this.properties)(0,a.hasOwnProperty)(this.properties,t)&&(e[t]=this.properties[t]);return new r(e)},r.prototype._toString=function(e){var t=[];for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&t.push((0,d.stringify)(n)+": "+this.properties[n].toString(e));return"{"+t.join(", ")+"}"},r.prototype.toJSON=function(){return{mathjs:"ObjectNode",properties:this.properties}},r.fromJSON=function(e){return new r(e.properties)},r.prototype.toHTML=function(e){var t=[];for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&t.push('<span class="math-symbol math-property">'+(0,d.escape)(n)+'</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>'+this.properties[n].toHTML(e));return'<span class="math-parenthesis math-curly-parenthesis">{</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-curly-parenthesis">}</span>'},r.prototype._toTex=function(e){var t=[];for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&t.push("\\mathbf{"+n+":} & "+this.properties[n].toTex(e)+"\\\\");return"\\left\\{\\begin{array}{ll}".concat(t.join("\n"),"\\end{array}\\right\\}")},r}),{isClass:!0,isNode:!0});t.createObjectNode=o})),Hr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createOperatorNode=void 0;var n=["Node"],r=(0,h.factory)("OperatorNode",n,(function(e){var t=e.Node;function n(e,t,r,a){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('string expected for parameter "op"');if("string"!=typeof t)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(r)||!r.every(i.isNode))throw new TypeError('Array containing Nodes expected for parameter "args"');this.implicit=!0===a,this.op=e,this.fn=t,this.args=r||[]}function r(e,t,n,r,i){var a,o=(0,jr.getPrecedence)(e,t),s=(0,jr.getAssociativity)(e,t);if("all"===t||r.length>2&&"OperatorNode:add"!==e.getIdentifier()&&"OperatorNode:multiply"!==e.getIdentifier())return r.map((function(e){switch(e.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return!1;default:return!0}}));switch(r.length){case 0:a=[];break;case 1:var c=(0,jr.getPrecedence)(r[0],t);if(i&&null!==c){var u,l;if("keep"===t?(u=r[0].getIdentifier(),l=e.getIdentifier()):(u=r[0].getContent().getIdentifier(),l=e.getContent().getIdentifier()),!1===jr.properties[o][l].latexLeftParens){a=[!1];break}if(!1===jr.properties[c][u].latexParens){a=[!1];break}}if(null===c){a=[!1];break}if(c<=o){a=[!0];break}a=[!1];break;case 2:var d,f,p=(0,jr.getPrecedence)(r[0],t),m=(0,jr.isAssociativeWith)(e,r[0],t);d=null!==p&&(p===o&&"right"===s&&!m||p<o);var h,y,v,g=(0,jr.getPrecedence)(r[1],t),b=(0,jr.isAssociativeWith)(e,r[1],t);if(f=null!==g&&(g===o&&"left"===s&&!b||g<o),i)"keep"===t?(h=e.getIdentifier(),y=e.args[0].getIdentifier(),v=e.args[1].getIdentifier()):(h=e.getContent().getIdentifier(),y=e.args[0].getContent().getIdentifier(),v=e.args[1].getContent().getIdentifier()),null!==p&&(!1===jr.properties[o][h].latexLeftParens&&(d=!1),!1===jr.properties[p][y].latexParens&&(d=!1)),null!==g&&(!1===jr.properties[o][h].latexRightParens&&(f=!1),!1===jr.properties[g][v].latexParens&&(f=!1));a=[d,f];break;default:"OperatorNode:add"!==e.getIdentifier()&&"OperatorNode:multiply"!==e.getIdentifier()||(a=r.map((function(n){var r=(0,jr.getPrecedence)(n,t),i=(0,jr.isAssociativeWith)(e,n,t),a=(0,jr.getAssociativity)(n,t);return null!==r&&(o===r&&s===a&&!i||r<o)})))}return r.length>=2&&"OperatorNode:multiply"===e.getIdentifier()&&e.implicit&&"auto"===t&&"hide"===n&&(a=r.map((function(e,t){var n="ParenthesisNode"===e.getIdentifier();return!(!a[t]&&!n)}))),a}return n.prototype=new t,n.prototype.type="OperatorNode",n.prototype.isOperatorNode=!0,n.prototype._compile=function(e,t){if("string"!=typeof this.fn||!(0,St.isSafeMethod)(e,this.fn))throw e[this.fn]?new Error('No access to function "'+this.fn+'"'):new Error("Function "+this.fn+' missing in provided namespace "math"');var n=(0,St.getSafeProperty)(e,this.fn),r=(0,m.map)(this.args,(function(n){return n._compile(e,t)}));if(1===r.length){var i=r[0];return function(e,t,r){return n(i(e,t,r))}}if(2===r.length){var a=r[0],o=r[1];return function(e,t,r){return n(a(e,t,r),o(e,t,r))}}return function(e,t,i){return n.apply(null,(0,m.map)(r,(function(n){return n(e,t,i)})))}},n.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},n.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new n(this.op,this.fn,t,this.implicit)},n.prototype.clone=function(){return new n(this.op,this.fn,this.args.slice(0),this.implicit)},n.prototype.isUnary=function(){return 1===this.args.length},n.prototype.isBinary=function(){return 2===this.args.length},n.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=e&&e.implicit?e.implicit:"hide",i=this.args,a=r(this,t,n,i,!1);if(1===i.length){var o=(0,jr.getAssociativity)(this,t),s=i[0].toString(e);a[0]&&(s="("+s+")");var c=/[a-zA-Z]+/.test(this.op);return"right"===o?this.op+(c?" ":"")+s:"left"===o?s+(c?" ":"")+this.op:s+this.op}if(2===i.length){var u=i[0].toString(e),l=i[1].toString(e);return a[0]&&(u="("+u+")"),a[1]&&(l="("+l+")"),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?u+" "+l:u+" "+this.op+" "+l}if(i.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var d=i.map((function(t,n){return t=t.toString(e),a[n]&&(t="("+t+")"),t}));return this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?d.join(" "):d.join(" "+this.op+" ")}return this.fn+"("+this.args.join(", ")+")"},n.prototype.toJSON=function(){return{mathjs:"OperatorNode",op:this.op,fn:this.fn,args:this.args,implicit:this.implicit}},n.fromJSON=function(e){return new n(e.op,e.fn,e.args,e.implicit)},n.prototype.toHTML=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=e&&e.implicit?e.implicit:"hide",i=this.args,a=r(this,t,n,i,!1);if(1===i.length){var o=(0,jr.getAssociativity)(this,t),s=i[0].toHTML(e);return a[0]&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>'),"right"===o?'<span class="math-operator math-unary-operator math-lefthand-unary-operator">'+(0,d.escape)(this.op)+"</span>"+s:s+'<span class="math-operator math-unary-operator math-righthand-unary-operator">'+(0,d.escape)(this.op)+"</span>"}if(2===i.length){var c=i[0].toHTML(e),u=i[1].toHTML(e);return a[0]&&(c='<span class="math-parenthesis math-round-parenthesis">(</span>'+c+'<span class="math-parenthesis math-round-parenthesis">)</span>'),a[1]&&(u='<span class="math-parenthesis math-round-parenthesis">(</span>'+u+'<span class="math-parenthesis math-round-parenthesis">)</span>'),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?c+'<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'+u:c+'<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,d.escape)(this.op)+"</span>"+u}var l=i.map((function(t,n){return t=t.toHTML(e),a[n]&&(t='<span class="math-parenthesis math-round-parenthesis">(</span>'+t+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t}));return i.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())?this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===n?l.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'):l.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,d.escape)(this.op)+"</span>"):'<span class="math-function">'+(0,d.escape)(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+l.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'},n.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:"keep",n=e&&e.implicit?e.implicit:"hide",i=this.args,a=r(this,t,n,i,!0),o=Rr.latexOperators[this.fn];if(o=void 0===o?this.op:o,1===i.length){var s=(0,jr.getAssociativity)(this,t),c=i[0].toTex(e);return a[0]&&(c="\\left(".concat(c,"\\right)")),"right"===s?o+c:c+o}if(2===i.length){var u=i[0],l=u.toTex(e);a[0]&&(l="\\left(".concat(l,"\\right)"));var d,f=i[1].toTex(e);switch(a[1]&&(f="\\left(".concat(f,"\\right)")),d="keep"===t?u.getIdentifier():u.getContent().getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return o+"{"+l+"}{"+f+"}";case"OperatorNode:pow":switch(l="{"+l+"}",f="{"+f+"}",d){case"ConditionalNode":case"OperatorNode:divide":l="\\left(".concat(l,"\\right)")}break;case"OperatorNode:multiply":if(this.implicit&&"hide"===n)return l+"~"+f}return l+o+f}if(i.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var p=i.map((function(t,n){return t=t.toTex(e),a[n]&&(t="\\left(".concat(t,"\\right)")),t}));return"OperatorNode:multiply"===this.getIdentifier()&&this.implicit?p.join("~"):p.join(o)}return"\\mathrm{"+this.fn+"}\\left("+i.map((function(t){return t.toTex(e)})).join(",")+"\\right)"},n.prototype.getIdentifier=function(){return this.type+":"+this.fn},n}),{isClass:!0,isNode:!0});t.createOperatorNode=r})),Zr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createParenthesisNode=void 0;var n=["Node"],r=(0,h.factory)("ParenthesisNode",n,(function(e){var t=e.Node;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!(0,i.isNode)(e))throw new TypeError('Node expected for parameter "content"');this.content=e}return n.prototype=new t,n.prototype.type="ParenthesisNode",n.prototype.isParenthesisNode=!0,n.prototype._compile=function(e,t){return this.content._compile(e,t)},n.prototype.getContent=function(){return this.content.getContent()},n.prototype.forEach=function(e){e(this.content,"content",this)},n.prototype.map=function(e){return new n(e(this.content,"content",this))},n.prototype.clone=function(){return new n(this.content)},n.prototype._toString=function(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?"("+this.content.toString(e)+")":this.content.toString(e)},n.prototype.toJSON=function(){return{mathjs:"ParenthesisNode",content:this.content}},n.fromJSON=function(e){return new n(e.content)},n.prototype.toHTML=function(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?'<span class="math-parenthesis math-round-parenthesis">(</span>'+this.content.toHTML(e)+'<span class="math-parenthesis math-round-parenthesis">)</span>':this.content.toHTML(e)},n.prototype._toTex=function(e){return!e||e&&!e.parenthesis||e&&"keep"===e.parenthesis?"\\left(".concat(this.content.toTex(e),"\\right)"):this.content.toTex(e)},n}),{isClass:!0,isNode:!0});t.createParenthesisNode=r})),Vr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRangeNode=void 0;var n=["Node"],r=(0,h.factory)("RangeNode",n,(function(e){var t=e.Node;function n(e,t,r){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!(0,i.isNode)(e))throw new TypeError("Node expected");if(!(0,i.isNode)(t))throw new TypeError("Node expected");if(r&&!(0,i.isNode)(r))throw new TypeError("Node expected");if(arguments.length>3)throw new Error("Too many arguments");this.start=e,this.end=t,this.step=r||null}function r(e,t){var n=(0,jr.getPrecedence)(e,t),r={},i=(0,jr.getPrecedence)(e.start,t);if(r.start=null!==i&&i<=n||"all"===t,e.step){var a=(0,jr.getPrecedence)(e.step,t);r.step=null!==a&&a<=n||"all"===t}var o=(0,jr.getPrecedence)(e.end,t);return r.end=null!==o&&o<=n||"all"===t,r}return n.prototype=new t,n.prototype.type="RangeNode",n.prototype.isRangeNode=!0,n.prototype.needsEnd=function(){return this.filter((function(e){return(0,i.isSymbolNode)(e)&&"end"===e.name})).length>0},n.prototype._compile=function(e,t){var n=e.range,r=this.start._compile(e,t),i=this.end._compile(e,t);if(this.step){var a=this.step._compile(e,t);return function(e,t,o){return n(r(e,t,o),i(e,t,o),a(e,t,o))}}return function(e,t,a){return n(r(e,t,a),i(e,t,a))}},n.prototype.forEach=function(e){e(this.start,"start",this),e(this.end,"end",this),this.step&&e(this.step,"step",this)},n.prototype.map=function(e){return new n(this._ifNode(e(this.start,"start",this)),this._ifNode(e(this.end,"end",this)),this.step&&this._ifNode(e(this.step,"step",this)))},n.prototype.clone=function(){return new n(this.start,this.end,this.step&&this.step)},n.prototype._toString=function(e){var t,n=r(this,e&&e.parenthesis?e.parenthesis:"keep"),i=this.start.toString(e);if(n.start&&(i="("+i+")"),t=i,this.step){var a=this.step.toString(e);n.step&&(a="("+a+")"),t+=":"+a}var o=this.end.toString(e);return n.end&&(o="("+o+")"),t+=":"+o},n.prototype.toJSON=function(){return{mathjs:"RangeNode",start:this.start,end:this.end,step:this.step}},n.fromJSON=function(e){return new n(e.start,e.end,e.step)},n.prototype.toHTML=function(e){var t,n=r(this,e&&e.parenthesis?e.parenthesis:"keep"),i=this.start.toHTML(e);if(n.start&&(i='<span class="math-parenthesis math-round-parenthesis">(</span>'+i+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t=i,this.step){var a=this.step.toHTML(e);n.step&&(a='<span class="math-parenthesis math-round-parenthesis">(</span>'+a+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+='<span class="math-operator math-range-operator">:</span>'+a}var o=this.end.toHTML(e);return n.end&&(o='<span class="math-parenthesis math-round-parenthesis">(</span>'+o+'<span class="math-parenthesis math-round-parenthesis">)</span>'),t+='<span class="math-operator math-range-operator">:</span>'+o},n.prototype._toTex=function(e){var t=r(this,e&&e.parenthesis?e.parenthesis:"keep"),n=this.start.toTex(e);if(t.start&&(n="\\left(".concat(n,"\\right)")),this.step){var i=this.step.toTex(e);t.step&&(i="\\left(".concat(i,"\\right)")),n+=":"+i}var a=this.end.toTex(e);return t.end&&(a="\\left(".concat(a,"\\right)")),n+=":"+a},n}),{isClass:!0,isNode:!0});t.createRangeNode=r})),Wr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRelationalNode=void 0;var n=["Node"],r=(0,h.factory)("RelationalNode",n,(function(e){var t=e.Node;function n(e,t){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!Array.isArray(e))throw new TypeError("Parameter conditionals must be an array");if(!Array.isArray(t))throw new TypeError("Parameter params must be an array");if(e.length!==t.length-1)throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");this.conditionals=e,this.params=t}return n.prototype=new t,n.prototype.type="RelationalNode",n.prototype.isRelationalNode=!0,n.prototype._compile=function(e,t){var n=this,r=this.params.map((function(n){return n._compile(e,t)}));return function(t,i,a){for(var o,s=r[0](t,i,a),c=0;c<n.conditionals.length;c++){if(o=s,s=r[c+1](t,i,a),!(0,St.getSafeProperty)(e,n.conditionals[c])(o,s))return!1}return!0}},n.prototype.forEach=function(e){var t=this;this.params.forEach((function(n,r){return e(n,"params["+r+"]",t)}),this)},n.prototype.map=function(e){var t=this;return new n(this.conditionals.slice(),this.params.map((function(n,r){return t._ifNode(e(n,"params["+r+"]",t))}),this))},n.prototype.clone=function(){return new n(this.conditionals,this.params)},n.prototype._toString=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=(0,jr.getPrecedence)(this,t),r=this.params.map((function(r,i){var a=(0,jr.getPrecedence)(r,t);return"all"===t||null!==a&&a<=n?"("+r.toString(e)+")":r.toString(e)})),i={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="},a=r[0],o=0;o<this.conditionals.length;o++)a+=" "+i[this.conditionals[o]]+" "+r[o+1];return a},n.prototype.toJSON=function(){return{mathjs:"RelationalNode",conditionals:this.conditionals,params:this.params}},n.fromJSON=function(e){return new n(e.conditionals,e.params)},n.prototype.toHTML=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=(0,jr.getPrecedence)(this,t),r=this.params.map((function(r,i){var a=(0,jr.getPrecedence)(r,t);return"all"===t||null!==a&&a<=n?'<span class="math-parenthesis math-round-parenthesis">(</span>'+r.toHTML(e)+'<span class="math-parenthesis math-round-parenthesis">)</span>':r.toHTML(e)})),i={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="},a=r[0],o=0;o<this.conditionals.length;o++)a+='<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,d.escape)(i[this.conditionals[o]])+"</span>"+r[o+1];return a},n.prototype._toTex=function(e){for(var t=e&&e.parenthesis?e.parenthesis:"keep",n=(0,jr.getPrecedence)(this,t),r=this.params.map((function(r,i){var a=(0,jr.getPrecedence)(r,t);return"all"===t||null!==a&&a<=n?"\\left("+r.toTex(e)+"\right)":r.toTex(e)})),i=r[0],a=0;a<this.conditionals.length;a++)i+=Rr.latexOperators[this.conditionals[a]]+r[a+1];return i},n}),{isClass:!0,isNode:!0});t.createRelationalNode=r})),Gr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSymbolNode=void 0;var n=["math","?Unit","Node"],r=(0,h.factory)("SymbolNode",n,(function(e){var t=e.math,n=e.Unit,r=e.Node;function i(e){return!!n&&n.isValuelessUnit(e)}function a(e){if(!(this instanceof a))throw new SyntaxError("Constructor must be called with the new operator");if("string"!=typeof e)throw new TypeError('String expected for parameter "name"');this.name=e}return a.prototype=new r,a.prototype.type="SymbolNode",a.prototype.isSymbolNode=!0,a.prototype._compile=function(e,t){var r=this.name;if(!0===t[r])return function(e,t,n){return t[r]};if(r in e)return function(t,n,i){return r in t?(0,St.getSafeProperty)(t,r):(0,St.getSafeProperty)(e,r)};var a=i(r);return function(e,t,i){return r in e?(0,St.getSafeProperty)(e,r):a?new n(null,r):function(e){throw new Error("Undefined symbol "+e)}(r)}},a.prototype.forEach=function(e){},a.prototype.map=function(e){return this.clone()},a.prototype.clone=function(){return new a(this.name)},a.prototype._toString=function(e){return this.name},a.prototype.toHTML=function(e){var t=(0,d.escape)(this.name);return"true"===t||"false"===t?'<span class="math-symbol math-boolean">'+t+"</span>":"i"===t?'<span class="math-symbol math-imaginary-symbol">'+t+"</span>":"Infinity"===t?'<span class="math-symbol math-infinity-symbol">'+t+"</span>":"NaN"===t?'<span class="math-symbol math-nan-symbol">'+t+"</span>":"null"===t?'<span class="math-symbol math-null-symbol">'+t+"</span>":"undefined"===t?'<span class="math-symbol math-undefined-symbol">'+t+"</span>":'<span class="math-symbol">'+t+"</span>"},a.prototype.toJSON=function(){return{mathjs:"SymbolNode",name:this.name}},a.fromJSON=function(e){return new a(e.name)},a.prototype._toTex=function(e){var n=!1;void 0===t[this.name]&&i(this.name)&&(n=!0);var r=(0,Rr.toSymbol)(this.name,n);return"\\"===r[0]?r:" "+r},a}),{isClass:!0,isNode:!0});t.createSymbolNode=r})),$r=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,"__esModule",{value:!0}),t.createFunctionNode=void 0;var o=["math","Node","SymbolNode"],s=(0,h.factory)("FunctionNode",o,(function(e){var t=e.math,o=e.Node,s=e.SymbolNode;function c(e,t){if(!(this instanceof c))throw new SyntaxError("Constructor must be called with the new operator");if("string"==typeof e&&(e=new s(e)),!(0,i.isNode)(e))throw new TypeError('Node expected as parameter "fn"');if(!Array.isArray(t)||!t.every(i.isNode))throw new TypeError('Array containing Nodes expected for parameter "args"');this.fn=e,this.args=t||[],Object.defineProperty(this,"name",{get:function(){return this.fn.name||""}.bind(this),set:function(){throw new Error("Cannot assign a new name, name is read-only")}})}c.prototype=new o,c.prototype.type="FunctionNode",c.prototype.isFunctionNode=!0,c.prototype._compile=function(e,t){if(!(this instanceof c))throw new TypeError("No valid FunctionNode");var n=(0,m.map)(this.args,(function(n){return n._compile(e,t)}));if((0,i.isSymbolNode)(this.fn)){var a=this.fn.name,o=a in e?(0,St.getSafeProperty)(e,a):void 0;if("function"==typeof o&&!0===o.rawArgs){var s=this.args;return function(t,n,i){return(a in t?(0,St.getSafeProperty)(t,a):o)(s,e,r({},t,n))}}if(1===n.length){var u=n[0];return function(e,t,n){return(a in e?(0,St.getSafeProperty)(e,a):o)(u(e,t,n))}}if(2===n.length){var l=n[0],d=n[1];return function(e,t,n){return(a in e?(0,St.getSafeProperty)(e,a):o)(l(e,t,n),d(e,t,n))}}return function(e,t,r){return(a in e?(0,St.getSafeProperty)(e,a):o).apply(null,(0,m.map)(n,(function(n){return n(e,t,r)})))}}if((0,i.isAccessorNode)(this.fn)&&(0,i.isIndexNode)(this.fn.index)&&this.fn.index.isObjectProperty()){var f=this.fn.object._compile(e,t),p=this.fn.index.getObjectProperty(),h=this.args;return function(t,i,a){var o=f(t,i,a);return(0,St.validateSafeMethod)(o,p),o[p]&&o[p].rawArgs?o[p](h,e,r({},t,i)):o[p].apply(o,(0,m.map)(n,(function(e){return e(t,i,a)})))}}var y=this.fn._compile(e,t),v=this.args;return function(t,i,a){var o=y(t,i,a);return o&&o.rawArgs?o(v,e,r({},t,i)):o.apply(o,(0,m.map)(n,(function(e){return e(t,i,a)})))}},c.prototype.forEach=function(e){e(this.fn,"fn",this);for(var t=0;t<this.args.length;t++)e(this.args[t],"args["+t+"]",this)},c.prototype.map=function(e){for(var t=this._ifNode(e(this.fn,"fn",this)),n=[],r=0;r<this.args.length;r++)n[r]=this._ifNode(e(this.args[r],"args["+r+"]",this));return new c(t,n)},c.prototype.clone=function(){return new c(this.fn,this.args.slice(0))};var u=c.prototype.toString;function l(e,t,r){for(var a,o="",s=/\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi,c=0;null!==(a=s.exec(e));)if(o+=e.substring(c,a.index),c=a.index,"$$"===a[0])o+="$",c++;else{c+=a[0].length;var u=t[a[1]];if(!u)throw new ReferenceError("Template: Property "+a[1]+" does not exist.");if(void 0===a[2])switch(n(u)){case"string":o+=u;break;case"object":if((0,i.isNode)(u))o+=u.toTex(r);else{if(!Array.isArray(u))throw new TypeError("Template: "+a[1]+" has to be a Node, String or array of Nodes");o+=u.map((function(e,t){if((0,i.isNode)(e))return e.toTex(r);throw new TypeError("Template: "+a[1]+"["+t+"] is not a Node.")})).join(",")}break;default:throw new TypeError("Template: "+a[1]+" has to be a Node, String or array of Nodes")}else{if(!(0,i.isNode)(u[a[2]]&&u[a[2]]))throw new TypeError("Template: "+a[1]+"["+a[2]+"] is not a Node.");o+=u[a[2]].toTex(r)}}return o+=e.slice(c)}c.prototype.toString=function(e){var t,r=this.fn.toString(e);return e&&"object"===n(e.handler)&&(0,a.hasOwnProperty)(e.handler,r)&&(t=e.handler[r](this,e)),void 0!==t?t:u.call(this,e)},c.prototype._toString=function(e){var t=this.args.map((function(t){return t.toString(e)}));return((0,i.isFunctionAssignmentNode)(this.fn)?"("+this.fn.toString(e)+")":this.fn.toString(e))+"("+t.join(", ")+")"},c.prototype.toJSON=function(){return{mathjs:"FunctionNode",fn:this.fn,args:this.args}},c.fromJSON=function(e){return new c(e.fn,e.args)},c.prototype.toHTML=function(e){var t=this.args.map((function(t){return t.toHTML(e)}));return'<span class="math-function">'+(0,d.escape)(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'};var f=c.prototype.toTex;return c.prototype.toTex=function(e){var t;return e&&"object"===n(e.handler)&&(0,a.hasOwnProperty)(e.handler,this.name)&&(t=e.handler[this.name](this,e)),void 0!==t?t:f.call(this,e)},c.prototype._toTex=function(e){var r,i,a=this.args.map((function(t){return t.toTex(e)}));switch(Rr.latexFunctions[this.name]&&(r=Rr.latexFunctions[this.name]),!t[this.name]||"function"!=typeof t[this.name].toTex&&"object"!==n(t[this.name].toTex)&&"string"!=typeof t[this.name].toTex||(r=t[this.name].toTex),n(r)){case"function":i=r(this,e);break;case"string":i=l(r,this,e);break;case"object":switch(n(r[a.length])){case"function":i=r[a.length](this,e);break;case"string":i=l(r[a.length],this,e)}}return void 0!==i?i:l(Rr.defaultTemplate,this,e)},c.prototype.getIdentifier=function(){return this.type+":"+this.name},c}),{isClass:!0,isNode:!0});t.createFunctionNode=s})),Qr=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,"__esModule",{value:!0}),t.createParse=void 0;var r=["typed","numeric","config","AccessorNode","ArrayNode","AssignmentNode","BlockNode","ConditionalNode","ConstantNode","FunctionAssignmentNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","RangeNode","RelationalNode","SymbolNode"],o=(0,h.factory)("parse",r,(function(e){var t=e.typed,r=e.numeric,o=e.config,s=e.AccessorNode,c=e.ArrayNode,u=e.AssignmentNode,l=e.BlockNode,d=e.ConditionalNode,f=e.ConstantNode,p=e.FunctionAssignmentNode,m=e.FunctionNode,h=e.IndexNode,y=e.ObjectNode,v=e.OperatorNode,g=e.ParenthesisNode,b=e.RangeNode,x=e.RelationalNode,D=e.SymbolNode,_=t("parse",{string:function(e){return H(e,{})},"Array | Matrix":function(e){return w(e,{})},"string, Object":function(e,t){return H(e,void 0!==t.nodes?t.nodes:{})},"Array | Matrix, Object":w});function w(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=void 0!==t.nodes?t.nodes:{};return(0,P.deepMap)(e,(function(e){if("string"!=typeof e)throw new TypeError("String expected");return H(e,n)}))}var N=0,M=1,O=2,S=3,j=4,A={",":!0,"(":!0,")":!0,"[":!0,"]":!0,"{":!0,"}":!0,'"':!0,"'":!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},E={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},C={true:!0,false:!1,null:null,undefined:void 0},T=["NaN","Infinity"];function k(e,t){return e.expression.substr(e.index,t)}function I(e){return k(e,1)}function B(e){e.index++}function z(e){return e.expression.charAt(e.index-1)}function R(e){return e.expression.charAt(e.index+1)}function q(e){for(e.tokenType=N,e.token="",e.comment="";_.isWhitespace(I(e),e.nestingLevel);)B(e);if("#"===I(e))for(;"\n"!==I(e)&&""!==I(e);)e.comment+=I(e),B(e);if(""!==I(e)){if("\n"===I(e)&&!e.nestingLevel)return e.tokenType=M,e.token=I(e),void B(e);var t=I(e),n=k(e,2),r=k(e,3);if(3===r.length&&A[r])return e.tokenType=M,e.token=r,B(e),B(e),void B(e);if(2===n.length&&A[n])return e.tokenType=M,e.token=n,B(e),void B(e);if(A[t])return e.tokenType=M,e.token=t,void B(e);if(_.isDigitDot(t)){e.tokenType=O;var i=k(e,2);if("0b"===i||"0o"===i||"0x"===i){for(e.token+=I(e),B(e),e.token+=I(e),B(e);_.isHexDigit(I(e));)e.token+=I(e),B(e);return}if("."===I(e))e.token+=I(e),B(e),_.isDigit(I(e))||(e.tokenType=M);else{for(;_.isDigit(I(e));)e.token+=I(e),B(e);_.isDecimalMark(I(e),R(e))&&(e.token+=I(e),B(e))}for(;_.isDigit(I(e));)e.token+=I(e),B(e);if("E"===I(e)||"e"===I(e))if(_.isDigit(R(e))||"-"===R(e)||"+"===R(e)){if(e.token+=I(e),B(e),"+"!==I(e)&&"-"!==I(e)||(e.token+=I(e),B(e)),!_.isDigit(I(e)))throw le(e,'Digit expected, got "'+I(e)+'"');for(;_.isDigit(I(e));)e.token+=I(e),B(e);if(_.isDecimalMark(I(e),R(e)))throw le(e,'Digit expected, got "'+I(e)+'"')}else if("."===R(e))throw B(e),le(e,'Digit expected, got "'+I(e)+'"')}else{if(!_.isAlpha(I(e),z(e),R(e))){for(e.tokenType=j;""!==I(e);)e.token+=I(e),B(e);throw le(e,'Syntax error in part "'+e.token+'"')}for(;_.isAlpha(I(e),z(e),R(e))||_.isDigit(I(e));)e.token+=I(e),B(e);(0,a.hasOwnProperty)(E,e.token)?e.tokenType=M:e.tokenType=S}}else e.tokenType=M}function F(e){do{q(e)}while("\n"===e.token)}function U(e){e.nestingLevel++}function L(e){e.nestingLevel--}function H(e,t){var r={extraNodes:{},expression:"",comment:"",index:0,token:"",tokenType:N,nestingLevel:0,conditionalLevel:null};n(r,{expression:e,extraNodes:t}),q(r);var i=function(e){var t,n,r=[];""!==e.token&&"\n"!==e.token&&";"!==e.token&&((t=Z(e)).comment=e.comment);for(;"\n"===e.token||";"===e.token;)0===r.length&&t&&(n=";"!==e.token,r.push({node:t,visible:n})),q(e),"\n"!==e.token&&";"!==e.token&&""!==e.token&&((t=Z(e)).comment=e.comment,n=";"!==e.token,r.push({node:t,visible:n}));return r.length>0?new l(r):(t||((t=new f(void 0)).comment=e.comment),t)}(r);if(""!==r.token)throw r.tokenType===M?de(r,"Unexpected operator "+r.token):le(r,'Unexpected part "'+r.token+'"');return i}function Z(e){var t,n,r,a,o=function(e){var t=function(e){var t=V(e);for(;"or"===e.token;)F(e),t=new v("or","or",[t,V(e)]);return t}(e);for(;"?"===e.token;){var n=e.conditionalLevel;e.conditionalLevel=e.nestingLevel,F(e);var r=t,i=Z(e);if(":"!==e.token)throw le(e,"False part of conditional expression expected");e.conditionalLevel=null,F(e);var a=Z(e);t=new d(r,i,a),e.conditionalLevel=n}return t}(e);if("="===e.token){if((0,i.isSymbolNode)(o))return t=o.name,F(e),r=Z(e),new u(new D(t),r);if((0,i.isAccessorNode)(o))return F(e),r=Z(e),new u(o.object,o.index,r);if((0,i.isFunctionNode)(o)&&(0,i.isSymbolNode)(o.fn)&&(a=!0,n=[],t=o.name,o.args.forEach((function(e,t){(0,i.isSymbolNode)(e)?n[t]=e.name:a=!1})),a))return F(e),r=Z(e),new p(t,n,r);throw le(e,"Invalid left hand side of assignment operator =")}return o}function V(e){for(var t=W(e);"xor"===e.token;)F(e),t=new v("xor","xor",[t,W(e)]);return t}function W(e){for(var t=G(e);"and"===e.token;)F(e),t=new v("and","and",[t,G(e)]);return t}function G(e){for(var t=$(e);"|"===e.token;)F(e),t=new v("|","bitOr",[t,$(e)]);return t}function $(e){for(var t=Q(e);"^|"===e.token;)F(e),t=new v("^|","bitXor",[t,Q(e)]);return t}function Q(e){for(var t=X(e);"&"===e.token;)F(e),t=new v("&","bitAnd",[t,X(e)]);return t}function X(e){for(var t=[Y(e)],n=[],r={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};(0,a.hasOwnProperty)(r,e.token);){var i={name:e.token,fn:r[e.token]};n.push(i),F(e),t.push(Y(e))}return 1===t.length?t[0]:2===t.length?new v(n[0].name,n[0].fn,t):new x(n.map((function(e){return e.fn})),t)}function Y(e){var t,n,r,i;t=J(e);for(var o={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};(0,a.hasOwnProperty)(o,e.token);)r=o[n=e.token],F(e),i=[t,J(e)],t=new v(n,r,i);return t}function J(e){var t,n,r,i;t=K(e);for(var o={to:"to",in:"to"};(0,a.hasOwnProperty)(o,e.token);)r=o[n=e.token],F(e),"in"===n&&""===e.token?t=new v("*","multiply",[t,new D("in")],!0):(i=[t,K(e)],t=new v(n,r,i));return t}function K(e){var t,n=[];if(t=":"===e.token?new f(1):ee(e),":"===e.token&&e.conditionalLevel!==e.nestingLevel){for(n.push(t);":"===e.token&&n.length<3;)F(e),")"===e.token||"]"===e.token||","===e.token||""===e.token?n.push(new D("end")):n.push(ee(e));t=3===n.length?new b(n[0],n[2],n[1]):new b(n[0],n[1])}return t}function ee(e){var t,n,r,i;t=te(e);for(var o={"+":"add","-":"subtract"};(0,a.hasOwnProperty)(o,e.token);)r=o[n=e.token],F(e),i=[t,te(e)],t=new v(n,r,i);return t}function te(e){var t,n,r,i;n=t=ne(e);for(var o={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide","%":"mod",mod:"mod"};(0,a.hasOwnProperty)(o,e.token);)i=o[r=e.token],F(e),n=ne(e),t=new v(r,i,[t,n]);return t}function ne(e){var t,n;for(n=t=re(e);e.tokenType===S||"in"===e.token&&(0,i.isConstantNode)(t)||!(e.tokenType!==O||(0,i.isConstantNode)(n)||(0,i.isOperatorNode)(n)&&"!"!==n.op)||"("===e.token;)n=re(e),t=new v("*","multiply",[t,n],!0);return t}function re(e){for(var t=ie(e),r=t,a=[];"/"===e.token&&(0,i.isConstantNode)(r);){if(a.push(n({},e)),F(e),e.tokenType!==O){n(e,a.pop());break}if(a.push(n({},e)),F(e),e.tokenType!==S&&"("!==e.token){a.pop(),n(e,a.pop());break}n(e,a.pop()),a.pop(),r=ie(e),t=new v("/","divide",[t,r])}return t}function ie(e){var t,n,i,s={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"};return(0,a.hasOwnProperty)(s,e.token)?(i=s[e.token],t=e.token,F(e),n=[ie(e)],new v(t,i,n)):function(e){var t,n,i,s;t=function(e){var t,n,i;t=function(e){var t=[];if(e.tokenType===S&&(0,a.hasOwnProperty)(e.extraNodes,e.token)){var n=e.extraNodes[e.token];if(q(e),"("===e.token){if(t=[],U(e),q(e),")"!==e.token)for(t.push(Z(e));","===e.token;)q(e),t.push(Z(e));if(")"!==e.token)throw le(e,"Parenthesis ) expected");L(e),q(e)}return new n(t)}return function(e){var t,n;if(e.tokenType===S||e.tokenType===M&&e.token in E)return n=e.token,q(e),t=(0,a.hasOwnProperty)(C,n)?new f(C[n]):-1!==T.indexOf(n)?new f(r(n,"number")):new D(n),t=ae(e,t);return function(e){var t,n;if('"'===e.token)return n=oe(e),t=new f(n),t=ae(e,t);return function(e){var t,n;if("'"===e.token)return n=se(e),t=new f(n),t=ae(e,t);return function(e){var t,n,i,a;if("["===e.token){if(U(e),q(e),"]"!==e.token){var s=ce(e);if(";"===e.token){for(i=1,n=[s];";"===e.token;)q(e),n[i]=ce(e),i++;if("]"!==e.token)throw le(e,"End of matrix ] expected");L(e),q(e),a=n[0].items.length;for(var u=1;u<i;u++)if(n[u].items.length!==a)throw de(e,"Column dimensions mismatch ("+n[u].items.length+" !== "+a+")");t=new c(n)}else{if("]"!==e.token)throw le(e,"End of matrix ] expected");L(e),q(e),t=s}}else L(e),q(e),t=new c([]);return ae(e,t)}return function(e){if("{"===e.token){var t;U(e);var n={};do{if(q(e),"}"!==e.token){if('"'===e.token)t=oe(e);else if("'"===e.token)t=se(e);else{if(!(e.tokenType===S||e.tokenType===M&&e.token in E))throw le(e,"Symbol or string expected as object key");t=e.token,q(e)}if(":"!==e.token)throw le(e,"Colon : expected after object key");q(e),n[t]=Z(e)}}while(","===e.token);if("}"!==e.token)throw le(e,"Comma , or bracket } expected after object value");L(e),q(e);var i=new y(n);return i=ae(e,i)}return function(e){var t;if(e.tokenType===O)return t=e.token,q(e),new f(r(t,o.number));return function(e){var t;if("("===e.token){if(U(e),q(e),t=Z(e),")"!==e.token)throw le(e,"Parenthesis ) expected");return L(e),q(e),t=new g(t),t=ae(e,t)}return function(e){throw""===e.token?le(e,"Unexpected end of expression"):le(e,"Value expected")}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e);var s={"!":"factorial","'":"ctranspose"};for(;(0,a.hasOwnProperty)(s,e.token);)n=e.token,i=s[n],q(e),t=new v(n,i,[t]),t=ae(e,t);return t}(e),("^"===e.token||".^"===e.token)&&(n=e.token,i="^"===n?"pow":"dotPow",F(e),s=[t,ie(e)],t=new v(n,i,s));return t}(e)}function ae(e,t,n){for(var r;!("("!==e.token&&"["!==e.token&&"."!==e.token||n&&-1===n.indexOf(e.token));)if(r=[],"("===e.token){if(!(0,i.isSymbolNode)(t)&&!(0,i.isAccessorNode)(t))return t;if(U(e),q(e),")"!==e.token)for(r.push(Z(e));","===e.token;)q(e),r.push(Z(e));if(")"!==e.token)throw le(e,"Parenthesis ) expected");L(e),q(e),t=new m(t,r)}else if("["===e.token){if(U(e),q(e),"]"!==e.token)for(r.push(Z(e));","===e.token;)q(e),r.push(Z(e));if("]"!==e.token)throw le(e,"Parenthesis ] expected");L(e),q(e),t=new s(t,new h(r))}else{if(q(e),e.tokenType!==S)throw le(e,"Property name expected after dot");r.push(new f(e.token)),q(e);t=new s(t,new h(r,!0))}return t}function oe(e){for(var t="";""!==I(e)&&'"'!==I(e);)"\\"===I(e)&&(t+=I(e),B(e)),t+=I(e),B(e);if(q(e),'"'!==e.token)throw le(e,'End of string " expected');return q(e),JSON.parse('"'+t+'"')}function se(e){for(var t="";""!==I(e)&&"'"!==I(e);)"\\"===I(e)&&(t+=I(e),B(e)),t+=I(e),B(e);if(q(e),"'"!==e.token)throw le(e,"End of string ' expected");return q(e),JSON.parse('"'+t+'"')}function ce(e){for(var t=[Z(e)],n=1;","===e.token;)q(e),t[n]=Z(e),n++;return new c(t)}function ue(e){return e.index-e.token.length+1}function le(e,t){var n=ue(e),r=new SyntaxError(t+" (char "+n+")");return r.char=n,r}function de(e,t){var n=ue(e),r=new SyntaxError(t+" (char "+n+")");return r.char=n,r}return _.isAlpha=function(e,t,n){return _.isValidLatinOrGreek(e)||_.isValidMathSymbol(e,n)||_.isValidMathSymbol(t,e)},_.isValidLatinOrGreek=function(e){return/^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(e)},_.isValidMathSymbol=function(e,t){return/^[\uD835]$/.test(e)&&/^[\uDC00-\uDFFF]$/.test(t)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(t)},_.isWhitespace=function(e,t){return" "===e||"\t"===e||"\n"===e&&t>0},_.isDecimalMark=function(e,t){return"."===e&&"/"!==t&&"*"!==t&&"^"!==t},_.isDigitDot=function(e){return e>="0"&&e<="9"||"."===e},_.isDigit=function(e){return e>="0"&&e<="9"},_.isHexDigit=function(e){return e>="0"&&e<="9"||e>="a"&&e<="f"||e>="A"&&e<="F"},_}));t.createParse=o})),Xr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCompile=void 0;var n=["typed","parse"],r=(0,h.factory)("compile",n,(function(e){var t=e.typed,n=e.parse;return t("compile",{string:function(e){return n(e).compile()},"Array | Matrix":function(e){return(0,P.deepMap)(e,(function(e){return n(e).compile()}))}})}));t.createCompile=r})),Yr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createEvaluate=void 0;var n=["typed","parse"],r=(0,h.factory)("evaluate",n,(function(e){var t=e.typed,n=e.parse;return t("evaluate",{string:function(e){return n(e).compile().evaluate({})},"string, Object":function(e,t){return n(e).compile().evaluate(t)},"Array | Matrix":function(e){var t={};return(0,P.deepMap)(e,(function(e){return n(e).compile().evaluate(t)}))},"Array | Matrix, Object":function(e,t){return(0,P.deepMap)(e,(function(e){return n(e).compile().evaluate(t)}))}})}));t.createEvaluate=r})),Jr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createParserClass=void 0;var n=["parse"],r=(0,h.factory)("Parser",n,(function(e){var t=e.parse;function n(){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");this.scope={}}return n.prototype.type="Parser",n.prototype.isParser=!0,n.prototype.evaluate=function(e){return t(e).compile().evaluate(this.scope)},n.prototype.get=function(e){return e in this.scope?(0,St.getSafeProperty)(this.scope,e):void 0},n.prototype.getAll=function(){return(0,a.extend)({},this.scope)},n.prototype.set=function(e,t){return(0,St.setSafeProperty)(this.scope,e,t)},n.prototype.remove=function(e){delete this.scope[e]},n.prototype.clear=function(){for(var e in this.scope)(0,a.hasOwnProperty)(this.scope,e)&&delete this.scope[e]},n}),{isClass:!0});t.createParserClass=r})),Kr=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createParser=void 0;var n=["typed","Parser"],r=(0,h.factory)("parser",n,(function(e){var t=e.typed,n=e.Parser;return t("parser",{"":function(){return new n}})}));t.createParser=r})),ei=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLup=void 0;var n=["typed","matrix","abs","addScalar","divideScalar","multiplyScalar","subtract","larger","equalScalar","unaryMinus","DenseMatrix","SparseMatrix","Spa"],r=(0,h.factory)("lup",n,(function(e){var t=e.typed,n=e.matrix,r=e.abs,i=e.addScalar,o=e.divideScalar,s=e.multiplyScalar,c=e.subtract,u=e.larger,l=e.equalScalar,d=e.unaryMinus,f=e.DenseMatrix,p=e.SparseMatrix,m=e.Spa;return t("lup",{DenseMatrix:function(e){return h(e)},SparseMatrix:function(e){return y(e)},Array:function(e){var t=h(n(e));return{L:t.L.valueOf(),U:t.U.valueOf(),p:t.p}}});function h(e){var t,n,d,p=e._size[0],m=e._size[1],h=Math.min(p,m),y=(0,a.clone)(e._data),v=[],g=[p,h],b=[],x=[h,m],D=[];for(t=0;t<p;t++)D[t]=t;for(n=0;n<m;n++){if(n>0)for(t=0;t<p;t++){var _=Math.min(t,n),w=0;for(d=0;d<_;d++)w=i(w,s(y[t][d],y[d][n]));y[t][n]=c(y[t][n],w)}var N=n,M=0,O=0;for(t=n;t<p;t++){var S=y[t][n],P=r(S);u(P,M)&&(N=t,M=P,O=S)}if(n!==N&&(D[n]=[D[N],D[N]=D[n]][0],f._swapRows(n,N,y)),n<p)for(t=n+1;t<p;t++){var j=y[t][n];l(j,0)||(y[t][n]=o(y[t][n],O))}}for(n=0;n<m;n++)for(t=0;t<p;t++)0===n&&(t<m&&(b[t]=[]),v[t]=[]),t<n?(t<m&&(b[t][n]=y[t][n]),n<p&&(v[t][n]=0)):t!==n?(t<m&&(b[t][n]=0),n<p&&(v[t][n]=y[t][n])):(t<m&&(b[t][n]=y[t][n]),n<p&&(v[t][n]=1));var A=new f({data:v,size:g}),E=new f({data:b,size:x}),C=[];for(t=0,h=D.length;t<h;t++)C[D[t]]=t;return{L:A,U:E,p:C,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}}function y(e){var t,n,i,a=e._size[0],c=e._size[1],f=Math.min(a,c),h=e._values,y=e._index,v=e._ptr,g=[],b=[],x=[],D=[a,f],_=[],w=[],N=[],M=[f,c],O=[],S=[];for(t=0;t<a;t++)O[t]=t,S[t]=t;var P=function(){var e=new m;n<a&&(x.push(g.length),g.push(1),b.push(n)),N.push(_.length);var c=v[n],f=v[n+1];for(i=c;i<f;i++)t=y[i],e.set(O[t],h[i]);n>0&&e.forEach(0,n-1,(function(t,n){p._forEachRow(t,g,b,x,(function(r,i){r>t&&e.accumulate(r,d(s(i,n)))}))}));var P,j,A,E,C=n,T=e.get(n),k=r(T);e.forEach(n+1,a-1,(function(e,t){var n=r(t);u(n,k)&&(C=e,k=n,T=t)})),n!==C&&(p._swapRows(n,C,D[1],g,b,x),p._swapRows(n,C,M[1],_,w,N),e.swap(n,C),j=C,A=S[P=n],E=S[j],O[A]=j,O[E]=P,S[P]=E,S[j]=A),e.forEach(0,a-1,(function(e,t){e<=n?(_.push(t),w.push(e)):(t=o(t,T),l(t,0)||(g.push(t),b.push(e)))}))};for(n=0;n<c;n++)P();return N.push(_.length),x.push(g.length),{L:new p({values:g,index:b,ptr:x,size:D}),U:new p({values:_,index:w,ptr:N,size:M}),p:O,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\nP: "+this.p}}}}));t.createLup=r})),ti=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,"__esModule",{value:!0}),t.createQr=void 0;var r=["typed","matrix","zeros","identity","isZero","equal","sign","sqrt","conj","unaryMinus","addScalar","divideScalar","multiplyScalar","subtract","complex"],i=(0,h.factory)("qr",r,(function(e){var t=e.typed,r=e.matrix,i=e.zeros,a=e.identity,o=e.isZero,s=e.equal,c=e.sign,u=e.sqrt,l=e.conj,d=e.unaryMinus,f=e.addScalar,p=e.divideScalar,m=e.multiplyScalar,h=e.subtract,y=e.complex;return n(t("qr",{DenseMatrix:function(e){return g(e)},SparseMatrix:function(e){return function(e){throw new Error("qr not implemented for sparse matrices yet")}()},Array:function(e){var t=g(r(e));return{Q:t.Q.valueOf(),R:t.R.valueOf()}}}),{_denseQRimpl:v});function v(e){var t,n,r,y=e._size[0],v=e._size[1],g=a([y],"dense"),b=g._data,x=e.clone(),D=x._data,_=i([y],"");for(r=0;r<Math.min(v,y);++r){var w=D[r][r],N=d(s(w,0)?1:c(w)),M=l(N),O=0;for(t=r;t<y;t++)O=f(O,m(D[t][r],l(D[t][r])));var S=m(N,u(O));if(!o(S)){var P=h(w,S);for(_[r]=1,t=r+1;t<y;t++)_[t]=p(D[t][r],P);var j=d(l(p(P,S))),A=void 0;for(n=r;n<v;n++){for(A=0,t=r;t<y;t++)A=f(A,m(l(_[t]),D[t][n]));for(A=m(A,j),t=r;t<y;t++)D[t][n]=m(h(D[t][n],m(_[t],A)),M)}for(t=0;t<y;t++){for(A=0,n=r;n<y;n++)A=f(A,m(b[t][n],_[n]));for(A=m(A,j),n=r;n<y;++n)b[t][n]=p(h(b[t][n],m(A,l(_[n]))),M)}}}return{Q:g,R:x,toString:function(){return"Q: "+this.Q.toString()+"\nR: "+this.R.toString()}}}function g(e){var t=v(e),n=t.R._data;if(e._data.length>0)for(var r="Complex"===n[0][0].type?y(0):0,i=0;i<n.length;++i)for(var a=0;a<i&&a<(n[0]||[]).length;++a)n[i][a]=r;return t}}));t.createQr=i})),ni=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csPermute=function(e,t,n,r){for(var i=e._values,a=e._index,o=e._ptr,s=e._size,c=e._datatype,u=s[0],l=s[1],d=r&&e._values?[]:null,f=[],p=[],m=0,h=0;h<l;h++){p[h]=m;for(var y=n?n[h]:h,v=o[y],g=o[y+1],b=v;b<g;b++){var x=t?t[a[b]]:a[b];f[m]=x,d&&(d[m]=i[b]),m++}}return p[l]=m,e.createSparseMatrix({values:d,index:f,ptr:p,size:[u,l],datatype:c})}})),ri=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csTdfs=function(e,t,n,r,i,a,o){var s=0;n[o]=e;for(;s>=0;){var c=n[o+s],u=n[r+c];-1===u?(s--,a[t++]=c):(n[r+c]=n[i+u],++s,n[o+s]=u)}return t}})),ii=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csPost=function(e,t){if(!e)return null;var n,r=0,i=[],a=[],o=t,s=2*t;for(n=0;n<t;n++)a[0+n]=-1;for(n=t-1;n>=0;n--)-1!==e[n]&&(a[o+n]=a[0+e[n]],a[0+e[n]]=n);for(n=0;n<t;n++)-1===e[n]&&(r=(0,ri.csTdfs)(n,r,a,0,o,i,s));return i}})),ai=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csEtree=function(e,t){if(!e)return null;var n,r,i=e._index,a=e._ptr,o=e._size,s=o[0],c=o[1],u=[],l=[],d=c;if(t)for(n=0;n<s;n++)l[d+n]=-1;for(var f=0;f<c;f++){u[f]=-1,l[0+f]=-1;for(var p=a[f],m=a[f+1],h=p;h<m;h++){var y=i[h];for(n=t?l[d+y]:y;-1!==n&&n<f;n=r)r=l[0+n],l[0+n]=f,-1===r&&(u[n]=f);t&&(l[d+y]=f)}}return u}})),oi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csFkeep=function(e,t,n){for(var r=e._values,i=e._index,a=e._ptr,o=e._size[1],s=0,c=0;c<o;c++){var u=a[c];for(a[c]=s;u<a[c+1];u++)t(i[u],c,r?r[u]:1,n)&&(i[s]=i[u],r&&(r[s]=r[u]),s++)}a[o]=s,i.splice(s,i.length-s),r&&r.splice(s,r.length-s);return s}})),si=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csFlip=function(e){return-e-2}})),ci=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsAmd=void 0;var n=["add","multiply","transpose"],r=(0,h.factory)("csAmd",n,(function(e){var t=e.add,n=e.multiply,r=e.transpose;return function(e,o){if(!o||e<=0||e>3)return null;var s=o._size,c=s[0],u=s[1],l=0,d=Math.max(16,10*Math.sqrt(u)),f=function(e,i,a,o,s){var c=r(i);if(1===e&&o===a)return t(i,c);if(2===e){for(var u=c._index,l=c._ptr,d=0,f=0;f<a;f++){var p=l[f];if(l[f]=d,!(l[f+1]-p>s))for(var m=l[f+1];p<m;p++)u[d++]=u[p]}return l[a]=d,i=r(c),n(c,i)}return n(c,i)}(e,o,c,u,d=Math.min(u-2,d));(0,oi.csFkeep)(f,a,null);for(var p,m,h,y,v,g,b,x,D,_,w,N,M,O,S,P,j=f._index,A=f._ptr,E=A[u],C=[],T=[],k=u+1,I=2*(u+1),B=3*(u+1),z=4*(u+1),R=5*(u+1),q=6*(u+1),F=7*(u+1),U=C,L=function(e,t,n,r,a,o,s,c,u,l,d,f){for(var p=0;p<e;p++)n[r+p]=t[p+1]-t[p];n[r+e]=0;for(var m=0;m<=e;m++)n[a+m]=-1,o[m]=-1,n[s+m]=-1,n[c+m]=-1,n[u+m]=1,n[l+m]=1,n[d+m]=0,n[f+m]=n[r+m];var h=i(0,0,n,l,e);return n[d+e]=-2,t[e]=-1,n[l+e]=0,h}(u,A,T,0,B,U,I,F,k,q,z,R),H=function(e,t,n,r,i,a,o,s,c,u,l){for(var d=0,f=0;f<e;f++){var p=n[r+f];if(0===p)n[i+f]=-2,d++,t[f]=-1,n[a+f]=0;else if(p>o)n[s+f]=0,n[i+f]=-1,d++,t[f]=(0,si.csFlip)(e),n[s+e]++;else{var m=n[c+p];-1!==m&&(u[m]=f),n[l+f]=n[c+p],n[c+p]=f}}return d}(u,A,T,R,z,q,d,k,B,U,I),Z=0;H<u;){for(h=-1;Z<u&&-1===(h=T[B+Z]);Z++);-1!==T[I+h]&&(U[T[I+h]]=-1),T[B+Z]=T[I+h];var V=T[z+h],W=T[k+h];H+=W;var G=0;T[k+h]=-W;var $=A[h],Q=0===V?$:E,X=Q;for(y=1;y<=V+1;y++){for(y>V?(g=h,b=$,x=T[0+h]-V):(b=A[g=j[$++]],x=T[0+g]),v=1;v<=x;v++)(D=T[k+(p=j[b++])])<=0||(G+=D,T[k+p]=-D,j[X++]=p,-1!==T[I+p]&&(U[T[I+p]]=U[p]),-1!==U[p]?T[I+U[p]]=T[I+p]:T[B+T[R+p]]=T[I+p]);g!==h&&(A[g]=(0,si.csFlip)(h),T[q+g]=0)}for(0!==V&&(E=X),T[R+h]=G,A[h]=Q,T[0+h]=X-Q,T[z+h]=-2,L=i(L,l,T,q,u),_=Q;_<X;_++)if(!((w=T[z+(p=j[_])])<=0)){var Y=L-(D=-T[k+p]);for($=A[p],N=A[p]+w-1;$<=N;$++)T[q+(g=j[$])]>=L?T[q+g]-=D:0!==T[q+g]&&(T[q+g]=T[R+g]+Y)}for(_=Q;_<X;_++){for(M=(N=A[p=j[_]])+T[z+p]-1,O=N,S=0,P=0,$=N;$<=M;$++)if(0!==T[q+(g=j[$])]){var J=T[q+g]-L;J>0?(P+=J,j[O++]=g,S+=g):(A[g]=(0,si.csFlip)(h),T[q+g]=0)}T[z+p]=O-N+1;var K=O,ee=N+T[0+p];for($=M+1;$<ee;$++){var te=T[k+(m=j[$])];te<=0||(P+=te,j[O++]=m,S+=m)}0===P?(A[p]=(0,si.csFlip)(h),G-=D=-T[k+p],W+=D,H+=D,T[k+p]=0,T[z+p]=-1):(T[R+p]=Math.min(T[R+p],P),j[O]=j[K],j[K]=j[N],j[N]=h,T[0+p]=O-N+1,S=(S<0?-S:S)%u,T[I+p]=T[F+S],T[F+S]=p,U[p]=S)}for(T[R+h]=G,L=i(L+(l=Math.max(l,G)),l,T,q,u),_=Q;_<X;_++)if(!(T[k+(p=j[_])]>=0))for(p=T[F+(S=U[p])],T[F+S]=-1;-1!==p&&-1!==T[I+p];p=T[I+p],L++){for(x=T[0+p],w=T[z+p],$=A[p]+1;$<=A[p]+x-1;$++)T[q+j[$]]=L;var ne=p;for(m=T[I+p];-1!==m;){var re=T[0+m]===x&&T[z+m]===w;for($=A[m]+1;re&&$<=A[m]+x-1;$++)T[q+j[$]]!==L&&(re=0);re?(A[m]=(0,si.csFlip)(p),T[k+p]+=T[k+m],T[k+m]=0,T[z+m]=-1,m=T[I+m],T[I+ne]=m):(ne=m,m=T[I+m])}}for($=Q,_=Q;_<X;_++)(D=-T[k+(p=j[_])])<=0||(T[k+p]=D,P=T[R+p]+G-D,-1!==T[B+(P=Math.min(P,u-H-D))]&&(U[T[B+P]]=p),T[I+p]=T[B+P],U[p]=-1,T[B+P]=p,Z=Math.min(Z,P),T[R+p]=P,j[$++]=p);T[k+h]=W,0==(T[0+h]=$-Q)&&(A[h]=-1,T[q+h]=0),0!==V&&(E=$)}for(p=0;p<u;p++)A[p]=(0,si.csFlip)(A[p]);for(m=0;m<=u;m++)T[B+m]=-1;for(m=u;m>=0;m--)T[k+m]>0||(T[I+m]=T[B+A[m]],T[B+A[m]]=m);for(g=u;g>=0;g--)T[k+g]<=0||-1!==A[g]&&(T[I+g]=T[B+A[g]],T[B+A[g]]=g);for(h=0,p=0;p<=u;p++)-1===A[p]&&(h=(0,ri.csTdfs)(p,h,T,B,I,C,q));return C.splice(C.length-1,1),C};function i(e,t,n,r,i){if(e<2||e+t<0){for(var a=0;a<i;a++)0!==n[r+a]&&(n[r+a]=1);e=2}return e}function a(e,t){return e!==t}}));t.createCsAmd=r})),ui=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csLeaf=function(e,t,n,r,i,a,o){var s,c,u,l=0;if(e<=t||n[r+t]<=n[i+e])return-1;n[i+e]=n[r+t];var d=n[a+e];if(n[a+e]=t,-1===d)l=1,u=e;else{for(l=2,u=d;u!==n[o+u];u=n[o+u]);for(s=d;s!==u;s=c)c=n[o+s],n[o+s]=u}return{jleaf:l,q:u}}})),li=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsCounts=void 0;var n=["transpose"],r=(0,h.factory)("csCounts",n,(function(e){var t=e.transpose;return function(e,n,r,i){if(!e||!n||!r)return null;var a,o,s,c,u,l,d,f=e._size,p=f[0],m=f[1],h=4*m+(i?m+p+1:0),y=[],v=m,g=2*m,b=3*m,x=4*m,D=5*m+1;for(s=0;s<h;s++)y[s]=-1;var _=[],w=t(e),N=w._index,M=w._ptr;for(s=0;s<m;s++)for(_[o=r[s]]=-1===y[b+o]?1:0;-1!==o&&-1===y[b+o];o=n[o])y[b+o]=s;if(i){for(s=0;s<m;s++)y[r[s]]=s;for(a=0;a<p;a++){for(s=m,l=M[a],d=M[a+1],u=l;u<d;u++)s=Math.min(s,y[N[u]]);y[D+a]=y[x+s],y[x+s]=a}}for(a=0;a<m;a++)y[0+a]=a;for(s=0;s<m;s++){for(-1!==n[o=r[s]]&&_[n[o]]--,c=i?y[x+s]:o;-1!==c;c=i?y[D+c]:-1)for(u=M[c];u<M[c+1];u++){a=N[u];var O=(0,ui.csLeaf)(a,o,y,b,v,g,0);O.jleaf>=1&&_[o]++,2===O.jleaf&&_[O.q]--}-1!==n[o]&&(y[0+o]=n[o])}for(o=0;o<m;o++)-1!==n[o]&&(_[n[o]]+=_[o]);return _}}));t.createCsCounts=r})),di=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsSqr=void 0;var n=["add","multiply","transpose"],r=(0,h.factory)("csSqr",n,(function(e){var t=e.add,n=e.multiply,r=e.transpose,i=(0,ci.createCsAmd)({add:t,multiply:n,transpose:r}),a=(0,li.createCsCounts)({transpose:r});return function(e,t,n){var r,o=t._ptr,s=t._size[1],c={};if(c.q=i(e,t),e&&!c.q)return null;if(n){var u=e?(0,ni.csPermute)(t,null,c.q,0):t;c.parent=(0,ai.csEtree)(u,1);var l=(0,ii.csPost)(c.parent,s);if(c.cp=a(u,c.parent,l,1),u&&c.parent&&c.cp&&function(e,t){var n=e._ptr,r=e._index,i=e._size,a=i[0],o=i[1];t.pinv=[],t.leftmost=[];var s,c,u,l,d,f=t.parent,p=t.pinv,m=t.leftmost,h=[],y=a,v=a+o,g=a+2*o;for(c=0;c<o;c++)h[y+c]=-1,h[v+c]=-1,h[g+c]=0;for(s=0;s<a;s++)m[s]=-1;for(c=o-1;c>=0;c--)for(l=n[c],d=n[c+1],u=l;u<d;u++)m[r[u]]=c;for(s=a-1;s>=0;s--)p[s]=-1,-1!==(c=m[s])&&(0==h[g+c]++&&(h[v+c]=s),h[0+s]=h[y+c],h[y+c]=s);for(t.lnz=0,t.m2=a,c=0;c<o;c++)if(s=h[y+c],t.lnz++,s<0&&(s=t.m2++),p[s]=c,!(--g[c]<=0)){t.lnz+=h[g+c];var b=f[c];-1!==b&&(0===h[g+b]&&(h[v+b]=h[v+c]),h[0+h[v+c]]=h[y+b],h[y+b]=h[0+s],h[g+b]+=h[g+c])}for(s=0;s<a;s++)p[s]<0&&(p[s]=c++);return!0}(u,c))for(c.unz=0,r=0;r<s;r++)c.unz+=c.cp[r]}else c.unz=4*o[s]+s,c.lnz=c.unz;return c}}));t.createCsSqr=r})),fi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csMarked=function(e,t){return e[t]<0}})),pi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csMark=function(e,t){e[t]=(0,si.csFlip)(e[t])}})),mi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csUnflip=function(e){return e<0?(0,si.csFlip)(e):e}})),hi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csDfs=function(e,t,n,r,i){var a,o,s,c=t._index,u=t._ptr,l=t._size[1],d=0;r[0]=e;for(;d>=0;){e=r[d];var f=i?i[e]:e;(0,fi.csMarked)(u,e)||((0,pi.csMark)(u,e),r[l+d]=f<0?0:(0,mi.csUnflip)(u[f]));var p=1;for(o=r[l+d],s=f<0?0:(0,mi.csUnflip)(u[f+1]);o<s;o++)if(a=c[o],!(0,fi.csMarked)(u,a)){r[l+d]=o,r[++d]=a,p=0;break}p&&(d--,r[--n]=e)}return n}})),yi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csReach=function(e,t,n,r,i){var a,o,s,c=e._ptr,u=e._size,l=t._index,d=t._ptr,f=u[1],p=f;for(o=d[n],s=d[n+1],a=o;a<s;a++){var m=l[a];(0,fi.csMarked)(c,m)||(p=(0,hi.csDfs)(m,e,p,r,i))}for(a=p;a<f;a++)(0,pi.csMark)(c,r[a]);return p}})),vi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsSpsolve=void 0;var n=["divideScalar","multiply","subtract"],r=(0,h.factory)("csSpsolve",n,(function(e){var t=e.divideScalar,n=e.multiply,r=e.subtract;return function(e,i,a,o,s,c,u){var l,d,f,p,m=e._values,h=e._index,y=e._ptr,v=e._size[1],g=i._values,b=i._index,x=i._ptr,D=(0,yi.csReach)(e,i,a,o,c);for(l=D;l<v;l++)s[o[l]]=0;for(d=x[a],f=x[a+1],l=d;l<f;l++)s[b[l]]=g[l];for(var _=D;_<v;_++){var w=o[_],N=c?c[w]:w;if(!(N<0))for(d=y[N],f=y[N+1],s[w]=t(s[w],m[u?d:f-1]),l=u?d+1:d,p=u?f:f-1;l<p;l++){var M=h[l];s[M]=r(s[M],n(m[l],s[w]))}}return D}}));t.createCsSpsolve=r})),gi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCsLu=void 0;var n=["abs","divideScalar","multiply","subtract","larger","largerEq","SparseMatrix"],r=(0,h.factory)("csLu",n,(function(e){var t=e.abs,n=e.divideScalar,r=e.multiply,i=e.subtract,a=e.larger,o=e.largerEq,s=e.SparseMatrix,c=(0,vi.createCsSpsolve)({divideScalar:n,multiply:r,subtract:i});return function(e,i,u){if(!e)return null;var l,d=e._size[1],f=100,p=100;i&&(l=i.q,f=i.lnz||f,p=i.unz||p);var m,h,y=[],v=[],g=[],b=new s({values:y,index:v,ptr:g,size:[d,d]}),x=[],D=[],_=[],w=new s({values:x,index:D,ptr:_,size:[d,d]}),N=[],M=[],O=[];for(m=0;m<d;m++)M[m]=0,N[m]=-1,g[m+1]=0;f=0,p=0;for(var S=0;S<d;S++){g[S]=f,_[S]=p;var P=l?l[S]:S,j=c(b,e,P,O,M,N,1),A=-1,E=-1;for(h=j;h<d;h++)if(N[m=O[h]]<0){var C=t(M[m]);a(C,E)&&(E=C,A=m)}else D[p]=N[m],x[p++]=M[m];if(-1===A||E<=0)return null;N[P]<0&&o(t(M[P]),r(E,u))&&(A=P);var T=M[A];for(D[p]=S,x[p++]=T,N[A]=S,v[f]=A,y[f++]=1,h=j;h<d;h++)N[m=O[h]]<0&&(v[f]=m,y[f++]=n(M[m],T)),M[m]=0}for(g[d]=f,_[d]=p,h=0;h<f;h++)v[h]=N[v[h]];return y.splice(f,y.length-f),v.splice(f,v.length-f),x.splice(p,x.length-p),D.splice(p,D.length-p),{L:b,U:w,pinv:N}}}));t.createCsLu=r})),bi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSlu=void 0;var n=["typed","abs","add","multiply","transpose","divideScalar","subtract","larger","largerEq","SparseMatrix"],r=(0,h.factory)("slu",n,(function(e){var t=e.typed,n=e.abs,r=e.add,i=e.multiply,a=e.transpose,o=e.divideScalar,s=e.subtract,c=e.larger,l=e.largerEq,d=e.SparseMatrix,f=(0,di.createCsSqr)({add:r,multiply:i,transpose:a}),p=(0,gi.createCsLu)({abs:n,divideScalar:o,multiply:i,subtract:s,larger:c,largerEq:l,SparseMatrix:d});return t("slu",{"SparseMatrix, number, number":function(e,t,n){if(!(0,u.isInteger)(t)||t<0||t>3)throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");if(n<0||n>1)throw new Error("Partial pivoting threshold must be a number from 0 to 1");var r=f(t,e,!1),i=p(e,r,n);return{L:i.L,U:i.U,p:i.pinv,q:r.q,toString:function(){return"L: "+this.L.toString()+"\nU: "+this.U.toString()+"\np: "+this.p.toString()+(this.q?"\nq: "+this.q.toString():"")+"\n"}}}})}));t.createSlu=r})),xi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.csIpvec=function(e,t){var n,r=t.length,i=[];if(e)for(n=0;n<r;n++)i[e[n]]=t[n];else for(n=0;n<r;n++)i[n]=t[n];return i}})),Di=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createLusolve=void 0;var n=["typed","matrix","lup","slu","usolve","lsolve","DenseMatrix"],r=(0,h.factory)("lusolve",n,(function(e){var t=e.typed,n=e.matrix,r=e.lup,a=e.slu,o=e.usolve,s=e.lsolve,c=e.DenseMatrix,u=(0,Kt.createSolveValidation)({DenseMatrix:c});return t("lusolve",{"Array, Array | Matrix":function(e,t){e=n(e);var i=r(e);return d(i.L,i.U,i.p,null,t).valueOf()},"DenseMatrix, Array | Matrix":function(e,t){var n=r(e);return d(n.L,n.U,n.p,null,t)},"SparseMatrix, Array | Matrix":function(e,t){var n=r(e);return d(n.L,n.U,n.p,null,t)},"SparseMatrix, Array | Matrix, number, number":function(e,t,n,r){var i=a(e,n,r);return d(i.L,i.U,i.p,i.q,t)},"Object, Array | Matrix":function(e,t){return d(e.L,e.U,e.p,e.q,t)}});function l(e){if((0,i.isMatrix)(e))return e;if((0,i.isArray)(e))return n(e);throw new TypeError("Invalid Matrix LU decomposition")}function d(e,t,n,r,i){e=l(e),t=l(t),n&&((i=u(e,i,!0))._data=(0,xi.csIpvec)(n,i._data));var a=s(e,i),c=o(t,a);return r&&(c._data=(0,xi.csIpvec)(r,c._data)),c}}));t.createLusolve=r})),_i=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createHelpClass=void 0;var n=["parse"],r=(0,h.factory)("Help",n,(function(e){var t=e.parse;function n(e){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(!e)throw new Error('Argument "doc" missing');this.doc=e}return n.prototype.type="Help",n.prototype.isHelp=!0,n.prototype.toString=function(){var e=this.doc||{},n="\n";if(e.name&&(n+="Name: "+e.name+"\n\n"),e.category&&(n+="Category: "+e.category+"\n\n"),e.description&&(n+="Description:\n    "+e.description+"\n\n"),e.syntax&&(n+="Syntax:\n    "+e.syntax.join("\n    ")+"\n\n"),e.examples){n+="Examples:\n";for(var r={},a=0;a<e.examples.length;a++){var o=e.examples[a];n+="    "+o+"\n";var s=void 0;try{s=t(o).compile().evaluate(r)}catch(e){s=e}void 0===s||(0,i.isHelp)(s)||(n+="        "+(0,d.format)(s,{precision:14})+"\n")}n+="\n"}return e.seealso&&e.seealso.length&&(n+="See also: "+e.seealso.join(", ")+"\n"),n},n.prototype.toJSON=function(){var e=(0,a.clone)(this.doc);return e.mathjs="Help",e},n.fromJSON=function(e){var t={};return Object.keys(e).filter((function(e){return"mathjs"!==e})).forEach((function(n){t[n]=e[n]})),new n(t)},n.prototype.valueOf=n.prototype.toString,n}),{isClass:!0});t.createHelpClass=r})),wi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createChainClass=void 0;var n=["?on","math"],r=(0,h.factory)("Chain",n,(function(e){var t=e.on,n=e.math;function r(e){if(!(this instanceof r))throw new SyntaxError("Constructor must be called with the new operator");(0,i.isChain)(e)?this.value=e.value:this.value=e}function o(e,t){(0,a.lazy)(r.prototype,e,(function(){var e=t();if("function"==typeof e)return s(e)}))}function s(e){return function(){for(var t=[this.value],n=0;n<arguments.length;n++)t[n+1]=arguments[n];return new r(e.apply(e,t))}}r.prototype.type="Chain",r.prototype.isChain=!0,r.prototype.done=function(){return this.value},r.prototype.valueOf=function(){return this.value},r.prototype.toString=function(){return(0,d.format)(this.value)},r.prototype.toJSON=function(){return{mathjs:"Chain",value:this.value}},r.fromJSON=function(e){return new r(e.value)},r.createProxy=function(e,t){if("string"==typeof e)!function(e,t){"function"==typeof t&&(r.prototype[e]=s(t))}(e,t);else{var n=function(t){(0,a.hasOwnProperty)(e,t)&&void 0===c[t]&&o(t,(function(){return e[t]}))};for(var i in e)n(i)}};var c={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};return r.createProxy(n),t&&t("import",(function(e,t,n){n||o(e,t)})),r}),{isClass:!0});t.createChainClass=r})),Ni=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bignumberDocs=void 0;t.bignumberDocs={name:"bignumber",category:"Construction",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]}})),Mi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.typeOfDocs=void 0;t.typeOfDocs={name:"typeOf",category:"Utils",syntax:["typeOf(x)"],description:"Get the type of a variable.",examples:["typeOf(3.5)","typeOf(2 - 4i)","typeOf(45 deg)",'typeOf("hello world")'],seealso:["getMatrixDataType"]}})),Oi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isZeroDocs=void 0;t.isZeroDocs={name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]}})),Si=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isPrimeDocs=void 0;t.isPrimeDocs={name:"isPrime",category:"Utils",syntax:["isPrime(x)"],description:"Test whether a value is prime: has no divisors other than itself and one.",examples:["isPrime(3)","isPrime(-2)","isPrime([2, 17, 100])"],seealso:["isInteger","isNumeric","isNegative","isZero"]}})),Pi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isPositiveDocs=void 0;t.isPositiveDocs={name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]}})),ji=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isNumericDocs=void 0;t.isNumericDocs={name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)",'isNumeric("2")','hasNumericValue("2")',"isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))","isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","hasNumericValue"]}})),Ai=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hasNumericValueDocs=void 0;t.hasNumericValueDocs={name:"hasNumericValue",category:"Utils",syntax:["hasNumericValue(x)"],description:"Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",examples:["hasNumericValue(2)",'hasNumericValue("2")','isNumeric("2")',"hasNumericValue(0)","hasNumericValue(bignumber(500))","hasNumericValue(fraction(0.125))","hasNumericValue(2 + 3i)",'hasNumericValue([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","isNumeric"]}})),Ei=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isNegativeDocs=void 0;t.isNegativeDocs={name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]}})),Ci=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isIntegerDocs=void 0;t.isIntegerDocs={name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]}})),Ti=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isNaNDocs=void 0;t.isNaNDocs={name:"isNaN",category:"Utils",syntax:["isNaN(x)"],description:"Test whether a value is NaN (not a number)",examples:["isNaN(2)","isNaN(0 / 0)","isNaN(NaN)","isNaN(Infinity)"],seealso:["isNegative","isNumeric","isPositive","isZero"]}})),ki=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.formatDocs=void 0;t.formatDocs={name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]}})),Ii=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.binDocs=void 0;t.binDocs={name:"bin",category:"Utils",syntax:["bin(value)"],description:"Format a number as binary",examples:["bin(2)"],seealso:["oct","hex"]}})),Bi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.octDocs=void 0;t.octDocs={name:"oct",category:"Utils",syntax:["oct(value)"],description:"Format a number as octal",examples:["oct(56)"],seealso:["bin","hex"]}})),zi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hexDocs=void 0;t.hexDocs={name:"hex",category:"Utils",syntax:["hex(value)"],description:"Format a number as hexadecimal",examples:["hex(240)"],seealso:["bin","oct"]}})),Ri=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cloneDocs=void 0;t.cloneDocs={name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]}})),qi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.toDocs=void 0;t.toDocs={name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]}})),Fi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.tanhDocs=void 0;t.tanhDocs={name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]}})),Ui=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.tanDocs=void 0;t.tanDocs={name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]}})),Li=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sinhDocs=void 0;t.sinhDocs={name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]}})),Hi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sechDocs=void 0;t.sechDocs={name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]}})),Zi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.secDocs=void 0;t.secDocs={name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]}})),Vi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cschDocs=void 0;t.cschDocs={name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]}})),Wi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cscDocs=void 0;t.cscDocs={name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]}})),Gi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cothDocs=void 0;t.cothDocs={name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]}})),$i=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cotDocs=void 0;t.cotDocs={name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]}})),Qi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.coshDocs=void 0;t.coshDocs={name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]}})),Xi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cosDocs=void 0;t.cosDocs={name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]}})),Yi=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atan2Docs=void 0;t.atan2Docs={name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]}})),Ji=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atanhDocs=void 0;t.atanhDocs={name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]}})),Ki=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atanDocs=void 0;t.atanDocs={name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(0.5))"],seealso:["tan","acos","asin"]}})),ea=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asinhDocs=void 0;t.asinhDocs={name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]}})),ta=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asinDocs=void 0;t.asinDocs={name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(0.5))"],seealso:["sin","acos","atan"]}})),na=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asechDocs=void 0;t.asechDocs={name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]}})),ra=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asecDocs=void 0;t.asecDocs={name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]}})),ia=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acschDocs=void 0;t.acschDocs={name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]}})),aa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acscDocs=void 0;t.acscDocs={name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(2)","acsc(csc(0.5))","acsc(0.5)"],seealso:["csc","asin","asec"]}})),oa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acothDocs=void 0;t.acothDocs={name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(2)","acoth(0.5)"],seealso:["acsch","asech"]}})),sa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acotDocs=void 0;t.acotDocs={name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]}})),ca=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acoshDocs=void 0;t.acoshDocs={name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]}})),ua=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acosDocs=void 0;t.acosDocs={name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]}})),la=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sumDocs=void 0;t.sumDocs={name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","variance"]}})),da=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stdDocs=void 0;t.stdDocs={name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","prod","sum","variance"]}})),fa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.quantileSeqDocs=void 0;t.quantileSeqDocs={name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","variance"]}})),pa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.prodDocs=void 0;t.prodDocs={name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","variance"]}})),ma=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.modeDocs=void 0;t.modeDocs={name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(2, 1, 4, 3, 1)","mode([1, 2.7, 3.2, 4, 2.7])","mode(1, 4, 6, 1, 6)"],seealso:["max","mean","min","median","prod","std","sum","variance"]}})),ha=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.minDocs=void 0;t.minDocs={name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dim)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","variance"]}})),ya=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.medianDocs=void 0;t.medianDocs={name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","variance","quantileSeq"]}})),va=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.meanDocs=void 0;t.meanDocs={name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dim)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","variance"]}})),ga=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.maxDocs=void 0;t.maxDocs={name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dim)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","variance"]}})),ba=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.madDocs=void 0;t.madDocs={name:"mad",category:"Statistics",syntax:["mad(a, b, c, ...)","mad(A)"],description:"Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",examples:["mad(10, 20, 30)","mad([1, 2, 3])"],seealso:["mean","median","std","abs"]}})),xa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.erfDocs=void 0;t.erfDocs={name:"erf",category:"Special",syntax:["erf(x)"],description:"Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",examples:["erf(0.2)","erf(-0.5)","erf(4)"],seealso:[]}})),Da=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setUnionDocs=void 0;t.setUnionDocs={name:"setUnion",category:"Set",syntax:["setUnion(set1, set2)"],description:"Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setUnion([1, 2, 3, 4], [3, 4, 5, 6])","setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setIntersect","setDifference"]}})),_a=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setSymDifferenceDocs=void 0;t.setSymDifferenceDocs={name:"setSymDifference",category:"Set",syntax:["setSymDifference(set1, set2)"],description:"Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])","setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setDifference"]}})),wa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setSizeDocs=void 0;t.setSizeDocs={name:"setSize",category:"Set",syntax:["setSize(set)","setSize(set, unique)"],description:'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',examples:["setSize([1, 2, 2, 4])","setSize([1, 2, 2, 4], true)"],seealso:["setUnion","setIntersect","setDifference"]}})),Na=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setPowersetDocs=void 0;t.setPowersetDocs={name:"setPowerset",category:"Set",syntax:["setPowerset(set)"],description:"Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setPowerset([1, 2, 3])"],seealso:["setCartesian"]}})),Ma=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setMultiplicityDocs=void 0;t.setMultiplicityDocs={name:"setMultiplicity",category:"Set",syntax:["setMultiplicity(element, set)"],description:"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setMultiplicity(1, [1, 2, 2, 4])","setMultiplicity(2, [1, 2, 2, 4])"],seealso:["setDistinct","setSize"]}})),Oa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setIsSubsetDocs=void 0;t.setIsSubsetDocs={name:"setIsSubset",category:"Set",syntax:["setIsSubset(set1, set2)"],description:"Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIsSubset([1, 2], [3, 4, 5, 6])","setIsSubset([3, 4], [3, 4, 5, 6])"],seealso:["setUnion","setIntersect","setDifference"]}})),Sa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setIntersectDocs=void 0;t.setIntersectDocs={name:"setIntersect",category:"Set",syntax:["setIntersect(set1, set2)"],description:"Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])","setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setDifference"]}})),Pa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setDistinctDocs=void 0;t.setDistinctDocs={name:"setDistinct",category:"Set",syntax:["setDistinct(set)"],description:"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setDistinct([1, 1, 1, 2, 2, 3])"],seealso:["setMultiplicity"]}})),ja=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setDifferenceDocs=void 0;t.setDifferenceDocs={name:"setDifference",category:"Set",syntax:["setDifference(set1, set2)"],description:"Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setDifference([1, 2, 3, 4], [3, 4, 5, 6])","setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setSymDifference"]}})),Aa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setCartesianDocs=void 0;t.setCartesianDocs={name:"setCartesian",category:"Set",syntax:["setCartesian(set1, set2)"],description:"Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setCartesian([1, 2], [3, 4])"],seealso:["setUnion","setIntersect","setDifference","setPowerset"]}})),Ea=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unequalDocs=void 0;t.unequalDocs={name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]}})),Ca=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.smallerEqDocs=void 0;t.smallerEqDocs={name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 <= 1+1","2 < 1+1","a = 3.2","b = 6-2.8","(a <= b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]}})),Ta=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.smallerDocs=void 0;t.smallerDocs={name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]}})),ka=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.largerEqDocs=void 0;t.largerEqDocs={name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 >= 1+1","2 > 1+1","a = 3.2","b = 6-2.8","(a >= b)"],seealso:["equal","unequal","smallerEq","smaller","compare"]}})),Ia=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.largerDocs=void 0;t.largerDocs={name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]}})),Ba=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.equalTextDocs=void 0;t.equalTextDocs={name:"equalText",category:"Relational",syntax:["equalText(x, y)"],description:"Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",examples:['equalText("Hello", "Hello")','equalText("a", "A")','equal("2e3", "2000")','equalText("2e3", "2000")','equalText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural","compareText","equal"]}})),za=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.equalDocs=void 0;t.equalDocs={name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual","equalText"]}})),Ra=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.deepEqualDocs=void 0;t.deepEqualDocs={name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["deepEqual([1,3,4], [1,3,4])","deepEqual([1,3,4], [1,3])"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]}})),qa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareTextDocs=void 0;t.compareTextDocs={name:"compareText",category:"Relational",syntax:["compareText(x, y)"],description:"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:['compareText("B", "A")','compareText("A", "B")','compareText("A", "A")','compareText("2", "10")','compare("2", "10")',"compare(2, 10)",'compareNatural("2", "10")','compareText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural"]}})),Fa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareNaturalDocs=void 0;t.compareNaturalDocs={name:"compareNatural",category:"Relational",syntax:["compareNatural(x, y)"],description:"Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compareNatural(2, 3)","compareNatural(3, 2)","compareNatural(2, 2)","compareNatural(5cm, 40mm)",'compareNatural("2", "10")',"compareNatural(2 + 3i, 2 + 4i)","compareNatural([1, 2, 4], [1, 2, 3])","compareNatural([1, 5], [1, 2, 3])","compareNatural([1, 2], [1, 2])","compareNatural({a: 2}, {a: 4})"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare","compareText"]}})),Ua=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareDocs=void 0;t.compareDocs={name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compareNatural","compareText"]}})),La=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomIntDocs=void 0;t.randomIntDocs={name:"randomInt",category:"Probability",syntax:["randomInt(max)","randomInt(min, max)","randomInt(size)","randomInt(size, max)","randomInt(size, min, max)"],description:"Return a random integer number",examples:["randomInt(10, 20)","randomInt([2, 3], 10)"],seealso:["pickRandom","random"]}})),Ha=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomDocs=void 0;t.randomDocs={name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]}})),Za=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.pickRandomDocs=void 0;t.pickRandomDocs={name:"pickRandom",category:"Probability",syntax:["pickRandom(array)","pickRandom(array, number)","pickRandom(array, weights)","pickRandom(array, number, weights)","pickRandom(array, weights, number)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])","pickRandom([1, 3, 1, 6], 2)","pickRandom([1, 3, 1, 6], [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],seealso:["random","randomInt"]}})),Va=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.permutationsDocs=void 0;t.permutationsDocs={name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","combinationsWithRep","factorial"]}})),Wa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.multinomialDocs=void 0;t.multinomialDocs={name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]}})),Ga=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.kldivergenceDocs=void 0;t.kldivergenceDocs={name:"kldivergence",category:"Probability",syntax:["kldivergence(x, y)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]}})),$a=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gammaDocs=void 0;t.gammaDocs={name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]}})),Qa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.factorialDocs=void 0;t.factorialDocs={name:"factorial",category:"Probability",syntax:["n!","factorial(n)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","combinationsWithRep","permutations","gamma"]}})),Xa=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.combinationsDocs=void 0;t.combinationsDocs={name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["combinationsWithRep","permutations","factorial"]}})),Ya=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.combinationsWithRepDocs=void 0;t.combinationsWithRepDocs={name:"combinationsWithRep",category:"Probability",syntax:["combinationsWithRep(n, k)"],description:"Compute the number of combinations of n items taken k at a time with replacements.",examples:["combinationsWithRep(7, 5)"],seealso:["combinations","permutations","factorial"]}})),Ja=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.zerosDocs=void 0;t.zerosDocs={name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose"]}})),Ka=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.transposeDocs=void 0;t.transposeDocs={name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]}})),eo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.traceDocs=void 0;t.traceDocs={name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","transpose","zeros"]}})),to=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.subsetDocs=void 0;t.subsetDocs={name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","trace","transpose","zeros"]}})),no=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.squeezeDocs=void 0;t.squeezeDocs={name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","identity","inv","ones","range","size","subset","trace","transpose","zeros"]}})),ro=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sortDocs=void 0;t.sortDocs={name:"sort",category:"Matrix",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"])',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)','sort(["10", "1", "2"], "natural")'],seealso:["map","filter","forEach"]}})),io=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sizeDocs=void 0;t.sizeDocs={name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","det","diag","identity","inv","ones","range","squeeze","subset","trace","transpose","zeros"]}})),ao=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.diffDocs=void 0;t.diffDocs={name:"diff",category:"Matrix",syntax:["diff(arr)","diff(arr, dim)"],description:["Create a new matrix or array with the difference of the passed matrix or array.","Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference","If no dimension parameter is passed it is assumed as dimension 0","Dimension is zero-based in javascript and one-based in the parser","Arrays must be 'rectangular' meaning arrays like [1, 2]","If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays"],examples:["diff([1, 2, 4, 7, 0])","diff([1, 2, 4, 7, 0], 0)","diff(matrix([1, 2, 4, 7, 0]))","diff([[1, 2], [3, 4]])","diff([[1, 2], [3, 4]], 0)","diff([[1, 2], [3, 4]], 1)","diff([[1, 2], [3, 4]], bignumber(1))","diff(matrix([[1, 2], [3, 4]]), 1)","diff([[1, 2], matrix([3, 4])], 1)"],seealso:["subtract","partitionSelect"]}})),oo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.reshapeDocs=void 0;t.reshapeDocs={name:"reshape",category:"Matrix",syntax:["reshape(x, sizes)"],description:"Reshape a multi dimensional array to fit the specified dimensions.",examples:["reshape([1, 2, 3, 4, 5, 6], [2, 3])","reshape([[1, 2], [3, 4]], [1, 4])","reshape([[1, 2], [3, 4]], [4])"],seealso:["size","squeeze","resize"]}})),so=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.resizeDocs=void 0;t.resizeDocs={name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze","reshape"]}})),co=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rangeDocs=void 0;t.rangeDocs={name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","identity","inv","ones","size","squeeze","subset","trace","transpose","zeros"]}})),uo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.partitionSelectDocs=void 0;t.partitionSelectDocs={name:"partitionSelect",category:"Matrix",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1)'],seealso:["sort"]}})),lo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.onesDocs=void 0;t.onesDocs={name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","identity","inv","range","size","squeeze","subset","trace","transpose","zeros"]}})),fo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.mapDocs=void 0;t.mapDocs={name:"map",category:"Matrix",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], square)"],seealso:["filter","forEach"]}})),po=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.kronDocs=void 0;t.kronDocs={name:"kron",category:"Matrix",syntax:["kron(x, y)"],description:"Calculates the kronecker product of 2 matrices or vectors.",examples:["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])","kron([1,1], [2,3,4])"],seealso:["multiply","dot","cross"]}})),mo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.invDocs=void 0;t.invDocs={name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","identity","ones","range","size","squeeze","subset","trace","transpose","zeros"]}})),ho=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.forEachDocs=void 0;t.forEachDocs={name:"forEach",category:"Matrix",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["forEach([1, 2, 3], function(val) { console.log(val) })"],seealso:["map","sort","filter"]}})),yo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.flattenDocs=void 0;t.flattenDocs={name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]}})),vo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.filterDocs=void 0;t.filterDocs={name:"filter",category:"Matrix",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]}})),go=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.identityDocs=void 0;t.identityDocs={name:"identity",category:"Matrix",syntax:["identity(n)","identity(m, n)","identity([m, n])"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["identity(3)","identity(3, 5)","a = [1, 2, 3; 4, 5, 6]","identity(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}})),bo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getMatrixDataTypeDocs=void 0;t.getMatrixDataTypeDocs={name:"getMatrixDataType",category:"Matrix",syntax:["getMatrixDataType(x)"],description:'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',examples:["getMatrixDataType([1, 2, 3])","getMatrixDataType([[5 cm], [2 inch]])",'getMatrixDataType([1, "text"])',"getMatrixDataType([1, bignumber(4)])"],seealso:["matrix","sparse","typeOf"]}})),xo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotDocs=void 0;t.dotDocs={name:"dot",category:"Matrix",syntax:["dot(A, B)","A * B"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]}})),Do=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.diagDocs=void 0;t.diagDocs={name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}})),_o=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.detDocs=void 0;t.detDocs={name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}})),wo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ctransposeDocs=void 0;t.ctransposeDocs={name:"ctranspose",category:"Matrix",syntax:["x'","ctranspose(x)"],description:"Complex Conjugate and Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","ctranspose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]}})),No=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.crossDocs=void 0;t.crossDocs={name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]}})),Mo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.concatDocs=void 0;t.concatDocs={name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]}})),Oo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.xorDocs=void 0;t.xorDocs={name:"xor",category:"Logical",syntax:["x xor y","xor(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 xor 4"],seealso:["not","and","or"]}})),So=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.orDocs=void 0;t.orDocs={name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]}})),Po=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.notDocs=void 0;t.notDocs={name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]}})),jo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.andDocs=void 0;t.andDocs={name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]}})),Ao=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.intersectDocs=void 0;t.intersectDocs={name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]}})),Eo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.distanceDocs=void 0;t.distanceDocs={name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2]])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]}})),Co=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.helpDocs=void 0;t.helpDocs={name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]}})),To=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.evaluateDocs=void 0;t.evaluateDocs={name:"evaluate",category:"Expression",syntax:["evaluate(expression)","evaluate([expr1, expr2, expr3, ...])"],description:"Evaluate an expression or an array with expressions.",examples:['evaluate("2 + 3")','evaluate("sqrt(" + 4 + ")")'],seealso:[]}})),ko=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.imDocs=void 0;t.imDocs={name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]}})),Io=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.reDocs=void 0;t.reDocs={name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]}})),Bo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.conjDocs=void 0;t.conjDocs={name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]}})),zo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.argDocs=void 0;t.argDocs={name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]}})),Ro=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.typedDocs=void 0;t.typedDocs={name:"typed",category:"Core",syntax:["typed(signatures)","typed(name, signatures)"],description:"Create a typed function.",examples:['double = typed({ "number, number": f(x)=x+x })',"double(2)",'double("hello")'],seealso:[]}})),qo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.importDocs=void 0;t.importDocs={name:"import",category:"Core",syntax:["import(functions)","import(functions, options)"],description:"Import functions or constants from an object.",examples:["import({myFn: f(x)=x^2, myConstant: 32 })","myFn(2)","myConstant"],seealso:[]}})),Fo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.configDocs=void 0;t.configDocs={name:"config",category:"Core",syntax:["config()","config(options)"],description:"Get configuration or change configuration.",examples:["config()","1/3 + 1/4",'config({number: "Fraction"})',"1/3 + 1/4"],seealso:[]}})),Uo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stirlingS2Docs=void 0;t.stirlingS2Docs={name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]}})),Lo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compositionDocs=void 0;t.compositionDocs={name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]}})),Ho=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.catalanDocs=void 0;t.catalanDocs={name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]}})),Zo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bellNumbersDocs=void 0;t.bellNumbersDocs={name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]}})),Vo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rightLogShiftDocs=void 0;t.rightLogShiftDocs={name:"rightLogShift",category:"Bitwise",syntax:["x >>> y","rightLogShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]}})),Wo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rightArithShiftDocs=void 0;t.rightArithShiftDocs={name:"rightArithShift",category:"Bitwise",syntax:["x >> y","rightArithShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]}})),Go=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.leftShiftDocs=void 0;t.leftShiftDocs={name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]}})),$o=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitXorDocs=void 0;t.bitXorDocs={name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]}})),Qo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitOrDocs=void 0;t.bitOrDocs={name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]}})),Xo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitNotDocs=void 0;t.bitNotDocs={name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}})),Yo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitAndDocs=void 0;t.bitAndDocs={name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]}})),Jo=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.xgcdDocs=void 0;t.xgcdDocs={name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]}})),Ko=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unaryPlusDocs=void 0;t.unaryPlusDocs={name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]}})),es=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unaryMinusDocs=void 0;t.unaryMinusDocs={name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]}})),ts=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.squareDocs=void 0;t.squareDocs={name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]}})),ns=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sqrtmDocs=void 0;t.sqrtmDocs={name:"sqrtm",category:"Arithmetic",syntax:["sqrtm(x)"],description:"Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",examples:["sqrtm([[1, 2], [3, 4]])"],seealso:["sqrt","abs","square","multiply"]}})),rs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sqrtDocs=void 0;t.sqrtDocs={name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","sqrtm","multiply","nthRoot","nthRoots","pow"]}})),is=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.signDocs=void 0;t.signDocs={name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]}})),as=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.roundDocs=void 0;t.roundDocs={name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]}})),os=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.powDocs=void 0;t.powDocs={name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3","2*2*2","1 + e ^ (pi * i)"],seealso:["multiply","nthRoot","nthRoots","sqrt"]}})),ss=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nthRootsDocs=void 0;t.nthRootsDocs={name:"nthRoots",category:"Arithmetic",syntax:["nthRoots(A)","nthRoots(A, root)"],description:'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',examples:["nthRoots(1)","nthRoots(1, 3)"],seealso:["sqrt","pow","nthRoot"]}})),cs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nthRootDocs=void 0;t.nthRootDocs={name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["nthRoots","pow","sqrt"]}})),us=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.normDocs=void 0;t.normDocs={name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i)","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)",'norm([[1, 2], [3, 4]], "inf")','norm([[1, 2], [3, 4]], "fro")']}})),ls=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.multiplyDocs=void 0;t.multiplyDocs={name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]}})),ds=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.modDocs=void 0;t.modDocs={name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]}})),fs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.log10Docs=void 0;t.log10Docs={name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]}})),ps=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.log1pDocs=void 0;t.log1pDocs={name:"log1p",category:"Arithmetic",syntax:["log1p(x)","log1p(x, base)"],description:"Calculate the logarithm of a `value+1`",examples:["log1p(2.5)","exp(log1p(1.4))","pow(10, 4)","log1p(9999, 10)","log1p(9999) / log(10)"],seealso:["exp","log","log2","log10"]}})),ms=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.log2Docs=void 0;t.log2Docs={name:"log2",category:"Arithmetic",syntax:["log2(x)"],description:"Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",examples:["log2(0.03125)","log2(16)","log2(16) / log2(2)","pow(2, 4)"],seealso:["exp","log1p","log","log10"]}})),hs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.logDocs=void 0;t.logDocs={name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log1p","log2","log10"]}})),ys=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lcmDocs=void 0;t.lcmDocs={name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]}})),vs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hypotDocs=void 0;t.hypotDocs={name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]}})),gs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gcdDocs=void 0;t.gcdDocs={name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]}})),bs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.floorDocs=void 0;t.floorDocs={name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]}})),xs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.fixDocs=void 0;t.fixDocs={name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]}})),Ds=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.expm1Docs=void 0;t.expm1Docs={name:"expm1",category:"Arithmetic",syntax:["expm1(x)"],description:"Calculate the value of subtracting 1 from the exponential value.",examples:["expm1(2)","pow(e, 2) - 1","log(expm1(2) + 1)"],seealso:["exp","pow","log"]}})),_s=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.expmDocs=void 0;t.expmDocs={name:"expm",category:"Arithmetic",syntax:["exp(x)"],description:"Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",examples:["expm([[0,2],[0,0]])"],seealso:["exp"]}})),ws=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.eigsDocs=void 0;t.eigsDocs={name:"eigs",category:"Matrix",syntax:["eigs(x)"],description:"Calculate the eigenvalues and eigenvectors of a real symmetric matrix",examples:["eigs([[5, 2.3], [2.3, 1]])"],seealso:["inv"]}})),Ns=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.expDocs=void 0;t.expDocs={name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["expm","expm1","pow","log"]}})),Ms=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotMultiplyDocs=void 0;t.dotMultiplyDocs={name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]}})),Os=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotDivideDocs=void 0;t.dotDivideDocs={name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]}})),Ss=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.divideDocs=void 0;t.divideDocs={name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]}})),Ps=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cubeDocs=void 0;t.cubeDocs={name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]}})),js=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ceilDocs=void 0;t.ceilDocs={name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]}})),As=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cbrtDocs=void 0;t.cbrtDocs={name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]}})),Es=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.addDocs=void 0;t.addDocs={name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]}})),Cs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.absDocs=void 0;t.absDocs={name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]}})),Ts=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.qrDocs=void 0;t.qrDocs={name:"qr",category:"Algebra",syntax:["qr(A)"],description:"Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",examples:["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],seealso:["lup","slu","matrix"]}})),ks=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.usolveDocs=void 0;t.usolveDocs={name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolveAll","lup","lusolve","lsolve","matrix","sparse"]}})),Is=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.usolveAllDocs=void 0;t.usolveAllDocs={name:"usolveAll",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolve","lup","lusolve","lsolve","matrix","sparse"]}})),Bs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sluDocs=void 0;t.sluDocs={name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup","qr"]}})),zs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rationalizeDocs=void 0;t.rationalizeDocs={name:"rationalize",category:"Algebra",syntax:["rationalize(expr)","rationalize(expr, scope)","rationalize(expr, scope, detailed)"],description:"Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",examples:['rationalize("2x/y - y/(x+1)")','rationalize("2x/y - y/(x+1)", true)'],seealso:["simplify"]}})),Rs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.simplifyDocs=void 0;t.simplifyDocs={name:"simplify",category:"Algebra",syntax:["simplify(expr)","simplify(expr, rules)"],description:"Simplify an expression tree.",examples:['simplify("3 + 2 / 4")','simplify("2x + x")','f = parse("x * (x + 2 + x)")',"simplified = simplify(f)","simplified.evaluate({x: 2})"],seealso:["derivative","parse","evaluate"]}})),qs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lupDocs=void 0;t.lupDocs={name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu","qr"]}})),Fs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lsolveDocs=void 0;t.lsolveDocs={name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolveAll","lup","lusolve","usolve","matrix","sparse"]}})),Us=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lsolveAllDocs=void 0;t.lsolveAllDocs={name:"lsolveAll",category:"Algebra",syntax:["x=lsolveAll(L, b)"],description:"Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolve","lup","lusolve","usolve","matrix","sparse"]}})),Ls=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.derivativeDocs=void 0;t.derivativeDocs={name:"derivative",category:"Algebra",syntax:["derivative(expr, variable)","derivative(expr, variable, {simplify: boolean})"],description:"Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",examples:['derivative("2x^3", "x")','derivative("2x^3", "x", {simplify: false})','derivative("2x^2 + 3x + 4", "x")','derivative("sin(2x)", "x")','f = parse("x^2 + x")','x = parse("x")',"df = derivative(f, x)","df.evaluate({x: 3})"],seealso:["simplify","parse","evaluate"]}})),Hs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.versionDocs=void 0;t.versionDocs={name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]}})),Zs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.trueDocs=void 0;t.trueDocs={name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]}})),Vs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.tauDocs=void 0;t.tauDocs={name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]}})),Ws=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SQRT2Docs=void 0;t.SQRT2Docs={name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]}})),Gs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SQRT12Docs=void 0;t.SQRT12Docs={name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]}})),$s=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.phiDocs=void 0;t.phiDocs={name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["phi"],seealso:[]}})),Qs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.piDocs=void 0;t.piDocs={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]}})),Xs=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nullDocs=void 0;t.nullDocs={name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]}})),Ys=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.NaNDocs=void 0;t.NaNDocs={name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]}})),Js=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LOG10EDocs=void 0;t.LOG10EDocs={name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]}})),Ks=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LOG2EDocs=void 0;t.LOG2EDocs={name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]}})),ec=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LN10Docs=void 0;t.LN10Docs={name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]}})),tc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LN2Docs=void 0;t.LN2Docs={name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]}})),nc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.InfinityDocs=void 0;t.InfinityDocs={name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]}})),rc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.iDocs=void 0;t.iDocs={name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]}})),ic=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.falseDocs=void 0;t.falseDocs={name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]}})),ac=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.eDocs=void 0;t.eDocs={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]}})),oc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unitDocs=void 0;t.unitDocs={name:"unit",category:"Construction",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]}})),sc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stringDocs=void 0;t.stringDocs={name:"string",category:"Construction",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]}})),cc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.splitUnitDocs=void 0;t.splitUnitDocs={name:"splitUnit",category:"Construction",syntax:["splitUnit(unit: Unit, parts: Unit[])"],description:"Split a unit in an array of units whose sum is equal to the original unit.",examples:['splitUnit(1 m, ["feet", "inch"])'],seealso:["unit","createUnit"]}})),uc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sparseDocs=void 0;t.sparseDocs={name:"sparse",category:"Construction",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]}})),lc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.numberDocs=void 0;t.numberDocs={name:"number",category:"Construction",syntax:["x","number(x)","number(unit, valuelessUnit)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number(unit("52cm"), "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]}})),dc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.matrixDocs=void 0;t.matrixDocs={name:"matrix",category:"Construction",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]}})),fc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.indexDocs=void 0;t.indexDocs={name:"index",category:"Construction",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["[]","[1, 2, 3]","A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[0:2, 0:2] = ones(2, 2)"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]}})),pc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.fractionDocs=void 0;t.fractionDocs={name:"fraction",category:"Construction",syntax:["fraction(num)","fraction(num,den)"],description:"Create a fraction from a number or from a numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]}})),mc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUnitDocs=void 0;t.createUnitDocs={name:"createUnit",category:"Construction",syntax:["createUnit(definitions)","createUnit(name, definition)"],description:"Create a user-defined unit and register it with the Unit type.",examples:['createUnit("foo")','createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})','createUnit("mph", "1 mile/hour")'],seealso:["unit","splitUnit"]}})),hc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.complexDocs=void 0;t.complexDocs={name:"complex",category:"Construction",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]}})),yc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.booleanDocs=void 0;t.booleanDocs={name:"boolean",category:"Construction",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]}})),vc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotPowDocs=void 0;t.dotPowDocs={name:"dotPow",category:"Operators",syntax:["x .^ y","dotPow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]}})),gc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lusolveDocs=void 0;t.lusolveDocs={name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]}})),bc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.subtractDocs=void 0;t.subtractDocs={name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]}})),xc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.varianceDocs=void 0;t.varianceDocs={name:"variance",category:"Statistics",syntax:["variance(a, b, c, ...)","variance(A)","variance(A, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["variance(2, 4, 6)","variance([2, 4, 6, 8])",'variance([2, 4, 6, 8], "uncorrected")','variance([2, 4, 6, 8], "biased")',"variance([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]}})),Dc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sinDocs=void 0;t.sinDocs={name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]}})),_c=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.numericDocs=void 0;t.numericDocs={name:"numeric",category:"Utils",syntax:["numeric(x)"],description:"Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",examples:['numeric("4")','numeric("4", "number")','numeric("4", "BigNumber")','numeric("4", "Fraction)','numeric(4, "Fraction")','numeric(fraction(2, 5), "number)'],seealso:["number","fraction","bignumber","string","format"]}})),wc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.columnDocs=void 0;t.columnDocs={name:"column",category:"Matrix",syntax:["column(x, index)"],description:"Return a column from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","column(A, 1)","column(A, 2)"],seealso:["row"]}})),Nc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rowDocs=void 0;t.rowDocs={name:"row",category:"Matrix",syntax:["row(x, index)"],description:"Return a row from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","row(A, 1)","row(A, 2)"],seealso:["column"]}})),Mc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rotationMatrixDocs=void 0;t.rotationMatrixDocs={name:"rotationMatrix",category:"Matrix",syntax:["rotationMatrix(theta)","rotationMatrix(theta, v)","rotationMatrix(theta, v, format)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotationMatrix(pi / 2)",'rotationMatrix(unit("45deg"), [0, 0, 1])','rotationMatrix(1, matrix([0, 0, 1]), "sparse")'],seealso:["cos","sin"]}})),Oc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rotateDocs=void 0;t.rotateDocs={name:"rotate",category:"Matrix",syntax:["rotate(w, theta)","rotate(w, theta, v)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotate([1, 0], math.pi / 2)",'rotate(matrix([1, 0]), unit("35deg"))','rotate([1, 0, 0], unit("90deg"), [0, 0, 1])','rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))'],seealso:["matrix","rotationMatrix"]}})),Sc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.embeddedDocs=void 0;var n={bignumber:Ni.bignumberDocs,boolean:yc.booleanDocs,complex:hc.complexDocs,createUnit:mc.createUnitDocs,fraction:pc.fractionDocs,index:fc.indexDocs,matrix:dc.matrixDocs,number:lc.numberDocs,sparse:uc.sparseDocs,splitUnit:cc.splitUnitDocs,string:sc.stringDocs,unit:oc.unitDocs,e:ac.eDocs,E:ac.eDocs,false:ic.falseDocs,i:rc.iDocs,Infinity:nc.InfinityDocs,LN2:tc.LN2Docs,LN10:ec.LN10Docs,LOG2E:Ks.LOG2EDocs,LOG10E:Js.LOG10EDocs,NaN:Ys.NaNDocs,null:Xs.nullDocs,pi:Qs.piDocs,PI:Qs.piDocs,phi:$s.phiDocs,SQRT1_2:Gs.SQRT12Docs,SQRT2:Ws.SQRT2Docs,tau:Vs.tauDocs,true:Zs.trueDocs,version:Hs.versionDocs,speedOfLight:{description:"Speed of light in vacuum",examples:["speedOfLight"]},gravitationConstant:{description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},planckConstant:{description:"Planck constant",examples:["planckConstant"]},reducedPlanckConstant:{description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},magneticConstant:{description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},electricConstant:{description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},vacuumImpedance:{description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},coulomb:{description:"Coulomb's constant",examples:["coulomb"]},elementaryCharge:{description:"Elementary charge",examples:["elementaryCharge"]},bohrMagneton:{description:"Borh magneton",examples:["bohrMagneton"]},conductanceQuantum:{description:"Conductance quantum",examples:["conductanceQuantum"]},inverseConductanceQuantum:{description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},magneticFluxQuantum:{description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},nuclearMagneton:{description:"Nuclear magneton",examples:["nuclearMagneton"]},klitzing:{description:"Von Klitzing constant",examples:["klitzing"]},bohrRadius:{description:"Borh radius",examples:["bohrRadius"]},classicalElectronRadius:{description:"Classical electron radius",examples:["classicalElectronRadius"]},electronMass:{description:"Electron mass",examples:["electronMass"]},fermiCoupling:{description:"Fermi coupling constant",examples:["fermiCoupling"]},fineStructure:{description:"Fine-structure constant",examples:["fineStructure"]},hartreeEnergy:{description:"Hartree energy",examples:["hartreeEnergy"]},protonMass:{description:"Proton mass",examples:["protonMass"]},deuteronMass:{description:"Deuteron Mass",examples:["deuteronMass"]},neutronMass:{description:"Neutron mass",examples:["neutronMass"]},quantumOfCirculation:{description:"Quantum of circulation",examples:["quantumOfCirculation"]},rydberg:{description:"Rydberg constant",examples:["rydberg"]},thomsonCrossSection:{description:"Thomson cross section",examples:["thomsonCrossSection"]},weakMixingAngle:{description:"Weak mixing angle",examples:["weakMixingAngle"]},efimovFactor:{description:"Efimov factor",examples:["efimovFactor"]},atomicMass:{description:"Atomic mass constant",examples:["atomicMass"]},avogadro:{description:"Avogadro's number",examples:["avogadro"]},boltzmann:{description:"Boltzmann constant",examples:["boltzmann"]},faraday:{description:"Faraday constant",examples:["faraday"]},firstRadiation:{description:"First radiation constant",examples:["firstRadiation"]},loschmidt:{description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},gasConstant:{description:"Gas constant",examples:["gasConstant"]},molarPlanckConstant:{description:"Molar Planck constant",examples:["molarPlanckConstant"]},molarVolume:{description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},sackurTetrode:{description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},secondRadiation:{description:"Second radiation constant",examples:["secondRadiation"]},stefanBoltzmann:{description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},wienDisplacement:{description:"Wien displacement law constant",examples:["wienDisplacement"]},molarMass:{description:"Molar mass constant",examples:["molarMass"]},molarMassC12:{description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},gravity:{description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},planckLength:{description:"Planck length",examples:["planckLength"]},planckMass:{description:"Planck mass",examples:["planckMass"]},planckTime:{description:"Planck time",examples:["planckTime"]},planckCharge:{description:"Planck charge",examples:["planckCharge"]},planckTemperature:{description:"Planck temperature",examples:["planckTemperature"]},derivative:Ls.derivativeDocs,lsolve:Fs.lsolveDocs,lsolveAll:Us.lsolveAllDocs,lup:qs.lupDocs,lusolve:gc.lusolveDocs,simplify:Rs.simplifyDocs,rationalize:zs.rationalizeDocs,slu:Bs.sluDocs,usolve:ks.usolveDocs,usolveAll:Is.usolveAllDocs,qr:Ts.qrDocs,abs:Cs.absDocs,add:Es.addDocs,cbrt:As.cbrtDocs,ceil:js.ceilDocs,cube:Ps.cubeDocs,divide:Ss.divideDocs,dotDivide:Os.dotDivideDocs,dotMultiply:Ms.dotMultiplyDocs,dotPow:vc.dotPowDocs,exp:Ns.expDocs,expm:_s.expmDocs,expm1:Ds.expm1Docs,fix:xs.fixDocs,floor:bs.floorDocs,gcd:gs.gcdDocs,hypot:vs.hypotDocs,lcm:ys.lcmDocs,log:hs.logDocs,log2:ms.log2Docs,log1p:ps.log1pDocs,log10:fs.log10Docs,mod:ds.modDocs,multiply:ls.multiplyDocs,norm:us.normDocs,nthRoot:cs.nthRootDocs,nthRoots:ss.nthRootsDocs,pow:os.powDocs,round:as.roundDocs,sign:is.signDocs,sqrt:rs.sqrtDocs,sqrtm:ns.sqrtmDocs,square:ts.squareDocs,subtract:bc.subtractDocs,unaryMinus:es.unaryMinusDocs,unaryPlus:Ko.unaryPlusDocs,xgcd:Jo.xgcdDocs,bitAnd:Yo.bitAndDocs,bitNot:Xo.bitNotDocs,bitOr:Qo.bitOrDocs,bitXor:$o.bitXorDocs,leftShift:Go.leftShiftDocs,rightArithShift:Wo.rightArithShiftDocs,rightLogShift:Vo.rightLogShiftDocs,bellNumbers:Zo.bellNumbersDocs,catalan:Ho.catalanDocs,composition:Lo.compositionDocs,stirlingS2:Uo.stirlingS2Docs,config:Fo.configDocs,import:qo.importDocs,typed:Ro.typedDocs,arg:zo.argDocs,conj:Bo.conjDocs,re:Io.reDocs,im:ko.imDocs,evaluate:To.evaluateDocs,help:Co.helpDocs,distance:Eo.distanceDocs,intersect:Ao.intersectDocs,and:jo.andDocs,not:Po.notDocs,or:So.orDocs,xor:Oo.xorDocs,concat:Mo.concatDocs,cross:No.crossDocs,column:wc.columnDocs,ctranspose:wo.ctransposeDocs,det:_o.detDocs,diag:Do.diagDocs,diff:ao.diffDocs,dot:xo.dotDocs,getMatrixDataType:bo.getMatrixDataTypeDocs,identity:go.identityDocs,filter:vo.filterDocs,flatten:yo.flattenDocs,forEach:ho.forEachDocs,inv:mo.invDocs,eigs:ws.eigsDocs,kron:po.kronDocs,map:fo.mapDocs,ones:lo.onesDocs,partitionSelect:uo.partitionSelectDocs,range:co.rangeDocs,resize:so.resizeDocs,reshape:oo.reshapeDocs,rotate:Oc.rotateDocs,rotationMatrix:Mc.rotationMatrixDocs,row:Nc.rowDocs,size:io.sizeDocs,sort:ro.sortDocs,squeeze:no.squeezeDocs,subset:to.subsetDocs,trace:eo.traceDocs,transpose:Ka.transposeDocs,zeros:Ja.zerosDocs,combinations:Xa.combinationsDocs,combinationsWithRep:Ya.combinationsWithRepDocs,factorial:Qa.factorialDocs,gamma:$a.gammaDocs,kldivergence:Ga.kldivergenceDocs,multinomial:Wa.multinomialDocs,permutations:Va.permutationsDocs,pickRandom:Za.pickRandomDocs,random:Ha.randomDocs,randomInt:La.randomIntDocs,compare:Ua.compareDocs,compareNatural:Fa.compareNaturalDocs,compareText:qa.compareTextDocs,deepEqual:Ra.deepEqualDocs,equal:za.equalDocs,equalText:Ba.equalTextDocs,larger:Ia.largerDocs,largerEq:ka.largerEqDocs,smaller:Ta.smallerDocs,smallerEq:Ca.smallerEqDocs,unequal:Ea.unequalDocs,setCartesian:Aa.setCartesianDocs,setDifference:ja.setDifferenceDocs,setDistinct:Pa.setDistinctDocs,setIntersect:Sa.setIntersectDocs,setIsSubset:Oa.setIsSubsetDocs,setMultiplicity:Ma.setMultiplicityDocs,setPowerset:Na.setPowersetDocs,setSize:wa.setSizeDocs,setSymDifference:_a.setSymDifferenceDocs,setUnion:Da.setUnionDocs,erf:xa.erfDocs,mad:ba.madDocs,max:ga.maxDocs,mean:va.meanDocs,median:ya.medianDocs,min:ha.minDocs,mode:ma.modeDocs,prod:pa.prodDocs,quantileSeq:fa.quantileSeqDocs,std:da.stdDocs,sum:la.sumDocs,variance:xc.varianceDocs,acos:ua.acosDocs,acosh:ca.acoshDocs,acot:sa.acotDocs,acoth:oa.acothDocs,acsc:aa.acscDocs,acsch:ia.acschDocs,asec:ra.asecDocs,asech:na.asechDocs,asin:ta.asinDocs,asinh:ea.asinhDocs,atan:Ki.atanDocs,atanh:Ji.atanhDocs,atan2:Yi.atan2Docs,cos:Xi.cosDocs,cosh:Qi.coshDocs,cot:$i.cotDocs,coth:Gi.cothDocs,csc:Wi.cscDocs,csch:Vi.cschDocs,sec:Zi.secDocs,sech:Hi.sechDocs,sin:Dc.sinDocs,sinh:Li.sinhDocs,tan:Ui.tanDocs,tanh:Fi.tanhDocs,to:qi.toDocs,clone:Ri.cloneDocs,format:ki.formatDocs,bin:Ii.binDocs,oct:Bi.octDocs,hex:zi.hexDocs,isNaN:Ti.isNaNDocs,isInteger:Ci.isIntegerDocs,isNegative:Ei.isNegativeDocs,isNumeric:ji.isNumericDocs,hasNumericValue:Ai.hasNumericValueDocs,isPositive:Pi.isPositiveDocs,isPrime:Si.isPrimeDocs,isZero:Oi.isZeroDocs,typeOf:Mi.typeOfDocs,numeric:_c.numericDocs};t.embeddedDocs=n})),Pc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createHelp=void 0;var n=["typed","mathWithTransform","Help"],r=(0,h.factory)("help",n,(function(e){var t=e.typed,n=e.mathWithTransform,r=e.Help;return t("help",{any:function(e){var t,i=e;if("string"!=typeof e)for(t in n)if((0,a.hasOwnProperty)(n,t)&&e===n[t]){i=t;break}var o=(0,St.getSafeProperty)(Sc.embeddedDocs,i);if(!o){var s="function"==typeof i?i.name:i;throw new Error('No documentation found on "'+s+'"')}return new r(o)}})}));t.createHelp=r})),jc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createChain=void 0;var n=["typed","Chain"],r=(0,h.factory)("chain",n,(function(e){var t=e.typed,n=e.Chain;return t("chain",{"":function(){return new n},any:function(e){return new n(e)}})}));t.createChain=r})),Ac=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDet=void 0;var n=["typed","matrix","subtract","multiply","unaryMinus","lup"],r=(0,h.factory)("det",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,o=e.multiply,s=e.unaryMinus,c=e.lup;return t("det",{any:function(e){return(0,a.clone)(e)},"Array | Matrix":function(e){var t;switch((t=(0,i.isMatrix)(e)?e.size():Array.isArray(e)?(e=n(e)).size():[]).length){case 0:return(0,a.clone)(e);case 1:if(1===t[0])return(0,a.clone)(e.valueOf()[0]);throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");case 2:var u=t[0];if(u===t[1])return function(e,t,n){if(1===t)return(0,a.clone)(e[0][0]);if(2===t)return r(o(e[0][0],e[1][1]),o(e[1][0],e[0][1]));for(var i=c(e),u=i.U[0][0],l=1;l<t;l++)u=o(u,i.U[l][l]);for(var d=0,f=0,p=[];;){for(;p[f];)f++;if(f>=t)break;for(var m=f,h=0;!p[i.p[m]];)p[i.p[m]]=!0,m=i.p[m],h++;h%2==0&&d++}return d%2==0?u:s(u)}(e.clone().valueOf(),u);throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+(0,d.format)(t)+")")}}})}));t.createDet=r})),Ec=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createInv=void 0;var n=["typed","matrix","divideScalar","addScalar","multiply","unaryMinus","det","identity","abs"],r=(0,h.factory)("inv",n,(function(e){var t=e.typed,n=e.matrix,r=e.divideScalar,a=e.addScalar,o=e.multiply,s=e.unaryMinus,c=e.det,u=e.identity,l=e.abs;return t("inv",{"Array | Matrix":function(e){var t=(0,i.isMatrix)(e)?e.size():(0,m.arraySize)(e);switch(t.length){case 1:if(1===t[0])return(0,i.isMatrix)(e)?n([r(1,e.valueOf()[0])]):[r(1,e[0])];throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");case 2:var a=t[0],o=t[1];if(a===o)return(0,i.isMatrix)(e)?n(f(e.valueOf(),a,o),e.storage()):f(e,a,o);throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");default:throw new RangeError("Matrix must be two dimensional (size: "+(0,d.format)(t)+")")}},any:function(e){return r(1,e)}});function f(e,t,n){var i,d,f,p,m;if(1===t){if(0===(p=e[0][0]))throw Error("Cannot calculate inverse, determinant is zero");return[[r(1,p)]]}if(2===t){var h=c(e);if(0===h)throw Error("Cannot calculate inverse, determinant is zero");return[[r(e[1][1],h),r(s(e[0][1]),h)],[r(s(e[1][0]),h),r(e[0][0],h)]]}var y=e.concat();for(i=0;i<t;i++)y[i]=y[i].concat();for(var v=u(t).valueOf(),g=0;g<n;g++){var b=l(y[g][g]),x=g;for(i=g+1;i<t;)l(y[i][g])>b&&(b=l(y[i][g]),x=i),i++;if(0===b)throw Error("Cannot calculate inverse, determinant is zero");(i=x)!==g&&(m=y[g],y[g]=y[i],y[i]=m,m=v[g],v[g]=v[i],v[i]=m);var D=y[g],_=v[g];for(i=0;i<t;i++){var w=y[i],N=v[i];if(i!==g){if(0!==w[g]){for(f=r(s(w[g]),D[g]),d=g;d<n;d++)w[d]=a(w[d],o(f,D[d]));for(d=0;d<n;d++)N[d]=a(N[d],o(f,_[d]))}}else{for(f=D[g],d=g;d<n;d++)w[d]=r(w[d],f);for(d=0;d<n;d++)N[d]=r(N[d],f)}}}return v}}));t.createInv=r})),Cc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createEigs=void 0;var n=["config","typed","matrix","addScalar","equal","subtract","abs","atan","cos","sin","multiplyScalar","inv","bignumber","multiply","add"],r=(0,h.factory)("eigs",n,(function(e){var t=e.config,n=e.typed,r=e.matrix,i=e.addScalar,o=e.subtract,s=e.equal,c=e.abs,u=e.atan,l=e.cos,f=e.sin,p=e.multiplyScalar,m=e.inv,h=e.bignumber,y=e.multiply,v=e.add;return n("eigs",{Array:function(e){var t=r(e),n=t.size();if(2!==n.length||n[0]!==n[1])throw new RangeError("Matrix must be square (size: "+(0,d.format)(n)+")");var i=g(t,n[0]);return{values:i[0],vectors:i[1]}},Matrix:function(e){var t=e.size();if(2!==t.length||t[0]!==t[1])throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");var n=g(e,t[0]);return{values:r(n[0]),vectors:r(n[1])}}});function g(e,n){var r=e.datatype();if(void 0===r&&(r=e.getDataType()),"number"!==r&&"BigNumber"!==r&&"Fraction"!==r)throw"mixed"===r?new TypeError("Mixed matrix element type is not supported"):new TypeError("Matrix element type not supported ("+r+")");if(function(e,t){for(var n=0;n<t;n++)for(var r=n;r<t;r++)if(!s(e[n][r],e[r][n]))throw new TypeError("Input matrix is not symmetric")}(e.toArray(),n),"number"===r)return b(e.toArray());if("Fraction"===r){for(var i=e.toArray(),o=0;o<n;o++)for(var u=o;u<n;u++)i[o][u]=i[o][u].valueOf(),i[u][o]=i[o][u];return b(e.toArray())}return"BigNumber"===r?function(e){for(var n,r=e.length,i=c(t.epsilon/r),o=new Array(r),s=0;s<r;s++)o[s]=j(r,0),o[s][s]=1;var u=S(e);for(;c(u[1])>=c(i);){var l=u[0][0],d=u[0][1];n=D(e[l][l],e[d][d],e[l][d]),e=N(e,n,l,d),o=w(o,n,l,d),u=S(e)}for(var f=j(r,0),p=0;p<r;p++)f[p]=e[p][p];return P((0,a.clone)(f),(0,a.clone)(o))}(e.toArray()):void 0}function b(e){for(var n,r=e.length,i=Math.abs(t.epsilon/r),o=new Array(r),s=0;s<r;s++)o[s]=j(r,0),o[s][s]=1;for(var c=O(e);Math.abs(c[1])>=Math.abs(i);){var u=c[0][0],l=c[0][1];e=M(e,n=x(e[u][u],e[l][l],e[u][l]),u,l),o=_(o,n,u,l),c=O(e)}for(var d=j(r,0),f=0;f<r;f++)d[f]=e[f][f];return P((0,a.clone)(d),(0,a.clone)(o))}function x(e,n,r){var i=n-e;return Math.abs(i)<=t.epsilon?Math.PI/4:.5*Math.atan(2*r/(n-e))}function D(e,n,r){var i=o(n,e);return c(i)<=t.epsilon?h(-1).acos().div(4):p(.5,u(y(2,r,m(i))))}function _(e,t,n,r){for(var i=e.length,a=Math.cos(t),o=Math.sin(t),s=j(i,0),c=j(i,0),u=0;u<i;u++)s[u]=a*e[u][n]-o*e[u][r],c[u]=o*e[u][n]+a*e[u][r];for(var l=0;l<i;l++)e[l][n]=s[l],e[l][r]=c[l];return e}function w(e,t,n,r){for(var a=e.length,s=l(t),c=f(t),u=j(a,h(0)),d=j(a,h(0)),m=0;m<a;m++)u[m]=o(p(s,e[m][n]),p(c,e[m][r])),d[m]=i(p(c,e[m][n]),p(s,e[m][r]));for(var y=0;y<a;y++)e[y][n]=u[y],e[y][r]=d[y];return e}function N(e,t,n,r){for(var a=e.length,s=h(l(t)),c=h(f(t)),u=p(s,s),d=p(c,c),m=j(a,h(0)),g=j(a,h(0)),b=y(h(2),s,c,e[n][r]),x=i(o(p(u,e[n][n]),b),p(d,e[r][r])),D=v(p(d,e[n][n]),b,p(u,e[r][r])),_=0;_<a;_++)m[_]=o(p(s,e[n][_]),p(c,e[r][_])),g[_]=i(p(c,e[n][_]),p(s,e[r][_]));e[n][n]=x,e[r][r]=D,e[n][r]=h(0),e[r][n]=h(0);for(var w=0;w<a;w++)w!==n&&w!==r&&(e[n][w]=m[w],e[w][n]=m[w],e[r][w]=g[w],e[w][r]=g[w]);return e}function M(e,t,n,r){for(var i=e.length,a=Math.cos(t),o=Math.sin(t),s=a*a,c=o*o,u=j(i,0),l=j(i,0),d=s*e[n][n]-2*a*o*e[n][r]+c*e[r][r],f=c*e[n][n]+2*a*o*e[n][r]+s*e[r][r],p=0;p<i;p++)u[p]=a*e[n][p]-o*e[r][p],l[p]=o*e[n][p]+a*e[r][p];e[n][n]=d,e[r][r]=f,e[n][r]=0,e[r][n]=0;for(var m=0;m<i;m++)m!==n&&m!==r&&(e[n][m]=u[m],e[m][n]=u[m],e[r][m]=l[m],e[m][r]=l[m]);return e}function O(e){for(var t=e.length,n=0,r=[0,1],i=0;i<t;i++)for(var a=i+1;a<t;a++)Math.abs(n)<Math.abs(e[i][a])&&(n=Math.abs(e[i][a]),r=[i,a]);return[r,n]}function S(e){for(var t=e.length,n=0,r=[0,1],i=0;i<t;i++)for(var a=i+1;a<t;a++)c(n)<c(e[i][a])&&(n=c(e[i][a]),r=[i,a]);return[r,n]}function P(e,t){for(var n=e.length,r=Array(n),i=Array(n),o=0;o<n;o++)i[o]=Array(n);for(var s=0;s<n;s++){for(var c=0,u=e[0],l=0;l<e.length;l++)e[l]<u&&(u=e[c=l]);r[s]=e.splice(c,1)[0];for(var d=0;d<n;d++)i[d][s]=t[d][c],t[d].splice(c,1)}return[(0,a.clone)(r),(0,a.clone)(i)]}function j(e,t){for(var n=new Array(e),r=0;r<e;r++)n[r]=t;return n}}));t.createEigs=r})),Tc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createExpm=void 0;var n=["typed","abs","add","identity","inv","multiply"],r=(0,h.factory)("expm",n,(function(e){var t=e.typed,n=e.abs,r=e.add,a=e.identity,o=e.inv,s=e.multiply;return t("expm",{Matrix:function(e){var t=e.size();if(2!==t.length||t[0]!==t[1])throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");for(var u=t[0],l=function(e,t){for(var n=0;n<30;n++)for(var r=0;r<=n;r++){var i=n-r;if(c(e,r,i)<t)return{q:r,j:i}}throw new Error("Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)")}(function(e){for(var t=e.size()[0],r=0,i=0;i<t;i++){for(var a=0,o=0;o<t;o++)a+=n(e.get([i,o]));r=Math.max(a,r)}return r}(e),1e-15),f=l.q,p=l.j,m=s(e,Math.pow(2,-p)),h=a(u),y=a(u),v=1,g=m,b=-1,x=1;x<=f;x++)x>1&&(g=s(g,m),b=-b),h=r(h,s(v=v*(f-x+1)/((2*f-x+1)*x),g)),y=r(y,s(v*b,g));for(var D=s(o(y),h),_=0;_<p;_++)D=s(D,D);return(0,i.isSparseMatrix)(e)?e.createSparseMatrix(D):D}});function c(e,t,n){for(var r=1,i=2;i<=t;i++)r*=i;for(var a=r,o=t+1;o<=2*t;o++)a*=o;var s=a*(2*t+1);return 8*Math.pow(e/Math.pow(2,n),2*t)*r*r/(a*s)}}));t.createExpm=r})),kc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSqrtm=void 0;var n=["typed","abs","add","multiply","sqrt","subtract","inv","size","max","identity"],r=(0,h.factory)("sqrtm",n,(function(e){var t=e.typed,n=e.abs,r=e.add,a=e.multiply,o=e.sqrt,s=e.subtract,c=e.inv,u=e.size,l=e.max,f=e.identity;function p(e){var t,i=0,o=e,d=f(u(e));do{var p=o;if(o=a(.5,r(p,c(d))),d=a(.5,r(d,c(p))),(t=l(n(s(o,p))))>1e-6&&++i>1e3)throw new Error("computing square root of matrix: iterative method could not converge")}while(t>1e-6);return o}return t("sqrtm",{"Array | Matrix":function(e){var t=(0,i.isMatrix)(e)?e.size():(0,m.arraySize)(e);switch(t.length){case 1:if(1===t[0])return o(e);throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");case 2:if(t[0]===t[1])return p(e);throw new RangeError("Matrix must be square (size: "+(0,d.format)(t)+")");default:throw new RangeError("Matrix must be at most two dimensional (size: "+(0,d.format)(t)+")")}}})}));t.createSqrtm=r})),Ic=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDivide=void 0;var n=["typed","matrix","multiply","equalScalar","divideScalar","inv"],r=(0,h.factory)("divide",n,(function(e){var t=e.typed,n=e.matrix,r=e.multiply,i=e.equalScalar,o=e.divideScalar,s=e.inv,c=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),u=(0,pe.createAlgorithm14)({typed:t});return t("divide",(0,a.extend)({"Array | Matrix, Array | Matrix":function(e,t){return r(e,s(t))},"DenseMatrix, any":function(e,t){return u(e,t,o,!1)},"SparseMatrix, any":function(e,t){return c(e,t,o,!1)},"Array, any":function(e,t){return u(n(e),t,o,!1).valueOf()},"any, Array | Matrix":function(e,t){return r(e,s(t))}},o.signatures))}));t.createDivide=r})),Bc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDistance=void 0;var n=["typed","addScalar","subtract","divideScalar","multiplyScalar","unaryMinus","sqrt","abs"],r=(0,h.factory)("distance",n,(function(e){var t=e.typed,n=e.addScalar,r=e.subtract,a=e.multiplyScalar,o=e.divideScalar,s=e.unaryMinus,c=e.sqrt,u=e.abs;return t("distance",{"Array, Array, Array":function(e,t,n){if(2===e.length&&2===t.length&&2===n.length){if(!d(e))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!d(t))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!d(n))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");var i=o(r(n[1],n[0]),r(t[1],t[0])),c=a(a(i,i),t[0]),u=s(a(i,t[0])),l=e[1];return y(e[0],e[1],c,u,l)}throw new TypeError("Invalid Arguments: Try again")},"Object, Object, Object":function(e,t,n){if(2===Object.keys(e).length&&2===Object.keys(t).length&&2===Object.keys(n).length){if(!d(e))throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");if(!d(t))throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers");if(!d(n))throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers");if("pointX"in e&&"pointY"in e&&"lineOnePtX"in t&&"lineOnePtY"in t&&"lineTwoPtX"in n&&"lineTwoPtY"in n){var i=o(r(n.lineTwoPtY,n.lineTwoPtX),r(t.lineOnePtY,t.lineOnePtX)),c=a(a(i,i),t.lineOnePtX),u=s(a(i,t.lineOnePtX)),l=e.pointX;return y(e.pointX,e.pointY,c,u,l)}throw new TypeError("Key names do not match")}throw new TypeError("Invalid Arguments: Try again")},"Array, Array":function(e,t){if(2===e.length&&3===t.length){if(!d(e))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!f(t))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");return y(e[0],e[1],t[0],t[1],t[2])}if(3===e.length&&6===t.length){if(!f(e))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!m(t))throw new TypeError("Array with 6 numbers or BigNumbers expected for second argument");return v(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5])}if(e.length===t.length&&e.length>0){if(!p(e))throw new TypeError("All values of an array should be numbers or BigNumbers");if(!p(t))throw new TypeError("All values of an array should be numbers or BigNumbers");return g(e,t)}throw new TypeError("Invalid Arguments: Try again")},"Object, Object":function(e,t){if(2===Object.keys(e).length&&3===Object.keys(t).length){if(!d(e))throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");if(!f(t))throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers");if("pointX"in e&&"pointY"in e&&"xCoeffLine"in t&&"yCoeffLine"in t&&"constant"in t)return y(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant);throw new TypeError("Key names do not match")}if(3===Object.keys(e).length&&6===Object.keys(t).length){if(!f(e))throw new TypeError("Values of pointX, pointY and pointZ should be numbers or BigNumbers");if(!m(t))throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers or BigNumbers");if("pointX"in e&&"pointY"in e&&"x0"in t&&"y0"in t&&"z0"in t&&"a"in t&&"b"in t&&"c"in t)return v(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c);throw new TypeError("Key names do not match")}if(2===Object.keys(e).length&&2===Object.keys(t).length){if(!d(e))throw new TypeError("Values of pointOneX and pointOneY should be numbers or BigNumbers");if(!d(t))throw new TypeError("Values of pointTwoX and pointTwoY should be numbers or BigNumbers");if("pointOneX"in e&&"pointOneY"in e&&"pointTwoX"in t&&"pointTwoY"in t)return g([e.pointOneX,e.pointOneY],[t.pointTwoX,t.pointTwoY]);throw new TypeError("Key names do not match")}if(3===Object.keys(e).length&&3===Object.keys(t).length){if(!f(e))throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers");if(!f(t))throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers");if("pointOneX"in e&&"pointOneY"in e&&"pointOneZ"in e&&"pointTwoX"in t&&"pointTwoY"in t&&"pointTwoZ"in t)return g([e.pointOneX,e.pointOneY,e.pointOneZ],[t.pointTwoX,t.pointTwoY,t.pointTwoZ]);throw new TypeError("Key names do not match")}throw new TypeError("Invalid Arguments: Try again")},Array:function(e){if(!function(e){if(2===e[0].length&&l(e[0][0])&&l(e[0][1])){if(e.some((function(e){return 2!==e.length||!l(e[0])||!l(e[1])})))return!1}else{if(!(3===e[0].length&&l(e[0][0])&&l(e[0][1])&&l(e[0][2])))return!1;if(e.some((function(e){return 3!==e.length||!l(e[0])||!l(e[1])||!l(e[2])})))return!1}return!0}(e))throw new TypeError("Incorrect array format entered for pairwise distance calculation");return function(e){for(var t=[],n=[],r=[],i=0;i<e.length-1;i++)for(var a=i+1;a<e.length;a++)2===e[0].length?(n=[e[i][0],e[i][1]],r=[e[a][0],e[a][1]]):3===e[0].length&&(n=[e[i][0],e[i][1],e[i][2]],r=[e[a][0],e[a][1],e[a][2]]),t.push(g(n,r));return t}(e)}});function l(e){return"number"==typeof e||(0,i.isBigNumber)(e)}function d(e){return e.constructor!==Array&&(e=h(e)),l(e[0])&&l(e[1])}function f(e){return e.constructor!==Array&&(e=h(e)),l(e[0])&&l(e[1])&&l(e[2])}function p(e){return Array.isArray(e)||(e=h(e)),e.every(l)}function m(e){return e.constructor!==Array&&(e=h(e)),l(e[0])&&l(e[1])&&l(e[2])&&l(e[3])&&l(e[4])&&l(e[5])}function h(e){for(var t=Object.keys(e),n=[],r=0;r<t.length;r++)n.push(e[t[r]]);return n}function y(e,t,r,i,s){var l=u(n(n(a(r,e),a(i,t)),s)),d=c(n(a(r,r),a(i,i)));return o(l,d)}function v(e,t,i,s,u,l,d,f,p){var m=[r(a(r(u,t),p),a(r(l,i),f)),r(a(r(l,i),d),a(r(s,e),p)),r(a(r(s,e),f),a(r(u,t),d))];m=c(n(n(a(m[0],m[0]),a(m[1],m[1])),a(m[2],m[2])));var h=c(n(n(a(d,d),a(f,f)),a(p,p)));return o(m,h)}function g(e,t){for(var i=e.length,o=0,s=0,u=0;u<i;u++)s=r(e[u],t[u]),o=n(a(s,s),o);return c(o)}}));t.createDistance=r})),zc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIntersect=void 0;var n=["typed","config","abs","add","addScalar","matrix","multiply","multiplyScalar","divideScalar","subtract","smaller","equalScalar"],r=(0,h.factory)("intersect",n,(function(e){var t=e.typed,n=e.config,r=e.abs,a=e.add,o=e.addScalar,s=e.matrix,c=e.multiply,u=e.multiplyScalar,l=e.divideScalar,d=e.subtract,f=e.smaller,p=e.equalScalar;return t("intersect",{"Array, Array, Array":function(e,t,n){if(!y(e))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!y(t))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!function(e){return 4===e.length&&m(e[0])&&m(e[1])&&m(e[2])&&m(e[3])}(n))throw new TypeError("Array with 4 numbers expected as third argument");return function(e,t,n,r,i,a,s,c,f,p){var m=u(e,s),h=u(r,s),y=u(t,c),v=u(i,c),g=u(n,f),b=u(a,f),x=l(d(d(d(p,m),y),g),d(d(d(o(o(h,v),b),m),y),g)),D=o(e,u(x,d(r,e))),_=o(t,u(x,d(i,t))),w=o(n,u(x,d(a,n)));return[D,_,w]}(e[0],e[1],e[2],t[0],t[1],t[2],n[0],n[1],n[2],n[3])},"Array, Array, Array, Array":function(e,t,i,s){if(2===e.length){if(!h(e))throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");if(!h(t))throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");if(!h(i))throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");if(!h(s))throw new TypeError("Array with 2 numbers or BigNumbers expected for fourth argument");return function(e,t,i,s){var p=e,m=i,h=d(p,t),y=d(m,s),v=d(u(h[0],y[1]),u(y[0],h[1]));if(f(r(v),n.epsilon))return null;var g=u(y[0],p[1]),b=u(y[1],p[0]),x=u(y[0],m[1]),D=u(y[1],m[0]),_=l(o(d(d(g,b),x),D),v);return a(c(h,_),p)}(e,t,i,s)}if(3===e.length){if(!y(e))throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");if(!y(t))throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");if(!y(i))throw new TypeError("Array with 3 numbers or BigNumbers expected for third argument");if(!y(s))throw new TypeError("Array with 3 numbers or BigNumbers expected for fourth argument");return m=e[0],g=e[1],b=e[2],x=t[0],D=t[1],_=t[2],w=i[0],N=i[1],M=i[2],O=s[0],S=s[1],P=s[2],j=v(m,w,O,w,g,N,S,N,b,M,P,M),A=v(O,w,x,m,S,N,D,g,P,M,_,b),E=v(m,w,x,m,g,N,D,g,b,M,_,b),C=v(O,w,O,w,S,N,S,N,P,M,P,M),T=v(x,m,x,m,D,g,D,g,_,b,_,b),k=l(d(u(j,A),u(E,C)),d(u(T,C),u(A,A))),I=l(o(j,u(k,A)),C),B=o(m,u(k,d(x,m))),z=o(g,u(k,d(D,g))),R=o(b,u(k,d(_,b))),q=o(w,u(I,d(O,w))),F=o(N,u(I,d(S,N))),U=o(M,u(I,d(P,M))),p(B,q)&&p(z,F)&&p(R,U)?[B,z,R]:null}throw new TypeError("Arrays with two or thee dimensional points expected");var m,g,b,x,D,_,w,N,M,O,S,P,j,A,E,C,T,k,I,B,z,R,q,F,U},"Matrix, Matrix, Matrix":function(e,t,n){return s(this(e.valueOf(),t.valueOf(),n.valueOf()))},"Matrix, Matrix, Matrix, Matrix":function(e,t,n,r){return s(this(e.valueOf(),t.valueOf(),n.valueOf(),r.valueOf()))}});function m(e){return"number"==typeof e||(0,i.isBigNumber)(e)}function h(e){return 2===e.length&&m(e[0])&&m(e[1])}function y(e){return 3===e.length&&m(e[0])&&m(e[1])&&m(e[2])}function v(e,t,n,r,i,a,s,c,l,f,p,m){var h=u(d(e,t),d(n,r)),y=u(d(i,a),d(s,c)),v=u(d(l,f),d(p,m));return o(o(h,y),v)}}));t.createIntersect=r})),Rc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSum=void 0;var n=["typed","config","add","numeric"],r=(0,h.factory)("sum",n,(function(e){var t=e.typed,n=e.config,r=e.add,i=e.numeric;return t("sum",{"Array | Matrix":a,"Array | Matrix, number | BigNumber":function(e,t){try{return(0,P.reduce)(e,t,r)}catch(e){throw(0,kt.improveErrorMessage)(e,"sum")}},"...":function(e){if((0,P.containsCollections)(e))throw new TypeError("Scalar values expected in function sum");return a(e)}});function a(e){var t;return(0,P.deepForEach)(e,(function(e){try{t=void 0===t?e:r(t,e)}catch(t){throw(0,kt.improveErrorMessage)(t,"sum",e)}})),void 0===t&&(t=i(0,n.number)),"string"==typeof t&&(t=i(t,n.number)),t}}));t.createSum=r})),qc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMean=void 0;var n=["typed","add","divide"],r=(0,h.factory)("mean",n,(function(e){var t=e.typed,n=e.add,r=e.divide;return t("mean",{"Array | Matrix":i,"Array | Matrix, number | BigNumber":function(e,t){try{var i=(0,P.reduce)(e,t,n),a=Array.isArray(e)?(0,m.arraySize)(e):e.size();return r(i,a[t])}catch(e){throw(0,kt.improveErrorMessage)(e,"mean")}},"...":function(e){if((0,P.containsCollections)(e))throw new TypeError("Scalar values expected in function mean");return i(e)}});function i(e){var t,i=0;if((0,P.deepForEach)(e,(function(e){try{t=void 0===t?e:n(t,e),i++}catch(t){throw(0,kt.improveErrorMessage)(t,"mean",e)}})),0===i)throw new Error("Cannot calculate the mean of an empty array");return r(t,i)}}));t.createMean=r})),Fc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMedian=void 0;var n=["typed","add","divide","compare","partitionSelect"],r=(0,h.factory)("median",n,(function(e){var t=e.typed,n=e.add,r=e.divide,i=e.compare,a=e.partitionSelect;function o(e){try{var t=(e=(0,m.flatten)(e.valueOf())).length;if(0===t)throw new Error("Cannot calculate median of an empty array");if(t%2==0){for(var n=t/2-1,r=a(e,n+1),o=e[n],u=0;u<n;++u)i(e[u],o)>0&&(o=e[u]);return c(o,r)}var l=a(e,(t-1)/2);return s(l)}catch(e){throw(0,kt.improveErrorMessage)(e,"median")}}var s=t({"number | BigNumber | Complex | Unit":function(e){return e}}),c=t({"number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit":function(e,t){return r(n(e,t),2)}});return t("median",{"Array | Matrix":o,"Array | Matrix, number | BigNumber":function(e,t){throw new Error("median(A, dim) is not yet supported")},"...":function(e){if((0,P.containsCollections)(e))throw new TypeError("Scalar values expected in function median");return o(e)}})}));t.createMedian=r})),Uc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMad=void 0;var n=["typed","abs","map","median","subtract"],r=(0,h.factory)("mad",n,(function(e){var t=e.typed,n=e.abs,r=e.map,i=e.median,a=e.subtract;return t("mad",{"Array | Matrix":o,"...":function(e){return o(e)}});function o(e){if(0===(e=(0,m.flatten)(e.valueOf())).length)throw new Error("Cannot calculate median absolute deviation (mad) of an empty array");try{var t=i(e);return i(r(e,(function(e){return n(a(e,t))})))}catch(e){throw e instanceof TypeError&&-1!==e.message.indexOf("median")?new TypeError(e.message.replace("median","mad")):(0,kt.improveErrorMessage)(e,"mad")}}}));t.createMad=r})),Lc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createVariance=void 0;var n=["typed","add","subtract","multiply","divide","apply","isNaN"],r=(0,h.factory)("variance",n,(function(e){var t=e.typed,n=e.add,r=e.subtract,a=e.multiply,o=e.divide,s=e.apply,c=e.isNaN;return t("variance",{"Array | Matrix":function(e){return u(e,"unbiased")},"Array | Matrix, string":u,"Array | Matrix, number | BigNumber":function(e,t){return l(e,t,"unbiased")},"Array | Matrix, number | BigNumber, string":l,"...":function(e){return u(e,"unbiased")}});function u(e,t){var s,u=0;if(0===e.length)throw new SyntaxError("Function variance requires one or more parameters (0 provided)");if((0,P.deepForEach)(e,(function(e){try{s=void 0===s?e:n(s,e),u++}catch(t){throw(0,kt.improveErrorMessage)(t,"variance",e)}})),0===u)throw new Error("Cannot calculate variance of an empty array");var l=o(s,u);if(s=void 0,(0,P.deepForEach)(e,(function(e){var t=r(e,l);s=void 0===s?a(t,t):n(s,a(t,t))})),c(s))return s;switch(t){case"uncorrected":return o(s,u);case"biased":return o(s,u+1);case"unbiased":var d=(0,i.isBigNumber)(s)?s.mul(0):0;return 1===u?d:o(s,u-1);default:throw new Error('Unknown normalization "'+t+'". Choose "unbiased" (default), "uncorrected", or "biased".')}}function l(e,t,n){try{if(0===e.length)throw new SyntaxError("Function variance requires one or more parameters (0 provided)");return s(e,t,(function(e){return u(e,n)}))}catch(e){throw(0,kt.improveErrorMessage)(e,"variance")}}}));t.createVariance=r})),Hc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createQuantileSeq=void 0;var n=["typed","add","multiply","partitionSelect","compare"],r=(0,h.factory)("quantileSeq",n,(function(e){var t=e.typed,n=e.add,r=e.multiply,a=e.partitionSelect,o=e.compare;function s(e,t,s){var u=(0,m.flatten)(e),l=u.length;if(0===l)throw new Error("Cannot calculate quantile of an empty sequence");if((0,i.isNumber)(t)){var d=t*(l-1),f=d%1;if(0===f){var p=s?u[d]:a(u,d);return c(p),p}var h,y,v=Math.floor(d);if(s)h=u[v],y=u[v+1];else{y=a(u,v+1),h=u[v];for(var g=0;g<v;++g)o(u[g],h)>0&&(h=u[g])}return c(h),c(y),n(r(h,1-f),r(y,f))}var b=t.times(l-1);if(b.isInteger()){b=b.toNumber();var x=s?u[b]:a(u,b);return c(x),x}var D,_,w=b.floor(),N=b.minus(w),M=w.toNumber();if(s)D=u[M],_=u[M+1];else{_=a(u,M+1),D=u[M];for(var O=0;O<M;++O)o(u[O],D)>0&&(D=u[O])}c(D),c(_);var S=new N.constructor(1);return n(r(D,S.minus(N)),r(_,N))}var c=t({"number | BigNumber | Unit":function(e){return e}});return function(e,t,n){var r,a,o;if(arguments.length<2||arguments.length>3)throw new SyntaxError("Function quantileSeq requires two or three parameters");if((0,i.isCollection)(e)){if("boolean"==typeof(n=n||!1)){if(a=e.valueOf(),(0,i.isNumber)(t)){if(t<0)throw new Error("N/prob must be non-negative");if(t<=1)return s(a,t,n);if(t>1){if(!(0,u.isInteger)(t))throw new Error("N must be a positive integer");var c=t+1;r=new Array(t);for(var l=0;l<t;)r[l]=s(a,++l/c,n);return r}}if((0,i.isBigNumber)(t)){var d=t.constructor;if(t.isNegative())throw new Error("N/prob must be non-negative");if(o=new d(1),t.lte(o))return new d(s(a,t,n));if(t.gt(o)){if(!t.isInteger())throw new Error("N must be a positive integer");var f=t.toNumber();if(f>4294967295)throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");var p=new d(f+1);r=new Array(f);for(var m=0;m<f;)r[m]=new d(s(a,new d(++m).div(p),n));return r}}if(Array.isArray(t)){r=new Array(t.length);for(var h=0;h<r.length;++h){var y=t[h];if((0,i.isNumber)(y)){if(y<0||y>1)throw new Error("Probability must be between 0 and 1, inclusive")}else{if(!(0,i.isBigNumber)(y))throw new TypeError("Unexpected type of argument in function quantileSeq");if(o=new y.constructor(1),y.isNegative()||y.gt(o))throw new Error("Probability must be between 0 and 1, inclusive")}r[h]=s(a,y,n)}return r}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}throw new TypeError("Unexpected type of argument in function quantileSeq")}}));t.createQuantileSeq=r})),Zc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createStd=void 0;var n=["typed","sqrt","variance"],r=(0,h.factory)("std",n,(function(e){var t=e.typed,n=e.sqrt,r=e.variance;return t("std",{"Array | Matrix":i,"Array | Matrix, string":i,"Array | Matrix, number | BigNumber":i,"Array | Matrix, number | BigNumber, string":i,"...":function(e){return i(e)}});function i(e,t){if(0===e.length)throw new SyntaxError("Function std requires one or more parameters (0 provided)");try{return n(r.apply(null,arguments))}catch(e){throw e instanceof TypeError&&-1!==e.message.indexOf(" variance")?new TypeError(e.message.replace(" variance"," std")):e}}}));t.createStd=r})),Vc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCombinations=void 0;var n=["typed"],r=(0,h.factory)("combinations",n,(function(e){return(0,e.typed)("combinations",{"number, number":T.combinationsNumber,"BigNumber, BigNumber":function(e,t){var n,r,a=e.constructor,o=e.minus(t),s=new a(1);if(!i(e)||!i(t))throw new TypeError("Positive integer value expected in function combinations");if(t.gt(e))throw new TypeError("k must be less than n in function combinations");if(n=s,t.lt(o))for(r=s;r.lte(o);r=r.plus(s))n=n.times(t.plus(r)).dividedBy(r);else for(r=s;r.lte(t);r=r.plus(s))n=n.times(o.plus(r)).dividedBy(r);return n}})}));function i(e){return e.isInteger()&&e.gte(0)}t.createCombinations=r})),Wc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCombinationsWithRep=void 0;var n="combinationsWithRep",r=["typed"],i=(0,h.factory)(n,r,(function(e){return(0,e.typed)(n,{"number, number":function(e,t){if(!(0,u.isInteger)(e)||e<0)throw new TypeError("Positive integer value expected in function combinationsWithRep");if(!(0,u.isInteger)(t)||t<0)throw new TypeError("Positive integer value expected in function combinationsWithRep");if(e<1)throw new TypeError("k must be less than or equal to n + k - 1");return t<e-1?(0,C.product)(e,e+t-1)/(0,C.product)(1,t):(0,C.product)(t+1,e+t-1)/(0,C.product)(1,e-1)},"BigNumber, BigNumber":function(e,t){var n,r,i=new(0,e.constructor)(1),o=e.minus(i);if(!a(e)||!a(t))throw new TypeError("Positive integer value expected in function combinationsWithRep");if(e.lt(i))throw new TypeError("k must be less than or equal to n + k - 1 in function combinationsWithRep");if(n=i,t.lt(o))for(r=i;r.lte(o);r=r.plus(i))n=n.times(t.plus(r)).dividedBy(r);else for(r=i;r.lte(t);r=r.plus(i))n=n.times(o.plus(r)).dividedBy(r);return n}})}));function a(e){return e.isInteger()&&e.gte(0)}t.createCombinationsWithRep=i})),Gc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createGamma=void 0;var n=["typed","config","multiplyScalar","pow","BigNumber","Complex"],r=(0,h.factory)("gamma",n,(function(e){var t=e.typed,n=e.config,r=e.multiplyScalar,i=e.pow,a=e.BigNumber,o=e.Complex;return t("gamma",{number:F.gammaNumber,Complex:function(e){if(0===e.im)return this(e.re);e=new o(e.re-1,e.im);for(var t=new o(F.gammaP[0],0),n=1;n<F.gammaP.length;++n){var a=e.re+n,s=a*a+e.im*e.im;0!==s?(t.re+=F.gammaP[n]*a/s,t.im+=-F.gammaP[n]*e.im/s):t.re=F.gammaP[n]<0?-1/0:1/0}var c=new o(e.re+F.gammaG+.5,e.im),u=Math.sqrt(2*Math.PI);e.re+=.5;var l=i(c,e);0===l.im?l.re*=u:(0===l.re||(l.re*=u),l.im*=u);var d=Math.exp(-c.re);return c.re=d*Math.cos(-c.im),c.im=d*Math.sin(-c.im),r(r(l,c),t)},BigNumber:function(e){if(e.isInteger())return e.isNegative()||e.isZero()?new a(1/0):function e(t){if(t<8)return new a([1,1,2,6,24,120,720,5040][t]);var r=n.precision+(0|Math.log(t.toNumber())),i=a.clone({precision:r});if(t%2==1)return t.times(e(new a(t-1)));var o=t,s=new i(t),c=t.toNumber();for(;o>2;)c+=o-=2,s=s.times(c);return new a(s.toPrecision(a.precision))}(e.minus(1));if(!e.isFinite())return new a(e.isNegative()?NaN:1/0);throw new Error("Integer BigNumber expected")},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createGamma=r})),$c=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFactorial=void 0;var n=["typed","gamma"],r=(0,h.factory)("factorial",n,(function(e){var t=e.typed,n=e.gamma;return t("factorial",{number:function(e){if(e<0)throw new Error("Value must be non-negative");return n(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error("Value must be non-negative");return n(e.plus(1))},"Array | Matrix":function(e){return(0,P.deepMap)(e,this)}})}));t.createFactorial=r})),Qc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createKldivergence=void 0;var n=["typed","matrix","divide","sum","multiply","dotDivide","log","isNumeric"],r=(0,h.factory)("kldivergence",n,(function(e){var t=e.typed,n=e.matrix,r=e.divide,i=e.sum,a=e.multiply,o=e.dotDivide,s=e.log,c=e.isNumeric;return t("kldivergence",{"Array, Array":function(e,t){return u(n(e),n(t))},"Matrix, Array":function(e,t){return u(e,n(t))},"Array, Matrix":function(e,t){return u(n(e),t)},"Matrix, Matrix":function(e,t){return u(e,t)}});function u(e,t){var n=t.size().length,u=e.size().length;if(n>1)throw new Error("first object must be one dimensional");if(u>1)throw new Error("second object must be one dimensional");if(n!==u)throw new Error("Length of two vectors must be equal");if(0===i(e))throw new Error("Sum of elements in first object must be non zero");if(0===i(t))throw new Error("Sum of elements in second object must be non zero");var l=r(e,i(e)),d=r(t,i(t)),f=i(a(l,s(o(l,d))));return c(f)?f:Number.NaN}}));t.createKldivergence=r})),Xc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMultinomial=void 0;var n=["typed","add","divide","multiply","factorial","isInteger","isPositive"],r=(0,h.factory)("multinomial",n,(function(e){var t=e.typed,n=e.add,r=e.divide,i=e.multiply,a=e.factorial,o=e.isInteger,s=e.isPositive;return t("multinomial",{"Array | Matrix":function(e){var t=0,c=1;return(0,P.deepForEach)(e,(function(e){if(!o(e)||!s(e))throw new TypeError("Positive integer value expected in function multinomial");t=n(t,e),c=i(c,a(e))})),r(a(t),c)}})}));t.createMultinomial=r})),Yc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createPermutations=void 0;var n=["typed","factorial"],r=(0,h.factory)("permutations",n,(function(e){return(0,e.typed)("permutations",{"number | BigNumber":e.factorial,"number, number":function(e,t){if(!(0,u.isInteger)(e)||e<0)throw new TypeError("Positive integer value expected in function permutations");if(!(0,u.isInteger)(t)||t<0)throw new TypeError("Positive integer value expected in function permutations");if(t>e)throw new TypeError("second argument k must be less than or equal to first argument n");return(0,C.product)(e-t+1,e)},"BigNumber, BigNumber":function(e,t){var n,r;if(!i(e)||!i(t))throw new TypeError("Positive integer value expected in function permutations");if(t.gt(e))throw new TypeError("second argument k must be less than or equal to first argument n");for(n=e.mul(0).add(1),r=e.minus(t).plus(1);r.lte(e);r=r.plus(1))n=n.times(r);return n}})}));function i(e){return e.isInteger()&&e.gte(0)}t.createPermutations=r})),Jc=t((function(t){var n=[],r=void 0===e?window:e,i=Math.pow(256,6),a=Math.pow(2,52),o=2*a,s=Math.random;function c(e){var t,n=e.length,r=this,i=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);i<256;)o[i]=i++;for(i=0;i<256;i++)o[i]=o[a=255&a+e[i%n]+(t=o[i])],o[a]=t;(r.g=function(e){for(var t,n=0,i=r.i,a=r.j,o=r.S;e--;)t=o[i=255&i+1],n=256*n+o[255&(o[i]=o[a=255&a+t])+(o[a]=t)];return r.i=i,r.j=a,n})(256)}function u(e,t){var n,r=[],i=(typeof e)[0];if(t&&"o"==i)for(n in e)try{r.push(u(e[n],t-1))}catch(e){}return r.length?r:"s"==i?e:e+"\0"}function l(e,t){for(var n,r=e+"",i=0;i<r.length;)t[255&i]=255&(n^=19*t[255&i])+r.charCodeAt(i++);return f(t)}function d(e){try{return r.crypto.getRandomValues(e=new Uint8Array(256)),f(e)}catch(e){return[+new Date,r,r.navigator&&r.navigator.plugins,r.screen,f(n)]}}function f(e){return String.fromCharCode.apply(0,e)}t.exports=function(e,r){if(r&&!0===r.global)return r.global=!1,Math.random=t.exports(e,r),r.global=!0,Math.random;var s=r&&r.entropy||!1,p=[],m=(l(u(s?[e,f(n)]:0 in arguments?e:d(),3),p),new c(p));return l(f(m.S),n),function(){for(var e=m.g(6),t=i,n=0;e<a;)e=256*(e+n),t*=256,n=m.g(1);for(;e>=o;)e/=2,t/=2,n>>>=1;return(e+n)/t}},t.exports.resetGlobal=function(){Math.random=s},l(Math.random(),n)})),Kc=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRng=function(e){var t;function n(e){t=null===e?i:(0,r.default)(String(e))}function a(){return t()}return n(e),a};var n,r=(n=Jc)&&n.__esModule?n:{default:n};var i=(0,r.default)()})),eu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createPickRandom=void 0;var n=["typed","config","?on"],r=(0,h.factory)("pickRandom",n,(function(e){var t=e.typed,n=e.config,r=e.on,a=(0,Kc.createRng)(n.randomSeed);return r&&r("config",(function(e,t){e.randomSeed!==t.randomSeed&&(a=(0,Kc.createRng)(e.randomSeed))})),t({"Array | Matrix":function(e){return o(e)},"Array | Matrix, number":function(e,t){return o(e,t,void 0)},"Array | Matrix, Array":function(e,t){return o(e,void 0,t)},"Array | Matrix, Array | Matrix, number":function(e,t,n){return o(e,n,t)},"Array | Matrix, number, Array | Matrix":function(e,t,n){return o(e,t,n)}});function o(e,t,n){var r=void 0===t;r&&(t=1),e=(0,m.flatten)(e.valueOf()).valueOf(),n&&(n=n.valueOf());var o=0;if(void 0!==n){if(n.length!==e.length)throw new Error("Weights must have the same length as possibles");for(var s=0,c=n.length;s<c;s++){if(!(0,i.isNumber)(n[s])||n[s]<0)throw new Error("Weights must be an array of positive numbers");o+=n[s]}}var u=e.length;if(0===u)return[];if(t>=u)return t>1?e:e[0];for(var l,d=[];d.length<t;){if(void 0===n)l=e[Math.floor(a()*u)];else for(var f=a()*o,p=0,h=e.length;p<h;p++)if((f-=n[p])<0){l=e[p];break}-1===d.indexOf(l)&&d.push(l)}return r?d[0]:d}}));t.createPickRandom=r})),tu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomMatrix=function e(t,n){var r=[];if((t=t.slice(0)).length>1)for(var i=0,a=t.shift();i<a;i++)r.push(e(t,n));else for(var o=0,s=t.shift();o<s;o++)r.push(n());return r}})),nu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRandomNumber=t.createRandom=void 0;var n="random",r=["typed","config","?on"],a=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,a=e.on,o=(0,Kc.createRng)(r.randomSeed);return a&&a("config",(function(e,t){e.randomSeed!==t.randomSeed&&(o=(0,Kc.createRng)(e.randomSeed))})),t(n,{"":function(){return c(0,1)},number:function(e){return c(0,e)},"number, number":function(e,t){return c(e,t)},"Array | Matrix":function(e){return s(e,0,1)},"Array | Matrix, number":function(e,t){return s(e,0,t)},"Array | Matrix, number, number":function(e,t,n){return s(e,t,n)}});function s(e,t,n){var r=(0,tu.randomMatrix)(e.valueOf(),(function(){return c(t,n)}));return(0,i.isMatrix)(e)?e.create(r):r}function c(e,t){return e+o()*(t-e)}}));t.createRandom=a;var o=(0,h.factory)(n,["typed","config","?on"],(function(e){var t=e.typed,r=e.config,i=e.on,a=(e.matrix,(0,Kc.createRng)(r.randomSeed));return i&&i("config",(function(e,t){e.randomSeed!==t.randomSeed&&(a=(0,Kc.createRng)(e.randomSeed))})),t(n,{"":function(){return o(0,1)},number:function(e){return o(0,e)},"number, number":function(e,t){return o(e,t)}});function o(e,t){return e+a()*(t-e)}}));t.createRandomNumber=o})),ru=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRandomInt=void 0;var n=["typed","config","?on"],r=(0,h.factory)("randomInt",n,(function(e){var t=e.typed,n=e.config,r=e.on,a=(0,Kc.createRng)(n.randomSeed);return r&&r("config",(function(e,t){e.randomSeed!==t.randomSeed&&(a=(0,Kc.createRng)(e.randomSeed))})),t("randomInt",{"":function(){return s(0,1)},number:function(e){return s(0,e)},"number, number":function(e,t){return s(e,t)},"Array | Matrix":function(e){return o(e,0,1)},"Array | Matrix, number":function(e,t){return o(e,0,t)},"Array | Matrix, number, number":function(e,t,n){return o(e,t,n)}});function o(e,t,n){var r=(0,tu.randomMatrix)(e.valueOf(),(function(){return s(t,n)}));return(0,i.isMatrix)(e)?e.create(r):r}function s(e,t){return Math.floor(e+a()*(t-e))}}));t.createRandomInt=r})),iu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createStirlingS2=void 0;var n=["typed","addScalar","subtract","multiplyScalar","divideScalar","pow","factorial","combinations","isNegative","isInteger","larger"],r=(0,h.factory)("stirlingS2",n,(function(e){var t=e.typed,n=e.addScalar,r=e.subtract,i=e.multiplyScalar,a=e.divideScalar,o=e.pow,s=e.factorial,c=e.combinations,u=e.isNegative,l=e.isInteger,d=e.larger;return t("stirlingS2",{"number | BigNumber, number | BigNumber":function(e,t){if(!l(e)||u(e)||!l(t)||u(t))throw new TypeError("Non-negative integer value expected in function stirlingS2");if(d(t,e))throw new TypeError("k must be less than or equal to n in function stirlingS2");for(var f=s(t),p=0,m=0;m<=t;m++){var h=o(-1,r(t,m)),y=c(t,m),v=o(m,e);p=n(p,i(i(y,v),h))}return a(p,f)}})}));t.createStirlingS2=r})),au=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createBellNumbers=void 0;var n=["typed","addScalar","isNegative","isInteger","stirlingS2"],r=(0,h.factory)("bellNumbers",n,(function(e){var t=e.typed,n=e.addScalar,r=e.isNegative,i=e.isInteger,a=e.stirlingS2;return t("bellNumbers",{"number | BigNumber":function(e){if(!i(e)||r(e))throw new TypeError("Non-negative integer value expected in function bellNumbers");for(var t=0,o=0;o<=e;o++)t=n(t,a(e,o));return t}})}));t.createBellNumbers=r})),ou=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createCatalan=void 0;var n=["typed","addScalar","divideScalar","multiplyScalar","combinations","isNegative","isInteger"],r=(0,h.factory)("catalan",n,(function(e){var t=e.typed,n=e.addScalar,r=e.divideScalar,i=e.multiplyScalar,a=e.combinations,o=e.isNegative,s=e.isInteger;return t("catalan",{"number | BigNumber":function(e){if(!s(e)||o(e))throw new TypeError("Non-negative integer value expected in function catalan");return r(a(i(e,2),e),n(e,1))}})}));t.createCatalan=r})),su=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createComposition=void 0;var n=["typed","addScalar","combinations","isNegative","isPositive","isInteger","larger"],r=(0,h.factory)("composition",n,(function(e){var t=e.typed,n=e.addScalar,r=e.combinations,i=e.isPositive,a=(e.isNegative,e.isInteger),o=e.larger;return t("composition",{"number | BigNumber, number | BigNumber":function(e,t){if(!(a(e)&&i(e)&&a(t)&&i(t)))throw new TypeError("Positive integer value expected in function composition");if(o(t,e))throw new TypeError("k must be less than or equal to n in function composition");return r(n(e,-1),n(t,-1))}})}));t.createComposition=r})),cu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUtil=void 0;var n=["FunctionNode","OperatorNode","SymbolNode"],r=(0,h.factory)("simplifyUtil",n,(function(e){var t=e.FunctionNode,n=e.OperatorNode,r=e.SymbolNode,o={add:!0,multiply:!0},s={add:!0,multiply:!0};function c(e,t){if(!(0,i.isOperatorNode)(e))return!1;var n=e.fn.toString();return t&&(0,a.hasOwnProperty)(t,n)&&(0,a.hasOwnProperty)(t[n],"associative")?t[n].associative:s[n]||!1}function u(e){var t,n=[];return c(e)?(t=e.op,function e(r){for(var a=0;a<r.args.length;a++){var o=r.args[a];(0,i.isOperatorNode)(o)&&t===o.op?e(o):n.push(o)}}(e),n):e.args}function l(e){return(0,i.isOperatorNode)(e)?function(t){try{return new n(e.op,e.fn,t,e.implicit)}catch(e){return console.error(e),[]}}:function(n){return new t(new r(e.name),n)}}return{createMakeNodeFunction:l,isCommutative:function(e,t){if(!(0,i.isOperatorNode)(e))return!0;var n=e.fn.toString();return t&&(0,a.hasOwnProperty)(t,n)&&(0,a.hasOwnProperty)(t[n],"commutative")?t[n].commutative:o[n]||!1},isAssociative:c,flatten:function e(t){if(!t.args||0===t.args.length)return t;t.args=u(t);for(var n=0;n<t.args.length;n++)e(t.args[n])},allChildren:u,unflattenr:function e(t){if(t.args&&0!==t.args.length){for(var n=l(t),r=t.args.length,i=0;i<r;i++)e(t.args[i]);if(r>2&&c(t)){for(var a=t.args.pop();t.args.length>0;)a=n([t.args.pop(),a]);t.args=a.args}}},unflattenl:function e(t){if(t.args&&0!==t.args.length){for(var n=l(t),r=t.args.length,i=0;i<r;i++)e(t.args[i]);if(r>2&&c(t)){for(var a=t.args.shift();t.args.length>0;)a=n([a,t.args.shift()]);t.args=a.args}}}}}));t.createUtil=r})),uu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSimplifyCore=void 0;var n=["equal","isZero","add","subtract","multiply","divide","pow","ConstantNode","OperatorNode","FunctionNode","ParenthesisNode"],r=(0,h.factory)("simplifyCore",n,(function(e){var t=e.equal,n=e.isZero,r=e.add,a=e.subtract,o=e.multiply,s=e.divide,c=e.pow,u=e.ConstantNode,l=e.OperatorNode,d=e.FunctionNode,f=e.ParenthesisNode,p=new u(0),m=new u(1);return function e(h){if((0,i.isOperatorNode)(h)&&h.isUnary()){var y=e(h.args[0]);if("+"===h.op)return y;if("-"===h.op){if((0,i.isOperatorNode)(y)){if(y.isUnary()&&"-"===y.op)return y.args[0];if(y.isBinary()&&"subtract"===y.fn)return new l("-","subtract",[y.args[1],y.args[0]])}return new l(h.op,h.fn,[y])}}else if((0,i.isOperatorNode)(h)&&h.isBinary()){var v=e(h.args[0]),g=e(h.args[1]);if("+"===h.op){if((0,i.isConstantNode)(v)){if(n(v.value))return g;if((0,i.isConstantNode)(g))return new u(r(v.value,g.value))}return(0,i.isConstantNode)(g)&&n(g.value)?v:(0,i.isOperatorNode)(g)&&g.isUnary()&&"-"===g.op?new l("-","subtract",[v,g.args[0]]):new l(h.op,h.fn,g?[v,g]:[v])}if("-"===h.op){if((0,i.isConstantNode)(v)&&g){if((0,i.isConstantNode)(g))return new u(a(v.value,g.value));if(n(v.value))return new l("-","unaryMinus",[g])}if("subtract"===h.fn)return(0,i.isConstantNode)(g)&&n(g.value)?v:(0,i.isOperatorNode)(g)&&g.isUnary()&&"-"===g.op?e(new l("+","add",[v,g.args[0]])):new l(h.op,h.fn,[v,g])}else{if("*"===h.op){if((0,i.isConstantNode)(v)){if(n(v.value))return p;if(t(v.value,1))return g;if((0,i.isConstantNode)(g))return new u(o(v.value,g.value))}if((0,i.isConstantNode)(g)){if(n(g.value))return p;if(t(g.value,1))return v;if((0,i.isOperatorNode)(v)&&v.isBinary()&&v.op===h.op){var b=v.args[0];if((0,i.isConstantNode)(b)){var x=new u(o(b.value,g.value));return new l(h.op,h.fn,[x,v.args[1]],h.implicit)}}return new l(h.op,h.fn,[g,v],h.implicit)}return new l(h.op,h.fn,[v,g],h.implicit)}if("/"===h.op){if((0,i.isConstantNode)(v)){if(n(v.value))return p;if((0,i.isConstantNode)(g)&&(t(g.value,1)||t(g.value,2)||t(g.value,4)))return new u(s(v.value,g.value))}return new l(h.op,h.fn,[v,g])}if("^"===h.op){if((0,i.isConstantNode)(g)){if(n(g.value))return m;if(t(g.value,1))return v;if((0,i.isConstantNode)(v))return new u(c(v.value,g.value));if((0,i.isOperatorNode)(v)&&v.isBinary()&&"^"===v.op){var D=v.args[1];if((0,i.isConstantNode)(D))return new l(h.op,h.fn,[v.args[0],new u(o(D.value,g.value))])}}return new l(h.op,h.fn,[v,g])}}}else{if((0,i.isParenthesisNode)(h)){var _=e(h.content);return(0,i.isParenthesisNode)(_)||(0,i.isSymbolNode)(_)||(0,i.isConstantNode)(_)?_:new f(_)}if((0,i.isFunctionNode)(h)){var w=h.args.map(e).map((function(e){return(0,i.isParenthesisNode)(e)?e.content:e}));return new d(e(h.fn),w)}}return h}}));t.createSimplifyCore=r})),lu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSimplifyConstant=void 0;var n=["typed","config","mathWithTransform","?fraction","?bignumber","ConstantNode","OperatorNode","FunctionNode","SymbolNode"],r=(0,h.factory)("simplifyConstant",n,(function(e){var t=e.typed,n=e.config,r=e.mathWithTransform,a=e.fraction,o=e.bignumber,s=e.ConstantNode,c=e.OperatorNode,u=e.FunctionNode,l=e.SymbolNode,d=(0,cu.createUtil)({FunctionNode:u,OperatorNode:c,SymbolNode:l}),f=d.isCommutative,p=d.isAssociative,m=d.allChildren,h=d.createMakeNodeFunction;function y(e,t,n){try{return b(r[e].apply(null,t),n)}catch(a){return t=t.map((function(e){return(0,i.isFraction)(e)?e.valueOf():e})),b(r[e].apply(null,t),n)}}var v=t({Fraction:function(e){var t,n=e.s*e.n;t=n<0?new c("-","unaryMinus",[new s(-n)]):new s(n);if(1===e.d)return t;return new c("/","divide",[t,new s(e.d)])},number:function(e){return e<0?x(new s(-e)):new s(e)},BigNumber:function(e){return e<0?x(new s(-e)):new s(e)},Complex:function(e){throw new Error("Cannot convert Complex number to Node")}});function g(e,t){if(t&&!1!==t.exactFractions&&isFinite(e)&&a){var n=a(e);if(n.valueOf()===e)return n}return e}var b=t({"string, Object":function(e,t){return"BigNumber"===n.number?(void 0===o&&(0,vt.noBignumber)(),o(e)):"Fraction"===n.number?(void 0===a&&(0,vt.noFraction)(),a(e)):g(parseFloat(e),t)},"Fraction, Object":function(e,t){return e},"BigNumber, Object":function(e,t){return e},"number, Object":function(e,t){return g(e,t)},"Complex, Object":function(e,t){return 0!==e.im?e:g(e.re,t)}});function x(e){return new c("-","unaryMinus",[e])}function D(e,t,n,r){return t.reduce((function(t,a){if((0,i.isNode)(t)||(0,i.isNode)(a))(0,i.isNode)(t)?(0,i.isNode)(a)||(a=v(a)):t=v(t);else{try{return y(e,[t,a],r)}catch(e){}t=v(t),a=v(a)}return n([t,a])}))}return function(e,t){var n=function e(t,n){switch(t.type){case"SymbolNode":return t;case"ConstantNode":return"number"!=typeof t.value&&isNaN(t.value)?t:b(t.value,n);case"FunctionNode":if(r[t.name]&&r[t.name].rawArgs)return t;if(-1===["add","multiply"].indexOf(t.name)){var a=t.args.map((function(t){return e(t,n)}));if(!a.some(i.isNode))try{return y(t.name,a,n)}catch(e){}return a=a.map((function(e){return(0,i.isNode)(e)?e:v(e)})),new u(t.name,a)}case"OperatorNode":var o,s,c=t.fn.toString(),l=h(t);if((0,i.isOperatorNode)(t)&&t.isUnary())o=[e(t.args[0],n)],s=(0,i.isNode)(o[0])?l(o):y(c,o,n);else if(p(t))if(o=(o=m(t)).map((function(t){return e(t,n)})),f(c)){for(var d=[],g=[],x=0;x<o.length;x++)(0,i.isNode)(o[x])?g.push(o[x]):d.push(o[x]);d.length>1?(s=D(c,d,l,n),g.unshift(s),s=D(c,g,l,n)):s=D(c,o,l,n)}else s=D(c,o,l,n);else o=t.args.map((function(t){return e(t,n)})),s=D(c,o,l,n);return s;case"ParenthesisNode":return e(t.content,n);case"AccessorNode":case"ArrayNode":case"AssignmentNode":case"BlockNode":case"FunctionAssignmentNode":case"IndexNode":case"ObjectNode":case"RangeNode":case"ConditionalNode":default:throw new Error("Unimplemented node type in simplifyConstant: ".concat(t.type))}}(e,t);return(0,i.isNode)(n)?n:v(n)}}));t.createSimplifyConstant=r})),du=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createResolve=void 0;var n=["parse","FunctionNode","OperatorNode","ParenthesisNode"],r=(0,h.factory)("resolve",n,(function(e){var t=e.parse,n=e.FunctionNode,r=e.OperatorNode,a=e.ParenthesisNode;return function e(o,s){if(!s)return o;if((0,i.isSymbolNode)(o)){var c=s[o.name];if((0,i.isNode)(c))return e(c,s);if("number"==typeof c)return t(String(c))}else{if((0,i.isOperatorNode)(o)){var u=o.args.map((function(t){return e(t,s)}));return new r(o.op,o.fn,u,o.implicit)}if((0,i.isParenthesisNode)(o))return new a(e(o.content,s));if((0,i.isFunctionNode)(o)){var l=o.args.map((function(t){return e(t,s)}));return new n(o.name,l)}}return o}}));t.createResolve=r})),fu=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.createSimplify=void 0;var r=["config","typed","parse","add","subtract","multiply","divide","pow","isZero","equal","?fraction","?bignumber","mathWithTransform","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],o=(0,h.factory)("simplify",r,(function(e){var t=e.config,r=e.typed,o=e.parse,s=e.add,c=e.subtract,u=e.multiply,l=e.divide,d=e.pow,f=e.isZero,p=e.equal,m=e.fraction,h=e.bignumber,y=e.mathWithTransform,v=e.ConstantNode,g=e.FunctionNode,b=e.OperatorNode,x=e.ParenthesisNode,D=e.SymbolNode,_=(0,lu.createSimplifyConstant)({typed:r,config:t,mathWithTransform:y,fraction:m,bignumber:h,ConstantNode:v,OperatorNode:b,FunctionNode:g,SymbolNode:D}),w=(0,uu.createSimplifyCore)({equal:p,isZero:f,add:s,subtract:c,multiply:u,divide:l,pow:d,ConstantNode:v,OperatorNode:b,FunctionNode:g,ParenthesisNode:x}),N=(0,du.createResolve)({parse:o,FunctionNode:g,OperatorNode:b,ParenthesisNode:x}),M=(0,cu.createUtil)({FunctionNode:g,OperatorNode:b,SymbolNode:D}),O=M.isCommutative,S=M.isAssociative,P=M.flatten,j=M.unflattenr,A=M.unflattenl,E=M.createMakeNodeFunction,C=r("simplify",{string:function(e){return this(o(e),this.rules,{},{})},"string, Object":function(e,t){return this(o(e),this.rules,t,{})},"string, Object, Object":function(e,t,n){return this(o(e),this.rules,t,n)},"string, Array":function(e,t){return this(o(e),t,{},{})},"string, Array, Object":function(e,t,n){return this(o(e),t,n,{})},"string, Array, Object, Object":function(e,t,n,r){return this(o(e),t,n,r)},"Node, Object":function(e,t){return this(e,this.rules,t,{})},"Node, Object, Object":function(e,t,n){return this(e,this.rules,t,n)},Node:function(e){return this(e,this.rules,{},{})},"Node, Array":function(e,t){return this(e,t,{},{})},"Node, Array, Object":function(e,t,n){return this(e,t,n,{})},"Node, Array, Object, Object":function(e,t,r,i){t=function(e){for(var t=[],r=0;r<e.length;r++){var i=e[r],a=void 0,s=n(i);switch(s){case"string":var c=i.split("->");if(2!==c.length)throw SyntaxError("Could not parse rule: "+i);i={l:c[0],r:c[1]};case"object":if(a={l:T(o(i.l)),r:T(o(i.r))},i.context&&(a.evaluate=i.context),i.evaluate&&(a.evaluate=o(i.evaluate)),S(a.l)){var u=E(a.l),l=new D("_p"+I++);a.expanded={},a.expanded.l=u([a.l.clone(),l]),P(a.expanded.l),j(a.expanded.l),a.expanded.r=u([a.r,l])}break;case"function":a=i;break;default:throw TypeError("Unsupported type of rule: "+s)}t.push(a)}return t}(t);for(var a=N(e,r),s={},c=(a=T(a)).toString({parenthesis:"all"});!s[c];){s[c]=!0,I=0;for(var u=0;u<t.length;u++)"function"==typeof t[u]?a=t[u](a,i):(P(a),a=B(a,t[u])),A(a);c=a.toString({parenthesis:"all"})}return a}});function T(e){return e.transform((function(e,t,n){return(0,i.isParenthesisNode)(e)?T(e.content):e}))}C.simplifyCore=w,C.resolve=N;var k={true:!0,false:!0,e:!0,i:!0,Infinity:!0,LN2:!0,LN10:!0,LOG2E:!0,LOG10E:!0,NaN:!0,phi:!0,pi:!0,SQRT1_2:!0,SQRT2:!0,tau:!0};C.rules=[w,{l:"log(e)",r:"1"},{l:"n-n1",r:"n+-n1"},{l:"-(c*v)",r:"(-c) * v"},{l:"-v",r:"(-1) * v"},{l:"n/n1^n2",r:"n*n1^-n2"},{l:"n/n1",r:"n*n1^-1"},{l:"(n ^ n1) ^ n2",r:"n ^ (n1 * n2)"},{l:"n*n",r:"n^2"},{l:"n * n^n1",r:"n^(n1+1)"},{l:"n^n1 * n^n2",r:"n^(n1+n2)"},{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},{l:"n1*n2 + n2",r:"(n1+1)*n2"},{l:"n1*n3 + n2*n3",r:"(n1+n2)*n3"},{l:"n1 + -1 * (n2 + n3)",r:"n1 + -1 * n2 + -1 * n3"},_,{l:"(-n)*n1",r:"-(n*n1)"},{l:"c+v",r:"v+c",context:{add:{commutative:!1}}},{l:"v*c",r:"c*v",context:{multiply:{commutative:!1}}},{l:"n+-n1",r:"n-n1"},{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"n-(n1+n2)",r:"n-n1-n2"},{l:"1*n",r:"n"},{l:"n1/(n2/n3)",r:"(n1*n3)/n2"}];var I=0;var B=r("applyRule",{"Node, Object":function(e,t){var n=e;if(n instanceof b||n instanceof g){if(n.args)for(var r=0;r<n.args.length;r++)n.args[r]=B(n.args[r],t)}else n instanceof x&&n.content&&(n.content=B(n.content,t));var i=t.r,o=q(t.l,n)[0];if(!o&&t.expanded&&(i=t.expanded.r,o=q(t.expanded.l,n)[0]),o){var s=n.implicit;n=i.clone(),s&&"implicit"in i&&(n.implicit=!0),n=n.transform((function(e){return e.isSymbolNode&&(0,a.hasOwnProperty)(o.placeholders,e.name)?o.placeholders[e.name].clone():e}))}return n}});function z(e,t){var n={placeholders:{}};if(!e.placeholders&&!t.placeholders)return n;if(!e.placeholders)return t;if(!t.placeholders)return e;for(var r in e.placeholders)if((0,a.hasOwnProperty)(e.placeholders,r)&&(n.placeholders[r]=e.placeholders[r],(0,a.hasOwnProperty)(t.placeholders,r)&&!F(e.placeholders[r],t.placeholders[r])))return null;for(var i in t.placeholders)(0,a.hasOwnProperty)(t.placeholders,i)&&(n.placeholders[i]=t.placeholders[i]);return n}function R(e,t){var n,r=[];if(0===e.length||0===t.length)return r;for(var i=0;i<e.length;i++)for(var a=0;a<t.length;a++)(n=z(e[i],t[a]))&&r.push(n);return r}function q(e,t,n){var r=[{placeholders:{}}];if(e instanceof b&&t instanceof b||e instanceof g&&t instanceof g){if(e instanceof b){if(e.op!==t.op||e.fn!==t.fn)return[]}else if(e instanceof g&&e.name!==t.name)return[];if((1!==t.args.length||1!==e.args.length)&&S(t)&&!n){if(t.args.length>=2&&2===e.args.length){for(var a=function(e,t){var n,r,i=[],a=E(e);if(O(e,t))for(var o=0;o<e.args.length;o++)(r=e.args.slice(0)).splice(o,1),n=1===r.length?r[0]:a(r),i.push(a([e.args[o],n]));else n=1===(r=e.args.slice(1)).length?r[0]:a(r),i.push(a([e.args[0],n]));return i}(t,e.context),o=[],s=0;s<a.length;s++){var c=q(e,a[s],!0);o=o.concat(c)}return o}if(e.args.length>2)throw Error("Unexpected non-binary associative function: "+e.toString());return[]}for(var u=[],l=0;l<e.args.length;l++){var d=q(e.args[l],t.args[l]);if(0===d.length)return[];u.push(d)}r=function(e){if(0===e.length)return e;for(var t=e.reduce(R),n=[],r={},i=0;i<t.length;i++){var a=JSON.stringify(t[i]);r[a]||(r[a]=!0,n.push(t[i]))}return n}(u)}else if(e instanceof D){if(0===e.name.length)throw new Error("Symbol in rule has 0 length...!?");if(k[e.name]){if(e.name!==t.name)return[]}else if("n"===e.name[0]||"_p"===e.name.substring(0,2))r[0].placeholders[e.name]=t;else if("v"===e.name[0]){if((0,i.isConstantNode)(t))return[];r[0].placeholders[e.name]=t}else{if("c"!==e.name[0])throw new Error("Invalid symbol in rule: "+e.name);if(!(t instanceof v))return[];r[0].placeholders[e.name]=t}}else{if(!(e instanceof v))return[];if(!p(e.value,t.value))return[]}return r}function F(e,t){if(e instanceof v&&t instanceof v){if(!p(e.value,t.value))return!1}else if(e instanceof D&&t instanceof D){if(e.name!==t.name)return!1}else{if(!(e instanceof b&&t instanceof b||e instanceof g&&t instanceof g))return!1;if(e instanceof b){if(e.op!==t.op||e.fn!==t.fn)return!1}else if(e instanceof g&&e.name!==t.name)return!1;if(e.args.length!==t.args.length)return!1;for(var n=0;n<e.args.length;n++)if(!F(e.args[n],t.args[n]))return!1}return!0}return C}));t.createSimplify=o})),pu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDerivative=void 0;var n=["typed","config","parse","simplify","equal","isZero","numeric","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],r=(0,h.factory)("derivative",n,(function(e){var t=e.typed,n=e.config,r=e.parse,a=e.simplify,o=e.equal,s=e.isZero,c=e.numeric,u=e.ConstantNode,l=e.FunctionNode,d=e.OperatorNode,f=e.ParenthesisNode,p=e.SymbolNode,m=t("derivative",{"Node, SymbolNode, Object":function(e,t,n){var r={};y(r,e,t.name);var i=v(e,r);return n.simplify?a(i):i},"Node, SymbolNode":function(e,t){return this(e,t,{simplify:!0})},"string, SymbolNode":function(e,t){return this(r(e),t)},"string, SymbolNode, Object":function(e,t,n){return this(r(e),t,n)},"string, string":function(e,t){return this(r(e),r(t))},"string, string, Object":function(e,t,n){return this(r(e),r(t),n)},"Node, string":function(e,t){return this(e,r(t))},"Node, string, Object":function(e,t,n){return this(e,r(t),n)}});m._simplify=!0,m.toTex=function(e){return h.apply(null,e.args)};var h=t("_derivTex",{"Node, SymbolNode":function(e,t){return(0,i.isConstantNode)(e)&&"string"===(0,i.typeOf)(e.value)?h(r(e.value).toString(),t.toString(),1):h(e.toString(),t.toString(),1)},"Node, ConstantNode":function(e,t){if("string"===(0,i.typeOf)(t.value))return h(e,r(t.value));throw new Error("The second parameter to 'derivative' is a non-string constant")},"Node, SymbolNode, ConstantNode":function(e,t,n){return h(e.toString(),t.name,n.value)},"string, string, number":function(e,t,n){return(1===n?"{d\\over d"+t+"}":"{d^{"+n+"}\\over d"+t+"^{"+n+"}}")+"\\left[".concat(e,"\\right]")}}),y=t("constTag",{"Object, ConstantNode, string":function(e,t){return e[t]=!0,!0},"Object, SymbolNode, string":function(e,t,n){return t.name!==n&&(e[t]=!0,!0)},"Object, ParenthesisNode, string":function(e,t,n){return y(e,t.content,n)},"Object, FunctionAssignmentNode, string":function(e,t,n){return-1===t.params.indexOf(n)?(e[t]=!0,!0):y(e,t.expr,n)},"Object, FunctionNode | OperatorNode, string":function(e,t,n){if(t.args.length>0){for(var r=y(e,t.args[0],n),i=1;i<t.args.length;++i)r=y(e,t.args[i],n)&&r;if(r)return e[t]=!0,!0}return!1}}),v=t("_derivative",{"ConstantNode, Object":function(e){return g(0)},"SymbolNode, Object":function(e,t){return void 0!==t[e]?g(0):g(1)},"ParenthesisNode, Object":function(e,t){return new f(v(e.content,t))},"FunctionAssignmentNode, Object":function(e,t){return void 0!==t[e]?g(0):v(e.expr,t)},"FunctionNode, Object":function(e,t){if(1!==e.args.length&&function(e){if(("log"===e.name||"nthRoot"===e.name||"pow"===e.name)&&2===e.args.length)return;for(var t=0;t<e.args.length;++t)e.args[t]=g(0);throw e.compile().evaluate(),new Error("Expected TypeError, but none found")}(e),void 0!==t[e])return g(0);var n,r,i,a,o=e.args[0],s=!1,c=!1;switch(e.name){case"cbrt":s=!0,r=new d("*","multiply",[g(3),new d("^","pow",[o,new d("/","divide",[g(2),g(3)])])]);break;case"sqrt":case"nthRoot":if(1===e.args.length)s=!0,r=new d("*","multiply",[g(2),new l("sqrt",[o])]);else if(2===e.args.length)return t[n=new d("/","divide",[g(1),e.args[1]])]=t[e.args[1]],v(new d("^","pow",[o,n]),t);break;case"log10":n=g(10);case"log":if(n||1!==e.args.length){if(1===e.args.length&&n||2===e.args.length&&void 0!==t[e.args[1]])r=new d("*","multiply",[o.clone(),new l("log",[n||e.args[1]])]),s=!0;else if(2===e.args.length)return v(new d("/","divide",[new l("log",[o]),new l("log",[e.args[1]])]),t)}else r=o.clone(),s=!0;break;case"pow":return t[n]=t[e.args[1]],v(new d("^","pow",[o,e.args[1]]),t);case"exp":r=new l("exp",[o.clone()]);break;case"sin":r=new l("cos",[o.clone()]);break;case"cos":r=new d("-","unaryMinus",[new l("sin",[o.clone()])]);break;case"tan":r=new d("^","pow",[new l("sec",[o.clone()]),g(2)]);break;case"sec":r=new d("*","multiply",[e,new l("tan",[o.clone()])]);break;case"csc":c=!0,r=new d("*","multiply",[e,new l("cot",[o.clone()])]);break;case"cot":c=!0,r=new d("^","pow",[new l("csc",[o.clone()]),g(2)]);break;case"asin":s=!0,r=new l("sqrt",[new d("-","subtract",[g(1),new d("^","pow",[o.clone(),g(2)])])]);break;case"acos":s=!0,c=!0,r=new l("sqrt",[new d("-","subtract",[g(1),new d("^","pow",[o.clone(),g(2)])])]);break;case"atan":s=!0,r=new d("+","add",[new d("^","pow",[o.clone(),g(2)]),g(1)]);break;case"asec":s=!0,r=new d("*","multiply",[new l("abs",[o.clone()]),new l("sqrt",[new d("-","subtract",[new d("^","pow",[o.clone(),g(2)]),g(1)])])]);break;case"acsc":s=!0,c=!0,r=new d("*","multiply",[new l("abs",[o.clone()]),new l("sqrt",[new d("-","subtract",[new d("^","pow",[o.clone(),g(2)]),g(1)])])]);break;case"acot":s=!0,c=!0,r=new d("+","add",[new d("^","pow",[o.clone(),g(2)]),g(1)]);break;case"sinh":r=new l("cosh",[o.clone()]);break;case"cosh":r=new l("sinh",[o.clone()]);break;case"tanh":r=new d("^","pow",[new l("sech",[o.clone()]),g(2)]);break;case"sech":c=!0,r=new d("*","multiply",[e,new l("tanh",[o.clone()])]);break;case"csch":c=!0,r=new d("*","multiply",[e,new l("coth",[o.clone()])]);break;case"coth":c=!0,r=new d("^","pow",[new l("csch",[o.clone()]),g(2)]);break;case"asinh":s=!0,r=new l("sqrt",[new d("+","add",[new d("^","pow",[o.clone(),g(2)]),g(1)])]);break;case"acosh":s=!0,r=new l("sqrt",[new d("-","subtract",[new d("^","pow",[o.clone(),g(2)]),g(1)])]);break;case"atanh":s=!0,r=new d("-","subtract",[g(1),new d("^","pow",[o.clone(),g(2)])]);break;case"asech":s=!0,c=!0,r=new d("*","multiply",[o.clone(),new l("sqrt",[new d("-","subtract",[g(1),new d("^","pow",[o.clone(),g(2)])])])]);break;case"acsch":s=!0,c=!0,r=new d("*","multiply",[new l("abs",[o.clone()]),new l("sqrt",[new d("+","add",[new d("^","pow",[o.clone(),g(2)]),g(1)])])]);break;case"acoth":s=!0,c=!0,r=new d("-","subtract",[g(1),new d("^","pow",[o.clone(),g(2)])]);break;case"abs":r=new d("/","divide",[new l(new p("abs"),[o.clone()]),o.clone()]);break;case"gamma":default:throw new Error('Function "'+e.name+'" is not supported by derivative, or a wrong number of arguments is passed')}s?(i="/",a="divide"):(i="*",a="multiply");var u=v(o,t);return c&&(u=new d("-","unaryMinus",[u])),new d(i,a,[u,r])},"OperatorNode, Object":function(e,t){if(void 0!==t[e])return g(0);if("+"===e.op)return new d(e.op,e.fn,e.args.map((function(e){return v(e,t)})));if("-"===e.op){if(e.isUnary())return new d(e.op,e.fn,[v(e.args[0],t)]);if(e.isBinary())return new d(e.op,e.fn,[v(e.args[0],t),v(e.args[1],t)])}if("*"===e.op){var n=e.args.filter((function(e){return void 0!==t[e]}));if(n.length>0){var r=e.args.filter((function(e){return void 0===t[e]})),a=1===r.length?r[0]:new d("*","multiply",r),c=n.concat(v(a,t));return new d("*","multiply",c)}return new d("+","add",e.args.map((function(n){return new d("*","multiply",e.args.map((function(e){return e===n?v(e,t):e.clone()})))})))}if("/"===e.op&&e.isBinary()){var u=e.args[0],f=e.args[1];return void 0!==t[f]?new d("/","divide",[v(u,t),f]):void 0!==t[u]?new d("*","multiply",[new d("-","unaryMinus",[u]),new d("/","divide",[v(f,t),new d("^","pow",[f.clone(),g(2)])])]):new d("/","divide",[new d("-","subtract",[new d("*","multiply",[v(u,t),f.clone()]),new d("*","multiply",[u.clone(),v(f,t)])]),new d("^","pow",[f.clone(),g(2)])])}if("^"===e.op&&e.isBinary()){var p=e.args[0],m=e.args[1];if(void 0!==t[p])return(0,i.isConstantNode)(p)&&(s(p.value)||o(p.value,1))?g(0):new d("*","multiply",[e,new d("*","multiply",[new l("log",[p.clone()]),v(m.clone(),t)])]);if(void 0!==t[m]){if((0,i.isConstantNode)(m)){if(s(m.value))return g(0);if(o(m.value,1))return v(p,t)}var h=new d("^","pow",[p.clone(),new d("-","subtract",[m,g(1)])]);return new d("*","multiply",[m.clone(),new d("*","multiply",[v(p,t),h])])}return new d("*","multiply",[new d("^","pow",[p.clone(),m.clone()]),new d("+","add",[new d("*","multiply",[v(p,t),new d("/","divide",[m.clone(),p.clone()])]),new d("*","multiply",[v(m,t),new l("log",[p.clone()])])])])}throw new Error('Operator "'+e.op+'" is not supported by derivative, or a wrong number of arguments is passed')}});function g(e,t){return new u(c(e,t||n.number))}return m}));t.createDerivative=r})),mu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRationalize=void 0;var n=["config","typed","equal","isZero","add","subtract","multiply","divide","pow","parse","simplify","?bignumber","?fraction","mathWithTransform","ConstantNode","OperatorNode","FunctionNode","SymbolNode","ParenthesisNode"],r=(0,h.factory)("rationalize",n,(function(e){var t=e.config,n=e.typed,r=e.equal,i=e.isZero,a=e.add,o=e.subtract,s=e.multiply,c=e.divide,l=e.pow,d=e.parse,f=e.simplify,p=e.fraction,m=e.bignumber,h=e.mathWithTransform,y=e.ConstantNode,v=e.OperatorNode,g=e.FunctionNode,b=e.SymbolNode,x=e.ParenthesisNode,D=(0,lu.createSimplifyConstant)({typed:n,config:t,mathWithTransform:h,fraction:p,bignumber:m,ConstantNode:y,OperatorNode:v,FunctionNode:g,SymbolNode:b}),_=(0,uu.createSimplifyCore)({equal:r,isZero:i,add:a,subtract:o,multiply:s,divide:c,pow:l,ConstantNode:y,OperatorNode:v,FunctionNode:g,ParenthesisNode:x});return n("rationalize",{string:function(e){return this(d(e),{},!1)},"string, boolean":function(e,t){return this(d(e),{},t)},"string, Object":function(e,t){return this(d(e),t,!1)},"string, Object, boolean":function(e,t,n){return this(d(e),t,n)},Node:function(e){return this(e,{},!1)},"Node, boolean":function(e,t){return this(e,{},t)},"Node, Object":function(e,t){return this(e,t,!1)},"Node, Object, boolean":function(e,t,n){var r=function(){var e=[_,{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},D,{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"1*n",r:"n"}],t=[{l:"(-n1)/(-n2)",r:"n1/n2"},{l:"(-n1)*(-n2)",r:"n1*n2"},{l:"n1--n2",r:"n1+n2"},{l:"n1-n2",r:"n1+(-n2)"},{l:"(n1+n2)*n3",r:"(n1*n3 + n2*n3)"},{l:"n1*(n2+n3)",r:"(n1*n2+n1*n3)"},{l:"c1*n + c2*n",r:"(c1+c2)*n"},{l:"c1*n + n",r:"(c1+1)*n"},{l:"c1*n - c2*n",r:"(c1-c2)*n"},{l:"c1*n - n",r:"(c1-1)*n"},{l:"v/c",r:"(1/c)*v"},{l:"v/-c",r:"-(1/c)*v"},{l:"-v*-c",r:"c*v"},{l:"-v*c",r:"-c*v"},{l:"v*-c",r:"-c*v"},{l:"v*c",r:"c*v"},{l:"-(-n1*n2)",r:"(n1*n2)"},{l:"-(n1*n2)",r:"(-n1*n2)"},{l:"-(-n1+n2)",r:"(n1-n2)"},{l:"-(n1+n2)",r:"(-n1-n2)"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"},{l:"-(-n1/n2)",r:"(n1/n2)"},{l:"-(n1/n2)",r:"(-n1/n2)"}],n=[{l:"(n1/(n2/n3))",r:"((n1*n3)/n2)"},{l:"(n1/n2/n3)",r:"(n1/(n2*n3))"}],r={};return r.firstRules=e.concat(t,n),r.distrDivRules=[{l:"(n1/n2 + n3/n4)",r:"((n1*n4 + n3*n2)/(n2*n4))"},{l:"(n1/n2 + n3)",r:"((n1 + n3*n2)/n2)"},{l:"(n1 + n2/n3)",r:"((n1*n3 + n2)/n3)"}],r.sucDivRules=n,r.firstRulesAgain=e.concat(t),r.finalRules=[_,{l:"n*-n",r:"-n^2"},{l:"n*n",r:"n^2"},D,{l:"n*-n^n1",r:"-n^(n1+1)"},{l:"n*n^n1",r:"n^(n1+1)"},{l:"n^n1*-n^n2",r:"-n^(n1+n2)"},{l:"n^n1*n^n2",r:"n^(n1+n2)"},{l:"n^n1*-n",r:"-n^(n1+1)"},{l:"n^n1*n",r:"n^(n1+1)"},{l:"n^n1/-n",r:"-n^(n1-1)"},{l:"n^n1/n",r:"n^(n1-1)"},{l:"n/-n^n1",r:"-n^(1-n1)"},{l:"n/n^n1",r:"n^(1-n1)"},{l:"n^n1/-n^n2",r:"n^(n1-n2)"},{l:"n^n1/n^n2",r:"n^(n1-n2)"},{l:"n1+(-n2*n3)",r:"n1-n2*n3"},{l:"v*(-c)",r:"-c*v"},{l:"n1+-n2",r:"n1-n2"},{l:"v*c",r:"c*v"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"}],r}(),i=function(e,t,n,r){var i=[],a=f(e,r,t,{exactFractions:!1}),o="+-*"+((n=!!n)?"/":"");!function e(t){var n=t.type;if("FunctionNode"===n)throw new Error("There is an unsolved function call");if("OperatorNode"===n)if("^"===t.op){if("ConstantNode"!==t.args[1].type||!(0,u.isInteger)(parseFloat(t.args[1].value)))throw new Error("There is a non-integer exponent");e(t.args[0])}else{if(-1===o.indexOf(t.op))throw new Error("Operator "+t.op+" invalid in polynomial expression");for(var r=0;r<t.args.length;r++)e(t.args[r])}else if("SymbolNode"===n){var a=t.name;-1===i.indexOf(a)&&i.push(a)}else if("ParenthesisNode"===n)e(t.content);else if("ConstantNode"!==n)throw new Error("type "+n+" is not allowed in polynomial expression")}(a);var s={};return s.expression=a,s.variables=i,s}(e,t,!0,r.firstRules),a=i.variables.length;if(e=i.expression,a>=1){var o,s;e=function e(t,n,r){var i=t.type,a=arguments.length>1;if("OperatorNode"===i&&t.isBinary()){var o,s=!1;if("^"===t.op&&("ParenthesisNode"!==t.args[0].type&&"OperatorNode"!==t.args[0].type||"ConstantNode"!==t.args[1].type||(o=parseFloat(t.args[1].value),s=o>=2&&(0,u.isInteger)(o))),s){if(o>2){var c=t.args[0],l=new v("^","pow",[t.args[0].cloneDeep(),new y(o-1)]);t=new v("*","multiply",[c,l])}else t=new v("*","multiply",[t.args[0],t.args[0].cloneDeep()]);a&&("content"===r?n.content=t:n.args[r]=t)}}if("ParenthesisNode"===i)e(t.content,t,"content");else if("ConstantNode"!==i&&"SymbolNode"!==i)for(var d=0;d<t.args.length;d++)e(t.args[d],t,d);if(!a)return t}(e);var c,l=!0,d=!1;for(e=f(e,r.firstRules,{},{exactFractions:!1});s=l?r.distrDivRules:r.sucDivRules,l=!l,(c=(e=f(e,s)).toString())!==o;)d=!0,o=c;d&&(e=f(e,r.firstRulesAgain,{},{exactFractions:!1})),e=f(e,r.finalRules,{},{exactFractions:!1})}var p=[],m={};return"OperatorNode"===e.type&&e.isBinary()&&"/"===e.op?(1===a&&(e.args[0]=w(e.args[0],p),e.args[1]=w(e.args[1])),n&&(m.numerator=e.args[0],m.denominator=e.args[1])):(1===a&&(e=w(e,p)),n&&(m.numerator=e,m.denominator=null)),n?(m.coefficients=p,m.variables=i.variables,m.expression=e,m):e}});function w(e,t){void 0===t&&(t=[]),t[0]=0;var n={cte:1,oper:"+",fire:""},r=0,i="";!function e(n,a,o){var s=n.type;if("FunctionNode"===s)throw new Error("There is an unsolved function call");if("OperatorNode"===s){if(-1==="+-*^".indexOf(n.op))throw new Error("Operator "+n.op+" invalid");if(null!==a){if(("unaryMinus"===n.fn||"pow"===n.fn)&&"add"!==a.fn&&"subtract"!==a.fn&&"multiply"!==a.fn)throw new Error("Invalid "+n.op+" placing");if(("subtract"===n.fn||"add"===n.fn||"multiply"===n.fn)&&"add"!==a.fn&&"subtract"!==a.fn)throw new Error("Invalid "+n.op+" placing");if(("subtract"===n.fn||"add"===n.fn||"unaryMinus"===n.fn)&&0!==o.noFil)throw new Error("Invalid "+n.op+" placing")}"^"!==n.op&&"*"!==n.op||(o.fire=n.op);for(var c=0;c<n.args.length;c++)"unaryMinus"===n.fn&&(o.oper="-"),"+"!==n.op&&"subtract"!==n.fn||(o.fire="",o.cte=1,o.oper=0===c?"+":n.op),o.noFil=c,e(n.args[c],n,o)}else if("SymbolNode"===s){if(n.name!==i&&""!==i)throw new Error("There is more than one variable");if(i=n.name,null===a)return void(t[1]=1);if("^"===a.op&&0!==o.noFil)throw new Error("In power the variable should be the first parameter");if("*"===a.op&&1!==o.noFil)throw new Error("In multiply the variable should be the second parameter");""!==o.fire&&"*"!==o.fire||(r<1&&(t[1]=0),t[1]+=o.cte*("+"===o.oper?1:-1),r=Math.max(1,r))}else{if("ConstantNode"!==s)throw new Error("Type "+s+" is not allowed");var l=parseFloat(n.value);if(null===a)return void(t[0]=l);if("^"===a.op){if(1!==o.noFil)throw new Error("Constant cannot be powered");if(!(0,u.isInteger)(l)||l<=0)throw new Error("Non-integer exponent is not allowed");for(var d=r+1;d<l;d++)t[d]=0;return l>r&&(t[l]=0),t[l]+=o.cte*("+"===o.oper?1:-1),void(r=Math.max(l,r))}o.cte=l,""===o.fire&&(t[0]+=o.cte*("+"===o.oper?1:-1))}}(e,null,n);for(var a,o=!0,s=r=t.length-1;s>=0;s--)if(0!==t[s]){var c=new y(o?t[s]:Math.abs(t[s])),l=t[s]<0?"-":"+";if(s>0){var d=new b(i);if(s>1){var f=new y(s);d=new v("^","pow",[d,f])}c=-1===t[s]&&o?new v("-","unaryMinus",[d]):1===Math.abs(t[s])?d:new v("*","multiply",[c,d])}a=o?c:"+"===l?new v("+","add",[a,c]):new v("-","subtract",[a,c]),o=!1}return o?new y(0):a}}));t.createRationalize=r})),hu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createReviver=void 0;var n=["classes"],r=(0,h.factory)("reviver",n,(function(e){var t=e.classes;return function(e,n){var r=t[n&&n.mathjs];return r&&"function"==typeof r.fromJSON?r.fromJSON(n):n}}));t.createReviver=r})),yu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createReplacer=void 0;var n=[],r=(0,h.factory)("replacer",n,(function(){return function(e,t){return"number"!=typeof t||isFinite(t)&&!isNaN(t)?t:{mathjs:"number",value:String(t)}}}));t.createReplacer=r})),vu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.version=void 0;t.version="7.6.0"})),gu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createVersion=t.createUppercaseE=t.createUppercasePi=t.createI=t.createSQRT2=t.createSQRT1_2=t.createLOG10E=t.createLOG2E=t.createLN10=t.createLN2=t.createPhi=t.createE=t.createTau=t.createPi=t.createNaN=t.createInfinity=t.createNull=t.createFalse=t.createTrue=void 0;var n=(0,h.factory)("true",[],(function(){return!0}));t.createTrue=n;var r=(0,h.factory)("false",[],(function(){return!1}));t.createFalse=r;var i=(0,h.factory)("null",[],(function(){return null}));t.createNull=i;var a=_("Infinity",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(1/0):1/0}));t.createInfinity=a;var o=_("NaN",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(NaN):NaN}));t.createNaN=o;var s=_("pi",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?(0,An.createBigNumberPi)(n):F.pi}));t.createPi=s;var c=_("tau",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?(0,An.createBigNumberTau)(n):F.tau}));t.createTau=c;var u=_("e",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?(0,An.createBigNumberE)(n):F.e}));t.createE=u;var l=_("phi",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?(0,An.createBigNumberPhi)(n):F.phi}));t.createPhi=l;var d=_("LN2",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(2).ln():Math.LN2}));t.createLN2=d;var f=_("LN10",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(10).ln():Math.LN10}));t.createLN10=f;var p=_("LOG2E",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(1).div(new n(2).ln()):Math.LOG2E}));t.createLOG2E=p;var m=_("LOG10E",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(1).div(new n(10).ln()):Math.LOG10E}));t.createLOG10E=m;var y=_("SQRT1_2",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n("0.5").sqrt():Math.SQRT1_2}));t.createSQRT1_2=y;var v=_("SQRT2",["config","?BigNumber"],(function(e){var t=e.config,n=e.BigNumber;return"BigNumber"===t.number?new n(2).sqrt():Math.SQRT2}));t.createSQRT2=v;var g=_("i",["Complex"],(function(e){return e.Complex.I}));t.createI=g;var b=(0,h.factory)("PI",["pi"],(function(e){return e.pi}));t.createUppercasePi=b;var x=(0,h.factory)("E",["e"],(function(e){return e.e}));t.createUppercaseE=x;var D=(0,h.factory)("version",[],(function(){return vu.version}));function _(e,t,n){return(0,h.factory)(e,t,n,{recreateOnConfigChange:!0})}t.createVersion=D})),bu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createPlanckTemperature=t.createPlanckCharge=t.createPlanckTime=t.createPlanckMass=t.createPlanckLength=t.createGravity=t.createMolarMassC12=t.createMolarMass=t.createWienDisplacement=t.createStefanBoltzmann=t.createSecondRadiation=t.createSackurTetrode=t.createMolarVolume=t.createMolarPlanckConstant=t.createGasConstant=t.createLoschmidt=t.createFirstRadiation=t.createFaraday=t.createBoltzmann=t.createAvogadro=t.createAtomicMass=t.createEfimovFactor=t.createWeakMixingAngle=t.createThomsonCrossSection=t.createRydberg=t.createQuantumOfCirculation=t.createNeutronMass=t.createDeuteronMass=t.createProtonMass=t.createHartreeEnergy=t.createFineStructure=t.createFermiCoupling=t.createElectronMass=t.createClassicalElectronRadius=t.createBohrRadius=t.createJosephson=t.createKlitzing=t.createNuclearMagneton=t.createMagneticFluxQuantum=t.createInverseConductanceQuantum=t.createConductanceQuantum=t.createBohrMagneton=t.createElementaryCharge=t.createCoulomb=t.createVacuumImpedance=t.createElectricConstant=t.createMagneticConstant=t.createReducedPlanckConstant=t.createPlanckConstant=t.createGravitationConstant=t.createSpeedOfLight=void 0;var n=ee("speedOfLight","299792458","m s^-1");t.createSpeedOfLight=n;var r=ee("gravitationConstant","6.67430e-11","m^3 kg^-1 s^-2");t.createGravitationConstant=r;var i=ee("planckConstant","6.62607015e-34","J s");t.createPlanckConstant=i;var a=ee("reducedPlanckConstant","1.0545718176461565e-34","J s");t.createReducedPlanckConstant=a;var o=ee("magneticConstant","1.25663706212e-6","N A^-2");t.createMagneticConstant=o;var s=ee("electricConstant","8.8541878128e-12","F m^-1");t.createElectricConstant=s;var c=ee("vacuumImpedance","376.730313667","ohm");t.createVacuumImpedance=c;var u=ee("coulomb","8.987551792261171e9","N m^2 C^-2");t.createCoulomb=u;var l=ee("elementaryCharge","1.602176634e-19","C");t.createElementaryCharge=l;var d=ee("bohrMagneton","9.2740100783e-24","J T^-1");t.createBohrMagneton=d;var f=ee("conductanceQuantum","7.748091729863649e-5","S");t.createConductanceQuantum=f;var p=ee("inverseConductanceQuantum","12906.403729652257","ohm");t.createInverseConductanceQuantum=p;var m=ee("magneticFluxQuantum","2.0678338484619295e-15","Wb");t.createMagneticFluxQuantum=m;var y=ee("nuclearMagneton","5.0507837461e-27","J T^-1");t.createNuclearMagneton=y;var v=ee("klitzing","25812.807459304513","ohm");t.createKlitzing=v;var g=ee("josephson","4.835978484169836e14 Hz V","Hz V^-1");t.createJosephson=g;var b=ee("bohrRadius","5.29177210903e-11","m");t.createBohrRadius=b;var x=ee("classicalElectronRadius","2.8179403262e-15","m");t.createClassicalElectronRadius=x;var D=ee("electronMass","9.1093837015e-31","kg");t.createElectronMass=D;var _=ee("fermiCoupling","1.1663787e-5","GeV^-2");t.createFermiCoupling=_;var w=te("fineStructure",.0072973525693);t.createFineStructure=w;var N=ee("hartreeEnergy","4.3597447222071e-18","J");t.createHartreeEnergy=N;var M=ee("protonMass","1.67262192369e-27","kg");t.createProtonMass=M;var O=ee("deuteronMass","3.3435830926e-27","kg");t.createDeuteronMass=O;var S=ee("neutronMass","1.6749271613e-27","kg");t.createNeutronMass=S;var P=ee("quantumOfCirculation","3.6369475516e-4","m^2 s^-1");t.createQuantumOfCirculation=P;var j=ee("rydberg","10973731.568160","m^-1");t.createRydberg=j;var A=ee("thomsonCrossSection","6.6524587321e-29","m^2");t.createThomsonCrossSection=A;var E=te("weakMixingAngle",.2229);t.createWeakMixingAngle=E;var C=te("efimovFactor",22.7);t.createEfimovFactor=C;var T=ee("atomicMass","1.66053906660e-27","kg");t.createAtomicMass=T;var k=ee("avogadro","6.02214076e23","mol^-1");t.createAvogadro=k;var I=ee("boltzmann","1.380649e-23","J K^-1");t.createBoltzmann=I;var B=ee("faraday","96485.33212331001","C mol^-1");t.createFaraday=B;var z=ee("firstRadiation","3.7417718521927573e-16","W m^2");t.createFirstRadiation=z;var R=ee("loschmidt","2.686780111798444e25","m^-3");t.createLoschmidt=R;var q=ee("gasConstant","8.31446261815324","J K^-1 mol^-1");t.createGasConstant=q;var F=ee("molarPlanckConstant","3.990312712893431e-10","J s mol^-1");t.createMolarPlanckConstant=F;var U=ee("molarVolume","0.022413969545014137","m^3 mol^-1");t.createMolarVolume=U;var L=te("sackurTetrode",-1.16487052358);t.createSackurTetrode=L;var H=ee("secondRadiation","0.014387768775039337","m K");t.createSecondRadiation=H;var Z=ee("stefanBoltzmann","5.67037441918443e-8","W m^-2 K^-4");t.createStefanBoltzmann=Z;var V=ee("wienDisplacement","2.897771955e-3","m K");t.createWienDisplacement=V;var W=ee("molarMass","0.99999999965e-3","kg mol^-1");t.createMolarMass=W;var G=ee("molarMassC12","11.9999999958e-3","kg mol^-1");t.createMolarMassC12=G;var $=ee("gravity","9.80665","m s^-2");t.createGravity=$;var Q=ee("planckLength","1.616255e-35","m");t.createPlanckLength=Q;var X=ee("planckMass","2.176435e-8","kg");t.createPlanckMass=X;var Y=ee("planckTime","5.391245e-44","s");t.createPlanckTime=Y;var J=ee("planckCharge","1.87554603778e-18","C");t.createPlanckCharge=J;var K=ee("planckTemperature","1.416785e+32","K");function ee(e,t,n){return(0,h.factory)(e,["config","Unit","BigNumber"],(function(e){var r=e.config,i=e.Unit,a=e.BigNumber,o=new i("BigNumber"===r.number?new a(t):parseFloat(t),n);return o.fixPrefix=!0,o}))}function te(e,t){return(0,h.factory)(e,["config","BigNumber"],(function(e){var n=e.config,r=e.BigNumber;return"BigNumber"===n.number?new r(t):t}))}t.createPlanckTemperature=K})),xu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createApplyTransform=void 0;var n=["typed","isInteger"],r=(0,h.factory)("apply",n,(function(e){var t=e.typed,n=e.isInteger,r=(0,ue.createApply)({typed:t,isInteger:n});return t("apply",{"...any":function(e){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1));try{return r.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createApplyTransform=r})),Du=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createColumnTransform=void 0;var n=["typed","Index","matrix","range"],r=(0,h.factory)("column",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,a=e.range,o=(0,it.createColumn)({typed:t,Index:n,matrix:r,range:a});return t("column",{"...any":function(e){var t=e.length-1,n=e[t];(0,i.isNumber)(n)&&(e[t]=n-1);try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createColumnTransform=r})),_u=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compileInlineExpression=function(e,t,n){var r=e.filter((function(e){return(0,i.isSymbolNode)(e)&&!(e.name in t)&&!(e.name in n)}))[0];if(!r)throw new Error('No undefined variable found in inline expression "'+e+'"');var a=r.name,o=Object.create(n),s=e.compile();return function(e){return o[a]=e,s.evaluate(o)}}})),wu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createFilterTransform=void 0;var n=["typed"],r=(0,h.factory)("filter",n,(function(e){var t=e.typed;function n(e,t,n){var a,o;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(o=(0,i.isSymbolNode)(e[1])||(0,i.isFunctionAssignmentNode)(e[1])?e[1].compile().evaluate(n):(0,_u.compileInlineExpression)(e[1],t,n)),r(a,o)}n.rawArgs=!0;var r=t("filter",{"Array, function":a,"Matrix, function":function(e,t){return e.create(a(e.toArray(),t))},"Array, RegExp":m.filterRegExp,"Matrix, RegExp":function(e,t){return e.create((0,m.filterRegExp)(e.toArray(),t))}});return n}),{isTransformFunction:!0});function a(e,t){var n=(0,st.maxArgumentCount)(t);return(0,m.filter)(e,(function(e,r,i){return 1===n?t(e):2===n?t(e,[r+1]):t(e,[r+1],i)}))}t.createFilterTransform=r})),Nu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createForEachTransform=void 0;var n=["typed"],r=(0,h.factory)("forEach",n,(function(e){var t=e.typed;function n(e,t,n){var a,o;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(o=(0,i.isSymbolNode)(e[1])||(0,i.isFunctionAssignmentNode)(e[1])?e[1].compile().evaluate(n):(0,_u.compileInlineExpression)(e[1],t,n)),r(a,o)}n.rawArgs=!0;var r=t("forEach",{"Array | Matrix, function":function(e,t){var n=(0,st.maxArgumentCount)(t);!function r(i,a){Array.isArray(i)?(0,m.forEach)(i,(function(e,t){r(e,a.concat(t+1))})):1===n?t(i):2===n?t(i,a):t(i,a,e)}(e.valueOf(),[])}});return n}),{isTransformFunction:!0});t.createForEachTransform=r})),Mu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createIndexTransform=void 0;var n=["Index"],r=(0,h.factory)("index",n,(function(e){var t=e.Index;return function(){for(var e=[],n=0,r=arguments.length;n<r;n++){var a=arguments[n];if((0,i.isRange)(a))a.start--,a.end-=a.step>0?0:2;else if(a&&!0===a.isSet)a=a.map((function(e){return e-1}));else if((0,i.isArray)(a)||(0,i.isMatrix)(a))a=a.map((function(e){return e-1}));else if((0,i.isNumber)(a))a--;else if((0,i.isBigNumber)(a))a=a.toNumber()-1;else if("string"!=typeof a)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");e[n]=a}var o=new t;return t.apply(o,e),o}}),{isTransformFunction:!0});t.createIndexTransform=r})),Ou=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMapTransform=void 0;var n=["typed"],r=(0,h.factory)("map",n,(function(e){var t=e.typed;function n(e,t,n){var a,o;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(o=(0,i.isSymbolNode)(e[1])||(0,i.isFunctionAssignmentNode)(e[1])?e[1].compile().evaluate(n):(0,_u.compileInlineExpression)(e[1],t,n)),r(a,o)}n.rawArgs=!0;var r=t("map",{"Array, function":function(e,t){return a(e,t,e)},"Matrix, function":function(e,t){return e.create(a(e.valueOf(),t,e))}});return n}),{isTransformFunction:!0});function a(e,t,n){var r=(0,st.maxArgumentCount)(t);return function e(i,a){return Array.isArray(i)?(0,m.map)(i,(function(t,n){return e(t,a.concat(n+1))})):1===r?t(i):2===r?t(i,a):t(i,a,n)}(e,[])}t.createMapTransform=r})),Su=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMaxTransform=void 0;var n=["typed","config","numeric","larger"],r=(0,h.factory)("max",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,a=e.larger,o=(0,Nn.createMax)({typed:t,config:n,numeric:r,larger:a});return t("max",{"...any":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createMaxTransform=r})),Pu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMeanTransform=void 0;var n=["typed","add","divide"],r=(0,h.factory)("mean",n,(function(e){var t=e.typed,n=e.add,r=e.divide,a=(0,qc.createMean)({typed:t,add:n,divide:r});return t("mean",{"...any":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return a.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createMeanTransform=r})),ju=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createMinTransform=void 0;var n=["typed","config","numeric","smaller"],r=(0,h.factory)("min",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,a=e.smaller,o=(0,Mn.createMin)({typed:t,config:n,numeric:r,smaller:a});return t("min",{"...any":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createMinTransform=r})),Au=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRangeTransform=void 0;var n=["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq"],r=(0,h.factory)("range",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,i=e.bignumber,a=e.smaller,o=e.smallerEq,s=e.larger,c=e.largerEq,u=(0,gt.createRange)({typed:t,config:n,matrix:r,bignumber:i,smaller:a,smallerEq:o,larger:s,largerEq:c});return t("range",{"...any":function(e){return"boolean"!=typeof e[e.length-1]&&e.push(!0),u.apply(null,e)}})}),{isTransformFunction:!0});t.createRangeTransform=r})),Eu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createRowTransform=void 0;var n=["typed","Index","matrix","range"],r=(0,h.factory)("row",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,a=e.range,o=(0,Nt.createRow)({typed:t,Index:n,matrix:r,range:a});return t("row",{"...any":function(e){var t=e.length-1,n=e[t];(0,i.isNumber)(n)&&(e[t]=n-1);try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createRowTransform=r})),Cu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSubsetTransform=void 0;var n=["typed","matrix"],r=(0,h.factory)("subset",n,(function(e){var t=e.typed,n=e.matrix,r=(0,Pt.createSubset)({typed:t,matrix:n});return t("subset",{"...any":function(e){try{return r.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createSubsetTransform=r})),Tu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createConcatTransform=void 0;var n=["typed","matrix","isInteger"],r=(0,h.factory)("concat",n,(function(e){var t=e.typed,n=e.matrix,r=e.isInteger,a=(0,rt.createConcat)({typed:t,matrix:n,isInteger:r});return t("concat",{"...any":function(e){var t=e.length-1,n=e[t];(0,i.isNumber)(n)?e[t]=n-1:(0,i.isBigNumber)(n)&&(e[t]=n.minus(1));try{return a.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createConcatTransform=r})),ku=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createDiffTransform=void 0;var n=["typed","matrix","subtract","number","bignumber"],r=(0,h.factory)("diff",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,a=e.number,o=e.bignumber,s=(0,ht.createDiff)({typed:t,matrix:n,subtract:r,number:a,bignumber:o});return t("diff",{"...any":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return s.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createDiffTransform=r})),Iu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createStdTransform=void 0;var n=["typed","sqrt","variance"],r=(0,h.factory)("std",n,(function(e){var t=e.typed,n=e.sqrt,r=e.variance,a=(0,Zc.createStd)({typed:t,sqrt:n,variance:r});return t("std",{"...any":function(e){if(e.length>=2&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return a.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createStdTransform=r})),Bu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createSumTransform=void 0;var n=["typed","config","add","numeric"],r=(0,h.factory)("sum",n,(function(e){var t=e.typed,n=e.config,r=e.add,a=e.numeric,o=(0,Rc.createSum)({typed:t,config:n,add:r,numeric:a});return t("sum",{"...any":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createSumTransform=r})),zu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createVarianceTransform=void 0;var n=["typed","add","subtract","multiply","divide","apply","isNaN"],r=(0,h.factory)("variance",n,(function(e){var t=e.typed,n=e.add,r=e.subtract,a=e.multiply,o=e.divide,s=e.apply,c=e.isNaN,u=(0,Lc.createVariance)({typed:t,add:n,subtract:r,multiply:a,divide:o,apply:s,isNaN:c});return t("variance",{"...any":function(e){if(e.length>=2&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return u.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createVarianceTransform=r})),Ru=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"createTyped",{enumerable:!0,get:function(){return y.createTyped}}),Object.defineProperty(t,"createResultSet",{enumerable:!0,get:function(){return v.createResultSet}}),Object.defineProperty(t,"createBigNumberClass",{enumerable:!0,get:function(){return b.createBigNumberClass}}),Object.defineProperty(t,"createComplexClass",{enumerable:!0,get:function(){return D.createComplexClass}}),Object.defineProperty(t,"createFractionClass",{enumerable:!0,get:function(){return w.createFractionClass}}),Object.defineProperty(t,"createRangeClass",{enumerable:!0,get:function(){return N.createRangeClass}}),Object.defineProperty(t,"createMatrixClass",{enumerable:!0,get:function(){return M.createMatrixClass}}),Object.defineProperty(t,"createDenseMatrixClass",{enumerable:!0,get:function(){return O.createDenseMatrixClass}}),Object.defineProperty(t,"createClone",{enumerable:!0,get:function(){return S.createClone}}),Object.defineProperty(t,"createIsInteger",{enumerable:!0,get:function(){return j.createIsInteger}}),Object.defineProperty(t,"createIsNegative",{enumerable:!0,get:function(){return U.createIsNegative}}),Object.defineProperty(t,"createIsNumeric",{enumerable:!0,get:function(){return L.createIsNumeric}}),Object.defineProperty(t,"createHasNumericValue",{enumerable:!0,get:function(){return H.createHasNumericValue}}),Object.defineProperty(t,"createIsPositive",{enumerable:!0,get:function(){return Z.createIsPositive}}),Object.defineProperty(t,"createIsZero",{enumerable:!0,get:function(){return V.createIsZero}}),Object.defineProperty(t,"createIsNaN",{enumerable:!0,get:function(){return W.createIsNaN}}),Object.defineProperty(t,"createTypeOf",{enumerable:!0,get:function(){return G.createTypeOf}}),Object.defineProperty(t,"createEqualScalar",{enumerable:!0,get:function(){return X.createEqualScalar}}),Object.defineProperty(t,"createSparseMatrixClass",{enumerable:!0,get:function(){return Y.createSparseMatrixClass}}),Object.defineProperty(t,"createNumber",{enumerable:!0,get:function(){return J.createNumber}}),Object.defineProperty(t,"createString",{enumerable:!0,get:function(){return K.createString}}),Object.defineProperty(t,"createBoolean",{enumerable:!0,get:function(){return ee.createBoolean}}),Object.defineProperty(t,"createBignumber",{enumerable:!0,get:function(){return te.createBignumber}}),Object.defineProperty(t,"createComplex",{enumerable:!0,get:function(){return ne.createComplex}}),Object.defineProperty(t,"createFraction",{enumerable:!0,get:function(){return re.createFraction}}),Object.defineProperty(t,"createMatrix",{enumerable:!0,get:function(){return ie.createMatrix}}),Object.defineProperty(t,"createSplitUnit",{enumerable:!0,get:function(){return ae.createSplitUnit}}),Object.defineProperty(t,"createUnaryMinus",{enumerable:!0,get:function(){return oe.createUnaryMinus}}),Object.defineProperty(t,"createUnaryPlus",{enumerable:!0,get:function(){return se.createUnaryPlus}}),Object.defineProperty(t,"createAbs",{enumerable:!0,get:function(){return ce.createAbs}}),Object.defineProperty(t,"createApply",{enumerable:!0,get:function(){return ue.createApply}}),Object.defineProperty(t,"createAddScalar",{enumerable:!0,get:function(){return le.createAddScalar}}),Object.defineProperty(t,"createCbrt",{enumerable:!0,get:function(){return de.createCbrt}}),Object.defineProperty(t,"createCeil",{enumerable:!0,get:function(){return me.createCeil}}),Object.defineProperty(t,"createCube",{enumerable:!0,get:function(){return he.createCube}}),Object.defineProperty(t,"createExp",{enumerable:!0,get:function(){return ye.createExp}}),Object.defineProperty(t,"createExpm1",{enumerable:!0,get:function(){return ve.createExpm1}}),Object.defineProperty(t,"createFix",{enumerable:!0,get:function(){return ge.createFix}}),Object.defineProperty(t,"createFloor",{enumerable:!0,get:function(){return be.createFloor}}),Object.defineProperty(t,"createGcd",{enumerable:!0,get:function(){return Ne.createGcd}}),Object.defineProperty(t,"createLcm",{enumerable:!0,get:function(){return Se.createLcm}}),Object.defineProperty(t,"createLog10",{enumerable:!0,get:function(){return Pe.createLog10}}),Object.defineProperty(t,"createLog2",{enumerable:!0,get:function(){return je.createLog2}}),Object.defineProperty(t,"createMod",{enumerable:!0,get:function(){return Te.createMod}}),Object.defineProperty(t,"createMultiplyScalar",{enumerable:!0,get:function(){return ke.createMultiplyScalar}}),Object.defineProperty(t,"createMultiply",{enumerable:!0,get:function(){return Ie.createMultiply}}),Object.defineProperty(t,"createNthRoot",{enumerable:!0,get:function(){return Be.createNthRoot}}),Object.defineProperty(t,"createSign",{enumerable:!0,get:function(){return ze.createSign}}),Object.defineProperty(t,"createSqrt",{enumerable:!0,get:function(){return Re.createSqrt}}),Object.defineProperty(t,"createSquare",{enumerable:!0,get:function(){return qe.createSquare}}),Object.defineProperty(t,"createSubtract",{enumerable:!0,get:function(){return Fe.createSubtract}}),Object.defineProperty(t,"createXgcd",{enumerable:!0,get:function(){return Ue.createXgcd}}),Object.defineProperty(t,"createDotMultiply",{enumerable:!0,get:function(){return He.createDotMultiply}}),Object.defineProperty(t,"createBitAnd",{enumerable:!0,get:function(){return Ve.createBitAnd}}),Object.defineProperty(t,"createBitNot",{enumerable:!0,get:function(){return We.createBitNot}}),Object.defineProperty(t,"createBitOr",{enumerable:!0,get:function(){return Ge.createBitOr}}),Object.defineProperty(t,"createBitXor",{enumerable:!0,get:function(){return Qe.createBitXor}}),Object.defineProperty(t,"createArg",{enumerable:!0,get:function(){return Xe.createArg}}),Object.defineProperty(t,"createConj",{enumerable:!0,get:function(){return Ye.createConj}}),Object.defineProperty(t,"createIm",{enumerable:!0,get:function(){return Je.createIm}}),Object.defineProperty(t,"createRe",{enumerable:!0,get:function(){return Ke.createRe}}),Object.defineProperty(t,"createNot",{enumerable:!0,get:function(){return et.createNot}}),Object.defineProperty(t,"createOr",{enumerable:!0,get:function(){return tt.createOr}}),Object.defineProperty(t,"createXor",{enumerable:!0,get:function(){return nt.createXor}}),Object.defineProperty(t,"createConcat",{enumerable:!0,get:function(){return rt.createConcat}}),Object.defineProperty(t,"createColumn",{enumerable:!0,get:function(){return it.createColumn}}),Object.defineProperty(t,"createCross",{enumerable:!0,get:function(){return at.createCross}}),Object.defineProperty(t,"createDiag",{enumerable:!0,get:function(){return ot.createDiag}}),Object.defineProperty(t,"createFilter",{enumerable:!0,get:function(){return ct.createFilter}}),Object.defineProperty(t,"createFlatten",{enumerable:!0,get:function(){return ut.createFlatten}}),Object.defineProperty(t,"createForEach",{enumerable:!0,get:function(){return lt.createForEach}}),Object.defineProperty(t,"createGetMatrixDataType",{enumerable:!0,get:function(){return dt.createGetMatrixDataType}}),Object.defineProperty(t,"createIdentity",{enumerable:!0,get:function(){return ft.createIdentity}}),Object.defineProperty(t,"createKron",{enumerable:!0,get:function(){return pt.createKron}}),Object.defineProperty(t,"createMap",{enumerable:!0,get:function(){return mt.createMap}}),Object.defineProperty(t,"createDiff",{enumerable:!0,get:function(){return ht.createDiff}}),Object.defineProperty(t,"createOnes",{enumerable:!0,get:function(){return yt.createOnes}}),Object.defineProperty(t,"createRange",{enumerable:!0,get:function(){return gt.createRange}}),Object.defineProperty(t,"createReshape",{enumerable:!0,get:function(){return bt.createReshape}}),Object.defineProperty(t,"createResize",{enumerable:!0,get:function(){return Dt.createResize}}),Object.defineProperty(t,"createRotate",{enumerable:!0,get:function(){return _t.createRotate}}),Object.defineProperty(t,"createRotationMatrix",{enumerable:!0,get:function(){return wt.createRotationMatrix}}),Object.defineProperty(t,"createRow",{enumerable:!0,get:function(){return Nt.createRow}}),Object.defineProperty(t,"createSize",{enumerable:!0,get:function(){return Mt.createSize}}),Object.defineProperty(t,"createSqueeze",{enumerable:!0,get:function(){return Ot.createSqueeze}}),Object.defineProperty(t,"createSubset",{enumerable:!0,get:function(){return Pt.createSubset}}),Object.defineProperty(t,"createTranspose",{enumerable:!0,get:function(){return jt.createTranspose}}),Object.defineProperty(t,"createCtranspose",{enumerable:!0,get:function(){return At.createCtranspose}}),Object.defineProperty(t,"createZeros",{enumerable:!0,get:function(){return Et.createZeros}}),Object.defineProperty(t,"createErf",{enumerable:!0,get:function(){return Ct.createErf}}),Object.defineProperty(t,"createMode",{enumerable:!0,get:function(){return Tt.createMode}}),Object.defineProperty(t,"createProd",{enumerable:!0,get:function(){return It.createProd}}),Object.defineProperty(t,"createFormat",{enumerable:!0,get:function(){return Bt.createFormat}}),Object.defineProperty(t,"createBin",{enumerable:!0,get:function(){return Rt.createBin}}),Object.defineProperty(t,"createOct",{enumerable:!0,get:function(){return qt.createOct}}),Object.defineProperty(t,"createHex",{enumerable:!0,get:function(){return Ft.createHex}}),Object.defineProperty(t,"createPrint",{enumerable:!0,get:function(){return Ut.createPrint}}),Object.defineProperty(t,"createTo",{enumerable:!0,get:function(){return Lt.createTo}}),Object.defineProperty(t,"createIsPrime",{enumerable:!0,get:function(){return Ht.createIsPrime}}),Object.defineProperty(t,"createNumeric",{enumerable:!0,get:function(){return Zt.createNumeric}}),Object.defineProperty(t,"createDivideScalar",{enumerable:!0,get:function(){return Vt.createDivideScalar}}),Object.defineProperty(t,"createPow",{enumerable:!0,get:function(){return Wt.createPow}}),Object.defineProperty(t,"createRound",{enumerable:!0,get:function(){return Gt.createRound}}),Object.defineProperty(t,"createLog",{enumerable:!0,get:function(){return $t.createLog}}),Object.defineProperty(t,"createLog1p",{enumerable:!0,get:function(){return Qt.createLog1p}}),Object.defineProperty(t,"createNthRoots",{enumerable:!0,get:function(){return Xt.createNthRoots}}),Object.defineProperty(t,"createDotPow",{enumerable:!0,get:function(){return Yt.createDotPow}}),Object.defineProperty(t,"createDotDivide",{enumerable:!0,get:function(){return Jt.createDotDivide}}),Object.defineProperty(t,"createLsolve",{enumerable:!0,get:function(){return en.createLsolve}}),Object.defineProperty(t,"createUsolve",{enumerable:!0,get:function(){return tn.createUsolve}}),Object.defineProperty(t,"createLsolveAll",{enumerable:!0,get:function(){return nn.createLsolveAll}}),Object.defineProperty(t,"createUsolveAll",{enumerable:!0,get:function(){return rn.createUsolveAll}}),Object.defineProperty(t,"createLeftShift",{enumerable:!0,get:function(){return on.createLeftShift}}),Object.defineProperty(t,"createRightArithShift",{enumerable:!0,get:function(){return sn.createRightArithShift}}),Object.defineProperty(t,"createRightLogShift",{enumerable:!0,get:function(){return cn.createRightLogShift}}),Object.defineProperty(t,"createAnd",{enumerable:!0,get:function(){return un.createAnd}}),Object.defineProperty(t,"createCompare",{enumerable:!0,get:function(){return ln.createCompare}}),Object.defineProperty(t,"createCompareNatural",{enumerable:!0,get:function(){return fn.createCompareNatural}}),Object.defineProperty(t,"createCompareText",{enumerable:!0,get:function(){return pn.createCompareText}}),Object.defineProperty(t,"createEqual",{enumerable:!0,get:function(){return mn.createEqual}}),Object.defineProperty(t,"createEqualText",{enumerable:!0,get:function(){return hn.createEqualText}}),Object.defineProperty(t,"createSmaller",{enumerable:!0,get:function(){return yn.createSmaller}}),Object.defineProperty(t,"createSmallerEq",{enumerable:!0,get:function(){return vn.createSmallerEq}}),Object.defineProperty(t,"createLarger",{enumerable:!0,get:function(){return gn.createLarger}}),Object.defineProperty(t,"createLargerEq",{enumerable:!0,get:function(){return bn.createLargerEq}}),Object.defineProperty(t,"createDeepEqual",{enumerable:!0,get:function(){return xn.createDeepEqual}}),Object.defineProperty(t,"createUnequal",{enumerable:!0,get:function(){return Dn.createUnequal}}),Object.defineProperty(t,"createPartitionSelect",{enumerable:!0,get:function(){return _n.createPartitionSelect}}),Object.defineProperty(t,"createSort",{enumerable:!0,get:function(){return wn.createSort}}),Object.defineProperty(t,"createMax",{enumerable:!0,get:function(){return Nn.createMax}}),Object.defineProperty(t,"createMin",{enumerable:!0,get:function(){return Mn.createMin}}),Object.defineProperty(t,"createImmutableDenseMatrixClass",{enumerable:!0,get:function(){return On.createImmutableDenseMatrixClass}}),Object.defineProperty(t,"createIndexClass",{enumerable:!0,get:function(){return Sn.createIndexClass}}),Object.defineProperty(t,"createFibonacciHeapClass",{enumerable:!0,get:function(){return Pn.createFibonacciHeapClass}}),Object.defineProperty(t,"createSpaClass",{enumerable:!0,get:function(){return jn.createSpaClass}}),Object.defineProperty(t,"createUnitClass",{enumerable:!0,get:function(){return En.createUnitClass}}),Object.defineProperty(t,"createUnitFunction",{enumerable:!0,get:function(){return Cn.createUnitFunction}}),Object.defineProperty(t,"createSparse",{enumerable:!0,get:function(){return Tn.createSparse}}),Object.defineProperty(t,"createCreateUnit",{enumerable:!0,get:function(){return kn.createCreateUnit}}),Object.defineProperty(t,"createAcos",{enumerable:!0,get:function(){return In.createAcos}}),Object.defineProperty(t,"createAcosh",{enumerable:!0,get:function(){return Bn.createAcosh}}),Object.defineProperty(t,"createAcot",{enumerable:!0,get:function(){return zn.createAcot}}),Object.defineProperty(t,"createAcoth",{enumerable:!0,get:function(){return Rn.createAcoth}}),Object.defineProperty(t,"createAcsc",{enumerable:!0,get:function(){return qn.createAcsc}}),Object.defineProperty(t,"createAcsch",{enumerable:!0,get:function(){return Fn.createAcsch}}),Object.defineProperty(t,"createAsec",{enumerable:!0,get:function(){return Un.createAsec}}),Object.defineProperty(t,"createAsech",{enumerable:!0,get:function(){return Ln.createAsech}}),Object.defineProperty(t,"createAsin",{enumerable:!0,get:function(){return Hn.createAsin}}),Object.defineProperty(t,"createAsinh",{enumerable:!0,get:function(){return Zn.createAsinh}}),Object.defineProperty(t,"createAtan",{enumerable:!0,get:function(){return Vn.createAtan}}),Object.defineProperty(t,"createAtan2",{enumerable:!0,get:function(){return Wn.createAtan2}}),Object.defineProperty(t,"createAtanh",{enumerable:!0,get:function(){return Gn.createAtanh}}),Object.defineProperty(t,"createCos",{enumerable:!0,get:function(){return $n.createCos}}),Object.defineProperty(t,"createCosh",{enumerable:!0,get:function(){return Qn.createCosh}}),Object.defineProperty(t,"createCot",{enumerable:!0,get:function(){return Xn.createCot}}),Object.defineProperty(t,"createCoth",{enumerable:!0,get:function(){return Yn.createCoth}}),Object.defineProperty(t,"createCsc",{enumerable:!0,get:function(){return Jn.createCsc}}),Object.defineProperty(t,"createCsch",{enumerable:!0,get:function(){return Kn.createCsch}}),Object.defineProperty(t,"createSec",{enumerable:!0,get:function(){return er.createSec}}),Object.defineProperty(t,"createSech",{enumerable:!0,get:function(){return tr.createSech}}),Object.defineProperty(t,"createSin",{enumerable:!0,get:function(){return nr.createSin}}),Object.defineProperty(t,"createSinh",{enumerable:!0,get:function(){return rr.createSinh}}),Object.defineProperty(t,"createTan",{enumerable:!0,get:function(){return ir.createTan}}),Object.defineProperty(t,"createTanh",{enumerable:!0,get:function(){return ar.createTanh}}),Object.defineProperty(t,"createSetCartesian",{enumerable:!0,get:function(){return or.createSetCartesian}}),Object.defineProperty(t,"createSetDifference",{enumerable:!0,get:function(){return sr.createSetDifference}}),Object.defineProperty(t,"createSetDistinct",{enumerable:!0,get:function(){return cr.createSetDistinct}}),Object.defineProperty(t,"createSetIntersect",{enumerable:!0,get:function(){return ur.createSetIntersect}}),Object.defineProperty(t,"createSetIsSubset",{enumerable:!0,get:function(){return lr.createSetIsSubset}}),Object.defineProperty(t,"createSetMultiplicity",{enumerable:!0,get:function(){return dr.createSetMultiplicity}}),Object.defineProperty(t,"createSetPowerset",{enumerable:!0,get:function(){return fr.createSetPowerset}}),Object.defineProperty(t,"createSetSize",{enumerable:!0,get:function(){return pr.createSetSize}}),Object.defineProperty(t,"createSetSymDifference",{enumerable:!0,get:function(){return mr.createSetSymDifference}}),Object.defineProperty(t,"createSetUnion",{enumerable:!0,get:function(){return hr.createSetUnion}}),Object.defineProperty(t,"createAdd",{enumerable:!0,get:function(){return yr.createAdd}}),Object.defineProperty(t,"createHypot",{enumerable:!0,get:function(){return vr.createHypot}}),Object.defineProperty(t,"createNorm",{enumerable:!0,get:function(){return gr.createNorm}}),Object.defineProperty(t,"createDot",{enumerable:!0,get:function(){return br.createDot}}),Object.defineProperty(t,"createTrace",{enumerable:!0,get:function(){return xr.createTrace}}),Object.defineProperty(t,"createIndex",{enumerable:!0,get:function(){return Dr.createIndex}}),Object.defineProperty(t,"createNode",{enumerable:!0,get:function(){return wr.createNode}}),Object.defineProperty(t,"createAccessorNode",{enumerable:!0,get:function(){return Or.createAccessorNode}}),Object.defineProperty(t,"createArrayNode",{enumerable:!0,get:function(){return Sr.createArrayNode}}),Object.defineProperty(t,"createAssignmentNode",{enumerable:!0,get:function(){return Ar.createAssignmentNode}}),Object.defineProperty(t,"createBlockNode",{enumerable:!0,get:function(){return Er.createBlockNode}}),Object.defineProperty(t,"createConditionalNode",{enumerable:!0,get:function(){return Cr.createConditionalNode}}),Object.defineProperty(t,"createConstantNode",{enumerable:!0,get:function(){return qr.createConstantNode}}),Object.defineProperty(t,"createFunctionAssignmentNode",{enumerable:!0,get:function(){return Fr.createFunctionAssignmentNode}}),Object.defineProperty(t,"createIndexNode",{enumerable:!0,get:function(){return Ur.createIndexNode}}),Object.defineProperty(t,"createObjectNode",{enumerable:!0,get:function(){return Lr.createObjectNode}}),Object.defineProperty(t,"createOperatorNode",{enumerable:!0,get:function(){return Hr.createOperatorNode}}),Object.defineProperty(t,"createParenthesisNode",{enumerable:!0,get:function(){return Zr.createParenthesisNode}}),Object.defineProperty(t,"createRangeNode",{enumerable:!0,get:function(){return Vr.createRangeNode}}),Object.defineProperty(t,"createRelationalNode",{enumerable:!0,get:function(){return Wr.createRelationalNode}}),Object.defineProperty(t,"createSymbolNode",{enumerable:!0,get:function(){return Gr.createSymbolNode}}),Object.defineProperty(t,"createFunctionNode",{enumerable:!0,get:function(){return $r.createFunctionNode}}),Object.defineProperty(t,"createParse",{enumerable:!0,get:function(){return Qr.createParse}}),Object.defineProperty(t,"createCompile",{enumerable:!0,get:function(){return Xr.createCompile}}),Object.defineProperty(t,"createEvaluate",{enumerable:!0,get:function(){return Yr.createEvaluate}}),Object.defineProperty(t,"createParserClass",{enumerable:!0,get:function(){return Jr.createParserClass}}),Object.defineProperty(t,"createParser",{enumerable:!0,get:function(){return Kr.createParser}}),Object.defineProperty(t,"createLup",{enumerable:!0,get:function(){return ei.createLup}}),Object.defineProperty(t,"createQr",{enumerable:!0,get:function(){return ti.createQr}}),Object.defineProperty(t,"createSlu",{enumerable:!0,get:function(){return bi.createSlu}}),Object.defineProperty(t,"createLusolve",{enumerable:!0,get:function(){return Di.createLusolve}}),Object.defineProperty(t,"createHelpClass",{enumerable:!0,get:function(){return _i.createHelpClass}}),Object.defineProperty(t,"createChainClass",{enumerable:!0,get:function(){return wi.createChainClass}}),Object.defineProperty(t,"createHelp",{enumerable:!0,get:function(){return Pc.createHelp}}),Object.defineProperty(t,"createChain",{enumerable:!0,get:function(){return jc.createChain}}),Object.defineProperty(t,"createDet",{enumerable:!0,get:function(){return Ac.createDet}}),Object.defineProperty(t,"createInv",{enumerable:!0,get:function(){return Ec.createInv}}),Object.defineProperty(t,"createEigs",{enumerable:!0,get:function(){return Cc.createEigs}}),Object.defineProperty(t,"createExpm",{enumerable:!0,get:function(){return Tc.createExpm}}),Object.defineProperty(t,"createSqrtm",{enumerable:!0,get:function(){return kc.createSqrtm}}),Object.defineProperty(t,"createDivide",{enumerable:!0,get:function(){return Ic.createDivide}}),Object.defineProperty(t,"createDistance",{enumerable:!0,get:function(){return Bc.createDistance}}),Object.defineProperty(t,"createIntersect",{enumerable:!0,get:function(){return zc.createIntersect}}),Object.defineProperty(t,"createSum",{enumerable:!0,get:function(){return Rc.createSum}}),Object.defineProperty(t,"createMean",{enumerable:!0,get:function(){return qc.createMean}}),Object.defineProperty(t,"createMedian",{enumerable:!0,get:function(){return Fc.createMedian}}),Object.defineProperty(t,"createMad",{enumerable:!0,get:function(){return Uc.createMad}}),Object.defineProperty(t,"createVariance",{enumerable:!0,get:function(){return Lc.createVariance}}),Object.defineProperty(t,"createQuantileSeq",{enumerable:!0,get:function(){return Hc.createQuantileSeq}}),Object.defineProperty(t,"createStd",{enumerable:!0,get:function(){return Zc.createStd}}),Object.defineProperty(t,"createCombinations",{enumerable:!0,get:function(){return Vc.createCombinations}}),Object.defineProperty(t,"createCombinationsWithRep",{enumerable:!0,get:function(){return Wc.createCombinationsWithRep}}),Object.defineProperty(t,"createGamma",{enumerable:!0,get:function(){return Gc.createGamma}}),Object.defineProperty(t,"createFactorial",{enumerable:!0,get:function(){return $c.createFactorial}}),Object.defineProperty(t,"createKldivergence",{enumerable:!0,get:function(){return Qc.createKldivergence}}),Object.defineProperty(t,"createMultinomial",{enumerable:!0,get:function(){return Xc.createMultinomial}}),Object.defineProperty(t,"createPermutations",{enumerable:!0,get:function(){return Yc.createPermutations}}),Object.defineProperty(t,"createPickRandom",{enumerable:!0,get:function(){return eu.createPickRandom}}),Object.defineProperty(t,"createRandom",{enumerable:!0,get:function(){return nu.createRandom}}),Object.defineProperty(t,"createRandomInt",{enumerable:!0,get:function(){return ru.createRandomInt}}),Object.defineProperty(t,"createStirlingS2",{enumerable:!0,get:function(){return iu.createStirlingS2}}),Object.defineProperty(t,"createBellNumbers",{enumerable:!0,get:function(){return au.createBellNumbers}}),Object.defineProperty(t,"createCatalan",{enumerable:!0,get:function(){return ou.createCatalan}}),Object.defineProperty(t,"createComposition",{enumerable:!0,get:function(){return su.createComposition}}),Object.defineProperty(t,"createSimplify",{enumerable:!0,get:function(){return fu.createSimplify}}),Object.defineProperty(t,"createDerivative",{enumerable:!0,get:function(){return pu.createDerivative}}),Object.defineProperty(t,"createRationalize",{enumerable:!0,get:function(){return mu.createRationalize}}),Object.defineProperty(t,"createReviver",{enumerable:!0,get:function(){return hu.createReviver}}),Object.defineProperty(t,"createReplacer",{enumerable:!0,get:function(){return yu.createReplacer}}),Object.defineProperty(t,"createE",{enumerable:!0,get:function(){return gu.createE}}),Object.defineProperty(t,"createUppercaseE",{enumerable:!0,get:function(){return gu.createUppercaseE}}),Object.defineProperty(t,"createFalse",{enumerable:!0,get:function(){return gu.createFalse}}),Object.defineProperty(t,"createI",{enumerable:!0,get:function(){return gu.createI}}),Object.defineProperty(t,"createInfinity",{enumerable:!0,get:function(){return gu.createInfinity}}),Object.defineProperty(t,"createLN10",{enumerable:!0,get:function(){return gu.createLN10}}),Object.defineProperty(t,"createLN2",{enumerable:!0,get:function(){return gu.createLN2}}),Object.defineProperty(t,"createLOG10E",{enumerable:!0,get:function(){return gu.createLOG10E}}),Object.defineProperty(t,"createLOG2E",{enumerable:!0,get:function(){return gu.createLOG2E}}),Object.defineProperty(t,"createNaN",{enumerable:!0,get:function(){return gu.createNaN}}),Object.defineProperty(t,"createNull",{enumerable:!0,get:function(){return gu.createNull}}),Object.defineProperty(t,"createPhi",{enumerable:!0,get:function(){return gu.createPhi}}),Object.defineProperty(t,"createPi",{enumerable:!0,get:function(){return gu.createPi}}),Object.defineProperty(t,"createUppercasePi",{enumerable:!0,get:function(){return gu.createUppercasePi}}),Object.defineProperty(t,"createSQRT1_2",{enumerable:!0,get:function(){return gu.createSQRT1_2}}),Object.defineProperty(t,"createSQRT2",{enumerable:!0,get:function(){return gu.createSQRT2}}),Object.defineProperty(t,"createTau",{enumerable:!0,get:function(){return gu.createTau}}),Object.defineProperty(t,"createTrue",{enumerable:!0,get:function(){return gu.createTrue}}),Object.defineProperty(t,"createVersion",{enumerable:!0,get:function(){return gu.createVersion}}),Object.defineProperty(t,"createAtomicMass",{enumerable:!0,get:function(){return bu.createAtomicMass}}),Object.defineProperty(t,"createAvogadro",{enumerable:!0,get:function(){return bu.createAvogadro}}),Object.defineProperty(t,"createBohrMagneton",{enumerable:!0,get:function(){return bu.createBohrMagneton}}),Object.defineProperty(t,"createBohrRadius",{enumerable:!0,get:function(){return bu.createBohrRadius}}),Object.defineProperty(t,"createBoltzmann",{enumerable:!0,get:function(){return bu.createBoltzmann}}),Object.defineProperty(t,"createClassicalElectronRadius",{enumerable:!0,get:function(){return bu.createClassicalElectronRadius}}),Object.defineProperty(t,"createConductanceQuantum",{enumerable:!0,get:function(){return bu.createConductanceQuantum}}),Object.defineProperty(t,"createCoulomb",{enumerable:!0,get:function(){return bu.createCoulomb}}),Object.defineProperty(t,"createDeuteronMass",{enumerable:!0,get:function(){return bu.createDeuteronMass}}),Object.defineProperty(t,"createEfimovFactor",{enumerable:!0,get:function(){return bu.createEfimovFactor}}),Object.defineProperty(t,"createElectricConstant",{enumerable:!0,get:function(){return bu.createElectricConstant}}),Object.defineProperty(t,"createElectronMass",{enumerable:!0,get:function(){return bu.createElectronMass}}),Object.defineProperty(t,"createElementaryCharge",{enumerable:!0,get:function(){return bu.createElementaryCharge}}),Object.defineProperty(t,"createFaraday",{enumerable:!0,get:function(){return bu.createFaraday}}),Object.defineProperty(t,"createFermiCoupling",{enumerable:!0,get:function(){return bu.createFermiCoupling}}),Object.defineProperty(t,"createFineStructure",{enumerable:!0,get:function(){return bu.createFineStructure}}),Object.defineProperty(t,"createFirstRadiation",{enumerable:!0,get:function(){return bu.createFirstRadiation}}),Object.defineProperty(t,"createGasConstant",{enumerable:!0,get:function(){return bu.createGasConstant}}),Object.defineProperty(t,"createGravitationConstant",{enumerable:!0,get:function(){return bu.createGravitationConstant}}),Object.defineProperty(t,"createGravity",{enumerable:!0,get:function(){return bu.createGravity}}),Object.defineProperty(t,"createHartreeEnergy",{enumerable:!0,get:function(){return bu.createHartreeEnergy}}),Object.defineProperty(t,"createInverseConductanceQuantum",{enumerable:!0,get:function(){return bu.createInverseConductanceQuantum}}),Object.defineProperty(t,"createKlitzing",{enumerable:!0,get:function(){return bu.createKlitzing}}),Object.defineProperty(t,"createLoschmidt",{enumerable:!0,get:function(){return bu.createLoschmidt}}),Object.defineProperty(t,"createMagneticConstant",{enumerable:!0,get:function(){return bu.createMagneticConstant}}),Object.defineProperty(t,"createMagneticFluxQuantum",{enumerable:!0,get:function(){return bu.createMagneticFluxQuantum}}),Object.defineProperty(t,"createMolarMass",{enumerable:!0,get:function(){return bu.createMolarMass}}),Object.defineProperty(t,"createMolarMassC12",{enumerable:!0,get:function(){return bu.createMolarMassC12}}),Object.defineProperty(t,"createMolarPlanckConstant",{enumerable:!0,get:function(){return bu.createMolarPlanckConstant}}),Object.defineProperty(t,"createMolarVolume",{enumerable:!0,get:function(){return bu.createMolarVolume}}),Object.defineProperty(t,"createNeutronMass",{enumerable:!0,get:function(){return bu.createNeutronMass}}),Object.defineProperty(t,"createNuclearMagneton",{enumerable:!0,get:function(){return bu.createNuclearMagneton}}),Object.defineProperty(t,"createPlanckCharge",{enumerable:!0,get:function(){return bu.createPlanckCharge}}),Object.defineProperty(t,"createPlanckConstant",{enumerable:!0,get:function(){return bu.createPlanckConstant}}),Object.defineProperty(t,"createPlanckLength",{enumerable:!0,get:function(){return bu.createPlanckLength}}),Object.defineProperty(t,"createPlanckMass",{enumerable:!0,get:function(){return bu.createPlanckMass}}),Object.defineProperty(t,"createPlanckTemperature",{enumerable:!0,get:function(){return bu.createPlanckTemperature}}),Object.defineProperty(t,"createPlanckTime",{enumerable:!0,get:function(){return bu.createPlanckTime}}),Object.defineProperty(t,"createProtonMass",{enumerable:!0,get:function(){return bu.createProtonMass}}),Object.defineProperty(t,"createQuantumOfCirculation",{enumerable:!0,get:function(){return bu.createQuantumOfCirculation}}),Object.defineProperty(t,"createReducedPlanckConstant",{enumerable:!0,get:function(){return bu.createReducedPlanckConstant}}),Object.defineProperty(t,"createRydberg",{enumerable:!0,get:function(){return bu.createRydberg}}),Object.defineProperty(t,"createSackurTetrode",{enumerable:!0,get:function(){return bu.createSackurTetrode}}),Object.defineProperty(t,"createSecondRadiation",{enumerable:!0,get:function(){return bu.createSecondRadiation}}),Object.defineProperty(t,"createSpeedOfLight",{enumerable:!0,get:function(){return bu.createSpeedOfLight}}),Object.defineProperty(t,"createStefanBoltzmann",{enumerable:!0,get:function(){return bu.createStefanBoltzmann}}),Object.defineProperty(t,"createThomsonCrossSection",{enumerable:!0,get:function(){return bu.createThomsonCrossSection}}),Object.defineProperty(t,"createVacuumImpedance",{enumerable:!0,get:function(){return bu.createVacuumImpedance}}),Object.defineProperty(t,"createWeakMixingAngle",{enumerable:!0,get:function(){return bu.createWeakMixingAngle}}),Object.defineProperty(t,"createWienDisplacement",{enumerable:!0,get:function(){return bu.createWienDisplacement}}),Object.defineProperty(t,"createApplyTransform",{enumerable:!0,get:function(){return xu.createApplyTransform}}),Object.defineProperty(t,"createColumnTransform",{enumerable:!0,get:function(){return Du.createColumnTransform}}),Object.defineProperty(t,"createFilterTransform",{enumerable:!0,get:function(){return wu.createFilterTransform}}),Object.defineProperty(t,"createForEachTransform",{enumerable:!0,get:function(){return Nu.createForEachTransform}}),Object.defineProperty(t,"createIndexTransform",{enumerable:!0,get:function(){return Mu.createIndexTransform}}),Object.defineProperty(t,"createMapTransform",{enumerable:!0,get:function(){return Ou.createMapTransform}}),Object.defineProperty(t,"createMaxTransform",{enumerable:!0,get:function(){return Su.createMaxTransform}}),Object.defineProperty(t,"createMeanTransform",{enumerable:!0,get:function(){return Pu.createMeanTransform}}),Object.defineProperty(t,"createMinTransform",{enumerable:!0,get:function(){return ju.createMinTransform}}),Object.defineProperty(t,"createRangeTransform",{enumerable:!0,get:function(){return Au.createRangeTransform}}),Object.defineProperty(t,"createRowTransform",{enumerable:!0,get:function(){return Eu.createRowTransform}}),Object.defineProperty(t,"createSubsetTransform",{enumerable:!0,get:function(){return Cu.createSubsetTransform}}),Object.defineProperty(t,"createConcatTransform",{enumerable:!0,get:function(){return Tu.createConcatTransform}}),Object.defineProperty(t,"createDiffTransform",{enumerable:!0,get:function(){return ku.createDiffTransform}}),Object.defineProperty(t,"createStdTransform",{enumerable:!0,get:function(){return Iu.createStdTransform}}),Object.defineProperty(t,"createSumTransform",{enumerable:!0,get:function(){return Bu.createSumTransform}}),Object.defineProperty(t,"createVarianceTransform",{enumerable:!0,get:function(){return zu.createVarianceTransform}})})),qu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.matrix=t.SparseMatrix=t.isNegative=t.SQRT2=t.random=t.combinationsWithRep=t.sin=t.csc=t.cos=t.asinh=t.acsch=t.acosh=t.bin=t.mode=t.getMatrixDataType=t.conj=t.sqrt=t.log2=t.exp=t.addScalar=t.unaryMinus=t.fraction=t.string=t.typeOf=t.hasNumericValue=t.clone=t.LN2=t.randomInt=t.pickRandom=t.combinations=t.tanh=t.sinh=t.sech=t.csch=t.coth=t.cosh=t.atanh=t.atan=t.asin=t.asec=t.acsc=t.acot=t.acos=t.isPrime=t.print=t.oct=t.format=t.erf=t.map=t.forEach=t.filter=t.not=t.im=t.arg=t.bitNot=t.square=t.sign=t.multiplyScalar=t.log10=t.expm1=t.cube=t.apply=t.unaryPlus=t.splitUnit=t.complex=t.boolean=t.number=t.equalScalar=t.isNaN=t.isPositive=t.isNumeric=t.isInteger=t.typed=t.phi=t.DenseMatrix=t.version=t.LOG2E=t._Infinity=t.e=t.Fraction=t.weakMixingAngle=t.sackurTetrode=t.fineStructure=t.efimovFactor=t.tau=t.SQRT1_2=t.pi=t._NaN=t.LOG10E=t.LN10=t.i=t.replacer=t.Matrix=t.BigNumber=t._true=t._null=t._false=t.Range=t.Complex=t.ResultSet=void 0,t.setUnion=t.Spa=t.lsolveAll=t.lsolve=t.nthRoots=t.divideScalar=t.xor=t.setIsSubset=t.deepEqual=t.ctranspose=t.column=t.fix=t.setSymDifference=t.setCartesian=t.max=t.equal=t.prod=t.row=t.range=t.cross=t.subtract=t.ceil=t.permutations=t.factorial=t.sum=t.index=t.setPowerset=t.setDistinct=t.cot=t.min=t.sort=t.smallerEq=t.and=t.numeric=t.transpose=t.kron=t.bitOr=t.lcm=t.bignumber=t.gamma=t.quantileSeq=t.trace=t.setSize=t.setMultiplicity=t.setIntersect=t.setDifference=t.tan=t.asech=t.Index=t.partitionSelect=t.largerEq=t.equalText=t.compareNatural=t.rightArithShift=t.dotPow=t.pow=t.to=t.squeeze=t.resize=t.flatten=t.re=t.dotMultiply=t.multiply=t.floor=t.abs=t.isZero=t.composition=t.dot=t.add=t.sec=t.atan2=t.acoth=t.sparse=t.FibonacciHeap=t.ImmutableDenseMatrix=t.unequal=t.larger=t.smaller=t.compareText=t.compare=t.rightLogShift=t.leftShift=t.round=t.hex=t.zeros=t.subset=t.size=t.reshape=t.ones=t.identity=t.diag=t.concat=t.or=t.bitXor=t.bitAnd=t.xgcd=t.nthRoot=t.mod=t.gcd=t.cbrt=void 0,t.planckConstant=t.gasConstant=t.unit=t.rydberg=t.magneticFluxQuantum=t.coulomb=t.mad=t.rotate=t.thomsonCrossSection=t.planckTime=t.molarVolume=t.inverseConductanceQuantum=t.elementaryCharge=t.bohrRadius=t.median=t.rotationMatrix=t.wienDisplacement=t.speedOfLight=t.quantumOfCirculation=t.planckMass=t.nuclearMagneton=t.molarMassC12=t.loschmidt=t.gravity=t.fermiCoupling=t.electricConstant=t.classicalElectronRadius=t.avogadro=t.multinomial=t.sqrtm=t.lusolve=t.norm=t.usolve=t.vacuumImpedance=t.stefanBoltzmann=t.secondRadiation=t.reducedPlanckConstant=t.protonMass=t.planckTemperature=t.planckLength=t.planckCharge=t.neutronMass=t.molarPlanckConstant=t.molarMass=t.magneticConstant=t.klitzing=t.hartreeEnergy=t.gravitationConstant=t.firstRadiation=t.faraday=t.electronMass=t.deuteronMass=t.conductanceQuantum=t.boltzmann=t.bohrMagneton=t.atomicMass=t.std=t.intersect=t.eigs=t.createUnit=t.Unit=t.log1p=t.bellNumbers=t.kldivergence=t.variance=t.mean=t.divide=t.expm=t.inv=t.qr=t.hypot=t.usolveAll=t.dotDivide=t.log=t.diff=t.catalan=t.stirlingS2=t.distance=t.det=t.slu=t.lup=void 0;var n=(0,Ru.createResultSet)({});t.ResultSet=n;var r=(0,Ru.createComplexClass)({});t.Complex=r;var i=(0,Ru.createRangeClass)({});t.Range=i;var a=(0,Ru.createFalse)({});t._false=a;var o=(0,Ru.createNull)({});t._null=o;var c=(0,Ru.createTrue)({});t._true=c;var u=(0,Ru.createBigNumberClass)({config:s.config});t.BigNumber=u;var l=(0,Ru.createMatrixClass)({});t.Matrix=l;var d=(0,Ru.createReplacer)({});t.replacer=d;var f=(0,Ru.createI)({Complex:r});t.i=f;var p=(0,Ru.createLN10)({BigNumber:u,config:s.config});t.LN10=p;var m=(0,Ru.createLOG10E)({BigNumber:u,config:s.config});t.LOG10E=m;var h=(0,Ru.createNaN)({BigNumber:u,config:s.config});t._NaN=h;var y=(0,Ru.createPi)({BigNumber:u,config:s.config});t.pi=y;var v=(0,Ru.createSQRT1_2)({BigNumber:u,config:s.config});t.SQRT1_2=v;var g=(0,Ru.createTau)({BigNumber:u,config:s.config});t.tau=g;var b=(0,Ru.createEfimovFactor)({BigNumber:u,config:s.config});t.efimovFactor=b;var x=(0,Ru.createFineStructure)({BigNumber:u,config:s.config});t.fineStructure=x;var D=(0,Ru.createSackurTetrode)({BigNumber:u,config:s.config});t.sackurTetrode=D;var _=(0,Ru.createWeakMixingAngle)({BigNumber:u,config:s.config});t.weakMixingAngle=_;var w=(0,Ru.createFractionClass)({});t.Fraction=w;var N=(0,Ru.createE)({BigNumber:u,config:s.config});t.e=N;var M=(0,Ru.createInfinity)({BigNumber:u,config:s.config});t._Infinity=M;var O=(0,Ru.createLOG2E)({BigNumber:u,config:s.config});t.LOG2E=O;var S=(0,Ru.createVersion)({});t.version=S;var P=(0,Ru.createDenseMatrixClass)({Matrix:l});t.DenseMatrix=P;var j=(0,Ru.createPhi)({BigNumber:u,config:s.config});t.phi=j;var A=(0,Ru.createTyped)({BigNumber:u,Complex:r,DenseMatrix:P,Fraction:w});t.typed=A;var E=(0,Ru.createIsInteger)({typed:A});t.isInteger=E;var C=(0,Ru.createIsNumeric)({typed:A});t.isNumeric=C;var T=(0,Ru.createIsPositive)({typed:A});t.isPositive=T;var k=(0,Ru.createIsNaN)({typed:A});t.isNaN=k;var I=(0,Ru.createEqualScalar)({config:s.config,typed:A});t.equalScalar=I;var B=(0,Ru.createNumber)({typed:A});t.number=B;var z=(0,Ru.createBoolean)({typed:A});t.boolean=z;var R=(0,Ru.createComplex)({Complex:r,typed:A});t.complex=R;var q=(0,Ru.createSplitUnit)({typed:A});t.splitUnit=q;var F=(0,Ru.createUnaryPlus)({BigNumber:u,config:s.config,typed:A});t.unaryPlus=F;var U=(0,Ru.createApply)({isInteger:E,typed:A});t.apply=U;var L=(0,Ru.createCube)({typed:A});t.cube=L;var H=(0,Ru.createExpm1)({Complex:r,typed:A});t.expm1=H;var Z=(0,Ru.createLog10)({Complex:r,config:s.config,typed:A});t.log10=Z;var V=(0,Ru.createMultiplyScalar)({typed:A});t.multiplyScalar=V;var W=(0,Ru.createSign)({BigNumber:u,Fraction:w,complex:R,typed:A});t.sign=W;var G=(0,Ru.createSquare)({typed:A});t.square=G;var $=(0,Ru.createBitNot)({typed:A});t.bitNot=$;var Q=(0,Ru.createArg)({typed:A});t.arg=Q;var X=(0,Ru.createIm)({typed:A});t.im=X;var Y=(0,Ru.createNot)({typed:A});t.not=Y;var J=(0,Ru.createFilter)({typed:A});t.filter=J;var K=(0,Ru.createForEach)({typed:A});t.forEach=K;var ee=(0,Ru.createMap)({typed:A});t.map=ee;var te=(0,Ru.createErf)({typed:A});t.erf=te;var ne=(0,Ru.createFormat)({typed:A});t.format=ne;var re=(0,Ru.createOct)({typed:A});t.oct=re;var ie=(0,Ru.createPrint)({typed:A});t.print=ie;var ae=(0,Ru.createIsPrime)({typed:A});t.isPrime=ae;var oe=(0,Ru.createAcos)({Complex:r,config:s.config,typed:A});t.acos=oe;var se=(0,Ru.createAcot)({BigNumber:u,typed:A});t.acot=se;var ce=(0,Ru.createAcsc)({BigNumber:u,Complex:r,config:s.config,typed:A});t.acsc=ce;var ue=(0,Ru.createAsec)({BigNumber:u,Complex:r,config:s.config,typed:A});t.asec=ue;var le=(0,Ru.createAsin)({Complex:r,config:s.config,typed:A});t.asin=le;var de=(0,Ru.createAtan)({typed:A});t.atan=de;var fe=(0,Ru.createAtanh)({Complex:r,config:s.config,typed:A});t.atanh=fe;var pe=(0,Ru.createCosh)({typed:A});t.cosh=pe;var me=(0,Ru.createCoth)({BigNumber:u,typed:A});t.coth=me;var he=(0,Ru.createCsch)({BigNumber:u,typed:A});t.csch=he;var ye=(0,Ru.createSech)({BigNumber:u,typed:A});t.sech=ye;var ve=(0,Ru.createSinh)({typed:A});t.sinh=ve;var ge=(0,Ru.createTanh)({typed:A});t.tanh=ge;var be=(0,Ru.createCombinations)({typed:A});t.combinations=be;var xe=(0,Ru.createPickRandom)({config:s.config,typed:A});t.pickRandom=xe;var De=(0,Ru.createRandomInt)({config:s.config,typed:A});t.randomInt=De;var _e=(0,Ru.createLN2)({BigNumber:u,config:s.config});t.LN2=_e;var we=(0,Ru.createClone)({typed:A});t.clone=we;var Ne=(0,Ru.createHasNumericValue)({isNumeric:C,typed:A});t.hasNumericValue=Ne;var Me=(0,Ru.createTypeOf)({typed:A});t.typeOf=Me;var Oe=(0,Ru.createString)({typed:A});t.string=Oe;var Se=(0,Ru.createFraction)({Fraction:w,typed:A});t.fraction=Se;var Pe=(0,Ru.createUnaryMinus)({typed:A});t.unaryMinus=Pe;var je=(0,Ru.createAddScalar)({typed:A});t.addScalar=je;var Ae=(0,Ru.createExp)({typed:A});t.exp=Ae;var Ee=(0,Ru.createLog2)({Complex:r,config:s.config,typed:A});t.log2=Ee;var Ce=(0,Ru.createSqrt)({Complex:r,config:s.config,typed:A});t.sqrt=Ce;var Te=(0,Ru.createConj)({typed:A});t.conj=Te;var ke=(0,Ru.createGetMatrixDataType)({typed:A});t.getMatrixDataType=ke;var Ie=(0,Ru.createMode)({isNaN:k,isNumeric:C,typed:A});t.mode=Ie;var Be=(0,Ru.createBin)({typed:A});t.bin=Be;var ze=(0,Ru.createAcosh)({Complex:r,config:s.config,typed:A});t.acosh=ze;var Re=(0,Ru.createAcsch)({BigNumber:u,typed:A});t.acsch=Re;var qe=(0,Ru.createAsinh)({typed:A});t.asinh=qe;var Fe=(0,Ru.createCos)({typed:A});t.cos=Fe;var Ue=(0,Ru.createCsc)({BigNumber:u,typed:A});t.csc=Ue;var Le=(0,Ru.createSin)({typed:A});t.sin=Le;var He=(0,Ru.createCombinationsWithRep)({typed:A});t.combinationsWithRep=He;var Ze=(0,Ru.createRandom)({config:s.config,typed:A});t.random=Ze;var Ve=(0,Ru.createSQRT2)({BigNumber:u,config:s.config});t.SQRT2=Ve;var We=(0,Ru.createIsNegative)({typed:A});t.isNegative=We;var Ge=(0,Ru.createSparseMatrixClass)({Matrix:l,equalScalar:I,typed:A});t.SparseMatrix=Ge;var $e=(0,Ru.createMatrix)({DenseMatrix:P,Matrix:l,SparseMatrix:Ge,typed:A});t.matrix=$e;var Qe=(0,Ru.createCbrt)({BigNumber:u,Complex:r,Fraction:w,config:s.config,isNegative:We,matrix:$e,typed:A,unaryMinus:Pe});t.cbrt=Qe;var Xe=(0,Ru.createGcd)({BigNumber:u,DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.gcd=Xe;var Ye=(0,Ru.createMod)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.mod=Ye;var Je=(0,Ru.createNthRoot)({BigNumber:u,equalScalar:I,matrix:$e,typed:A});t.nthRoot=Je;var Ke=(0,Ru.createXgcd)({BigNumber:u,config:s.config,matrix:$e,typed:A});t.xgcd=Ke;var et=(0,Ru.createBitAnd)({equalScalar:I,matrix:$e,typed:A});t.bitAnd=et;var tt=(0,Ru.createBitXor)({DenseMatrix:P,matrix:$e,typed:A});t.bitXor=tt;var nt=(0,Ru.createOr)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.or=nt;var rt=(0,Ru.createConcat)({isInteger:E,matrix:$e,typed:A});t.concat=rt;var it=(0,Ru.createDiag)({DenseMatrix:P,SparseMatrix:Ge,matrix:$e,typed:A});t.diag=it;var at=(0,Ru.createIdentity)({BigNumber:u,DenseMatrix:P,SparseMatrix:Ge,config:s.config,matrix:$e,typed:A});t.identity=at;var ot=(0,Ru.createOnes)({BigNumber:u,config:s.config,matrix:$e,typed:A});t.ones=ot;var st=(0,Ru.createReshape)({isInteger:E,matrix:$e,typed:A});t.reshape=st;var ct=(0,Ru.createSize)({matrix:$e,config:s.config,typed:A});t.size=ct;var ut=(0,Ru.createSubset)({matrix:$e,typed:A});t.subset=ut;var lt=(0,Ru.createZeros)({BigNumber:u,config:s.config,matrix:$e,typed:A});t.zeros=lt;var dt=(0,Ru.createHex)({typed:A});t.hex=dt;var ft=(0,Ru.createRound)({BigNumber:u,DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.round=ft;var pt=(0,Ru.createLeftShift)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.leftShift=pt;var mt=(0,Ru.createRightLogShift)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.rightLogShift=mt;var ht=(0,Ru.createCompare)({BigNumber:u,DenseMatrix:P,Fraction:w,config:s.config,equalScalar:I,matrix:$e,typed:A});t.compare=ht;var yt=(0,Ru.createCompareText)({matrix:$e,typed:A});t.compareText=yt;var vt=(0,Ru.createSmaller)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.smaller=vt;var gt=(0,Ru.createLarger)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.larger=gt;var bt=(0,Ru.createUnequal)({DenseMatrix:P,config:s.config,equalScalar:I,matrix:$e,typed:A});t.unequal=bt;var xt=(0,Ru.createImmutableDenseMatrixClass)({DenseMatrix:P,smaller:vt});t.ImmutableDenseMatrix=xt;var Dt=(0,Ru.createFibonacciHeapClass)({larger:gt,smaller:vt});t.FibonacciHeap=Dt;var _t=(0,Ru.createSparse)({SparseMatrix:Ge,typed:A});t.sparse=_t;var wt=(0,Ru.createAcoth)({BigNumber:u,Complex:r,config:s.config,typed:A});t.acoth=wt;var Nt=(0,Ru.createAtan2)({BigNumber:u,DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.atan2=Nt;var Mt=(0,Ru.createSec)({BigNumber:u,typed:A});t.sec=Mt;var Ot=(0,Ru.createAdd)({DenseMatrix:P,SparseMatrix:Ge,addScalar:je,equalScalar:I,matrix:$e,typed:A});t.add=Ot;var St=(0,Ru.createDot)({addScalar:je,conj:Te,multiplyScalar:V,size:ct,typed:A});t.dot=St;var Pt=(0,Ru.createComposition)({addScalar:je,combinations:be,isInteger:E,isNegative:We,isPositive:T,larger:gt,typed:A});t.composition=Pt;var jt=(0,Ru.createIsZero)({typed:A});t.isZero=jt;var At=(0,Ru.createAbs)({typed:A});t.abs=At;var Et=(0,Ru.createFloor)({config:s.config,equalScalar:I,matrix:$e,round:ft,typed:A});t.floor=Et;var Ct=(0,Ru.createMultiply)({addScalar:je,dot:St,equalScalar:I,matrix:$e,multiplyScalar:V,typed:A});t.multiply=Ct;var Tt=(0,Ru.createDotMultiply)({equalScalar:I,matrix:$e,multiplyScalar:V,typed:A});t.dotMultiply=Tt;var kt=(0,Ru.createRe)({typed:A});t.re=kt;var It=(0,Ru.createFlatten)({matrix:$e,typed:A});t.flatten=It;var Bt=(0,Ru.createResize)({config:s.config,matrix:$e});t.resize=Bt;var zt=(0,Ru.createSqueeze)({matrix:$e,typed:A});t.squeeze=zt;var Rt=(0,Ru.createTo)({matrix:$e,typed:A});t.to=Rt;var qt=(0,Ru.createPow)({Complex:r,config:s.config,fraction:Se,identity:at,matrix:$e,multiply:Ct,number:B,typed:A});t.pow=qt;var Ft=(0,Ru.createDotPow)({DenseMatrix:P,equalScalar:I,matrix:$e,pow:qt,typed:A});t.dotPow=Ft;var Ut=(0,Ru.createRightArithShift)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.rightArithShift=Ut;var Lt=(0,Ru.createCompareNatural)({compare:ht,typed:A});t.compareNatural=Lt;var Ht=(0,Ru.createEqualText)({compareText:yt,isZero:jt,typed:A});t.equalText=Ht;var Zt=(0,Ru.createLargerEq)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.largerEq=Zt;var Vt=(0,Ru.createPartitionSelect)({compare:ht,isNaN:k,isNumeric:C,typed:A});t.partitionSelect=Vt;var Wt=(0,Ru.createIndexClass)({ImmutableDenseMatrix:xt});t.Index=Wt;var Gt=(0,Ru.createAsech)({BigNumber:u,Complex:r,config:s.config,typed:A});t.asech=Gt;var $t=(0,Ru.createTan)({typed:A});t.tan=$t;var Qt=(0,Ru.createSetDifference)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setDifference=Qt;var Xt=(0,Ru.createSetIntersect)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setIntersect=Xt;var Yt=(0,Ru.createSetMultiplicity)({Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setMultiplicity=Yt;var Jt=(0,Ru.createSetSize)({compareNatural:Lt,typed:A});t.setSize=Jt;var Kt=(0,Ru.createTrace)({add:Ot,matrix:$e,typed:A});t.trace=Kt;var en=(0,Ru.createQuantileSeq)({add:Ot,compare:ht,multiply:Ct,partitionSelect:Vt,typed:A});t.quantileSeq=en;var tn=(0,Ru.createGamma)({BigNumber:u,Complex:r,config:s.config,multiplyScalar:V,pow:qt,typed:A});t.gamma=tn;var nn=(0,Ru.createBignumber)({BigNumber:u,typed:A});t.bignumber=nn;var rn=(0,Ru.createLcm)({equalScalar:I,matrix:$e,typed:A});t.lcm=rn;var an=(0,Ru.createBitOr)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.bitOr=an;var on=(0,Ru.createKron)({matrix:$e,multiplyScalar:V,typed:A});t.kron=on;var sn=(0,Ru.createTranspose)({matrix:$e,typed:A});t.transpose=sn;var cn=(0,Ru.createNumeric)({bignumber:nn,fraction:Se,number:B});t.numeric=cn;var un=(0,Ru.createAnd)({equalScalar:I,matrix:$e,not:Y,typed:A,zeros:lt});t.and=un;var ln=(0,Ru.createSmallerEq)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.smallerEq=ln;var dn=(0,Ru.createSort)({compare:ht,compareNatural:Lt,matrix:$e,typed:A});t.sort=dn;var fn=(0,Ru.createMin)({config:s.config,numeric:cn,smaller:vt,typed:A});t.min=fn;var pn=(0,Ru.createCot)({BigNumber:u,typed:A});t.cot=pn;var mn=(0,Ru.createSetDistinct)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setDistinct=mn;var hn=(0,Ru.createSetPowerset)({Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setPowerset=hn;var yn=(0,Ru.createIndex)({Index:Wt,typed:A});t.index=yn;var vn=(0,Ru.createSum)({add:Ot,config:s.config,numeric:cn,typed:A});t.sum=vn;var gn=(0,Ru.createFactorial)({gamma:tn,typed:A});t.factorial=gn;var bn=(0,Ru.createPermutations)({factorial:gn,typed:A});t.permutations=bn;var xn=(0,Ru.createCeil)({config:s.config,equalScalar:I,matrix:$e,round:ft,typed:A});t.ceil=xn;var Dn=(0,Ru.createSubtract)({DenseMatrix:P,addScalar:je,equalScalar:I,matrix:$e,typed:A,unaryMinus:Pe});t.subtract=Dn;var _n=(0,Ru.createCross)({matrix:$e,multiply:Ct,subtract:Dn,typed:A});t.cross=_n;var wn=(0,Ru.createRange)({bignumber:nn,matrix:$e,config:s.config,larger:gt,largerEq:Zt,smaller:vt,smallerEq:ln,typed:A});t.range=wn;var Nn=(0,Ru.createRow)({Index:Wt,matrix:$e,range:wn,typed:A});t.row=Nn;var Mn=(0,Ru.createProd)({config:s.config,multiplyScalar:V,numeric:cn,typed:A});t.prod=Mn;var On=(0,Ru.createEqual)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.equal=On;var Sn=(0,Ru.createMax)({config:s.config,larger:gt,numeric:cn,typed:A});t.max=Sn;var Pn=(0,Ru.createSetCartesian)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setCartesian=Pn;var jn=(0,Ru.createSetSymDifference)({Index:Wt,concat:rt,setDifference:Qt,size:ct,subset:ut,typed:A});t.setSymDifference=jn;var An=(0,Ru.createFix)({Complex:r,ceil:xn,floor:Et,matrix:$e,typed:A});t.fix=An;var En=(0,Ru.createColumn)({Index:Wt,matrix:$e,range:wn,typed:A});t.column=En;var Cn=(0,Ru.createCtranspose)({conj:Te,transpose:sn,typed:A});t.ctranspose=Cn;var Tn=(0,Ru.createDeepEqual)({equal:On,typed:A});t.deepEqual=Tn;var kn=(0,Ru.createSetIsSubset)({Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setIsSubset=kn;var In=(0,Ru.createXor)({DenseMatrix:P,matrix:$e,typed:A});t.xor=In;var Bn=(0,Ru.createDivideScalar)({numeric:cn,typed:A});t.divideScalar=Bn;var zn=(0,Ru.createNthRoots)({Complex:r,config:s.config,divideScalar:Bn,typed:A});t.nthRoots=zn;var Rn=(0,Ru.createLsolve)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.lsolve=Rn;var qn=(0,Ru.createLsolveAll)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.lsolveAll=qn;var Fn=(0,Ru.createSpaClass)({FibonacciHeap:Dt,addScalar:je,equalScalar:I});t.Spa=Fn;var Un=(0,Ru.createSetUnion)({Index:Wt,concat:rt,setIntersect:Xt,setSymDifference:jn,size:ct,subset:ut,typed:A});t.setUnion=Un;var Ln=(0,Ru.createLup)({DenseMatrix:P,Spa:Fn,SparseMatrix:Ge,abs:At,addScalar:je,divideScalar:Bn,equalScalar:I,larger:gt,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A,unaryMinus:Pe});t.lup=Ln;var Hn=(0,Ru.createSlu)({SparseMatrix:Ge,abs:At,add:Ot,divideScalar:Bn,larger:gt,largerEq:Zt,multiply:Ct,subtract:Dn,transpose:sn,typed:A});t.slu=Hn;var Zn=(0,Ru.createDet)({lup:Ln,matrix:$e,multiply:Ct,subtract:Dn,typed:A,unaryMinus:Pe});t.det=Zn;var Vn=(0,Ru.createDistance)({abs:At,addScalar:je,divideScalar:Bn,multiplyScalar:V,sqrt:Ce,subtract:Dn,typed:A,unaryMinus:Pe});t.distance=Vn;var Wn=(0,Ru.createStirlingS2)({addScalar:je,combinations:be,divideScalar:Bn,factorial:gn,isInteger:E,isNegative:We,larger:gt,multiplyScalar:V,pow:qt,subtract:Dn,typed:A});t.stirlingS2=Wn;var Gn=(0,Ru.createCatalan)({addScalar:je,combinations:be,divideScalar:Bn,isInteger:E,isNegative:We,multiplyScalar:V,typed:A});t.catalan=Gn;var $n=(0,Ru.createDiff)({matrix:$e,number:B,subtract:Dn,typed:A});t.diff=$n;var Qn=(0,Ru.createLog)({Complex:r,config:s.config,divideScalar:Bn,typed:A});t.log=Qn;var Xn=(0,Ru.createDotDivide)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,typed:A});t.dotDivide=Xn;var Yn=(0,Ru.createUsolveAll)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.usolveAll=Yn;var Jn=(0,Ru.createHypot)({abs:At,addScalar:je,divideScalar:Bn,isPositive:T,multiplyScalar:V,smaller:vt,sqrt:Ce,typed:A});t.hypot=Jn;var Kn=(0,Ru.createQr)({addScalar:je,complex:R,conj:Te,divideScalar:Bn,equal:On,identity:at,isZero:jt,matrix:$e,multiplyScalar:V,sign:W,sqrt:Ce,subtract:Dn,typed:A,unaryMinus:Pe,zeros:lt});t.qr=Kn;var er=(0,Ru.createInv)({abs:At,addScalar:je,det:Zn,divideScalar:Bn,identity:at,matrix:$e,multiply:Ct,typed:A,unaryMinus:Pe});t.inv=er;var tr=(0,Ru.createExpm)({abs:At,add:Ot,identity:at,inv:er,multiply:Ct,typed:A});t.expm=tr;var nr=(0,Ru.createDivide)({divideScalar:Bn,equalScalar:I,inv:er,matrix:$e,multiply:Ct,typed:A});t.divide=nr;var rr=(0,Ru.createMean)({add:Ot,divide:nr,typed:A});t.mean=rr;var ir=(0,Ru.createVariance)({add:Ot,apply:U,divide:nr,isNaN:k,multiply:Ct,subtract:Dn,typed:A});t.variance=ir;var ar=(0,Ru.createKldivergence)({divide:nr,dotDivide:Xn,isNumeric:C,log:Qn,matrix:$e,multiply:Ct,sum:vn,typed:A});t.kldivergence=ar;var or=(0,Ru.createBellNumbers)({addScalar:je,isInteger:E,isNegative:We,stirlingS2:Wn,typed:A});t.bellNumbers=or;var sr=(0,Ru.createLog1p)({Complex:r,config:s.config,divideScalar:Bn,log:Qn,typed:A});t.log1p=sr;var cr=(0,Ru.createUnitClass)({BigNumber:u,Complex:r,Fraction:w,abs:At,addScalar:je,config:s.config,divideScalar:Bn,equal:On,fix:An,format:ne,isNumeric:C,multiplyScalar:V,number:B,pow:qt,round:ft,subtract:Dn});t.Unit=cr;var ur=(0,Ru.createCreateUnit)({Unit:cr,typed:A});t.createUnit=ur;var lr=(0,Ru.createEigs)({abs:At,add:Ot,addScalar:je,atan:de,bignumber:nn,config:s.config,cos:Fe,equal:On,inv:er,matrix:$e,multiply:Ct,multiplyScalar:V,sin:Le,subtract:Dn,typed:A});t.eigs=lr;var dr=(0,Ru.createIntersect)({abs:At,add:Ot,addScalar:je,config:s.config,divideScalar:Bn,equalScalar:I,matrix:$e,multiply:Ct,multiplyScalar:V,smaller:vt,subtract:Dn,typed:A});t.intersect=dr;var fr=(0,Ru.createStd)({sqrt:Ce,typed:A,variance:ir});t.std=fr;var pr=(0,Ru.createAtomicMass)({BigNumber:u,Unit:cr,config:s.config});t.atomicMass=pr;var mr=(0,Ru.createBohrMagneton)({BigNumber:u,Unit:cr,config:s.config});t.bohrMagneton=mr;var hr=(0,Ru.createBoltzmann)({BigNumber:u,Unit:cr,config:s.config});t.boltzmann=hr;var yr=(0,Ru.createConductanceQuantum)({BigNumber:u,Unit:cr,config:s.config});t.conductanceQuantum=yr;var vr=(0,Ru.createDeuteronMass)({BigNumber:u,Unit:cr,config:s.config});t.deuteronMass=vr;var gr=(0,Ru.createElectronMass)({BigNumber:u,Unit:cr,config:s.config});t.electronMass=gr;var br=(0,Ru.createFaraday)({BigNumber:u,Unit:cr,config:s.config});t.faraday=br;var xr=(0,Ru.createFirstRadiation)({BigNumber:u,Unit:cr,config:s.config});t.firstRadiation=xr;var Dr=(0,Ru.createGravitationConstant)({BigNumber:u,Unit:cr,config:s.config});t.gravitationConstant=Dr;var _r=(0,Ru.createHartreeEnergy)({BigNumber:u,Unit:cr,config:s.config});t.hartreeEnergy=_r;var wr=(0,Ru.createKlitzing)({BigNumber:u,Unit:cr,config:s.config});t.klitzing=wr;var Nr=(0,Ru.createMagneticConstant)({BigNumber:u,Unit:cr,config:s.config});t.magneticConstant=Nr;var Mr=(0,Ru.createMolarMass)({BigNumber:u,Unit:cr,config:s.config});t.molarMass=Mr;var Or=(0,Ru.createMolarPlanckConstant)({BigNumber:u,Unit:cr,config:s.config});t.molarPlanckConstant=Or;var Sr=(0,Ru.createNeutronMass)({BigNumber:u,Unit:cr,config:s.config});t.neutronMass=Sr;var Pr=(0,Ru.createPlanckCharge)({BigNumber:u,Unit:cr,config:s.config});t.planckCharge=Pr;var jr=(0,Ru.createPlanckLength)({BigNumber:u,Unit:cr,config:s.config});t.planckLength=jr;var Ar=(0,Ru.createPlanckTemperature)({BigNumber:u,Unit:cr,config:s.config});t.planckTemperature=Ar;var Er=(0,Ru.createProtonMass)({BigNumber:u,Unit:cr,config:s.config});t.protonMass=Er;var Cr=(0,Ru.createReducedPlanckConstant)({BigNumber:u,Unit:cr,config:s.config});t.reducedPlanckConstant=Cr;var Tr=(0,Ru.createSecondRadiation)({BigNumber:u,Unit:cr,config:s.config});t.secondRadiation=Tr;var kr=(0,Ru.createStefanBoltzmann)({BigNumber:u,Unit:cr,config:s.config});t.stefanBoltzmann=kr;var Ir=(0,Ru.createVacuumImpedance)({BigNumber:u,Unit:cr,config:s.config});t.vacuumImpedance=Ir;var Br=(0,Ru.createUsolve)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.usolve=Br;var zr=(0,Ru.createNorm)({abs:At,add:Ot,conj:Te,ctranspose:Cn,eigs:lr,equalScalar:I,larger:gt,matrix:$e,multiply:Ct,pow:qt,smaller:vt,sqrt:Ce,typed:A});t.norm=zr;var Rr=(0,Ru.createLusolve)({DenseMatrix:P,lsolve:Rn,lup:Ln,matrix:$e,slu:Hn,typed:A,usolve:Br});t.lusolve=Rr;var qr=(0,Ru.createSqrtm)({abs:At,add:Ot,identity:at,inv:er,max:Sn,multiply:Ct,size:ct,sqrt:Ce,subtract:Dn,typed:A});t.sqrtm=qr;var Fr=(0,Ru.createMultinomial)({add:Ot,divide:nr,factorial:gn,isInteger:E,isPositive:T,multiply:Ct,typed:A});t.multinomial=Fr;var Ur=(0,Ru.createAvogadro)({BigNumber:u,Unit:cr,config:s.config});t.avogadro=Ur;var Lr=(0,Ru.createClassicalElectronRadius)({BigNumber:u,Unit:cr,config:s.config});t.classicalElectronRadius=Lr;var Hr=(0,Ru.createElectricConstant)({BigNumber:u,Unit:cr,config:s.config});t.electricConstant=Hr;var Zr=(0,Ru.createFermiCoupling)({BigNumber:u,Unit:cr,config:s.config});t.fermiCoupling=Zr;var Vr=(0,Ru.createGravity)({BigNumber:u,Unit:cr,config:s.config});t.gravity=Vr;var Wr=(0,Ru.createLoschmidt)({BigNumber:u,Unit:cr,config:s.config});t.loschmidt=Wr;var Gr=(0,Ru.createMolarMassC12)({BigNumber:u,Unit:cr,config:s.config});t.molarMassC12=Gr;var $r=(0,Ru.createNuclearMagneton)({BigNumber:u,Unit:cr,config:s.config});t.nuclearMagneton=$r;var Qr=(0,Ru.createPlanckMass)({BigNumber:u,Unit:cr,config:s.config});t.planckMass=Qr;var Xr=(0,Ru.createQuantumOfCirculation)({BigNumber:u,Unit:cr,config:s.config});t.quantumOfCirculation=Xr;var Yr=(0,Ru.createSpeedOfLight)({BigNumber:u,Unit:cr,config:s.config});t.speedOfLight=Yr;var Jr=(0,Ru.createWienDisplacement)({BigNumber:u,Unit:cr,config:s.config});t.wienDisplacement=Jr;var Kr=(0,Ru.createRotationMatrix)({BigNumber:u,DenseMatrix:P,SparseMatrix:Ge,addScalar:je,config:s.config,cos:Fe,matrix:$e,multiplyScalar:V,norm:zr,sin:Le,typed:A,unaryMinus:Pe});t.rotationMatrix=Kr;var ei=(0,Ru.createMedian)({add:Ot,compare:ht,divide:nr,partitionSelect:Vt,typed:A});t.median=ei;var ti=(0,Ru.createBohrRadius)({BigNumber:u,Unit:cr,config:s.config});t.bohrRadius=ti;var ni=(0,Ru.createElementaryCharge)({BigNumber:u,Unit:cr,config:s.config});t.elementaryCharge=ni;var ri=(0,Ru.createInverseConductanceQuantum)({BigNumber:u,Unit:cr,config:s.config});t.inverseConductanceQuantum=ri;var ii=(0,Ru.createMolarVolume)({BigNumber:u,Unit:cr,config:s.config});t.molarVolume=ii;var ai=(0,Ru.createPlanckTime)({BigNumber:u,Unit:cr,config:s.config});t.planckTime=ai;var oi=(0,Ru.createThomsonCrossSection)({BigNumber:u,Unit:cr,config:s.config});t.thomsonCrossSection=oi;var si=(0,Ru.createRotate)({multiply:Ct,rotationMatrix:Kr,typed:A});t.rotate=si;var ci=(0,Ru.createMad)({abs:At,map:ee,median:ei,subtract:Dn,typed:A});t.mad=ci;var ui=(0,Ru.createCoulomb)({BigNumber:u,Unit:cr,config:s.config});t.coulomb=ui;var li=(0,Ru.createMagneticFluxQuantum)({BigNumber:u,Unit:cr,config:s.config});t.magneticFluxQuantum=li;var di=(0,Ru.createRydberg)({BigNumber:u,Unit:cr,config:s.config});t.rydberg=di;var fi=(0,Ru.createUnitFunction)({Unit:cr,typed:A});t.unit=fi;var pi=(0,Ru.createGasConstant)({BigNumber:u,Unit:cr,config:s.config});t.gasConstant=pi;var mi=(0,Ru.createPlanckConstant)({BigNumber:u,Unit:cr,config:s.config});t.planckConstant=mi})),Fu=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"docs",{enumerable:!0,get:function(){return Sc.embeddedDocs}}),t.derivative=t.parser=t.rationalize=t.simplify=t.compile=t.help=t.Parser=t.Help=t.evaluate=t.parse=t.FunctionNode=t.SymbolNode=t.AssignmentNode=t.IndexNode=t.AccessorNode=t.chain=t.FunctionAssignmentNode=t.RangeNode=t.OperatorNode=t.ConditionalNode=t.reviver=t.Chain=t.RelationalNode=t.ParenthesisNode=t.ObjectNode=t.ConstantNode=t.BlockNode=t.ArrayNode=t.Node=void 0;var r={},i={},a={},o=(0,Ru.createNode)({mathWithTransform:i});t.Node=o;var c=(0,Ru.createArrayNode)({Node:o});t.ArrayNode=c;var u=(0,Ru.createBlockNode)({Node:o,ResultSet:qu.ResultSet});t.BlockNode=u;var l=(0,Ru.createConstantNode)({Node:o});t.ConstantNode=l;var d=(0,Ru.createObjectNode)({Node:o});t.ObjectNode=d;var f=(0,Ru.createParenthesisNode)({Node:o});t.ParenthesisNode=f;var p=(0,Ru.createRelationalNode)({Node:o});t.RelationalNode=p;var m=(0,Ru.createChainClass)({math:r});t.Chain=m;var h=(0,Ru.createReviver)({classes:a});t.reviver=h;var y=(0,Ru.createConditionalNode)({Node:o});t.ConditionalNode=y;var v=(0,Ru.createOperatorNode)({Node:o});t.OperatorNode=v;var g=(0,Ru.createRangeNode)({Node:o});t.RangeNode=g;var b=(0,Ru.createFunctionAssignmentNode)({Node:o,typed:qu.typed});t.FunctionAssignmentNode=b;var x=(0,Ru.createChain)({Chain:m,typed:qu.typed});t.chain=x;var D=(0,Ru.createAccessorNode)({Node:o,subset:qu.subset});t.AccessorNode=D;var _=(0,Ru.createIndexNode)({Node:o,Range:qu.Range,size:qu.size});t.IndexNode=_;var w=(0,Ru.createAssignmentNode)({matrix:qu.matrix,Node:o,subset:qu.subset});t.AssignmentNode=w;var N=(0,Ru.createSymbolNode)({Unit:qu.Unit,Node:o,math:r});t.SymbolNode=N;var M=(0,Ru.createFunctionNode)({Node:o,SymbolNode:N,math:r});t.FunctionNode=M;var O=(0,Ru.createParse)({AccessorNode:D,ArrayNode:c,AssignmentNode:w,BlockNode:u,ConditionalNode:y,ConstantNode:l,FunctionAssignmentNode:b,FunctionNode:M,IndexNode:_,ObjectNode:d,OperatorNode:v,ParenthesisNode:f,RangeNode:g,RelationalNode:p,SymbolNode:N,config:s.config,numeric:qu.numeric,typed:qu.typed});t.parse=O;var S=(0,Ru.createEvaluate)({parse:O,typed:qu.typed});t.evaluate=S;var P=(0,Ru.createHelpClass)({parse:O});t.Help=P;var j=(0,Ru.createParserClass)({parse:O});t.Parser=j;var A=(0,Ru.createHelp)({Help:P,mathWithTransform:i,typed:qu.typed});t.help=A;var E=(0,Ru.createCompile)({parse:O,typed:qu.typed});t.compile=E;var C=(0,Ru.createSimplify)({bignumber:qu.bignumber,fraction:qu.fraction,ConstantNode:l,FunctionNode:M,OperatorNode:v,ParenthesisNode:f,SymbolNode:N,add:qu.add,config:s.config,divide:qu.divide,equal:qu.equal,isZero:qu.isZero,mathWithTransform:i,multiply:qu.multiply,parse:O,pow:qu.pow,subtract:qu.subtract,typed:qu.typed});t.simplify=C;var T=(0,Ru.createRationalize)({bignumber:qu.bignumber,fraction:qu.fraction,ConstantNode:l,FunctionNode:M,OperatorNode:v,ParenthesisNode:f,SymbolNode:N,add:qu.add,config:s.config,divide:qu.divide,equal:qu.equal,isZero:qu.isZero,mathWithTransform:i,multiply:qu.multiply,parse:O,pow:qu.pow,simplify:C,subtract:qu.subtract,typed:qu.typed});t.rationalize=T;var k=(0,Ru.createParser)({Parser:j,typed:qu.typed});t.parser=k;var I=(0,Ru.createDerivative)({ConstantNode:l,FunctionNode:M,OperatorNode:v,ParenthesisNode:f,SymbolNode:N,config:s.config,equal:qu.equal,isZero:qu.isZero,numeric:qu.numeric,parse:O,simplify:C,typed:qu.typed});t.derivative=I,n(r,{reviver:h,false:qu._false,null:qu._null,true:qu._true,replacer:qu.replacer,i:qu.i,LN10:qu.LN10,LOG10E:qu.LOG10E,NaN:qu._NaN,pi:qu.pi,SQRT1_2:qu.SQRT1_2,tau:qu.tau,efimovFactor:qu.efimovFactor,fineStructure:qu.fineStructure,sackurTetrode:qu.sackurTetrode,weakMixingAngle:qu.weakMixingAngle,e:qu.e,Infinity:qu._Infinity,LOG2E:qu.LOG2E,PI:qu.pi,version:qu.version,E:qu.e,phi:qu.phi,typed:qu.typed,isInteger:qu.isInteger,isNumeric:qu.isNumeric,isPositive:qu.isPositive,isNaN:qu.isNaN,equalScalar:qu.equalScalar,number:qu.number,boolean:qu.boolean,complex:qu.complex,splitUnit:qu.splitUnit,unaryPlus:qu.unaryPlus,apply:qu.apply,cube:qu.cube,expm1:qu.expm1,log10:qu.log10,multiplyScalar:qu.multiplyScalar,sign:qu.sign,square:qu.square,bitNot:qu.bitNot,arg:qu.arg,im:qu.im,not:qu.not,filter:qu.filter,forEach:qu.forEach,map:qu.map,erf:qu.erf,format:qu.format,oct:qu.oct,print:qu.print,isPrime:qu.isPrime,acos:qu.acos,acot:qu.acot,acsc:qu.acsc,asec:qu.asec,asin:qu.asin,atan:qu.atan,atanh:qu.atanh,cosh:qu.cosh,coth:qu.coth,csch:qu.csch,sech:qu.sech,sinh:qu.sinh,tanh:qu.tanh,chain:x,combinations:qu.combinations,pickRandom:qu.pickRandom,randomInt:qu.randomInt,LN2:qu.LN2,clone:qu.clone,hasNumericValue:qu.hasNumericValue,typeOf:qu.typeOf,string:qu.string,fraction:qu.fraction,unaryMinus:qu.unaryMinus,addScalar:qu.addScalar,exp:qu.exp,log2:qu.log2,sqrt:qu.sqrt,conj:qu.conj,getMatrixDataType:qu.getMatrixDataType,mode:qu.mode,bin:qu.bin,acosh:qu.acosh,acsch:qu.acsch,asinh:qu.asinh,cos:qu.cos,csc:qu.csc,sin:qu.sin,combinationsWithRep:qu.combinationsWithRep,random:qu.random,SQRT2:qu.SQRT2,isNegative:qu.isNegative,matrix:qu.matrix,cbrt:qu.cbrt,gcd:qu.gcd,mod:qu.mod,nthRoot:qu.nthRoot,xgcd:qu.xgcd,bitAnd:qu.bitAnd,bitXor:qu.bitXor,or:qu.or,concat:qu.concat,diag:qu.diag,identity:qu.identity,ones:qu.ones,reshape:qu.reshape,size:qu.size,subset:qu.subset,zeros:qu.zeros,hex:qu.hex,round:qu.round,leftShift:qu.leftShift,rightLogShift:qu.rightLogShift,compare:qu.compare,compareText:qu.compareText,smaller:qu.smaller,larger:qu.larger,unequal:qu.unequal,sparse:qu.sparse,acoth:qu.acoth,atan2:qu.atan2,sec:qu.sec,add:qu.add,dot:qu.dot,composition:qu.composition,isZero:qu.isZero,abs:qu.abs,floor:qu.floor,multiply:qu.multiply,dotMultiply:qu.dotMultiply,re:qu.re,flatten:qu.flatten,resize:qu.resize,squeeze:qu.squeeze,to:qu.to,pow:qu.pow,dotPow:qu.dotPow,rightArithShift:qu.rightArithShift,compareNatural:qu.compareNatural,equalText:qu.equalText,largerEq:qu.largerEq,partitionSelect:qu.partitionSelect,asech:qu.asech,tan:qu.tan,setDifference:qu.setDifference,setIntersect:qu.setIntersect,setMultiplicity:qu.setMultiplicity,setSize:qu.setSize,trace:qu.trace,quantileSeq:qu.quantileSeq,gamma:qu.gamma,bignumber:qu.bignumber,lcm:qu.lcm,bitOr:qu.bitOr,kron:qu.kron,transpose:qu.transpose,numeric:qu.numeric,and:qu.and,smallerEq:qu.smallerEq,sort:qu.sort,min:qu.min,cot:qu.cot,setDistinct:qu.setDistinct,setPowerset:qu.setPowerset,index:qu.index,sum:qu.sum,factorial:qu.factorial,permutations:qu.permutations,ceil:qu.ceil,subtract:qu.subtract,cross:qu.cross,range:qu.range,row:qu.row,prod:qu.prod,equal:qu.equal,max:qu.max,setCartesian:qu.setCartesian,setSymDifference:qu.setSymDifference,fix:qu.fix,column:qu.column,ctranspose:qu.ctranspose,deepEqual:qu.deepEqual,setIsSubset:qu.setIsSubset,xor:qu.xor,divideScalar:qu.divideScalar,nthRoots:qu.nthRoots,lsolve:qu.lsolve,lsolveAll:qu.lsolveAll,setUnion:qu.setUnion,lup:qu.lup,slu:qu.slu,det:qu.det,distance:qu.distance,stirlingS2:qu.stirlingS2,catalan:qu.catalan,diff:qu.diff,log:qu.log,dotDivide:qu.dotDivide,usolveAll:qu.usolveAll,hypot:qu.hypot,qr:qu.qr,inv:qu.inv,expm:qu.expm,divide:qu.divide,mean:qu.mean,variance:qu.variance,kldivergence:qu.kldivergence,bellNumbers:qu.bellNumbers,log1p:qu.log1p,createUnit:qu.createUnit,eigs:qu.eigs,intersect:qu.intersect,std:qu.std,atomicMass:qu.atomicMass,bohrMagneton:qu.bohrMagneton,boltzmann:qu.boltzmann,conductanceQuantum:qu.conductanceQuantum,deuteronMass:qu.deuteronMass,electronMass:qu.electronMass,faraday:qu.faraday,firstRadiation:qu.firstRadiation,gravitationConstant:qu.gravitationConstant,hartreeEnergy:qu.hartreeEnergy,klitzing:qu.klitzing,magneticConstant:qu.magneticConstant,molarMass:qu.molarMass,molarPlanckConstant:qu.molarPlanckConstant,neutronMass:qu.neutronMass,planckCharge:qu.planckCharge,planckLength:qu.planckLength,planckTemperature:qu.planckTemperature,protonMass:qu.protonMass,reducedPlanckConstant:qu.reducedPlanckConstant,secondRadiation:qu.secondRadiation,stefanBoltzmann:qu.stefanBoltzmann,vacuumImpedance:qu.vacuumImpedance,usolve:qu.usolve,norm:qu.norm,lusolve:qu.lusolve,sqrtm:qu.sqrtm,multinomial:qu.multinomial,avogadro:qu.avogadro,classicalElectronRadius:qu.classicalElectronRadius,electricConstant:qu.electricConstant,fermiCoupling:qu.fermiCoupling,gravity:qu.gravity,loschmidt:qu.loschmidt,molarMassC12:qu.molarMassC12,nuclearMagneton:qu.nuclearMagneton,planckMass:qu.planckMass,quantumOfCirculation:qu.quantumOfCirculation,speedOfLight:qu.speedOfLight,wienDisplacement:qu.wienDisplacement,rotationMatrix:qu.rotationMatrix,median:qu.median,bohrRadius:qu.bohrRadius,elementaryCharge:qu.elementaryCharge,inverseConductanceQuantum:qu.inverseConductanceQuantum,molarVolume:qu.molarVolume,planckTime:qu.planckTime,thomsonCrossSection:qu.thomsonCrossSection,rotate:qu.rotate,parse:O,evaluate:S,mad:qu.mad,coulomb:qu.coulomb,magneticFluxQuantum:qu.magneticFluxQuantum,rydberg:qu.rydberg,unit:qu.unit,help:A,gasConstant:qu.gasConstant,compile:E,simplify:C,rationalize:T,parser:k,planckConstant:qu.planckConstant,derivative:I,config:s.config}),n(i,r,{apply:(0,Ru.createApplyTransform)({isInteger:qu.isInteger,typed:qu.typed}),filter:(0,Ru.createFilterTransform)({typed:qu.typed}),map:(0,Ru.createMapTransform)({typed:qu.typed}),forEach:(0,Ru.createForEachTransform)({typed:qu.typed}),subset:(0,Ru.createSubsetTransform)({matrix:qu.matrix,typed:qu.typed}),index:(0,Ru.createIndexTransform)({Index:qu.Index}),concat:(0,Ru.createConcatTransform)({isInteger:qu.isInteger,matrix:qu.matrix,typed:qu.typed}),max:(0,Ru.createMaxTransform)({config:s.config,larger:qu.larger,numeric:qu.numeric,typed:qu.typed}),min:(0,Ru.createMinTransform)({config:s.config,numeric:qu.numeric,smaller:qu.smaller,typed:qu.typed}),sum:(0,Ru.createSumTransform)({add:qu.add,config:s.config,numeric:qu.numeric,typed:qu.typed}),column:(0,Ru.createColumnTransform)({Index:qu.Index,matrix:qu.matrix,range:qu.range,typed:qu.typed}),range:(0,Ru.createRangeTransform)({bignumber:qu.bignumber,matrix:qu.matrix,config:s.config,larger:qu.larger,largerEq:qu.largerEq,smaller:qu.smaller,smallerEq:qu.smallerEq,typed:qu.typed}),diff:(0,Ru.createDiffTransform)({bignumber:qu.bignumber,matrix:qu.matrix,number:qu.number,subtract:qu.subtract,typed:qu.typed}),row:(0,Ru.createRowTransform)({Index:qu.Index,matrix:qu.matrix,range:qu.range,typed:qu.typed}),mean:(0,Ru.createMeanTransform)({add:qu.add,divide:qu.divide,typed:qu.typed}),variance:(0,Ru.createVarianceTransform)({add:qu.add,apply:qu.apply,divide:qu.divide,isNaN:qu.isNaN,multiply:qu.multiply,subtract:qu.subtract,typed:qu.typed}),std:(0,Ru.createStdTransform)({sqrt:qu.sqrt,typed:qu.typed,variance:qu.variance})}),n(a,{ResultSet:qu.ResultSet,Complex:qu.Complex,Range:qu.Range,Node:o,ArrayNode:c,BlockNode:u,ConstantNode:l,ObjectNode:d,ParenthesisNode:f,RelationalNode:p,Chain:m,BigNumber:qu.BigNumber,Matrix:qu.Matrix,ConditionalNode:y,OperatorNode:v,Fraction:qu.Fraction,RangeNode:g,DenseMatrix:qu.DenseMatrix,FunctionAssignmentNode:b,SparseMatrix:qu.SparseMatrix,ImmutableDenseMatrix:qu.ImmutableDenseMatrix,FibonacciHeap:qu.FibonacciHeap,AccessorNode:D,IndexNode:_,Index:qu.Index,AssignmentNode:w,Spa:qu.Spa,Unit:qu.Unit,SymbolNode:N,FunctionNode:M,Help:P,Parser:j}),m.createProxy(r)})),Uu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"isAccessorNode",{enumerable:!0,get:function(){return i.isAccessorNode}}),Object.defineProperty(t,"isArray",{enumerable:!0,get:function(){return i.isArray}}),Object.defineProperty(t,"isArrayNode",{enumerable:!0,get:function(){return i.isArrayNode}}),Object.defineProperty(t,"isAssignmentNode",{enumerable:!0,get:function(){return i.isAssignmentNode}}),Object.defineProperty(t,"isBigNumber",{enumerable:!0,get:function(){return i.isBigNumber}}),Object.defineProperty(t,"isBlockNode",{enumerable:!0,get:function(){return i.isBlockNode}}),Object.defineProperty(t,"isBoolean",{enumerable:!0,get:function(){return i.isBoolean}}),Object.defineProperty(t,"isChain",{enumerable:!0,get:function(){return i.isChain}}),Object.defineProperty(t,"isCollection",{enumerable:!0,get:function(){return i.isCollection}}),Object.defineProperty(t,"isComplex",{enumerable:!0,get:function(){return i.isComplex}}),Object.defineProperty(t,"isConditionalNode",{enumerable:!0,get:function(){return i.isConditionalNode}}),Object.defineProperty(t,"isConstantNode",{enumerable:!0,get:function(){return i.isConstantNode}}),Object.defineProperty(t,"isDate",{enumerable:!0,get:function(){return i.isDate}}),Object.defineProperty(t,"isDenseMatrix",{enumerable:!0,get:function(){return i.isDenseMatrix}}),Object.defineProperty(t,"isFraction",{enumerable:!0,get:function(){return i.isFraction}}),Object.defineProperty(t,"isFunction",{enumerable:!0,get:function(){return i.isFunction}}),Object.defineProperty(t,"isFunctionAssignmentNode",{enumerable:!0,get:function(){return i.isFunctionAssignmentNode}}),Object.defineProperty(t,"isFunctionNode",{enumerable:!0,get:function(){return i.isFunctionNode}}),Object.defineProperty(t,"isHelp",{enumerable:!0,get:function(){return i.isHelp}}),Object.defineProperty(t,"isIndex",{enumerable:!0,get:function(){return i.isIndex}}),Object.defineProperty(t,"isIndexNode",{enumerable:!0,get:function(){return i.isIndexNode}}),Object.defineProperty(t,"isMatrix",{enumerable:!0,get:function(){return i.isMatrix}}),Object.defineProperty(t,"isNode",{enumerable:!0,get:function(){return i.isNode}}),Object.defineProperty(t,"isNull",{enumerable:!0,get:function(){return i.isNull}}),Object.defineProperty(t,"isNumber",{enumerable:!0,get:function(){return i.isNumber}}),Object.defineProperty(t,"isString",{enumerable:!0,get:function(){return i.isString}}),Object.defineProperty(t,"isUndefined",{enumerable:!0,get:function(){return i.isUndefined}}),Object.defineProperty(t,"isObject",{enumerable:!0,get:function(){return i.isObject}}),Object.defineProperty(t,"isObjectNode",{enumerable:!0,get:function(){return i.isObjectNode}}),Object.defineProperty(t,"isOperatorNode",{enumerable:!0,get:function(){return i.isOperatorNode}}),Object.defineProperty(t,"isParenthesisNode",{enumerable:!0,get:function(){return i.isParenthesisNode}}),Object.defineProperty(t,"isRange",{enumerable:!0,get:function(){return i.isRange}}),Object.defineProperty(t,"isRangeNode",{enumerable:!0,get:function(){return i.isRangeNode}}),Object.defineProperty(t,"isRegExp",{enumerable:!0,get:function(){return i.isRegExp}}),Object.defineProperty(t,"isResultSet",{enumerable:!0,get:function(){return i.isResultSet}}),Object.defineProperty(t,"isSparseMatrix",{enumerable:!0,get:function(){return i.isSparseMatrix}}),Object.defineProperty(t,"isSymbolNode",{enumerable:!0,get:function(){return i.isSymbolNode}}),Object.defineProperty(t,"isUnit",{enumerable:!0,get:function(){return i.isUnit}})})),Lu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.BigNumberDependencies=void 0;var n={createBigNumberClass:Ru.createBigNumberClass};t.BigNumberDependencies=n})),Hu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ComplexDependencies=void 0;var n={createComplexClass:Ru.createComplexClass};t.ComplexDependencies=n})),Zu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.MatrixDependencies=void 0;var n={createMatrixClass:Ru.createMatrixClass};t.MatrixDependencies=n})),Vu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.DenseMatrixDependencies=void 0;var n={MatrixDependencies:Zu.MatrixDependencies,createDenseMatrixClass:Ru.createDenseMatrixClass};t.DenseMatrixDependencies=n})),Wu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.FractionDependencies=void 0;var n={createFractionClass:Ru.createFractionClass};t.FractionDependencies=n})),Gu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.typedDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,FractionDependencies:Wu.FractionDependencies,createTyped:Ru.createTyped};t.typedDependencies=n})),$u=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ResultSetDependencies=void 0;var n={createResultSet:Ru.createResultSet};t.ResultSetDependencies=n})),Qu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.RangeDependencies=void 0;var n={createRangeClass:Ru.createRangeClass};t.RangeDependencies=n})),Xu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cloneDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createClone:Ru.createClone};t.cloneDependencies=n})),Yu=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isIntegerDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsInteger:Ru.createIsInteger};t.isIntegerDependencies=n})),Ju=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isNegativeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsNegative:Ru.createIsNegative};t.isNegativeDependencies=n})),Ku=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isNumericDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsNumeric:Ru.createIsNumeric};t.isNumericDependencies=n})),el=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hasNumericValueDependencies=void 0;var n={isNumericDependencies:Ku.isNumericDependencies,typedDependencies:Gu.typedDependencies,createHasNumericValue:Ru.createHasNumericValue};t.hasNumericValueDependencies=n})),tl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isPositiveDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsPositive:Ru.createIsPositive};t.isPositiveDependencies=n})),nl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isZeroDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsZero:Ru.createIsZero};t.isZeroDependencies=n})),rl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isNaNDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsNaN:Ru.createIsNaN};t.isNaNDependencies=n})),il=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.typeOfDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createTypeOf:Ru.createTypeOf};t.typeOfDependencies=n})),al=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.equalScalarDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createEqualScalar:Ru.createEqualScalar};t.equalScalarDependencies=n})),ol=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SparseMatrixDependencies=void 0;var n={MatrixDependencies:Zu.MatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,typedDependencies:Gu.typedDependencies,createSparseMatrixClass:Ru.createSparseMatrixClass};t.SparseMatrixDependencies=n})),sl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.numberDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createNumber:Ru.createNumber};t.numberDependencies=n})),cl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stringDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createString:Ru.createString};t.stringDependencies=n})),ul=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.booleanDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createBoolean:Ru.createBoolean};t.booleanDependencies=n})),ll=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bignumberDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createBignumber:Ru.createBignumber};t.bignumberDependencies=n})),dl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.complexDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createComplex:Ru.createComplex};t.complexDependencies=n})),fl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.fractionDependencies=void 0;var n={FractionDependencies:Wu.FractionDependencies,typedDependencies:Gu.typedDependencies,createFraction:Ru.createFraction};t.fractionDependencies=n})),pl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.matrixDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,MatrixDependencies:Zu.MatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,typedDependencies:Gu.typedDependencies,createMatrix:Ru.createMatrix};t.matrixDependencies=n})),ml=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.splitUnitDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSplitUnit:Ru.createSplitUnit};t.splitUnitDependencies=n})),hl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unaryMinusDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createUnaryMinus:Ru.createUnaryMinus};t.unaryMinusDependencies=n})),yl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unaryPlusDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createUnaryPlus:Ru.createUnaryPlus};t.unaryPlusDependencies=n})),vl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.absDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAbs:Ru.createAbs};t.absDependencies=n})),gl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.applyDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,typedDependencies:Gu.typedDependencies,createApply:Ru.createApply};t.applyDependencies=n})),bl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.addScalarDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAddScalar:Ru.createAddScalar};t.addScalarDependencies=n})),xl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cbrtDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,FractionDependencies:Wu.FractionDependencies,isNegativeDependencies:Ju.isNegativeDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createCbrt:Ru.createCbrt};t.cbrtDependencies=n})),Dl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.zerosDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createZeros:Ru.createZeros};t.zerosDependencies=n})),_l=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.roundDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createRound:Ru.createRound};t.roundDependencies=n})),wl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ceilDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,roundDependencies:_l.roundDependencies,typedDependencies:Gu.typedDependencies,createCeil:Ru.createCeil};t.ceilDependencies=n})),Nl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cubeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCube:Ru.createCube};t.cubeDependencies=n})),Ml=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.expDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createExp:Ru.createExp};t.expDependencies=n})),Ol=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.expm1Dependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createExpm1:Ru.createExpm1};t.expm1Dependencies=n})),Sl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.floorDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,roundDependencies:_l.roundDependencies,typedDependencies:Gu.typedDependencies,createFloor:Ru.createFloor};t.floorDependencies=n})),Pl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.fixDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,ceilDependencies:wl.ceilDependencies,floorDependencies:Sl.floorDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createFix:Ru.createFix};t.fixDependencies=n})),jl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gcdDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createGcd:Ru.createGcd};t.gcdDependencies=n})),Al=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lcmDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createLcm:Ru.createLcm};t.lcmDependencies=n})),El=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.log10Dependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createLog10:Ru.createLog10};t.log10Dependencies=n})),Cl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.log2Dependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createLog2:Ru.createLog2};t.log2Dependencies=n})),Tl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.modDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createMod:Ru.createMod};t.modDependencies=n})),kl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.multiplyScalarDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createMultiplyScalar:Ru.createMultiplyScalar};t.multiplyScalarDependencies=n})),Il=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.conjDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createConj:Ru.createConj};t.conjDependencies=n})),Bl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sizeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSize:Ru.createSize};t.sizeDependencies=n})),zl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,conjDependencies:Il.conjDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,sizeDependencies:Bl.sizeDependencies,typedDependencies:Gu.typedDependencies,createDot:Ru.createDot};t.dotDependencies=n})),Rl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.multiplyDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,dotDependencies:zl.dotDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createMultiply:Ru.createMultiply};t.multiplyDependencies=n})),ql=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nthRootDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createNthRoot:Ru.createNthRoot};t.nthRootDependencies=n})),Fl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.signDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,FractionDependencies:Wu.FractionDependencies,complexDependencies:dl.complexDependencies,typedDependencies:Gu.typedDependencies,createSign:Ru.createSign};t.signDependencies=n})),Ul=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sqrtDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createSqrt:Ru.createSqrt};t.sqrtDependencies=n})),Ll=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.squareDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSquare:Ru.createSquare};t.squareDependencies=n})),Hl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.subtractDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,addScalarDependencies:bl.addScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createSubtract:Ru.createSubtract};t.subtractDependencies=n})),Zl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.xgcdDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createXgcd:Ru.createXgcd};t.xgcdDependencies=n})),Vl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotMultiplyDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createDotMultiply:Ru.createDotMultiply};t.dotMultiplyDependencies=n})),Wl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitAndDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createBitAnd:Ru.createBitAnd};t.bitAndDependencies=n})),Gl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitNotDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createBitNot:Ru.createBitNot};t.bitNotDependencies=n})),$l=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitOrDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createBitOr:Ru.createBitOr};t.bitOrDependencies=n})),Ql=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bitXorDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createBitXor:Ru.createBitXor};t.bitXorDependencies=n})),Xl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.argDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createArg:Ru.createArg};t.argDependencies=n})),Yl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.imDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIm:Ru.createIm};t.imDependencies=n})),Jl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.reDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createRe:Ru.createRe};t.reDependencies=n})),Kl=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.notDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createNot:Ru.createNot};t.notDependencies=n})),ed=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.orDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createOr:Ru.createOr};t.orDependencies=n})),td=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.xorDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createXor:Ru.createXor};t.xorDependencies=n})),nd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.concatDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createConcat:Ru.createConcat};t.concatDependencies=n})),rd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.smallerDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSmaller:Ru.createSmaller};t.smallerDependencies=n})),id=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ImmutableDenseMatrixDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,smallerDependencies:rd.smallerDependencies,createImmutableDenseMatrixClass:Ru.createImmutableDenseMatrixClass};t.ImmutableDenseMatrixDependencies=n})),ad=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.IndexDependencies=void 0;var n={ImmutableDenseMatrixDependencies:id.ImmutableDenseMatrixDependencies,createIndexClass:Ru.createIndexClass};t.IndexDependencies=n})),od=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.largerDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createLarger:Ru.createLarger};t.largerDependencies=n})),sd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.largerEqDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createLargerEq:Ru.createLargerEq};t.largerEqDependencies=n})),cd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.smallerEqDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSmallerEq:Ru.createSmallerEq};t.smallerEqDependencies=n})),ud=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rangeDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,matrixDependencies:pl.matrixDependencies,largerDependencies:od.largerDependencies,largerEqDependencies:sd.largerEqDependencies,smallerDependencies:rd.smallerDependencies,smallerEqDependencies:cd.smallerEqDependencies,typedDependencies:Gu.typedDependencies,createRange:Ru.createRange};t.rangeDependencies=n})),ld=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.columnDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createColumn:Ru.createColumn};t.columnDependencies=n})),dd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.crossDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createCross:Ru.createCross};t.crossDependencies=n})),fd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.diagDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createDiag:Ru.createDiag};t.diagDependencies=n})),pd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.filterDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createFilter:Ru.createFilter};t.filterDependencies=n})),md=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.flattenDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createFlatten:Ru.createFlatten};t.flattenDependencies=n})),hd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.forEachDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createForEach:Ru.createForEach};t.forEachDependencies=n})),yd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.getMatrixDataTypeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createGetMatrixDataType:Ru.createGetMatrixDataType};t.getMatrixDataTypeDependencies=n})),vd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.identityDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createIdentity:Ru.createIdentity};t.identityDependencies=n})),gd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.kronDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createKron:Ru.createKron};t.kronDependencies=n})),bd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.mapDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createMap:Ru.createMap};t.mapDependencies=n})),xd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.diffDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,numberDependencies:sl.numberDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createDiff:Ru.createDiff};t.diffDependencies=n})),Dd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.onesDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createOnes:Ru.createOnes};t.onesDependencies=n})),_d=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.reshapeDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createReshape:Ru.createReshape};t.reshapeDependencies=n})),wd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.resizeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,createResize:Ru.createResize};t.resizeDependencies=n})),Nd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cosDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCos:Ru.createCos};t.cosDependencies=n})),Md=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.addDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,addScalarDependencies:bl.addScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createAdd:Ru.createAdd};t.addDependencies=n})),Od=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.transposeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createTranspose:Ru.createTranspose};t.transposeDependencies=n})),Sd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ctransposeDependencies=void 0;var n={conjDependencies:Il.conjDependencies,transposeDependencies:Od.transposeDependencies,typedDependencies:Gu.typedDependencies,createCtranspose:Ru.createCtranspose};t.ctransposeDependencies=n})),Pd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atanDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAtan:Ru.createAtan};t.atanDependencies=n})),jd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.equalDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createEqual:Ru.createEqual};t.equalDependencies=n})),Ad=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.FibonacciHeapDependencies=void 0;var n={largerDependencies:od.largerDependencies,smallerDependencies:rd.smallerDependencies,createFibonacciHeapClass:Ru.createFibonacciHeapClass};t.FibonacciHeapDependencies=n})),Ed=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SpaDependencies=void 0;var n={FibonacciHeapDependencies:Ad.FibonacciHeapDependencies,addScalarDependencies:bl.addScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,createSpaClass:Ru.createSpaClass};t.SpaDependencies=n})),Cd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.numericDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,fractionDependencies:fl.fractionDependencies,numberDependencies:sl.numberDependencies,createNumeric:Ru.createNumeric};t.numericDependencies=n})),Td=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.divideScalarDependencies=void 0;var n={numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createDivideScalar:Ru.createDivideScalar};t.divideScalarDependencies=n})),kd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lupDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,SpaDependencies:Ed.SpaDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,largerDependencies:od.largerDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createLup:Ru.createLup};t.lupDependencies=n})),Id=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.detDependencies=void 0;var n={lupDependencies:kd.lupDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createDet:Ru.createDet};t.detDependencies=n})),Bd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.invDependencies=void 0;var n={absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,detDependencies:Id.detDependencies,divideScalarDependencies:Td.divideScalarDependencies,identityDependencies:vd.identityDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createInv:Ru.createInv};t.invDependencies=n})),zd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sinDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSin:Ru.createSin};t.sinDependencies=n})),Rd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.eigsDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,addScalarDependencies:bl.addScalarDependencies,atanDependencies:Pd.atanDependencies,bignumberDependencies:ll.bignumberDependencies,cosDependencies:Nd.cosDependencies,equalDependencies:jd.equalDependencies,invDependencies:Bd.invDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,sinDependencies:zd.sinDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createEigs:Ru.createEigs};t.eigsDependencies=n})),qd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.powDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,fractionDependencies:fl.fractionDependencies,identityDependencies:vd.identityDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,numberDependencies:sl.numberDependencies,typedDependencies:Gu.typedDependencies,createPow:Ru.createPow};t.powDependencies=n})),Fd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.normDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,conjDependencies:Il.conjDependencies,ctransposeDependencies:Sd.ctransposeDependencies,eigsDependencies:Rd.eigsDependencies,equalScalarDependencies:al.equalScalarDependencies,largerDependencies:od.largerDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,powDependencies:qd.powDependencies,smallerDependencies:rd.smallerDependencies,sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,createNorm:Ru.createNorm};t.normDependencies=n})),Ud=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rotationMatrixDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,addScalarDependencies:bl.addScalarDependencies,cosDependencies:Nd.cosDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,normDependencies:Fd.normDependencies,sinDependencies:zd.sinDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createRotationMatrix:Ru.createRotationMatrix};t.rotationMatrixDependencies=n})),Ld=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rotateDependencies=void 0;var n={multiplyDependencies:Rl.multiplyDependencies,rotationMatrixDependencies:Ud.rotationMatrixDependencies,typedDependencies:Gu.typedDependencies,createRotate:Ru.createRotate};t.rotateDependencies=n})),Hd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rowDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createRow:Ru.createRow};t.rowDependencies=n})),Zd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.squeezeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSqueeze:Ru.createSqueeze};t.squeezeDependencies=n})),Vd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.subsetDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSubset:Ru.createSubset};t.subsetDependencies=n})),Wd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.erfDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createErf:Ru.createErf};t.erfDependencies=n})),Gd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.modeDependencies=void 0;var n={isNaNDependencies:rl.isNaNDependencies,isNumericDependencies:Ku.isNumericDependencies,typedDependencies:Gu.typedDependencies,createMode:Ru.createMode};t.modeDependencies=n})),$d=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.prodDependencies=void 0;var n={multiplyScalarDependencies:kl.multiplyScalarDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createProd:Ru.createProd};t.prodDependencies=n})),Qd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.formatDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createFormat:Ru.createFormat};t.formatDependencies=n})),Xd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.binDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createBin:Ru.createBin};t.binDependencies=n})),Yd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.octDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createOct:Ru.createOct};t.octDependencies=n})),Jd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hexDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createHex:Ru.createHex};t.hexDependencies=n})),Kd=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.printDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createPrint:Ru.createPrint};t.printDependencies=n})),ef=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.toDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createTo:Ru.createTo};t.toDependencies=n})),tf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isPrimeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsPrime:Ru.createIsPrime};t.isPrimeDependencies=n})),nf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.logDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,divideScalarDependencies:Td.divideScalarDependencies,typedDependencies:Gu.typedDependencies,createLog:Ru.createLog};t.logDependencies=n})),rf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.log1pDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,divideScalarDependencies:Td.divideScalarDependencies,logDependencies:nf.logDependencies,typedDependencies:Gu.typedDependencies,createLog1p:Ru.createLog1p};t.log1pDependencies=n})),af=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nthRootsDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,divideScalarDependencies:Td.divideScalarDependencies,typedDependencies:Gu.typedDependencies,createNthRoots:Ru.createNthRoots};t.nthRootsDependencies=n})),of=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotPowDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,powDependencies:qd.powDependencies,typedDependencies:Gu.typedDependencies,createDotPow:Ru.createDotPow};t.dotPowDependencies=n})),sf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.dotDivideDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createDotDivide:Ru.createDotDivide};t.dotDivideDependencies=n})),cf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lsolveDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createLsolve:Ru.createLsolve};t.lsolveDependencies=n})),uf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.usolveDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createUsolve:Ru.createUsolve};t.usolveDependencies=n})),lf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lsolveAllDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createLsolveAll:Ru.createLsolveAll};t.lsolveAllDependencies=n})),df=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.usolveAllDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createUsolveAll:Ru.createUsolveAll};t.usolveAllDependencies=n})),ff=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.leftShiftDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createLeftShift:Ru.createLeftShift};t.leftShiftDependencies=n})),pf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rightArithShiftDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createRightArithShift:Ru.createRightArithShift};t.rightArithShiftDependencies=n})),mf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rightLogShiftDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createRightLogShift:Ru.createRightLogShift};t.rightLogShiftDependencies=n})),hf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.andDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,notDependencies:Kl.notDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createAnd:Ru.createAnd};t.andDependencies=n})),yf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,FractionDependencies:Wu.FractionDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createCompare:Ru.createCompare};t.compareDependencies=n})),vf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareNaturalDependencies=void 0;var n={compareDependencies:yf.compareDependencies,typedDependencies:Gu.typedDependencies,createCompareNatural:Ru.createCompareNatural};t.compareNaturalDependencies=n})),gf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compareTextDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createCompareText:Ru.createCompareText};t.compareTextDependencies=n})),bf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.equalTextDependencies=void 0;var n={compareTextDependencies:gf.compareTextDependencies,isZeroDependencies:nl.isZeroDependencies,typedDependencies:Gu.typedDependencies,createEqualText:Ru.createEqualText};t.equalTextDependencies=n})),xf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.deepEqualDependencies=void 0;var n={equalDependencies:jd.equalDependencies,typedDependencies:Gu.typedDependencies,createDeepEqual:Ru.createDeepEqual};t.deepEqualDependencies=n})),Df=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unequalDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createUnequal:Ru.createUnequal};t.unequalDependencies=n})),_f=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.partitionSelectDependencies=void 0;var n={compareDependencies:yf.compareDependencies,isNaNDependencies:rl.isNaNDependencies,isNumericDependencies:Ku.isNumericDependencies,typedDependencies:Gu.typedDependencies,createPartitionSelect:Ru.createPartitionSelect};t.partitionSelectDependencies=n})),wf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sortDependencies=void 0;var n={compareDependencies:yf.compareDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSort:Ru.createSort};t.sortDependencies=n})),Nf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.maxDependencies=void 0;var n={largerDependencies:od.largerDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createMax:Ru.createMax};t.maxDependencies=n})),Mf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.minDependencies=void 0;var n={numericDependencies:Cd.numericDependencies,smallerDependencies:rd.smallerDependencies,typedDependencies:Gu.typedDependencies,createMin:Ru.createMin};t.minDependencies=n})),Of=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.UnitDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,FractionDependencies:Wu.FractionDependencies,absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalDependencies:jd.equalDependencies,fixDependencies:Pl.fixDependencies,formatDependencies:Qd.formatDependencies,isNumericDependencies:Ku.isNumericDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,numberDependencies:sl.numberDependencies,powDependencies:qd.powDependencies,roundDependencies:_l.roundDependencies,subtractDependencies:Hl.subtractDependencies,createUnitClass:Ru.createUnitClass};t.UnitDependencies=n})),Sf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.unitDependencies=void 0;var n={UnitDependencies:Of.UnitDependencies,typedDependencies:Gu.typedDependencies,createUnitFunction:Ru.createUnitFunction};t.unitDependencies=n})),Pf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sparseDependencies=void 0;var n={SparseMatrixDependencies:ol.SparseMatrixDependencies,typedDependencies:Gu.typedDependencies,createSparse:Ru.createSparse};t.sparseDependencies=n})),jf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.createUnitDependencies=void 0;var n={UnitDependencies:Of.UnitDependencies,typedDependencies:Gu.typedDependencies,createCreateUnit:Ru.createCreateUnit};t.createUnitDependencies=n})),Af=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acosDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcos:Ru.createAcos};t.acosDependencies=n})),Ef=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acoshDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcosh:Ru.createAcosh};t.acoshDependencies=n})),Cf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acotDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createAcot:Ru.createAcot};t.acotDependencies=n})),Tf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acothDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcoth:Ru.createAcoth};t.acothDependencies=n})),kf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acscDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcsc:Ru.createAcsc};t.acscDependencies=n})),If=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.acschDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createAcsch:Ru.createAcsch};t.acschDependencies=n})),Bf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asecDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAsec:Ru.createAsec};t.asecDependencies=n})),zf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asechDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAsech:Ru.createAsech};t.asechDependencies=n})),Rf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asinDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAsin:Ru.createAsin};t.asinDependencies=n})),qf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.asinhDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAsinh:Ru.createAsinh};t.asinhDependencies=n})),Ff=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atan2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createAtan2:Ru.createAtan2};t.atan2Dependencies=n})),Uf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atanhDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAtanh:Ru.createAtanh};t.atanhDependencies=n})),Lf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.coshDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCosh:Ru.createCosh};t.coshDependencies=n})),Hf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cotDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCot:Ru.createCot};t.cotDependencies=n})),Zf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cothDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCoth:Ru.createCoth};t.cothDependencies=n})),Vf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cscDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCsc:Ru.createCsc};t.cscDependencies=n})),Wf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.cschDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCsch:Ru.createCsch};t.cschDependencies=n})),Gf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.secDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createSec:Ru.createSec};t.secDependencies=n})),$f=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sechDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createSech:Ru.createSech};t.sechDependencies=n})),Qf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sinhDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSinh:Ru.createSinh};t.sinhDependencies=n})),Xf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.tanDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createTan:Ru.createTan};t.tanDependencies=n})),Yf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.tanhDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createTanh:Ru.createTanh};t.tanhDependencies=n})),Jf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setCartesianDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetCartesian:Ru.createSetCartesian};t.setCartesianDependencies=n})),Kf=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setDifferenceDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetDifference:Ru.createSetDifference};t.setDifferenceDependencies=n})),ep=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setDistinctDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetDistinct:Ru.createSetDistinct};t.setDistinctDependencies=n})),tp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setIntersectDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetIntersect:Ru.createSetIntersect};t.setIntersectDependencies=n})),np=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setIsSubsetDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetIsSubset:Ru.createSetIsSubset};t.setIsSubsetDependencies=n})),rp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setMultiplicityDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetMultiplicity:Ru.createSetMultiplicity};t.setMultiplicityDependencies=n})),ip=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setPowersetDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetPowerset:Ru.createSetPowerset};t.setPowersetDependencies=n})),ap=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setSizeDependencies=void 0;var n={compareNaturalDependencies:vf.compareNaturalDependencies,typedDependencies:Gu.typedDependencies,createSetSize:Ru.createSetSize};t.setSizeDependencies=n})),op=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setSymDifferenceDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,concatDependencies:nd.concatDependencies,setDifferenceDependencies:Kf.setDifferenceDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetSymDifference:Ru.createSetSymDifference};t.setSymDifferenceDependencies=n})),sp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.setUnionDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,concatDependencies:nd.concatDependencies,setIntersectDependencies:tp.setIntersectDependencies,setSymDifferenceDependencies:op.setSymDifferenceDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetUnion:Ru.createSetUnion};t.setUnionDependencies=n})),cp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hypotDependencies=void 0;var n={absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,isPositiveDependencies:tl.isPositiveDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,smallerDependencies:rd.smallerDependencies,sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,createHypot:Ru.createHypot};t.hypotDependencies=n})),up=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.traceDependencies=void 0;var n={addDependencies:Md.addDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createTrace:Ru.createTrace};t.traceDependencies=n})),lp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.indexDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,typedDependencies:Gu.typedDependencies,createIndex:Ru.createIndex};t.indexDependencies=n})),dp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.NodeDependencies=void 0;var n={createNode:Ru.createNode};t.NodeDependencies=n})),fp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.AccessorNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,subsetDependencies:Vd.subsetDependencies,createAccessorNode:Ru.createAccessorNode};t.AccessorNodeDependencies=n})),pp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ArrayNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createArrayNode:Ru.createArrayNode};t.ArrayNodeDependencies=n})),mp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.AssignmentNodeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,NodeDependencies:dp.NodeDependencies,subsetDependencies:Vd.subsetDependencies,createAssignmentNode:Ru.createAssignmentNode};t.AssignmentNodeDependencies=n})),hp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.BlockNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,ResultSetDependencies:$u.ResultSetDependencies,createBlockNode:Ru.createBlockNode};t.BlockNodeDependencies=n})),yp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ConditionalNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createConditionalNode:Ru.createConditionalNode};t.ConditionalNodeDependencies=n})),vp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ConstantNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createConstantNode:Ru.createConstantNode};t.ConstantNodeDependencies=n})),gp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.FunctionAssignmentNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,typedDependencies:Gu.typedDependencies,createFunctionAssignmentNode:Ru.createFunctionAssignmentNode};t.FunctionAssignmentNodeDependencies=n})),bp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.IndexNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,RangeDependencies:Qu.RangeDependencies,sizeDependencies:Bl.sizeDependencies,createIndexNode:Ru.createIndexNode};t.IndexNodeDependencies=n})),xp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ObjectNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createObjectNode:Ru.createObjectNode};t.ObjectNodeDependencies=n})),Dp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createOperatorNode:Ru.createOperatorNode};t.OperatorNodeDependencies=n})),_p=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ParenthesisNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createParenthesisNode:Ru.createParenthesisNode};t.ParenthesisNodeDependencies=n})),wp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.RangeNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createRangeNode:Ru.createRangeNode};t.RangeNodeDependencies=n})),Np=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.RelationalNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createRelationalNode:Ru.createRelationalNode};t.RelationalNodeDependencies=n})),Mp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SymbolNodeDependencies=void 0;var n={UnitDependencies:Of.UnitDependencies,NodeDependencies:dp.NodeDependencies,createSymbolNode:Ru.createSymbolNode};t.SymbolNodeDependencies=n})),Op=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.FunctionNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,createFunctionNode:Ru.createFunctionNode};t.FunctionNodeDependencies=n})),Sp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.parseDependencies=void 0;var n={AccessorNodeDependencies:fp.AccessorNodeDependencies,ArrayNodeDependencies:pp.ArrayNodeDependencies,AssignmentNodeDependencies:mp.AssignmentNodeDependencies,BlockNodeDependencies:hp.BlockNodeDependencies,ConditionalNodeDependencies:yp.ConditionalNodeDependencies,ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionAssignmentNodeDependencies:gp.FunctionAssignmentNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,IndexNodeDependencies:bp.IndexNodeDependencies,ObjectNodeDependencies:xp.ObjectNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,RangeNodeDependencies:wp.RangeNodeDependencies,RelationalNodeDependencies:Np.RelationalNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createParse:Ru.createParse};t.parseDependencies=n})),Pp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compileDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,typedDependencies:Gu.typedDependencies,createCompile:Ru.createCompile};t.compileDependencies=n})),jp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.evaluateDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,typedDependencies:Gu.typedDependencies,createEvaluate:Ru.createEvaluate};t.evaluateDependencies=n})),Ap=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ParserDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,createParserClass:Ru.createParserClass};t.ParserDependencies=n})),Ep=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.parserDependencies=void 0;var n={ParserDependencies:Ap.ParserDependencies,typedDependencies:Gu.typedDependencies,createParser:Ru.createParser};t.parserDependencies=n})),Cp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.qrDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,complexDependencies:dl.complexDependencies,conjDependencies:Il.conjDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalDependencies:jd.equalDependencies,identityDependencies:vd.identityDependencies,isZeroDependencies:nl.isZeroDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,signDependencies:Fl.signDependencies,sqrtDependencies:Ul.sqrtDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,zerosDependencies:Dl.zerosDependencies,createQr:Ru.createQr};t.qrDependencies=n})),Tp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sluDependencies=void 0;var n={SparseMatrixDependencies:ol.SparseMatrixDependencies,absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,divideScalarDependencies:Td.divideScalarDependencies,largerDependencies:od.largerDependencies,largerEqDependencies:sd.largerEqDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,transposeDependencies:Od.transposeDependencies,typedDependencies:Gu.typedDependencies,createSlu:Ru.createSlu};t.sluDependencies=n})),kp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.lusolveDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,lsolveDependencies:cf.lsolveDependencies,lupDependencies:kd.lupDependencies,matrixDependencies:pl.matrixDependencies,sluDependencies:Tp.sluDependencies,typedDependencies:Gu.typedDependencies,usolveDependencies:uf.usolveDependencies,createLusolve:Ru.createLusolve};t.lusolveDependencies=n})),Ip=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.HelpDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,createHelpClass:Ru.createHelpClass};t.HelpDependencies=n})),Bp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.ChainDependencies=void 0;var n={createChainClass:Ru.createChainClass};t.ChainDependencies=n})),zp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.helpDependencies=void 0;var n={HelpDependencies:Ip.HelpDependencies,typedDependencies:Gu.typedDependencies,createHelp:Ru.createHelp};t.helpDependencies=n})),Rp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.chainDependencies=void 0;var n={ChainDependencies:Bp.ChainDependencies,typedDependencies:Gu.typedDependencies,createChain:Ru.createChain};t.chainDependencies=n})),qp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.expmDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,identityDependencies:vd.identityDependencies,invDependencies:Bd.invDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,createExpm:Ru.createExpm};t.expmDependencies=n})),Fp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sqrtmDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,identityDependencies:vd.identityDependencies,invDependencies:Bd.invDependencies,maxDependencies:Nf.maxDependencies,multiplyDependencies:Rl.multiplyDependencies,sizeDependencies:Bl.sizeDependencies,sqrtDependencies:Ul.sqrtDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createSqrtm:Ru.createSqrtm};t.sqrtmDependencies=n})),Up=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.divideDependencies=void 0;var n={divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,invDependencies:Bd.invDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,createDivide:Ru.createDivide};t.divideDependencies=n})),Lp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.distanceDependencies=void 0;var n={absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,sqrtDependencies:Ul.sqrtDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createDistance:Ru.createDistance};t.distanceDependencies=n})),Hp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.intersectDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,smallerDependencies:rd.smallerDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createIntersect:Ru.createIntersect};t.intersectDependencies=n})),Zp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sumDependencies=void 0;var n={addDependencies:Md.addDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createSum:Ru.createSum};t.sumDependencies=n})),Vp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.meanDependencies=void 0;var n={addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,typedDependencies:Gu.typedDependencies,createMean:Ru.createMean};t.meanDependencies=n})),Wp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.medianDependencies=void 0;var n={addDependencies:Md.addDependencies,compareDependencies:yf.compareDependencies,divideDependencies:Up.divideDependencies,partitionSelectDependencies:_f.partitionSelectDependencies,typedDependencies:Gu.typedDependencies,createMedian:Ru.createMedian};t.medianDependencies=n})),Gp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.madDependencies=void 0;var n={absDependencies:vl.absDependencies,mapDependencies:bd.mapDependencies,medianDependencies:Wp.medianDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createMad:Ru.createMad};t.madDependencies=n})),$p=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.varianceDependencies=void 0;var n={addDependencies:Md.addDependencies,applyDependencies:gl.applyDependencies,divideDependencies:Up.divideDependencies,isNaNDependencies:rl.isNaNDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createVariance:Ru.createVariance};t.varianceDependencies=n})),Qp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.quantileSeqDependencies=void 0;var n={addDependencies:Md.addDependencies,compareDependencies:yf.compareDependencies,multiplyDependencies:Rl.multiplyDependencies,partitionSelectDependencies:_f.partitionSelectDependencies,typedDependencies:Gu.typedDependencies,createQuantileSeq:Ru.createQuantileSeq};t.quantileSeqDependencies=n})),Xp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stdDependencies=void 0;var n={sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,varianceDependencies:$p.varianceDependencies,createStd:Ru.createStd};t.stdDependencies=n})),Yp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.combinationsDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCombinations:Ru.createCombinations};t.combinationsDependencies=n})),Jp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.combinationsWithRepDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCombinationsWithRep:Ru.createCombinationsWithRep};t.combinationsWithRepDependencies=n})),Kp=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gammaDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,powDependencies:qd.powDependencies,typedDependencies:Gu.typedDependencies,createGamma:Ru.createGamma};t.gammaDependencies=n})),em=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.factorialDependencies=void 0;var n={gammaDependencies:Kp.gammaDependencies,typedDependencies:Gu.typedDependencies,createFactorial:Ru.createFactorial};t.factorialDependencies=n})),tm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.kldivergenceDependencies=void 0;var n={divideDependencies:Up.divideDependencies,dotDivideDependencies:sf.dotDivideDependencies,isNumericDependencies:Ku.isNumericDependencies,logDependencies:nf.logDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,sumDependencies:Zp.sumDependencies,typedDependencies:Gu.typedDependencies,createKldivergence:Ru.createKldivergence};t.kldivergenceDependencies=n})),nm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.multinomialDependencies=void 0;var n={addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,factorialDependencies:em.factorialDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isPositiveDependencies:tl.isPositiveDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,createMultinomial:Ru.createMultinomial};t.multinomialDependencies=n})),rm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.permutationsDependencies=void 0;var n={factorialDependencies:em.factorialDependencies,typedDependencies:Gu.typedDependencies,createPermutations:Ru.createPermutations};t.permutationsDependencies=n})),im=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.pickRandomDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createPickRandom:Ru.createPickRandom};t.pickRandomDependencies=n})),am=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createRandom:Ru.createRandom};t.randomDependencies=n})),om=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.randomIntDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createRandomInt:Ru.createRandomInt};t.randomIntDependencies=n})),sm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stirlingS2Dependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,combinationsDependencies:Yp.combinationsDependencies,divideScalarDependencies:Td.divideScalarDependencies,factorialDependencies:em.factorialDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,largerDependencies:od.largerDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,powDependencies:qd.powDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createStirlingS2:Ru.createStirlingS2};t.stirlingS2Dependencies=n})),cm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bellNumbersDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,stirlingS2Dependencies:sm.stirlingS2Dependencies,typedDependencies:Gu.typedDependencies,createBellNumbers:Ru.createBellNumbers};t.bellNumbersDependencies=n})),um=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.catalanDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,combinationsDependencies:Yp.combinationsDependencies,divideScalarDependencies:Td.divideScalarDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createCatalan:Ru.createCatalan};t.catalanDependencies=n})),lm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.compositionDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,combinationsDependencies:Yp.combinationsDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,isPositiveDependencies:tl.isPositiveDependencies,largerDependencies:od.largerDependencies,typedDependencies:Gu.typedDependencies,createComposition:Ru.createComposition};t.compositionDependencies=n})),dm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.simplifyDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,fractionDependencies:fl.fractionDependencies,ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,equalDependencies:jd.equalDependencies,isZeroDependencies:nl.isZeroDependencies,multiplyDependencies:Rl.multiplyDependencies,parseDependencies:Sp.parseDependencies,powDependencies:qd.powDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createSimplify:Ru.createSimplify};t.simplifyDependencies=n})),fm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.derivativeDependencies=void 0;var n={ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,equalDependencies:jd.equalDependencies,isZeroDependencies:nl.isZeroDependencies,numericDependencies:Cd.numericDependencies,parseDependencies:Sp.parseDependencies,simplifyDependencies:dm.simplifyDependencies,typedDependencies:Gu.typedDependencies,createDerivative:Ru.createDerivative};t.derivativeDependencies=n})),pm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rationalizeDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,fractionDependencies:fl.fractionDependencies,ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,equalDependencies:jd.equalDependencies,isZeroDependencies:nl.isZeroDependencies,multiplyDependencies:Rl.multiplyDependencies,parseDependencies:Sp.parseDependencies,powDependencies:qd.powDependencies,simplifyDependencies:dm.simplifyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createRationalize:Ru.createRationalize};t.rationalizeDependencies=n})),mm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.reviverDependencies=void 0;var n={createReviver:Ru.createReviver};t.reviverDependencies=n})),hm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.replacerDependencies=void 0;var n={createReplacer:Ru.createReplacer};t.replacerDependencies=n})),ym=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.eDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createE:Ru.createE};t.eDependencies=n})),vm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.EDependencies=void 0;var n={eDependencies:ym.eDependencies,createUppercaseE:Ru.createUppercaseE};t.EDependencies=n})),gm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.falseDependencies=void 0;var n={createFalse:Ru.createFalse};t.falseDependencies=n})),bm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.iDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,createI:Ru.createI};t.iDependencies=n})),xm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.InfinityDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createInfinity:Ru.createInfinity};t.InfinityDependencies=n})),Dm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LN10Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLN10:Ru.createLN10};t.LN10Dependencies=n})),_m=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LN2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLN2:Ru.createLN2};t.LN2Dependencies=n})),wm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LOG10EDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLOG10E:Ru.createLOG10E};t.LOG10EDependencies=n})),Nm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.LOG2EDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLOG2E:Ru.createLOG2E};t.LOG2EDependencies=n})),Mm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.NaNDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createNaN:Ru.createNaN};t.NaNDependencies=n})),Om=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nullDependencies=void 0;var n={createNull:Ru.createNull};t.nullDependencies=n})),Sm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.phiDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createPhi:Ru.createPhi};t.phiDependencies=n})),Pm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.piDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createPi:Ru.createPi};t.piDependencies=n})),jm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.PIDependencies=void 0;var n={piDependencies:Pm.piDependencies,createUppercasePi:Ru.createUppercasePi};t.PIDependencies=n})),Am=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SQRT1_2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createSQRT1_2:Ru.createSQRT1_2};t.SQRT1_2Dependencies=n})),Em=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.SQRT2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createSQRT2:Ru.createSQRT2};t.SQRT2Dependencies=n})),Cm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.tauDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createTau:Ru.createTau};t.tauDependencies=n})),Tm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.trueDependencies=void 0;var n={createTrue:Ru.createTrue};t.trueDependencies=n})),km=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.versionDependencies=void 0;var n={createVersion:Ru.createVersion};t.versionDependencies=n})),Im=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.atomicMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createAtomicMass:Ru.createAtomicMass};t.atomicMassDependencies=n})),Bm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.avogadroDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createAvogadro:Ru.createAvogadro};t.avogadroDependencies=n})),zm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bohrMagnetonDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createBohrMagneton:Ru.createBohrMagneton};t.bohrMagnetonDependencies=n})),Rm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.bohrRadiusDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createBohrRadius:Ru.createBohrRadius};t.bohrRadiusDependencies=n})),qm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.boltzmannDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createBoltzmann:Ru.createBoltzmann};t.boltzmannDependencies=n})),Fm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.classicalElectronRadiusDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createClassicalElectronRadius:Ru.createClassicalElectronRadius};t.classicalElectronRadiusDependencies=n})),Um=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.conductanceQuantumDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createConductanceQuantum:Ru.createConductanceQuantum};t.conductanceQuantumDependencies=n})),Lm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.coulombDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createCoulomb:Ru.createCoulomb};t.coulombDependencies=n})),Hm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.deuteronMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createDeuteronMass:Ru.createDeuteronMass};t.deuteronMassDependencies=n})),Zm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.efimovFactorDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createEfimovFactor:Ru.createEfimovFactor};t.efimovFactorDependencies=n})),Vm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.electricConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createElectricConstant:Ru.createElectricConstant};t.electricConstantDependencies=n})),Wm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.electronMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createElectronMass:Ru.createElectronMass};t.electronMassDependencies=n})),Gm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.elementaryChargeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createElementaryCharge:Ru.createElementaryCharge};t.elementaryChargeDependencies=n})),$m=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.faradayDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createFaraday:Ru.createFaraday};t.faradayDependencies=n})),Qm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.fermiCouplingDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createFermiCoupling:Ru.createFermiCoupling};t.fermiCouplingDependencies=n})),Xm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.fineStructureDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createFineStructure:Ru.createFineStructure};t.fineStructureDependencies=n})),Ym=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.firstRadiationDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createFirstRadiation:Ru.createFirstRadiation};t.firstRadiationDependencies=n})),Jm=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gasConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createGasConstant:Ru.createGasConstant};t.gasConstantDependencies=n})),Km=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gravitationConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createGravitationConstant:Ru.createGravitationConstant};t.gravitationConstantDependencies=n})),eh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.gravityDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createGravity:Ru.createGravity};t.gravityDependencies=n})),th=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.hartreeEnergyDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createHartreeEnergy:Ru.createHartreeEnergy};t.hartreeEnergyDependencies=n})),nh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.inverseConductanceQuantumDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createInverseConductanceQuantum:Ru.createInverseConductanceQuantum};t.inverseConductanceQuantumDependencies=n})),rh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.klitzingDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createKlitzing:Ru.createKlitzing};t.klitzingDependencies=n})),ih=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.loschmidtDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createLoschmidt:Ru.createLoschmidt};t.loschmidtDependencies=n})),ah=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.magneticConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMagneticConstant:Ru.createMagneticConstant};t.magneticConstantDependencies=n})),oh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.magneticFluxQuantumDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMagneticFluxQuantum:Ru.createMagneticFluxQuantum};t.magneticFluxQuantumDependencies=n})),sh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.molarMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarMass:Ru.createMolarMass};t.molarMassDependencies=n})),ch=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.molarMassC12Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarMassC12:Ru.createMolarMassC12};t.molarMassC12Dependencies=n})),uh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.molarPlanckConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarPlanckConstant:Ru.createMolarPlanckConstant};t.molarPlanckConstantDependencies=n})),lh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.molarVolumeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarVolume:Ru.createMolarVolume};t.molarVolumeDependencies=n})),dh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.neutronMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createNeutronMass:Ru.createNeutronMass};t.neutronMassDependencies=n})),fh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.nuclearMagnetonDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createNuclearMagneton:Ru.createNuclearMagneton};t.nuclearMagnetonDependencies=n})),ph=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.planckChargeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckCharge:Ru.createPlanckCharge};t.planckChargeDependencies=n})),mh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.planckConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckConstant:Ru.createPlanckConstant};t.planckConstantDependencies=n})),hh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.planckLengthDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckLength:Ru.createPlanckLength};t.planckLengthDependencies=n})),yh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.planckMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckMass:Ru.createPlanckMass};t.planckMassDependencies=n})),vh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.planckTemperatureDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckTemperature:Ru.createPlanckTemperature};t.planckTemperatureDependencies=n})),gh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.planckTimeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckTime:Ru.createPlanckTime};t.planckTimeDependencies=n})),bh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.protonMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createProtonMass:Ru.createProtonMass};t.protonMassDependencies=n})),xh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.quantumOfCirculationDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createQuantumOfCirculation:Ru.createQuantumOfCirculation};t.quantumOfCirculationDependencies=n})),Dh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.reducedPlanckConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createReducedPlanckConstant:Ru.createReducedPlanckConstant};t.reducedPlanckConstantDependencies=n})),_h=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rydbergDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createRydberg:Ru.createRydberg};t.rydbergDependencies=n})),wh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sackurTetrodeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createSackurTetrode:Ru.createSackurTetrode};t.sackurTetrodeDependencies=n})),Nh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.secondRadiationDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createSecondRadiation:Ru.createSecondRadiation};t.secondRadiationDependencies=n})),Mh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.speedOfLightDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createSpeedOfLight:Ru.createSpeedOfLight};t.speedOfLightDependencies=n})),Oh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stefanBoltzmannDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createStefanBoltzmann:Ru.createStefanBoltzmann};t.stefanBoltzmannDependencies=n})),Sh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.thomsonCrossSectionDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createThomsonCrossSection:Ru.createThomsonCrossSection};t.thomsonCrossSectionDependencies=n})),Ph=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.vacuumImpedanceDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createVacuumImpedance:Ru.createVacuumImpedance};t.vacuumImpedanceDependencies=n})),jh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.weakMixingAngleDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createWeakMixingAngle:Ru.createWeakMixingAngle};t.weakMixingAngleDependencies=n})),Ah=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.wienDisplacementDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createWienDisplacement:Ru.createWienDisplacement};t.wienDisplacementDependencies=n})),Eh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.applyTransformDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,typedDependencies:Gu.typedDependencies,createApplyTransform:Ru.createApplyTransform};t.applyTransformDependencies=n})),Ch=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.columnTransformDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createColumnTransform:Ru.createColumnTransform};t.columnTransformDependencies=n})),Th=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.filterTransformDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createFilterTransform:Ru.createFilterTransform};t.filterTransformDependencies=n})),kh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.forEachTransformDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createForEachTransform:Ru.createForEachTransform};t.forEachTransformDependencies=n})),Ih=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.indexTransformDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,createIndexTransform:Ru.createIndexTransform};t.indexTransformDependencies=n})),Bh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.mapTransformDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createMapTransform:Ru.createMapTransform};t.mapTransformDependencies=n})),zh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.maxTransformDependencies=void 0;var n={largerDependencies:od.largerDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createMaxTransform:Ru.createMaxTransform};t.maxTransformDependencies=n})),Rh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.meanTransformDependencies=void 0;var n={addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,typedDependencies:Gu.typedDependencies,createMeanTransform:Ru.createMeanTransform};t.meanTransformDependencies=n})),qh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.minTransformDependencies=void 0;var n={numericDependencies:Cd.numericDependencies,smallerDependencies:rd.smallerDependencies,typedDependencies:Gu.typedDependencies,createMinTransform:Ru.createMinTransform};t.minTransformDependencies=n})),Fh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rangeTransformDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,matrixDependencies:pl.matrixDependencies,largerDependencies:od.largerDependencies,largerEqDependencies:sd.largerEqDependencies,smallerDependencies:rd.smallerDependencies,smallerEqDependencies:cd.smallerEqDependencies,typedDependencies:Gu.typedDependencies,createRangeTransform:Ru.createRangeTransform};t.rangeTransformDependencies=n})),Uh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.rowTransformDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createRowTransform:Ru.createRowTransform};t.rowTransformDependencies=n})),Lh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.subsetTransformDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSubsetTransform:Ru.createSubsetTransform};t.subsetTransformDependencies=n})),Hh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.concatTransformDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createConcatTransform:Ru.createConcatTransform};t.concatTransformDependencies=n})),Zh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.diffTransformDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,matrixDependencies:pl.matrixDependencies,numberDependencies:sl.numberDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createDiffTransform:Ru.createDiffTransform};t.diffTransformDependencies=n})),Vh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.stdTransformDependencies=void 0;var n={sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,varianceDependencies:$p.varianceDependencies,createStdTransform:Ru.createStdTransform};t.stdTransformDependencies=n})),Wh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.sumTransformDependencies=void 0;var n={addDependencies:Md.addDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createSumTransform:Ru.createSumTransform};t.sumTransformDependencies=n})),Gh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.varianceTransformDependencies=void 0;var n={addDependencies:Md.addDependencies,applyDependencies:gl.applyDependencies,divideDependencies:Up.divideDependencies,isNaNDependencies:rl.isNaNDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createVarianceTransform:Ru.createVarianceTransform};t.varianceTransformDependencies=n})),$h=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t.all=void 0;var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var i={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var s=a?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(i,o,s):i[o]=e[o]}i.default=e,t&&t.set(e,i);return i}(Ru);t.all=i})),Qh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"typedDependencies",{enumerable:!0,get:function(){return Gu.typedDependencies}}),Object.defineProperty(t,"ResultSetDependencies",{enumerable:!0,get:function(){return $u.ResultSetDependencies}}),Object.defineProperty(t,"BigNumberDependencies",{enumerable:!0,get:function(){return Lu.BigNumberDependencies}}),Object.defineProperty(t,"ComplexDependencies",{enumerable:!0,get:function(){return Hu.ComplexDependencies}}),Object.defineProperty(t,"FractionDependencies",{enumerable:!0,get:function(){return Wu.FractionDependencies}}),Object.defineProperty(t,"RangeDependencies",{enumerable:!0,get:function(){return Qu.RangeDependencies}}),Object.defineProperty(t,"MatrixDependencies",{enumerable:!0,get:function(){return Zu.MatrixDependencies}}),Object.defineProperty(t,"DenseMatrixDependencies",{enumerable:!0,get:function(){return Vu.DenseMatrixDependencies}}),Object.defineProperty(t,"cloneDependencies",{enumerable:!0,get:function(){return Xu.cloneDependencies}}),Object.defineProperty(t,"isIntegerDependencies",{enumerable:!0,get:function(){return Yu.isIntegerDependencies}}),Object.defineProperty(t,"isNegativeDependencies",{enumerable:!0,get:function(){return Ju.isNegativeDependencies}}),Object.defineProperty(t,"isNumericDependencies",{enumerable:!0,get:function(){return Ku.isNumericDependencies}}),Object.defineProperty(t,"hasNumericValueDependencies",{enumerable:!0,get:function(){return el.hasNumericValueDependencies}}),Object.defineProperty(t,"isPositiveDependencies",{enumerable:!0,get:function(){return tl.isPositiveDependencies}}),Object.defineProperty(t,"isZeroDependencies",{enumerable:!0,get:function(){return nl.isZeroDependencies}}),Object.defineProperty(t,"isNaNDependencies",{enumerable:!0,get:function(){return rl.isNaNDependencies}}),Object.defineProperty(t,"typeOfDependencies",{enumerable:!0,get:function(){return il.typeOfDependencies}}),Object.defineProperty(t,"equalScalarDependencies",{enumerable:!0,get:function(){return al.equalScalarDependencies}}),Object.defineProperty(t,"SparseMatrixDependencies",{enumerable:!0,get:function(){return ol.SparseMatrixDependencies}}),Object.defineProperty(t,"numberDependencies",{enumerable:!0,get:function(){return sl.numberDependencies}}),Object.defineProperty(t,"stringDependencies",{enumerable:!0,get:function(){return cl.stringDependencies}}),Object.defineProperty(t,"booleanDependencies",{enumerable:!0,get:function(){return ul.booleanDependencies}}),Object.defineProperty(t,"bignumberDependencies",{enumerable:!0,get:function(){return ll.bignumberDependencies}}),Object.defineProperty(t,"complexDependencies",{enumerable:!0,get:function(){return dl.complexDependencies}}),Object.defineProperty(t,"fractionDependencies",{enumerable:!0,get:function(){return fl.fractionDependencies}}),Object.defineProperty(t,"matrixDependencies",{enumerable:!0,get:function(){return pl.matrixDependencies}}),Object.defineProperty(t,"splitUnitDependencies",{enumerable:!0,get:function(){return ml.splitUnitDependencies}}),Object.defineProperty(t,"unaryMinusDependencies",{enumerable:!0,get:function(){return hl.unaryMinusDependencies}}),Object.defineProperty(t,"unaryPlusDependencies",{enumerable:!0,get:function(){return yl.unaryPlusDependencies}}),Object.defineProperty(t,"absDependencies",{enumerable:!0,get:function(){return vl.absDependencies}}),Object.defineProperty(t,"applyDependencies",{enumerable:!0,get:function(){return gl.applyDependencies}}),Object.defineProperty(t,"addScalarDependencies",{enumerable:!0,get:function(){return bl.addScalarDependencies}}),Object.defineProperty(t,"cbrtDependencies",{enumerable:!0,get:function(){return xl.cbrtDependencies}}),Object.defineProperty(t,"ceilDependencies",{enumerable:!0,get:function(){return wl.ceilDependencies}}),Object.defineProperty(t,"cubeDependencies",{enumerable:!0,get:function(){return Nl.cubeDependencies}}),Object.defineProperty(t,"expDependencies",{enumerable:!0,get:function(){return Ml.expDependencies}}),Object.defineProperty(t,"expm1Dependencies",{enumerable:!0,get:function(){return Ol.expm1Dependencies}}),Object.defineProperty(t,"fixDependencies",{enumerable:!0,get:function(){return Pl.fixDependencies}}),Object.defineProperty(t,"floorDependencies",{enumerable:!0,get:function(){return Sl.floorDependencies}}),Object.defineProperty(t,"gcdDependencies",{enumerable:!0,get:function(){return jl.gcdDependencies}}),Object.defineProperty(t,"lcmDependencies",{enumerable:!0,get:function(){return Al.lcmDependencies}}),Object.defineProperty(t,"log10Dependencies",{enumerable:!0,get:function(){return El.log10Dependencies}}),Object.defineProperty(t,"log2Dependencies",{enumerable:!0,get:function(){return Cl.log2Dependencies}}),Object.defineProperty(t,"modDependencies",{enumerable:!0,get:function(){return Tl.modDependencies}}),Object.defineProperty(t,"multiplyScalarDependencies",{enumerable:!0,get:function(){return kl.multiplyScalarDependencies}}),Object.defineProperty(t,"multiplyDependencies",{enumerable:!0,get:function(){return Rl.multiplyDependencies}}),Object.defineProperty(t,"nthRootDependencies",{enumerable:!0,get:function(){return ql.nthRootDependencies}}),Object.defineProperty(t,"signDependencies",{enumerable:!0,get:function(){return Fl.signDependencies}}),Object.defineProperty(t,"sqrtDependencies",{enumerable:!0,get:function(){return Ul.sqrtDependencies}}),Object.defineProperty(t,"squareDependencies",{enumerable:!0,get:function(){return Ll.squareDependencies}}),Object.defineProperty(t,"subtractDependencies",{enumerable:!0,get:function(){return Hl.subtractDependencies}}),Object.defineProperty(t,"xgcdDependencies",{enumerable:!0,get:function(){return Zl.xgcdDependencies}}),Object.defineProperty(t,"dotMultiplyDependencies",{enumerable:!0,get:function(){return Vl.dotMultiplyDependencies}}),Object.defineProperty(t,"bitAndDependencies",{enumerable:!0,get:function(){return Wl.bitAndDependencies}}),Object.defineProperty(t,"bitNotDependencies",{enumerable:!0,get:function(){return Gl.bitNotDependencies}}),Object.defineProperty(t,"bitOrDependencies",{enumerable:!0,get:function(){return $l.bitOrDependencies}}),Object.defineProperty(t,"bitXorDependencies",{enumerable:!0,get:function(){return Ql.bitXorDependencies}}),Object.defineProperty(t,"argDependencies",{enumerable:!0,get:function(){return Xl.argDependencies}}),Object.defineProperty(t,"conjDependencies",{enumerable:!0,get:function(){return Il.conjDependencies}}),Object.defineProperty(t,"imDependencies",{enumerable:!0,get:function(){return Yl.imDependencies}}),Object.defineProperty(t,"reDependencies",{enumerable:!0,get:function(){return Jl.reDependencies}}),Object.defineProperty(t,"notDependencies",{enumerable:!0,get:function(){return Kl.notDependencies}}),Object.defineProperty(t,"orDependencies",{enumerable:!0,get:function(){return ed.orDependencies}}),Object.defineProperty(t,"xorDependencies",{enumerable:!0,get:function(){return td.xorDependencies}}),Object.defineProperty(t,"concatDependencies",{enumerable:!0,get:function(){return nd.concatDependencies}}),Object.defineProperty(t,"columnDependencies",{enumerable:!0,get:function(){return ld.columnDependencies}}),Object.defineProperty(t,"crossDependencies",{enumerable:!0,get:function(){return dd.crossDependencies}}),Object.defineProperty(t,"diagDependencies",{enumerable:!0,get:function(){return fd.diagDependencies}}),Object.defineProperty(t,"filterDependencies",{enumerable:!0,get:function(){return pd.filterDependencies}}),Object.defineProperty(t,"flattenDependencies",{enumerable:!0,get:function(){return md.flattenDependencies}}),Object.defineProperty(t,"forEachDependencies",{enumerable:!0,get:function(){return hd.forEachDependencies}}),Object.defineProperty(t,"getMatrixDataTypeDependencies",{enumerable:!0,get:function(){return yd.getMatrixDataTypeDependencies}}),Object.defineProperty(t,"identityDependencies",{enumerable:!0,get:function(){return vd.identityDependencies}}),Object.defineProperty(t,"kronDependencies",{enumerable:!0,get:function(){return gd.kronDependencies}}),Object.defineProperty(t,"mapDependencies",{enumerable:!0,get:function(){return bd.mapDependencies}}),Object.defineProperty(t,"diffDependencies",{enumerable:!0,get:function(){return xd.diffDependencies}}),Object.defineProperty(t,"onesDependencies",{enumerable:!0,get:function(){return Dd.onesDependencies}}),Object.defineProperty(t,"rangeDependencies",{enumerable:!0,get:function(){return ud.rangeDependencies}}),Object.defineProperty(t,"reshapeDependencies",{enumerable:!0,get:function(){return _d.reshapeDependencies}}),Object.defineProperty(t,"resizeDependencies",{enumerable:!0,get:function(){return wd.resizeDependencies}}),Object.defineProperty(t,"rotateDependencies",{enumerable:!0,get:function(){return Ld.rotateDependencies}}),Object.defineProperty(t,"rotationMatrixDependencies",{enumerable:!0,get:function(){return Ud.rotationMatrixDependencies}}),Object.defineProperty(t,"rowDependencies",{enumerable:!0,get:function(){return Hd.rowDependencies}}),Object.defineProperty(t,"sizeDependencies",{enumerable:!0,get:function(){return Bl.sizeDependencies}}),Object.defineProperty(t,"squeezeDependencies",{enumerable:!0,get:function(){return Zd.squeezeDependencies}}),Object.defineProperty(t,"subsetDependencies",{enumerable:!0,get:function(){return Vd.subsetDependencies}}),Object.defineProperty(t,"transposeDependencies",{enumerable:!0,get:function(){return Od.transposeDependencies}}),Object.defineProperty(t,"ctransposeDependencies",{enumerable:!0,get:function(){return Sd.ctransposeDependencies}}),Object.defineProperty(t,"zerosDependencies",{enumerable:!0,get:function(){return Dl.zerosDependencies}}),Object.defineProperty(t,"erfDependencies",{enumerable:!0,get:function(){return Wd.erfDependencies}}),Object.defineProperty(t,"modeDependencies",{enumerable:!0,get:function(){return Gd.modeDependencies}}),Object.defineProperty(t,"prodDependencies",{enumerable:!0,get:function(){return $d.prodDependencies}}),Object.defineProperty(t,"formatDependencies",{enumerable:!0,get:function(){return Qd.formatDependencies}}),Object.defineProperty(t,"binDependencies",{enumerable:!0,get:function(){return Xd.binDependencies}}),Object.defineProperty(t,"octDependencies",{enumerable:!0,get:function(){return Yd.octDependencies}}),Object.defineProperty(t,"hexDependencies",{enumerable:!0,get:function(){return Jd.hexDependencies}}),Object.defineProperty(t,"printDependencies",{enumerable:!0,get:function(){return Kd.printDependencies}}),Object.defineProperty(t,"toDependencies",{enumerable:!0,get:function(){return ef.toDependencies}}),Object.defineProperty(t,"isPrimeDependencies",{enumerable:!0,get:function(){return tf.isPrimeDependencies}}),Object.defineProperty(t,"numericDependencies",{enumerable:!0,get:function(){return Cd.numericDependencies}}),Object.defineProperty(t,"divideScalarDependencies",{enumerable:!0,get:function(){return Td.divideScalarDependencies}}),Object.defineProperty(t,"powDependencies",{enumerable:!0,get:function(){return qd.powDependencies}}),Object.defineProperty(t,"roundDependencies",{enumerable:!0,get:function(){return _l.roundDependencies}}),Object.defineProperty(t,"logDependencies",{enumerable:!0,get:function(){return nf.logDependencies}}),Object.defineProperty(t,"log1pDependencies",{enumerable:!0,get:function(){return rf.log1pDependencies}}),Object.defineProperty(t,"nthRootsDependencies",{enumerable:!0,get:function(){return af.nthRootsDependencies}}),Object.defineProperty(t,"dotPowDependencies",{enumerable:!0,get:function(){return of.dotPowDependencies}}),Object.defineProperty(t,"dotDivideDependencies",{enumerable:!0,get:function(){return sf.dotDivideDependencies}}),Object.defineProperty(t,"lsolveDependencies",{enumerable:!0,get:function(){return cf.lsolveDependencies}}),Object.defineProperty(t,"usolveDependencies",{enumerable:!0,get:function(){return uf.usolveDependencies}}),Object.defineProperty(t,"lsolveAllDependencies",{enumerable:!0,get:function(){return lf.lsolveAllDependencies}}),Object.defineProperty(t,"usolveAllDependencies",{enumerable:!0,get:function(){return df.usolveAllDependencies}}),Object.defineProperty(t,"leftShiftDependencies",{enumerable:!0,get:function(){return ff.leftShiftDependencies}}),Object.defineProperty(t,"rightArithShiftDependencies",{enumerable:!0,get:function(){return pf.rightArithShiftDependencies}}),Object.defineProperty(t,"rightLogShiftDependencies",{enumerable:!0,get:function(){return mf.rightLogShiftDependencies}}),Object.defineProperty(t,"andDependencies",{enumerable:!0,get:function(){return hf.andDependencies}}),Object.defineProperty(t,"compareDependencies",{enumerable:!0,get:function(){return yf.compareDependencies}}),Object.defineProperty(t,"compareNaturalDependencies",{enumerable:!0,get:function(){return vf.compareNaturalDependencies}}),Object.defineProperty(t,"compareTextDependencies",{enumerable:!0,get:function(){return gf.compareTextDependencies}}),Object.defineProperty(t,"equalDependencies",{enumerable:!0,get:function(){return jd.equalDependencies}}),Object.defineProperty(t,"equalTextDependencies",{enumerable:!0,get:function(){return bf.equalTextDependencies}}),Object.defineProperty(t,"smallerDependencies",{enumerable:!0,get:function(){return rd.smallerDependencies}}),Object.defineProperty(t,"smallerEqDependencies",{enumerable:!0,get:function(){return cd.smallerEqDependencies}}),Object.defineProperty(t,"largerDependencies",{enumerable:!0,get:function(){return od.largerDependencies}}),Object.defineProperty(t,"largerEqDependencies",{enumerable:!0,get:function(){return sd.largerEqDependencies}}),Object.defineProperty(t,"deepEqualDependencies",{enumerable:!0,get:function(){return xf.deepEqualDependencies}}),Object.defineProperty(t,"unequalDependencies",{enumerable:!0,get:function(){return Df.unequalDependencies}}),Object.defineProperty(t,"partitionSelectDependencies",{enumerable:!0,get:function(){return _f.partitionSelectDependencies}}),Object.defineProperty(t,"sortDependencies",{enumerable:!0,get:function(){return wf.sortDependencies}}),Object.defineProperty(t,"maxDependencies",{enumerable:!0,get:function(){return Nf.maxDependencies}}),Object.defineProperty(t,"minDependencies",{enumerable:!0,get:function(){return Mf.minDependencies}}),Object.defineProperty(t,"ImmutableDenseMatrixDependencies",{enumerable:!0,get:function(){return id.ImmutableDenseMatrixDependencies}}),Object.defineProperty(t,"IndexDependencies",{enumerable:!0,get:function(){return ad.IndexDependencies}}),Object.defineProperty(t,"FibonacciHeapDependencies",{enumerable:!0,get:function(){return Ad.FibonacciHeapDependencies}}),Object.defineProperty(t,"SpaDependencies",{enumerable:!0,get:function(){return Ed.SpaDependencies}}),Object.defineProperty(t,"UnitDependencies",{enumerable:!0,get:function(){return Of.UnitDependencies}}),Object.defineProperty(t,"unitDependencies",{enumerable:!0,get:function(){return Sf.unitDependencies}}),Object.defineProperty(t,"sparseDependencies",{enumerable:!0,get:function(){return Pf.sparseDependencies}}),Object.defineProperty(t,"createUnitDependencies",{enumerable:!0,get:function(){return jf.createUnitDependencies}}),Object.defineProperty(t,"acosDependencies",{enumerable:!0,get:function(){return Af.acosDependencies}}),Object.defineProperty(t,"acoshDependencies",{enumerable:!0,get:function(){return Ef.acoshDependencies}}),Object.defineProperty(t,"acotDependencies",{enumerable:!0,get:function(){return Cf.acotDependencies}}),Object.defineProperty(t,"acothDependencies",{enumerable:!0,get:function(){return Tf.acothDependencies}}),Object.defineProperty(t,"acscDependencies",{enumerable:!0,get:function(){return kf.acscDependencies}}),Object.defineProperty(t,"acschDependencies",{enumerable:!0,get:function(){return If.acschDependencies}}),Object.defineProperty(t,"asecDependencies",{enumerable:!0,get:function(){return Bf.asecDependencies}}),Object.defineProperty(t,"asechDependencies",{enumerable:!0,get:function(){return zf.asechDependencies}}),Object.defineProperty(t,"asinDependencies",{enumerable:!0,get:function(){return Rf.asinDependencies}}),Object.defineProperty(t,"asinhDependencies",{enumerable:!0,get:function(){return qf.asinhDependencies}}),Object.defineProperty(t,"atanDependencies",{enumerable:!0,get:function(){return Pd.atanDependencies}}),Object.defineProperty(t,"atan2Dependencies",{enumerable:!0,get:function(){return Ff.atan2Dependencies}}),Object.defineProperty(t,"atanhDependencies",{enumerable:!0,get:function(){return Uf.atanhDependencies}}),Object.defineProperty(t,"cosDependencies",{enumerable:!0,get:function(){return Nd.cosDependencies}}),Object.defineProperty(t,"coshDependencies",{enumerable:!0,get:function(){return Lf.coshDependencies}}),Object.defineProperty(t,"cotDependencies",{enumerable:!0,get:function(){return Hf.cotDependencies}}),Object.defineProperty(t,"cothDependencies",{enumerable:!0,get:function(){return Zf.cothDependencies}}),Object.defineProperty(t,"cscDependencies",{enumerable:!0,get:function(){return Vf.cscDependencies}}),Object.defineProperty(t,"cschDependencies",{enumerable:!0,get:function(){return Wf.cschDependencies}}),Object.defineProperty(t,"secDependencies",{enumerable:!0,get:function(){return Gf.secDependencies}}),Object.defineProperty(t,"sechDependencies",{enumerable:!0,get:function(){return $f.sechDependencies}}),Object.defineProperty(t,"sinDependencies",{enumerable:!0,get:function(){return zd.sinDependencies}}),Object.defineProperty(t,"sinhDependencies",{enumerable:!0,get:function(){return Qf.sinhDependencies}}),Object.defineProperty(t,"tanDependencies",{enumerable:!0,get:function(){return Xf.tanDependencies}}),Object.defineProperty(t,"tanhDependencies",{enumerable:!0,get:function(){return Yf.tanhDependencies}}),Object.defineProperty(t,"setCartesianDependencies",{enumerable:!0,get:function(){return Jf.setCartesianDependencies}}),Object.defineProperty(t,"setDifferenceDependencies",{enumerable:!0,get:function(){return Kf.setDifferenceDependencies}}),Object.defineProperty(t,"setDistinctDependencies",{enumerable:!0,get:function(){return ep.setDistinctDependencies}}),Object.defineProperty(t,"setIntersectDependencies",{enumerable:!0,get:function(){return tp.setIntersectDependencies}}),Object.defineProperty(t,"setIsSubsetDependencies",{enumerable:!0,get:function(){return np.setIsSubsetDependencies}}),Object.defineProperty(t,"setMultiplicityDependencies",{enumerable:!0,get:function(){return rp.setMultiplicityDependencies}}),Object.defineProperty(t,"setPowersetDependencies",{enumerable:!0,get:function(){return ip.setPowersetDependencies}}),Object.defineProperty(t,"setSizeDependencies",{enumerable:!0,get:function(){return ap.setSizeDependencies}}),Object.defineProperty(t,"setSymDifferenceDependencies",{enumerable:!0,get:function(){return op.setSymDifferenceDependencies}}),Object.defineProperty(t,"setUnionDependencies",{enumerable:!0,get:function(){return sp.setUnionDependencies}}),Object.defineProperty(t,"addDependencies",{enumerable:!0,get:function(){return Md.addDependencies}}),Object.defineProperty(t,"hypotDependencies",{enumerable:!0,get:function(){return cp.hypotDependencies}}),Object.defineProperty(t,"normDependencies",{enumerable:!0,get:function(){return Fd.normDependencies}}),Object.defineProperty(t,"dotDependencies",{enumerable:!0,get:function(){return zl.dotDependencies}}),Object.defineProperty(t,"traceDependencies",{enumerable:!0,get:function(){return up.traceDependencies}}),Object.defineProperty(t,"indexDependencies",{enumerable:!0,get:function(){return lp.indexDependencies}}),Object.defineProperty(t,"NodeDependencies",{enumerable:!0,get:function(){return dp.NodeDependencies}}),Object.defineProperty(t,"AccessorNodeDependencies",{enumerable:!0,get:function(){return fp.AccessorNodeDependencies}}),Object.defineProperty(t,"ArrayNodeDependencies",{enumerable:!0,get:function(){return pp.ArrayNodeDependencies}}),Object.defineProperty(t,"AssignmentNodeDependencies",{enumerable:!0,get:function(){return mp.AssignmentNodeDependencies}}),Object.defineProperty(t,"BlockNodeDependencies",{enumerable:!0,get:function(){return hp.BlockNodeDependencies}}),Object.defineProperty(t,"ConditionalNodeDependencies",{enumerable:!0,get:function(){return yp.ConditionalNodeDependencies}}),Object.defineProperty(t,"ConstantNodeDependencies",{enumerable:!0,get:function(){return vp.ConstantNodeDependencies}}),Object.defineProperty(t,"FunctionAssignmentNodeDependencies",{enumerable:!0,get:function(){return gp.FunctionAssignmentNodeDependencies}}),Object.defineProperty(t,"IndexNodeDependencies",{enumerable:!0,get:function(){return bp.IndexNodeDependencies}}),Object.defineProperty(t,"ObjectNodeDependencies",{enumerable:!0,get:function(){return xp.ObjectNodeDependencies}}),Object.defineProperty(t,"OperatorNodeDependencies",{enumerable:!0,get:function(){return Dp.OperatorNodeDependencies}}),Object.defineProperty(t,"ParenthesisNodeDependencies",{enumerable:!0,get:function(){return _p.ParenthesisNodeDependencies}}),Object.defineProperty(t,"RangeNodeDependencies",{enumerable:!0,get:function(){return wp.RangeNodeDependencies}}),Object.defineProperty(t,"RelationalNodeDependencies",{enumerable:!0,get:function(){return Np.RelationalNodeDependencies}}),Object.defineProperty(t,"SymbolNodeDependencies",{enumerable:!0,get:function(){return Mp.SymbolNodeDependencies}}),Object.defineProperty(t,"FunctionNodeDependencies",{enumerable:!0,get:function(){return Op.FunctionNodeDependencies}}),Object.defineProperty(t,"parseDependencies",{enumerable:!0,get:function(){return Sp.parseDependencies}}),Object.defineProperty(t,"compileDependencies",{enumerable:!0,get:function(){return Pp.compileDependencies}}),Object.defineProperty(t,"evaluateDependencies",{enumerable:!0,get:function(){return jp.evaluateDependencies}}),Object.defineProperty(t,"ParserDependencies",{enumerable:!0,get:function(){return Ap.ParserDependencies}}),Object.defineProperty(t,"parserDependencies",{enumerable:!0,get:function(){return Ep.parserDependencies}}),Object.defineProperty(t,"lupDependencies",{enumerable:!0,get:function(){return kd.lupDependencies}}),Object.defineProperty(t,"qrDependencies",{enumerable:!0,get:function(){return Cp.qrDependencies}}),Object.defineProperty(t,"sluDependencies",{enumerable:!0,get:function(){return Tp.sluDependencies}}),Object.defineProperty(t,"lusolveDependencies",{enumerable:!0,get:function(){return kp.lusolveDependencies}}),Object.defineProperty(t,"HelpDependencies",{enumerable:!0,get:function(){return Ip.HelpDependencies}}),Object.defineProperty(t,"ChainDependencies",{enumerable:!0,get:function(){return Bp.ChainDependencies}}),Object.defineProperty(t,"helpDependencies",{enumerable:!0,get:function(){return zp.helpDependencies}}),Object.defineProperty(t,"chainDependencies",{enumerable:!0,get:function(){return Rp.chainDependencies}}),Object.defineProperty(t,"detDependencies",{enumerable:!0,get:function(){return Id.detDependencies}}),Object.defineProperty(t,"invDependencies",{enumerable:!0,get:function(){return Bd.invDependencies}}),Object.defineProperty(t,"eigsDependencies",{enumerable:!0,get:function(){return Rd.eigsDependencies}}),Object.defineProperty(t,"expmDependencies",{enumerable:!0,get:function(){return qp.expmDependencies}}),Object.defineProperty(t,"sqrtmDependencies",{enumerable:!0,get:function(){return Fp.sqrtmDependencies}}),Object.defineProperty(t,"divideDependencies",{enumerable:!0,get:function(){return Up.divideDependencies}}),Object.defineProperty(t,"distanceDependencies",{enumerable:!0,get:function(){return Lp.distanceDependencies}}),Object.defineProperty(t,"intersectDependencies",{enumerable:!0,get:function(){return Hp.intersectDependencies}}),Object.defineProperty(t,"sumDependencies",{enumerable:!0,get:function(){return Zp.sumDependencies}}),Object.defineProperty(t,"meanDependencies",{enumerable:!0,get:function(){return Vp.meanDependencies}}),Object.defineProperty(t,"medianDependencies",{enumerable:!0,get:function(){return Wp.medianDependencies}}),Object.defineProperty(t,"madDependencies",{enumerable:!0,get:function(){return Gp.madDependencies}}),Object.defineProperty(t,"varianceDependencies",{enumerable:!0,get:function(){return $p.varianceDependencies}}),Object.defineProperty(t,"quantileSeqDependencies",{enumerable:!0,get:function(){return Qp.quantileSeqDependencies}}),Object.defineProperty(t,"stdDependencies",{enumerable:!0,get:function(){return Xp.stdDependencies}}),Object.defineProperty(t,"combinationsDependencies",{enumerable:!0,get:function(){return Yp.combinationsDependencies}}),Object.defineProperty(t,"combinationsWithRepDependencies",{enumerable:!0,get:function(){return Jp.combinationsWithRepDependencies}}),Object.defineProperty(t,"gammaDependencies",{enumerable:!0,get:function(){return Kp.gammaDependencies}}),Object.defineProperty(t,"factorialDependencies",{enumerable:!0,get:function(){return em.factorialDependencies}}),Object.defineProperty(t,"kldivergenceDependencies",{enumerable:!0,get:function(){return tm.kldivergenceDependencies}}),Object.defineProperty(t,"multinomialDependencies",{enumerable:!0,get:function(){return nm.multinomialDependencies}}),Object.defineProperty(t,"permutationsDependencies",{enumerable:!0,get:function(){return rm.permutationsDependencies}}),Object.defineProperty(t,"pickRandomDependencies",{enumerable:!0,get:function(){return im.pickRandomDependencies}}),Object.defineProperty(t,"randomDependencies",{enumerable:!0,get:function(){return am.randomDependencies}}),Object.defineProperty(t,"randomIntDependencies",{enumerable:!0,get:function(){return om.randomIntDependencies}}),Object.defineProperty(t,"stirlingS2Dependencies",{enumerable:!0,get:function(){return sm.stirlingS2Dependencies}}),Object.defineProperty(t,"bellNumbersDependencies",{enumerable:!0,get:function(){return cm.bellNumbersDependencies}}),Object.defineProperty(t,"catalanDependencies",{enumerable:!0,get:function(){return um.catalanDependencies}}),Object.defineProperty(t,"compositionDependencies",{enumerable:!0,get:function(){return lm.compositionDependencies}}),Object.defineProperty(t,"simplifyDependencies",{enumerable:!0,get:function(){return dm.simplifyDependencies}}),Object.defineProperty(t,"derivativeDependencies",{enumerable:!0,get:function(){return fm.derivativeDependencies}}),Object.defineProperty(t,"rationalizeDependencies",{enumerable:!0,get:function(){return pm.rationalizeDependencies}}),Object.defineProperty(t,"reviverDependencies",{enumerable:!0,get:function(){return mm.reviverDependencies}}),Object.defineProperty(t,"replacerDependencies",{enumerable:!0,get:function(){return hm.replacerDependencies}}),Object.defineProperty(t,"eDependencies",{enumerable:!0,get:function(){return ym.eDependencies}}),Object.defineProperty(t,"EDependencies",{enumerable:!0,get:function(){return vm.EDependencies}}),Object.defineProperty(t,"falseDependencies",{enumerable:!0,get:function(){return gm.falseDependencies}}),Object.defineProperty(t,"iDependencies",{enumerable:!0,get:function(){return bm.iDependencies}}),Object.defineProperty(t,"InfinityDependencies",{enumerable:!0,get:function(){return xm.InfinityDependencies}}),Object.defineProperty(t,"LN10Dependencies",{enumerable:!0,get:function(){return Dm.LN10Dependencies}}),Object.defineProperty(t,"LN2Dependencies",{enumerable:!0,get:function(){return _m.LN2Dependencies}}),Object.defineProperty(t,"LOG10EDependencies",{enumerable:!0,get:function(){return wm.LOG10EDependencies}}),Object.defineProperty(t,"LOG2EDependencies",{enumerable:!0,get:function(){return Nm.LOG2EDependencies}}),Object.defineProperty(t,"NaNDependencies",{enumerable:!0,get:function(){return Mm.NaNDependencies}}),Object.defineProperty(t,"nullDependencies",{enumerable:!0,get:function(){return Om.nullDependencies}}),Object.defineProperty(t,"phiDependencies",{enumerable:!0,get:function(){return Sm.phiDependencies}}),Object.defineProperty(t,"piDependencies",{enumerable:!0,get:function(){return Pm.piDependencies}}),Object.defineProperty(t,"PIDependencies",{enumerable:!0,get:function(){return jm.PIDependencies}}),Object.defineProperty(t,"SQRT1_2Dependencies",{enumerable:!0,get:function(){return Am.SQRT1_2Dependencies}}),Object.defineProperty(t,"SQRT2Dependencies",{enumerable:!0,get:function(){return Em.SQRT2Dependencies}}),Object.defineProperty(t,"tauDependencies",{enumerable:!0,get:function(){return Cm.tauDependencies}}),Object.defineProperty(t,"trueDependencies",{enumerable:!0,get:function(){return Tm.trueDependencies}}),Object.defineProperty(t,"versionDependencies",{enumerable:!0,get:function(){return km.versionDependencies}}),Object.defineProperty(t,"atomicMassDependencies",{enumerable:!0,get:function(){return Im.atomicMassDependencies}}),Object.defineProperty(t,"avogadroDependencies",{enumerable:!0,get:function(){return Bm.avogadroDependencies}}),Object.defineProperty(t,"bohrMagnetonDependencies",{enumerable:!0,get:function(){return zm.bohrMagnetonDependencies}}),Object.defineProperty(t,"bohrRadiusDependencies",{enumerable:!0,get:function(){return Rm.bohrRadiusDependencies}}),Object.defineProperty(t,"boltzmannDependencies",{enumerable:!0,get:function(){return qm.boltzmannDependencies}}),Object.defineProperty(t,"classicalElectronRadiusDependencies",{enumerable:!0,get:function(){return Fm.classicalElectronRadiusDependencies}}),Object.defineProperty(t,"conductanceQuantumDependencies",{enumerable:!0,get:function(){return Um.conductanceQuantumDependencies}}),Object.defineProperty(t,"coulombDependencies",{enumerable:!0,get:function(){return Lm.coulombDependencies}}),Object.defineProperty(t,"deuteronMassDependencies",{enumerable:!0,get:function(){return Hm.deuteronMassDependencies}}),Object.defineProperty(t,"efimovFactorDependencies",{enumerable:!0,get:function(){return Zm.efimovFactorDependencies}}),Object.defineProperty(t,"electricConstantDependencies",{enumerable:!0,get:function(){return Vm.electricConstantDependencies}}),Object.defineProperty(t,"electronMassDependencies",{enumerable:!0,get:function(){return Wm.electronMassDependencies}}),Object.defineProperty(t,"elementaryChargeDependencies",{enumerable:!0,get:function(){return Gm.elementaryChargeDependencies}}),Object.defineProperty(t,"faradayDependencies",{enumerable:!0,get:function(){return $m.faradayDependencies}}),Object.defineProperty(t,"fermiCouplingDependencies",{enumerable:!0,get:function(){return Qm.fermiCouplingDependencies}}),Object.defineProperty(t,"fineStructureDependencies",{enumerable:!0,get:function(){return Xm.fineStructureDependencies}}),Object.defineProperty(t,"firstRadiationDependencies",{enumerable:!0,get:function(){return Ym.firstRadiationDependencies}}),Object.defineProperty(t,"gasConstantDependencies",{enumerable:!0,get:function(){return Jm.gasConstantDependencies}}),Object.defineProperty(t,"gravitationConstantDependencies",{enumerable:!0,get:function(){return Km.gravitationConstantDependencies}}),Object.defineProperty(t,"gravityDependencies",{enumerable:!0,get:function(){return eh.gravityDependencies}}),Object.defineProperty(t,"hartreeEnergyDependencies",{enumerable:!0,get:function(){return th.hartreeEnergyDependencies}}),Object.defineProperty(t,"inverseConductanceQuantumDependencies",{enumerable:!0,get:function(){return nh.inverseConductanceQuantumDependencies}}),Object.defineProperty(t,"klitzingDependencies",{enumerable:!0,get:function(){return rh.klitzingDependencies}}),Object.defineProperty(t,"loschmidtDependencies",{enumerable:!0,get:function(){return ih.loschmidtDependencies}}),Object.defineProperty(t,"magneticConstantDependencies",{enumerable:!0,get:function(){return ah.magneticConstantDependencies}}),Object.defineProperty(t,"magneticFluxQuantumDependencies",{enumerable:!0,get:function(){return oh.magneticFluxQuantumDependencies}}),Object.defineProperty(t,"molarMassDependencies",{enumerable:!0,get:function(){return sh.molarMassDependencies}}),Object.defineProperty(t,"molarMassC12Dependencies",{enumerable:!0,get:function(){return ch.molarMassC12Dependencies}}),Object.defineProperty(t,"molarPlanckConstantDependencies",{enumerable:!0,get:function(){return uh.molarPlanckConstantDependencies}}),Object.defineProperty(t,"molarVolumeDependencies",{enumerable:!0,get:function(){return lh.molarVolumeDependencies}}),Object.defineProperty(t,"neutronMassDependencies",{enumerable:!0,get:function(){return dh.neutronMassDependencies}}),Object.defineProperty(t,"nuclearMagnetonDependencies",{enumerable:!0,get:function(){return fh.nuclearMagnetonDependencies}}),Object.defineProperty(t,"planckChargeDependencies",{enumerable:!0,get:function(){return ph.planckChargeDependencies}}),Object.defineProperty(t,"planckConstantDependencies",{enumerable:!0,get:function(){return mh.planckConstantDependencies}}),Object.defineProperty(t,"planckLengthDependencies",{enumerable:!0,get:function(){return hh.planckLengthDependencies}}),Object.defineProperty(t,"planckMassDependencies",{enumerable:!0,get:function(){return yh.planckMassDependencies}}),Object.defineProperty(t,"planckTemperatureDependencies",{enumerable:!0,get:function(){return vh.planckTemperatureDependencies}}),Object.defineProperty(t,"planckTimeDependencies",{enumerable:!0,get:function(){return gh.planckTimeDependencies}}),Object.defineProperty(t,"protonMassDependencies",{enumerable:!0,get:function(){return bh.protonMassDependencies}}),Object.defineProperty(t,"quantumOfCirculationDependencies",{enumerable:!0,get:function(){return xh.quantumOfCirculationDependencies}}),Object.defineProperty(t,"reducedPlanckConstantDependencies",{enumerable:!0,get:function(){return Dh.reducedPlanckConstantDependencies}}),Object.defineProperty(t,"rydbergDependencies",{enumerable:!0,get:function(){return _h.rydbergDependencies}}),Object.defineProperty(t,"sackurTetrodeDependencies",{enumerable:!0,get:function(){return wh.sackurTetrodeDependencies}}),Object.defineProperty(t,"secondRadiationDependencies",{enumerable:!0,get:function(){return Nh.secondRadiationDependencies}}),Object.defineProperty(t,"speedOfLightDependencies",{enumerable:!0,get:function(){return Mh.speedOfLightDependencies}}),Object.defineProperty(t,"stefanBoltzmannDependencies",{enumerable:!0,get:function(){return Oh.stefanBoltzmannDependencies}}),Object.defineProperty(t,"thomsonCrossSectionDependencies",{enumerable:!0,get:function(){return Sh.thomsonCrossSectionDependencies}}),Object.defineProperty(t,"vacuumImpedanceDependencies",{enumerable:!0,get:function(){return Ph.vacuumImpedanceDependencies}}),Object.defineProperty(t,"weakMixingAngleDependencies",{enumerable:!0,get:function(){return jh.weakMixingAngleDependencies}}),Object.defineProperty(t,"wienDisplacementDependencies",{enumerable:!0,get:function(){return Ah.wienDisplacementDependencies}}),Object.defineProperty(t,"applyTransformDependencies",{enumerable:!0,get:function(){return Eh.applyTransformDependencies}}),Object.defineProperty(t,"columnTransformDependencies",{enumerable:!0,get:function(){return Ch.columnTransformDependencies}}),Object.defineProperty(t,"filterTransformDependencies",{enumerable:!0,get:function(){return Th.filterTransformDependencies}}),Object.defineProperty(t,"forEachTransformDependencies",{enumerable:!0,get:function(){return kh.forEachTransformDependencies}}),Object.defineProperty(t,"indexTransformDependencies",{enumerable:!0,get:function(){return Ih.indexTransformDependencies}}),Object.defineProperty(t,"mapTransformDependencies",{enumerable:!0,get:function(){return Bh.mapTransformDependencies}}),Object.defineProperty(t,"maxTransformDependencies",{enumerable:!0,get:function(){return zh.maxTransformDependencies}}),Object.defineProperty(t,"meanTransformDependencies",{enumerable:!0,get:function(){return Rh.meanTransformDependencies}}),Object.defineProperty(t,"minTransformDependencies",{enumerable:!0,get:function(){return qh.minTransformDependencies}}),Object.defineProperty(t,"rangeTransformDependencies",{enumerable:!0,get:function(){return Fh.rangeTransformDependencies}}),Object.defineProperty(t,"rowTransformDependencies",{enumerable:!0,get:function(){return Uh.rowTransformDependencies}}),Object.defineProperty(t,"subsetTransformDependencies",{enumerable:!0,get:function(){return Lh.subsetTransformDependencies}}),Object.defineProperty(t,"concatTransformDependencies",{enumerable:!0,get:function(){return Hh.concatTransformDependencies}}),Object.defineProperty(t,"diffTransformDependencies",{enumerable:!0,get:function(){return Zh.diffTransformDependencies}}),Object.defineProperty(t,"stdTransformDependencies",{enumerable:!0,get:function(){return Vh.stdTransformDependencies}}),Object.defineProperty(t,"sumTransformDependencies",{enumerable:!0,get:function(){return Wh.sumTransformDependencies}}),Object.defineProperty(t,"varianceTransformDependencies",{enumerable:!0,get:function(){return Gh.varianceTransformDependencies}}),Object.defineProperty(t,"all",{enumerable:!0,get:function(){return $h.all}})}));function Xh(){}Xh.prototype={on:function(e,t,n){var r=this.e||(this.e={});return(r[e]||(r[e]=[])).push({fn:t,ctx:n}),this},once:function(e,t,n){var r=this;function i(){r.off(e,i),t.apply(n,arguments)}return i._=t,this.on(e,i,n)},emit:function(e){for(var t=[].slice.call(arguments,1),n=((this.e||(this.e={}))[e]||[]).slice(),r=0,i=n.length;r<i;r++)n[r].fn.apply(n[r].ctx,t);return this},off:function(e,t){var n=this.e||(this.e={}),r=n[e],i=[];if(r&&t)for(var a=0,o=r.length;a<o;a++)r[a].fn!==t&&r[a].fn._!==t&&i.push(r[a]);return i.length?n[e]=i:delete n[e],this}};var Yh=Xh,Jh=Xh;Yh.TinyEmitter=Jh;var Kh=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.mixin=function(e){var t=new r.default;return e.on=t.on.bind(t),e.off=t.off.bind(t),e.once=t.once.bind(t),e.emit=t.emit.bind(t),e};var n,r=(n=Yh)&&n.__esModule?n:{default:n}})),ey=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.importFactory=function(e,t,r,o){function s(t,n,i){var a;if(i.wrap&&"function"==typeof n&&(n=function(e){var t=function(){for(var t=[],n=0,i=arguments.length;n<i;n++){var a=arguments[n];t[n]=a&&a.valueOf()}return e.apply(r,t)};e.transform&&(t.transform=e.transform);return t}(n)),"function"==typeof(a=n)&&"string"==typeof a.signature&&(n=e(t,function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n;return e}({},n.signature,n))),f(r[t])&&f(n))return n=i.override?e(t,n.signatures):e(r[t],n),r[t]=n,delete o[t],c(t,n),void r.emit("import",t,(function(){return n}));if(void 0===r[t]||i.override)return r[t]=n,delete o[t],c(t,n),void r.emit("import",t,(function(){return n}));if(!i.silent)throw new Error('Cannot import "'+t+'": already exists')}function c(e,t){t&&"function"==typeof t.transform?(r.expression.transform[e]=t.transform,p(e)&&(r.expression.mathWithTransform[e]=t.transform)):(delete r.expression.transform[e],p(e)&&(r.expression.mathWithTransform[e]=t))}function u(e){delete r.expression.transform[e],p(e)?r.expression.mathWithTransform[e]=r[e]:delete r.expression.mathWithTransform[e]}function l(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.fn;if((0,m.contains)(i,"."))throw new Error("Factory name should not contain a nested path. Name: "+JSON.stringify(i));var s=v(t)?r.expression.transform:r,c=i in r.expression.transform,l=(0,a.hasOwnProperty)(s,i)?s[i]:void 0,d=function(){var a={};t.dependencies.map(h.stripOptionalNotation).forEach((function(e){if((0,m.contains)(e,"."))throw new Error("Factory dependency should not contain a nested path. Name: "+JSON.stringify(e));"math"===e?a.math=r:"mathWithTransform"===e?a.mathWithTransform=r.expression.mathWithTransform:"classes"===e?a.classes=r:a[e]=r[e]}));var o=t(a);if(o&&"function"==typeof o.transform)throw new Error('Transforms cannot be attached to factory functions. Please create a separate function for it with exports.path="expression.transform"');if(void 0===l||n.override)return o;if(f(l)&&f(o))return e(l,o);if(n.silent)return l;throw new Error('Cannot import "'+i+'": already exists')};t.meta&&!1===t.meta.lazy?(s[i]=d(),l&&c?u(i):(v(t)||y(t))&&(0,a.lazy)(r.expression.mathWithTransform,i,(function(){return s[i]}))):((0,a.lazy)(s,i,d),l&&c?u(i):(v(t)||y(t))&&(0,a.lazy)(r.expression.mathWithTransform,i,(function(){return s[i]}))),o[i]=t,r.emit("import",i,d)}function d(e){return"function"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e||null===e||(0,i.isUnit)(e)||(0,i.isComplex)(e)||(0,i.isBigNumber)(e)||(0,i.isFraction)(e)||(0,i.isMatrix)(e)||Array.isArray(e)}function f(e){return"function"==typeof e&&"object"===n(e.signatures)}function p(e){return!(0,a.hasOwnProperty)(g,e)}function y(e){return!(-1!==e.fn.indexOf(".")||(0,a.hasOwnProperty)(g,e.fn)||e.meta&&e.meta.isClass)}function v(e){return void 0!==e&&void 0!==e.meta&&!0===e.meta.isTransformFunction||!1}var g={expression:!0,type:!0,docs:!0,error:!0,json:!0,chain:!0};return function(e,t){var r=arguments.length;if(1!==r&&2!==r)throw new xt.ArgumentsError("import",r,1,2);function i(e,r,o){if(Array.isArray(r))r.forEach((function(t){return i(e,t)}));else if("object"===n(r))for(var s in r)(0,a.hasOwnProperty)(r,s)&&i(e,r[s],s);else if((0,h.isFactory)(r)||void 0!==o){var c=(0,h.isFactory)(r)?v(r)?r.fn+".transform":r.fn:o;if((0,a.hasOwnProperty)(e,c)&&e[c]!==r&&!t.silent)throw new Error('Cannot import "'+c+'" twice');e[c]=r}else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}t||(t={});var o={};for(var c in i(o,e),o)if((0,a.hasOwnProperty)(o,c)){var u=o[c];if((0,h.isFactory)(u))l(u,t);else if(d(u))s(c,u,t);else if(!t.silent)throw new TypeError("Factory, Object, or Array expected")}}}})),ty=t((function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.create=function e(t,n){var c=u({},r.DEFAULT_CONFIG,n);if("function"!=typeof Object.create)throw new Error("ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.");var l=s.mixin({isNumber:i.isNumber,isComplex:i.isComplex,isBigNumber:i.isBigNumber,isFraction:i.isFraction,isUnit:i.isUnit,isString:i.isString,isArray:i.isArray,isMatrix:i.isMatrix,isCollection:i.isCollection,isDenseMatrix:i.isDenseMatrix,isSparseMatrix:i.isSparseMatrix,isRange:i.isRange,isIndex:i.isIndex,isBoolean:i.isBoolean,isResultSet:i.isResultSet,isHelp:i.isHelp,isFunction:i.isFunction,isDate:i.isDate,isRegExp:i.isRegExp,isObject:i.isObject,isNull:i.isNull,isUndefined:i.isUndefined,isAccessorNode:i.isAccessorNode,isArrayNode:i.isArrayNode,isAssignmentNode:i.isAssignmentNode,isBlockNode:i.isBlockNode,isConditionalNode:i.isConditionalNode,isConstantNode:i.isConstantNode,isFunctionAssignmentNode:i.isFunctionAssignmentNode,isFunctionNode:i.isFunctionNode,isIndexNode:i.isIndexNode,isNode:i.isNode,isObjectNode:i.isObjectNode,isOperatorNode:i.isOperatorNode,isParenthesisNode:i.isParenthesisNode,isRangeNode:i.isRangeNode,isSymbolNode:i.isSymbolNode,isChain:i.isChain});l.config=(0,o.configFactory)(c,l.emit),l.expression={transform:{},mathWithTransform:{config:l.config}};var d=[],m=[];var y={};var v=(0,ey.importFactory)((function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return l.typed.apply(l.typed,t)}),(function e(t){if((0,h.isFactory)(t))return t(l);var n=t[Object.keys(t)[0]];if((0,h.isFactory)(n))return n(l);if(!(0,a.isLegacyFactory)(t))throw console.warn("Factory object with properties `type`, `name`, and `factory` expected",t),new Error("Factory object with properties `type`, `name`, and `factory` expected");var r,i=d.indexOf(t);return-1===i?(r=!0===t.math?t.factory(l.type,c,e,l.typed,l):t.factory(l.type,c,e,l.typed),d.push(t),m.push(r)):r=m[i],r}),l,y);return l.import=v,l.on("config",(function(){(0,a.values)(y).forEach((function(e){e&&e.meta&&e.meta.recreateOnConfigChange&&v(e,{override:!0})}))})),l.create=e.bind(null,t),l.factory=h.factory,l.import((0,a.values)((0,a.deepFlatten)(t))),l.ArgumentsError=xt.ArgumentsError,l.DimensionError=f.DimensionError,l.IndexError=p.IndexError,l};var s=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=i?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(r,a,o):r[a]=e[a]}r.default=e,t&&t.set(e,r);return r}(Kh);function c(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}})),ny=t((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n={config:!0,IndexError:!0,DimensionError:!0,ArgumentsError:!0,create:!0,factory:!0};Object.defineProperty(t,"config",{enumerable:!0,get:function(){return s.config}}),Object.defineProperty(t,"IndexError",{enumerable:!0,get:function(){return p.IndexError}}),Object.defineProperty(t,"DimensionError",{enumerable:!0,get:function(){return f.DimensionError}}),Object.defineProperty(t,"ArgumentsError",{enumerable:!0,get:function(){return xt.ArgumentsError}}),Object.defineProperty(t,"create",{enumerable:!0,get:function(){return ty.create}}),Object.defineProperty(t,"factory",{enumerable:!0,get:function(){return h.factory}}),Object.keys(qu).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===qu[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return qu[e]}}))})),Object.keys(Fu).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Fu[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Fu[e]}}))})),Object.keys(Uu).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Uu[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Uu[e]}}))})),Object.keys(Qh).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Qh[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Qh[e]}}))})),Object.keys(Ru).forEach((function(e){"default"!==e&&"__esModule"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Ru[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Ru[e]}}))}))})),ry=t((function(t,n){(function(){var r="Expected a function",i="__lodash_placeholder__",a=[["ary",128],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",32],["partialRight",64],["rearg",256]],o="[object Arguments]",s="[object Array]",c="[object Boolean]",u="[object Date]",l="[object Error]",d="[object Function]",f="[object GeneratorFunction]",p="[object Map]",m="[object Number]",h="[object Object]",y="[object RegExp]",v="[object Set]",g="[object String]",b="[object Symbol]",x="[object WeakMap]",D="[object ArrayBuffer]",_="[object DataView]",w="[object Float32Array]",N="[object Float64Array]",M="[object Int8Array]",O="[object Int16Array]",S="[object Int32Array]",P="[object Uint8Array]",j="[object Uint16Array]",A="[object Uint32Array]",E=/\b__p \+= '';/g,C=/\b(__p \+=) '' \+/g,T=/(__e\(.*?\)|\b__t\)) \+\n'';/g,k=/&(?:amp|lt|gt|quot|#39);/g,I=/[&<>"']/g,B=RegExp(k.source),z=RegExp(I.source),R=/<%-([\s\S]+?)%>/g,q=/<%([\s\S]+?)%>/g,F=/<%=([\s\S]+?)%>/g,U=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,L=/^\w*$/,H=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Z=/[\\^$.*+?()[\]{}|]/g,V=RegExp(Z.source),W=/^\s+|\s+$/g,G=/^\s+/,$=/\s+$/,Q=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,X=/\{\n\/\* \[wrapped with (.+)\] \*/,Y=/,? & /,J=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,K=/\\(\\)?/g,ee=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,te=/\w*$/,ne=/^[-+]0x[0-9a-f]+$/i,re=/^0b[01]+$/i,ie=/^\[object .+?Constructor\]$/,ae=/^0o[0-7]+$/i,oe=/^(?:0|[1-9]\d*)$/,se=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,ce=/($^)/,ue=/['\n\r\u2028\u2029\\]/g,le="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",de="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",fe="[\\ud800-\\udfff]",pe="["+de+"]",me="["+le+"]",he="\\d+",ye="[\\u2700-\\u27bf]",ve="[a-z\\xdf-\\xf6\\xf8-\\xff]",ge="[^\\ud800-\\udfff"+de+he+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",be="\\ud83c[\\udffb-\\udfff]",xe="[^\\ud800-\\udfff]",De="(?:\\ud83c[\\udde6-\\uddff]){2}",_e="[\\ud800-\\udbff][\\udc00-\\udfff]",we="[A-Z\\xc0-\\xd6\\xd8-\\xde]",Ne="(?:"+ve+"|"+ge+")",Me="(?:"+we+"|"+ge+")",Oe="(?:"+me+"|"+be+")"+"?",Se="[\\ufe0e\\ufe0f]?"+Oe+("(?:\\u200d(?:"+[xe,De,_e].join("|")+")[\\ufe0e\\ufe0f]?"+Oe+")*"),Pe="(?:"+[ye,De,_e].join("|")+")"+Se,je="(?:"+[xe+me+"?",me,De,_e,fe].join("|")+")",Ae=RegExp("['’]","g"),Ee=RegExp(me,"g"),Ce=RegExp(be+"(?="+be+")|"+je+Se,"g"),Te=RegExp([we+"?"+ve+"+(?:['’](?:d|ll|m|re|s|t|ve))?(?="+[pe,we,"$"].join("|")+")",Me+"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?="+[pe,we+Ne,"$"].join("|")+")",we+"?"+Ne+"+(?:['’](?:d|ll|m|re|s|t|ve))?",we+"+(?:['’](?:D|LL|M|RE|S|T|VE))?","\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",he,Pe].join("|"),"g"),ke=RegExp("[\\u200d\\ud800-\\udfff"+le+"\\ufe0e\\ufe0f]"),Ie=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Be=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],ze=-1,Re={};Re[w]=Re[N]=Re[M]=Re[O]=Re[S]=Re[P]=Re["[object Uint8ClampedArray]"]=Re[j]=Re[A]=!0,Re[o]=Re[s]=Re[D]=Re[c]=Re[_]=Re[u]=Re[l]=Re[d]=Re[p]=Re[m]=Re[h]=Re[y]=Re[v]=Re[g]=Re[x]=!1;var qe={};qe[o]=qe[s]=qe[D]=qe[_]=qe[c]=qe[u]=qe[w]=qe[N]=qe[M]=qe[O]=qe[S]=qe[p]=qe[m]=qe[h]=qe[y]=qe[v]=qe[g]=qe[b]=qe[P]=qe["[object Uint8ClampedArray]"]=qe[j]=qe[A]=!0,qe[l]=qe[d]=qe[x]=!1;var Fe={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Ue=parseFloat,Le=parseInt,He="object"==typeof e&&e&&e.Object===Object&&e,Ze="object"==typeof self&&self&&self.Object===Object&&self,Ve=He||Ze||Function("return this")(),We=n&&!n.nodeType&&n,Ge=We&&t&&!t.nodeType&&t,$e=Ge&&Ge.exports===We,Qe=$e&&He.process,Xe=function(){try{var e=Ge&&Ge.require&&Ge.require("util").types;return e||Qe&&Qe.binding&&Qe.binding("util")}catch(e){}}(),Ye=Xe&&Xe.isArrayBuffer,Je=Xe&&Xe.isDate,Ke=Xe&&Xe.isMap,et=Xe&&Xe.isRegExp,tt=Xe&&Xe.isSet,nt=Xe&&Xe.isTypedArray;function rt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function it(e,t,n,r){for(var i=-1,a=null==e?0:e.length;++i<a;){var o=e[i];t(r,o,n(o),e)}return r}function at(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function ot(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function st(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function ct(e,t){for(var n=-1,r=null==e?0:e.length,i=0,a=[];++n<r;){var o=e[n];t(o,n,e)&&(a[i++]=o)}return a}function ut(e,t){return!!(null==e?0:e.length)&&bt(e,t,0)>-1}function lt(e,t,n){for(var r=-1,i=null==e?0:e.length;++r<i;)if(n(t,e[r]))return!0;return!1}function dt(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}function ft(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}function pt(e,t,n,r){var i=-1,a=null==e?0:e.length;for(r&&a&&(n=e[++i]);++i<a;)n=t(n,e[i],i,e);return n}function mt(e,t,n,r){var i=null==e?0:e.length;for(r&&i&&(n=e[--i]);i--;)n=t(n,e[i],i,e);return n}function ht(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var yt=wt("length");function vt(e,t,n){var r;return n(e,(function(e,n,i){if(t(e,n,i))return r=n,!1})),r}function gt(e,t,n,r){for(var i=e.length,a=n+(r?1:-1);r?a--:++a<i;)if(t(e[a],a,e))return a;return-1}function bt(e,t,n){return t==t?function(e,t,n){var r=n-1,i=e.length;for(;++r<i;)if(e[r]===t)return r;return-1}(e,t,n):gt(e,Dt,n)}function xt(e,t,n,r){for(var i=n-1,a=e.length;++i<a;)if(r(e[i],t))return i;return-1}function Dt(e){return e!=e}function _t(e,t){var n=null==e?0:e.length;return n?Ot(e,t)/n:NaN}function wt(e){return function(t){return null==t?void 0:t[e]}}function Nt(e){return function(t){return null==e?void 0:e[t]}}function Mt(e,t,n,r,i){return i(e,(function(e,i,a){n=r?(r=!1,e):t(n,e,i,a)})),n}function Ot(e,t){for(var n,r=-1,i=e.length;++r<i;){var a=t(e[r]);void 0!==a&&(n=void 0===n?a:n+a)}return n}function St(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function Pt(e){return function(t){return e(t)}}function jt(e,t){return dt(t,(function(t){return e[t]}))}function At(e,t){return e.has(t)}function Et(e,t){for(var n=-1,r=e.length;++n<r&&bt(t,e[n],0)>-1;);return n}function Ct(e,t){for(var n=e.length;n--&&bt(t,e[n],0)>-1;);return n}function Tt(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var kt=Nt({"À":"A","Á":"A","Â":"A","Ã":"A","Ä":"A","Å":"A","à":"a","á":"a","â":"a","ã":"a","ä":"a","å":"a","Ç":"C","ç":"c","Ð":"D","ð":"d","È":"E","É":"E","Ê":"E","Ë":"E","è":"e","é":"e","ê":"e","ë":"e","Ì":"I","Í":"I","Î":"I","Ï":"I","ì":"i","í":"i","î":"i","ï":"i","Ñ":"N","ñ":"n","Ò":"O","Ó":"O","Ô":"O","Õ":"O","Ö":"O","Ø":"O","ò":"o","ó":"o","ô":"o","õ":"o","ö":"o","ø":"o","Ù":"U","Ú":"U","Û":"U","Ü":"U","ù":"u","ú":"u","û":"u","ü":"u","Ý":"Y","ý":"y","ÿ":"y","Æ":"Ae","æ":"ae","Þ":"Th","þ":"th","ß":"ss","Ā":"A","Ă":"A","Ą":"A","ā":"a","ă":"a","ą":"a","Ć":"C","Ĉ":"C","Ċ":"C","Č":"C","ć":"c","ĉ":"c","ċ":"c","č":"c","Ď":"D","Đ":"D","ď":"d","đ":"d","Ē":"E","Ĕ":"E","Ė":"E","Ę":"E","Ě":"E","ē":"e","ĕ":"e","ė":"e","ę":"e","ě":"e","Ĝ":"G","Ğ":"G","Ġ":"G","Ģ":"G","ĝ":"g","ğ":"g","ġ":"g","ģ":"g","Ĥ":"H","Ħ":"H","ĥ":"h","ħ":"h","Ĩ":"I","Ī":"I","Ĭ":"I","Į":"I","İ":"I","ĩ":"i","ī":"i","ĭ":"i","į":"i","ı":"i","Ĵ":"J","ĵ":"j","Ķ":"K","ķ":"k","ĸ":"k","Ĺ":"L","Ļ":"L","Ľ":"L","Ŀ":"L","Ł":"L","ĺ":"l","ļ":"l","ľ":"l","ŀ":"l","ł":"l","Ń":"N","Ņ":"N","Ň":"N","Ŋ":"N","ń":"n","ņ":"n","ň":"n","ŋ":"n","Ō":"O","Ŏ":"O","Ő":"O","ō":"o","ŏ":"o","ő":"o","Ŕ":"R","Ŗ":"R","Ř":"R","ŕ":"r","ŗ":"r","ř":"r","Ś":"S","Ŝ":"S","Ş":"S","Š":"S","ś":"s","ŝ":"s","ş":"s","š":"s","Ţ":"T","Ť":"T","Ŧ":"T","ţ":"t","ť":"t","ŧ":"t","Ũ":"U","Ū":"U","Ŭ":"U","Ů":"U","Ű":"U","Ų":"U","ũ":"u","ū":"u","ŭ":"u","ů":"u","ű":"u","ų":"u","Ŵ":"W","ŵ":"w","Ŷ":"Y","ŷ":"y","Ÿ":"Y","Ź":"Z","Ż":"Z","Ž":"Z","ź":"z","ż":"z","ž":"z","Ĳ":"IJ","ĳ":"ij","Œ":"Oe","œ":"oe","ŉ":"'n","ſ":"s"}),It=Nt({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function Bt(e){return"\\"+Fe[e]}function zt(e){return ke.test(e)}function Rt(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function qt(e,t){return function(n){return e(t(n))}}function Ft(e,t){for(var n=-1,r=e.length,a=0,o=[];++n<r;){var s=e[n];s!==t&&s!==i||(e[n]=i,o[a++]=n)}return o}function Ut(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function Lt(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function Ht(e){return zt(e)?function(e){var t=Ce.lastIndex=0;for(;Ce.test(e);)++t;return t}(e):yt(e)}function Zt(e){return zt(e)?function(e){return e.match(Ce)||[]}(e):function(e){return e.split("")}(e)}var Vt=Nt({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"});var Wt=function e(t){var n,le=(t=null==t?Ve:Wt.defaults(Ve.Object(),t,Wt.pick(Ve,Be))).Array,de=t.Date,fe=t.Error,pe=t.Function,me=t.Math,he=t.Object,ye=t.RegExp,ve=t.String,ge=t.TypeError,be=le.prototype,xe=pe.prototype,De=he.prototype,_e=t["__core-js_shared__"],we=xe.toString,Ne=De.hasOwnProperty,Me=0,Oe=(n=/[^.]+$/.exec(_e&&_e.keys&&_e.keys.IE_PROTO||""))?"Symbol(src)_1."+n:"",Se=De.toString,Pe=we.call(he),je=Ve._,Ce=ye("^"+we.call(Ne).replace(Z,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ke=$e?t.Buffer:void 0,Fe=t.Symbol,He=t.Uint8Array,Ze=ke?ke.allocUnsafe:void 0,We=qt(he.getPrototypeOf,he),Ge=he.create,Qe=De.propertyIsEnumerable,Xe=be.splice,yt=Fe?Fe.isConcatSpreadable:void 0,Nt=Fe?Fe.iterator:void 0,Gt=Fe?Fe.toStringTag:void 0,$t=function(){try{var e=Ki(he,"defineProperty");return e({},"",{}),e}catch(e){}}(),Qt=t.clearTimeout!==Ve.clearTimeout&&t.clearTimeout,Xt=de&&de.now!==Ve.Date.now&&de.now,Yt=t.setTimeout!==Ve.setTimeout&&t.setTimeout,Jt=me.ceil,Kt=me.floor,en=he.getOwnPropertySymbols,tn=ke?ke.isBuffer:void 0,nn=t.isFinite,rn=be.join,an=qt(he.keys,he),on=me.max,sn=me.min,cn=de.now,un=t.parseInt,ln=me.random,dn=be.reverse,fn=Ki(t,"DataView"),pn=Ki(t,"Map"),mn=Ki(t,"Promise"),hn=Ki(t,"Set"),yn=Ki(t,"WeakMap"),vn=Ki(he,"create"),gn=yn&&new yn,bn={},xn=Oa(fn),Dn=Oa(pn),_n=Oa(mn),wn=Oa(hn),Nn=Oa(yn),Mn=Fe?Fe.prototype:void 0,On=Mn?Mn.valueOf:void 0,Sn=Mn?Mn.toString:void 0;function Pn(e){if(Zo(e)&&!To(e)&&!(e instanceof Cn)){if(e instanceof En)return e;if(Ne.call(e,"__wrapped__"))return Sa(e)}return new En(e)}var jn=function(){function e(){}return function(t){if(!Ho(t))return{};if(Ge)return Ge(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();function An(){}function En(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=void 0}function Cn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Tn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function kn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function In(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Bn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new In;++t<n;)this.add(e[t])}function zn(e){var t=this.__data__=new kn(e);this.size=t.size}function Rn(e,t){var n=To(e),r=!n&&Co(e),i=!n&&!r&&zo(e),a=!n&&!r&&!i&&Jo(e),o=n||r||i||a,s=o?St(e.length,ve):[],c=s.length;for(var u in e)!t&&!Ne.call(e,u)||o&&("length"==u||i&&("offset"==u||"parent"==u)||a&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||oa(u,c))||s.push(u);return s}function qn(e){var t=e.length;return t?e[Br(0,t-1)]:void 0}function Fn(e,t){return wa(vi(e),Qn(t,0,e.length))}function Un(e){return wa(vi(e))}function Ln(e,t,n){(void 0!==n&&!jo(e[t],n)||void 0===n&&!(t in e))&&Gn(e,t,n)}function Hn(e,t,n){var r=e[t];Ne.call(e,t)&&jo(r,n)&&(void 0!==n||t in e)||Gn(e,t,n)}function Zn(e,t){for(var n=e.length;n--;)if(jo(e[n][0],t))return n;return-1}function Vn(e,t,n,r){return er(e,(function(e,i,a){t(r,e,n(e),a)})),r}function Wn(e,t){return e&&gi(t,xs(t),e)}function Gn(e,t,n){"__proto__"==t&&$t?$t(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function $n(e,t){for(var n=-1,r=t.length,i=le(r),a=null==e;++n<r;)i[n]=a?void 0:hs(e,t[n]);return i}function Qn(e,t,n){return e==e&&(void 0!==n&&(e=e<=n?e:n),void 0!==t&&(e=e>=t?e:t)),e}function Xn(e,t,n,r,i,a){var s,l=1&t,x=2&t,E=4&t;if(n&&(s=i?n(e,r,i,a):n(e)),void 0!==s)return s;if(!Ho(e))return e;var C=To(e);if(C){if(s=function(e){var t=e.length,n=new e.constructor(t);t&&"string"==typeof e[0]&&Ne.call(e,"index")&&(n.index=e.index,n.input=e.input);return n}(e),!l)return vi(e,s)}else{var T=na(e),k=T==d||T==f;if(zo(e))return di(e,l);if(T==h||T==o||k&&!i){if(s=x||k?{}:ia(e),!l)return x?function(e,t){return gi(e,ta(e),t)}(e,function(e,t){return e&&gi(t,Ds(t),e)}(s,e)):function(e,t){return gi(e,ea(e),t)}(e,Wn(s,e))}else{if(!qe[T])return i?e:{};s=function(e,t,n){var r=e.constructor;switch(t){case D:return fi(e);case c:case u:return new r(+e);case _:return function(e,t){var n=t?fi(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case w:case N:case M:case O:case S:case P:case"[object Uint8ClampedArray]":case j:case A:return pi(e,n);case p:return new r;case m:case g:return new r(e);case y:return function(e){var t=new e.constructor(e.source,te.exec(e));return t.lastIndex=e.lastIndex,t}(e);case v:return new r;case b:return i=e,On?he(On.call(i)):{}}var i}(e,T,l)}}a||(a=new zn);var I=a.get(e);if(I)return I;a.set(e,s),Qo(e)?e.forEach((function(r){s.add(Xn(r,t,n,r,e,a))})):Vo(e)&&e.forEach((function(r,i){s.set(i,Xn(r,t,n,i,e,a))}));var B=C?void 0:(E?x?Wi:Vi:x?Ds:xs)(e);return at(B||e,(function(r,i){B&&(r=e[i=r]),Hn(s,i,Xn(r,t,n,i,e,a))})),s}function Yn(e,t,n){var r=n.length;if(null==e)return!r;for(e=he(e);r--;){var i=n[r],a=t[i],o=e[i];if(void 0===o&&!(i in e)||!a(o))return!1}return!0}function Jn(e,t,n){if("function"!=typeof e)throw new ge(r);return ba((function(){e.apply(void 0,n)}),t)}function Kn(e,t,n,r){var i=-1,a=ut,o=!0,s=e.length,c=[],u=t.length;if(!s)return c;n&&(t=dt(t,Pt(n))),r?(a=lt,o=!1):t.length>=200&&(a=At,o=!1,t=new Bn(t));e:for(;++i<s;){var l=e[i],d=null==n?l:n(l);if(l=r||0!==l?l:0,o&&d==d){for(var f=u;f--;)if(t[f]===d)continue e;c.push(l)}else a(t,d,r)||c.push(l)}return c}Pn.templateSettings={escape:R,evaluate:q,interpolate:F,variable:"",imports:{_:Pn}},Pn.prototype=An.prototype,Pn.prototype.constructor=Pn,En.prototype=jn(An.prototype),En.prototype.constructor=En,Cn.prototype=jn(An.prototype),Cn.prototype.constructor=Cn,Tn.prototype.clear=function(){this.__data__=vn?vn(null):{},this.size=0},Tn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Tn.prototype.get=function(e){var t=this.__data__;if(vn){var n=t[e];return"__lodash_hash_undefined__"===n?void 0:n}return Ne.call(t,e)?t[e]:void 0},Tn.prototype.has=function(e){var t=this.__data__;return vn?void 0!==t[e]:Ne.call(t,e)},Tn.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=vn&&void 0===t?"__lodash_hash_undefined__":t,this},kn.prototype.clear=function(){this.__data__=[],this.size=0},kn.prototype.delete=function(e){var t=this.__data__,n=Zn(t,e);return!(n<0)&&(n==t.length-1?t.pop():Xe.call(t,n,1),--this.size,!0)},kn.prototype.get=function(e){var t=this.__data__,n=Zn(t,e);return n<0?void 0:t[n][1]},kn.prototype.has=function(e){return Zn(this.__data__,e)>-1},kn.prototype.set=function(e,t){var n=this.__data__,r=Zn(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},In.prototype.clear=function(){this.size=0,this.__data__={hash:new Tn,map:new(pn||kn),string:new Tn}},In.prototype.delete=function(e){var t=Yi(this,e).delete(e);return this.size-=t?1:0,t},In.prototype.get=function(e){return Yi(this,e).get(e)},In.prototype.has=function(e){return Yi(this,e).has(e)},In.prototype.set=function(e,t){var n=Yi(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Bn.prototype.add=Bn.prototype.push=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this},Bn.prototype.has=function(e){return this.__data__.has(e)},zn.prototype.clear=function(){this.__data__=new kn,this.size=0},zn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},zn.prototype.get=function(e){return this.__data__.get(e)},zn.prototype.has=function(e){return this.__data__.has(e)},zn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof kn){var r=n.__data__;if(!pn||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new In(r)}return n.set(e,t),this.size=n.size,this};var er=Di(cr),tr=Di(ur,!0);function nr(e,t){var n=!0;return er(e,(function(e,r,i){return n=!!t(e,r,i)})),n}function rr(e,t,n){for(var r=-1,i=e.length;++r<i;){var a=e[r],o=t(a);if(null!=o&&(void 0===s?o==o&&!Yo(o):n(o,s)))var s=o,c=a}return c}function ir(e,t){var n=[];return er(e,(function(e,r,i){t(e,r,i)&&n.push(e)})),n}function ar(e,t,n,r,i){var a=-1,o=e.length;for(n||(n=aa),i||(i=[]);++a<o;){var s=e[a];t>0&&n(s)?t>1?ar(s,t-1,n,r,i):ft(i,s):r||(i[i.length]=s)}return i}var or=_i(),sr=_i(!0);function cr(e,t){return e&&or(e,t,xs)}function ur(e,t){return e&&sr(e,t,xs)}function lr(e,t){return ct(t,(function(t){return Fo(e[t])}))}function dr(e,t){for(var n=0,r=(t=si(t,e)).length;null!=e&&n<r;)e=e[Ma(t[n++])];return n&&n==r?e:void 0}function fr(e,t,n){var r=t(e);return To(e)?r:ft(r,n(e))}function pr(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Gt&&Gt in he(e)?function(e){var t=Ne.call(e,Gt),n=e[Gt];try{e[Gt]=void 0;var r=!0}catch(e){}var i=Se.call(e);r&&(t?e[Gt]=n:delete e[Gt]);return i}(e):function(e){return Se.call(e)}(e)}function mr(e,t){return e>t}function hr(e,t){return null!=e&&Ne.call(e,t)}function yr(e,t){return null!=e&&t in he(e)}function vr(e,t,n){for(var r=n?lt:ut,i=e[0].length,a=e.length,o=a,s=le(a),c=1/0,u=[];o--;){var l=e[o];o&&t&&(l=dt(l,Pt(t))),c=sn(l.length,c),s[o]=!n&&(t||i>=120&&l.length>=120)?new Bn(o&&l):void 0}l=e[0];var d=-1,f=s[0];e:for(;++d<i&&u.length<c;){var p=l[d],m=t?t(p):p;if(p=n||0!==p?p:0,!(f?At(f,m):r(u,m,n))){for(o=a;--o;){var h=s[o];if(!(h?At(h,m):r(e[o],m,n)))continue e}f&&f.push(m),u.push(p)}}return u}function gr(e,t,n){var r=null==(e=ha(e,t=si(t,e)))?e:e[Ma(Ra(t))];return null==r?void 0:rt(r,e,n)}function br(e){return Zo(e)&&pr(e)==o}function xr(e,t,n,r,i){return e===t||(null==e||null==t||!Zo(e)&&!Zo(t)?e!=e&&t!=t:function(e,t,n,r,i,a){var d=To(e),f=To(t),x=d?s:na(e),w=f?s:na(t),N=(x=x==o?h:x)==h,M=(w=w==o?h:w)==h,O=x==w;if(O&&zo(e)){if(!zo(t))return!1;d=!0,N=!1}if(O&&!N)return a||(a=new zn),d||Jo(e)?Hi(e,t,n,r,i,a):function(e,t,n,r,i,a,o){switch(n){case _:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case D:return!(e.byteLength!=t.byteLength||!a(new He(e),new He(t)));case c:case u:case m:return jo(+e,+t);case l:return e.name==t.name&&e.message==t.message;case y:case g:return e==t+"";case p:var s=Rt;case v:var d=1&r;if(s||(s=Ut),e.size!=t.size&&!d)return!1;var f=o.get(e);if(f)return f==t;r|=2,o.set(e,t);var h=Hi(s(e),s(t),r,i,a,o);return o.delete(e),h;case b:if(On)return On.call(e)==On.call(t)}return!1}(e,t,x,n,r,i,a);if(!(1&n)){var S=N&&Ne.call(e,"__wrapped__"),P=M&&Ne.call(t,"__wrapped__");if(S||P){var j=S?e.value():e,A=P?t.value():t;return a||(a=new zn),i(j,A,n,r,a)}}if(!O)return!1;return a||(a=new zn),function(e,t,n,r,i,a){var o=1&n,s=Vi(e),c=s.length,u=Vi(t).length;if(c!=u&&!o)return!1;var l=c;for(;l--;){var d=s[l];if(!(o?d in t:Ne.call(t,d)))return!1}var f=a.get(e),p=a.get(t);if(f&&p)return f==t&&p==e;var m=!0;a.set(e,t),a.set(t,e);var h=o;for(;++l<c;){d=s[l];var y=e[d],v=t[d];if(r)var g=o?r(v,y,d,t,e,a):r(y,v,d,e,t,a);if(!(void 0===g?y===v||i(y,v,n,r,a):g)){m=!1;break}h||(h="constructor"==d)}if(m&&!h){var b=e.constructor,x=t.constructor;b==x||!("constructor"in e)||!("constructor"in t)||"function"==typeof b&&b instanceof b&&"function"==typeof x&&x instanceof x||(m=!1)}return a.delete(e),a.delete(t),m}(e,t,n,r,i,a)}(e,t,n,r,xr,i))}function Dr(e,t,n,r){var i=n.length,a=i,o=!r;if(null==e)return!a;for(e=he(e);i--;){var s=n[i];if(o&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++i<a;){var c=(s=n[i])[0],u=e[c],l=s[1];if(o&&s[2]){if(void 0===u&&!(c in e))return!1}else{var d=new zn;if(r)var f=r(u,l,c,e,t,d);if(!(void 0===f?xr(l,u,3,r,d):f))return!1}}return!0}function _r(e){return!(!Ho(e)||(t=e,Oe&&Oe in t))&&(Fo(e)?Ce:ie).test(Oa(e));var t}function wr(e){return"function"==typeof e?e:null==e?Ws:"object"==typeof e?To(e)?jr(e[0],e[1]):Pr(e):tc(e)}function Nr(e){if(!da(e))return an(e);var t=[];for(var n in he(e))Ne.call(e,n)&&"constructor"!=n&&t.push(n);return t}function Mr(e){if(!Ho(e))return function(e){var t=[];if(null!=e)for(var n in he(e))t.push(n);return t}(e);var t=da(e),n=[];for(var r in e)("constructor"!=r||!t&&Ne.call(e,r))&&n.push(r);return n}function Or(e,t){return e<t}function Sr(e,t){var n=-1,r=Io(e)?le(e.length):[];return er(e,(function(e,i,a){r[++n]=t(e,i,a)})),r}function Pr(e){var t=Ji(e);return 1==t.length&&t[0][2]?pa(t[0][0],t[0][1]):function(n){return n===e||Dr(n,e,t)}}function jr(e,t){return ca(e)&&fa(t)?pa(Ma(e),t):function(n){var r=hs(n,e);return void 0===r&&r===t?ys(n,e):xr(t,r,3)}}function Ar(e,t,n,r,i){e!==t&&or(t,(function(a,o){if(i||(i=new zn),Ho(a))!function(e,t,n,r,i,a,o){var s=va(e,n),c=va(t,n),u=o.get(c);if(u)return void Ln(e,n,u);var l=a?a(s,c,n+"",e,t,o):void 0,d=void 0===l;if(d){var f=To(c),p=!f&&zo(c),m=!f&&!p&&Jo(c);l=c,f||p||m?To(s)?l=s:Bo(s)?l=vi(s):p?(d=!1,l=di(c,!0)):m?(d=!1,l=pi(c,!0)):l=[]:Go(c)||Co(c)?(l=s,Co(s)?l=os(s):Ho(s)&&!Fo(s)||(l=ia(c))):d=!1}d&&(o.set(c,l),i(l,c,r,a,o),o.delete(c));Ln(e,n,l)}(e,t,o,n,Ar,r,i);else{var s=r?r(va(e,o),a,o+"",e,t,i):void 0;void 0===s&&(s=a),Ln(e,o,s)}}),Ds)}function Er(e,t){var n=e.length;if(n)return oa(t+=t<0?n:0,n)?e[t]:void 0}function Cr(e,t,n){t=t.length?dt(t,(function(e){return To(e)?function(t){return dr(t,1===e.length?e[0]:e)}:e})):[Ws];var r=-1;return t=dt(t,Pt(Xi())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(Sr(e,(function(e,n,i){return{criteria:dt(t,(function(t){return t(e)})),index:++r,value:e}})),(function(e,t){return function(e,t,n){var r=-1,i=e.criteria,a=t.criteria,o=i.length,s=n.length;for(;++r<o;){var c=mi(i[r],a[r]);if(c){if(r>=s)return c;var u=n[r];return c*("desc"==u?-1:1)}}return e.index-t.index}(e,t,n)}))}function Tr(e,t,n){for(var r=-1,i=t.length,a={};++r<i;){var o=t[r],s=dr(e,o);n(s,o)&&Ur(a,si(o,e),s)}return a}function kr(e,t,n,r){var i=r?xt:bt,a=-1,o=t.length,s=e;for(e===t&&(t=vi(t)),n&&(s=dt(e,Pt(n)));++a<o;)for(var c=0,u=t[a],l=n?n(u):u;(c=i(s,l,c,r))>-1;)s!==e&&Xe.call(s,c,1),Xe.call(e,c,1);return e}function Ir(e,t){for(var n=e?t.length:0,r=n-1;n--;){var i=t[n];if(n==r||i!==a){var a=i;oa(i)?Xe.call(e,i,1):Kr(e,i)}}return e}function Br(e,t){return e+Kt(ln()*(t-e+1))}function zr(e,t){var n="";if(!e||t<1||t>9007199254740991)return n;do{t%2&&(n+=e),(t=Kt(t/2))&&(e+=e)}while(t);return n}function Rr(e,t){return xa(ma(e,t,Ws),e+"")}function qr(e){return qn(js(e))}function Fr(e,t){var n=js(e);return wa(n,Qn(t,0,n.length))}function Ur(e,t,n,r){if(!Ho(e))return e;for(var i=-1,a=(t=si(t,e)).length,o=a-1,s=e;null!=s&&++i<a;){var c=Ma(t[i]),u=n;if("__proto__"===c||"constructor"===c||"prototype"===c)return e;if(i!=o){var l=s[c];void 0===(u=r?r(l,c,s):void 0)&&(u=Ho(l)?l:oa(t[i+1])?[]:{})}Hn(s,c,u),s=s[c]}return e}var Lr=gn?function(e,t){return gn.set(e,t),e}:Ws,Hr=$t?function(e,t){return $t(e,"toString",{configurable:!0,enumerable:!1,value:Hs(t),writable:!0})}:Ws;function Zr(e){return wa(js(e))}function Vr(e,t,n){var r=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(n=n>i?i:n)<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var a=le(i);++r<i;)a[r]=e[r+t];return a}function Wr(e,t){var n;return er(e,(function(e,r,i){return!(n=t(e,r,i))})),!!n}function Gr(e,t,n){var r=0,i=null==e?r:e.length;if("number"==typeof t&&t==t&&i<=2147483647){for(;r<i;){var a=r+i>>>1,o=e[a];null!==o&&!Yo(o)&&(n?o<=t:o<t)?r=a+1:i=a}return i}return $r(e,t,Ws,n)}function $r(e,t,n,r){var i=0,a=null==e?0:e.length;if(0===a)return 0;for(var o=(t=n(t))!=t,s=null===t,c=Yo(t),u=void 0===t;i<a;){var l=Kt((i+a)/2),d=n(e[l]),f=void 0!==d,p=null===d,m=d==d,h=Yo(d);if(o)var y=r||m;else y=u?m&&(r||f):s?m&&f&&(r||!p):c?m&&f&&!p&&(r||!h):!p&&!h&&(r?d<=t:d<t);y?i=l+1:a=l}return sn(a,4294967294)}function Qr(e,t){for(var n=-1,r=e.length,i=0,a=[];++n<r;){var o=e[n],s=t?t(o):o;if(!n||!jo(s,c)){var c=s;a[i++]=0===o?0:o}}return a}function Xr(e){return"number"==typeof e?e:Yo(e)?NaN:+e}function Yr(e){if("string"==typeof e)return e;if(To(e))return dt(e,Yr)+"";if(Yo(e))return Sn?Sn.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Jr(e,t,n){var r=-1,i=ut,a=e.length,o=!0,s=[],c=s;if(n)o=!1,i=lt;else if(a>=200){var u=t?null:zi(e);if(u)return Ut(u);o=!1,i=At,c=new Bn}else c=t?[]:s;e:for(;++r<a;){var l=e[r],d=t?t(l):l;if(l=n||0!==l?l:0,o&&d==d){for(var f=c.length;f--;)if(c[f]===d)continue e;t&&c.push(d),s.push(l)}else i(c,d,n)||(c!==s&&c.push(d),s.push(l))}return s}function Kr(e,t){return null==(e=ha(e,t=si(t,e)))||delete e[Ma(Ra(t))]}function ei(e,t,n,r){return Ur(e,t,n(dr(e,t)),r)}function ti(e,t,n,r){for(var i=e.length,a=r?i:-1;(r?a--:++a<i)&&t(e[a],a,e););return n?Vr(e,r?0:a,r?a+1:i):Vr(e,r?a+1:0,r?i:a)}function ni(e,t){var n=e;return n instanceof Cn&&(n=n.value()),pt(t,(function(e,t){return t.func.apply(t.thisArg,ft([e],t.args))}),n)}function ri(e,t,n){var r=e.length;if(r<2)return r?Jr(e[0]):[];for(var i=-1,a=le(r);++i<r;)for(var o=e[i],s=-1;++s<r;)s!=i&&(a[i]=Kn(a[i]||o,e[s],t,n));return Jr(ar(a,1),t,n)}function ii(e,t,n){for(var r=-1,i=e.length,a=t.length,o={};++r<i;){var s=r<a?t[r]:void 0;n(o,e[r],s)}return o}function ai(e){return Bo(e)?e:[]}function oi(e){return"function"==typeof e?e:Ws}function si(e,t){return To(e)?e:ca(e,t)?[e]:Na(ss(e))}var ci=Rr;function ui(e,t,n){var r=e.length;return n=void 0===n?r:n,!t&&n>=r?e:Vr(e,t,n)}var li=Qt||function(e){return Ve.clearTimeout(e)};function di(e,t){if(t)return e.slice();var n=e.length,r=Ze?Ze(n):new e.constructor(n);return e.copy(r),r}function fi(e){var t=new e.constructor(e.byteLength);return new He(t).set(new He(e)),t}function pi(e,t){var n=t?fi(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function mi(e,t){if(e!==t){var n=void 0!==e,r=null===e,i=e==e,a=Yo(e),o=void 0!==t,s=null===t,c=t==t,u=Yo(t);if(!s&&!u&&!a&&e>t||a&&o&&c&&!s&&!u||r&&o&&c||!n&&c||!i)return 1;if(!r&&!a&&!u&&e<t||u&&n&&i&&!r&&!a||s&&n&&i||!o&&i||!c)return-1}return 0}function hi(e,t,n,r){for(var i=-1,a=e.length,o=n.length,s=-1,c=t.length,u=on(a-o,0),l=le(c+u),d=!r;++s<c;)l[s]=t[s];for(;++i<o;)(d||i<a)&&(l[n[i]]=e[i]);for(;u--;)l[s++]=e[i++];return l}function yi(e,t,n,r){for(var i=-1,a=e.length,o=-1,s=n.length,c=-1,u=t.length,l=on(a-s,0),d=le(l+u),f=!r;++i<l;)d[i]=e[i];for(var p=i;++c<u;)d[p+c]=t[c];for(;++o<s;)(f||i<a)&&(d[p+n[o]]=e[i++]);return d}function vi(e,t){var n=-1,r=e.length;for(t||(t=le(r));++n<r;)t[n]=e[n];return t}function gi(e,t,n,r){var i=!n;n||(n={});for(var a=-1,o=t.length;++a<o;){var s=t[a],c=r?r(n[s],e[s],s,n,e):void 0;void 0===c&&(c=e[s]),i?Gn(n,s,c):Hn(n,s,c)}return n}function bi(e,t){return function(n,r){var i=To(n)?it:Vn,a=t?t():{};return i(n,e,Xi(r,2),a)}}function xi(e){return Rr((function(t,n){var r=-1,i=n.length,a=i>1?n[i-1]:void 0,o=i>2?n[2]:void 0;for(a=e.length>3&&"function"==typeof a?(i--,a):void 0,o&&sa(n[0],n[1],o)&&(a=i<3?void 0:a,i=1),t=he(t);++r<i;){var s=n[r];s&&e(t,s,r,a)}return t}))}function Di(e,t){return function(n,r){if(null==n)return n;if(!Io(n))return e(n,r);for(var i=n.length,a=t?i:-1,o=he(n);(t?a--:++a<i)&&!1!==r(o[a],a,o););return n}}function _i(e){return function(t,n,r){for(var i=-1,a=he(t),o=r(t),s=o.length;s--;){var c=o[e?s:++i];if(!1===n(a[c],c,a))break}return t}}function wi(e){return function(t){var n=zt(t=ss(t))?Zt(t):void 0,r=n?n[0]:t.charAt(0),i=n?ui(n,1).join(""):t.slice(1);return r[e]()+i}}function Ni(e){return function(t){return pt(Fs(Cs(t).replace(Ae,"")),e,"")}}function Mi(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=jn(e.prototype),r=e.apply(n,t);return Ho(r)?r:n}}function Oi(e){return function(t,n,r){var i=he(t);if(!Io(t)){var a=Xi(n,3);t=xs(t),n=function(e){return a(i[e],e,i)}}var o=e(t,n,r);return o>-1?i[a?t[o]:o]:void 0}}function Si(e){return Zi((function(t){var n=t.length,i=n,a=En.prototype.thru;for(e&&t.reverse();i--;){var o=t[i];if("function"!=typeof o)throw new ge(r);if(a&&!s&&"wrapper"==$i(o))var s=new En([],!0)}for(i=s?i:n;++i<n;){var c=$i(o=t[i]),u="wrapper"==c?Gi(o):void 0;s=u&&ua(u[0])&&424==u[1]&&!u[4].length&&1==u[9]?s[$i(u[0])].apply(s,u[3]):1==o.length&&ua(o)?s[c]():s.thru(o)}return function(){var e=arguments,r=e[0];if(s&&1==e.length&&To(r))return s.plant(r).value();for(var i=0,a=n?t[i].apply(this,e):r;++i<n;)a=t[i].call(this,a);return a}}))}function Pi(e,t,n,r,i,a,o,s,c,u){var l=128&t,d=1&t,f=2&t,p=24&t,m=512&t,h=f?void 0:Mi(e);return function y(){for(var v=arguments.length,g=le(v),b=v;b--;)g[b]=arguments[b];if(p)var x=Qi(y),D=Tt(g,x);if(r&&(g=hi(g,r,i,p)),a&&(g=yi(g,a,o,p)),v-=D,p&&v<u){var _=Ft(g,x);return Ii(e,t,Pi,y.placeholder,n,g,_,s,c,u-v)}var w=d?n:this,N=f?w[e]:e;return v=g.length,s?g=ya(g,s):m&&v>1&&g.reverse(),l&&c<v&&(g.length=c),this&&this!==Ve&&this instanceof y&&(N=h||Mi(N)),N.apply(w,g)}}function ji(e,t){return function(n,r){return function(e,t,n,r){return cr(e,(function(e,i,a){t(r,n(e),i,a)})),r}(n,e,t(r),{})}}function Ai(e,t){return function(n,r){var i;if(void 0===n&&void 0===r)return t;if(void 0!==n&&(i=n),void 0!==r){if(void 0===i)return r;"string"==typeof n||"string"==typeof r?(n=Yr(n),r=Yr(r)):(n=Xr(n),r=Xr(r)),i=e(n,r)}return i}}function Ei(e){return Zi((function(t){return t=dt(t,Pt(Xi())),Rr((function(n){var r=this;return e(t,(function(e){return rt(e,r,n)}))}))}))}function Ci(e,t){var n=(t=void 0===t?" ":Yr(t)).length;if(n<2)return n?zr(t,e):t;var r=zr(t,Jt(e/Ht(t)));return zt(t)?ui(Zt(r),0,e).join(""):r.slice(0,e)}function Ti(e){return function(t,n,r){return r&&"number"!=typeof r&&sa(t,n,r)&&(n=r=void 0),t=ns(t),void 0===n?(n=t,t=0):n=ns(n),function(e,t,n,r){for(var i=-1,a=on(Jt((t-e)/(n||1)),0),o=le(a);a--;)o[r?a:++i]=e,e+=n;return o}(t,n,r=void 0===r?t<n?1:-1:ns(r),e)}}function ki(e){return function(t,n){return"string"==typeof t&&"string"==typeof n||(t=as(t),n=as(n)),e(t,n)}}function Ii(e,t,n,r,i,a,o,s,c,u){var l=8&t;t|=l?32:64,4&(t&=~(l?64:32))||(t&=-4);var d=[e,t,i,l?a:void 0,l?o:void 0,l?void 0:a,l?void 0:o,s,c,u],f=n.apply(void 0,d);return ua(e)&&ga(f,d),f.placeholder=r,Da(f,e,t)}function Bi(e){var t=me[e];return function(e,n){if(e=as(e),(n=null==n?0:sn(rs(n),292))&&nn(e)){var r=(ss(e)+"e").split("e");return+((r=(ss(t(r[0]+"e"+(+r[1]+n)))+"e").split("e"))[0]+"e"+(+r[1]-n))}return t(e)}}var zi=hn&&1/Ut(new hn([,-0]))[1]==1/0?function(e){return new hn(e)}:Ys;function Ri(e){return function(t){var n=na(t);return n==p?Rt(t):n==v?Lt(t):function(e,t){return dt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function qi(e,t,n,a,o,s,c,u){var l=2&t;if(!l&&"function"!=typeof e)throw new ge(r);var d=a?a.length:0;if(d||(t&=-97,a=o=void 0),c=void 0===c?c:on(rs(c),0),u=void 0===u?u:rs(u),d-=o?o.length:0,64&t){var f=a,p=o;a=o=void 0}var m=l?void 0:Gi(e),h=[e,t,n,a,o,f,p,s,c,u];if(m&&function(e,t){var n=e[1],r=t[1],a=n|r,o=a<131,s=128==r&&8==n||128==r&&256==n&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!o&&!s)return e;1&r&&(e[2]=t[2],a|=1&n?0:4);var c=t[3];if(c){var u=e[3];e[3]=u?hi(u,c,t[4]):c,e[4]=u?Ft(e[3],i):t[4]}(c=t[5])&&(u=e[5],e[5]=u?yi(u,c,t[6]):c,e[6]=u?Ft(e[5],i):t[6]);(c=t[7])&&(e[7]=c);128&r&&(e[8]=null==e[8]?t[8]:sn(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=a}(h,m),e=h[0],t=h[1],n=h[2],a=h[3],o=h[4],!(u=h[9]=void 0===h[9]?l?0:e.length:on(h[9]-d,0))&&24&t&&(t&=-25),t&&1!=t)y=8==t||16==t?function(e,t,n){var r=Mi(e);return function i(){for(var a=arguments.length,o=le(a),s=a,c=Qi(i);s--;)o[s]=arguments[s];var u=a<3&&o[0]!==c&&o[a-1]!==c?[]:Ft(o,c);if((a-=u.length)<n)return Ii(e,t,Pi,i.placeholder,void 0,o,u,void 0,void 0,n-a);var l=this&&this!==Ve&&this instanceof i?r:e;return rt(l,this,o)}}(e,t,u):32!=t&&33!=t||o.length?Pi.apply(void 0,h):function(e,t,n,r){var i=1&t,a=Mi(e);return function t(){for(var o=-1,s=arguments.length,c=-1,u=r.length,l=le(u+s),d=this&&this!==Ve&&this instanceof t?a:e;++c<u;)l[c]=r[c];for(;s--;)l[c++]=arguments[++o];return rt(d,i?n:this,l)}}(e,t,n,a);else var y=function(e,t,n){var r=1&t,i=Mi(e);return function t(){var a=this&&this!==Ve&&this instanceof t?i:e;return a.apply(r?n:this,arguments)}}(e,t,n);return Da((m?Lr:ga)(y,h),e,t)}function Fi(e,t,n,r){return void 0===e||jo(e,De[n])&&!Ne.call(r,n)?t:e}function Ui(e,t,n,r,i,a){return Ho(e)&&Ho(t)&&(a.set(t,e),Ar(e,t,void 0,Ui,a),a.delete(t)),e}function Li(e){return Go(e)?void 0:e}function Hi(e,t,n,r,i,a){var o=1&n,s=e.length,c=t.length;if(s!=c&&!(o&&c>s))return!1;var u=a.get(e),l=a.get(t);if(u&&l)return u==t&&l==e;var d=-1,f=!0,p=2&n?new Bn:void 0;for(a.set(e,t),a.set(t,e);++d<s;){var m=e[d],h=t[d];if(r)var y=o?r(h,m,d,t,e,a):r(m,h,d,e,t,a);if(void 0!==y){if(y)continue;f=!1;break}if(p){if(!ht(t,(function(e,t){if(!At(p,t)&&(m===e||i(m,e,n,r,a)))return p.push(t)}))){f=!1;break}}else if(m!==h&&!i(m,h,n,r,a)){f=!1;break}}return a.delete(e),a.delete(t),f}function Zi(e){return xa(ma(e,void 0,Ta),e+"")}function Vi(e){return fr(e,xs,ea)}function Wi(e){return fr(e,Ds,ta)}var Gi=gn?function(e){return gn.get(e)}:Ys;function $i(e){for(var t=e.name+"",n=bn[t],r=Ne.call(bn,t)?n.length:0;r--;){var i=n[r],a=i.func;if(null==a||a==e)return i.name}return t}function Qi(e){return(Ne.call(Pn,"placeholder")?Pn:e).placeholder}function Xi(){var e=Pn.iteratee||Gs;return e=e===Gs?wr:e,arguments.length?e(arguments[0],arguments[1]):e}function Yi(e,t){var n,r,i=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?i["string"==typeof t?"string":"hash"]:i.map}function Ji(e){for(var t=xs(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,fa(i)]}return t}function Ki(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return _r(n)?n:void 0}var ea=en?function(e){return null==e?[]:(e=he(e),ct(en(e),(function(t){return Qe.call(e,t)})))}:ic,ta=en?function(e){for(var t=[];e;)ft(t,ea(e)),e=We(e);return t}:ic,na=pr;function ra(e,t,n){for(var r=-1,i=(t=si(t,e)).length,a=!1;++r<i;){var o=Ma(t[r]);if(!(a=null!=e&&n(e,o)))break;e=e[o]}return a||++r!=i?a:!!(i=null==e?0:e.length)&&Lo(i)&&oa(o,i)&&(To(e)||Co(e))}function ia(e){return"function"!=typeof e.constructor||da(e)?{}:jn(We(e))}function aa(e){return To(e)||Co(e)||!!(yt&&e&&e[yt])}function oa(e,t){var n=typeof e;return!!(t=null==t?9007199254740991:t)&&("number"==n||"symbol"!=n&&oe.test(e))&&e>-1&&e%1==0&&e<t}function sa(e,t,n){if(!Ho(n))return!1;var r=typeof t;return!!("number"==r?Io(n)&&oa(t,n.length):"string"==r&&t in n)&&jo(n[t],e)}function ca(e,t){if(To(e))return!1;var n=typeof e;return!("number"!=n&&"symbol"!=n&&"boolean"!=n&&null!=e&&!Yo(e))||(L.test(e)||!U.test(e)||null!=t&&e in he(t))}function ua(e){var t=$i(e),n=Pn[t];if("function"!=typeof n||!(t in Cn.prototype))return!1;if(e===n)return!0;var r=Gi(n);return!!r&&e===r[0]}(fn&&na(new fn(new ArrayBuffer(1)))!=_||pn&&na(new pn)!=p||mn&&"[object Promise]"!=na(mn.resolve())||hn&&na(new hn)!=v||yn&&na(new yn)!=x)&&(na=function(e){var t=pr(e),n=t==h?e.constructor:void 0,r=n?Oa(n):"";if(r)switch(r){case xn:return _;case Dn:return p;case _n:return"[object Promise]";case wn:return v;case Nn:return x}return t});var la=_e?Fo:ac;function da(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||De)}function fa(e){return e==e&&!Ho(e)}function pa(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in he(n)))}}function ma(e,t,n){return t=on(void 0===t?e.length-1:t,0),function(){for(var r=arguments,i=-1,a=on(r.length-t,0),o=le(a);++i<a;)o[i]=r[t+i];i=-1;for(var s=le(t+1);++i<t;)s[i]=r[i];return s[t]=n(o),rt(e,this,s)}}function ha(e,t){return t.length<2?e:dr(e,Vr(t,0,-1))}function ya(e,t){for(var n=e.length,r=sn(t.length,n),i=vi(e);r--;){var a=t[r];e[r]=oa(a,n)?i[a]:void 0}return e}function va(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var ga=_a(Lr),ba=Yt||function(e,t){return Ve.setTimeout(e,t)},xa=_a(Hr);function Da(e,t,n){var r=t+"";return xa(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?"& ":"")+t[r],t=t.join(n>2?", ":" "),e.replace(Q,"{\n/* [wrapped with "+t+"] */\n")}(r,function(e,t){return at(a,(function(n){var r="_."+n[0];t&n[1]&&!ut(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(X);return t?t[1].split(Y):[]}(r),n)))}function _a(e){var t=0,n=0;return function(){var r=cn(),i=16-(r-n);if(n=r,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}function wa(e,t){var n=-1,r=e.length,i=r-1;for(t=void 0===t?r:t;++n<t;){var a=Br(n,i),o=e[a];e[a]=e[n],e[n]=o}return e.length=t,e}var Na=function(e){var t=wo(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(H,(function(e,n,r,i){t.push(r?i.replace(K,"$1"):n||e)})),t}));function Ma(e){if("string"==typeof e||Yo(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function Oa(e){if(null!=e){try{return we.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Sa(e){if(e instanceof Cn)return e.clone();var t=new En(e.__wrapped__,e.__chain__);return t.__actions__=vi(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Pa=Rr((function(e,t){return Bo(e)?Kn(e,ar(t,1,Bo,!0)):[]})),ja=Rr((function(e,t){var n=Ra(t);return Bo(n)&&(n=void 0),Bo(e)?Kn(e,ar(t,1,Bo,!0),Xi(n,2)):[]})),Aa=Rr((function(e,t){var n=Ra(t);return Bo(n)&&(n=void 0),Bo(e)?Kn(e,ar(t,1,Bo,!0),void 0,n):[]}));function Ea(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:rs(n);return i<0&&(i=on(r+i,0)),gt(e,Xi(t,3),i)}function Ca(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=r-1;return void 0!==n&&(i=rs(n),i=n<0?on(r+i,0):sn(i,r-1)),gt(e,Xi(t,3),i,!0)}function Ta(e){return(null==e?0:e.length)?ar(e,1):[]}function ka(e){return e&&e.length?e[0]:void 0}var Ia=Rr((function(e){var t=dt(e,ai);return t.length&&t[0]===e[0]?vr(t):[]})),Ba=Rr((function(e){var t=Ra(e),n=dt(e,ai);return t===Ra(n)?t=void 0:n.pop(),n.length&&n[0]===e[0]?vr(n,Xi(t,2)):[]})),za=Rr((function(e){var t=Ra(e),n=dt(e,ai);return(t="function"==typeof t?t:void 0)&&n.pop(),n.length&&n[0]===e[0]?vr(n,void 0,t):[]}));function Ra(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}var qa=Rr(Fa);function Fa(e,t){return e&&e.length&&t&&t.length?kr(e,t):e}var Ua=Zi((function(e,t){var n=null==e?0:e.length,r=$n(e,t);return Ir(e,dt(t,(function(e){return oa(e,n)?+e:e})).sort(mi)),r}));function La(e){return null==e?e:dn.call(e)}var Ha=Rr((function(e){return Jr(ar(e,1,Bo,!0))})),Za=Rr((function(e){var t=Ra(e);return Bo(t)&&(t=void 0),Jr(ar(e,1,Bo,!0),Xi(t,2))})),Va=Rr((function(e){var t=Ra(e);return t="function"==typeof t?t:void 0,Jr(ar(e,1,Bo,!0),void 0,t)}));function Wa(e){if(!e||!e.length)return[];var t=0;return e=ct(e,(function(e){if(Bo(e))return t=on(e.length,t),!0})),St(t,(function(t){return dt(e,wt(t))}))}function Ga(e,t){if(!e||!e.length)return[];var n=Wa(e);return null==t?n:dt(n,(function(e){return rt(t,void 0,e)}))}var $a=Rr((function(e,t){return Bo(e)?Kn(e,t):[]})),Qa=Rr((function(e){return ri(ct(e,Bo))})),Xa=Rr((function(e){var t=Ra(e);return Bo(t)&&(t=void 0),ri(ct(e,Bo),Xi(t,2))})),Ya=Rr((function(e){var t=Ra(e);return t="function"==typeof t?t:void 0,ri(ct(e,Bo),void 0,t)})),Ja=Rr(Wa);var Ka=Rr((function(e){var t=e.length,n=t>1?e[t-1]:void 0;return n="function"==typeof n?(e.pop(),n):void 0,Ga(e,n)}));function eo(e){var t=Pn(e);return t.__chain__=!0,t}function to(e,t){return t(e)}var no=Zi((function(e){var t=e.length,n=t?e[0]:0,r=this.__wrapped__,i=function(t){return $n(t,e)};return!(t>1||this.__actions__.length)&&r instanceof Cn&&oa(n)?((r=r.slice(n,+n+(t?1:0))).__actions__.push({func:to,args:[i],thisArg:void 0}),new En(r,this.__chain__).thru((function(e){return t&&!e.length&&e.push(void 0),e}))):this.thru(i)}));var ro=bi((function(e,t,n){Ne.call(e,n)?++e[n]:Gn(e,n,1)}));var io=Oi(Ea),ao=Oi(Ca);function oo(e,t){return(To(e)?at:er)(e,Xi(t,3))}function so(e,t){return(To(e)?ot:tr)(e,Xi(t,3))}var co=bi((function(e,t,n){Ne.call(e,n)?e[n].push(t):Gn(e,n,[t])}));var uo=Rr((function(e,t,n){var r=-1,i="function"==typeof t,a=Io(e)?le(e.length):[];return er(e,(function(e){a[++r]=i?rt(t,e,n):gr(e,t,n)})),a})),lo=bi((function(e,t,n){Gn(e,n,t)}));function fo(e,t){return(To(e)?dt:Sr)(e,Xi(t,3))}var po=bi((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var mo=Rr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&sa(e,t[0],t[1])?t=[]:n>2&&sa(t[0],t[1],t[2])&&(t=[t[0]]),Cr(e,ar(t,1),[])})),ho=Xt||function(){return Ve.Date.now()};function yo(e,t,n){return t=n?void 0:t,qi(e,128,void 0,void 0,void 0,void 0,t=e&&null==t?e.length:t)}function vo(e,t){var n;if("function"!=typeof t)throw new ge(r);return e=rs(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=void 0),n}}var go=Rr((function(e,t,n){var r=1;if(n.length){var i=Ft(n,Qi(go));r|=32}return qi(e,r,t,n,i)})),bo=Rr((function(e,t,n){var r=3;if(n.length){var i=Ft(n,Qi(bo));r|=32}return qi(t,r,e,n,i)}));function xo(e,t,n){var i,a,o,s,c,u,l=0,d=!1,f=!1,p=!0;if("function"!=typeof e)throw new ge(r);function m(t){var n=i,r=a;return i=a=void 0,l=t,s=e.apply(r,n)}function h(e){return l=e,c=ba(v,t),d?m(e):s}function y(e){var n=e-u;return void 0===u||n>=t||n<0||f&&e-l>=o}function v(){var e=ho();if(y(e))return g(e);c=ba(v,function(e){var n=t-(e-u);return f?sn(n,o-(e-l)):n}(e))}function g(e){return c=void 0,p&&i?m(e):(i=a=void 0,s)}function b(){var e=ho(),n=y(e);if(i=arguments,a=this,u=e,n){if(void 0===c)return h(u);if(f)return li(c),c=ba(v,t),m(u)}return void 0===c&&(c=ba(v,t)),s}return t=as(t)||0,Ho(n)&&(d=!!n.leading,o=(f="maxWait"in n)?on(as(n.maxWait)||0,t):o,p="trailing"in n?!!n.trailing:p),b.cancel=function(){void 0!==c&&li(c),l=0,i=u=a=c=void 0},b.flush=function(){return void 0===c?s:g(ho())},b}var Do=Rr((function(e,t){return Jn(e,1,t)})),_o=Rr((function(e,t,n){return Jn(e,as(t)||0,n)}));function wo(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new ge(r);var n=function(){var r=arguments,i=t?t.apply(this,r):r[0],a=n.cache;if(a.has(i))return a.get(i);var o=e.apply(this,r);return n.cache=a.set(i,o)||a,o};return n.cache=new(wo.Cache||In),n}function No(e){if("function"!=typeof e)throw new ge(r);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}wo.Cache=In;var Mo=ci((function(e,t){var n=(t=1==t.length&&To(t[0])?dt(t[0],Pt(Xi())):dt(ar(t,1),Pt(Xi()))).length;return Rr((function(r){for(var i=-1,a=sn(r.length,n);++i<a;)r[i]=t[i].call(this,r[i]);return rt(e,this,r)}))})),Oo=Rr((function(e,t){return qi(e,32,void 0,t,Ft(t,Qi(Oo)))})),So=Rr((function(e,t){return qi(e,64,void 0,t,Ft(t,Qi(So)))})),Po=Zi((function(e,t){return qi(e,256,void 0,void 0,void 0,t)}));function jo(e,t){return e===t||e!=e&&t!=t}var Ao=ki(mr),Eo=ki((function(e,t){return e>=t})),Co=br(function(){return arguments}())?br:function(e){return Zo(e)&&Ne.call(e,"callee")&&!Qe.call(e,"callee")},To=le.isArray,ko=Ye?Pt(Ye):function(e){return Zo(e)&&pr(e)==D};function Io(e){return null!=e&&Lo(e.length)&&!Fo(e)}function Bo(e){return Zo(e)&&Io(e)}var zo=tn||ac,Ro=Je?Pt(Je):function(e){return Zo(e)&&pr(e)==u};function qo(e){if(!Zo(e))return!1;var t=pr(e);return t==l||"[object DOMException]"==t||"string"==typeof e.message&&"string"==typeof e.name&&!Go(e)}function Fo(e){if(!Ho(e))return!1;var t=pr(e);return t==d||t==f||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Uo(e){return"number"==typeof e&&e==rs(e)}function Lo(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}function Ho(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function Zo(e){return null!=e&&"object"==typeof e}var Vo=Ke?Pt(Ke):function(e){return Zo(e)&&na(e)==p};function Wo(e){return"number"==typeof e||Zo(e)&&pr(e)==m}function Go(e){if(!Zo(e)||pr(e)!=h)return!1;var t=We(e);if(null===t)return!0;var n=Ne.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&we.call(n)==Pe}var $o=et?Pt(et):function(e){return Zo(e)&&pr(e)==y};var Qo=tt?Pt(tt):function(e){return Zo(e)&&na(e)==v};function Xo(e){return"string"==typeof e||!To(e)&&Zo(e)&&pr(e)==g}function Yo(e){return"symbol"==typeof e||Zo(e)&&pr(e)==b}var Jo=nt?Pt(nt):function(e){return Zo(e)&&Lo(e.length)&&!!Re[pr(e)]};var Ko=ki(Or),es=ki((function(e,t){return e<=t}));function ts(e){if(!e)return[];if(Io(e))return Xo(e)?Zt(e):vi(e);if(Nt&&e[Nt])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[Nt]());var t=na(e);return(t==p?Rt:t==v?Ut:js)(e)}function ns(e){return e?(e=as(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function rs(e){var t=ns(e),n=t%1;return t==t?n?t-n:t:0}function is(e){return e?Qn(rs(e),0,4294967295):0}function as(e){if("number"==typeof e)return e;if(Yo(e))return NaN;if(Ho(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=Ho(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(W,"");var n=re.test(e);return n||ae.test(e)?Le(e.slice(2),n?2:8):ne.test(e)?NaN:+e}function os(e){return gi(e,Ds(e))}function ss(e){return null==e?"":Yr(e)}var cs=xi((function(e,t){if(da(t)||Io(t))gi(t,xs(t),e);else for(var n in t)Ne.call(t,n)&&Hn(e,n,t[n])})),us=xi((function(e,t){gi(t,Ds(t),e)})),ls=xi((function(e,t,n,r){gi(t,Ds(t),e,r)})),ds=xi((function(e,t,n,r){gi(t,xs(t),e,r)})),fs=Zi($n);var ps=Rr((function(e,t){e=he(e);var n=-1,r=t.length,i=r>2?t[2]:void 0;for(i&&sa(t[0],t[1],i)&&(r=1);++n<r;)for(var a=t[n],o=Ds(a),s=-1,c=o.length;++s<c;){var u=o[s],l=e[u];(void 0===l||jo(l,De[u])&&!Ne.call(e,u))&&(e[u]=a[u])}return e})),ms=Rr((function(e){return e.push(void 0,Ui),rt(ws,void 0,e)}));function hs(e,t,n){var r=null==e?void 0:dr(e,t);return void 0===r?n:r}function ys(e,t){return null!=e&&ra(e,t,yr)}var vs=ji((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Se.call(t)),e[t]=n}),Hs(Ws)),gs=ji((function(e,t,n){null!=t&&"function"!=typeof t.toString&&(t=Se.call(t)),Ne.call(e,t)?e[t].push(n):e[t]=[n]}),Xi),bs=Rr(gr);function xs(e){return Io(e)?Rn(e):Nr(e)}function Ds(e){return Io(e)?Rn(e,!0):Mr(e)}var _s=xi((function(e,t,n){Ar(e,t,n)})),ws=xi((function(e,t,n,r){Ar(e,t,n,r)})),Ns=Zi((function(e,t){var n={};if(null==e)return n;var r=!1;t=dt(t,(function(t){return t=si(t,e),r||(r=t.length>1),t})),gi(e,Wi(e),n),r&&(n=Xn(n,7,Li));for(var i=t.length;i--;)Kr(n,t[i]);return n}));var Ms=Zi((function(e,t){return null==e?{}:function(e,t){return Tr(e,t,(function(t,n){return ys(e,n)}))}(e,t)}));function Os(e,t){if(null==e)return{};var n=dt(Wi(e),(function(e){return[e]}));return t=Xi(t),Tr(e,n,(function(e,n){return t(e,n[0])}))}var Ss=Ri(xs),Ps=Ri(Ds);function js(e){return null==e?[]:jt(e,xs(e))}var As=Ni((function(e,t,n){return t=t.toLowerCase(),e+(n?Es(t):t)}));function Es(e){return qs(ss(e).toLowerCase())}function Cs(e){return(e=ss(e))&&e.replace(se,kt).replace(Ee,"")}var Ts=Ni((function(e,t,n){return e+(n?"-":"")+t.toLowerCase()})),ks=Ni((function(e,t,n){return e+(n?" ":"")+t.toLowerCase()})),Is=wi("toLowerCase");var Bs=Ni((function(e,t,n){return e+(n?"_":"")+t.toLowerCase()}));var zs=Ni((function(e,t,n){return e+(n?" ":"")+qs(t)}));var Rs=Ni((function(e,t,n){return e+(n?" ":"")+t.toUpperCase()})),qs=wi("toUpperCase");function Fs(e,t,n){return e=ss(e),void 0===(t=n?void 0:t)?function(e){return Ie.test(e)}(e)?function(e){return e.match(Te)||[]}(e):function(e){return e.match(J)||[]}(e):e.match(t)||[]}var Us=Rr((function(e,t){try{return rt(e,void 0,t)}catch(e){return qo(e)?e:new fe(e)}})),Ls=Zi((function(e,t){return at(t,(function(t){t=Ma(t),Gn(e,t,go(e[t],e))})),e}));function Hs(e){return function(){return e}}var Zs=Si(),Vs=Si(!0);function Ws(e){return e}function Gs(e){return wr("function"==typeof e?e:Xn(e,1))}var $s=Rr((function(e,t){return function(n){return gr(n,e,t)}})),Qs=Rr((function(e,t){return function(n){return gr(e,n,t)}}));function Xs(e,t,n){var r=xs(t),i=lr(t,r);null!=n||Ho(t)&&(i.length||!r.length)||(n=t,t=e,e=this,i=lr(t,xs(t)));var a=!(Ho(n)&&"chain"in n&&!n.chain),o=Fo(e);return at(i,(function(n){var r=t[n];e[n]=r,o&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__),i=n.__actions__=vi(this.__actions__);return i.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,ft([this.value()],arguments))})})),e}function Ys(){}var Js=Ei(dt),Ks=Ei(st),ec=Ei(ht);function tc(e){return ca(e)?wt(Ma(e)):function(e){return function(t){return dr(t,e)}}(e)}var nc=Ti(),rc=Ti(!0);function ic(){return[]}function ac(){return!1}var oc=Ai((function(e,t){return e+t}),0),sc=Bi("ceil"),cc=Ai((function(e,t){return e/t}),1),uc=Bi("floor");var lc,dc=Ai((function(e,t){return e*t}),1),fc=Bi("round"),pc=Ai((function(e,t){return e-t}),0);return Pn.after=function(e,t){if("function"!=typeof t)throw new ge(r);return e=rs(e),function(){if(--e<1)return t.apply(this,arguments)}},Pn.ary=yo,Pn.assign=cs,Pn.assignIn=us,Pn.assignInWith=ls,Pn.assignWith=ds,Pn.at=fs,Pn.before=vo,Pn.bind=go,Pn.bindAll=Ls,Pn.bindKey=bo,Pn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return To(e)?e:[e]},Pn.chain=eo,Pn.chunk=function(e,t,n){t=(n?sa(e,t,n):void 0===t)?1:on(rs(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var i=0,a=0,o=le(Jt(r/t));i<r;)o[a++]=Vr(e,i,i+=t);return o},Pn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,i=[];++t<n;){var a=e[t];a&&(i[r++]=a)}return i},Pn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=le(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return ft(To(n)?vi(n):[n],ar(t,1))},Pn.cond=function(e){var t=null==e?0:e.length,n=Xi();return e=t?dt(e,(function(e){if("function"!=typeof e[1])throw new ge(r);return[n(e[0]),e[1]]})):[],Rr((function(n){for(var r=-1;++r<t;){var i=e[r];if(rt(i[0],this,n))return rt(i[1],this,n)}}))},Pn.conforms=function(e){return function(e){var t=xs(e);return function(n){return Yn(n,e,t)}}(Xn(e,1))},Pn.constant=Hs,Pn.countBy=ro,Pn.create=function(e,t){var n=jn(e);return null==t?n:Wn(n,t)},Pn.curry=function e(t,n,r){var i=qi(t,8,void 0,void 0,void 0,void 0,void 0,n=r?void 0:n);return i.placeholder=e.placeholder,i},Pn.curryRight=function e(t,n,r){var i=qi(t,16,void 0,void 0,void 0,void 0,void 0,n=r?void 0:n);return i.placeholder=e.placeholder,i},Pn.debounce=xo,Pn.defaults=ps,Pn.defaultsDeep=ms,Pn.defer=Do,Pn.delay=_o,Pn.difference=Pa,Pn.differenceBy=ja,Pn.differenceWith=Aa,Pn.drop=function(e,t,n){var r=null==e?0:e.length;return r?Vr(e,(t=n||void 0===t?1:rs(t))<0?0:t,r):[]},Pn.dropRight=function(e,t,n){var r=null==e?0:e.length;return r?Vr(e,0,(t=r-(t=n||void 0===t?1:rs(t)))<0?0:t):[]},Pn.dropRightWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3),!0,!0):[]},Pn.dropWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3),!0):[]},Pn.fill=function(e,t,n,r){var i=null==e?0:e.length;return i?(n&&"number"!=typeof n&&sa(e,t,n)&&(n=0,r=i),function(e,t,n,r){var i=e.length;for((n=rs(n))<0&&(n=-n>i?0:i+n),(r=void 0===r||r>i?i:rs(r))<0&&(r+=i),r=n>r?0:is(r);n<r;)e[n++]=t;return e}(e,t,n,r)):[]},Pn.filter=function(e,t){return(To(e)?ct:ir)(e,Xi(t,3))},Pn.flatMap=function(e,t){return ar(fo(e,t),1)},Pn.flatMapDeep=function(e,t){return ar(fo(e,t),1/0)},Pn.flatMapDepth=function(e,t,n){return n=void 0===n?1:rs(n),ar(fo(e,t),n)},Pn.flatten=Ta,Pn.flattenDeep=function(e){return(null==e?0:e.length)?ar(e,1/0):[]},Pn.flattenDepth=function(e,t){return(null==e?0:e.length)?ar(e,t=void 0===t?1:rs(t)):[]},Pn.flip=function(e){return qi(e,512)},Pn.flow=Zs,Pn.flowRight=Vs,Pn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var i=e[t];r[i[0]]=i[1]}return r},Pn.functions=function(e){return null==e?[]:lr(e,xs(e))},Pn.functionsIn=function(e){return null==e?[]:lr(e,Ds(e))},Pn.groupBy=co,Pn.initial=function(e){return(null==e?0:e.length)?Vr(e,0,-1):[]},Pn.intersection=Ia,Pn.intersectionBy=Ba,Pn.intersectionWith=za,Pn.invert=vs,Pn.invertBy=gs,Pn.invokeMap=uo,Pn.iteratee=Gs,Pn.keyBy=lo,Pn.keys=xs,Pn.keysIn=Ds,Pn.map=fo,Pn.mapKeys=function(e,t){var n={};return t=Xi(t,3),cr(e,(function(e,r,i){Gn(n,t(e,r,i),e)})),n},Pn.mapValues=function(e,t){var n={};return t=Xi(t,3),cr(e,(function(e,r,i){Gn(n,r,t(e,r,i))})),n},Pn.matches=function(e){return Pr(Xn(e,1))},Pn.matchesProperty=function(e,t){return jr(e,Xn(t,1))},Pn.memoize=wo,Pn.merge=_s,Pn.mergeWith=ws,Pn.method=$s,Pn.methodOf=Qs,Pn.mixin=Xs,Pn.negate=No,Pn.nthArg=function(e){return e=rs(e),Rr((function(t){return Er(t,e)}))},Pn.omit=Ns,Pn.omitBy=function(e,t){return Os(e,No(Xi(t)))},Pn.once=function(e){return vo(2,e)},Pn.orderBy=function(e,t,n,r){return null==e?[]:(To(t)||(t=null==t?[]:[t]),To(n=r?void 0:n)||(n=null==n?[]:[n]),Cr(e,t,n))},Pn.over=Js,Pn.overArgs=Mo,Pn.overEvery=Ks,Pn.overSome=ec,Pn.partial=Oo,Pn.partialRight=So,Pn.partition=po,Pn.pick=Ms,Pn.pickBy=Os,Pn.property=tc,Pn.propertyOf=function(e){return function(t){return null==e?void 0:dr(e,t)}},Pn.pull=qa,Pn.pullAll=Fa,Pn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?kr(e,t,Xi(n,2)):e},Pn.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?kr(e,t,void 0,n):e},Pn.pullAt=Ua,Pn.range=nc,Pn.rangeRight=rc,Pn.rearg=Po,Pn.reject=function(e,t){return(To(e)?ct:ir)(e,No(Xi(t,3)))},Pn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,i=[],a=e.length;for(t=Xi(t,3);++r<a;){var o=e[r];t(o,r,e)&&(n.push(o),i.push(r))}return Ir(e,i),n},Pn.rest=function(e,t){if("function"!=typeof e)throw new ge(r);return Rr(e,t=void 0===t?t:rs(t))},Pn.reverse=La,Pn.sampleSize=function(e,t,n){return t=(n?sa(e,t,n):void 0===t)?1:rs(t),(To(e)?Fn:Fr)(e,t)},Pn.set=function(e,t,n){return null==e?e:Ur(e,t,n)},Pn.setWith=function(e,t,n,r){return r="function"==typeof r?r:void 0,null==e?e:Ur(e,t,n,r)},Pn.shuffle=function(e){return(To(e)?Un:Zr)(e)},Pn.slice=function(e,t,n){var r=null==e?0:e.length;return r?(n&&"number"!=typeof n&&sa(e,t,n)?(t=0,n=r):(t=null==t?0:rs(t),n=void 0===n?r:rs(n)),Vr(e,t,n)):[]},Pn.sortBy=mo,Pn.sortedUniq=function(e){return e&&e.length?Qr(e):[]},Pn.sortedUniqBy=function(e,t){return e&&e.length?Qr(e,Xi(t,2)):[]},Pn.split=function(e,t,n){return n&&"number"!=typeof n&&sa(e,t,n)&&(t=n=void 0),(n=void 0===n?4294967295:n>>>0)?(e=ss(e))&&("string"==typeof t||null!=t&&!$o(t))&&!(t=Yr(t))&&zt(e)?ui(Zt(e),0,n):e.split(t,n):[]},Pn.spread=function(e,t){if("function"!=typeof e)throw new ge(r);return t=null==t?0:on(rs(t),0),Rr((function(n){var r=n[t],i=ui(n,0,t);return r&&ft(i,r),rt(e,this,i)}))},Pn.tail=function(e){var t=null==e?0:e.length;return t?Vr(e,1,t):[]},Pn.take=function(e,t,n){return e&&e.length?Vr(e,0,(t=n||void 0===t?1:rs(t))<0?0:t):[]},Pn.takeRight=function(e,t,n){var r=null==e?0:e.length;return r?Vr(e,(t=r-(t=n||void 0===t?1:rs(t)))<0?0:t,r):[]},Pn.takeRightWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3),!1,!0):[]},Pn.takeWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3)):[]},Pn.tap=function(e,t){return t(e),e},Pn.throttle=function(e,t,n){var i=!0,a=!0;if("function"!=typeof e)throw new ge(r);return Ho(n)&&(i="leading"in n?!!n.leading:i,a="trailing"in n?!!n.trailing:a),xo(e,t,{leading:i,maxWait:t,trailing:a})},Pn.thru=to,Pn.toArray=ts,Pn.toPairs=Ss,Pn.toPairsIn=Ps,Pn.toPath=function(e){return To(e)?dt(e,Ma):Yo(e)?[e]:vi(Na(ss(e)))},Pn.toPlainObject=os,Pn.transform=function(e,t,n){var r=To(e),i=r||zo(e)||Jo(e);if(t=Xi(t,4),null==n){var a=e&&e.constructor;n=i?r?new a:[]:Ho(e)&&Fo(a)?jn(We(e)):{}}return(i?at:cr)(e,(function(e,r,i){return t(n,e,r,i)})),n},Pn.unary=function(e){return yo(e,1)},Pn.union=Ha,Pn.unionBy=Za,Pn.unionWith=Va,Pn.uniq=function(e){return e&&e.length?Jr(e):[]},Pn.uniqBy=function(e,t){return e&&e.length?Jr(e,Xi(t,2)):[]},Pn.uniqWith=function(e,t){return t="function"==typeof t?t:void 0,e&&e.length?Jr(e,void 0,t):[]},Pn.unset=function(e,t){return null==e||Kr(e,t)},Pn.unzip=Wa,Pn.unzipWith=Ga,Pn.update=function(e,t,n){return null==e?e:ei(e,t,oi(n))},Pn.updateWith=function(e,t,n,r){return r="function"==typeof r?r:void 0,null==e?e:ei(e,t,oi(n),r)},Pn.values=js,Pn.valuesIn=function(e){return null==e?[]:jt(e,Ds(e))},Pn.without=$a,Pn.words=Fs,Pn.wrap=function(e,t){return Oo(oi(t),e)},Pn.xor=Qa,Pn.xorBy=Xa,Pn.xorWith=Ya,Pn.zip=Ja,Pn.zipObject=function(e,t){return ii(e||[],t||[],Hn)},Pn.zipObjectDeep=function(e,t){return ii(e||[],t||[],Ur)},Pn.zipWith=Ka,Pn.entries=Ss,Pn.entriesIn=Ps,Pn.extend=us,Pn.extendWith=ls,Xs(Pn,Pn),Pn.add=oc,Pn.attempt=Us,Pn.camelCase=As,Pn.capitalize=Es,Pn.ceil=sc,Pn.clamp=function(e,t,n){return void 0===n&&(n=t,t=void 0),void 0!==n&&(n=(n=as(n))==n?n:0),void 0!==t&&(t=(t=as(t))==t?t:0),Qn(as(e),t,n)},Pn.clone=function(e){return Xn(e,4)},Pn.cloneDeep=function(e){return Xn(e,5)},Pn.cloneDeepWith=function(e,t){return Xn(e,5,t="function"==typeof t?t:void 0)},Pn.cloneWith=function(e,t){return Xn(e,4,t="function"==typeof t?t:void 0)},Pn.conformsTo=function(e,t){return null==t||Yn(e,t,xs(t))},Pn.deburr=Cs,Pn.defaultTo=function(e,t){return null==e||e!=e?t:e},Pn.divide=cc,Pn.endsWith=function(e,t,n){e=ss(e),t=Yr(t);var r=e.length,i=n=void 0===n?r:Qn(rs(n),0,r);return(n-=t.length)>=0&&e.slice(n,i)==t},Pn.eq=jo,Pn.escape=function(e){return(e=ss(e))&&z.test(e)?e.replace(I,It):e},Pn.escapeRegExp=function(e){return(e=ss(e))&&V.test(e)?e.replace(Z,"\\$&"):e},Pn.every=function(e,t,n){var r=To(e)?st:nr;return n&&sa(e,t,n)&&(t=void 0),r(e,Xi(t,3))},Pn.find=io,Pn.findIndex=Ea,Pn.findKey=function(e,t){return vt(e,Xi(t,3),cr)},Pn.findLast=ao,Pn.findLastIndex=Ca,Pn.findLastKey=function(e,t){return vt(e,Xi(t,3),ur)},Pn.floor=uc,Pn.forEach=oo,Pn.forEachRight=so,Pn.forIn=function(e,t){return null==e?e:or(e,Xi(t,3),Ds)},Pn.forInRight=function(e,t){return null==e?e:sr(e,Xi(t,3),Ds)},Pn.forOwn=function(e,t){return e&&cr(e,Xi(t,3))},Pn.forOwnRight=function(e,t){return e&&ur(e,Xi(t,3))},Pn.get=hs,Pn.gt=Ao,Pn.gte=Eo,Pn.has=function(e,t){return null!=e&&ra(e,t,hr)},Pn.hasIn=ys,Pn.head=ka,Pn.identity=Ws,Pn.includes=function(e,t,n,r){e=Io(e)?e:js(e),n=n&&!r?rs(n):0;var i=e.length;return n<0&&(n=on(i+n,0)),Xo(e)?n<=i&&e.indexOf(t,n)>-1:!!i&&bt(e,t,n)>-1},Pn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:rs(n);return i<0&&(i=on(r+i,0)),bt(e,t,i)},Pn.inRange=function(e,t,n){return t=ns(t),void 0===n?(n=t,t=0):n=ns(n),function(e,t,n){return e>=sn(t,n)&&e<on(t,n)}(e=as(e),t,n)},Pn.invoke=bs,Pn.isArguments=Co,Pn.isArray=To,Pn.isArrayBuffer=ko,Pn.isArrayLike=Io,Pn.isArrayLikeObject=Bo,Pn.isBoolean=function(e){return!0===e||!1===e||Zo(e)&&pr(e)==c},Pn.isBuffer=zo,Pn.isDate=Ro,Pn.isElement=function(e){return Zo(e)&&1===e.nodeType&&!Go(e)},Pn.isEmpty=function(e){if(null==e)return!0;if(Io(e)&&(To(e)||"string"==typeof e||"function"==typeof e.splice||zo(e)||Jo(e)||Co(e)))return!e.length;var t=na(e);if(t==p||t==v)return!e.size;if(da(e))return!Nr(e).length;for(var n in e)if(Ne.call(e,n))return!1;return!0},Pn.isEqual=function(e,t){return xr(e,t)},Pn.isEqualWith=function(e,t,n){var r=(n="function"==typeof n?n:void 0)?n(e,t):void 0;return void 0===r?xr(e,t,void 0,n):!!r},Pn.isError=qo,Pn.isFinite=function(e){return"number"==typeof e&&nn(e)},Pn.isFunction=Fo,Pn.isInteger=Uo,Pn.isLength=Lo,Pn.isMap=Vo,Pn.isMatch=function(e,t){return e===t||Dr(e,t,Ji(t))},Pn.isMatchWith=function(e,t,n){return n="function"==typeof n?n:void 0,Dr(e,t,Ji(t),n)},Pn.isNaN=function(e){return Wo(e)&&e!=+e},Pn.isNative=function(e){if(la(e))throw new fe("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return _r(e)},Pn.isNil=function(e){return null==e},Pn.isNull=function(e){return null===e},Pn.isNumber=Wo,Pn.isObject=Ho,Pn.isObjectLike=Zo,Pn.isPlainObject=Go,Pn.isRegExp=$o,Pn.isSafeInteger=function(e){return Uo(e)&&e>=-9007199254740991&&e<=9007199254740991},Pn.isSet=Qo,Pn.isString=Xo,Pn.isSymbol=Yo,Pn.isTypedArray=Jo,Pn.isUndefined=function(e){return void 0===e},Pn.isWeakMap=function(e){return Zo(e)&&na(e)==x},Pn.isWeakSet=function(e){return Zo(e)&&"[object WeakSet]"==pr(e)},Pn.join=function(e,t){return null==e?"":rn.call(e,t)},Pn.kebabCase=Ts,Pn.last=Ra,Pn.lastIndexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=r;return void 0!==n&&(i=(i=rs(n))<0?on(r+i,0):sn(i,r-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,i):gt(e,Dt,i,!0)},Pn.lowerCase=ks,Pn.lowerFirst=Is,Pn.lt=Ko,Pn.lte=es,Pn.max=function(e){return e&&e.length?rr(e,Ws,mr):void 0},Pn.maxBy=function(e,t){return e&&e.length?rr(e,Xi(t,2),mr):void 0},Pn.mean=function(e){return _t(e,Ws)},Pn.meanBy=function(e,t){return _t(e,Xi(t,2))},Pn.min=function(e){return e&&e.length?rr(e,Ws,Or):void 0},Pn.minBy=function(e,t){return e&&e.length?rr(e,Xi(t,2),Or):void 0},Pn.stubArray=ic,Pn.stubFalse=ac,Pn.stubObject=function(){return{}},Pn.stubString=function(){return""},Pn.stubTrue=function(){return!0},Pn.multiply=dc,Pn.nth=function(e,t){return e&&e.length?Er(e,rs(t)):void 0},Pn.noConflict=function(){return Ve._===this&&(Ve._=je),this},Pn.noop=Ys,Pn.now=ho,Pn.pad=function(e,t,n){e=ss(e);var r=(t=rs(t))?Ht(e):0;if(!t||r>=t)return e;var i=(t-r)/2;return Ci(Kt(i),n)+e+Ci(Jt(i),n)},Pn.padEnd=function(e,t,n){e=ss(e);var r=(t=rs(t))?Ht(e):0;return t&&r<t?e+Ci(t-r,n):e},Pn.padStart=function(e,t,n){e=ss(e);var r=(t=rs(t))?Ht(e):0;return t&&r<t?Ci(t-r,n)+e:e},Pn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),un(ss(e).replace(G,""),t||0)},Pn.random=function(e,t,n){if(n&&"boolean"!=typeof n&&sa(e,t,n)&&(t=n=void 0),void 0===n&&("boolean"==typeof t?(n=t,t=void 0):"boolean"==typeof e&&(n=e,e=void 0)),void 0===e&&void 0===t?(e=0,t=1):(e=ns(e),void 0===t?(t=e,e=0):t=ns(t)),e>t){var r=e;e=t,t=r}if(n||e%1||t%1){var i=ln();return sn(e+i*(t-e+Ue("1e-"+((i+"").length-1))),t)}return Br(e,t)},Pn.reduce=function(e,t,n){var r=To(e)?pt:Mt,i=arguments.length<3;return r(e,Xi(t,4),n,i,er)},Pn.reduceRight=function(e,t,n){var r=To(e)?mt:Mt,i=arguments.length<3;return r(e,Xi(t,4),n,i,tr)},Pn.repeat=function(e,t,n){return t=(n?sa(e,t,n):void 0===t)?1:rs(t),zr(ss(e),t)},Pn.replace=function(){var e=arguments,t=ss(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Pn.result=function(e,t,n){var r=-1,i=(t=si(t,e)).length;for(i||(i=1,e=void 0);++r<i;){var a=null==e?void 0:e[Ma(t[r])];void 0===a&&(r=i,a=n),e=Fo(a)?a.call(e):a}return e},Pn.round=fc,Pn.runInContext=e,Pn.sample=function(e){return(To(e)?qn:qr)(e)},Pn.size=function(e){if(null==e)return 0;if(Io(e))return Xo(e)?Ht(e):e.length;var t=na(e);return t==p||t==v?e.size:Nr(e).length},Pn.snakeCase=Bs,Pn.some=function(e,t,n){var r=To(e)?ht:Wr;return n&&sa(e,t,n)&&(t=void 0),r(e,Xi(t,3))},Pn.sortedIndex=function(e,t){return Gr(e,t)},Pn.sortedIndexBy=function(e,t,n){return $r(e,t,Xi(n,2))},Pn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=Gr(e,t);if(r<n&&jo(e[r],t))return r}return-1},Pn.sortedLastIndex=function(e,t){return Gr(e,t,!0)},Pn.sortedLastIndexBy=function(e,t,n){return $r(e,t,Xi(n,2),!0)},Pn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=Gr(e,t,!0)-1;if(jo(e[n],t))return n}return-1},Pn.startCase=zs,Pn.startsWith=function(e,t,n){return e=ss(e),n=null==n?0:Qn(rs(n),0,e.length),t=Yr(t),e.slice(n,n+t.length)==t},Pn.subtract=pc,Pn.sum=function(e){return e&&e.length?Ot(e,Ws):0},Pn.sumBy=function(e,t){return e&&e.length?Ot(e,Xi(t,2)):0},Pn.template=function(e,t,n){var r=Pn.templateSettings;n&&sa(e,t,n)&&(t=void 0),e=ss(e),t=ls({},t,r,Fi);var i,a,o=ls({},t.imports,r.imports,Fi),s=xs(o),c=jt(o,s),u=0,l=t.interpolate||ce,d="__p += '",f=ye((t.escape||ce).source+"|"+l.source+"|"+(l===F?ee:ce).source+"|"+(t.evaluate||ce).source+"|$","g"),p="//# sourceURL="+(Ne.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++ze+"]")+"\n";e.replace(f,(function(t,n,r,o,s,c){return r||(r=o),d+=e.slice(u,c).replace(ue,Bt),n&&(i=!0,d+="' +\n__e("+n+") +\n'"),s&&(a=!0,d+="';\n"+s+";\n__p += '"),r&&(d+="' +\n((__t = ("+r+")) == null ? '' : __t) +\n'"),u=c+t.length,t})),d+="';\n";var m=Ne.call(t,"variable")&&t.variable;m||(d="with (obj) {\n"+d+"\n}\n"),d=(a?d.replace(E,""):d).replace(C,"$1").replace(T,"$1;"),d="function("+(m||"obj")+") {\n"+(m?"":"obj || (obj = {});\n")+"var __t, __p = ''"+(i?", __e = _.escape":"")+(a?", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n":";\n")+d+"return __p\n}";var h=Us((function(){return pe(s,p+"return "+d).apply(void 0,c)}));if(h.source=d,qo(h))throw h;return h},Pn.times=function(e,t){if((e=rs(e))<1||e>9007199254740991)return[];var n=4294967295,r=sn(e,4294967295);e-=4294967295;for(var i=St(r,t=Xi(t));++n<e;)t(n);return i},Pn.toFinite=ns,Pn.toInteger=rs,Pn.toLength=is,Pn.toLower=function(e){return ss(e).toLowerCase()},Pn.toNumber=as,Pn.toSafeInteger=function(e){return e?Qn(rs(e),-9007199254740991,9007199254740991):0===e?e:0},Pn.toString=ss,Pn.toUpper=function(e){return ss(e).toUpperCase()},Pn.trim=function(e,t,n){if((e=ss(e))&&(n||void 0===t))return e.replace(W,"");if(!e||!(t=Yr(t)))return e;var r=Zt(e),i=Zt(t);return ui(r,Et(r,i),Ct(r,i)+1).join("")},Pn.trimEnd=function(e,t,n){if((e=ss(e))&&(n||void 0===t))return e.replace($,"");if(!e||!(t=Yr(t)))return e;var r=Zt(e);return ui(r,0,Ct(r,Zt(t))+1).join("")},Pn.trimStart=function(e,t,n){if((e=ss(e))&&(n||void 0===t))return e.replace(G,"");if(!e||!(t=Yr(t)))return e;var r=Zt(e);return ui(r,Et(r,Zt(t))).join("")},Pn.truncate=function(e,t){var n=30,r="...";if(Ho(t)){var i="separator"in t?t.separator:i;n="length"in t?rs(t.length):n,r="omission"in t?Yr(t.omission):r}var a=(e=ss(e)).length;if(zt(e)){var o=Zt(e);a=o.length}if(n>=a)return e;var s=n-Ht(r);if(s<1)return r;var c=o?ui(o,0,s).join(""):e.slice(0,s);if(void 0===i)return c+r;if(o&&(s+=c.length-s),$o(i)){if(e.slice(s).search(i)){var u,l=c;for(i.global||(i=ye(i.source,ss(te.exec(i))+"g")),i.lastIndex=0;u=i.exec(l);)var d=u.index;c=c.slice(0,void 0===d?s:d)}}else if(e.indexOf(Yr(i),s)!=s){var f=c.lastIndexOf(i);f>-1&&(c=c.slice(0,f))}return c+r},Pn.unescape=function(e){return(e=ss(e))&&B.test(e)?e.replace(k,Vt):e},Pn.uniqueId=function(e){var t=++Me;return ss(e)+t},Pn.upperCase=Rs,Pn.upperFirst=qs,Pn.each=oo,Pn.eachRight=so,Pn.first=ka,Xs(Pn,(lc={},cr(Pn,(function(e,t){Ne.call(Pn.prototype,t)||(lc[t]=e)})),lc),{chain:!1}),Pn.VERSION="4.17.20",at(["bind","bindKey","curry","curryRight","partial","partialRight"],(function(e){Pn[e].placeholder=Pn})),at(["drop","take"],(function(e,t){Cn.prototype[e]=function(n){n=void 0===n?1:on(rs(n),0);var r=this.__filtered__&&!t?new Cn(this):this.clone();return r.__filtered__?r.__takeCount__=sn(n,r.__takeCount__):r.__views__.push({size:sn(n,4294967295),type:e+(r.__dir__<0?"Right":"")}),r},Cn.prototype[e+"Right"]=function(t){return this.reverse()[e](t).reverse()}})),at(["filter","map","takeWhile"],(function(e,t){var n=t+1,r=1==n||3==n;Cn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:Xi(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),at(["head","last"],(function(e,t){var n="take"+(t?"Right":"");Cn.prototype[e]=function(){return this[n](1).value()[0]}})),at(["initial","tail"],(function(e,t){var n="drop"+(t?"":"Right");Cn.prototype[e]=function(){return this.__filtered__?new Cn(this):this[n](1)}})),Cn.prototype.compact=function(){return this.filter(Ws)},Cn.prototype.find=function(e){return this.filter(e).head()},Cn.prototype.findLast=function(e){return this.reverse().find(e)},Cn.prototype.invokeMap=Rr((function(e,t){return"function"==typeof e?new Cn(this):this.map((function(n){return gr(n,e,t)}))})),Cn.prototype.reject=function(e){return this.filter(No(Xi(e)))},Cn.prototype.slice=function(e,t){e=rs(e);var n=this;return n.__filtered__&&(e>0||t<0)?new Cn(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),void 0!==t&&(n=(t=rs(t))<0?n.dropRight(-t):n.take(t-e)),n)},Cn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Cn.prototype.toArray=function(){return this.take(4294967295)},cr(Cn.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),i=Pn[r?"take"+("last"==t?"Right":""):t],a=r||/^find/.test(t);i&&(Pn.prototype[t]=function(){var t=this.__wrapped__,o=r?[1]:arguments,s=t instanceof Cn,c=o[0],u=s||To(t),l=function(e){var t=i.apply(Pn,ft([e],o));return r&&d?t[0]:t};u&&n&&"function"==typeof c&&1!=c.length&&(s=u=!1);var d=this.__chain__,f=!!this.__actions__.length,p=a&&!d,m=s&&!f;if(!a&&u){t=m?t:new Cn(this);var h=e.apply(t,o);return h.__actions__.push({func:to,args:[l],thisArg:void 0}),new En(h,d)}return p&&m?e.apply(this,o):(h=this.thru(l),p?r?h.value()[0]:h.value():h)})})),at(["pop","push","shift","sort","splice","unshift"],(function(e){var t=be[e],n=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",r=/^(?:pop|shift)$/.test(e);Pn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var i=this.value();return t.apply(To(i)?i:[],e)}return this[n]((function(n){return t.apply(To(n)?n:[],e)}))}})),cr(Cn.prototype,(function(e,t){var n=Pn[t];if(n){var r=n.name+"";Ne.call(bn,r)||(bn[r]=[]),bn[r].push({name:t,func:n})}})),bn[Pi(void 0,2).name]=[{name:"wrapper",func:void 0}],Cn.prototype.clone=function(){var e=new Cn(this.__wrapped__);return e.__actions__=vi(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=vi(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=vi(this.__views__),e},Cn.prototype.reverse=function(){if(this.__filtered__){var e=new Cn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Cn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=To(e),r=t<0,i=n?e.length:0,a=function(e,t,n){var r=-1,i=n.length;for(;++r<i;){var a=n[r],o=a.size;switch(a.type){case"drop":e+=o;break;case"dropRight":t-=o;break;case"take":t=sn(t,e+o);break;case"takeRight":e=on(e,t-o)}}return{start:e,end:t}}(0,i,this.__views__),o=a.start,s=a.end,c=s-o,u=r?s:o-1,l=this.__iteratees__,d=l.length,f=0,p=sn(c,this.__takeCount__);if(!n||!r&&i==c&&p==c)return ni(e,this.__actions__);var m=[];e:for(;c--&&f<p;){for(var h=-1,y=e[u+=t];++h<d;){var v=l[h],g=v.iteratee,b=v.type,x=g(y);if(2==b)y=x;else if(!x){if(1==b)continue e;break e}}m[f++]=y}return m},Pn.prototype.at=no,Pn.prototype.chain=function(){return eo(this)},Pn.prototype.commit=function(){return new En(this.value(),this.__chain__)},Pn.prototype.next=function(){void 0===this.__values__&&(this.__values__=ts(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?void 0:this.__values__[this.__index__++]}},Pn.prototype.plant=function(e){for(var t,n=this;n instanceof An;){var r=Sa(n);r.__index__=0,r.__values__=void 0,t?i.__wrapped__=r:t=r;var i=r;n=n.__wrapped__}return i.__wrapped__=e,t},Pn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Cn){var t=e;return this.__actions__.length&&(t=new Cn(this)),(t=t.reverse()).__actions__.push({func:to,args:[La],thisArg:void 0}),new En(t,this.__chain__)}return this.thru(La)},Pn.prototype.toJSON=Pn.prototype.valueOf=Pn.prototype.value=function(){return ni(this.__wrapped__,this.__actions__)},Pn.prototype.first=Pn.prototype.head,Nt&&(Pn.prototype[Nt]=function(){return this}),Pn}();Ge?((Ge.exports=Wt)._=Wt,We._=Wt):Ve._=Wt}).call(e)}));const iy=(e,t,n)=>{const r=Math.sqrt(e**2+t**2+n**2);if(0==r)return[0,0,0];return[ry.round(e/r,10),ry.round(t/r,10),ry.round(n/r,10)]},ay=(e,t,n,r,i,a)=>{e%=2*Math.PI,t%=2*Math.PI,n%=2*Math.PI,e=e<0?2*Math.PI+e:e,t=t<0?2*Math.PI+t:t,n=n<0?2*Math.PI+n:n;const o=ny.multiply(ny.multiply([[1,0,0],[0,Math.cos(e),-Math.sin(e)],[0,Math.sin(e),Math.cos(e)]],[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]]),[[Math.cos(n),-Math.sin(n),0],[Math.sin(n),Math.cos(n),0],[0,0,1]]);let s=ny.multiply(o,[r,i,a]);return s=s.map(e=>ry.round(e,10)),s},oy=(e,t,n,r,i,a,o,s,c)=>{const u=r-e,l=i-t,d=a-n,f=o-e,p=s-t,m=c-n,h=l*m-p*d,y=f*d-u*m,v=u*p-l*f;return{a:h,b:y,c:v,d:-(h*e+y*t+v*n)}},sy=(e,t,n,r)=>{const i={X:!0,Y:!0,Z:!0};if(0==e.a&&(i.X=!1),0==e.b&&(i.Y=!1),0==e.c&&(i.Z=!1),!i.X&&i.Y&&i.Z){return r==-e.b/e.c*n+e.d/e.c}if(i.X&&!i.Y&&i.Z){return r==-e.c/e.a*n+e.d/e.a}if(i.X&&i.Y&&!i.Z){return n==-e.a/e.b*t-e.d/e.b}return!i.X||i.Y||i.Z?i.X||!i.Y||i.Z?i.X||i.Y||!i.Z?e.a*t+e.b*n+e.c*r+e.d==0:r==-e.d/e.c:n==-e.d/e.b:t==-e.d/e.a},cy=e=>{const t=[];for(let n=0;n<e.length;n+=9){const r=oy(e[n],e[n+1],e[n+2],e[n+3],e[n+4],e[n+5],e[n+6],e[n+7],e[n+8]),[i,a,o]=iy(r.a,r.b,r.c);t.push(i,a,o)}return t},uy=e=>{if(e.vectors.length%3!=0)throw new Error("[Indice Utility] The provided vector array has an invalid length (Deindex)!");const t=[];for(let n=0;n<e.indices.length;n++){const r=3*e.indices[n];t.push(e.vectors[r],e.vectors[r+1],e.vectors[r+2])}return t},ly=e=>{if(e.length%3!=0)throw new Error("[Indice Utility] The provided array has an invalid length (Index)!");const t=[],n=[];for(let r=0;r<e.length;r+=3){let i=-1;for(let t=0;t<n.length;t+=3)if(e[r]==n[t]&&e[r+1]==n[t+1]&&e[r+2]==n[t+2]){i=t;break}-1==i?(n.push(e[r],e[r+1],e[r+2]),t.push((n.length-3)/3)):t.push(i/3)}return{indices:t,vectors:n}};var dy,fy="object"==typeof Reflect?Reflect:null,py=fy&&"function"==typeof fy.apply?fy.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};dy=fy&&"function"==typeof fy.ownKeys?fy.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var my=Number.isNaN||function(e){return e!=e};function hy(){hy.init.call(this)}var yy=hy,vy=function(e,t){return new Promise((function(n,r){function i(){void 0!==a&&e.removeListener("error",a),n([].slice.call(arguments))}var a;"error"!==t&&(a=function(n){e.removeListener(t,i),r(n)},e.once("error",a)),e.once(t,i)}))};hy.EventEmitter=hy,hy.prototype._events=void 0,hy.prototype._eventsCount=0,hy.prototype._maxListeners=void 0;var gy=10;function by(e){if("function"!=typeof e)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof e)}function xy(e){return void 0===e._maxListeners?hy.defaultMaxListeners:e._maxListeners}function Dy(e,t,n,r){var i,a,o,s;if(by(n),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,n.listener?n.listener:n),a=e._events),o=a[t]),void 0===o)o=a[t]=n,++e._eventsCount;else if("function"==typeof o?o=a[t]=r?[n,o]:[o,n]:r?o.unshift(n):o.push(n),(i=xy(e))>0&&o.length>i&&!o.warned){o.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=e,c.type=t,c.count=o.length,s=c,console&&console.warn&&console.warn(s)}return e}function _y(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function wy(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=_y.bind(r);return i.listener=n,r.wrapFn=i,i}function Ny(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:"function"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):Oy(i,i.length)}function My(e){var t=this._events;if(void 0!==t){var n=t[e];if("function"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function Oy(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}Object.defineProperty(hy,"defaultMaxListeners",{enumerable:!0,get:function(){return gy},set:function(e){if("number"!=typeof e||e<0||my(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");gy=e}}),hy.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},hy.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||my(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},hy.prototype.getMaxListeners=function(){return xy(this)},hy.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r="error"===e,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var o=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw o.context=a,o}var s=i[e];if(void 0===s)return!1;if("function"==typeof s)py(s,this,t);else{var c=s.length,u=Oy(s,c);for(n=0;n<c;++n)py(u[n],this,t)}return!0},hy.prototype.addListener=function(e,t){return Dy(this,e,t,!1)},hy.prototype.on=hy.prototype.addListener,hy.prototype.prependListener=function(e,t){return Dy(this,e,t,!0)},hy.prototype.once=function(e,t){return by(t),this.on(e,wy(this,e,t)),this},hy.prototype.prependOnceListener=function(e,t){return by(t),this.prependListener(e,wy(this,e,t)),this},hy.prototype.removeListener=function(e,t){var n,r,i,a,o;if(by(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if("function"!=typeof n){for(i=-1,a=n.length-1;a>=0;a--)if(n[a]===t||n[a].listener===t){o=n[a].listener,i=a;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit("removeListener",e,o||t)}return this},hy.prototype.off=hy.prototype.removeListener,hy.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,a=Object.keys(n);for(r=0;r<a.length;++r)"removeListener"!==(i=a[r])&&this.removeAllListeners(i);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},hy.prototype.listeners=function(e){return Ny(this,e,!0)},hy.prototype.rawListeners=function(e){return Ny(this,e,!1)},hy.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):My.call(e,t)},hy.prototype.listenerCount=My,hy.prototype.eventNames=function(){return this._eventsCount>0?dy(this._events):[]},yy.once=vy;const Sy={_3MF:{name:"3D Manufacturing Format",extensions:["3mf"],mimes:["model/3mf"]},AMF:{name:"Additive Manufacturing Format",extensions:["amf"],mimes:["application/x-amf"]},OBJ:{name:"Wavefront OBJ Format",extensions:["obj"],mimes:["text/plain"]},PLY:{name:"Stanford Triangle Format",extensions:["ply"],mimes:["application/x-ply"]},STL:{name:"Stereolithography Format",extensions:["stl"],mimes:["model/stl","model/x.stl-ascii","model/x.stl-binary"]}},Py=(e,t,n)=>{if(t.flags.includes("g"))throw new Error('[Regex Utility] The passed regular expression is not local! (Try "extractGlobal" instead)');{const r=e.match(t);if(null==r&&null!=n)throw n;return null!=r?(r.shift(),Array.from(r)):[]}},jy=(e,t,n)=>{if(t.flags.includes("g")){const r=Array.from(e.matchAll(t)||[]);if(0==r.length&&null!=n)throw n;if(r.length>0){const e=[];return r.forEach(t=>{e.push(t.slice(1))}),e}return[[]]}throw new Error('[Regex Utility] The passed regular expression is not global! (Try "extractLocal" instead)')},Ay=e=>{const t=e=>{const n={};if(Object.keys(e).length>0)for(const[r,i]of Object.entries(e))if("metadata"==r)if(i instanceof Array)for(const e of i){const t=null!=e["@_name"]?e["@_name"]:e["@_type"];null!=t&&null!=e["#text"]&&e["#text"].length>0&&(n[t]=e["#text"])}else{const e=null!=i["@_name"]?i["@_name"]:i["@_type"];null!=e&&null!=i["#text"]&&i["#text"].length>0&&(n[e]=i["#text"])}else if("object"==typeof i){const e=t(i);Object.keys(e).length>0&&(n[r]=e)}return n};return t(e)};var Ey=t((function(e,t){const n=":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD",r="["+n+"][:A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*",i=new RegExp("^"+r+"$");t.isExist=function(e){return void 0!==e},t.isEmptyObject=function(e){return 0===Object.keys(e).length},t.merge=function(e,t,n){if(t){const r=Object.keys(t),i=r.length;for(let a=0;a<i;a++)e[r[a]]="strict"===n?[t[r[a]]]:t[r[a]]}},t.getValue=function(e){return t.isExist(e)?e:""},t.buildOptions=function(e,t,n){var r={};if(!e)return t;for(let i=0;i<n.length;i++)void 0!==e[n[i]]?r[n[i]]=e[n[i]]:r[n[i]]=t[n[i]];return r},t.isName=function(e){const t=i.exec(e);return!(null==t)},t.getAllMatches=function(e,t){const n=[];let r=t.exec(e);for(;r;){const i=[],a=r.length;for(let e=0;e<a;e++)i.push(r[e]);n.push(i),r=t.exec(e)}return n},t.nameRegexp=r}));const Cy=function(e,t){const n={};if(!(e.child&&!Ey.isEmptyObject(e.child)||e.attrsMap&&!Ey.isEmptyObject(e.attrsMap)))return Ey.isExist(e.val)?e.val:"";Ey.isExist(e.val)&&("string"!=typeof e.val||""!==e.val&&e.val!==t.cdataPositionChar)&&("strict"===t.arrayMode?n[t.textNodeName]=[e.val]:n[t.textNodeName]=e.val),Ey.merge(n,e.attrsMap,t.arrayMode);const r=Object.keys(e.child);for(let o=0;o<r.length;o++){var i=r[o];if(e.child[i]&&e.child[i].length>1)for(var a in n[i]=[],e.child[i])n[i].push(Cy(e.child[i][a],t));else if(!0===t.arrayMode){const r=Cy(e.child[i][0],t);n[i]="object"==typeof r?[r]:r}else"strict"===t.arrayMode?n[i]=[Cy(e.child[i][0],t)]:n[i]=Cy(e.child[i][0],t)}return n};var Ty={convertToJson:Cy},ky=function(e,t,n){this.tagname=e,this.parent=t,this.child={},this.attrsMap={},this.val=n,this.addChild=function(e){Array.isArray(this.child[e.tagname])?this.child[e.tagname].push(e):this.child[e.tagname]=[e]}};const Iy=Ey.buildOptions;"<((!\\[CDATA\\[([\\s\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\/)(NAME)\\s*>))([^<]*)".replace(/NAME/g,Ey.nameRegexp);!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt),!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);const By={attributeNamePrefix:"@_",attrNodeName:!1,textNodeName:"#text",ignoreAttributes:!0,ignoreNameSpace:!1,allowBooleanAttributes:!1,parseNodeValue:!0,parseAttributeValue:!1,arrayMode:!1,trimValues:!0,cdataTagName:!1,cdataPositionChar:"\\c",tagValueProcessor:function(e,t){return e},attrValueProcessor:function(e,t){return e},stopNodes:[]};var zy=By;const Ry=["attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","arrayMode","trimValues","cdataTagName","cdataPositionChar","tagValueProcessor","attrValueProcessor","parseTrueNumberOnly","stopNodes"];var qy=Ry;function Fy(e,t,n){return t&&(n.trimValues&&(t=t.trim()),t=Ly(t=n.tagValueProcessor(t,e),n.parseNodeValue,n.parseTrueNumberOnly)),t}function Uy(e,t){if(t.ignoreNameSpace){const t=e.split(":"),n="/"===e.charAt(0)?"/":"";if("xmlns"===t[0])return"";2===t.length&&(e=n+t[1])}return e}function Ly(e,t,n){if(t&&"string"==typeof e){let t;return""===e.trim()||isNaN(e)?t="true"===e||"false"!==e&&e:(-1!==e.indexOf("0x")?t=Number.parseInt(e,16):-1!==e.indexOf(".")?(t=Number.parseFloat(e),e=e.replace(/\.?0+$/,"")):t=Number.parseInt(e,10),n&&(t=String(t)===e?t:e)),t}return Ey.isExist(e)?e:""}const Hy=new RegExp("([^\\s=]+)\\s*(=\\s*(['\"])(.*?)\\3)?","g");function Zy(e,t){if(!t.ignoreAttributes&&"string"==typeof e){e=e.replace(/\r?\n/g," ");const n=Ey.getAllMatches(e,Hy),r=n.length,i={};for(let e=0;e<r;e++){const r=Uy(n[e][1],t);r.length&&(void 0!==n[e][4]?(t.trimValues&&(n[e][4]=n[e][4].trim()),n[e][4]=t.attrValueProcessor(n[e][4],r),i[t.attributeNamePrefix+r]=Ly(n[e][4],t.parseAttributeValue,t.parseTrueNumberOnly)):t.allowBooleanAttributes&&(i[t.attributeNamePrefix+r]=!0))}if(!Object.keys(i).length)return;if(t.attrNodeName){const e={};return e[t.attrNodeName]=i,e}return i}}function Vy(e,t){let n,r="";for(let i=t;i<e.length;i++){let t=e[i];if(n)t===n&&(n="");else if('"'===t||"'"===t)n=t;else{if(">"===t)return{data:r,index:i};"\t"===t&&(t=" ")}r+=t}}function Wy(e,t,n,r){const i=e.indexOf(t,n);if(-1===i)throw new Error(r);return i+t.length-1}var Gy={defaultOptions:zy,props:qy,getTraversalObj:function(e,t){e=e.replace(/(\r\n)|\n/," "),t=Iy(t,By,Ry);const n=new ky("!xml");let r=n,i="";for(let n=0;n<e.length;n++){if("<"===e[n])if("/"===e[n+1]){const a=Wy(e,">",n,"Closing Tag is not closed.");let o=e.substring(n+2,a).trim();if(t.ignoreNameSpace){const e=o.indexOf(":");-1!==e&&(o=o.substr(e+1))}r&&(r.val?r.val=Ey.getValue(r.val)+""+Fy(o,i,t):r.val=Fy(o,i,t)),t.stopNodes.length&&t.stopNodes.includes(r.tagname)&&(r.child=[],null==r.attrsMap&&(r.attrsMap={}),r.val=e.substr(r.startIndex+1,n-r.startIndex-1)),r=r.parent,i="",n=a}else if("?"===e[n+1])n=Wy(e,"?>",n,"Pi Tag is not closed.");else if("!--"===e.substr(n+1,3))n=Wy(e,"--\x3e",n,"Comment is not closed.");else if("!D"===e.substr(n+1,2)){const t=Wy(e,">",n,"DOCTYPE is not closed.");n=e.substring(n,t).indexOf("[")>=0?e.indexOf("]>",n)+1:t}else if("!["===e.substr(n+1,2)){const a=Wy(e,"]]>",n,"CDATA is not closed.")-2,o=e.substring(n+9,a);if(i&&(r.val=Ey.getValue(r.val)+""+Fy(r.tagname,i,t),i=""),t.cdataTagName){const e=new ky(t.cdataTagName,r,o);r.addChild(e),r.val=Ey.getValue(r.val)+t.cdataPositionChar,o&&(e.val=o)}else r.val=(r.val||"")+(o||"");n=a+2}else{const a=Vy(e,n+1);let o=a.data;const s=a.index,c=o.indexOf(" ");let u=o;if(-1!==c&&(u=o.substr(0,c).trimRight(),o=o.substr(c+1)),t.ignoreNameSpace){const e=u.indexOf(":");-1!==e&&(u=u.substr(e+1))}if(r&&i&&"!xml"!==r.tagname&&(r.val=Ey.getValue(r.val)+""+Fy(r.tagname,i,t)),o.length>0&&o.lastIndexOf("/")===o.length-1){"/"===u[u.length-1]?(u=u.substr(0,u.length-1),o=u):o=o.substr(0,o.length-1);const e=new ky(u,r,"");u!==o&&(e.attrsMap=Zy(o,t)),r.addChild(e)}else{const e=new ky(u,r);t.stopNodes.length&&t.stopNodes.includes(e.tagname)&&(e.startIndex=s),u!==o&&(e.attrsMap=Zy(o,t)),r.addChild(e),r=e}i="",n=s}else i+=e[n]}return n}};const $y={allowBooleanAttributes:!1},Qy=["allowBooleanAttributes"];function Xy(e,t){for(var n=t;t<e.length;t++)if("?"!=e[t]&&" "!=e[t]);else{var r=e.substr(n,t-n);if(t>5&&"xml"===r)return nv("InvalidXml","XML declaration allowed only at the start of the document.",iv(e,t));if("?"==e[t]&&">"==e[t+1]){t++;break}}return t}function Yy(e,t){if(e.length>t+5&&"-"===e[t+1]&&"-"===e[t+2]){for(t+=3;t<e.length;t++)if("-"===e[t]&&"-"===e[t+1]&&">"===e[t+2]){t+=2;break}}else if(e.length>t+8&&"D"===e[t+1]&&"O"===e[t+2]&&"C"===e[t+3]&&"T"===e[t+4]&&"Y"===e[t+5]&&"P"===e[t+6]&&"E"===e[t+7]){let n=1;for(t+=8;t<e.length;t++)if("<"===e[t])n++;else if(">"===e[t]&&(n--,0===n))break}else if(e.length>t+9&&"["===e[t+1]&&"C"===e[t+2]&&"D"===e[t+3]&&"A"===e[t+4]&&"T"===e[t+5]&&"A"===e[t+6]&&"["===e[t+7])for(t+=8;t<e.length;t++)if("]"===e[t]&&"]"===e[t+1]&&">"===e[t+2]){t+=2;break}return t}function Jy(e,t){let n="",r="",i=!1;for(;t<e.length;t++){if('"'===e[t]||"'"===e[t])if(""===r)r=e[t];else{if(r!==e[t])continue;r=""}else if(">"===e[t]&&""===r){i=!0;break}n+=e[t]}return""===r&&{value:n,index:t,tagClosed:i}}const Ky=new RegExp("(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['\"])(([\\s\\S])*?)\\5)?","g");function ev(e,t){const n=Ey.getAllMatches(e,Ky),r={};for(let i=0;i<n.length;i++){if(0===n[i][1].length)return nv("InvalidAttr","Attribute '"+n[i][2]+"' has no space in starting.",av(e,n[i][0]));if(void 0===n[i][3]&&!t.allowBooleanAttributes)return nv("InvalidAttr","boolean attribute '"+n[i][2]+"' is not allowed.",av(e,n[i][0]));const a=n[i][2];if(!rv(a))return nv("InvalidAttr","Attribute '"+a+"' is an invalid name.",av(e,n[i][0]));if(r.hasOwnProperty(a))return nv("InvalidAttr","Attribute '"+a+"' is repeated.",av(e,n[i][0]));r[a]=1}return!0}function tv(e,t){if(";"===e[++t])return-1;if("#"===e[t])return function(e,t){let n=/\d/;for("x"===e[t]&&(t++,n=/[\da-fA-F]/);t<e.length;t++){if(";"===e[t])return t;if(!e[t].match(n))break}return-1}(e,++t);let n=0;for(;t<e.length;t++,n++)if(!(e[t].match(/\w/)&&n<20)){if(";"===e[t])break;return-1}return t}function nv(e,t,n){return{err:{code:e,msg:t,line:n}}}function rv(e){return Ey.isName(e)}function iv(e,t){return e.substring(0,t).split(/\r?\n/).length}function av(e,t){return e.indexOf(t)+t.length}var ov=function(e,t){t=Ey.buildOptions(t,$y,Qy);const n=[];let r=!1,i=!1;"\ufeff"===e[0]&&(e=e.substr(1));for(let o=0;o<e.length;o++){if("<"!==e[o]){if(" "===e[o]||"\t"===e[o]||"\n"===e[o]||"\r"===e[o])continue;return nv("InvalidChar","char '"+e[o]+"' is not expected.",iv(e,o))}if(o++,"?"===e[o]){if(o=Xy(e,++o),o.err)return o}else{if("!"===e[o]){o=Yy(e,o);continue}{let s=!1;"/"===e[o]&&(s=!0,o++);let c="";for(;o<e.length&&">"!==e[o]&&" "!==e[o]&&"\t"!==e[o]&&"\n"!==e[o]&&"\r"!==e[o];o++)c+=e[o];if(c=c.trim(),"/"===c[c.length-1]&&(c=c.substring(0,c.length-1),o--),a=c,!Ey.isName(a)){let t;return t=0===c.trim().length?"There is an unnecessary space between tag name and backward slash '</ ..'.":"Tag '"+c+"' is an invalid name.",nv("InvalidTag",t,iv(e,o))}const u=Jy(e,o);if(!1===u)return nv("InvalidAttr","Attributes for '"+c+"' have open quote.",iv(e,o));let l=u.value;if(o=u.index,"/"===l[l.length-1]){l=l.substring(0,l.length-1);const n=ev(l,t);if(!0!==n)return nv(n.err.code,n.err.msg,iv(e,o-l.length+n.err.line));r=!0}else if(s){if(!u.tagClosed)return nv("InvalidTag","Closing tag '"+c+"' doesn't have proper closing.",iv(e,o));if(l.trim().length>0)return nv("InvalidTag","Closing tag '"+c+"' can't have attributes or invalid starting.",iv(e,o));{const t=n.pop();if(c!==t)return nv("InvalidTag","Closing tag '"+t+"' is expected inplace of '"+c+"'.",iv(e,o));0==n.length&&(i=!0)}}else{const a=ev(l,t);if(!0!==a)return nv(a.err.code,a.err.msg,iv(e,o-l.length+a.err.line));if(!0===i)return nv("InvalidXml","Multiple possible root nodes found.",iv(e,o));n.push(c),r=!0}for(o++;o<e.length;o++){if("<"===e[o]){if("!"===e[o+1]){o++,o=Yy(e,o);continue}break}if("&"===e[o]){const t=tv(e,o);if(-1==t)return nv("InvalidChar","char '&' is not expected.",iv(e,o));o=t}}"<"===e[o]&&o--}}}var a;return r?!(n.length>0)||nv("InvalidXml","Invalid '"+JSON.stringify(n,null,4).replace(/\r?\n/g,"")+"' found.",1):nv("InvalidXml","Start tag expected.",1)};const sv=function(e){return String.fromCharCode(e)},cv={nilChar:sv(176),missingChar:sv(201),nilPremitive:sv(175),missingPremitive:sv(200),emptyChar:sv(178),emptyValue:sv(177),boundryChar:sv(179),objStart:sv(198),arrStart:sv(204),arrayEnd:sv(185)},uv=[cv.nilChar,cv.nilPremitive,cv.missingChar,cv.missingPremitive,cv.boundryChar,cv.emptyChar,cv.emptyValue,cv.arrayEnd,cv.objStart,cv.arrStart],lv=function(e,t,n){if("string"==typeof t)return e&&e[0]&&void 0!==e[0].val?dv(e[0].val):dv(e);{const i=void 0===(r=e)?cv.missingChar:null===r?cv.nilChar:!(r.child&&0===Object.keys(r.child).length&&(!r.attrsMap||0===Object.keys(r.attrsMap).length))||cv.emptyChar;if(!0===i){let r="";if(Array.isArray(t)){r+=cv.arrStart;const i=t[0],a=e.length;if("string"==typeof i)for(let t=0;t<a;t++){const n=dv(e[t].val);r=fv(r,n)}else for(let t=0;t<a;t++){const a=lv(e[t],i,n);r=fv(r,a)}r+=cv.arrayEnd}else{r+=cv.objStart;const i=Object.keys(t);Array.isArray(e)&&(e=e[0]);for(let a in i){const o=i[a];let s;s=!n.ignoreAttributes&&e.attrsMap&&e.attrsMap[o]?lv(e.attrsMap[o],t[o],n):o===n.textNodeName?lv(e.val,t[o],n):lv(e.child[o],t[o],n),r=fv(r,s)}}return r}return i}var r},dv=function(e){switch(e){case void 0:return cv.missingPremitive;case null:return cv.nilPremitive;case"":return cv.emptyValue;default:return e}},fv=function(e,t){return pv(t[0])||pv(e[e.length-1])||(e+=cv.boundryChar),e+t},pv=function(e){return-1!==uv.indexOf(e)};const mv=Ey.buildOptions;var hv={convert2nimn:function(e,t,n){return n=mv(n,Gy.defaultOptions,Gy.props),lv(e,t,n)}};const yv=Ey.buildOptions,vv=function(e,t,n){let r="{";const i=Object.keys(e.child);for(let n=0;n<i.length;n++){var a=i[n];if(e.child[a]&&e.child[a].length>1){for(var o in r+='"'+a+'" : [ ',e.child[a])r+=vv(e.child[a][o],t)+" , ";r=r.substr(0,r.length-1)+" ] "}else r+='"'+a+'" : '+vv(e.child[a][0],t)+" ,"}return Ey.merge(r,e.attrsMap),Ey.isEmptyObject(r)?Ey.isExist(e.val)?e.val:"":(Ey.isExist(e.val)&&("string"!=typeof e.val||""!==e.val&&e.val!==t.cdataPositionChar)&&(r+='"'+t.textNodeName+'" : '+(!0!==(s=e.val)&&!1!==s&&isNaN(s)?'"'+s+'"':s)),","===r[r.length-1]&&(r=r.substr(0,r.length-2)),r+"}");var s};var gv={convertToJsonString:function(e,t){return(t=yv(t,Gy.defaultOptions,Gy.props)).indentBy=t.indentBy||"",vv(e,t)}};const bv=Ey.buildOptions,xv={attributeNamePrefix:"@_",attrNodeName:!1,textNodeName:"#text",ignoreAttributes:!0,cdataTagName:!1,cdataPositionChar:"\\c",format:!1,indentBy:"  ",supressEmptyNode:!1,tagValueProcessor:function(e){return e},attrValueProcessor:function(e){return e}},Dv=["attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","tagValueProcessor","attrValueProcessor"];function _v(e){this.options=bv(e,xv,Dv),this.options.ignoreAttributes||this.options.attrNodeName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=Av),this.options.cdataTagName?this.isCDATA=Ev:this.isCDATA=function(){return!1},this.replaceCDATAstr=wv,this.replaceCDATAarr=Nv,this.options.format?(this.indentate=jv,this.tagEndChar=">\n",this.newLine="\n"):(this.indentate=function(){return""},this.tagEndChar=">",this.newLine=""),this.options.supressEmptyNode?(this.buildTextNode=Pv,this.buildObjNode=Ov):(this.buildTextNode=Sv,this.buildObjNode=Mv),this.buildTextValNode=Sv,this.buildObjectNode=Mv}function wv(e,t){return e=this.options.tagValueProcessor(""+e),""===this.options.cdataPositionChar||""===e?e+"<![CDATA["+t+"]]"+this.tagEndChar:e.replace(this.options.cdataPositionChar,"<![CDATA["+t+"]]"+this.tagEndChar)}function Nv(e,t){if(e=this.options.tagValueProcessor(""+e),""===this.options.cdataPositionChar||""===e)return e+"<![CDATA["+t.join("]]><![CDATA[")+"]]"+this.tagEndChar;for(let n in t)e=e.replace(this.options.cdataPositionChar,"<![CDATA["+t[n]+"]]>");return e+this.newLine}function Mv(e,t,n,r){return n&&!e.includes("<")?this.indentate(r)+"<"+t+n+">"+e+"</"+t+this.tagEndChar:this.indentate(r)+"<"+t+n+this.tagEndChar+e+this.indentate(r)+"</"+t+this.tagEndChar}function Ov(e,t,n,r){return""!==e?this.buildObjectNode(e,t,n,r):this.indentate(r)+"<"+t+n+"/"+this.tagEndChar}function Sv(e,t,n,r){return this.indentate(r)+"<"+t+n+">"+this.options.tagValueProcessor(e)+"</"+t+this.tagEndChar}function Pv(e,t,n,r){return""!==e?this.buildTextValNode(e,t,n,r):this.indentate(r)+"<"+t+n+"/"+this.tagEndChar}function jv(e){return this.options.indentBy.repeat(e)}function Av(e){return!!e.startsWith(this.options.attributeNamePrefix)&&e.substr(this.attrPrefixLen)}function Ev(e){return e===this.options.cdataTagName}_v.prototype.parse=function(e){return this.j2x(e,0).val},_v.prototype.j2x=function(e,t){let n="",r="";const i=Object.keys(e),a=i.length;for(let o=0;o<a;o++){const a=i[o];if(void 0===e[a]);else if(null===e[a])r+=this.indentate(t)+"<"+a+"/"+this.tagEndChar;else if(e[a]instanceof Date)r+=this.buildTextNode(e[a],a,"",t);else if("object"!=typeof e[a]){const i=this.isAttribute(a);i?n+=" "+i+'="'+this.options.attrValueProcessor(""+e[a])+'"':this.isCDATA(a)?e[this.options.textNodeName]?r+=this.replaceCDATAstr(e[this.options.textNodeName],e[a]):r+=this.replaceCDATAstr("",e[a]):a===this.options.textNodeName?e[this.options.cdataTagName]||(r+=this.options.tagValueProcessor(""+e[a])):r+=this.buildTextNode(e[a],a,"",t)}else if(Array.isArray(e[a]))if(this.isCDATA(a))r+=this.indentate(t),e[this.options.textNodeName]?r+=this.replaceCDATAarr(e[this.options.textNodeName],e[a]):r+=this.replaceCDATAarr("",e[a]);else{const n=e[a].length;for(let i=0;i<n;i++){const n=e[a][i];if(void 0===n);else if(null===n)r+=this.indentate(t)+"<"+a+"/"+this.tagEndChar;else if("object"==typeof n){const e=this.j2x(n,t+1);r+=this.buildObjNode(e.val,a,e.attrStr,t)}else r+=this.buildTextNode(n,a,"",t)}}else if(this.options.attrNodeName&&a===this.options.attrNodeName){const t=Object.keys(e[a]),r=t.length;for(let i=0;i<r;i++)n+=" "+t[i]+'="'+this.options.attrValueProcessor(""+e[a][t[i]])+'"'}else{const n=this.j2x(e[a],t+1);r+=this.buildObjNode(n.val,a,n.attrStr,t)}}return{attrStr:n,val:r}};var Cv=_v,Tv=t((function(e,t){const n=Gy,r=Ey.buildOptions;t.parse=function(e,t,i){if(i){!0===i&&(i={});const t=ov(e,i);if(!0!==t)throw Error(t.err.msg)}t=r(t,n.defaultOptions,n.props);const a=Gy.getTraversalObj(e,t);return Ty.convertToJson(a,t)},t.convertTonimn=hv.convert2nimn,t.getTraversalObj=Gy.getTraversalObj,t.convertToJson=Ty.convertToJson,t.convertToJsonString=gv.convertToJsonString,t.validate=ov,t.j2xParser=Cv,t.parseToNimn=function(e,n,r){return t.convertTonimn(t.getTraversalObj(e,r),n,r)}})),kv=t((function(t,r){
/*!

JSZip v3.5.0 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/master/LICENSE
*/
t.exports=function e(t,r,i){function a(s,c){if(!r[s]){if(!t[s]){if(!c&&n)return n();if(o)return o(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var l=r[s]={exports:{}};t[s][0].call(l.exports,(function(e){var n=t[s][1][e];return a(n||e)}),l,l.exports,e,t,r,i)}return r[s].exports}for(var o=n,s=0;s<i.length;s++)a(i[s]);return a}({1:[function(e,t,n){var r=e("./utils"),i=e("./support"),a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";n.encode=function(e){for(var t,n,i,o,s,c,u,l=[],d=0,f=e.length,p=f,m="string"!==r.getTypeOf(e);d<e.length;)p=f-d,m?(t=e[d++],n=d<f?e[d++]:0,i=d<f?e[d++]:0):(t=e.charCodeAt(d++),n=d<f?e.charCodeAt(d++):0,i=d<f?e.charCodeAt(d++):0),o=t>>2,s=(3&t)<<4|n>>4,c=p>1?(15&n)<<2|i>>6:64,u=p>2?63&i:64,l.push(a.charAt(o)+a.charAt(s)+a.charAt(c)+a.charAt(u));return l.join("")},n.decode=function(e){var t,n,r,o,s,c,u=0,l=0;if("data:"===e.substr(0,"data:".length))throw new Error("Invalid base64 input, it looks like a data url.");var d,f=3*(e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"")).length/4;if(e.charAt(e.length-1)===a.charAt(64)&&f--,e.charAt(e.length-2)===a.charAt(64)&&f--,f%1!=0)throw new Error("Invalid base64 input, bad content length.");for(d=i.uint8array?new Uint8Array(0|f):new Array(0|f);u<e.length;)t=a.indexOf(e.charAt(u++))<<2|(o=a.indexOf(e.charAt(u++)))>>4,n=(15&o)<<4|(s=a.indexOf(e.charAt(u++)))>>2,r=(3&s)<<6|(c=a.indexOf(e.charAt(u++))),d[l++]=t,64!==s&&(d[l++]=n),64!==c&&(d[l++]=r);return d}},{"./support":30,"./utils":32}],2:[function(e,t,n){var r=e("./external"),i=e("./stream/DataWorker"),a=e("./stream/DataLengthProbe"),o=e("./stream/Crc32Probe");function s(e,t,n,r,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=n,this.compression=r,this.compressedContent=i}a=e("./stream/DataLengthProbe"),s.prototype={getContentWorker:function(){var e=new i(r.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a("data_length")),t=this;return e.on("end",(function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")})),e},getCompressedWorker:function(){return new i(r.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},s.createWorkerFrom=function(e,t,n){return e.pipe(new o).pipe(new a("uncompressedSize")).pipe(t.compressWorker(n)).pipe(new a("compressedSize")).withStreamInfo("compression",t)},t.exports=s},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(e,t,n){var r=e("./stream/GenericWorker");n.STORE={magic:"\0\0",compressWorker:function(e){return new r("STORE compression")},uncompressWorker:function(){return new r("STORE decompression")}},n.DEFLATE=e("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(e,t,n){var r=e("./utils"),i=function(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?"string"!==r.getTypeOf(e)?function(e,t,n,r){var a=i,o=r+n;e^=-1;for(var s=r;s<o;s++)e=e>>>8^a[255&(e^t[s])];return-1^e}(0|t,e,e.length,0):function(e,t,n,r){var a=i,o=r+n;e^=-1;for(var s=r;s<o;s++)e=e>>>8^a[255&(e^t.charCodeAt(s))];return-1^e}(0|t,e,e.length,0):0}},{"./utils":32}],5:[function(e,t,n){n.base64=!1,n.binary=!1,n.dir=!1,n.createFolders=!0,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],6:[function(e,t,n){var r=null;r="undefined"!=typeof Promise?Promise:e("lie"),t.exports={Promise:r}},{lie:37}],7:[function(e,t,n){var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,i=e("pako"),a=e("./utils"),o=e("./stream/GenericWorker"),s=r?"uint8array":"array";function c(e,t){o.call(this,"FlateWorker/"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}n.magic="\b\0",a.inherits(c,o),c.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(a.transformTo(s,e.data),!1)},c.prototype.flush=function(){o.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},c.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null},c.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var e=this;this._pako.onData=function(t){e.push({data:t,meta:e.meta})}},n.compressWorker=function(e){return new c("Deflate",e)},n.uncompressWorker=function(){return new c("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(e,t,n){var r=e("../utils"),i=e("../stream/GenericWorker"),a=e("../utf8"),o=e("../crc32"),s=e("../signature"),c=function(e,t){var n,r="";for(n=0;n<t;n++)r+=String.fromCharCode(255&e),e>>>=8;return r},u=function(e,t,n,i,u,l){var d,f,p=e.file,m=e.compression,h=l!==a.utf8encode,y=r.transformTo("string",l(p.name)),v=r.transformTo("string",a.utf8encode(p.name)),g=p.comment,b=r.transformTo("string",l(g)),x=r.transformTo("string",a.utf8encode(g)),D=v.length!==p.name.length,_=x.length!==g.length,w="",N="",M="",O=p.dir,S=p.date,P={crc32:0,compressedSize:0,uncompressedSize:0};t&&!n||(P.crc32=e.crc32,P.compressedSize=e.compressedSize,P.uncompressedSize=e.uncompressedSize);var j=0;t&&(j|=8),h||!D&&!_||(j|=2048);var A,E,C,T=0,k=0;O&&(T|=16),"UNIX"===u?(k=798,T|=(A=p.unixPermissions,E=O,C=A,A||(C=E?16893:33204),(65535&C)<<16)):(k=20,T|=63&(p.dosPermissions||0)),d=S.getUTCHours(),d<<=6,d|=S.getUTCMinutes(),d<<=5,d|=S.getUTCSeconds()/2,f=S.getUTCFullYear()-1980,f<<=4,f|=S.getUTCMonth()+1,f<<=5,f|=S.getUTCDate(),D&&(N=c(1,1)+c(o(y),4)+v,w+="up"+c(N.length,2)+N),_&&(M=c(1,1)+c(o(b),4)+x,w+="uc"+c(M.length,2)+M);var I="";return I+="\n\0",I+=c(j,2),I+=m.magic,I+=c(d,2),I+=c(f,2),I+=c(P.crc32,4),I+=c(P.compressedSize,4),I+=c(P.uncompressedSize,4),I+=c(y.length,2),I+=c(w.length,2),{fileRecord:s.LOCAL_FILE_HEADER+I+y+w,dirRecord:s.CENTRAL_FILE_HEADER+c(k,2)+I+c(b.length,2)+"\0\0\0\0"+c(T,4)+c(i,4)+y+w+b}},l=function(e){return s.DATA_DESCRIPTOR+c(e.crc32,4)+c(e.compressedSize,4)+c(e.uncompressedSize,4)};function d(e,t,n,r){i.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=n,this.encodeFileName=r,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}r.inherits(d,i),d.prototype.push=function(e){var t=e.meta.percent||0,n=this.entriesCount,r=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:n?(t+100*(n-r-1))/n:100}}))},d.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var n=u(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:n.fileRecord,meta:{percent:0}})}else this.accumulate=!0},d.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,n=u(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(n.dirRecord),t)this.push({data:l(e),meta:{percent:100}});else for(this.push({data:n.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},d.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var n=this.bytesWritten-e,i=function(e,t,n,i,a){var o=r.transformTo("string",a(i));return s.CENTRAL_DIRECTORY_END+"\0\0\0\0"+c(e,2)+c(e,2)+c(t,4)+c(n,4)+c(o.length,2)+o}(this.dirRecords.length,n,e,this.zipComment,this.encodeFileName);this.push({data:i,meta:{percent:100}})},d.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},d.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on("data",(function(e){t.processChunk(e)})),e.on("end",(function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()})),e.on("error",(function(e){t.error(e)})),this},d.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},d.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var n=0;n<t.length;n++)try{t[n].error(e)}catch(e){}return!0},d.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=d},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(e,t,n){var r=e("../compressions"),i=e("./ZipFileWorker");n.generateWorker=function(e,t,n){var a=new i(t.streamFiles,n,t.platform,t.encodeFileName),o=0;try{e.forEach((function(e,n){o++;var i=function(e,t){var n=e||t,i=r[n];if(!i)throw new Error(n+" is not a valid compression method !");return i}(n.options.compression,t.compression),s=n.options.compressionOptions||t.compressionOptions||{},c=n.dir,u=n.date;n._compressWorker(i,s).withStreamInfo("file",{name:e,dir:c,date:u,comment:n.comment||"",unixPermissions:n.unixPermissions,dosPermissions:n.dosPermissions}).pipe(a)})),a.entriesCount=o}catch(e){a.error(e)}return a}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(e,t,n){function r(){if(!(this instanceof r))return new r;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files={},this.comment=null,this.root="",this.clone=function(){var e=new r;for(var t in this)"function"!=typeof this[t]&&(e[t]=this[t]);return e}}r.prototype=e("./object"),r.prototype.loadAsync=e("./load"),r.support=e("./support"),r.defaults=e("./defaults"),r.version="3.5.0",r.loadAsync=function(e,t){return(new r).loadAsync(e,t)},r.external=e("./external"),t.exports=r},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(e,t,n){var r=e("./utils"),i=e("./external"),a=e("./utf8"),o=(r=e("./utils"),e("./zipEntries")),s=e("./stream/Crc32Probe"),c=e("./nodejsUtils");function u(e){return new i.Promise((function(t,n){var r=e.decompressed.getContentWorker().pipe(new s);r.on("error",(function(e){n(e)})).on("end",(function(){r.streamInfo.crc32!==e.decompressed.crc32?n(new Error("Corrupted zip : CRC32 mismatch")):t()})).resume()}))}t.exports=function(e,t){var n=this;return t=r.extend(t||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:a.utf8decode}),c.isNode&&c.isStream(e)?i.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):r.prepareContent("the loaded zip file",e,!0,t.optimizedBinaryString,t.base64).then((function(e){var n=new o(t);return n.load(e),n})).then((function(e){var n=[i.Promise.resolve(e)],r=e.files;if(t.checkCRC32)for(var a=0;a<r.length;a++)n.push(u(r[a]));return i.Promise.all(n)})).then((function(e){for(var r=e.shift(),i=r.files,a=0;a<i.length;a++){var o=i[a];n.file(o.fileNameStr,o.decompressed,{binary:!0,optimizedBinaryString:!0,date:o.date,dir:o.dir,comment:o.fileCommentStr.length?o.fileCommentStr:null,unixPermissions:o.unixPermissions,dosPermissions:o.dosPermissions,createFolders:t.createFolders})}return r.zipComment.length&&(n.comment=r.zipComment),n}))}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(e,t,n){var r=e("../utils"),i=e("../stream/GenericWorker");function a(e,t){i.call(this,"Nodejs stream input adapter for "+e),this._upstreamEnded=!1,this._bindStream(t)}r.inherits(a,i),a.prototype._bindStream=function(e){var t=this;this._stream=e,e.pause(),e.on("data",(function(e){t.push({data:e,meta:{percent:0}})})).on("error",(function(e){t.isPaused?this.generatedError=e:t.error(e)})).on("end",(function(){t.isPaused?t._upstreamEnded=!0:t.end()}))},a.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},a.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=a},{"../stream/GenericWorker":28,"../utils":32}],13:[function(e,t,n){var r=e("readable-stream").Readable;function i(e,t,n){r.call(this,t),this._helper=e;var i=this;e.on("data",(function(e,t){i.push(e)||i._helper.pause(),n&&n(t)})).on("error",(function(e){i.emit("error",e)})).on("end",(function(){i.push(null)}))}e("../utils").inherits(i,r),i.prototype._read=function(){this._helper.resume()},t.exports=i},{"../utils":32,"readable-stream":16}],14:[function(e,t,n){t.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if("number"==typeof e)throw new Error('The "data" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&"function"==typeof e.on&&"function"==typeof e.pause&&"function"==typeof e.resume}}},{}],15:[function(e,t,n){var r=e("./utf8"),i=e("./utils"),a=e("./stream/GenericWorker"),o=e("./stream/StreamHelper"),s=e("./defaults"),c=e("./compressedObject"),u=e("./zipObject"),l=e("./generate"),d=e("./nodejsUtils"),f=e("./nodejs/NodejsStreamInputAdapter"),p=function(e,t,n){var r,o=i.getTypeOf(t),l=i.extend(n||{},s);l.date=l.date||new Date,null!==l.compression&&(l.compression=l.compression.toUpperCase()),"string"==typeof l.unixPermissions&&(l.unixPermissions=parseInt(l.unixPermissions,8)),l.unixPermissions&&16384&l.unixPermissions&&(l.dir=!0),l.dosPermissions&&16&l.dosPermissions&&(l.dir=!0),l.dir&&(e=h(e)),l.createFolders&&(r=m(e))&&y.call(this,r,!0);var p="string"===o&&!1===l.binary&&!1===l.base64;n&&void 0!==n.binary||(l.binary=!p),(t instanceof c&&0===t.uncompressedSize||l.dir||!t||0===t.length)&&(l.base64=!1,l.binary=!0,t="",l.compression="STORE",o="string");var v=null;v=t instanceof c||t instanceof a?t:d.isNode&&d.isStream(t)?new f(e,t):i.prepareContent(e,t,l.binary,l.optimizedBinaryString,l.base64);var g=new u(e,v,l);this.files[e]=g},m=function(e){"/"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf("/");return t>0?e.substring(0,t):""},h=function(e){return"/"!==e.slice(-1)&&(e+="/"),e},y=function(e,t){return t=void 0!==t?t:s.createFolders,e=h(e),this.files[e]||p.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function v(e){return"[object RegExp]"===Object.prototype.toString.call(e)}var g={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(e){var t,n,r;for(t in this.files)this.files.hasOwnProperty(t)&&(r=this.files[t],(n=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(n,r))},filter:function(e){var t=[];return this.forEach((function(n,r){e(n,r)&&t.push(r)})),t},file:function(e,t,n){if(1===arguments.length){if(v(e)){var r=e;return this.filter((function(e,t){return!t.dir&&r.test(e)}))}var i=this.files[this.root+e];return i&&!i.dir?i:null}return e=this.root+e,p.call(this,e,t,n),this},folder:function(e){if(!e)return this;if(v(e))return this.filter((function(t,n){return n.dir&&e.test(t)}));var t=this.root+e,n=y.call(this,t),r=this.clone();return r.root=n.name,r},remove:function(e){e=this.root+e;var t=this.files[e];if(t||("/"!==e.slice(-1)&&(e+="/"),t=this.files[e]),t&&!t.dir)delete this.files[e];else for(var n=this.filter((function(t,n){return n.name.slice(0,e.length)===e})),r=0;r<n.length;r++)delete this.files[n[r].name];return this},generate:function(e){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(e){var t,n={};try{if((n=i.extend(e||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:r.utf8encode})).type=n.type.toLowerCase(),n.compression=n.compression.toUpperCase(),"binarystring"===n.type&&(n.type="string"),!n.type)throw new Error("No output type specified.");i.checkSupport(n.type),"darwin"!==n.platform&&"freebsd"!==n.platform&&"linux"!==n.platform&&"sunos"!==n.platform||(n.platform="UNIX"),"win32"===n.platform&&(n.platform="DOS");var s=n.comment||this.comment||"";t=l.generateWorker(this,n,s)}catch(e){(t=new a("error")).error(e)}return new o(t,n.type||"string",n.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type="nodebuffer"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=g},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(e,t,n){t.exports=e("stream")},{stream:void 0}],17:[function(e,t,n){var r=e("./DataReader");function i(e){r.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e("../utils").inherits(i,r),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),n=e.charCodeAt(1),r=e.charCodeAt(2),i=e.charCodeAt(3),a=this.length-4;a>=0;--a)if(this.data[a]===t&&this.data[a+1]===n&&this.data[a+2]===r&&this.data[a+3]===i)return a-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),n=e.charCodeAt(1),r=e.charCodeAt(2),i=e.charCodeAt(3),a=this.readData(4);return t===a[0]&&n===a[1]&&r===a[2]&&i===a[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{"../utils":32,"./DataReader":18}],18:[function(e,t,n){var r=e("../utils");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+e+"). Corrupted zip ?")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(e){},readInt:function(e){var t,n=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)n=(n<<8)+this.byteAt(t);return this.index+=e,n},readString:function(e){return r.transformTo("string",this.readData(e))},readData:function(e){},lastIndexOfSignature:function(e){},readAndCheckSignature:function(e){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{"../utils":32}],19:[function(e,t,n){var r=e("./Uint8ArrayReader");function i(e){r.call(this,e)}e("../utils").inherits(i,r),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(e,t,n){var r=e("./DataReader");function i(e){r.call(this,e)}e("../utils").inherits(i,r),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{"../utils":32,"./DataReader":18}],21:[function(e,t,n){var r=e("./ArrayReader");function i(e){r.call(this,e)}e("../utils").inherits(i,r),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{"../utils":32,"./ArrayReader":17}],22:[function(e,t,n){var r=e("../utils"),i=e("../support"),a=e("./ArrayReader"),o=e("./StringReader"),s=e("./NodeBufferReader"),c=e("./Uint8ArrayReader");t.exports=function(e){var t=r.getTypeOf(e);return r.checkSupport(t),"string"!==t||i.uint8array?"nodebuffer"===t?new s(e):i.uint8array?new c(r.transformTo("uint8array",e)):new a(r.transformTo("array",e)):new o(e)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(e,t,n){n.LOCAL_FILE_HEADER="PK",n.CENTRAL_FILE_HEADER="PK",n.CENTRAL_DIRECTORY_END="PK",n.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",n.ZIP64_CENTRAL_DIRECTORY_END="PK",n.DATA_DESCRIPTOR="PK\b"},{}],24:[function(e,t,n){var r=e("./GenericWorker"),i=e("../utils");function a(e){r.call(this,"ConvertWorker to "+e),this.destType=e}i.inherits(a,r),a.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=a},{"../utils":32,"./GenericWorker":28}],25:[function(e,t,n){var r=e("./GenericWorker"),i=e("../crc32");function a(){r.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}e("../utils").inherits(a,r),a.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=a},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(e,t,n){var r=e("../utils"),i=e("./GenericWorker");function a(e){i.call(this,"DataLengthProbe for "+e),this.propName=e,this.withStreamInfo(e,0)}r.inherits(a,i),a.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=a},{"../utils":32,"./GenericWorker":28}],27:[function(e,t,n){var r=e("../utils"),i=e("./GenericWorker");function a(e){i.call(this,"DataWorker");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,e.then((function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=r.getTypeOf(e),t.isPaused||t._tickAndRepeat()}),(function(e){t.error(e)}))}r.inherits(a,i),a.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},a.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,r.delay(this._tickAndRepeat,[],this)),!0)},a.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(r.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},a.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":e=this.data.substring(this.index,t);break;case"uint8array":e=this.data.subarray(this.index,t);break;case"array":case"nodebuffer":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=a},{"../utils":32,"./GenericWorker":28}],28:[function(e,t,n){function r(e){this.name=e||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}r.prototype={push:function(e){this.emit("data",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit("error",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit("error",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var n=0;n<this._listeners[e].length;n++)this._listeners[e][n].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on("data",(function(e){t.processChunk(e)})),e.on("end",(function(){t.end()})),e.on("error",(function(e){t.error(e)})),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;this.isPaused=!1;var e=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e="Worker "+this.name;return this.previous?this.previous+" -> "+e:e}},t.exports=r},{}],29:[function(e,t,n){var r=e("../utils"),i=e("./ConvertWorker"),a=e("./GenericWorker"),o=e("../base64"),s=e("../support"),c=e("../external"),u=null;if(s.nodestream)try{u=e("../nodejs/NodejsStreamOutputAdapter")}catch(e){}function l(e,t){return new c.Promise((function(n,i){var a=[],s=e._internalType,c=e._outputType,u=e._mimeType;e.on("data",(function(e,n){a.push(e),t&&t(n)})).on("error",(function(e){a=[],i(e)})).on("end",(function(){try{var e=function(e,t,n){switch(e){case"blob":return r.newBlob(r.transformTo("arraybuffer",t),n);case"base64":return o.encode(t);default:return r.transformTo(e,t)}}(c,function(e,t){var n,r=0,i=null,a=0;for(n=0;n<t.length;n++)a+=t[n].length;switch(e){case"string":return t.join("");case"array":return Array.prototype.concat.apply([],t);case"uint8array":for(i=new Uint8Array(a),n=0;n<t.length;n++)i.set(t[n],r),r+=t[n].length;return i;case"nodebuffer":return Buffer.concat(t);default:throw new Error("concat : unsupported type '"+e+"'")}}(s,a),u);n(e)}catch(e){i(e)}a=[]})).resume()}))}function d(e,t,n){var o=t;switch(t){case"blob":case"arraybuffer":o="uint8array";break;case"base64":o="string"}try{this._internalType=o,this._outputType=t,this._mimeType=n,r.checkSupport(o),this._worker=e.pipe(new i(o)),e.lock()}catch(e){this._worker=new a("error"),this._worker.error(e)}}d.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var n=this;return"data"===e?this._worker.on(e,(function(e){t.call(n,e.data,e.meta)})):this._worker.on(e,(function(){r.delay(t,arguments,n)})),this},resume:function(){return r.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(r.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new u(this,{objectMode:"nodebuffer"!==this._outputType},e)}},t.exports=d},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(e,t,n){if(n.base64=!0,n.array=!0,n.string=!0,n.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,n.nodebuffer="undefined"!=typeof Buffer,n.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)n.blob=!1;else{var r=new ArrayBuffer(0);try{n.blob=0===new Blob([r],{type:"application/zip"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(r),n.blob=0===i.getBlob("application/zip").size}catch(e){n.blob=!1}}}try{n.nodestream=!!e("readable-stream").Readable}catch(e){n.nodestream=!1}},{"readable-stream":16}],31:[function(e,t,n){for(var r=e("./utils"),i=e("./support"),a=e("./nodejsUtils"),o=e("./stream/GenericWorker"),s=new Array(256),c=0;c<256;c++)s[c]=c>=252?6:c>=248?5:c>=240?4:c>=224?3:c>=192?2:1;function u(){o.call(this,"utf-8 decode"),this.leftOver=null}function l(){o.call(this,"utf-8 encode")}s[254]=s[254]=1,n.utf8encode=function(e){return i.nodebuffer?a.newBufferFrom(e,"utf-8"):function(e){var t,n,r,a,o,s=e.length,c=0;for(a=0;a<s;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(r=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(r-56320),a++),c+=n<128?1:n<2048?2:n<65536?3:4;for(t=i.uint8array?new Uint8Array(c):new Array(c),o=0,a=0;o<c;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(r=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(r-56320),a++),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t}(e)},n.utf8decode=function(e){return i.nodebuffer?r.transformTo("nodebuffer",e).toString("utf-8"):function(e){var t,n,i,a,o=e.length,c=new Array(2*o);for(n=0,t=0;t<o;)if((i=e[t++])<128)c[n++]=i;else if((a=s[i])>4)c[n++]=65533,t+=a-1;else{for(i&=2===a?31:3===a?15:7;a>1&&t<o;)i=i<<6|63&e[t++],a--;a>1?c[n++]=65533:i<65536?c[n++]=i:(i-=65536,c[n++]=55296|i>>10&1023,c[n++]=56320|1023&i)}return c.length!==n&&(c.subarray?c=c.subarray(0,n):c.length=n),r.applyFromCharCode(c)}(e=r.transformTo(i.uint8array?"uint8array":"array",e))},r.inherits(u,o),u.prototype.processChunk=function(e){var t=r.transformTo(i.uint8array?"uint8array":"array",e.data);if(this.leftOver&&this.leftOver.length){if(i.uint8array){var a=t;(t=new Uint8Array(a.length+this.leftOver.length)).set(this.leftOver,0),t.set(a,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var o=function(e,t){var n;for((t=t||e.length)>e.length&&(t=e.length),n=t-1;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+s[e[n]]>t?n:t}(t),c=t;o!==t.length&&(i.uint8array?(c=t.subarray(0,o),this.leftOver=t.subarray(o,t.length)):(c=t.slice(0,o),this.leftOver=t.slice(o,t.length))),this.push({data:n.utf8decode(c),meta:e.meta})},u.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},n.Utf8DecodeWorker=u,r.inherits(l,o),l.prototype.processChunk=function(e){this.push({data:n.utf8encode(e.data),meta:e.meta})},n.Utf8EncodeWorker=l},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(e,t,n){var r=e("./support"),i=e("./base64"),a=e("./nodejsUtils"),o=e("set-immediate-shim"),s=e("./external");function c(e){return e}function u(e,t){for(var n=0;n<e.length;++n)t[n]=255&e.charCodeAt(n);return t}n.newBlob=function(e,t){n.checkSupport("blob");try{return new Blob([e],{type:t})}catch(n){try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return r.append(e),r.getBlob(t)}catch(e){throw new Error("Bug : can't construct the Blob.")}}};var l={stringifyByChunk:function(e,t,n){var r=[],i=0,a=e.length;if(a<=n)return String.fromCharCode.apply(null,e);for(;i<a;)"array"===t||"nodebuffer"===t?r.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+n,a)))):r.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+n,a)))),i+=n;return r.join("")},stringifyByChar:function(e){for(var t="",n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t},applyCanBeUsed:{uint8array:function(){try{return r.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return r.nodebuffer&&1===String.fromCharCode.apply(null,a.allocBuffer(1)).length}catch(e){return!1}}()}};function d(e){var t=65536,r=n.getTypeOf(e),i=!0;if("uint8array"===r?i=l.applyCanBeUsed.uint8array:"nodebuffer"===r&&(i=l.applyCanBeUsed.nodebuffer),i)for(;t>1;)try{return l.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return l.stringifyByChar(e)}function f(e,t){for(var n=0;n<e.length;n++)t[n]=e[n];return t}n.applyFromCharCode=d;var p={};p.string={string:c,array:function(e){return u(e,new Array(e.length))},arraybuffer:function(e){return p.string.uint8array(e).buffer},uint8array:function(e){return u(e,new Uint8Array(e.length))},nodebuffer:function(e){return u(e,a.allocBuffer(e.length))}},p.array={string:d,array:c,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return a.newBufferFrom(e)}},p.arraybuffer={string:function(e){return d(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:c,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return a.newBufferFrom(new Uint8Array(e))}},p.uint8array={string:d,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:c,nodebuffer:function(e){return a.newBufferFrom(e)}},p.nodebuffer={string:d,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return p.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:c},n.transformTo=function(e,t){if(t||(t=""),!e)return t;n.checkSupport(e);var r=n.getTypeOf(t);return p[r][e](t)},n.getTypeOf=function(e){return"string"==typeof e?"string":"[object Array]"===Object.prototype.toString.call(e)?"array":r.nodebuffer&&a.isBuffer(e)?"nodebuffer":r.uint8array&&e instanceof Uint8Array?"uint8array":r.arraybuffer&&e instanceof ArrayBuffer?"arraybuffer":void 0},n.checkSupport=function(e){if(!r[e.toLowerCase()])throw new Error(e+" is not supported by this platform")},n.MAX_VALUE_16BITS=65535,n.MAX_VALUE_32BITS=-1,n.pretty=function(e){var t,n,r="";for(n=0;n<(e||"").length;n++)r+="\\x"+((t=e.charCodeAt(n))<16?"0":"")+t.toString(16).toUpperCase();return r},n.delay=function(e,t,n){o((function(){e.apply(n||null,t||[])}))},n.inherits=function(e,t){var n=function(){};n.prototype=t.prototype,e.prototype=new n},n.extend=function(){var e,t,n={};for(e=0;e<arguments.length;e++)for(t in arguments[e])arguments[e].hasOwnProperty(t)&&void 0===n[t]&&(n[t]=arguments[e][t]);return n},n.prepareContent=function(e,t,a,o,c){return s.Promise.resolve(t).then((function(e){return r.blob&&(e instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(e)))&&"undefined"!=typeof FileReader?new s.Promise((function(t,n){var r=new FileReader;r.onload=function(e){t(e.target.result)},r.onerror=function(e){n(e.target.error)},r.readAsArrayBuffer(e)})):e})).then((function(t){var l,d=n.getTypeOf(t);return d?("arraybuffer"===d?t=n.transformTo("uint8array",t):"string"===d&&(c?t=i.decode(t):a&&!0!==o&&(t=u(l=t,r.uint8array?new Uint8Array(l.length):new Array(l.length)))),t):s.Promise.reject(new Error("Can't read the data of '"+e+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))}))}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,"set-immediate-shim":54}],33:[function(e,t,n){var r=e("./reader/readerFor"),i=e("./utils"),a=e("./signature"),o=e("./zipEntry"),s=(e("./utf8"),e("./support"));function c(e){this.files=[],this.loadOptions=e}c.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+i.pretty(t)+", expected "+i.pretty(e)+")")}},isSignature:function(e,t){var n=this.reader.index;this.reader.setIndex(e);var r=this.reader.readString(4)===t;return this.reader.setIndex(n),r},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=s.uint8array?"uint8array":"array",n=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(n)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,n,r=this.zip64EndOfCentralSize-44;0<r;)e=this.reader.readInt(2),t=this.reader.readInt(4),n=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:n}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(a.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(a.CENTRAL_FILE_HEADER);)(e=new o({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(a.CENTRAL_DIRECTORY_END);if(e<0)throw this.isSignature(0,a.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(e);var t=e;if(this.checkSignature(a.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(e),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,a.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var n=this.centralDirOffset+this.centralDirSize;this.zip64&&(n+=20,n+=12+this.zip64EndOfCentralSize);var r=t-n;if(r>0)this.isSignature(t,a.CENTRAL_FILE_HEADER)||(this.reader.zero=r);else if(r<0)throw new Error("Corrupted zip: missing "+Math.abs(r)+" bytes.")},prepareReader:function(e){this.reader=r(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=c},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utf8":31,"./utils":32,"./zipEntry":34}],34:[function(e,t,n){var r=e("./reader/readerFor"),i=e("./utils"),a=e("./compressedObject"),o=e("./crc32"),s=e("./utf8"),c=e("./compressions"),u=e("./support");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,n;if(e.skip(22),this.fileNameLength=e.readInt(2),n=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(n),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(t=function(e){for(var t in c)if(c.hasOwnProperty(t)&&c[t].magic===e)return c[t];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+i.pretty(this.compressionMethod)+" unknown (inner file : "+i.transformTo("string",this.fileName)+")");this.decompressed=new a(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0===e&&(this.dosPermissions=63&this.externalFileAttributes),3===e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(e){if(this.extraFields[1]){var t=r(this.extraFields[1].value);this.uncompressedSize===i.MAX_VALUE_32BITS&&(this.uncompressedSize=t.readInt(8)),this.compressedSize===i.MAX_VALUE_32BITS&&(this.compressedSize=t.readInt(8)),this.localHeaderOffset===i.MAX_VALUE_32BITS&&(this.localHeaderOffset=t.readInt(8)),this.diskNumberStart===i.MAX_VALUE_32BITS&&(this.diskNumberStart=t.readInt(4))}},readExtraFields:function(e){var t,n,r,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),n=e.readInt(2),r=e.readData(n),this.extraFields[t]={id:t,length:n,value:r};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=s.utf8decode(this.fileName),this.fileCommentStr=s.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var n=i.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(n)}var r=this.findExtraFieldUnicodeComment();if(null!==r)this.fileCommentStr=r;else{var a=i.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(a)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=r(e.value);return 1!==t.readInt(1)||o(this.fileName)!==t.readInt(4)?null:s.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=r(e.value);return 1!==t.readInt(1)||o(this.fileComment)!==t.readInt(4)?null:s.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(e,t,n){var r=e("./stream/StreamHelper"),i=e("./stream/DataWorker"),a=e("./utf8"),o=e("./compressedObject"),s=e("./stream/GenericWorker"),c=function(e,t,n){this.name=e,this.dir=n.dir,this.date=n.date,this.comment=n.comment,this.unixPermissions=n.unixPermissions,this.dosPermissions=n.dosPermissions,this._data=t,this._dataBinary=n.binary,this.options={compression:n.compression,compressionOptions:n.compressionOptions}};c.prototype={internalStream:function(e){var t=null,n="string";try{if(!e)throw new Error("No output type specified.");var i="string"===(n=e.toLowerCase())||"text"===n;"binarystring"!==n&&"text"!==n||(n="string"),t=this._decompressWorker();var o=!this._dataBinary;o&&!i&&(t=t.pipe(new a.Utf8EncodeWorker)),!o&&i&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new s("error")).error(e)}return new r(t,n,"")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||"nodebuffer").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var n=this._decompressWorker();return this._dataBinary||(n=n.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(n,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof s?this._data:new i(this._data)}};for(var u=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],l=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},d=0;d<u.length;d++)c.prototype[u[d]]=l;t.exports=c},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,n,r){(function(e){var t,r,i=e.MutationObserver||e.WebKitMutationObserver;if(i){var a=0,o=new i(l),s=e.document.createTextNode("");o.observe(s,{characterData:!0}),t=function(){s.data=a=++a%2}}else if(e.setImmediate||void 0===e.MessageChannel)t="document"in e&&"onreadystatechange"in e.document.createElement("script")?function(){var t=e.document.createElement("script");t.onreadystatechange=function(){l(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(l,0)};else{var c=new e.MessageChannel;c.port1.onmessage=l,t=function(){c.port2.postMessage(0)}}var u=[];function l(){var e,t;r=!0;for(var n=u.length;n;){for(t=u,u=[],e=-1;++e<n;)t[e]();n=u.length}r=!1}n.exports=function(e){1!==u.push(e)||r||t()}}).call(this,void 0!==e?e:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(e,t,n){var r=e("immediate");function i(){}var a={},o=["REJECTED"],s=["FULFILLED"],c=["PENDING"];function u(e){if("function"!=typeof e)throw new TypeError("resolver must be a function");this.state=c,this.queue=[],this.outcome=void 0,e!==i&&p(this,e)}function l(e,t,n){this.promise=e,"function"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),"function"==typeof n&&(this.onRejected=n,this.callRejected=this.otherCallRejected)}function d(e,t,n){r((function(){var r;try{r=t(n)}catch(t){return a.reject(e,t)}r===e?a.reject(e,new TypeError("Cannot resolve promise with itself")):a.resolve(e,r)}))}function f(e){var t=e&&e.then;if(e&&("object"==typeof e||"function"==typeof e)&&"function"==typeof t)return function(){t.apply(e,arguments)}}function p(e,t){var n=!1;function r(t){n||(n=!0,a.reject(e,t))}function i(t){n||(n=!0,a.resolve(e,t))}var o=m((function(){t(i,r)}));"error"===o.status&&r(o.value)}function m(e,t){var n={};try{n.value=e(t),n.status="success"}catch(e){n.status="error",n.value=e}return n}t.exports=u,u.prototype.finally=function(e){if("function"!=typeof e)return this;var t=this.constructor;return this.then((function(n){return t.resolve(e()).then((function(){return n}))}),(function(n){return t.resolve(e()).then((function(){throw n}))}))},u.prototype.catch=function(e){return this.then(null,e)},u.prototype.then=function(e,t){if("function"!=typeof e&&this.state===s||"function"!=typeof t&&this.state===o)return this;var n=new this.constructor(i);return this.state!==c?d(n,this.state===s?e:t,this.outcome):this.queue.push(new l(n,e,t)),n},l.prototype.callFulfilled=function(e){a.resolve(this.promise,e)},l.prototype.otherCallFulfilled=function(e){d(this.promise,this.onFulfilled,e)},l.prototype.callRejected=function(e){a.reject(this.promise,e)},l.prototype.otherCallRejected=function(e){d(this.promise,this.onRejected,e)},a.resolve=function(e,t){var n=m(f,t);if("error"===n.status)return a.reject(e,n.value);var r=n.value;if(r)p(e,r);else{e.state=s,e.outcome=t;for(var i=-1,o=e.queue.length;++i<o;)e.queue[i].callFulfilled(t)}return e},a.reject=function(e,t){e.state=o,e.outcome=t;for(var n=-1,r=e.queue.length;++n<r;)e.queue[n].callRejected(t);return e},u.resolve=function(e){return e instanceof this?e:a.resolve(new this(i),e)},u.reject=function(e){var t=new this(i);return a.reject(t,e)},u.all=function(e){var t=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var n=e.length,r=!1;if(!n)return this.resolve([]);for(var o=new Array(n),s=0,c=-1,u=new this(i);++c<n;)l(e[c],c);return u;function l(e,i){t.resolve(e).then((function(e){o[i]=e,++s!==n||r||(r=!0,a.resolve(u,o))}),(function(e){r||(r=!0,a.reject(u,e))}))}},u.race=function(e){var t=this;if("[object Array]"!==Object.prototype.toString.call(e))return this.reject(new TypeError("must be an array"));var n=e.length,r=!1;if(!n)return this.resolve([]);for(var o,s=-1,c=new this(i);++s<n;)o=e[s],t.resolve(o).then((function(e){r||(r=!0,a.resolve(c,e))}),(function(e){r||(r=!0,a.reject(c,e))}));return c}},{immediate:36}],38:[function(e,t,n){var r={};(0,e("./lib/utils/common").assign)(r,e("./lib/deflate"),e("./lib/inflate"),e("./lib/zlib/constants")),t.exports=r},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(e,t,n){var r=e("./zlib/deflate"),i=e("./utils/common"),a=e("./utils/strings"),o=e("./zlib/messages"),s=e("./zlib/zstream"),c=Object.prototype.toString;function u(e){if(!(this instanceof u))return new u(e);this.options=i.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var n=r.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(0!==n)throw new Error(o[n]);if(t.header&&r.deflateSetHeader(this.strm,t.header),t.dictionary){var l;if(l="string"==typeof t.dictionary?a.string2buf(t.dictionary):"[object ArrayBuffer]"===c.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,0!==(n=r.deflateSetDictionary(this.strm,l)))throw new Error(o[n]);this._dict_set=!0}}function l(e,t){var n=new u(t);if(n.push(e,!0),n.err)throw n.msg||o[n.err];return n.result}u.prototype.push=function(e,t){var n,o,s=this.strm,u=this.options.chunkSize;if(this.ended)return!1;o=t===~~t?t:!0===t?4:0,"string"==typeof e?s.input=a.string2buf(e):"[object ArrayBuffer]"===c.call(e)?s.input=new Uint8Array(e):s.input=e,s.next_in=0,s.avail_in=s.input.length;do{if(0===s.avail_out&&(s.output=new i.Buf8(u),s.next_out=0,s.avail_out=u),1!==(n=r.deflate(s,o))&&0!==n)return this.onEnd(n),this.ended=!0,!1;0!==s.avail_out&&(0!==s.avail_in||4!==o&&2!==o)||("string"===this.options.to?this.onData(a.buf2binstring(i.shrinkBuf(s.output,s.next_out))):this.onData(i.shrinkBuf(s.output,s.next_out)))}while((s.avail_in>0||0===s.avail_out)&&1!==n);return 4===o?(n=r.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,0===n):2!==o||(this.onEnd(0),s.avail_out=0,!0)},u.prototype.onData=function(e){this.chunks.push(e)},u.prototype.onEnd=function(e){0===e&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},n.Deflate=u,n.deflate=l,n.deflateRaw=function(e,t){return(t=t||{}).raw=!0,l(e,t)},n.gzip=function(e,t){return(t=t||{}).gzip=!0,l(e,t)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(e,t,n){var r=e("./zlib/inflate"),i=e("./utils/common"),a=e("./utils/strings"),o=e("./zlib/constants"),s=e("./zlib/messages"),c=e("./zlib/zstream"),u=e("./zlib/gzheader"),l=Object.prototype.toString;function d(e){if(!(this instanceof d))return new d(e);this.options=i.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var n=r.inflateInit2(this.strm,t.windowBits);if(n!==o.Z_OK)throw new Error(s[n]);this.header=new u,r.inflateGetHeader(this.strm,this.header)}function f(e,t){var n=new d(t);if(n.push(e,!0),n.err)throw n.msg||s[n.err];return n.result}d.prototype.push=function(e,t){var n,s,c,u,d,f,p=this.strm,m=this.options.chunkSize,h=this.options.dictionary,y=!1;if(this.ended)return!1;s=t===~~t?t:!0===t?o.Z_FINISH:o.Z_NO_FLUSH,"string"==typeof e?p.input=a.binstring2buf(e):"[object ArrayBuffer]"===l.call(e)?p.input=new Uint8Array(e):p.input=e,p.next_in=0,p.avail_in=p.input.length;do{if(0===p.avail_out&&(p.output=new i.Buf8(m),p.next_out=0,p.avail_out=m),(n=r.inflate(p,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&h&&(f="string"==typeof h?a.string2buf(h):"[object ArrayBuffer]"===l.call(h)?new Uint8Array(h):h,n=r.inflateSetDictionary(this.strm,f)),n===o.Z_BUF_ERROR&&!0===y&&(n=o.Z_OK,y=!1),n!==o.Z_STREAM_END&&n!==o.Z_OK)return this.onEnd(n),this.ended=!0,!1;p.next_out&&(0!==p.avail_out&&n!==o.Z_STREAM_END&&(0!==p.avail_in||s!==o.Z_FINISH&&s!==o.Z_SYNC_FLUSH)||("string"===this.options.to?(c=a.utf8border(p.output,p.next_out),u=p.next_out-c,d=a.buf2string(p.output,c),p.next_out=u,p.avail_out=m-u,u&&i.arraySet(p.output,p.output,c,u,0),this.onData(d)):this.onData(i.shrinkBuf(p.output,p.next_out)))),0===p.avail_in&&0===p.avail_out&&(y=!0)}while((p.avail_in>0||0===p.avail_out)&&n!==o.Z_STREAM_END);return n===o.Z_STREAM_END&&(s=o.Z_FINISH),s===o.Z_FINISH?(n=r.inflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===o.Z_OK):s!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),p.avail_out=0,!0)},d.prototype.onData=function(e){this.chunks.push(e)},d.prototype.onEnd=function(e){e===o.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},n.Inflate=d,n.inflate=f,n.inflateRaw=function(e,t){return(t=t||{}).raw=!0,f(e,t)},n.ungzip=f},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(e,t,n){var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;n.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var n=t.shift();if(n){if("object"!=typeof n)throw new TypeError(n+"must be non-object");for(var r in n)n.hasOwnProperty(r)&&(e[r]=n[r])}}return e},n.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,n,r,i){if(t.subarray&&e.subarray)e.set(t.subarray(n,n+r),i);else for(var a=0;a<r;a++)e[i+a]=t[n+a]},flattenChunks:function(e){var t,n,r,i,a,o;for(r=0,t=0,n=e.length;t<n;t++)r+=e[t].length;for(o=new Uint8Array(r),i=0,t=0,n=e.length;t<n;t++)a=e[t],o.set(a,i),i+=a.length;return o}},a={arraySet:function(e,t,n,r,i){for(var a=0;a<r;a++)e[i+a]=t[n+a]},flattenChunks:function(e){return[].concat.apply([],e)}};n.setTyped=function(e){e?(n.Buf8=Uint8Array,n.Buf16=Uint16Array,n.Buf32=Int32Array,n.assign(n,i)):(n.Buf8=Array,n.Buf16=Array,n.Buf32=Array,n.assign(n,a))},n.setTyped(r)},{}],42:[function(e,t,n){var r=e("./common"),i=!0,a=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){a=!1}for(var o=new r.Buf8(256),s=0;s<256;s++)o[s]=s>=252?6:s>=248?5:s>=240?4:s>=224?3:s>=192?2:1;function c(e,t){if(t<65537&&(e.subarray&&a||!e.subarray&&i))return String.fromCharCode.apply(null,r.shrinkBuf(e,t));for(var n="",o=0;o<t;o++)n+=String.fromCharCode(e[o]);return n}o[254]=o[254]=1,n.string2buf=function(e){var t,n,i,a,o,s=e.length,c=0;for(a=0;a<s;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(i=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(i-56320),a++),c+=n<128?1:n<2048?2:n<65536?3:4;for(t=new r.Buf8(c),o=0,a=0;o<c;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(i=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(i-56320),a++),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t},n.buf2binstring=function(e){return c(e,e.length)},n.binstring2buf=function(e){for(var t=new r.Buf8(e.length),n=0,i=t.length;n<i;n++)t[n]=e.charCodeAt(n);return t},n.buf2string=function(e,t){var n,r,i,a,s=t||e.length,u=new Array(2*s);for(r=0,n=0;n<s;)if((i=e[n++])<128)u[r++]=i;else if((a=o[i])>4)u[r++]=65533,n+=a-1;else{for(i&=2===a?31:3===a?15:7;a>1&&n<s;)i=i<<6|63&e[n++],a--;a>1?u[r++]=65533:i<65536?u[r++]=i:(i-=65536,u[r++]=55296|i>>10&1023,u[r++]=56320|1023&i)}return c(u,r)},n.utf8border=function(e,t){var n;for((t=t||e.length)>e.length&&(t=e.length),n=t-1;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+o[e[n]]>t?n:t}},{"./common":41}],43:[function(e,t,n){t.exports=function(e,t,n,r){for(var i=65535&e|0,a=e>>>16&65535|0,o=0;0!==n;){n-=o=n>2e3?2e3:n;do{a=a+(i=i+t[r++]|0)|0}while(--o);i%=65521,a%=65521}return i|a<<16|0}},{}],44:[function(e,t,n){t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,n){var r=function(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t}();t.exports=function(e,t,n,i){var a=r,o=i+n;e^=-1;for(var s=i;s<o;s++)e=e>>>8^a[255&(e^t[s])];return-1^e}},{}],46:[function(e,t,n){var r,i=e("../utils/common"),a=e("./trees"),o=e("./adler32"),s=e("./crc32"),c=e("./messages");function u(e,t){return e.msg=c[t],t}function l(e){return(e<<1)-(e>4?9:0)}function d(e){for(var t=e.length;--t>=0;)e[t]=0}function f(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(i.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))}function p(e,t){a._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,f(e.strm)}function m(e,t){e.pending_buf[e.pending++]=t}function h(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function y(e,t,n,r){var a=e.avail_in;return a>r&&(a=r),0===a?0:(e.avail_in-=a,i.arraySet(t,e.input,e.next_in,a,n),1===e.state.wrap?e.adler=o(e.adler,t,a,n):2===e.state.wrap&&(e.adler=s(e.adler,t,a,n)),e.next_in+=a,e.total_in+=a,a)}function v(e,t){var n,r,i=e.max_chain_length,a=e.strstart,o=e.prev_length,s=e.nice_match,c=e.strstart>e.w_size-262?e.strstart-(e.w_size-262):0,u=e.window,l=e.w_mask,d=e.prev,f=e.strstart+258,p=u[a+o-1],m=u[a+o];e.prev_length>=e.good_match&&(i>>=2),s>e.lookahead&&(s=e.lookahead);do{if(u[(n=t)+o]===m&&u[n+o-1]===p&&u[n]===u[a]&&u[++n]===u[a+1]){a+=2,n++;do{}while(u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&a<f);if(r=258-(f-a),a=f-258,r>o){if(e.match_start=t,o=r,r>=s)break;p=u[a+o-1],m=u[a+o]}}}while((t=d[t&l])>c&&0!=--i);return o<=e.lookahead?o:e.lookahead}function g(e){var t,n,r,a,o,s=e.w_size;do{if(a=e.window_size-e.lookahead-e.strstart,e.strstart>=s+(s-262)){i.arraySet(e.window,e.window,s,s,0),e.match_start-=s,e.strstart-=s,e.block_start-=s,t=n=e.hash_size;do{r=e.head[--t],e.head[t]=r>=s?r-s:0}while(--n);t=n=s;do{r=e.prev[--t],e.prev[t]=r>=s?r-s:0}while(--n);a+=s}if(0===e.strm.avail_in)break;if(n=y(e.strm,e.window,e.strstart+e.lookahead,a),e.lookahead+=n,e.lookahead+e.insert>=3)for(o=e.strstart-e.insert,e.ins_h=e.window[o],e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+3-1])&e.hash_mask,e.prev[o&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=o,o++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<262&&0!==e.strm.avail_in)}function b(e,t){for(var n,r;;){if(e.lookahead<262){if(g(e),e.lookahead<262&&0===t)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-262&&(e.match_length=v(e,n)),e.match_length>=3)if(r=a._tr_tally(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}function x(e,t){for(var n,r,i;;){if(e.lookahead<262){if(g(e),e.lookahead<262&&0===t)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-262&&(e.match_length=v(e,n),e.match_length<=5&&(1===e.strategy||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){i=e.strstart+e.lookahead-3,r=a._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,r&&(p(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if((r=a._tr_tally(e,0,e.window[e.strstart-1]))&&p(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=a._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}function D(e,t,n,r,i){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=i}function _(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=8,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new i.Buf16(1146),this.dyn_dtree=new i.Buf16(122),this.bl_tree=new i.Buf16(78),d(this.dyn_ltree),d(this.dyn_dtree),d(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new i.Buf16(16),this.heap=new i.Buf16(573),d(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new i.Buf16(573),d(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function w(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=2,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:113,e.adler=2===t.wrap?0:1,t.last_flush=0,a._tr_init(t),0):u(e,-2)}function N(e){var t,n=w(e);return 0===n&&((t=e.state).window_size=2*t.w_size,d(t.head),t.max_lazy_match=r[t.level].max_lazy,t.good_match=r[t.level].good_length,t.nice_match=r[t.level].nice_length,t.max_chain_length=r[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0),n}function M(e,t,n,r,a,o){if(!e)return-2;var s=1;if(-1===t&&(t=6),r<0?(s=0,r=-r):r>15&&(s=2,r-=16),a<1||a>9||8!==n||r<8||r>15||t<0||t>9||o<0||o>4)return u(e,-2);8===r&&(r=9);var c=new _;return e.state=c,c.strm=e,c.wrap=s,c.gzhead=null,c.w_bits=r,c.w_size=1<<c.w_bits,c.w_mask=c.w_size-1,c.hash_bits=a+7,c.hash_size=1<<c.hash_bits,c.hash_mask=c.hash_size-1,c.hash_shift=~~((c.hash_bits+3-1)/3),c.window=new i.Buf8(2*c.w_size),c.head=new i.Buf16(c.hash_size),c.prev=new i.Buf16(c.w_size),c.lit_bufsize=1<<a+6,c.pending_buf_size=4*c.lit_bufsize,c.pending_buf=new i.Buf8(c.pending_buf_size),c.d_buf=1*c.lit_bufsize,c.l_buf=3*c.lit_bufsize,c.level=t,c.strategy=o,c.method=n,N(e)}r=[new D(0,0,0,0,(function(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(g(e),0===e.lookahead&&0===t)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((0===e.strstart||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,p(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-262&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(p(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(p(e,!1),e.strm.avail_out),1)})),new D(4,4,8,4,b),new D(4,5,16,8,b),new D(4,6,32,32,b),new D(4,4,16,16,x),new D(8,16,32,32,x),new D(8,16,128,128,x),new D(8,32,128,256,x),new D(32,128,258,1024,x),new D(32,258,258,4096,x)],n.deflateInit=function(e,t){return M(e,t,8,15,8,0)},n.deflateInit2=M,n.deflateReset=N,n.deflateResetKeep=w,n.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?-2:(e.state.gzhead=t,0):-2},n.deflate=function(e,t){var n,i,o,c;if(!e||!e.state||t>5||t<0)return e?u(e,-2):-2;if(i=e.state,!e.output||!e.input&&0!==e.avail_in||666===i.status&&4!==t)return u(e,0===e.avail_out?-5:-2);if(i.strm=e,n=i.last_flush,i.last_flush=t,42===i.status)if(2===i.wrap)e.adler=0,m(i,31),m(i,139),m(i,8),i.gzhead?(m(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),m(i,255&i.gzhead.time),m(i,i.gzhead.time>>8&255),m(i,i.gzhead.time>>16&255),m(i,i.gzhead.time>>24&255),m(i,9===i.level?2:i.strategy>=2||i.level<2?4:0),m(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(m(i,255&i.gzhead.extra.length),m(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=s(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(m(i,0),m(i,0),m(i,0),m(i,0),m(i,0),m(i,9===i.level?2:i.strategy>=2||i.level<2?4:0),m(i,3),i.status=113);else{var y=8+(i.w_bits-8<<4)<<8;y|=(i.strategy>=2||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(y|=32),y+=31-y%31,i.status=113,h(i,y),0!==i.strstart&&(h(i,e.adler>>>16),h(i,65535&e.adler)),e.adler=1}if(69===i.status)if(i.gzhead.extra){for(o=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),f(e),o=i.pending,i.pending!==i.pending_buf_size));)m(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){o=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),f(e),o=i.pending,i.pending===i.pending_buf_size)){c=1;break}c=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,m(i,c)}while(0!==c);i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),0===c&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){o=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),f(e),o=i.pending,i.pending===i.pending_buf_size)){c=1;break}c=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,m(i,c)}while(0!==c);i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),0===c&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&f(e),i.pending+2<=i.pending_buf_size&&(m(i,255&e.adler),m(i,e.adler>>8&255),e.adler=0,i.status=113)):i.status=113),0!==i.pending){if(f(e),0===e.avail_out)return i.last_flush=-1,0}else if(0===e.avail_in&&l(t)<=l(n)&&4!==t)return u(e,-5);if(666===i.status&&0!==e.avail_in)return u(e,-5);if(0!==e.avail_in||0!==i.lookahead||0!==t&&666!==i.status){var v=2===i.strategy?function(e,t){for(var n;;){if(0===e.lookahead&&(g(e),0===e.lookahead)){if(0===t)return 1;break}if(e.match_length=0,n=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}(i,t):3===i.strategy?function(e,t){for(var n,r,i,o,s=e.window;;){if(e.lookahead<=258){if(g(e),e.lookahead<=258&&0===t)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=s[i=e.strstart-1])===s[++i]&&r===s[++i]&&r===s[++i]){o=e.strstart+258;do{}while(r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&i<o);e.match_length=258-(o-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=a._tr_tally(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}(i,t):r[i.level].func(i,t);if(3!==v&&4!==v||(i.status=666),1===v||3===v)return 0===e.avail_out&&(i.last_flush=-1),0;if(2===v&&(1===t?a._tr_align(i):5!==t&&(a._tr_stored_block(i,0,0,!1),3===t&&(d(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),f(e),0===e.avail_out))return i.last_flush=-1,0}return 4!==t?0:i.wrap<=0?1:(2===i.wrap?(m(i,255&e.adler),m(i,e.adler>>8&255),m(i,e.adler>>16&255),m(i,e.adler>>24&255),m(i,255&e.total_in),m(i,e.total_in>>8&255),m(i,e.total_in>>16&255),m(i,e.total_in>>24&255)):(h(i,e.adler>>>16),h(i,65535&e.adler)),f(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?0:1)},n.deflateEnd=function(e){var t;return e&&e.state?42!==(t=e.state.status)&&69!==t&&73!==t&&91!==t&&103!==t&&113!==t&&666!==t?u(e,-2):(e.state=null,113===t?u(e,-3):0):-2},n.deflateSetDictionary=function(e,t){var n,r,a,s,c,u,l,f,p=t.length;if(!e||!e.state)return-2;if(2===(s=(n=e.state).wrap)||1===s&&42!==n.status||n.lookahead)return-2;for(1===s&&(e.adler=o(e.adler,t,p,0)),n.wrap=0,p>=n.w_size&&(0===s&&(d(n.head),n.strstart=0,n.block_start=0,n.insert=0),f=new i.Buf8(n.w_size),i.arraySet(f,t,p-n.w_size,n.w_size,0),t=f,p=n.w_size),c=e.avail_in,u=e.next_in,l=e.input,e.avail_in=p,e.next_in=0,e.input=t,g(n);n.lookahead>=3;){r=n.strstart,a=n.lookahead-2;do{n.ins_h=(n.ins_h<<n.hash_shift^n.window[r+3-1])&n.hash_mask,n.prev[r&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=r,r++}while(--a);n.strstart=r,n.lookahead=2,g(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=u,e.input=l,e.avail_in=c,n.wrap=s,0},n.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(e,t,n){t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,n){t.exports=function(e,t){var n,r,i,a,o,s,c,u,l,d,f,p,m,h,y,v,g,b,x,D,_,w,N,M,O;n=e.state,r=e.next_in,M=e.input,i=r+(e.avail_in-5),a=e.next_out,O=e.output,o=a-(t-e.avail_out),s=a+(e.avail_out-257),c=n.dmax,u=n.wsize,l=n.whave,d=n.wnext,f=n.window,p=n.hold,m=n.bits,h=n.lencode,y=n.distcode,v=(1<<n.lenbits)-1,g=(1<<n.distbits)-1;e:do{m<15&&(p+=M[r++]<<m,m+=8,p+=M[r++]<<m,m+=8),b=h[p&v];t:for(;;){if(p>>>=x=b>>>24,m-=x,0==(x=b>>>16&255))O[a++]=65535&b;else{if(!(16&x)){if(0==(64&x)){b=h[(65535&b)+(p&(1<<x)-1)];continue t}if(32&x){n.mode=12;break e}e.msg="invalid literal/length code",n.mode=30;break e}D=65535&b,(x&=15)&&(m<x&&(p+=M[r++]<<m,m+=8),D+=p&(1<<x)-1,p>>>=x,m-=x),m<15&&(p+=M[r++]<<m,m+=8,p+=M[r++]<<m,m+=8),b=y[p&g];n:for(;;){if(p>>>=x=b>>>24,m-=x,!(16&(x=b>>>16&255))){if(0==(64&x)){b=y[(65535&b)+(p&(1<<x)-1)];continue n}e.msg="invalid distance code",n.mode=30;break e}if(_=65535&b,m<(x&=15)&&(p+=M[r++]<<m,(m+=8)<x&&(p+=M[r++]<<m,m+=8)),(_+=p&(1<<x)-1)>c){e.msg="invalid distance too far back",n.mode=30;break e}if(p>>>=x,m-=x,_>(x=a-o)){if((x=_-x)>l&&n.sane){e.msg="invalid distance too far back",n.mode=30;break e}if(w=0,N=f,0===d){if(w+=u-x,x<D){D-=x;do{O[a++]=f[w++]}while(--x);w=a-_,N=O}}else if(d<x){if(w+=u+d-x,(x-=d)<D){D-=x;do{O[a++]=f[w++]}while(--x);if(w=0,d<D){D-=x=d;do{O[a++]=f[w++]}while(--x);w=a-_,N=O}}}else if(w+=d-x,x<D){D-=x;do{O[a++]=f[w++]}while(--x);w=a-_,N=O}for(;D>2;)O[a++]=N[w++],O[a++]=N[w++],O[a++]=N[w++],D-=3;D&&(O[a++]=N[w++],D>1&&(O[a++]=N[w++]))}else{w=a-_;do{O[a++]=O[w++],O[a++]=O[w++],O[a++]=O[w++],D-=3}while(D>2);D&&(O[a++]=O[w++],D>1&&(O[a++]=O[w++]))}break}}break}}while(r<i&&a<s);r-=D=m>>3,p&=(1<<(m-=D<<3))-1,e.next_in=r,e.next_out=a,e.avail_in=r<i?i-r+5:5-(r-i),e.avail_out=a<s?s-a+257:257-(a-s),n.hold=p,n.bits=m}},{}],49:[function(e,t,n){var r=e("../utils/common"),i=e("./adler32"),a=e("./crc32"),o=e("./inffast"),s=e("./inftrees");function c(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function u(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function l(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new r.Buf32(852),t.distcode=t.distdyn=new r.Buf32(592),t.sane=1,t.back=-1,0):-2}function d(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,l(e)):-2}function f(e,t){var n,r;return e&&e.state?(r=e.state,t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?-2:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,d(e))):-2}function p(e,t){var n,r;return e?(r=new u,e.state=r,r.window=null,0!==(n=f(e,t))&&(e.state=null),n):-2}var m,h,y=!0;function v(e){if(y){var t;for(m=new r.Buf32(512),h=new r.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(s(1,e.lens,0,288,m,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;s(2,e.lens,0,32,h,0,e.work,{bits:5}),y=!1}e.lencode=m,e.lenbits=9,e.distcode=h,e.distbits=5}function g(e,t,n,i){var a,o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new r.Buf8(o.wsize)),i>=o.wsize?(r.arraySet(o.window,t,n-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):((a=o.wsize-o.wnext)>i&&(a=i),r.arraySet(o.window,t,n-i,a,o.wnext),(i-=a)?(r.arraySet(o.window,t,n-i,i,0),o.wnext=i,o.whave=o.wsize):(o.wnext+=a,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=a))),0}n.inflateReset=d,n.inflateReset2=f,n.inflateResetKeep=l,n.inflateInit=function(e){return p(e,15)},n.inflateInit2=p,n.inflate=function(e,t){var n,u,l,d,f,p,m,h,y,b,x,D,_,w,N,M,O,S,P,j,A,E,C,T,k=0,I=new r.Buf8(4),B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return-2;12===(n=e.state).mode&&(n.mode=13),f=e.next_out,l=e.output,m=e.avail_out,d=e.next_in,u=e.input,p=e.avail_in,h=n.hold,y=n.bits,b=p,x=m,E=0;e:for(;;)switch(n.mode){case 1:if(0===n.wrap){n.mode=13;break}for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(2&n.wrap&&35615===h){n.check=0,I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0),h=0,y=0,n.mode=2;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&h)<<8)+(h>>8))%31){e.msg="incorrect header check",n.mode=30;break}if(8!=(15&h)){e.msg="unknown compression method",n.mode=30;break}if(y-=4,A=8+(15&(h>>>=4)),0===n.wbits)n.wbits=A;else if(A>n.wbits){e.msg="invalid window size",n.mode=30;break}n.dmax=1<<A,e.adler=n.check=1,n.mode=512&h?10:12,h=0,y=0;break;case 2:for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(n.flags=h,8!=(255&n.flags)){e.msg="unknown compression method",n.mode=30;break}if(57344&n.flags){e.msg="unknown header flags set",n.mode=30;break}n.head&&(n.head.text=h>>8&1),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0)),h=0,y=0,n.mode=3;case 3:for(;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.head&&(n.head.time=h),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,I[2]=h>>>16&255,I[3]=h>>>24&255,n.check=a(n.check,I,4,0)),h=0,y=0,n.mode=4;case 4:for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.head&&(n.head.xflags=255&h,n.head.os=h>>8),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0)),h=0,y=0,n.mode=5;case 5:if(1024&n.flags){for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.length=h,n.head&&(n.head.extra_len=h),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0)),h=0,y=0}else n.head&&(n.head.extra=null);n.mode=6;case 6:if(1024&n.flags&&((D=n.length)>p&&(D=p),D&&(n.head&&(A=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),r.arraySet(n.head.extra,u,d,D,A)),512&n.flags&&(n.check=a(n.check,u,D,d)),p-=D,d+=D,n.length-=D),n.length))break e;n.length=0,n.mode=7;case 7:if(2048&n.flags){if(0===p)break e;D=0;do{A=u[d+D++],n.head&&A&&n.length<65536&&(n.head.name+=String.fromCharCode(A))}while(A&&D<p);if(512&n.flags&&(n.check=a(n.check,u,D,d)),p-=D,d+=D,A)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=8;case 8:if(4096&n.flags){if(0===p)break e;D=0;do{A=u[d+D++],n.head&&A&&n.length<65536&&(n.head.comment+=String.fromCharCode(A))}while(A&&D<p);if(512&n.flags&&(n.check=a(n.check,u,D,d)),p-=D,d+=D,A)break e}else n.head&&(n.head.comment=null);n.mode=9;case 9:if(512&n.flags){for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(h!==(65535&n.check)){e.msg="header crc mismatch",n.mode=30;break}h=0,y=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=12;break;case 10:for(;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}e.adler=n.check=c(h),h=0,y=0,n.mode=11;case 11:if(0===n.havedict)return e.next_out=f,e.avail_out=m,e.next_in=d,e.avail_in=p,n.hold=h,n.bits=y,2;e.adler=n.check=1,n.mode=12;case 12:if(5===t||6===t)break e;case 13:if(n.last){h>>>=7&y,y-=7&y,n.mode=27;break}for(;y<3;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}switch(n.last=1&h,y-=1,3&(h>>>=1)){case 0:n.mode=14;break;case 1:if(v(n),n.mode=20,6===t){h>>>=2,y-=2;break e}break;case 2:n.mode=17;break;case 3:e.msg="invalid block type",n.mode=30}h>>>=2,y-=2;break;case 14:for(h>>>=7&y,y-=7&y;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if((65535&h)!=(h>>>16^65535)){e.msg="invalid stored block lengths",n.mode=30;break}if(n.length=65535&h,h=0,y=0,n.mode=15,6===t)break e;case 15:n.mode=16;case 16:if(D=n.length){if(D>p&&(D=p),D>m&&(D=m),0===D)break e;r.arraySet(l,u,d,D,f),p-=D,d+=D,m-=D,f+=D,n.length-=D;break}n.mode=12;break;case 17:for(;y<14;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(n.nlen=257+(31&h),h>>>=5,y-=5,n.ndist=1+(31&h),h>>>=5,y-=5,n.ncode=4+(15&h),h>>>=4,y-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=30;break}n.have=0,n.mode=18;case 18:for(;n.have<n.ncode;){for(;y<3;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.lens[B[n.have++]]=7&h,h>>>=3,y-=3}for(;n.have<19;)n.lens[B[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,C={bits:n.lenbits},E=s(0,n.lens,0,19,n.lencode,0,n.work,C),n.lenbits=C.bits,E){e.msg="invalid code lengths set",n.mode=30;break}n.have=0,n.mode=19;case 19:for(;n.have<n.nlen+n.ndist;){for(;M=(k=n.lencode[h&(1<<n.lenbits)-1])>>>16&255,O=65535&k,!((N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(O<16)h>>>=N,y-=N,n.lens[n.have++]=O;else{if(16===O){for(T=N+2;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(h>>>=N,y-=N,0===n.have){e.msg="invalid bit length repeat",n.mode=30;break}A=n.lens[n.have-1],D=3+(3&h),h>>>=2,y-=2}else if(17===O){for(T=N+3;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}y-=N,A=0,D=3+(7&(h>>>=N)),h>>>=3,y-=3}else{for(T=N+7;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}y-=N,A=0,D=11+(127&(h>>>=N)),h>>>=7,y-=7}if(n.have+D>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=30;break}for(;D--;)n.lens[n.have++]=A}}if(30===n.mode)break;if(0===n.lens[256]){e.msg="invalid code -- missing end-of-block",n.mode=30;break}if(n.lenbits=9,C={bits:n.lenbits},E=s(1,n.lens,0,n.nlen,n.lencode,0,n.work,C),n.lenbits=C.bits,E){e.msg="invalid literal/lengths set",n.mode=30;break}if(n.distbits=6,n.distcode=n.distdyn,C={bits:n.distbits},E=s(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,C),n.distbits=C.bits,E){e.msg="invalid distances set",n.mode=30;break}if(n.mode=20,6===t)break e;case 20:n.mode=21;case 21:if(p>=6&&m>=258){e.next_out=f,e.avail_out=m,e.next_in=d,e.avail_in=p,n.hold=h,n.bits=y,o(e,x),f=e.next_out,l=e.output,m=e.avail_out,d=e.next_in,u=e.input,p=e.avail_in,h=n.hold,y=n.bits,12===n.mode&&(n.back=-1);break}for(n.back=0;M=(k=n.lencode[h&(1<<n.lenbits)-1])>>>16&255,O=65535&k,!((N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(M&&0==(240&M)){for(S=N,P=M,j=O;M=(k=n.lencode[j+((h&(1<<S+P)-1)>>S)])>>>16&255,O=65535&k,!(S+(N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}h>>>=S,y-=S,n.back+=S}if(h>>>=N,y-=N,n.back+=N,n.length=O,0===M){n.mode=26;break}if(32&M){n.back=-1,n.mode=12;break}if(64&M){e.msg="invalid literal/length code",n.mode=30;break}n.extra=15&M,n.mode=22;case 22:if(n.extra){for(T=n.extra;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.length+=h&(1<<n.extra)-1,h>>>=n.extra,y-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=23;case 23:for(;M=(k=n.distcode[h&(1<<n.distbits)-1])>>>16&255,O=65535&k,!((N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(0==(240&M)){for(S=N,P=M,j=O;M=(k=n.distcode[j+((h&(1<<S+P)-1)>>S)])>>>16&255,O=65535&k,!(S+(N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}h>>>=S,y-=S,n.back+=S}if(h>>>=N,y-=N,n.back+=N,64&M){e.msg="invalid distance code",n.mode=30;break}n.offset=O,n.extra=15&M,n.mode=24;case 24:if(n.extra){for(T=n.extra;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.offset+=h&(1<<n.extra)-1,h>>>=n.extra,y-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=30;break}n.mode=25;case 25:if(0===m)break e;if(D=x-m,n.offset>D){if((D=n.offset-D)>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=30;break}D>n.wnext?(D-=n.wnext,_=n.wsize-D):_=n.wnext-D,D>n.length&&(D=n.length),w=n.window}else w=l,_=f-n.offset,D=n.length;D>m&&(D=m),m-=D,n.length-=D;do{l[f++]=w[_++]}while(--D);0===n.length&&(n.mode=21);break;case 26:if(0===m)break e;l[f++]=n.length,m--,n.mode=21;break;case 27:if(n.wrap){for(;y<32;){if(0===p)break e;p--,h|=u[d++]<<y,y+=8}if(x-=m,e.total_out+=x,n.total+=x,x&&(e.adler=n.check=n.flags?a(n.check,l,x,f-x):i(n.check,l,x,f-x)),x=m,(n.flags?h:c(h))!==n.check){e.msg="incorrect data check",n.mode=30;break}h=0,y=0}n.mode=28;case 28:if(n.wrap&&n.flags){for(;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(h!==(4294967295&n.total)){e.msg="incorrect length check",n.mode=30;break}h=0,y=0}n.mode=29;case 29:E=1;break e;case 30:E=-3;break e;case 31:return-4;case 32:default:return-2}return e.next_out=f,e.avail_out=m,e.next_in=d,e.avail_in=p,n.hold=h,n.bits=y,(n.wsize||x!==e.avail_out&&n.mode<30&&(n.mode<27||4!==t))&&g(e,e.output,e.next_out,x-e.avail_out),b-=e.avail_in,x-=e.avail_out,e.total_in+=b,e.total_out+=x,n.total+=x,n.wrap&&x&&(e.adler=n.check=n.flags?a(n.check,l,x,e.next_out-x):i(n.check,l,x,e.next_out-x)),e.data_type=n.bits+(n.last?64:0)+(12===n.mode?128:0)+(20===n.mode||15===n.mode?256:0),(0===b&&0===x||4===t)&&0===E&&(E=-5),E},n.inflateEnd=function(e){if(!e||!e.state)return-2;var t=e.state;return t.window&&(t.window=null),e.state=null,0},n.inflateGetHeader=function(e,t){var n;return e&&e.state?0==(2&(n=e.state).wrap)?-2:(n.head=t,t.done=!1,0):-2},n.inflateSetDictionary=function(e,t){var n,r=t.length;return e&&e.state?0!==(n=e.state).wrap&&11!==n.mode?-2:11===n.mode&&i(1,t,r,0)!==n.check?-3:g(e,t,r,r)?(n.mode=31,-4):(n.havedict=1,0):-2},n.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(e,t,n){var r=e("../utils/common"),i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],a=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],s=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,n,c,u,l,d,f){var p,m,h,y,v,g,b,x,D,_=f.bits,w=0,N=0,M=0,O=0,S=0,P=0,j=0,A=0,E=0,C=0,T=null,k=0,I=new r.Buf16(16),B=new r.Buf16(16),z=null,R=0;for(w=0;w<=15;w++)I[w]=0;for(N=0;N<c;N++)I[t[n+N]]++;for(S=_,O=15;O>=1&&0===I[O];O--);if(S>O&&(S=O),0===O)return u[l++]=20971520,u[l++]=20971520,f.bits=1,0;for(M=1;M<O&&0===I[M];M++);for(S<M&&(S=M),A=1,w=1;w<=15;w++)if(A<<=1,(A-=I[w])<0)return-1;if(A>0&&(0===e||1!==O))return-1;for(B[1]=0,w=1;w<15;w++)B[w+1]=B[w]+I[w];for(N=0;N<c;N++)0!==t[n+N]&&(d[B[t[n+N]]++]=N);if(0===e?(T=z=d,g=19):1===e?(T=i,k-=257,z=a,R-=257,g=256):(T=o,z=s,g=-1),C=0,N=0,w=M,v=l,P=S,j=0,h=-1,y=(E=1<<S)-1,1===e&&E>852||2===e&&E>592)return 1;for(;;){b=w-j,d[N]<g?(x=0,D=d[N]):d[N]>g?(x=z[R+d[N]],D=T[k+d[N]]):(x=96,D=0),p=1<<w-j,M=m=1<<P;do{u[v+(C>>j)+(m-=p)]=b<<24|x<<16|D|0}while(0!==m);for(p=1<<w-1;C&p;)p>>=1;if(0!==p?(C&=p-1,C+=p):C=0,N++,0==--I[w]){if(w===O)break;w=t[n+d[N]]}if(w>S&&(C&y)!==h){for(0===j&&(j=S),v+=M,A=1<<(P=w-j);P+j<O&&!((A-=I[P+j])<=0);)P++,A<<=1;if(E+=1<<P,1===e&&E>852||2===e&&E>592)return 1;u[h=C&y]=S<<24|P<<16|v-l|0}}return 0!==C&&(u[v+C]=w-j<<24|64<<16|0),f.bits=S,0}},{"../utils/common":41}],51:[function(e,t,n){t.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(e,t,n){var r=e("../utils/common");function i(e){for(var t=e.length;--t>=0;)e[t]=0}var a=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],o=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],c=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],u=new Array(576);i(u);var l=new Array(60);i(l);var d=new Array(512);i(d);var f=new Array(256);i(f);var p=new Array(29);i(p);var m,h,y,v=new Array(30);function g(e,t,n,r,i){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=e&&e.length}function b(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function x(e){return e<256?d[e]:d[256+(e>>>7)]}function D(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function _(e,t,n){e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,D(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function w(e,t,n){_(e,n[2*t],n[2*t+1])}function N(e,t){var n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}function M(e,t,n){var r,i,a=new Array(16),o=0;for(r=1;r<=15;r++)a[r]=o=o+n[r-1]<<1;for(i=0;i<=t;i++){var s=e[2*i+1];0!==s&&(e[2*i]=N(a[s]++,s))}}function O(e){var t;for(t=0;t<286;t++)e.dyn_ltree[2*t]=0;for(t=0;t<30;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function S(e){e.bi_valid>8?D(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function P(e,t,n,r){var i=2*t,a=2*n;return e[i]<e[a]||e[i]===e[a]&&r[t]<=r[n]}function j(e,t,n){for(var r=e.heap[n],i=n<<1;i<=e.heap_len&&(i<e.heap_len&&P(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!P(t,r,e.heap[i],e.depth));)e.heap[n]=e.heap[i],n=i,i<<=1;e.heap[n]=r}function A(e,t,n){var r,i,s,c,u=0;if(0!==e.last_lit)do{r=e.pending_buf[e.d_buf+2*u]<<8|e.pending_buf[e.d_buf+2*u+1],i=e.pending_buf[e.l_buf+u],u++,0===r?w(e,i,t):(w(e,(s=f[i])+256+1,t),0!==(c=a[s])&&_(e,i-=p[s],c),w(e,s=x(--r),n),0!==(c=o[s])&&_(e,r-=v[s],c))}while(u<e.last_lit);w(e,256,t)}function E(e,t){var n,r,i,a=t.dyn_tree,o=t.stat_desc.static_tree,s=t.stat_desc.has_stree,c=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=573,n=0;n<c;n++)0!==a[2*n]?(e.heap[++e.heap_len]=u=n,e.depth[n]=0):a[2*n+1]=0;for(;e.heap_len<2;)a[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,s&&(e.static_len-=o[2*i+1]);for(t.max_code=u,n=e.heap_len>>1;n>=1;n--)j(e,a,n);i=c;do{n=e.heap[1],e.heap[1]=e.heap[e.heap_len--],j(e,a,1),r=e.heap[1],e.heap[--e.heap_max]=n,e.heap[--e.heap_max]=r,a[2*i]=a[2*n]+a[2*r],e.depth[i]=(e.depth[n]>=e.depth[r]?e.depth[n]:e.depth[r])+1,a[2*n+1]=a[2*r+1]=i,e.heap[1]=i++,j(e,a,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var n,r,i,a,o,s,c=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,d=t.stat_desc.has_stree,f=t.stat_desc.extra_bits,p=t.stat_desc.extra_base,m=t.stat_desc.max_length,h=0;for(a=0;a<=15;a++)e.bl_count[a]=0;for(c[2*e.heap[e.heap_max]+1]=0,n=e.heap_max+1;n<573;n++)(a=c[2*c[2*(r=e.heap[n])+1]+1]+1)>m&&(a=m,h++),c[2*r+1]=a,r>u||(e.bl_count[a]++,o=0,r>=p&&(o=f[r-p]),s=c[2*r],e.opt_len+=s*(a+o),d&&(e.static_len+=s*(l[2*r+1]+o)));if(0!==h){do{for(a=m-1;0===e.bl_count[a];)a--;e.bl_count[a]--,e.bl_count[a+1]+=2,e.bl_count[m]--,h-=2}while(h>0);for(a=m;0!==a;a--)for(r=e.bl_count[a];0!==r;)(i=e.heap[--n])>u||(c[2*i+1]!==a&&(e.opt_len+=(a-c[2*i+1])*c[2*i],c[2*i+1]=a),r--)}}(e,t),M(a,u,e.bl_count)}function C(e,t,n){var r,i,a=-1,o=t[1],s=0,c=7,u=4;for(0===o&&(c=138,u=3),t[2*(n+1)+1]=65535,r=0;r<=n;r++)i=o,o=t[2*(r+1)+1],++s<c&&i===o||(s<u?e.bl_tree[2*i]+=s:0!==i?(i!==a&&e.bl_tree[2*i]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,a=i,0===o?(c=138,u=3):i===o?(c=6,u=3):(c=7,u=4))}function T(e,t,n){var r,i,a=-1,o=t[1],s=0,c=7,u=4;for(0===o&&(c=138,u=3),r=0;r<=n;r++)if(i=o,o=t[2*(r+1)+1],!(++s<c&&i===o)){if(s<u)do{w(e,i,e.bl_tree)}while(0!=--s);else 0!==i?(i!==a&&(w(e,i,e.bl_tree),s--),w(e,16,e.bl_tree),_(e,s-3,2)):s<=10?(w(e,17,e.bl_tree),_(e,s-3,3)):(w(e,18,e.bl_tree),_(e,s-11,7));s=0,a=i,0===o?(c=138,u=3):i===o?(c=6,u=3):(c=7,u=4)}}i(v);var k=!1;function I(e,t,n,i){_(e,0+(i?1:0),3),function(e,t,n,i){S(e),i&&(D(e,n),D(e,~n)),r.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}(e,t,n,!0)}n._tr_init=function(e){k||(function(){var e,t,n,r,i,c=new Array(16);for(n=0,r=0;r<28;r++)for(p[r]=n,e=0;e<1<<a[r];e++)f[n++]=r;for(f[n-1]=r,i=0,r=0;r<16;r++)for(v[r]=i,e=0;e<1<<o[r];e++)d[i++]=r;for(i>>=7;r<30;r++)for(v[r]=i<<7,e=0;e<1<<o[r]-7;e++)d[256+i++]=r;for(t=0;t<=15;t++)c[t]=0;for(e=0;e<=143;)u[2*e+1]=8,e++,c[8]++;for(;e<=255;)u[2*e+1]=9,e++,c[9]++;for(;e<=279;)u[2*e+1]=7,e++,c[7]++;for(;e<=287;)u[2*e+1]=8,e++,c[8]++;for(M(u,287,c),e=0;e<30;e++)l[2*e+1]=5,l[2*e]=N(e,5);m=new g(u,a,257,286,15),h=new g(l,o,0,30,15),y=new g(new Array(0),s,0,19,7)}(),k=!0),e.l_desc=new b(e.dyn_ltree,m),e.d_desc=new b(e.dyn_dtree,h),e.bl_desc=new b(e.bl_tree,y),e.bi_buf=0,e.bi_valid=0,O(e)},n._tr_stored_block=I,n._tr_flush_block=function(e,t,n,r){var i,a,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<256;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0}(e)),E(e,e.l_desc),E(e,e.d_desc),o=function(e){var t;for(C(e,e.dyn_ltree,e.l_desc.max_code),C(e,e.dyn_dtree,e.d_desc.max_code),E(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*c[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(a=e.static_len+3+7>>>3)<=i&&(i=a)):i=a=n+5,n+4<=i&&-1!==t?I(e,t,n,r):4===e.strategy||a===i?(_(e,2+(r?1:0),3),A(e,u,l)):(_(e,4+(r?1:0),3),function(e,t,n,r){var i;for(_(e,t-257,5),_(e,n-1,5),_(e,r-4,4),i=0;i<r;i++)_(e,e.bl_tree[2*c[i]+1],3);T(e,e.dyn_ltree,t-1),T(e,e.dyn_dtree,n-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),A(e,e.dyn_ltree,e.dyn_dtree)),O(e),r&&S(e)},n._tr_tally=function(e,t,n){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&n,e.last_lit++,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(f[n]+256+1)]++,e.dyn_dtree[2*x(t)]++),e.last_lit===e.lit_bufsize-1},n._tr_align=function(e){_(e,2,3),w(e,256,u),function(e){16===e.bi_valid?(D(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{"../utils/common":41}],53:[function(e,t,n){t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,n){t.exports="function"==typeof setImmediate?setImmediate:function(){var e=[].slice.apply(arguments);e.splice(1,0,0),setTimeout.apply(null,e)}},{}]},{},[10])(10)}));var Iv=zv,Bv=zv;function zv(e,t,n){n=n||2;var r,i,a,o,s,c,u,l=t&&t.length,d=l?t[0]*n:e.length,f=Rv(e,0,d,n,!0),p=[];if(!f||f.next===f.prev)return p;if(l&&(f=function(e,t,n,r){var i,a,o,s,c,u=[];for(i=0,a=t.length;i<a;i++)o=t[i]*r,s=i<a-1?t[i+1]*r:e.length,(c=Rv(e,o,s,r,!1))===c.next&&(c.steiner=!0),u.push(Qv(c));for(u.sort(Vv),i=0;i<u.length;i++)Wv(u[i],n),n=qv(n,n.next);return n}(e,t,f,n)),e.length>80*n){r=a=e[0],i=o=e[1];for(var m=n;m<d;m+=n)(s=e[m])<r&&(r=s),(c=e[m+1])<i&&(i=c),s>a&&(a=s),c>o&&(o=c);u=0!==(u=Math.max(a-r,o-i))?1/u:0}return Fv(f,p,n,r,i,u),p}function Rv(e,t,n,r,i){var a,o;if(i===cg(e,t,n,r)>0)for(a=t;a<n;a+=r)o=ag(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=ag(a,e[a],e[a+1],o);return o&&Kv(o,o.next)&&(og(o),o=o.next),o}function qv(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!Kv(r,r.next)&&0!==Jv(r.prev,r,r.next))r=r.next;else{if(og(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function Fv(e,t,n,r,i,a,o){if(e){!o&&a&&function(e,t,n,r){var i=e;do{null===i.z&&(i.z=$v(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){var t,n,r,i,a,o,s,c,u=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<u&&(s++,r=r.nextZ);t++);for(c=u;s>0||c>0&&r;)0!==s&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,c--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,u*=2}while(o>1)}(i)}(e,r,i,a);for(var s,c,u=e;e.prev!==e.next;)if(s=e.prev,c=e.next,a?Lv(e,r,i,a):Uv(e))t.push(s.i/n),t.push(e.i/n),t.push(c.i/n),og(e),e=c.next,u=c.next;else if((e=c)===u){o?1===o?Fv(e=Hv(qv(e),t,n),t,n,r,i,a,2):2===o&&Zv(e,t,n,r,i,a):Fv(qv(e),t,n,r,i,a,1);break}}}function Uv(e){var t=e.prev,n=e,r=e.next;if(Jv(t,n,r)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(Xv(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Jv(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Lv(e,t,n,r){var i=e.prev,a=e,o=e.next;if(Jv(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,u=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,l=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,d=$v(s,c,t,n,r),f=$v(u,l,t,n,r),p=e.prevZ,m=e.nextZ;p&&p.z>=d&&m&&m.z<=f;){if(p!==e.prev&&p!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Jv(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,m.x,m.y)&&Jv(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=d;){if(p!==e.prev&&p!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Jv(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=f;){if(m!==e.prev&&m!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,m.x,m.y)&&Jv(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Hv(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!Kv(i,a)&&eg(i,r,r.next,a)&&rg(i,a)&&rg(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),og(r),og(r.next),r=e=a),r=r.next}while(r!==e);return qv(r)}function Zv(e,t,n,r,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&Yv(o,s)){var c=ig(o,s);return o=qv(o,o.next),c=qv(c,c.next),Fv(o,t,n,r,i,a),void Fv(c,t,n,r,i,a)}s=s.next}o=o.next}while(o!==e)}function Vv(e,t){return e.x-t.x}function Wv(e,t){if(t=function(e,t){var n,r=t,i=e.x,a=e.y,o=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!n)return null;if(i===o)return n;var c,u=n,l=n.x,d=n.y,f=1/0;r=n;do{i>=r.x&&r.x>=l&&i!==r.x&&Xv(a<d?i:o,a,l,d,a<d?o:i,a,r.x,r.y)&&(c=Math.abs(a-r.y)/(i-r.x),rg(r,e)&&(c<f||c===f&&(r.x>n.x||r.x===n.x&&Gv(n,r)))&&(n=r,f=c)),r=r.next}while(r!==u);return n}(e,t)){var n=ig(t,e);qv(t,t.next),qv(n,n.next)}}function Gv(e,t){return Jv(e.prev,e,t.prev)<0&&Jv(t.next,e,e.next)<0}function $v(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Qv(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Xv(e,t,n,r,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}function Yv(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&eg(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(rg(e,t)&&rg(t,e)&&function(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Jv(e.prev,e,t.prev)||Jv(e,t.prev,t))||Kv(e,t)&&Jv(e.prev,e,e.next)>0&&Jv(t.prev,t,t.next)>0)}function Jv(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Kv(e,t){return e.x===t.x&&e.y===t.y}function eg(e,t,n,r){var i=ng(Jv(e,t,n)),a=ng(Jv(e,t,r)),o=ng(Jv(n,r,e)),s=ng(Jv(n,r,t));return i!==a&&o!==s||(!(0!==i||!tg(e,n,t))||(!(0!==a||!tg(e,r,t))||(!(0!==o||!tg(n,e,r))||!(0!==s||!tg(n,t,r)))))}function tg(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function ng(e){return e>0?1:e<0?-1:0}function rg(e,t){return Jv(e.prev,e,e.next)<0?Jv(e,t,e.next)>=0&&Jv(e,e.prev,t)>=0:Jv(e,t,e.prev)<0||Jv(e,e.next,t)<0}function ig(e,t){var n=new sg(e.i,e.x,e.y),r=new sg(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function ag(e,t,n,r){var i=new sg(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function og(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function sg(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function cg(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}zv.deviation=function(e,t,n,r){var i=t&&t.length,a=i?t[0]*n:e.length,o=Math.abs(cg(e,0,a,n));if(i)for(var s=0,c=t.length;s<c;s++){var u=t[s]*n,l=s<c-1?t[s+1]*n:e.length;o-=Math.abs(cg(e,u,l,n))}var d=0;for(s=0;s<r.length;s+=3){var f=r[s]*n,p=r[s+1]*n,m=r[s+2]*n;d+=Math.abs((e[f]-e[m])*(e[p+1]-e[f+1])-(e[f]-e[p])*(e[m+1]-e[f+1]))}return 0===o&&0===d?0:Math.abs((d-o)/o)},zv.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,i=0;i<e.length;i++){for(var a=0;a<e[i].length;a++)for(var o=0;o<t;o++)n.vertices.push(e[i][a][o]);i>0&&(r+=e[i-1].length,n.holes.push(r))}return n},Iv.default=Bv;var ug=e=>{const[t,n,r,i,a,o,s,c,u]=e,l=oy(t,n,r,i,a,o,s,c,u);for(let t=9;t<e.length;t+=3)if(!sy(l,e[t],e[t+1],e[t+2]))throw new Error("[NTP] Cannot interpret non-planar polygons!");const d=Math.atan(l.b/l.c),f=Math.atan(l.a/l.c),p=Math.atan(l.a/l.b),m=[];for(let t=0;t<e.length;t+=3){const n=ay(d,f,p,e[t],e[t+1],e[t+2]);n.pop(),m.push(...n)}const h=Iv(m),y=[];for(let e=0;e<h.length;e+=3)y.push(h[e+2],h[e+1],h[e]);return y};const lg={element:/element (\w+) (\d+)([\s\S]+?)(?=element|end_header)/g,format:/format\s+(\w+)/,header:/(ply[\s\S]+end_header)/,property:/temporary/g,listProperty:/temporary/g,type:/(u?(?:char|short|int)|float|double)/};lg.property=new RegExp(`property ${lg.type.source} (\\w+)`,"g"),lg.listProperty=new RegExp(`property list ${lg.type.source} ${lg.type.source} (\\w+)`,"g");const dg={CHAR:{size:1,symbol:"char",dataView:{get:DataView.prototype.getInt8,set:DataView.prototype.setInt8}},UCHAR:{size:1,symbol:"uchar",dataView:{get:DataView.prototype.getUint8,set:DataView.prototype.setUint8}},SHORT:{size:2,symbol:"short",dataView:{get:DataView.prototype.getInt16,set:DataView.prototype.setInt16}},USHORT:{size:2,symbol:"ushort",dataView:{get:DataView.prototype.getUint16,set:DataView.prototype.setUint16}},INT:{size:4,symbol:"int",dataView:{get:DataView.prototype.getInt32,set:DataView.prototype.setInt32}},UINT:{size:4,symbol:"uint",dataView:{get:DataView.prototype.getUint32,set:DataView.prototype.setUint32}},FLOAT:{size:4,symbol:"float",dataView:{get:DataView.prototype.getFloat32,set:DataView.prototype.setFloat32}},DOUBLE:{size:8,symbol:"double",dataView:{get:DataView.prototype.getFloat64,set:DataView.prototype.setFloat64}}},fg=Object.values(dg).map(e=>e.symbol),pg=/end_header[\r\n]{1,2}([\s\S]+)/,mg=/(.+)/g,hg=/([+-]?(?:\d*\.)?\d+(?:[eE][+-]?\d+)?)/g,yg=(e,t)=>{const n={name:"PLY",normals:void 0,vertices:{indices:[],vectors:[]}},r=e=>{if(3==e.length)n.vertices.indices.push(...e);else{const t=uy({indices:e,vectors:n.vertices.vectors}),r=ug(t),i=uy({indices:r,vectors:t}),a=[...n.vertices.vectors,...i],{indices:o}=ly(a),s=o.slice(o.length-r.length);n.vertices.indices.push(...s)}},i=(new TextDecoder).decode(e),a=(e=>{const[t]=Py(e,lg.header,new Error("Failed to extract PLY header while categorizing the file!")),[n]=Py(t,lg.format,new Error("Failed to detect PLY type!"));switch(n){case"ascii":return"ascii";case"binary_big_endian":return"binary-be";case"binary_little_endian":return"binary-le";default:throw new Error("Invalid PLY format: "+n)}})(i),o=(e=>{const[t]=Py(e,lg.header,new Error("Failed to extract PLY header while extracting face and vertice information!")),n=jy(t,lg.element,new Error("Failed to extract PLY elements!")),r=[];let i=0;for(const[e,t,a]of n){const n=[],o=jy(a,lg.property),s=jy(a,lg.listProperty);if(o.length>0&&o[0].length>0)for(const[e,t]of o){if(!fg.includes(e))throw new Error(`Unknown PLY header numeric type: "${e}"`);const r=Object.values(dg).find(t=>t.symbol==e);n.push({list:!1,name:t,type:r})}if(s.length>0&&s[0].length>0)for(const[e,t,r]of s){if(!fg.includes(e))throw new Error(`Unknown PLY header numeric type: "${e}"`);if(!fg.includes(t))throw new Error(`Unknown PLY header numeric type: "${t}"`);const i=Object.values(dg).find(e=>e.symbol==t),a=Object.values(dg).find(t=>t.symbol==e);n.push({countType:a,list:!0,name:r,type:i})}const c=parseInt(t);r.push({count:c,name:e,offset:i,properties:n}),i+=c}return r})(i),s=o.find(e=>"vertex"==e.name),c=null!=s?s.count:0;let u=null!=s?s.offset:0;const l=o.find(e=>"face"==e.name),d=null!=l?l.count:0;let f=null!=l?l.offset:0;const[p]=Py(i,pg,new Error("[PLY] Failed to extract file body!"));switch(a){case"ascii":{const e=jy(p,mg,new Error("[PLY] Failed to parse file body!")),i=Object.keys(e).length,a=i<100?1:Math.round(i/100);for(const[o,[s]]of e.entries()){if(u<=o&&o<u+c){const e=jy(s,hg,new Error("[PLY] Failed to parse vertice!")).map(e=>parseFloat(e[0]));n.vertices.vectors.push(...e.slice(0,3))}else if(f<=o&&o<f+d){const e=jy(s,hg,new Error("[PLY] Failed to parse face!")).map(e=>parseInt(e[0]));if(e[0]!=e.length-1)throw new Error("[PLY] Face list had incorrect vertice count!");e.shift(),r(e)}o%a==0&&t((o+1)/i)}break}case"binary-be":case"binary-le":{const i="binary-le"==a,s=e.slice(e.byteLength-p.length),l=e instanceof ArrayBuffer?new DataView(s):new DataView(new Uint8Array(s).buffer);let m=0;for(const e of o){switch(e.name){case"vertex":u=m;break;case"face":f=m}let t=0;for(const n of e.properties)if(n.list)for(let r=0;r<e.count;r++){const e=n.countType.dataView.get.call(l,m+t,i);t+=n.countType.size+e*n.type.size}else t+=e.count*n.type.size;m+=t}const h=u+12*c,y=c<100?12:12*Math.round(c/100);for(let e=u;e<h;e+=12){const r=l.getFloat32(e,i),a=l.getFloat32(e+4,i),o=l.getFloat32(e+8,i);n.vertices.vectors.push(r,a,o),e%y==0&&t((e-u)/(12*c)/2)}const v=d<100?1:Math.round(d/100);let g=f;for(let e=0;e<d;e++){const n=l.getUint8(g),a=[];for(let e=1+g;e<1+g+4*n;e+=4)a.push(l.getInt32(e,i));r(a),g+=1+4*n,e%v==0&&t((e+1)/d/2+.5)}break}}return t(1),[n]},vg=(e,t)=>{switch((e=>{const t=e instanceof ArrayBuffer?new DataView(e):new DataView(new Uint8Array(e).buffer);if(84+50*t.getUint32(80,!0)==t.byteLength)return"binary";const n="solid".split("").map(e=>e.charCodeAt(0));if(((e,t)=>{for(let n=0;n<e.length-t.length+1;n++){let r=!0;for(let i=0;i<t.length;i++)if(e[n+i]!=t[i]){r=!1;break}if(r)return!0}return!1})(Array.from(new Uint8Array(t.buffer.slice(0,n.length+5))),n))return"ascii";throw new Error("[STL] Failed to detect file type!")})(e)){case"ascii":{const n=(new TextDecoder).decode(e),r=[],i={facet:/facet([\s\S]*?)endfacet/g,float:/([+-]?(?:\d*\.)?\d+(?:[eE][+-]?\d+)?)/,loop:/outer loop([\s\S]*?)endloop/g,normal:/temporary/g,number:/([+-]?\d*(\.\d)?)/,solid:/solid (\S+)\s([\s\S]*?)\sendsolid/g,vertice:/temporary/g};i.normal=new RegExp("normal"+("\\s+"+i.float.source).repeat(3)),i.vertice=new RegExp("vertex"+("\\s+"+i.float.source).repeat(3),"g");const a=jy(n,i.solid,new Error("[STL] Failed to parse solids!"));for(const[e,n]of a){const a={name:e,vertices:[],normals:[]},o=jy(n,i.facet,new Error("[STL] Failed to parse facets!")),s=o.length<100?1:Math.round(o.length/100);for(const[e,[n]]of o.entries()){const r=Py(n,i.normal,new Error("[STL] Failed to parse normal!")),c=parseFloat(r[0]),u=parseFloat(r[1]),l=parseFloat(r[2]);a.normals.push(c,u,l);const d=jy(n,i.loop,new Error("[STL] Failed to parse loops!"));for(const[e]of d){const t=jy(e,i.vertice,new Error("[STL] Failed to parse vertices!"));for(const e of t){const t=parseFloat(e[0]),n=parseFloat(e[1]),r=parseFloat(e[2]);a.vertices.push(t,n,r)}}e%s==0&&t((e+1)/o.length)}r.push(a)}return t(1),r}case"binary":{const n={name:"Binary STL",vertices:[],normals:[]},r=(e.byteLength-84)/50,i=e instanceof ArrayBuffer?new DataView(e):new DataView(new Uint8Array(e).buffer),a=r<100?1:Math.round(r/100);for(let e=0;e<r;e++){const o=84+50*e;n.normals.push(i.getFloat32(o,!0),i.getFloat32(o+4,!0),i.getFloat32(o+8,!0)),n.vertices.push(i.getFloat32(o+12,!0),i.getFloat32(o+16,!0),i.getFloat32(o+20,!0)),n.vertices.push(i.getFloat32(o+24,!0),i.getFloat32(o+28,!0),i.getFloat32(o+32,!0)),n.vertices.push(i.getFloat32(o+36,!0),i.getFloat32(o+40,!0),i.getFloat32(o+44,!0)),e%a==0&&t((e+1)/r)}return t(1),[n]}}};class gg extends yy.EventEmitter{constructor(e){super(),this.config={objMode:"group-only",...e}}async load(e,t,n){const r=e=>{e=Math.round(.9*e*100),this.emit("progress",e)},i=e=>{for(const[t,r]of e.entries()){if(null==r.normals||r.normals instanceof Array||(r.normals=uy(r.normals)),null==r.vertices||r.vertices instanceof Array||(r.vertices=uy(r.vertices)),null==r.normals&&null!=r.vertices&&(r.normals=cy(r.vertices)),null!=r.normals&&n.index.normals){const{indices:e,vectors:t}=ly(r.normals);r.normals={indices:e,vectors:t}}if(null!=r.vertices&&n.index.vertices){const{indices:e,vectors:t}=ly(r.vertices);r.vertices={indices:e,vectors:t}}this.emit("progress",100*((t+1)/e.length*(1-.9)+.9))}return e};switch(t){case Sy._3MF:{let t=await(async(e,t)=>{const n=[],r=[];if("PK"!=(new TextDecoder).decode(e).substring(0,2))throw new Error('[3MF] Invalid magic bytes! (Expected "PK")');{const t=await kv.loadAsync(e);for(const e in t.files)"model"==e.toLowerCase().substring(e.length-5)&&n.push(await t.files[e].async("text"))}for(const e of n){const n=Tv.parse(e,{ignoreAttributes:!1},!0);if(null==n.model)throw new Error("[3MF] Expected root XML element!");if(null==n.model.build||null==n.model.resources)throw new Error("[3MF] Expected root XML to have `build` and `resources` child elements!");{let e,i=1;if(null!=n.model["@_unit"])switch(n.model["@_unit"]){case"inch":i=25.4;break;case"feet":i=304.8;break;case"micron":i=.001;break;default:case"millimeter":i=1;break;case"centimeter":i=10;break;case"meter":i=1e3}for(const[t,r]of Object.entries(n.model))if("build"==t)for(const[t,n]of Object.entries(r))if("item"==t&&null!=n["@_transform"]){const t=jy(n["@_transform"],/([+-]?(?:\d*\.)?\d+(?:[eE][+-]?\d+)?)/g,new Error("[3MF] Failed to parse transformation matrix!"));if(12!=t.length)throw new Error(`[3MF] Transformation matrix had ${t.length} items! (Expected 12)`);{const n=t.map(e=>parseFloat(e[0]));e=[[n[0],n[1],n[2],0],[n[3],n[4],n[5],0],[n[6],n[7],n[8],0],[n[9],n[10],n[11],1]]}}for(const[a,o]of Object.entries(n.model))if("resources"==a)for(const[n,a]of Object.entries(o))if("object"==n){const n={name:"3MF",normals:void 0,vertices:{indices:[],vectors:[]}};for(const[r,o]of Object.entries(a))if("mesh"==r)for(const[r,a]of Object.entries(o))if("vertices"==r){for(const[r,o]of Object.entries(a))if("vertex"==r){const r=o.length<100?1:Math.round(o.length/100);for(const[a,s]of o.entries()){const c=i*parseFloat(s["@_x"]),u=i*parseFloat(s["@_y"]),l=i*parseFloat(s["@_z"]);if(null!=e){let t=ny.multiply(e,[c,u,l,1]);t.pop(),t=t.map(e=>ry.round(e,10)),n.vertices.vectors.push(...t)}else n.vertices.vectors.push(c,u,l);a%r==0&&t((a+1)/o.length/2)}}}else if("triangles"==r)for(const[e,r]of Object.entries(a))if("triangle"==e){const e=r.length<100?1:Math.round(r.length/100);for(const[i,a]of r.entries()){const o=parseInt(a["@_v1"]),s=parseInt(a["@_v2"]),c=parseInt(a["@_v3"]);n.vertices.indices.push(o,s,c),i%e==0&&t((i+1)/r.length/2+.5)}}n.metadata=Ay(a),r.push(n)}}}return t(1),r})(e,r);return t=i(t),t}case Sy.AMF:{let t=await(async(e,t)=>{const n=[],r=[],i=(new TextDecoder).decode(e);if("PK"==i.substring(0,2)){const t=await kv.loadAsync(e);for(const e in t.files)"amf"==e.toLowerCase().substring(e.length-3)&&n.push(await t.files[e].async("text"))}else n.push(i);for(const e of n){const n=Tv.parse(e,{ignoreAttributes:!1},!0);if(null==n.amf)throw new Error("[AMF] Expected root XML element!");if(null==n.amf.object)throw new Error("[AMF] Expected root XML to have `object` child element!");{let e=1;if(null!=n.amf["@_unit"])switch(n.amf["@_unit"]){case"inch":e=25.4;break;case"feet":e=304.8;break;case"micron":e=.001;break;default:case"millimeter":e=1;break;case"meter":e=1e3}for(const[i,a]of Object.entries(n.amf))if("object"==i){const n={name:"AMF",normals:void 0,vertices:{indices:[],vectors:[]},metadata:{}};for(const[r,i]of Object.entries(a))if("mesh"==r)for(const[r,a]of Object.entries(i))if("vertices"==r){for(const[r,i]of Object.entries(a))if("vertex"==r){const r=i.length<100?1:Math.round(i.length/100);for(const[a,o]of i.entries()){if(null!=o.coordinates){const t=e*o.coordinates.x,r=e*o.coordinates.y,i=e*o.coordinates.z;n.vertices.vectors.push(t,r,i)}a%r==0&&t((a+1)/i.length/2)}}}else if("volume"==r)for(const[e,r]of Object.entries(a))if("triangle"==e){const e=r.length<100?1:Math.round(r.length/100);for(const[i,a]of r.entries()){const o=a.v1,s=a.v2,c=a.v3;n.vertices.indices.push(o,s,c),i%e==0&&t((i+1)/r.length/2+.5)}}n.metadata=Ay(a),r.push(n)}}}return t(1),r})(e,r);return t=i(t),t}case Sy.OBJ:{let t=((e,t,n)=>{const r=(new TextDecoder).decode(e),i=[],a={entity:/^[og] (\w+)/,face:/(\d+)\/\d*\/\d*/g,float:/([+-]?(?:\d*\.)?\d+(?:[eE][+-]?\d+)?)/,line:/^((f|g|o|v) [^\r\n]+)/gm,vertices:/temporary/};a.vertices=new RegExp("^v"+("\\s+"+a.float.source).repeat(3));const o={name:"",normals:void 0,vertices:{indices:[],vectors:[]}},s=jy(r,a.line,new Error("[OBJ] Failed to parse lines!")),c=s.length<100?1:Math.round(s.length/100);for(const[e,[r,u]]of s.entries()){switch(u){case"g":case"o":if("group-only"==t&&"g"==u||"object-only"==t&&"o"==u||"hybrid"==t){i.push(o);const e=Py(r,a.entity,new Error("[OBJ] Failed to parse object!"));o.name=e[0],o.vertices={indices:[],vectors:[]}}break;case"v":{const e=Py(r,a.vertices,new Error("[OBJ] Failed to parse vertice!")),t=parseFloat(e[0]),n=parseFloat(e[1]),i=parseFloat(e[2]);o.vertices.vectors.push(t,n,i);break}case"f":{const e=jy(r,a.face,new Error("[OBJ] Failed to parse face!")).map(e=>parseInt(e[0])-1);if(3==e.length)o.vertices.indices.push(...e);else{const t=uy({indices:e,vectors:o.vertices.vectors}),n=ug(t),r=uy({indices:n,vectors:t}),i=[...o.vertices.vectors,...r],{indices:a}=ly(i),s=a.slice(a.length-n.length);o.vertices.indices.push(...s)}break}}e%c==0&&n((e+1)/s.length)}return n(1),i})(e,this.config.objMode,r);return t=i(t),t}case Sy.PLY:{let t=yg(e,r);return t=i(t),t}case Sy.STL:{let t=vg(e,r);return t=i(t),t}default:throw new Error("Invalid file format!")}}}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba"), __webpack_require__("1c35").Buffer))

/***/ }),

/***/ "da84":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  /* global globalThis -- safe */
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  check(typeof self == 'object' && self) ||
  check(typeof global == 'object' && global) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("c8ba")))

/***/ }),

/***/ "dbb4":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var ownKeys = __webpack_require__("56ef");
var toIndexedObject = __webpack_require__("fc6a");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var createProperty = __webpack_require__("8418");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "dc2a":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* binding */ deserialize; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* binding */ serialize; });

// UNUSED EXPORTS: registerSerializer

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/serializers.js
function extendSerializer(extend, implementation) {
    const fallbackDeserializer = extend.deserialize.bind(extend);
    const fallbackSerializer = extend.serialize.bind(extend);
    return {
        deserialize(message) {
            return implementation.deserialize(message, fallbackDeserializer);
        },
        serialize(input) {
            return implementation.serialize(input, fallbackSerializer);
        }
    };
}
const DefaultErrorSerializer = {
    deserialize(message) {
        return Object.assign(Error(message.message), {
            name: message.name,
            stack: message.stack
        });
    },
    serialize(error) {
        return {
            __error_marker: "$$error",
            message: error.message,
            name: error.name,
            stack: error.stack
        };
    }
};
const isSerializedError = (thing) => thing && typeof thing === "object" && "__error_marker" in thing && thing.__error_marker === "$$error";
const DefaultSerializer = {
    deserialize(message) {
        if (isSerializedError(message)) {
            return DefaultErrorSerializer.deserialize(message);
        }
        else {
            return message;
        }
    },
    serialize(input) {
        if (input instanceof Error) {
            return DefaultErrorSerializer.serialize(input);
        }
        else {
            return input;
        }
    }
};

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/common.js

let registeredSerializer = DefaultSerializer;
function registerSerializer(serializer) {
    registeredSerializer = extendSerializer(registeredSerializer, serializer);
}
function deserialize(message) {
    return registeredSerializer.deserialize(message);
}
function serialize(input) {
    return registeredSerializer.serialize(input);
}


/***/ }),

/***/ "dc90":
/***/ (function(module, exports, __webpack_require__) {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __webpack_require__("1468");
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ "ddb0":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");
var DOMIterables = __webpack_require__("fdbc");
var ArrayIteratorMethods = __webpack_require__("e260");
var createNonEnumerableProperty = __webpack_require__("9112");
var wellKnownSymbol = __webpack_require__("b622");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
}


/***/ }),

/***/ "df75":
/***/ (function(module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__("ca84");
var enumBugKeys = __webpack_require__("7839");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "df7c":
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,
// backported and transplited with Babel, with backwards-compat fixes

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function (path) {
  if (typeof path !== 'string') path = path + '';
  if (path.length === 0) return '.';
  var code = path.charCodeAt(0);
  var hasRoot = code === 47 /*/*/;
  var end = -1;
  var matchedSlash = true;
  for (var i = path.length - 1; i >= 1; --i) {
    code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        if (!matchedSlash) {
          end = i;
          break;
        }
      } else {
      // We saw the first non-path separator
      matchedSlash = false;
    }
  }

  if (end === -1) return hasRoot ? '/' : '.';
  if (hasRoot && end === 1) {
    // return '//';
    // Backwards-compat fix:
    return '/';
  }
  return path.slice(0, end);
};

function basename(path) {
  if (typeof path !== 'string') path = path + '';

  var start = 0;
  var end = -1;
  var matchedSlash = true;
  var i;

  for (i = path.length - 1; i >= 0; --i) {
    if (path.charCodeAt(i) === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          start = i + 1;
          break;
        }
      } else if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // path component
      matchedSlash = false;
      end = i + 1;
    }
  }

  if (end === -1) return '';
  return path.slice(start, end);
}

// Uses a mixed approach for backwards-compatibility, as ext behavior changed
// in new Node.js versions, so only basename() above is backported here
exports.basename = function (path, ext) {
  var f = basename(path);
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};

exports.extname = function (path) {
  if (typeof path !== 'string') path = path + '';
  var startDot = -1;
  var startPart = 0;
  var end = -1;
  var matchedSlash = true;
  // Track the state of characters (if any) we see before our first dot and
  // after any path separator we find
  var preDotState = 0;
  for (var i = path.length - 1; i >= 0; --i) {
    var code = path.charCodeAt(i);
    if (code === 47 /*/*/) {
        // If we reached a path separator that was not part of a set of path
        // separators at the end of the string, stop now
        if (!matchedSlash) {
          startPart = i + 1;
          break;
        }
        continue;
      }
    if (end === -1) {
      // We saw the first non-path separator, mark this as the end of our
      // extension
      matchedSlash = false;
      end = i + 1;
    }
    if (code === 46 /*.*/) {
        // If this is our first dot, mark it as the start of our extension
        if (startDot === -1)
          startDot = i;
        else if (preDotState !== 1)
          preDotState = 1;
    } else if (startDot !== -1) {
      // We saw a non-dot and non-path separator before our dot, so we should
      // have a good chance at having a non-empty extension
      preDotState = -1;
    }
  }

  if (startDot === -1 || end === -1 ||
      // We saw a non-dot character immediately before the dot
      preDotState === 0 ||
      // The (right-most) trimmed path component is exactly '..'
      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
    return '';
  }
  return path.slice(startDot, end);
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__("4362")))

/***/ }),

/***/ "e01a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__("23e7");
var DESCRIPTORS = __webpack_require__("83ab");
var global = __webpack_require__("da84");
var has = __webpack_require__("5135");
var isObject = __webpack_require__("861d");
var defineProperty = __webpack_require__("9bf2").f;
var copyConstructorProperties = __webpack_require__("e893");

var NativeSymbol = global.Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "e163":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var toObject = __webpack_require__("7b0b");
var sharedKey = __webpack_require__("f772");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__("e177");

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "e177":
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__("d039");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "e260":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__("fc6a");
var addToUnscopables = __webpack_require__("44d2");
var Iterators = __webpack_require__("3f8c");
var InternalStateModule = __webpack_require__("69f3");
var defineIterator = __webpack_require__("7dd0");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "e2cc":
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__("6eeb");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "e3db":
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "e439":
/***/ (function(module, exports, __webpack_require__) {

var $ = __webpack_require__("23e7");
var fails = __webpack_require__("d039");
var toIndexedObject = __webpack_require__("fc6a");
var nativeGetOwnPropertyDescriptor = __webpack_require__("06cf").f;
var DESCRIPTORS = __webpack_require__("83ab");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "e538":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "e667":
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "e6cf":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var IS_PURE = __webpack_require__("c430");
var global = __webpack_require__("da84");
var getBuiltIn = __webpack_require__("d066");
var NativePromise = __webpack_require__("fea9");
var redefine = __webpack_require__("6eeb");
var redefineAll = __webpack_require__("e2cc");
var setToStringTag = __webpack_require__("d44e");
var setSpecies = __webpack_require__("2626");
var isObject = __webpack_require__("861d");
var aFunction = __webpack_require__("1c0b");
var anInstance = __webpack_require__("19aa");
var inspectSource = __webpack_require__("8925");
var iterate = __webpack_require__("2266");
var checkCorrectnessOfIteration = __webpack_require__("1c7e");
var speciesConstructor = __webpack_require__("4840");
var task = __webpack_require__("2cf4").set;
var microtask = __webpack_require__("b575");
var promiseResolve = __webpack_require__("cdf9");
var hostReportErrors = __webpack_require__("44de");
var newPromiseCapabilityModule = __webpack_require__("f069");
var perform = __webpack_require__("e667");
var InternalStateModule = __webpack_require__("69f3");
var isForced = __webpack_require__("94ca");
var wellKnownSymbol = __webpack_require__("b622");
var IS_NODE = __webpack_require__("605d");
var V8_VERSION = __webpack_require__("2d00");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = NativePromise;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = getBuiltIn('fetch');
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor);
  if (!GLOBAL_CORE_JS_PROMISE) {
    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // We can't detect it synchronously, so just check versions
    if (V8_VERSION === 66) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    if (!IS_NODE && !NATIVE_REJECTION_EVENT) return true;
  }
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromiseConstructor.prototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  return !(promise.then(function () { /* empty */ }) instanceof FakePromise);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0;
    // variable length - can't use forEach
    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // can throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function') {
    nativeThen = NativePromise.prototype.then;

    // wrap native Promise#then for native async functions
    redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
      var that = this;
      return new PromiseConstructor(function (resolve, reject) {
        nativeThen.call(that, resolve, reject);
      }).then(onFulfilled, onRejected);
    // https://github.com/zloirock/core-js/issues/640
    }, { unsafe: true });

    // wrap fetch result
    if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
      // eslint-disable-next-line no-unused-vars -- required for `.length`
      fetch: function fetch(input /* , init */) {
        return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
      }
    });
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "e893":
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__("5135");
var ownKeys = __webpack_require__("56ef");
var getOwnPropertyDescriptorModule = __webpack_require__("06cf");
var definePropertyModule = __webpack_require__("9bf2");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "e8b5":
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__("c6b6");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "e95a":
/***/ (function(module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__("b622");
var Iterators = __webpack_require__("3f8c");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "f069":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__("1c0b");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

// 25.4.1.5 NewPromiseCapability(C)
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "f5df":
/***/ (function(module, exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__("00ee");
var classofRaw = __webpack_require__("c6b6");
var wellKnownSymbol = __webpack_require__("b622");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "f772":
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__("5692");
var uid = __webpack_require__("90e3");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "fb15":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js
// This file is imported into lib/wc client bundles.

if (typeof window !== 'undefined') {
  var currentScript = window.document.currentScript
  if (true) {
    var getCurrentScript = __webpack_require__("8875")
    currentScript = getCurrentScript()

    // for backward compatibility, because previously we directly included the polyfill
    if (!('currentScript' in document)) {
      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })
    }
  }

  var src = currentScript && currentScript.src.match(/(.+\/)[^/]+\.js(\?.*)?$/)
  if (src) {
    __webpack_require__.p = src[1] // eslint-disable-line
  }
}

// Indicate to webpack that this file can be concatenated
/* harmony default export */ var setPublicPath = (null);

// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/.cache/vue-loader","cacheIdentifier":"8f5e6096-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/viewer.vue?vue&type=template&id=1171733b&
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:"canvas",staticClass:"vue-3d-viewer"})}
var staticRenderFns = []


// CONCATENATED MODULE: ./src/viewer.vue?vue&type=template&id=1171733b&

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.promise.js
var es_promise = __webpack_require__("e6cf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js
var es_object_to_string = __webpack_require__("d3b7");

// CONCATENATED MODULE: ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js



function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}
// EXTERNAL MODULE: ./node_modules/regenerator-runtime/runtime.js
var runtime = __webpack_require__("96cf");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array-buffer.constructor.js
var es_array_buffer_constructor = __webpack_require__("c19f");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.js
var es_symbol = __webpack_require__("a4d3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.description.js
var es_symbol_description = __webpack_require__("e01a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.symbol.iterator.js
var es_symbol_iterator = __webpack_require__("d28b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.iterator.js
var es_string_iterator = __webpack_require__("3ca3");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.iterator.js
var es_array_iterator = __webpack_require__("e260");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.iterator.js
var web_dom_collections_iterator = __webpack_require__("ddb0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js
var es_array_slice = __webpack_require__("fb6a");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js
var es_function_name = __webpack_require__("b0c0");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.from.js
var es_array_from = __webpack_require__("a630");

// CONCATENATED MODULE: ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
// CONCATENATED MODULE: ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js






function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}
// CONCATENATED MODULE: ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js








function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = o[Symbol.iterator]();
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it["return"] != null) it["return"]();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.includes.js
var es_array_includes = __webpack_require__("caad");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.string.includes.js
var es_string_includes = __webpack_require__("2532");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.keys.js
var es_object_keys = __webpack_require__("b64b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.values.js
var es_object_values = __webpack_require__("07ac");

// EXTERNAL MODULE: ./node_modules/unified-3d-loader/dist/es/index.js
var es = __webpack_require__("da10");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.filter.js
var es_array_filter = __webpack_require__("4de4");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptor.js
var es_object_get_own_property_descriptor = __webpack_require__("e439");

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js
var web_dom_collections_for_each = __webpack_require__("159b");

// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.get-own-property-descriptors.js
var es_object_get_own_property_descriptors = __webpack_require__("dbb4");

// CONCATENATED MODULE: ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
// CONCATENATED MODULE: ./node_modules/@vue/babel-preset-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js








function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}
// CONCATENATED MODULE: ./node_modules/three/build/three.module.js
// threejs.org/license
const REVISION = '126';
const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };
const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };
const CullFaceNone = 0;
const CullFaceBack = 1;
const CullFaceFront = 2;
const CullFaceFrontBack = 3;
const BasicShadowMap = 0;
const PCFShadowMap = 1;
const PCFSoftShadowMap = 2;
const VSMShadowMap = 3;
const FrontSide = 0;
const BackSide = 1;
const DoubleSide = 2;
const FlatShading = 1;
const SmoothShading = 2;
const NoBlending = 0;
const NormalBlending = 1;
const AdditiveBlending = 2;
const SubtractiveBlending = 3;
const MultiplyBlending = 4;
const CustomBlending = 5;
const AddEquation = 100;
const SubtractEquation = 101;
const ReverseSubtractEquation = 102;
const MinEquation = 103;
const MaxEquation = 104;
const ZeroFactor = 200;
const OneFactor = 201;
const SrcColorFactor = 202;
const OneMinusSrcColorFactor = 203;
const SrcAlphaFactor = 204;
const OneMinusSrcAlphaFactor = 205;
const DstAlphaFactor = 206;
const OneMinusDstAlphaFactor = 207;
const DstColorFactor = 208;
const OneMinusDstColorFactor = 209;
const SrcAlphaSaturateFactor = 210;
const NeverDepth = 0;
const AlwaysDepth = 1;
const LessDepth = 2;
const LessEqualDepth = 3;
const EqualDepth = 4;
const GreaterEqualDepth = 5;
const GreaterDepth = 6;
const NotEqualDepth = 7;
const MultiplyOperation = 0;
const MixOperation = 1;
const AddOperation = 2;
const NoToneMapping = 0;
const LinearToneMapping = 1;
const ReinhardToneMapping = 2;
const CineonToneMapping = 3;
const ACESFilmicToneMapping = 4;
const CustomToneMapping = 5;

const UVMapping = 300;
const CubeReflectionMapping = 301;
const CubeRefractionMapping = 302;
const EquirectangularReflectionMapping = 303;
const EquirectangularRefractionMapping = 304;
const CubeUVReflectionMapping = 306;
const CubeUVRefractionMapping = 307;
const RepeatWrapping = 1000;
const ClampToEdgeWrapping = 1001;
const MirroredRepeatWrapping = 1002;
const NearestFilter = 1003;
const NearestMipmapNearestFilter = 1004;
const NearestMipMapNearestFilter = 1004;
const NearestMipmapLinearFilter = 1005;
const NearestMipMapLinearFilter = 1005;
const LinearFilter = 1006;
const LinearMipmapNearestFilter = 1007;
const LinearMipMapNearestFilter = 1007;
const LinearMipmapLinearFilter = 1008;
const LinearMipMapLinearFilter = 1008;
const UnsignedByteType = 1009;
const ByteType = 1010;
const ShortType = 1011;
const UnsignedShortType = 1012;
const IntType = 1013;
const UnsignedIntType = 1014;
const FloatType = 1015;
const HalfFloatType = 1016;
const UnsignedShort4444Type = 1017;
const UnsignedShort5551Type = 1018;
const UnsignedShort565Type = 1019;
const UnsignedInt248Type = 1020;
const AlphaFormat = 1021;
const RGBFormat = 1022;
const RGBAFormat = 1023;
const LuminanceFormat = 1024;
const LuminanceAlphaFormat = 1025;
const RGBEFormat = RGBAFormat;
const DepthFormat = 1026;
const DepthStencilFormat = 1027;
const RedFormat = 1028;
const RedIntegerFormat = 1029;
const RGFormat = 1030;
const RGIntegerFormat = 1031;
const RGBIntegerFormat = 1032;
const RGBAIntegerFormat = 1033;

const RGB_S3TC_DXT1_Format = 33776;
const RGBA_S3TC_DXT1_Format = 33777;
const RGBA_S3TC_DXT3_Format = 33778;
const RGBA_S3TC_DXT5_Format = 33779;
const RGB_PVRTC_4BPPV1_Format = 35840;
const RGB_PVRTC_2BPPV1_Format = 35841;
const RGBA_PVRTC_4BPPV1_Format = 35842;
const RGBA_PVRTC_2BPPV1_Format = 35843;
const RGB_ETC1_Format = 36196;
const RGB_ETC2_Format = 37492;
const RGBA_ETC2_EAC_Format = 37496;
const RGBA_ASTC_4x4_Format = 37808;
const RGBA_ASTC_5x4_Format = 37809;
const RGBA_ASTC_5x5_Format = 37810;
const RGBA_ASTC_6x5_Format = 37811;
const RGBA_ASTC_6x6_Format = 37812;
const RGBA_ASTC_8x5_Format = 37813;
const RGBA_ASTC_8x6_Format = 37814;
const RGBA_ASTC_8x8_Format = 37815;
const RGBA_ASTC_10x5_Format = 37816;
const RGBA_ASTC_10x6_Format = 37817;
const RGBA_ASTC_10x8_Format = 37818;
const RGBA_ASTC_10x10_Format = 37819;
const RGBA_ASTC_12x10_Format = 37820;
const RGBA_ASTC_12x12_Format = 37821;
const RGBA_BPTC_Format = 36492;
const SRGB8_ALPHA8_ASTC_4x4_Format = 37840;
const SRGB8_ALPHA8_ASTC_5x4_Format = 37841;
const SRGB8_ALPHA8_ASTC_5x5_Format = 37842;
const SRGB8_ALPHA8_ASTC_6x5_Format = 37843;
const SRGB8_ALPHA8_ASTC_6x6_Format = 37844;
const SRGB8_ALPHA8_ASTC_8x5_Format = 37845;
const SRGB8_ALPHA8_ASTC_8x6_Format = 37846;
const SRGB8_ALPHA8_ASTC_8x8_Format = 37847;
const SRGB8_ALPHA8_ASTC_10x5_Format = 37848;
const SRGB8_ALPHA8_ASTC_10x6_Format = 37849;
const SRGB8_ALPHA8_ASTC_10x8_Format = 37850;
const SRGB8_ALPHA8_ASTC_10x10_Format = 37851;
const SRGB8_ALPHA8_ASTC_12x10_Format = 37852;
const SRGB8_ALPHA8_ASTC_12x12_Format = 37853;
const LoopOnce = 2200;
const LoopRepeat = 2201;
const LoopPingPong = 2202;
const InterpolateDiscrete = 2300;
const InterpolateLinear = 2301;
const InterpolateSmooth = 2302;
const ZeroCurvatureEnding = 2400;
const ZeroSlopeEnding = 2401;
const WrapAroundEnding = 2402;
const NormalAnimationBlendMode = 2500;
const AdditiveAnimationBlendMode = 2501;
const TrianglesDrawMode = 0;
const TriangleStripDrawMode = 1;
const TriangleFanDrawMode = 2;
const LinearEncoding = 3000;
const sRGBEncoding = 3001;
const GammaEncoding = 3007;
const RGBEEncoding = 3002;
const LogLuvEncoding = 3003;
const RGBM7Encoding = 3004;
const RGBM16Encoding = 3005;
const RGBDEncoding = 3006;
const BasicDepthPacking = 3200;
const RGBADepthPacking = 3201;
const TangentSpaceNormalMap = 0;
const ObjectSpaceNormalMap = 1;

const ZeroStencilOp = 0;
const KeepStencilOp = 7680;
const ReplaceStencilOp = 7681;
const IncrementStencilOp = 7682;
const DecrementStencilOp = 7683;
const IncrementWrapStencilOp = 34055;
const DecrementWrapStencilOp = 34056;
const InvertStencilOp = 5386;

const NeverStencilFunc = 512;
const LessStencilFunc = 513;
const EqualStencilFunc = 514;
const LessEqualStencilFunc = 515;
const GreaterStencilFunc = 516;
const NotEqualStencilFunc = 517;
const GreaterEqualStencilFunc = 518;
const AlwaysStencilFunc = 519;

const StaticDrawUsage = 35044;
const DynamicDrawUsage = 35048;
const StreamDrawUsage = 35040;
const StaticReadUsage = 35045;
const DynamicReadUsage = 35049;
const StreamReadUsage = 35041;
const StaticCopyUsage = 35046;
const DynamicCopyUsage = 35050;
const StreamCopyUsage = 35042;

const GLSL1 = '100';
const GLSL3 = '300 es';

/**
 * https://github.com/mrdoob/eventdispatcher.js/
 */

function EventDispatcher() {}

Object.assign( EventDispatcher.prototype, {

	addEventListener: function ( type, listener ) {

		if ( this._listeners === undefined ) this._listeners = {};

		const listeners = this._listeners;

		if ( listeners[ type ] === undefined ) {

			listeners[ type ] = [];

		}

		if ( listeners[ type ].indexOf( listener ) === - 1 ) {

			listeners[ type ].push( listener );

		}

	},

	hasEventListener: function ( type, listener ) {

		if ( this._listeners === undefined ) return false;

		const listeners = this._listeners;

		return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;

	},

	removeEventListener: function ( type, listener ) {

		if ( this._listeners === undefined ) return;

		const listeners = this._listeners;
		const listenerArray = listeners[ type ];

		if ( listenerArray !== undefined ) {

			const index = listenerArray.indexOf( listener );

			if ( index !== - 1 ) {

				listenerArray.splice( index, 1 );

			}

		}

	},

	dispatchEvent: function ( event ) {

		if ( this._listeners === undefined ) return;

		const listeners = this._listeners;
		const listenerArray = listeners[ event.type ];

		if ( listenerArray !== undefined ) {

			event.target = this;

			// Make a copy, in case listeners are removed while iterating.
			const array = listenerArray.slice( 0 );

			for ( let i = 0, l = array.length; i < l; i ++ ) {

				array[ i ].call( this, event );

			}

		}

	}

} );

const _lut = [];

for ( let i = 0; i < 256; i ++ ) {

	_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );

}

let _seed = 1234567;

const MathUtils = {

	DEG2RAD: Math.PI / 180,
	RAD2DEG: 180 / Math.PI,

	generateUUID: function () {

		// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136

		const d0 = Math.random() * 0xffffffff | 0;
		const d1 = Math.random() * 0xffffffff | 0;
		const d2 = Math.random() * 0xffffffff | 0;
		const d3 = Math.random() * 0xffffffff | 0;
		const uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +
			_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +
			_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +
			_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];

		// .toUpperCase() here flattens concatenated strings to save heap memory space.
		return uuid.toUpperCase();

	},

	clamp: function ( value, min, max ) {

		return Math.max( min, Math.min( max, value ) );

	},

	// compute euclidian modulo of m % n
	// https://en.wikipedia.org/wiki/Modulo_operation

	euclideanModulo: function ( n, m ) {

		return ( ( n % m ) + m ) % m;

	},

	// Linear mapping from range <a1, a2> to range <b1, b2>

	mapLinear: function ( x, a1, a2, b1, b2 ) {

		return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );

	},

	// https://en.wikipedia.org/wiki/Linear_interpolation

	lerp: function ( x, y, t ) {

		return ( 1 - t ) * x + t * y;

	},

	// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/

	damp: function ( x, y, lambda, dt ) {

		return MathUtils.lerp( x, y, 1 - Math.exp( - lambda * dt ) );

	},

	// https://www.desmos.com/calculator/vcsjnyz7x4

	pingpong: function ( x, length = 1 ) {

		return length - Math.abs( MathUtils.euclideanModulo( x, length * 2 ) - length );

	},

	// http://en.wikipedia.org/wiki/Smoothstep

	smoothstep: function ( x, min, max ) {

		if ( x <= min ) return 0;
		if ( x >= max ) return 1;

		x = ( x - min ) / ( max - min );

		return x * x * ( 3 - 2 * x );

	},

	smootherstep: function ( x, min, max ) {

		if ( x <= min ) return 0;
		if ( x >= max ) return 1;

		x = ( x - min ) / ( max - min );

		return x * x * x * ( x * ( x * 6 - 15 ) + 10 );

	},

	// Random integer from <low, high> interval

	randInt: function ( low, high ) {

		return low + Math.floor( Math.random() * ( high - low + 1 ) );

	},

	// Random float from <low, high> interval

	randFloat: function ( low, high ) {

		return low + Math.random() * ( high - low );

	},

	// Random float from <-range/2, range/2> interval

	randFloatSpread: function ( range ) {

		return range * ( 0.5 - Math.random() );

	},

	// Deterministic pseudo-random float in the interval [ 0, 1 ]

	seededRandom: function ( s ) {

		if ( s !== undefined ) _seed = s % 2147483647;

		// Park-Miller algorithm

		_seed = _seed * 16807 % 2147483647;

		return ( _seed - 1 ) / 2147483646;

	},

	degToRad: function ( degrees ) {

		return degrees * MathUtils.DEG2RAD;

	},

	radToDeg: function ( radians ) {

		return radians * MathUtils.RAD2DEG;

	},

	isPowerOfTwo: function ( value ) {

		return ( value & ( value - 1 ) ) === 0 && value !== 0;

	},

	ceilPowerOfTwo: function ( value ) {

		return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );

	},

	floorPowerOfTwo: function ( value ) {

		return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );

	},

	setQuaternionFromProperEuler: function ( q, a, b, c, order ) {

		// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles

		// rotations are applied to the axes in the order specified by 'order'
		// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'
		// angles are in radians

		const cos = Math.cos;
		const sin = Math.sin;

		const c2 = cos( b / 2 );
		const s2 = sin( b / 2 );

		const c13 = cos( ( a + c ) / 2 );
		const s13 = sin( ( a + c ) / 2 );

		const c1_3 = cos( ( a - c ) / 2 );
		const s1_3 = sin( ( a - c ) / 2 );

		const c3_1 = cos( ( c - a ) / 2 );
		const s3_1 = sin( ( c - a ) / 2 );

		switch ( order ) {

			case 'XYX':
				q.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );
				break;

			case 'YZY':
				q.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );
				break;

			case 'ZXZ':
				q.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );
				break;

			case 'XZX':
				q.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );
				break;

			case 'YXY':
				q.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );
				break;

			case 'ZYZ':
				q.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );
				break;

			default:
				console.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );

		}

	}

};

class Vector2 {

	constructor( x = 0, y = 0 ) {

		this.x = x;
		this.y = y;

	}

	get width() {

		return this.x;

	}

	set width( value ) {

		this.x = value;

	}

	get height() {

		return this.y;

	}

	set height( value ) {

		this.y = value;

	}

	set( x, y ) {

		this.x = x;
		this.y = y;

		return this;

	}

	setScalar( scalar ) {

		this.x = scalar;
		this.y = scalar;

		return this;

	}

	setX( x ) {

		this.x = x;

		return this;

	}

	setY( y ) {

		this.y = y;

		return this;

	}

	setComponent( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	}

	getComponent( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			default: throw new Error( 'index is out of range: ' + index );

		}

	}

	clone() {

		return new this.constructor( this.x, this.y );

	}

	copy( v ) {

		this.x = v.x;
		this.y = v.y;

		return this;

	}

	add( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;

		return this;

	}

	addScalar( s ) {

		this.x += s;
		this.y += s;

		return this;

	}

	addVectors( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;

		return this;

	}

	addScaledVector( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;

		return this;

	}

	sub( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;

		return this;

	}

	subScalar( s ) {

		this.x -= s;
		this.y -= s;

		return this;

	}

	subVectors( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;

		return this;

	}

	multiply( v ) {

		this.x *= v.x;
		this.y *= v.y;

		return this;

	}

	multiplyScalar( scalar ) {

		this.x *= scalar;
		this.y *= scalar;

		return this;

	}

	divide( v ) {

		this.x /= v.x;
		this.y /= v.y;

		return this;

	}

	divideScalar( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	}

	applyMatrix3( m ) {

		const x = this.x, y = this.y;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];
		this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];

		return this;

	}

	min( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );

		return this;

	}

	max( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );

		return this;

	}

	clamp( min, max ) {

		// assumes min < max, componentwise

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );

		return this;

	}

	clampScalar( minVal, maxVal ) {

		this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
		this.y = Math.max( minVal, Math.min( maxVal, this.y ) );

		return this;

	}

	clampLength( min, max ) {

		const length = this.length();

		return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

	}

	floor() {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );

		return this;

	}

	ceil() {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );

		return this;

	}

	round() {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );

		return this;

	}

	roundToZero() {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );

		return this;

	}

	negate() {

		this.x = - this.x;
		this.y = - this.y;

		return this;

	}

	dot( v ) {

		return this.x * v.x + this.y * v.y;

	}

	cross( v ) {

		return this.x * v.y - this.y * v.x;

	}

	lengthSq() {

		return this.x * this.x + this.y * this.y;

	}

	length() {

		return Math.sqrt( this.x * this.x + this.y * this.y );

	}

	manhattanLength() {

		return Math.abs( this.x ) + Math.abs( this.y );

	}

	normalize() {

		return this.divideScalar( this.length() || 1 );

	}

	angle() {

		// computes the angle in radians with respect to the positive x-axis

		const angle = Math.atan2( - this.y, - this.x ) + Math.PI;

		return angle;

	}

	distanceTo( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	}

	distanceToSquared( v ) {

		const dx = this.x - v.x, dy = this.y - v.y;
		return dx * dx + dy * dy;

	}

	manhattanDistanceTo( v ) {

		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );

	}

	setLength( length ) {

		return this.normalize().multiplyScalar( length );

	}

	lerp( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;

		return this;

	}

	lerpVectors( v1, v2, alpha ) {

		this.x = v1.x + ( v2.x - v1.x ) * alpha;
		this.y = v1.y + ( v2.y - v1.y ) * alpha;

		return this;

	}

	equals( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) );

	}

	fromArray( array, offset = 0 ) {

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;

		return array;

	}

	fromBufferAttribute( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );

		return this;

	}

	rotateAround( center, angle ) {

		const c = Math.cos( angle ), s = Math.sin( angle );

		const x = this.x - center.x;
		const y = this.y - center.y;

		this.x = x * c - y * s + center.x;
		this.y = x * s + y * c + center.y;

		return this;

	}

	random() {

		this.x = Math.random();
		this.y = Math.random();

		return this;

	}

}

Vector2.prototype.isVector2 = true;

class Matrix3 {

	constructor() {

		this.elements = [

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		];

		if ( arguments.length > 0 ) {

			console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );

		}

	}

	set( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {

		const te = this.elements;

		te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;
		te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;
		te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;

		return this;

	}

	identity() {

		this.set(

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		);

		return this;

	}

	copy( m ) {

		const te = this.elements;
		const me = m.elements;

		te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];
		te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];
		te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];

		return this;

	}

	extractBasis( xAxis, yAxis, zAxis ) {

		xAxis.setFromMatrix3Column( this, 0 );
		yAxis.setFromMatrix3Column( this, 1 );
		zAxis.setFromMatrix3Column( this, 2 );

		return this;

	}

	setFromMatrix4( m ) {

		const me = m.elements;

		this.set(

			me[ 0 ], me[ 4 ], me[ 8 ],
			me[ 1 ], me[ 5 ], me[ 9 ],
			me[ 2 ], me[ 6 ], me[ 10 ]

		);

		return this;

	}

	multiply( m ) {

		return this.multiplyMatrices( this, m );

	}

	premultiply( m ) {

		return this.multiplyMatrices( m, this );

	}

	multiplyMatrices( a, b ) {

		const ae = a.elements;
		const be = b.elements;
		const te = this.elements;

		const a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];
		const a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];
		const a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];

		const b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];
		const b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];
		const b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];

		te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;
		te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;
		te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;

		te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;
		te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;
		te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;

		te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;
		te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;
		te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;

		return this;

	}

	multiplyScalar( s ) {

		const te = this.elements;

		te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;
		te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;
		te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;

		return this;

	}

	determinant() {

		const te = this.elements;

		const a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],
			d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],
			g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];

		return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;

	}

	invert() {

		const te = this.elements,

			n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],
			n12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],
			n13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],

			t11 = n33 * n22 - n32 * n23,
			t12 = n32 * n13 - n33 * n12,
			t13 = n23 * n12 - n22 * n13,

			det = n11 * t11 + n21 * t12 + n31 * t13;

		if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );

		const detInv = 1 / det;

		te[ 0 ] = t11 * detInv;
		te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;
		te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;

		te[ 3 ] = t12 * detInv;
		te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;
		te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;

		te[ 6 ] = t13 * detInv;
		te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;
		te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;

		return this;

	}

	transpose() {

		let tmp;
		const m = this.elements;

		tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;
		tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;
		tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;

		return this;

	}

	getNormalMatrix( matrix4 ) {

		return this.setFromMatrix4( matrix4 ).invert().transpose();

	}

	transposeIntoArray( r ) {

		const m = this.elements;

		r[ 0 ] = m[ 0 ];
		r[ 1 ] = m[ 3 ];
		r[ 2 ] = m[ 6 ];
		r[ 3 ] = m[ 1 ];
		r[ 4 ] = m[ 4 ];
		r[ 5 ] = m[ 7 ];
		r[ 6 ] = m[ 2 ];
		r[ 7 ] = m[ 5 ];
		r[ 8 ] = m[ 8 ];

		return this;

	}

	setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {

		const c = Math.cos( rotation );
		const s = Math.sin( rotation );

		this.set(
			sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,
			- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,
			0, 0, 1
		);

		return this;

	}

	scale( sx, sy ) {

		const te = this.elements;

		te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;
		te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;

		return this;

	}

	rotate( theta ) {

		const c = Math.cos( theta );
		const s = Math.sin( theta );

		const te = this.elements;

		const a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];
		const a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];

		te[ 0 ] = c * a11 + s * a21;
		te[ 3 ] = c * a12 + s * a22;
		te[ 6 ] = c * a13 + s * a23;

		te[ 1 ] = - s * a11 + c * a21;
		te[ 4 ] = - s * a12 + c * a22;
		te[ 7 ] = - s * a13 + c * a23;

		return this;

	}

	translate( tx, ty ) {

		const te = this.elements;

		te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];
		te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];

		return this;

	}

	equals( matrix ) {

		const te = this.elements;
		const me = matrix.elements;

		for ( let i = 0; i < 9; i ++ ) {

			if ( te[ i ] !== me[ i ] ) return false;

		}

		return true;

	}

	fromArray( array, offset = 0 ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.elements[ i ] = array[ i + offset ];

		}

		return this;

	}

	toArray( array = [], offset = 0 ) {

		const te = this.elements;

		array[ offset ] = te[ 0 ];
		array[ offset + 1 ] = te[ 1 ];
		array[ offset + 2 ] = te[ 2 ];

		array[ offset + 3 ] = te[ 3 ];
		array[ offset + 4 ] = te[ 4 ];
		array[ offset + 5 ] = te[ 5 ];

		array[ offset + 6 ] = te[ 6 ];
		array[ offset + 7 ] = te[ 7 ];
		array[ offset + 8 ] = te[ 8 ];

		return array;

	}

	clone() {

		return new this.constructor().fromArray( this.elements );

	}

}

Matrix3.prototype.isMatrix3 = true;

let _canvas;

const ImageUtils = {

	getDataURL: function ( image ) {

		if ( /^data:/i.test( image.src ) ) {

			return image.src;

		}

		if ( typeof HTMLCanvasElement == 'undefined' ) {

			return image.src;

		}

		let canvas;

		if ( image instanceof HTMLCanvasElement ) {

			canvas = image;

		} else {

			if ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );

			_canvas.width = image.width;
			_canvas.height = image.height;

			const context = _canvas.getContext( '2d' );

			if ( image instanceof ImageData ) {

				context.putImageData( image, 0, 0 );

			} else {

				context.drawImage( image, 0, 0, image.width, image.height );

			}

			canvas = _canvas;

		}

		if ( canvas.width > 2048 || canvas.height > 2048 ) {

			return canvas.toDataURL( 'image/jpeg', 0.6 );

		} else {

			return canvas.toDataURL( 'image/png' );

		}

	}

};

let textureId = 0;

class Texture extends EventDispatcher {

	constructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {

		super();

		Object.defineProperty( this, 'id', { value: textureId ++ } );

		this.uuid = MathUtils.generateUUID();

		this.name = '';

		this.image = image;
		this.mipmaps = [];

		this.mapping = mapping;

		this.wrapS = wrapS;
		this.wrapT = wrapT;

		this.magFilter = magFilter;
		this.minFilter = minFilter;

		this.anisotropy = anisotropy;

		this.format = format;
		this.internalFormat = null;
		this.type = type;

		this.offset = new Vector2( 0, 0 );
		this.repeat = new Vector2( 1, 1 );
		this.center = new Vector2( 0, 0 );
		this.rotation = 0;

		this.matrixAutoUpdate = true;
		this.matrix = new Matrix3();

		this.generateMipmaps = true;
		this.premultiplyAlpha = false;
		this.flipY = true;
		this.unpackAlignment = 4;	// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)

		// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
		//
		// Also changing the encoding after already used by a Material will not automatically make the Material
		// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.
		this.encoding = encoding;

		this.version = 0;
		this.onUpdate = null;

	}

	updateMatrix() {

		this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( source ) {

		this.name = source.name;

		this.image = source.image;
		this.mipmaps = source.mipmaps.slice( 0 );

		this.mapping = source.mapping;

		this.wrapS = source.wrapS;
		this.wrapT = source.wrapT;

		this.magFilter = source.magFilter;
		this.minFilter = source.minFilter;

		this.anisotropy = source.anisotropy;

		this.format = source.format;
		this.internalFormat = source.internalFormat;
		this.type = source.type;

		this.offset.copy( source.offset );
		this.repeat.copy( source.repeat );
		this.center.copy( source.center );
		this.rotation = source.rotation;

		this.matrixAutoUpdate = source.matrixAutoUpdate;
		this.matrix.copy( source.matrix );

		this.generateMipmaps = source.generateMipmaps;
		this.premultiplyAlpha = source.premultiplyAlpha;
		this.flipY = source.flipY;
		this.unpackAlignment = source.unpackAlignment;
		this.encoding = source.encoding;

		return this;

	}

	toJSON( meta ) {

		const isRootObject = ( meta === undefined || typeof meta === 'string' );

		if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {

			return meta.textures[ this.uuid ];

		}

		const output = {

			metadata: {
				version: 4.5,
				type: 'Texture',
				generator: 'Texture.toJSON'
			},

			uuid: this.uuid,
			name: this.name,

			mapping: this.mapping,

			repeat: [ this.repeat.x, this.repeat.y ],
			offset: [ this.offset.x, this.offset.y ],
			center: [ this.center.x, this.center.y ],
			rotation: this.rotation,

			wrap: [ this.wrapS, this.wrapT ],

			format: this.format,
			type: this.type,
			encoding: this.encoding,

			minFilter: this.minFilter,
			magFilter: this.magFilter,
			anisotropy: this.anisotropy,

			flipY: this.flipY,

			premultiplyAlpha: this.premultiplyAlpha,
			unpackAlignment: this.unpackAlignment

		};

		if ( this.image !== undefined ) {

			// TODO: Move to THREE.Image

			const image = this.image;

			if ( image.uuid === undefined ) {

				image.uuid = MathUtils.generateUUID(); // UGH

			}

			if ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {

				let url;

				if ( Array.isArray( image ) ) {

					// process array of images e.g. CubeTexture

					url = [];

					for ( let i = 0, l = image.length; i < l; i ++ ) {

						// check cube texture with data textures

						if ( image[ i ].isDataTexture ) {

							url.push( serializeImage( image[ i ].image ) );

						} else {

							url.push( serializeImage( image[ i ] ) );

						}

					}

				} else {

					// process single image

					url = serializeImage( image );

				}

				meta.images[ image.uuid ] = {
					uuid: image.uuid,
					url: url
				};

			}

			output.image = image.uuid;

		}

		if ( ! isRootObject ) {

			meta.textures[ this.uuid ] = output;

		}

		return output;

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

	transformUv( uv ) {

		if ( this.mapping !== UVMapping ) return uv;

		uv.applyMatrix3( this.matrix );

		if ( uv.x < 0 || uv.x > 1 ) {

			switch ( this.wrapS ) {

				case RepeatWrapping:

					uv.x = uv.x - Math.floor( uv.x );
					break;

				case ClampToEdgeWrapping:

					uv.x = uv.x < 0 ? 0 : 1;
					break;

				case MirroredRepeatWrapping:

					if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {

						uv.x = Math.ceil( uv.x ) - uv.x;

					} else {

						uv.x = uv.x - Math.floor( uv.x );

					}

					break;

			}

		}

		if ( uv.y < 0 || uv.y > 1 ) {

			switch ( this.wrapT ) {

				case RepeatWrapping:

					uv.y = uv.y - Math.floor( uv.y );
					break;

				case ClampToEdgeWrapping:

					uv.y = uv.y < 0 ? 0 : 1;
					break;

				case MirroredRepeatWrapping:

					if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {

						uv.y = Math.ceil( uv.y ) - uv.y;

					} else {

						uv.y = uv.y - Math.floor( uv.y );

					}

					break;

			}

		}

		if ( this.flipY ) {

			uv.y = 1 - uv.y;

		}

		return uv;

	}

	set needsUpdate( value ) {

		if ( value === true ) this.version ++;

	}

}

Texture.DEFAULT_IMAGE = undefined;
Texture.DEFAULT_MAPPING = UVMapping;

Texture.prototype.isTexture = true;

function serializeImage( image ) {

	if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||
		( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||
		( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {

		// default images

		return ImageUtils.getDataURL( image );

	} else {

		if ( image.data ) {

			// images of DataTexture

			return {
				data: Array.prototype.slice.call( image.data ),
				width: image.width,
				height: image.height,
				type: image.data.constructor.name
			};

		} else {

			console.warn( 'THREE.Texture: Unable to serialize Texture.' );
			return {};

		}

	}

}

class Vector4 {

	constructor( x = 0, y = 0, z = 0, w = 1 ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

	}

	get width() {

		return this.z;

	}

	set width( value ) {

		this.z = value;

	}

	get height() {

		return this.w;

	}

	set height( value ) {

		this.w = value;

	}

	set( x, y, z, w ) {

		this.x = x;
		this.y = y;
		this.z = z;
		this.w = w;

		return this;

	}

	setScalar( scalar ) {

		this.x = scalar;
		this.y = scalar;
		this.z = scalar;
		this.w = scalar;

		return this;

	}

	setX( x ) {

		this.x = x;

		return this;

	}

	setY( y ) {

		this.y = y;

		return this;

	}

	setZ( z ) {

		this.z = z;

		return this;

	}

	setW( w ) {

		this.w = w;

		return this;

	}

	setComponent( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			case 3: this.w = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	}

	getComponent( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			case 3: return this.w;
			default: throw new Error( 'index is out of range: ' + index );

		}

	}

	clone() {

		return new this.constructor( this.x, this.y, this.z, this.w );

	}

	copy( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;
		this.w = ( v.w !== undefined ) ? v.w : 1;

		return this;

	}

	add( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;
		this.w += v.w;

		return this;

	}

	addScalar( s ) {

		this.x += s;
		this.y += s;
		this.z += s;
		this.w += s;

		return this;

	}

	addVectors( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;
		this.w = a.w + b.w;

		return this;

	}

	addScaledVector( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;
		this.z += v.z * s;
		this.w += v.w * s;

		return this;

	}

	sub( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;
		this.w -= v.w;

		return this;

	}

	subScalar( s ) {

		this.x -= s;
		this.y -= s;
		this.z -= s;
		this.w -= s;

		return this;

	}

	subVectors( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;
		this.w = a.w - b.w;

		return this;

	}

	multiply( v ) {

		this.x *= v.x;
		this.y *= v.y;
		this.z *= v.z;
		this.w *= v.w;

		return this;

	}

	multiplyScalar( scalar ) {

		this.x *= scalar;
		this.y *= scalar;
		this.z *= scalar;
		this.w *= scalar;

		return this;

	}

	applyMatrix4( m ) {

		const x = this.x, y = this.y, z = this.z, w = this.w;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;
		this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;

		return this;

	}

	divideScalar( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	}

	setAxisAngleFromQuaternion( q ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm

		// q is assumed to be normalized

		this.w = 2 * Math.acos( q.w );

		const s = Math.sqrt( 1 - q.w * q.w );

		if ( s < 0.0001 ) {

			this.x = 1;
			this.y = 0;
			this.z = 0;

		} else {

			this.x = q.x / s;
			this.y = q.y / s;
			this.z = q.z / s;

		}

		return this;

	}

	setAxisAngleFromRotationMatrix( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		let angle, x, y, z; // variables for result
		const epsilon = 0.01,		// margin to allow for rounding errors
			epsilon2 = 0.1,		// margin to distinguish between 0 and 180 degrees

			te = m.elements,

			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

		if ( ( Math.abs( m12 - m21 ) < epsilon ) &&
		     ( Math.abs( m13 - m31 ) < epsilon ) &&
		     ( Math.abs( m23 - m32 ) < epsilon ) ) {

			// singularity found
			// first check for identity matrix which must have +1 for all terms
			// in leading diagonal and zero in other terms

			if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&
			     ( Math.abs( m13 + m31 ) < epsilon2 ) &&
			     ( Math.abs( m23 + m32 ) < epsilon2 ) &&
			     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {

				// this singularity is identity matrix so angle = 0

				this.set( 1, 0, 0, 0 );

				return this; // zero angle, arbitrary axis

			}

			// otherwise this singularity is angle = 180

			angle = Math.PI;

			const xx = ( m11 + 1 ) / 2;
			const yy = ( m22 + 1 ) / 2;
			const zz = ( m33 + 1 ) / 2;
			const xy = ( m12 + m21 ) / 4;
			const xz = ( m13 + m31 ) / 4;
			const yz = ( m23 + m32 ) / 4;

			if ( ( xx > yy ) && ( xx > zz ) ) {

				// m11 is the largest diagonal term

				if ( xx < epsilon ) {

					x = 0;
					y = 0.707106781;
					z = 0.707106781;

				} else {

					x = Math.sqrt( xx );
					y = xy / x;
					z = xz / x;

				}

			} else if ( yy > zz ) {

				// m22 is the largest diagonal term

				if ( yy < epsilon ) {

					x = 0.707106781;
					y = 0;
					z = 0.707106781;

				} else {

					y = Math.sqrt( yy );
					x = xy / y;
					z = yz / y;

				}

			} else {

				// m33 is the largest diagonal term so base result on this

				if ( zz < epsilon ) {

					x = 0.707106781;
					y = 0.707106781;
					z = 0;

				} else {

					z = Math.sqrt( zz );
					x = xz / z;
					y = yz / z;

				}

			}

			this.set( x, y, z, angle );

			return this; // return 180 deg rotation

		}

		// as we have reached here there are no singularities so we can handle normally

		let s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +
			( m13 - m31 ) * ( m13 - m31 ) +
			( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize

		if ( Math.abs( s ) < 0.001 ) s = 1;

		// prevent divide by zero, should not happen if matrix is orthogonal and should be
		// caught by singularity test above, but I've left it in just in case

		this.x = ( m32 - m23 ) / s;
		this.y = ( m13 - m31 ) / s;
		this.z = ( m21 - m12 ) / s;
		this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );

		return this;

	}

	min( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );
		this.z = Math.min( this.z, v.z );
		this.w = Math.min( this.w, v.w );

		return this;

	}

	max( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );
		this.z = Math.max( this.z, v.z );
		this.w = Math.max( this.w, v.w );

		return this;

	}

	clamp( min, max ) {

		// assumes min < max, componentwise

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
		this.z = Math.max( min.z, Math.min( max.z, this.z ) );
		this.w = Math.max( min.w, Math.min( max.w, this.w ) );

		return this;

	}

	clampScalar( minVal, maxVal ) {

		this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
		this.y = Math.max( minVal, Math.min( maxVal, this.y ) );
		this.z = Math.max( minVal, Math.min( maxVal, this.z ) );
		this.w = Math.max( minVal, Math.min( maxVal, this.w ) );

		return this;

	}

	clampLength( min, max ) {

		const length = this.length();

		return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

	}

	floor() {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );
		this.z = Math.floor( this.z );
		this.w = Math.floor( this.w );

		return this;

	}

	ceil() {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );
		this.z = Math.ceil( this.z );
		this.w = Math.ceil( this.w );

		return this;

	}

	round() {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );
		this.z = Math.round( this.z );
		this.w = Math.round( this.w );

		return this;

	}

	roundToZero() {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );
		this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );

		return this;

	}

	negate() {

		this.x = - this.x;
		this.y = - this.y;
		this.z = - this.z;
		this.w = - this.w;

		return this;

	}

	dot( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;

	}

	lengthSq() {

		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;

	}

	length() {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );

	}

	manhattanLength() {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );

	}

	normalize() {

		return this.divideScalar( this.length() || 1 );

	}

	setLength( length ) {

		return this.normalize().multiplyScalar( length );

	}

	lerp( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;
		this.w += ( v.w - this.w ) * alpha;

		return this;

	}

	lerpVectors( v1, v2, alpha ) {

		this.x = v1.x + ( v2.x - v1.x ) * alpha;
		this.y = v1.y + ( v2.y - v1.y ) * alpha;
		this.z = v1.z + ( v2.z - v1.z ) * alpha;
		this.w = v1.w + ( v2.w - v1.w ) * alpha;

		return this;

	}

	equals( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );

	}

	fromArray( array, offset = 0 ) {

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];
		this.z = array[ offset + 2 ];
		this.w = array[ offset + 3 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;
		array[ offset + 2 ] = this.z;
		array[ offset + 3 ] = this.w;

		return array;

	}

	fromBufferAttribute( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );
		this.z = attribute.getZ( index );
		this.w = attribute.getW( index );

		return this;

	}

	random() {

		this.x = Math.random();
		this.y = Math.random();
		this.z = Math.random();
		this.w = Math.random();

		return this;

	}

}

Vector4.prototype.isVector4 = true;

/*
 In options, we can specify:
 * Texture parameters for an auto-generated target texture
 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
*/
class WebGLRenderTarget extends EventDispatcher {

	constructor( width, height, options ) {

		super();

		this.width = width;
		this.height = height;
		this.depth = 1;

		this.scissor = new Vector4( 0, 0, width, height );
		this.scissorTest = false;

		this.viewport = new Vector4( 0, 0, width, height );

		options = options || {};

		this.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );

		this.texture.image = {};
		this.texture.image.width = width;
		this.texture.image.height = height;
		this.texture.image.depth = 1;

		this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;
		this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;

		this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;
		this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;
		this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;

	}

	setTexture( texture ) {

		texture.image = {
			width: this.width,
			height: this.height,
			depth: this.depth
		};

		this.texture = texture;

	}

	setSize( width, height, depth = 1 ) {

		if ( this.width !== width || this.height !== height || this.depth !== depth ) {

			this.width = width;
			this.height = height;
			this.depth = depth;

			this.texture.image.width = width;
			this.texture.image.height = height;
			this.texture.image.depth = depth;

			this.dispose();

		}

		this.viewport.set( 0, 0, width, height );
		this.scissor.set( 0, 0, width, height );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( source ) {

		this.width = source.width;
		this.height = source.height;
		this.depth = source.depth;

		this.viewport.copy( source.viewport );

		this.texture = source.texture.clone();

		this.depthBuffer = source.depthBuffer;
		this.stencilBuffer = source.stencilBuffer;
		this.depthTexture = source.depthTexture;

		return this;

	}

	dispose() {

		this.dispatchEvent( { type: 'dispose' } );

	}

}

WebGLRenderTarget.prototype.isWebGLRenderTarget = true;

class WebGLMultisampleRenderTarget extends WebGLRenderTarget {

	constructor( width, height, options ) {

		super( width, height, options );

		this.samples = 4;

	}

	copy( source ) {

		super.copy.call( this, source );

		this.samples = source.samples;

		return this;

	}

}

WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;

class Quaternion {

	constructor( x = 0, y = 0, z = 0, w = 1 ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._w = w;

	}

	static slerp( qa, qb, qm, t ) {

		return qm.copy( qa ).slerp( qb, t );

	}

	static slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {

		// fuzz-free, array-based Quaternion SLERP operation

		let x0 = src0[ srcOffset0 + 0 ],
			y0 = src0[ srcOffset0 + 1 ],
			z0 = src0[ srcOffset0 + 2 ],
			w0 = src0[ srcOffset0 + 3 ];

		const x1 = src1[ srcOffset1 + 0 ],
			y1 = src1[ srcOffset1 + 1 ],
			z1 = src1[ srcOffset1 + 2 ],
			w1 = src1[ srcOffset1 + 3 ];

		if ( t === 0 ) {

			dst[ dstOffset + 0 ] = x0;
			dst[ dstOffset + 1 ] = y0;
			dst[ dstOffset + 2 ] = z0;
			dst[ dstOffset + 3 ] = w0;
			return;

		}

		if ( t === 1 ) {

			dst[ dstOffset + 0 ] = x1;
			dst[ dstOffset + 1 ] = y1;
			dst[ dstOffset + 2 ] = z1;
			dst[ dstOffset + 3 ] = w1;
			return;

		}

		if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {

			let s = 1 - t;
			const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,
				dir = ( cos >= 0 ? 1 : - 1 ),
				sqrSin = 1 - cos * cos;

			// Skip the Slerp for tiny steps to avoid numeric problems:
			if ( sqrSin > Number.EPSILON ) {

				const sin = Math.sqrt( sqrSin ),
					len = Math.atan2( sin, cos * dir );

				s = Math.sin( s * len ) / sin;
				t = Math.sin( t * len ) / sin;

			}

			const tDir = t * dir;

			x0 = x0 * s + x1 * tDir;
			y0 = y0 * s + y1 * tDir;
			z0 = z0 * s + z1 * tDir;
			w0 = w0 * s + w1 * tDir;

			// Normalize in case we just did a lerp:
			if ( s === 1 - t ) {

				const f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );

				x0 *= f;
				y0 *= f;
				z0 *= f;
				w0 *= f;

			}

		}

		dst[ dstOffset ] = x0;
		dst[ dstOffset + 1 ] = y0;
		dst[ dstOffset + 2 ] = z0;
		dst[ dstOffset + 3 ] = w0;

	}

	static multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {

		const x0 = src0[ srcOffset0 ];
		const y0 = src0[ srcOffset0 + 1 ];
		const z0 = src0[ srcOffset0 + 2 ];
		const w0 = src0[ srcOffset0 + 3 ];

		const x1 = src1[ srcOffset1 ];
		const y1 = src1[ srcOffset1 + 1 ];
		const z1 = src1[ srcOffset1 + 2 ];
		const w1 = src1[ srcOffset1 + 3 ];

		dst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;
		dst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;
		dst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;
		dst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;

		return dst;

	}

	get x() {

		return this._x;

	}

	set x( value ) {

		this._x = value;
		this._onChangeCallback();

	}

	get y() {

		return this._y;

	}

	set y( value ) {

		this._y = value;
		this._onChangeCallback();

	}

	get z() {

		return this._z;

	}

	set z( value ) {

		this._z = value;
		this._onChangeCallback();

	}

	get w() {

		return this._w;

	}

	set w( value ) {

		this._w = value;
		this._onChangeCallback();

	}

	set( x, y, z, w ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._w = w;

		this._onChangeCallback();

		return this;

	}

	clone() {

		return new this.constructor( this._x, this._y, this._z, this._w );

	}

	copy( quaternion ) {

		this._x = quaternion.x;
		this._y = quaternion.y;
		this._z = quaternion.z;
		this._w = quaternion.w;

		this._onChangeCallback();

		return this;

	}

	setFromEuler( euler, update ) {

		if ( ! ( euler && euler.isEuler ) ) {

			throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );

		}

		const x = euler._x, y = euler._y, z = euler._z, order = euler._order;

		// http://www.mathworks.com/matlabcentral/fileexchange/
		// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
		//	content/SpinCalc.m

		const cos = Math.cos;
		const sin = Math.sin;

		const c1 = cos( x / 2 );
		const c2 = cos( y / 2 );
		const c3 = cos( z / 2 );

		const s1 = sin( x / 2 );
		const s2 = sin( y / 2 );
		const s3 = sin( z / 2 );

		switch ( order ) {

			case 'XYZ':
				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;
				break;

			case 'YXZ':
				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;
				break;

			case 'ZXY':
				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;
				break;

			case 'ZYX':
				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;
				break;

			case 'YZX':
				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;
				break;

			case 'XZY':
				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;
				break;

			default:
				console.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );

		}

		if ( update !== false ) this._onChangeCallback();

		return this;

	}

	setFromAxisAngle( axis, angle ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm

		// assumes axis is normalized

		const halfAngle = angle / 2, s = Math.sin( halfAngle );

		this._x = axis.x * s;
		this._y = axis.y * s;
		this._z = axis.z * s;
		this._w = Math.cos( halfAngle );

		this._onChangeCallback();

		return this;

	}

	setFromRotationMatrix( m ) {

		// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		const te = m.elements,

			m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
			m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
			m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],

			trace = m11 + m22 + m33;

		if ( trace > 0 ) {

			const s = 0.5 / Math.sqrt( trace + 1.0 );

			this._w = 0.25 / s;
			this._x = ( m32 - m23 ) * s;
			this._y = ( m13 - m31 ) * s;
			this._z = ( m21 - m12 ) * s;

		} else if ( m11 > m22 && m11 > m33 ) {

			const s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );

			this._w = ( m32 - m23 ) / s;
			this._x = 0.25 * s;
			this._y = ( m12 + m21 ) / s;
			this._z = ( m13 + m31 ) / s;

		} else if ( m22 > m33 ) {

			const s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );

			this._w = ( m13 - m31 ) / s;
			this._x = ( m12 + m21 ) / s;
			this._y = 0.25 * s;
			this._z = ( m23 + m32 ) / s;

		} else {

			const s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );

			this._w = ( m21 - m12 ) / s;
			this._x = ( m13 + m31 ) / s;
			this._y = ( m23 + m32 ) / s;
			this._z = 0.25 * s;

		}

		this._onChangeCallback();

		return this;

	}

	setFromUnitVectors( vFrom, vTo ) {

		// assumes direction vectors vFrom and vTo are normalized

		const EPS = 0.000001;

		let r = vFrom.dot( vTo ) + 1;

		if ( r < EPS ) {

			r = 0;

			if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {

				this._x = - vFrom.y;
				this._y = vFrom.x;
				this._z = 0;
				this._w = r;

			} else {

				this._x = 0;
				this._y = - vFrom.z;
				this._z = vFrom.y;
				this._w = r;

			}

		} else {

			// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3

			this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;
			this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;
			this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;
			this._w = r;

		}

		return this.normalize();

	}

	angleTo( q ) {

		return 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );

	}

	rotateTowards( q, step ) {

		const angle = this.angleTo( q );

		if ( angle === 0 ) return this;

		const t = Math.min( 1, step / angle );

		this.slerp( q, t );

		return this;

	}

	identity() {

		return this.set( 0, 0, 0, 1 );

	}

	invert() {

		// quaternion is assumed to have unit length

		return this.conjugate();

	}

	conjugate() {

		this._x *= - 1;
		this._y *= - 1;
		this._z *= - 1;

		this._onChangeCallback();

		return this;

	}

	dot( v ) {

		return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;

	}

	lengthSq() {

		return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;

	}

	length() {

		return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );

	}

	normalize() {

		let l = this.length();

		if ( l === 0 ) {

			this._x = 0;
			this._y = 0;
			this._z = 0;
			this._w = 1;

		} else {

			l = 1 / l;

			this._x = this._x * l;
			this._y = this._y * l;
			this._z = this._z * l;
			this._w = this._w * l;

		}

		this._onChangeCallback();

		return this;

	}

	multiply( q, p ) {

		if ( p !== undefined ) {

			console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );
			return this.multiplyQuaternions( q, p );

		}

		return this.multiplyQuaternions( this, q );

	}

	premultiply( q ) {

		return this.multiplyQuaternions( q, this );

	}

	multiplyQuaternions( a, b ) {

		// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm

		const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
		const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;

		this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
		this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
		this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
		this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;

		this._onChangeCallback();

		return this;

	}

	slerp( qb, t ) {

		if ( t === 0 ) return this;
		if ( t === 1 ) return this.copy( qb );

		const x = this._x, y = this._y, z = this._z, w = this._w;

		// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/

		let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;

		if ( cosHalfTheta < 0 ) {

			this._w = - qb._w;
			this._x = - qb._x;
			this._y = - qb._y;
			this._z = - qb._z;

			cosHalfTheta = - cosHalfTheta;

		} else {

			this.copy( qb );

		}

		if ( cosHalfTheta >= 1.0 ) {

			this._w = w;
			this._x = x;
			this._y = y;
			this._z = z;

			return this;

		}

		const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;

		if ( sqrSinHalfTheta <= Number.EPSILON ) {

			const s = 1 - t;
			this._w = s * w + t * this._w;
			this._x = s * x + t * this._x;
			this._y = s * y + t * this._y;
			this._z = s * z + t * this._z;

			this.normalize();
			this._onChangeCallback();

			return this;

		}

		const sinHalfTheta = Math.sqrt( sqrSinHalfTheta );
		const halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );
		const ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,
			ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;

		this._w = ( w * ratioA + this._w * ratioB );
		this._x = ( x * ratioA + this._x * ratioB );
		this._y = ( y * ratioA + this._y * ratioB );
		this._z = ( z * ratioA + this._z * ratioB );

		this._onChangeCallback();

		return this;

	}

	equals( quaternion ) {

		return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );

	}

	fromArray( array, offset = 0 ) {

		this._x = array[ offset ];
		this._y = array[ offset + 1 ];
		this._z = array[ offset + 2 ];
		this._w = array[ offset + 3 ];

		this._onChangeCallback();

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this._x;
		array[ offset + 1 ] = this._y;
		array[ offset + 2 ] = this._z;
		array[ offset + 3 ] = this._w;

		return array;

	}

	fromBufferAttribute( attribute, index ) {

		this._x = attribute.getX( index );
		this._y = attribute.getY( index );
		this._z = attribute.getZ( index );
		this._w = attribute.getW( index );

		return this;

	}

	_onChange( callback ) {

		this._onChangeCallback = callback;

		return this;

	}

	_onChangeCallback() {}

}

Quaternion.prototype.isQuaternion = true;

class Vector3 {

	constructor( x = 0, y = 0, z = 0 ) {

		this.x = x;
		this.y = y;
		this.z = z;

	}

	set( x, y, z ) {

		if ( z === undefined ) z = this.z; // sprite.scale.set(x,y)

		this.x = x;
		this.y = y;
		this.z = z;

		return this;

	}

	setScalar( scalar ) {

		this.x = scalar;
		this.y = scalar;
		this.z = scalar;

		return this;

	}

	setX( x ) {

		this.x = x;

		return this;

	}

	setY( y ) {

		this.y = y;

		return this;

	}

	setZ( z ) {

		this.z = z;

		return this;

	}

	setComponent( index, value ) {

		switch ( index ) {

			case 0: this.x = value; break;
			case 1: this.y = value; break;
			case 2: this.z = value; break;
			default: throw new Error( 'index is out of range: ' + index );

		}

		return this;

	}

	getComponent( index ) {

		switch ( index ) {

			case 0: return this.x;
			case 1: return this.y;
			case 2: return this.z;
			default: throw new Error( 'index is out of range: ' + index );

		}

	}

	clone() {

		return new this.constructor( this.x, this.y, this.z );

	}

	copy( v ) {

		this.x = v.x;
		this.y = v.y;
		this.z = v.z;

		return this;

	}

	add( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
			return this.addVectors( v, w );

		}

		this.x += v.x;
		this.y += v.y;
		this.z += v.z;

		return this;

	}

	addScalar( s ) {

		this.x += s;
		this.y += s;
		this.z += s;

		return this;

	}

	addVectors( a, b ) {

		this.x = a.x + b.x;
		this.y = a.y + b.y;
		this.z = a.z + b.z;

		return this;

	}

	addScaledVector( v, s ) {

		this.x += v.x * s;
		this.y += v.y * s;
		this.z += v.z * s;

		return this;

	}

	sub( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
			return this.subVectors( v, w );

		}

		this.x -= v.x;
		this.y -= v.y;
		this.z -= v.z;

		return this;

	}

	subScalar( s ) {

		this.x -= s;
		this.y -= s;
		this.z -= s;

		return this;

	}

	subVectors( a, b ) {

		this.x = a.x - b.x;
		this.y = a.y - b.y;
		this.z = a.z - b.z;

		return this;

	}

	multiply( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
			return this.multiplyVectors( v, w );

		}

		this.x *= v.x;
		this.y *= v.y;
		this.z *= v.z;

		return this;

	}

	multiplyScalar( scalar ) {

		this.x *= scalar;
		this.y *= scalar;
		this.z *= scalar;

		return this;

	}

	multiplyVectors( a, b ) {

		this.x = a.x * b.x;
		this.y = a.y * b.y;
		this.z = a.z * b.z;

		return this;

	}

	applyEuler( euler ) {

		if ( ! ( euler && euler.isEuler ) ) {

			console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );

		}

		return this.applyQuaternion( _quaternion.setFromEuler( euler ) );

	}

	applyAxisAngle( axis, angle ) {

		return this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );

	}

	applyMatrix3( m ) {

		const x = this.x, y = this.y, z = this.z;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;
		this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;
		this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;

		return this;

	}

	applyNormalMatrix( m ) {

		return this.applyMatrix3( m ).normalize();

	}

	applyMatrix4( m ) {

		const x = this.x, y = this.y, z = this.z;
		const e = m.elements;

		const w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );

		this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;
		this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;
		this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;

		return this;

	}

	applyQuaternion( q ) {

		const x = this.x, y = this.y, z = this.z;
		const qx = q.x, qy = q.y, qz = q.z, qw = q.w;

		// calculate quat * vector

		const ix = qw * x + qy * z - qz * y;
		const iy = qw * y + qz * x - qx * z;
		const iz = qw * z + qx * y - qy * x;
		const iw = - qx * x - qy * y - qz * z;

		// calculate result * inverse quat

		this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
		this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
		this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;

		return this;

	}

	project( camera ) {

		return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );

	}

	unproject( camera ) {

		return this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );

	}

	transformDirection( m ) {

		// input: THREE.Matrix4 affine matrix
		// vector interpreted as a direction

		const x = this.x, y = this.y, z = this.z;
		const e = m.elements;

		this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;
		this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;
		this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;

		return this.normalize();

	}

	divide( v ) {

		this.x /= v.x;
		this.y /= v.y;
		this.z /= v.z;

		return this;

	}

	divideScalar( scalar ) {

		return this.multiplyScalar( 1 / scalar );

	}

	min( v ) {

		this.x = Math.min( this.x, v.x );
		this.y = Math.min( this.y, v.y );
		this.z = Math.min( this.z, v.z );

		return this;

	}

	max( v ) {

		this.x = Math.max( this.x, v.x );
		this.y = Math.max( this.y, v.y );
		this.z = Math.max( this.z, v.z );

		return this;

	}

	clamp( min, max ) {

		// assumes min < max, componentwise

		this.x = Math.max( min.x, Math.min( max.x, this.x ) );
		this.y = Math.max( min.y, Math.min( max.y, this.y ) );
		this.z = Math.max( min.z, Math.min( max.z, this.z ) );

		return this;

	}

	clampScalar( minVal, maxVal ) {

		this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
		this.y = Math.max( minVal, Math.min( maxVal, this.y ) );
		this.z = Math.max( minVal, Math.min( maxVal, this.z ) );

		return this;

	}

	clampLength( min, max ) {

		const length = this.length();

		return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

	}

	floor() {

		this.x = Math.floor( this.x );
		this.y = Math.floor( this.y );
		this.z = Math.floor( this.z );

		return this;

	}

	ceil() {

		this.x = Math.ceil( this.x );
		this.y = Math.ceil( this.y );
		this.z = Math.ceil( this.z );

		return this;

	}

	round() {

		this.x = Math.round( this.x );
		this.y = Math.round( this.y );
		this.z = Math.round( this.z );

		return this;

	}

	roundToZero() {

		this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
		this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
		this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );

		return this;

	}

	negate() {

		this.x = - this.x;
		this.y = - this.y;
		this.z = - this.z;

		return this;

	}

	dot( v ) {

		return this.x * v.x + this.y * v.y + this.z * v.z;

	}

	// TODO lengthSquared?

	lengthSq() {

		return this.x * this.x + this.y * this.y + this.z * this.z;

	}

	length() {

		return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );

	}

	manhattanLength() {

		return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );

	}

	normalize() {

		return this.divideScalar( this.length() || 1 );

	}

	setLength( length ) {

		return this.normalize().multiplyScalar( length );

	}

	lerp( v, alpha ) {

		this.x += ( v.x - this.x ) * alpha;
		this.y += ( v.y - this.y ) * alpha;
		this.z += ( v.z - this.z ) * alpha;

		return this;

	}

	lerpVectors( v1, v2, alpha ) {

		this.x = v1.x + ( v2.x - v1.x ) * alpha;
		this.y = v1.y + ( v2.y - v1.y ) * alpha;
		this.z = v1.z + ( v2.z - v1.z ) * alpha;

		return this;

	}

	cross( v, w ) {

		if ( w !== undefined ) {

			console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );
			return this.crossVectors( v, w );

		}

		return this.crossVectors( this, v );

	}

	crossVectors( a, b ) {

		const ax = a.x, ay = a.y, az = a.z;
		const bx = b.x, by = b.y, bz = b.z;

		this.x = ay * bz - az * by;
		this.y = az * bx - ax * bz;
		this.z = ax * by - ay * bx;

		return this;

	}

	projectOnVector( v ) {

		const denominator = v.lengthSq();

		if ( denominator === 0 ) return this.set( 0, 0, 0 );

		const scalar = v.dot( this ) / denominator;

		return this.copy( v ).multiplyScalar( scalar );

	}

	projectOnPlane( planeNormal ) {

		_vector.copy( this ).projectOnVector( planeNormal );

		return this.sub( _vector );

	}

	reflect( normal ) {

		// reflect incident vector off plane orthogonal to normal
		// normal is assumed to have unit length

		return this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );

	}

	angleTo( v ) {

		const denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );

		if ( denominator === 0 ) return Math.PI / 2;

		const theta = this.dot( v ) / denominator;

		// clamp, to handle numerical problems

		return Math.acos( MathUtils.clamp( theta, - 1, 1 ) );

	}

	distanceTo( v ) {

		return Math.sqrt( this.distanceToSquared( v ) );

	}

	distanceToSquared( v ) {

		const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;

		return dx * dx + dy * dy + dz * dz;

	}

	manhattanDistanceTo( v ) {

		return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );

	}

	setFromSpherical( s ) {

		return this.setFromSphericalCoords( s.radius, s.phi, s.theta );

	}

	setFromSphericalCoords( radius, phi, theta ) {

		const sinPhiRadius = Math.sin( phi ) * radius;

		this.x = sinPhiRadius * Math.sin( theta );
		this.y = Math.cos( phi ) * radius;
		this.z = sinPhiRadius * Math.cos( theta );

		return this;

	}

	setFromCylindrical( c ) {

		return this.setFromCylindricalCoords( c.radius, c.theta, c.y );

	}

	setFromCylindricalCoords( radius, theta, y ) {

		this.x = radius * Math.sin( theta );
		this.y = y;
		this.z = radius * Math.cos( theta );

		return this;

	}

	setFromMatrixPosition( m ) {

		const e = m.elements;

		this.x = e[ 12 ];
		this.y = e[ 13 ];
		this.z = e[ 14 ];

		return this;

	}

	setFromMatrixScale( m ) {

		const sx = this.setFromMatrixColumn( m, 0 ).length();
		const sy = this.setFromMatrixColumn( m, 1 ).length();
		const sz = this.setFromMatrixColumn( m, 2 ).length();

		this.x = sx;
		this.y = sy;
		this.z = sz;

		return this;

	}

	setFromMatrixColumn( m, index ) {

		return this.fromArray( m.elements, index * 4 );

	}

	setFromMatrix3Column( m, index ) {

		return this.fromArray( m.elements, index * 3 );

	}

	equals( v ) {

		return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );

	}

	fromArray( array, offset = 0 ) {

		this.x = array[ offset ];
		this.y = array[ offset + 1 ];
		this.z = array[ offset + 2 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.x;
		array[ offset + 1 ] = this.y;
		array[ offset + 2 ] = this.z;

		return array;

	}

	fromBufferAttribute( attribute, index, offset ) {

		if ( offset !== undefined ) {

			console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );

		}

		this.x = attribute.getX( index );
		this.y = attribute.getY( index );
		this.z = attribute.getZ( index );

		return this;

	}

	random() {

		this.x = Math.random();
		this.y = Math.random();
		this.z = Math.random();

		return this;

	}

}

Vector3.prototype.isVector3 = true;

const _vector = /*@__PURE__*/ new Vector3();
const _quaternion = /*@__PURE__*/ new Quaternion();

class Box3 {

	constructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {

		this.min = min;
		this.max = max;

	}

	set( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	}

	setFromArray( array ) {

		let minX = + Infinity;
		let minY = + Infinity;
		let minZ = + Infinity;

		let maxX = - Infinity;
		let maxY = - Infinity;
		let maxZ = - Infinity;

		for ( let i = 0, l = array.length; i < l; i += 3 ) {

			const x = array[ i ];
			const y = array[ i + 1 ];
			const z = array[ i + 2 ];

			if ( x < minX ) minX = x;
			if ( y < minY ) minY = y;
			if ( z < minZ ) minZ = z;

			if ( x > maxX ) maxX = x;
			if ( y > maxY ) maxY = y;
			if ( z > maxZ ) maxZ = z;

		}

		this.min.set( minX, minY, minZ );
		this.max.set( maxX, maxY, maxZ );

		return this;

	}

	setFromBufferAttribute( attribute ) {

		let minX = + Infinity;
		let minY = + Infinity;
		let minZ = + Infinity;

		let maxX = - Infinity;
		let maxY = - Infinity;
		let maxZ = - Infinity;

		for ( let i = 0, l = attribute.count; i < l; i ++ ) {

			const x = attribute.getX( i );
			const y = attribute.getY( i );
			const z = attribute.getZ( i );

			if ( x < minX ) minX = x;
			if ( y < minY ) minY = y;
			if ( z < minZ ) minZ = z;

			if ( x > maxX ) maxX = x;
			if ( y > maxY ) maxY = y;
			if ( z > maxZ ) maxZ = z;

		}

		this.min.set( minX, minY, minZ );
		this.max.set( maxX, maxY, maxZ );

		return this;

	}

	setFromPoints( points ) {

		this.makeEmpty();

		for ( let i = 0, il = points.length; i < il; i ++ ) {

			this.expandByPoint( points[ i ] );

		}

		return this;

	}

	setFromCenterAndSize( center, size ) {

		const halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );

		this.min.copy( center ).sub( halfSize );
		this.max.copy( center ).add( halfSize );

		return this;

	}

	setFromObject( object ) {

		this.makeEmpty();

		return this.expandByObject( object );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	}

	makeEmpty() {

		this.min.x = this.min.y = this.min.z = + Infinity;
		this.max.x = this.max.y = this.max.z = - Infinity;

		return this;

	}

	isEmpty() {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );

	}

	getCenter( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Box3: .getCenter() target is now required' );
			target = new Vector3();

		}

		return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	}

	getSize( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Box3: .getSize() target is now required' );
			target = new Vector3();

		}

		return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );

	}

	expandByPoint( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	}

	expandByVector( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	}

	expandByScalar( scalar ) {

		this.min.addScalar( - scalar );
		this.max.addScalar( scalar );

		return this;

	}

	expandByObject( object ) {

		// Computes the world-axis-aligned bounding box of an object (including its children),
		// accounting for both the object's, and children's, world transforms

		object.updateWorldMatrix( false, false );

		const geometry = object.geometry;

		if ( geometry !== undefined ) {

			if ( geometry.boundingBox === null ) {

				geometry.computeBoundingBox();

			}

			_box.copy( geometry.boundingBox );
			_box.applyMatrix4( object.matrixWorld );

			this.union( _box );

		}

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			this.expandByObject( children[ i ] );

		}

		return this;

	}

	containsPoint( point ) {

		return point.x < this.min.x || point.x > this.max.x ||
			point.y < this.min.y || point.y > this.max.y ||
			point.z < this.min.z || point.z > this.max.z ? false : true;

	}

	containsBox( box ) {

		return this.min.x <= box.min.x && box.max.x <= this.max.x &&
			this.min.y <= box.min.y && box.max.y <= this.max.y &&
			this.min.z <= box.min.z && box.max.z <= this.max.z;

	}

	getParameter( point, target ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		if ( target === undefined ) {

			console.warn( 'THREE.Box3: .getParameter() target is now required' );
			target = new Vector3();

		}

		return target.set(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y ),
			( point.z - this.min.z ) / ( this.max.z - this.min.z )
		);

	}

	intersectsBox( box ) {

		// using 6 splitting planes to rule out intersections.
		return box.max.x < this.min.x || box.min.x > this.max.x ||
			box.max.y < this.min.y || box.min.y > this.max.y ||
			box.max.z < this.min.z || box.min.z > this.max.z ? false : true;

	}

	intersectsSphere( sphere ) {

		// Find the point on the AABB closest to the sphere center.
		this.clampPoint( sphere.center, _vector$1 );

		// If that point is inside the sphere, the AABB and sphere intersect.
		return _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );

	}

	intersectsPlane( plane ) {

		// We compute the minimum and maximum dot product values. If those values
		// are on the same side (back or front) of the plane, then there is no intersection.

		let min, max;

		if ( plane.normal.x > 0 ) {

			min = plane.normal.x * this.min.x;
			max = plane.normal.x * this.max.x;

		} else {

			min = plane.normal.x * this.max.x;
			max = plane.normal.x * this.min.x;

		}

		if ( plane.normal.y > 0 ) {

			min += plane.normal.y * this.min.y;
			max += plane.normal.y * this.max.y;

		} else {

			min += plane.normal.y * this.max.y;
			max += plane.normal.y * this.min.y;

		}

		if ( plane.normal.z > 0 ) {

			min += plane.normal.z * this.min.z;
			max += plane.normal.z * this.max.z;

		} else {

			min += plane.normal.z * this.max.z;
			max += plane.normal.z * this.min.z;

		}

		return ( min <= - plane.constant && max >= - plane.constant );

	}

	intersectsTriangle( triangle ) {

		if ( this.isEmpty() ) {

			return false;

		}

		// compute box center and extents
		this.getCenter( _center );
		_extents.subVectors( this.max, _center );

		// translate triangle to aabb origin
		_v0.subVectors( triangle.a, _center );
		_v1.subVectors( triangle.b, _center );
		_v2.subVectors( triangle.c, _center );

		// compute edge vectors for triangle
		_f0.subVectors( _v1, _v0 );
		_f1.subVectors( _v2, _v1 );
		_f2.subVectors( _v0, _v2 );

		// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
		// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
		// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
		let axes = [
			0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,
			_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,
			- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0
		];
		if ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {

			return false;

		}

		// test 3 face normals from the aabb
		axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];
		if ( ! satForAxes( axes, _v0, _v1, _v2, _extents ) ) {

			return false;

		}

		// finally testing the face normal of the triangle
		// use already existing triangle edge vectors here
		_triangleNormal.crossVectors( _f0, _f1 );
		axes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];

		return satForAxes( axes, _v0, _v1, _v2, _extents );

	}

	clampPoint( point, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Box3: .clampPoint() target is now required' );
			target = new Vector3();

		}

		return target.copy( point ).clamp( this.min, this.max );

	}

	distanceToPoint( point ) {

		const clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );

		return clampedPoint.sub( point ).length();

	}

	getBoundingSphere( target ) {

		if ( target === undefined ) {

			console.error( 'THREE.Box3: .getBoundingSphere() target is now required' );
			//target = new Sphere(); // removed to avoid cyclic dependency

		}

		this.getCenter( target.center );

		target.radius = this.getSize( _vector$1 ).length() * 0.5;

		return target;

	}

	intersect( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
		if ( this.isEmpty() ) this.makeEmpty();

		return this;

	}

	union( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	}

	applyMatrix4( matrix ) {

		// transform of empty box is an empty box.
		if ( this.isEmpty() ) return this;

		// NOTE: I am using a binary pattern to specify all 2^3 combinations below
		_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000
		_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001
		_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010
		_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011
		_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100
		_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101
		_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110
		_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111

		this.setFromPoints( _points );

		return this;

	}

	translate( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	}

	equals( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	}

}

Box3.prototype.isBox3 = true;

const _points = [
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3(),
	/*@__PURE__*/ new Vector3()
];

const _vector$1 = /*@__PURE__*/ new Vector3();

const _box = /*@__PURE__*/ new Box3();

// triangle centered vertices

const _v0 = /*@__PURE__*/ new Vector3();
const _v1 = /*@__PURE__*/ new Vector3();
const _v2 = /*@__PURE__*/ new Vector3();

// triangle edge vectors

const _f0 = /*@__PURE__*/ new Vector3();
const _f1 = /*@__PURE__*/ new Vector3();
const _f2 = /*@__PURE__*/ new Vector3();

const _center = /*@__PURE__*/ new Vector3();
const _extents = /*@__PURE__*/ new Vector3();
const _triangleNormal = /*@__PURE__*/ new Vector3();
const _testAxis = /*@__PURE__*/ new Vector3();

function satForAxes( axes, v0, v1, v2, extents ) {

	for ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {

		_testAxis.fromArray( axes, i );
		// project the aabb onto the seperating axis
		const r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );
		// project all 3 vertices of the triangle onto the seperating axis
		const p0 = v0.dot( _testAxis );
		const p1 = v1.dot( _testAxis );
		const p2 = v2.dot( _testAxis );
		// actual test, basically see if either of the most extreme of the triangle points intersects r
		if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {

			// points of the projected triangle are outside the projected half-length of the aabb
			// the axis is seperating and we can exit
			return false;

		}

	}

	return true;

}

const _box$1 = /*@__PURE__*/ new Box3();

class Sphere {

	constructor( center = new Vector3(), radius = - 1 ) {

		this.center = center;
		this.radius = radius;

	}

	set( center, radius ) {

		this.center.copy( center );
		this.radius = radius;

		return this;

	}

	setFromPoints( points, optionalCenter ) {

		const center = this.center;

		if ( optionalCenter !== undefined ) {

			center.copy( optionalCenter );

		} else {

			_box$1.setFromPoints( points ).getCenter( center );

		}

		let maxRadiusSq = 0;

		for ( let i = 0, il = points.length; i < il; i ++ ) {

			maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );

		}

		this.radius = Math.sqrt( maxRadiusSq );

		return this;

	}

	copy( sphere ) {

		this.center.copy( sphere.center );
		this.radius = sphere.radius;

		return this;

	}

	isEmpty() {

		return ( this.radius < 0 );

	}

	makeEmpty() {

		this.center.set( 0, 0, 0 );
		this.radius = - 1;

		return this;

	}

	containsPoint( point ) {

		return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );

	}

	distanceToPoint( point ) {

		return ( point.distanceTo( this.center ) - this.radius );

	}

	intersectsSphere( sphere ) {

		const radiusSum = this.radius + sphere.radius;

		return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );

	}

	intersectsBox( box ) {

		return box.intersectsSphere( this );

	}

	intersectsPlane( plane ) {

		return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;

	}

	clampPoint( point, target ) {

		const deltaLengthSq = this.center.distanceToSquared( point );

		if ( target === undefined ) {

			console.warn( 'THREE.Sphere: .clampPoint() target is now required' );
			target = new Vector3();

		}

		target.copy( point );

		if ( deltaLengthSq > ( this.radius * this.radius ) ) {

			target.sub( this.center ).normalize();
			target.multiplyScalar( this.radius ).add( this.center );

		}

		return target;

	}

	getBoundingBox( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );
			target = new Box3();

		}

		if ( this.isEmpty() ) {

			// Empty sphere produces empty bounding box
			target.makeEmpty();
			return target;

		}

		target.set( this.center, this.center );
		target.expandByScalar( this.radius );

		return target;

	}

	applyMatrix4( matrix ) {

		this.center.applyMatrix4( matrix );
		this.radius = this.radius * matrix.getMaxScaleOnAxis();

		return this;

	}

	translate( offset ) {

		this.center.add( offset );

		return this;

	}

	equals( sphere ) {

		return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

const _vector$2 = /*@__PURE__*/ new Vector3();
const _segCenter = /*@__PURE__*/ new Vector3();
const _segDir = /*@__PURE__*/ new Vector3();
const _diff = /*@__PURE__*/ new Vector3();

const _edge1 = /*@__PURE__*/ new Vector3();
const _edge2 = /*@__PURE__*/ new Vector3();
const _normal = /*@__PURE__*/ new Vector3();

class Ray {

	constructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {

		this.origin = origin;
		this.direction = direction;

	}

	set( origin, direction ) {

		this.origin.copy( origin );
		this.direction.copy( direction );

		return this;

	}

	copy( ray ) {

		this.origin.copy( ray.origin );
		this.direction.copy( ray.direction );

		return this;

	}

	at( t, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Ray: .at() target is now required' );
			target = new Vector3();

		}

		return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );

	}

	lookAt( v ) {

		this.direction.copy( v ).sub( this.origin ).normalize();

		return this;

	}

	recast( t ) {

		this.origin.copy( this.at( t, _vector$2 ) );

		return this;

	}

	closestPointToPoint( point, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );
			target = new Vector3();

		}

		target.subVectors( point, this.origin );

		const directionDistance = target.dot( this.direction );

		if ( directionDistance < 0 ) {

			return target.copy( this.origin );

		}

		return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

	}

	distanceToPoint( point ) {

		return Math.sqrt( this.distanceSqToPoint( point ) );

	}

	distanceSqToPoint( point ) {

		const directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );

		// point behind the ray

		if ( directionDistance < 0 ) {

			return this.origin.distanceToSquared( point );

		}

		_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

		return _vector$2.distanceToSquared( point );

	}

	distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {

		// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
		// It returns the min distance between the ray and the segment
		// defined by v0 and v1
		// It can also set two optional targets :
		// - The closest point on the ray
		// - The closest point on the segment

		_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );
		_segDir.copy( v1 ).sub( v0 ).normalize();
		_diff.copy( this.origin ).sub( _segCenter );

		const segExtent = v0.distanceTo( v1 ) * 0.5;
		const a01 = - this.direction.dot( _segDir );
		const b0 = _diff.dot( this.direction );
		const b1 = - _diff.dot( _segDir );
		const c = _diff.lengthSq();
		const det = Math.abs( 1 - a01 * a01 );
		let s0, s1, sqrDist, extDet;

		if ( det > 0 ) {

			// The ray and segment are not parallel.

			s0 = a01 * b1 - b0;
			s1 = a01 * b0 - b1;
			extDet = segExtent * det;

			if ( s0 >= 0 ) {

				if ( s1 >= - extDet ) {

					if ( s1 <= extDet ) {

						// region 0
						// Minimum at interior points of ray and segment.

						const invDet = 1 / det;
						s0 *= invDet;
						s1 *= invDet;
						sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;

					} else {

						// region 1

						s1 = segExtent;
						s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					}

				} else {

					// region 5

					s1 = - segExtent;
					s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

				}

			} else {

				if ( s1 <= - extDet ) {

					// region 4

					s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );
					s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

				} else if ( s1 <= extDet ) {

					// region 3

					s0 = 0;
					s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );
					sqrDist = s1 * ( s1 + 2 * b1 ) + c;

				} else {

					// region 2

					s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );
					s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
					sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

				}

			}

		} else {

			// Ray and segment are parallel.

			s1 = ( a01 > 0 ) ? - segExtent : segExtent;
			s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
			sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

		}

		if ( optionalPointOnRay ) {

			optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );

		}

		if ( optionalPointOnSegment ) {

			optionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );

		}

		return sqrDist;

	}

	intersectSphere( sphere, target ) {

		_vector$2.subVectors( sphere.center, this.origin );
		const tca = _vector$2.dot( this.direction );
		const d2 = _vector$2.dot( _vector$2 ) - tca * tca;
		const radius2 = sphere.radius * sphere.radius;

		if ( d2 > radius2 ) return null;

		const thc = Math.sqrt( radius2 - d2 );

		// t0 = first intersect point - entrance on front of sphere
		const t0 = tca - thc;

		// t1 = second intersect point - exit point on back of sphere
		const t1 = tca + thc;

		// test to see if both t0 and t1 are behind the ray - if so, return null
		if ( t0 < 0 && t1 < 0 ) return null;

		// test to see if t0 is behind the ray:
		// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
		// in order to always return an intersect point that is in front of the ray.
		if ( t0 < 0 ) return this.at( t1, target );

		// else t0 is in front of the ray, so return the first collision point scaled by t0
		return this.at( t0, target );

	}

	intersectsSphere( sphere ) {

		return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );

	}

	distanceToPlane( plane ) {

		const denominator = plane.normal.dot( this.direction );

		if ( denominator === 0 ) {

			// line is coplanar, return origin
			if ( plane.distanceToPoint( this.origin ) === 0 ) {

				return 0;

			}

			// Null is preferable to undefined since undefined means.... it is undefined

			return null;

		}

		const t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;

		// Return if the ray never intersects the plane

		return t >= 0 ? t : null;

	}

	intersectPlane( plane, target ) {

		const t = this.distanceToPlane( plane );

		if ( t === null ) {

			return null;

		}

		return this.at( t, target );

	}

	intersectsPlane( plane ) {

		// check if the ray lies on the plane first

		const distToPoint = plane.distanceToPoint( this.origin );

		if ( distToPoint === 0 ) {

			return true;

		}

		const denominator = plane.normal.dot( this.direction );

		if ( denominator * distToPoint < 0 ) {

			return true;

		}

		// ray origin is behind the plane (and is pointing behind it)

		return false;

	}

	intersectBox( box, target ) {

		let tmin, tmax, tymin, tymax, tzmin, tzmax;

		const invdirx = 1 / this.direction.x,
			invdiry = 1 / this.direction.y,
			invdirz = 1 / this.direction.z;

		const origin = this.origin;

		if ( invdirx >= 0 ) {

			tmin = ( box.min.x - origin.x ) * invdirx;
			tmax = ( box.max.x - origin.x ) * invdirx;

		} else {

			tmin = ( box.max.x - origin.x ) * invdirx;
			tmax = ( box.min.x - origin.x ) * invdirx;

		}

		if ( invdiry >= 0 ) {

			tymin = ( box.min.y - origin.y ) * invdiry;
			tymax = ( box.max.y - origin.y ) * invdiry;

		} else {

			tymin = ( box.max.y - origin.y ) * invdiry;
			tymax = ( box.min.y - origin.y ) * invdiry;

		}

		if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;

		// These lines also handle the case where tmin or tmax is NaN
		// (result of 0 * Infinity). x !== x returns true if x is NaN

		if ( tymin > tmin || tmin !== tmin ) tmin = tymin;

		if ( tymax < tmax || tmax !== tmax ) tmax = tymax;

		if ( invdirz >= 0 ) {

			tzmin = ( box.min.z - origin.z ) * invdirz;
			tzmax = ( box.max.z - origin.z ) * invdirz;

		} else {

			tzmin = ( box.max.z - origin.z ) * invdirz;
			tzmax = ( box.min.z - origin.z ) * invdirz;

		}

		if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;

		if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;

		if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;

		//return point closest to the ray (positive side)

		if ( tmax < 0 ) return null;

		return this.at( tmin >= 0 ? tmin : tmax, target );

	}

	intersectsBox( box ) {

		return this.intersectBox( box, _vector$2 ) !== null;

	}

	intersectTriangle( a, b, c, backfaceCulling, target ) {

		// Compute the offset origin, edges, and normal.

		// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h

		_edge1.subVectors( b, a );
		_edge2.subVectors( c, a );
		_normal.crossVectors( _edge1, _edge2 );

		// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
		// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
		//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
		//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
		//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
		let DdN = this.direction.dot( _normal );
		let sign;

		if ( DdN > 0 ) {

			if ( backfaceCulling ) return null;
			sign = 1;

		} else if ( DdN < 0 ) {

			sign = - 1;
			DdN = - DdN;

		} else {

			return null;

		}

		_diff.subVectors( this.origin, a );
		const DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );

		// b1 < 0, no intersection
		if ( DdQxE2 < 0 ) {

			return null;

		}

		const DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );

		// b2 < 0, no intersection
		if ( DdE1xQ < 0 ) {

			return null;

		}

		// b1+b2 > 1, no intersection
		if ( DdQxE2 + DdE1xQ > DdN ) {

			return null;

		}

		// Line intersects triangle, check if ray does.
		const QdN = - sign * _diff.dot( _normal );

		// t < 0, no intersection
		if ( QdN < 0 ) {

			return null;

		}

		// Ray intersects triangle.
		return this.at( QdN / DdN, target );

	}

	applyMatrix4( matrix4 ) {

		this.origin.applyMatrix4( matrix4 );
		this.direction.transformDirection( matrix4 );

		return this;

	}

	equals( ray ) {

		return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

class Matrix4 {

	constructor() {

		this.elements = [

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		];

		if ( arguments.length > 0 ) {

			console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );

		}

	}

	set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {

		const te = this.elements;

		te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;
		te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;
		te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;
		te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;

		return this;

	}

	identity() {

		this.set(

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		);

		return this;

	}

	clone() {

		return new Matrix4().fromArray( this.elements );

	}

	copy( m ) {

		const te = this.elements;
		const me = m.elements;

		te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];
		te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];
		te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];
		te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];

		return this;

	}

	copyPosition( m ) {

		const te = this.elements, me = m.elements;

		te[ 12 ] = me[ 12 ];
		te[ 13 ] = me[ 13 ];
		te[ 14 ] = me[ 14 ];

		return this;

	}

	setFromMatrix3( m ) {

		const me = m.elements;

		this.set(

			me[ 0 ], me[ 3 ], me[ 6 ], 0,
			me[ 1 ], me[ 4 ], me[ 7 ], 0,
			me[ 2 ], me[ 5 ], me[ 8 ], 0,
			0, 0, 0, 1

		);

		return this;

	}

	extractBasis( xAxis, yAxis, zAxis ) {

		xAxis.setFromMatrixColumn( this, 0 );
		yAxis.setFromMatrixColumn( this, 1 );
		zAxis.setFromMatrixColumn( this, 2 );

		return this;

	}

	makeBasis( xAxis, yAxis, zAxis ) {

		this.set(
			xAxis.x, yAxis.x, zAxis.x, 0,
			xAxis.y, yAxis.y, zAxis.y, 0,
			xAxis.z, yAxis.z, zAxis.z, 0,
			0, 0, 0, 1
		);

		return this;

	}

	extractRotation( m ) {

		// this method does not support reflection matrices

		const te = this.elements;
		const me = m.elements;

		const scaleX = 1 / _v1$1.setFromMatrixColumn( m, 0 ).length();
		const scaleY = 1 / _v1$1.setFromMatrixColumn( m, 1 ).length();
		const scaleZ = 1 / _v1$1.setFromMatrixColumn( m, 2 ).length();

		te[ 0 ] = me[ 0 ] * scaleX;
		te[ 1 ] = me[ 1 ] * scaleX;
		te[ 2 ] = me[ 2 ] * scaleX;
		te[ 3 ] = 0;

		te[ 4 ] = me[ 4 ] * scaleY;
		te[ 5 ] = me[ 5 ] * scaleY;
		te[ 6 ] = me[ 6 ] * scaleY;
		te[ 7 ] = 0;

		te[ 8 ] = me[ 8 ] * scaleZ;
		te[ 9 ] = me[ 9 ] * scaleZ;
		te[ 10 ] = me[ 10 ] * scaleZ;
		te[ 11 ] = 0;

		te[ 12 ] = 0;
		te[ 13 ] = 0;
		te[ 14 ] = 0;
		te[ 15 ] = 1;

		return this;

	}

	makeRotationFromEuler( euler ) {

		if ( ! ( euler && euler.isEuler ) ) {

			console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );

		}

		const te = this.elements;

		const x = euler.x, y = euler.y, z = euler.z;
		const a = Math.cos( x ), b = Math.sin( x );
		const c = Math.cos( y ), d = Math.sin( y );
		const e = Math.cos( z ), f = Math.sin( z );

		if ( euler.order === 'XYZ' ) {

			const ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[ 0 ] = c * e;
			te[ 4 ] = - c * f;
			te[ 8 ] = d;

			te[ 1 ] = af + be * d;
			te[ 5 ] = ae - bf * d;
			te[ 9 ] = - b * c;

			te[ 2 ] = bf - ae * d;
			te[ 6 ] = be + af * d;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'YXZ' ) {

			const ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[ 0 ] = ce + df * b;
			te[ 4 ] = de * b - cf;
			te[ 8 ] = a * d;

			te[ 1 ] = a * f;
			te[ 5 ] = a * e;
			te[ 9 ] = - b;

			te[ 2 ] = cf * b - de;
			te[ 6 ] = df + ce * b;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'ZXY' ) {

			const ce = c * e, cf = c * f, de = d * e, df = d * f;

			te[ 0 ] = ce - df * b;
			te[ 4 ] = - a * f;
			te[ 8 ] = de + cf * b;

			te[ 1 ] = cf + de * b;
			te[ 5 ] = a * e;
			te[ 9 ] = df - ce * b;

			te[ 2 ] = - a * d;
			te[ 6 ] = b;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'ZYX' ) {

			const ae = a * e, af = a * f, be = b * e, bf = b * f;

			te[ 0 ] = c * e;
			te[ 4 ] = be * d - af;
			te[ 8 ] = ae * d + bf;

			te[ 1 ] = c * f;
			te[ 5 ] = bf * d + ae;
			te[ 9 ] = af * d - be;

			te[ 2 ] = - d;
			te[ 6 ] = b * c;
			te[ 10 ] = a * c;

		} else if ( euler.order === 'YZX' ) {

			const ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[ 0 ] = c * e;
			te[ 4 ] = bd - ac * f;
			te[ 8 ] = bc * f + ad;

			te[ 1 ] = f;
			te[ 5 ] = a * e;
			te[ 9 ] = - b * e;

			te[ 2 ] = - d * e;
			te[ 6 ] = ad * f + bc;
			te[ 10 ] = ac - bd * f;

		} else if ( euler.order === 'XZY' ) {

			const ac = a * c, ad = a * d, bc = b * c, bd = b * d;

			te[ 0 ] = c * e;
			te[ 4 ] = - f;
			te[ 8 ] = d * e;

			te[ 1 ] = ac * f + bd;
			te[ 5 ] = a * e;
			te[ 9 ] = ad * f - bc;

			te[ 2 ] = bc * f - ad;
			te[ 6 ] = b * e;
			te[ 10 ] = bd * f + ac;

		}

		// bottom row
		te[ 3 ] = 0;
		te[ 7 ] = 0;
		te[ 11 ] = 0;

		// last column
		te[ 12 ] = 0;
		te[ 13 ] = 0;
		te[ 14 ] = 0;
		te[ 15 ] = 1;

		return this;

	}

	makeRotationFromQuaternion( q ) {

		return this.compose( _zero, q, _one );

	}

	lookAt( eye, target, up ) {

		const te = this.elements;

		_z.subVectors( eye, target );

		if ( _z.lengthSq() === 0 ) {

			// eye and target are in the same position

			_z.z = 1;

		}

		_z.normalize();
		_x.crossVectors( up, _z );

		if ( _x.lengthSq() === 0 ) {

			// up and z are parallel

			if ( Math.abs( up.z ) === 1 ) {

				_z.x += 0.0001;

			} else {

				_z.z += 0.0001;

			}

			_z.normalize();
			_x.crossVectors( up, _z );

		}

		_x.normalize();
		_y.crossVectors( _z, _x );

		te[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;
		te[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;
		te[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;

		return this;

	}

	multiply( m, n ) {

		if ( n !== undefined ) {

			console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );
			return this.multiplyMatrices( m, n );

		}

		return this.multiplyMatrices( this, m );

	}

	premultiply( m ) {

		return this.multiplyMatrices( m, this );

	}

	multiplyMatrices( a, b ) {

		const ae = a.elements;
		const be = b.elements;
		const te = this.elements;

		const a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];
		const a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];
		const a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];
		const a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];

		const b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];
		const b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];
		const b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];
		const b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];

		te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;

		te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;

		te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;

		te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

		return this;

	}

	multiplyScalar( s ) {

		const te = this.elements;

		te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;
		te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;
		te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;
		te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;

		return this;

	}

	determinant() {

		const te = this.elements;

		const n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];
		const n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];
		const n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];
		const n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];

		//TODO: make this more efficient
		//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )

		return (
			n41 * (
				+ n14 * n23 * n32
				 - n13 * n24 * n32
				 - n14 * n22 * n33
				 + n12 * n24 * n33
				 + n13 * n22 * n34
				 - n12 * n23 * n34
			) +
			n42 * (
				+ n11 * n23 * n34
				 - n11 * n24 * n33
				 + n14 * n21 * n33
				 - n13 * n21 * n34
				 + n13 * n24 * n31
				 - n14 * n23 * n31
			) +
			n43 * (
				+ n11 * n24 * n32
				 - n11 * n22 * n34
				 - n14 * n21 * n32
				 + n12 * n21 * n34
				 + n14 * n22 * n31
				 - n12 * n24 * n31
			) +
			n44 * (
				- n13 * n22 * n31
				 - n11 * n23 * n32
				 + n11 * n22 * n33
				 + n13 * n21 * n32
				 - n12 * n21 * n33
				 + n12 * n23 * n31
			)

		);

	}

	transpose() {

		const te = this.elements;
		let tmp;

		tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;
		tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;
		tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;

		tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;
		tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;
		tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;

		return this;

	}

	setPosition( x, y, z ) {

		const te = this.elements;

		if ( x.isVector3 ) {

			te[ 12 ] = x.x;
			te[ 13 ] = x.y;
			te[ 14 ] = x.z;

		} else {

			te[ 12 ] = x;
			te[ 13 ] = y;
			te[ 14 ] = z;

		}

		return this;

	}

	invert() {

		// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
		const te = this.elements,

			n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],
			n12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],
			n13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],
			n14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],

			t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,
			t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,
			t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,
			t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;

		const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;

		if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );

		const detInv = 1 / det;

		te[ 0 ] = t11 * detInv;
		te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;
		te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;
		te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;

		te[ 4 ] = t12 * detInv;
		te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;
		te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;
		te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;

		te[ 8 ] = t13 * detInv;
		te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;
		te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;
		te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;

		te[ 12 ] = t14 * detInv;
		te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;
		te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;
		te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;

		return this;

	}

	scale( v ) {

		const te = this.elements;
		const x = v.x, y = v.y, z = v.z;

		te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;
		te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;
		te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;
		te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;

		return this;

	}

	getMaxScaleOnAxis() {

		const te = this.elements;

		const scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];
		const scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];
		const scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];

		return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );

	}

	makeTranslation( x, y, z ) {

		this.set(

			1, 0, 0, x,
			0, 1, 0, y,
			0, 0, 1, z,
			0, 0, 0, 1

		);

		return this;

	}

	makeRotationX( theta ) {

		const c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			1, 0, 0, 0,
			0, c, - s, 0,
			0, s, c, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeRotationY( theta ) {

		const c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			 c, 0, s, 0,
			 0, 1, 0, 0,
			- s, 0, c, 0,
			 0, 0, 0, 1

		);

		return this;

	}

	makeRotationZ( theta ) {

		const c = Math.cos( theta ), s = Math.sin( theta );

		this.set(

			c, - s, 0, 0,
			s, c, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeRotationAxis( axis, angle ) {

		// Based on http://www.gamedev.net/reference/articles/article1199.asp

		const c = Math.cos( angle );
		const s = Math.sin( angle );
		const t = 1 - c;
		const x = axis.x, y = axis.y, z = axis.z;
		const tx = t * x, ty = t * y;

		this.set(

			tx * x + c, tx * y - s * z, tx * z + s * y, 0,
			tx * y + s * z, ty * y + c, ty * z - s * x, 0,
			tx * z - s * y, ty * z + s * x, t * z * z + c, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeScale( x, y, z ) {

		this.set(

			x, 0, 0, 0,
			0, y, 0, 0,
			0, 0, z, 0,
			0, 0, 0, 1

		);

		return this;

	}

	makeShear( x, y, z ) {

		this.set(

			1, y, z, 0,
			x, 1, z, 0,
			x, y, 1, 0,
			0, 0, 0, 1

		);

		return this;

	}

	compose( position, quaternion, scale ) {

		const te = this.elements;

		const x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;
		const x2 = x + x,	y2 = y + y, z2 = z + z;
		const xx = x * x2, xy = x * y2, xz = x * z2;
		const yy = y * y2, yz = y * z2, zz = z * z2;
		const wx = w * x2, wy = w * y2, wz = w * z2;

		const sx = scale.x, sy = scale.y, sz = scale.z;

		te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;
		te[ 1 ] = ( xy + wz ) * sx;
		te[ 2 ] = ( xz - wy ) * sx;
		te[ 3 ] = 0;

		te[ 4 ] = ( xy - wz ) * sy;
		te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;
		te[ 6 ] = ( yz + wx ) * sy;
		te[ 7 ] = 0;

		te[ 8 ] = ( xz + wy ) * sz;
		te[ 9 ] = ( yz - wx ) * sz;
		te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;
		te[ 11 ] = 0;

		te[ 12 ] = position.x;
		te[ 13 ] = position.y;
		te[ 14 ] = position.z;
		te[ 15 ] = 1;

		return this;

	}

	decompose( position, quaternion, scale ) {

		const te = this.elements;

		let sx = _v1$1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();
		const sy = _v1$1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();
		const sz = _v1$1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();

		// if determine is negative, we need to invert one scale
		const det = this.determinant();
		if ( det < 0 ) sx = - sx;

		position.x = te[ 12 ];
		position.y = te[ 13 ];
		position.z = te[ 14 ];

		// scale the rotation part
		_m1.copy( this );

		const invSX = 1 / sx;
		const invSY = 1 / sy;
		const invSZ = 1 / sz;

		_m1.elements[ 0 ] *= invSX;
		_m1.elements[ 1 ] *= invSX;
		_m1.elements[ 2 ] *= invSX;

		_m1.elements[ 4 ] *= invSY;
		_m1.elements[ 5 ] *= invSY;
		_m1.elements[ 6 ] *= invSY;

		_m1.elements[ 8 ] *= invSZ;
		_m1.elements[ 9 ] *= invSZ;
		_m1.elements[ 10 ] *= invSZ;

		quaternion.setFromRotationMatrix( _m1 );

		scale.x = sx;
		scale.y = sy;
		scale.z = sz;

		return this;

	}

	makePerspective( left, right, top, bottom, near, far ) {

		if ( far === undefined ) {

			console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );

		}

		const te = this.elements;
		const x = 2 * near / ( right - left );
		const y = 2 * near / ( top - bottom );

		const a = ( right + left ) / ( right - left );
		const b = ( top + bottom ) / ( top - bottom );
		const c = - ( far + near ) / ( far - near );
		const d = - 2 * far * near / ( far - near );

		te[ 0 ] = x;	te[ 4 ] = 0;	te[ 8 ] = a;	te[ 12 ] = 0;
		te[ 1 ] = 0;	te[ 5 ] = y;	te[ 9 ] = b;	te[ 13 ] = 0;
		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = c;	te[ 14 ] = d;
		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = - 1;	te[ 15 ] = 0;

		return this;

	}

	makeOrthographic( left, right, top, bottom, near, far ) {

		const te = this.elements;
		const w = 1.0 / ( right - left );
		const h = 1.0 / ( top - bottom );
		const p = 1.0 / ( far - near );

		const x = ( right + left ) * w;
		const y = ( top + bottom ) * h;
		const z = ( far + near ) * p;

		te[ 0 ] = 2 * w;	te[ 4 ] = 0;	te[ 8 ] = 0;	te[ 12 ] = - x;
		te[ 1 ] = 0;	te[ 5 ] = 2 * h;	te[ 9 ] = 0;	te[ 13 ] = - y;
		te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = - 2 * p;	te[ 14 ] = - z;
		te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = 0;	te[ 15 ] = 1;

		return this;

	}

	equals( matrix ) {

		const te = this.elements;
		const me = matrix.elements;

		for ( let i = 0; i < 16; i ++ ) {

			if ( te[ i ] !== me[ i ] ) return false;

		}

		return true;

	}

	fromArray( array, offset = 0 ) {

		for ( let i = 0; i < 16; i ++ ) {

			this.elements[ i ] = array[ i + offset ];

		}

		return this;

	}

	toArray( array = [], offset = 0 ) {

		const te = this.elements;

		array[ offset ] = te[ 0 ];
		array[ offset + 1 ] = te[ 1 ];
		array[ offset + 2 ] = te[ 2 ];
		array[ offset + 3 ] = te[ 3 ];

		array[ offset + 4 ] = te[ 4 ];
		array[ offset + 5 ] = te[ 5 ];
		array[ offset + 6 ] = te[ 6 ];
		array[ offset + 7 ] = te[ 7 ];

		array[ offset + 8 ] = te[ 8 ];
		array[ offset + 9 ] = te[ 9 ];
		array[ offset + 10 ] = te[ 10 ];
		array[ offset + 11 ] = te[ 11 ];

		array[ offset + 12 ] = te[ 12 ];
		array[ offset + 13 ] = te[ 13 ];
		array[ offset + 14 ] = te[ 14 ];
		array[ offset + 15 ] = te[ 15 ];

		return array;

	}

}

Matrix4.prototype.isMatrix4 = true;

const _v1$1 = /*@__PURE__*/ new Vector3();
const _m1 = /*@__PURE__*/ new Matrix4();
const _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );
const _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );
const _x = /*@__PURE__*/ new Vector3();
const _y = /*@__PURE__*/ new Vector3();
const _z = /*@__PURE__*/ new Vector3();

const _matrix = /*@__PURE__*/ new Matrix4();
const _quaternion$1 = /*@__PURE__*/ new Quaternion();

class Euler {

	constructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._order = order;

	}

	get x() {

		return this._x;

	}

	set x( value ) {

		this._x = value;
		this._onChangeCallback();

	}

	get y() {

		return this._y;

	}

	set y( value ) {

		this._y = value;
		this._onChangeCallback();

	}

	get z() {

		return this._z;

	}

	set z( value ) {

		this._z = value;
		this._onChangeCallback();

	}

	get order() {

		return this._order;

	}

	set order( value ) {

		this._order = value;
		this._onChangeCallback();

	}

	set( x, y, z, order ) {

		this._x = x;
		this._y = y;
		this._z = z;
		this._order = order || this._order;

		this._onChangeCallback();

		return this;

	}

	clone() {

		return new this.constructor( this._x, this._y, this._z, this._order );

	}

	copy( euler ) {

		this._x = euler._x;
		this._y = euler._y;
		this._z = euler._z;
		this._order = euler._order;

		this._onChangeCallback();

		return this;

	}

	setFromRotationMatrix( m, order, update ) {

		const clamp = MathUtils.clamp;

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		const te = m.elements;
		const m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];
		const m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];
		const m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

		order = order || this._order;

		switch ( order ) {

			case 'XYZ':

				this._y = Math.asin( clamp( m13, - 1, 1 ) );

				if ( Math.abs( m13 ) < 0.9999999 ) {

					this._x = Math.atan2( - m23, m33 );
					this._z = Math.atan2( - m12, m11 );

				} else {

					this._x = Math.atan2( m32, m22 );
					this._z = 0;

				}

				break;

			case 'YXZ':

				this._x = Math.asin( - clamp( m23, - 1, 1 ) );

				if ( Math.abs( m23 ) < 0.9999999 ) {

					this._y = Math.atan2( m13, m33 );
					this._z = Math.atan2( m21, m22 );

				} else {

					this._y = Math.atan2( - m31, m11 );
					this._z = 0;

				}

				break;

			case 'ZXY':

				this._x = Math.asin( clamp( m32, - 1, 1 ) );

				if ( Math.abs( m32 ) < 0.9999999 ) {

					this._y = Math.atan2( - m31, m33 );
					this._z = Math.atan2( - m12, m22 );

				} else {

					this._y = 0;
					this._z = Math.atan2( m21, m11 );

				}

				break;

			case 'ZYX':

				this._y = Math.asin( - clamp( m31, - 1, 1 ) );

				if ( Math.abs( m31 ) < 0.9999999 ) {

					this._x = Math.atan2( m32, m33 );
					this._z = Math.atan2( m21, m11 );

				} else {

					this._x = 0;
					this._z = Math.atan2( - m12, m22 );

				}

				break;

			case 'YZX':

				this._z = Math.asin( clamp( m21, - 1, 1 ) );

				if ( Math.abs( m21 ) < 0.9999999 ) {

					this._x = Math.atan2( - m23, m22 );
					this._y = Math.atan2( - m31, m11 );

				} else {

					this._x = 0;
					this._y = Math.atan2( m13, m33 );

				}

				break;

			case 'XZY':

				this._z = Math.asin( - clamp( m12, - 1, 1 ) );

				if ( Math.abs( m12 ) < 0.9999999 ) {

					this._x = Math.atan2( m32, m22 );
					this._y = Math.atan2( m13, m11 );

				} else {

					this._x = Math.atan2( - m23, m33 );
					this._y = 0;

				}

				break;

			default:

				console.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );

		}

		this._order = order;

		if ( update !== false ) this._onChangeCallback();

		return this;

	}

	setFromQuaternion( q, order, update ) {

		_matrix.makeRotationFromQuaternion( q );

		return this.setFromRotationMatrix( _matrix, order, update );

	}

	setFromVector3( v, order ) {

		return this.set( v.x, v.y, v.z, order || this._order );

	}

	reorder( newOrder ) {

		// WARNING: this discards revolution information -bhouston

		_quaternion$1.setFromEuler( this );

		return this.setFromQuaternion( _quaternion$1, newOrder );

	}

	equals( euler ) {

		return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );

	}

	fromArray( array ) {

		this._x = array[ 0 ];
		this._y = array[ 1 ];
		this._z = array[ 2 ];
		if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];

		this._onChangeCallback();

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this._x;
		array[ offset + 1 ] = this._y;
		array[ offset + 2 ] = this._z;
		array[ offset + 3 ] = this._order;

		return array;

	}

	toVector3( optionalResult ) {

		if ( optionalResult ) {

			return optionalResult.set( this._x, this._y, this._z );

		} else {

			return new Vector3( this._x, this._y, this._z );

		}

	}

	_onChange( callback ) {

		this._onChangeCallback = callback;

		return this;

	}

	_onChangeCallback() {}

}

Euler.prototype.isEuler = true;

Euler.DefaultOrder = 'XYZ';
Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];

class Layers {

	constructor() {

		this.mask = 1 | 0;

	}

	set( channel ) {

		this.mask = 1 << channel | 0;

	}

	enable( channel ) {

		this.mask |= 1 << channel | 0;

	}

	enableAll() {

		this.mask = 0xffffffff | 0;

	}

	toggle( channel ) {

		this.mask ^= 1 << channel | 0;

	}

	disable( channel ) {

		this.mask &= ~ ( 1 << channel | 0 );

	}

	disableAll() {

		this.mask = 0;

	}

	test( layers ) {

		return ( this.mask & layers.mask ) !== 0;

	}

}

let _object3DId = 0;

const _v1$2 = new Vector3();
const _q1 = new Quaternion();
const _m1$1 = new Matrix4();
const _target = new Vector3();

const _position = new Vector3();
const _scale = new Vector3();
const _quaternion$2 = new Quaternion();

const _xAxis = new Vector3( 1, 0, 0 );
const _yAxis = new Vector3( 0, 1, 0 );
const _zAxis = new Vector3( 0, 0, 1 );

const _addedEvent = { type: 'added' };
const _removedEvent = { type: 'removed' };

function Object3D() {

	Object.defineProperty( this, 'id', { value: _object3DId ++ } );

	this.uuid = MathUtils.generateUUID();

	this.name = '';
	this.type = 'Object3D';

	this.parent = null;
	this.children = [];

	this.up = Object3D.DefaultUp.clone();

	const position = new Vector3();
	const rotation = new Euler();
	const quaternion = new Quaternion();
	const scale = new Vector3( 1, 1, 1 );

	function onRotationChange() {

		quaternion.setFromEuler( rotation, false );

	}

	function onQuaternionChange() {

		rotation.setFromQuaternion( quaternion, undefined, false );

	}

	rotation._onChange( onRotationChange );
	quaternion._onChange( onQuaternionChange );

	Object.defineProperties( this, {
		position: {
			configurable: true,
			enumerable: true,
			value: position
		},
		rotation: {
			configurable: true,
			enumerable: true,
			value: rotation
		},
		quaternion: {
			configurable: true,
			enumerable: true,
			value: quaternion
		},
		scale: {
			configurable: true,
			enumerable: true,
			value: scale
		},
		modelViewMatrix: {
			value: new Matrix4()
		},
		normalMatrix: {
			value: new Matrix3()
		}
	} );

	this.matrix = new Matrix4();
	this.matrixWorld = new Matrix4();

	this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;
	this.matrixWorldNeedsUpdate = false;

	this.layers = new Layers();
	this.visible = true;

	this.castShadow = false;
	this.receiveShadow = false;

	this.frustumCulled = true;
	this.renderOrder = 0;

	this.animations = [];

	this.userData = {};

}

Object3D.DefaultUp = new Vector3( 0, 1, 0 );
Object3D.DefaultMatrixAutoUpdate = true;

Object3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

	constructor: Object3D,

	isObject3D: true,

	onBeforeRender: function () {},
	onAfterRender: function () {},

	applyMatrix4: function ( matrix ) {

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		this.matrix.premultiply( matrix );

		this.matrix.decompose( this.position, this.quaternion, this.scale );

	},

	applyQuaternion: function ( q ) {

		this.quaternion.premultiply( q );

		return this;

	},

	setRotationFromAxisAngle: function ( axis, angle ) {

		// assumes axis is normalized

		this.quaternion.setFromAxisAngle( axis, angle );

	},

	setRotationFromEuler: function ( euler ) {

		this.quaternion.setFromEuler( euler, true );

	},

	setRotationFromMatrix: function ( m ) {

		// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

		this.quaternion.setFromRotationMatrix( m );

	},

	setRotationFromQuaternion: function ( q ) {

		// assumes q is normalized

		this.quaternion.copy( q );

	},

	rotateOnAxis: function ( axis, angle ) {

		// rotate object on axis in object space
		// axis is assumed to be normalized

		_q1.setFromAxisAngle( axis, angle );

		this.quaternion.multiply( _q1 );

		return this;

	},

	rotateOnWorldAxis: function ( axis, angle ) {

		// rotate object on axis in world space
		// axis is assumed to be normalized
		// method assumes no rotated parent

		_q1.setFromAxisAngle( axis, angle );

		this.quaternion.premultiply( _q1 );

		return this;

	},

	rotateX: function ( angle ) {

		return this.rotateOnAxis( _xAxis, angle );

	},

	rotateY: function ( angle ) {

		return this.rotateOnAxis( _yAxis, angle );

	},

	rotateZ: function ( angle ) {

		return this.rotateOnAxis( _zAxis, angle );

	},

	translateOnAxis: function ( axis, distance ) {

		// translate object by distance along axis in object space
		// axis is assumed to be normalized

		_v1$2.copy( axis ).applyQuaternion( this.quaternion );

		this.position.add( _v1$2.multiplyScalar( distance ) );

		return this;

	},

	translateX: function ( distance ) {

		return this.translateOnAxis( _xAxis, distance );

	},

	translateY: function ( distance ) {

		return this.translateOnAxis( _yAxis, distance );

	},

	translateZ: function ( distance ) {

		return this.translateOnAxis( _zAxis, distance );

	},

	localToWorld: function ( vector ) {

		return vector.applyMatrix4( this.matrixWorld );

	},

	worldToLocal: function ( vector ) {

		return vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );

	},

	lookAt: function ( x, y, z ) {

		// This method does not support objects having non-uniformly-scaled parent(s)

		if ( x.isVector3 ) {

			_target.copy( x );

		} else {

			_target.set( x, y, z );

		}

		const parent = this.parent;

		this.updateWorldMatrix( true, false );

		_position.setFromMatrixPosition( this.matrixWorld );

		if ( this.isCamera || this.isLight ) {

			_m1$1.lookAt( _position, _target, this.up );

		} else {

			_m1$1.lookAt( _target, _position, this.up );

		}

		this.quaternion.setFromRotationMatrix( _m1$1 );

		if ( parent ) {

			_m1$1.extractRotation( parent.matrixWorld );
			_q1.setFromRotationMatrix( _m1$1 );
			this.quaternion.premultiply( _q1.invert() );

		}

	},

	add: function ( object ) {

		if ( arguments.length > 1 ) {

			for ( let i = 0; i < arguments.length; i ++ ) {

				this.add( arguments[ i ] );

			}

			return this;

		}

		if ( object === this ) {

			console.error( 'THREE.Object3D.add: object can\'t be added as a child of itself.', object );
			return this;

		}

		if ( object && object.isObject3D ) {

			if ( object.parent !== null ) {

				object.parent.remove( object );

			}

			object.parent = this;
			this.children.push( object );

			object.dispatchEvent( _addedEvent );

		} else {

			console.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );

		}

		return this;

	},

	remove: function ( object ) {

		if ( arguments.length > 1 ) {

			for ( let i = 0; i < arguments.length; i ++ ) {

				this.remove( arguments[ i ] );

			}

			return this;

		}

		const index = this.children.indexOf( object );

		if ( index !== - 1 ) {

			object.parent = null;
			this.children.splice( index, 1 );

			object.dispatchEvent( _removedEvent );

		}

		return this;

	},

	clear: function () {

		for ( let i = 0; i < this.children.length; i ++ ) {

			const object = this.children[ i ];

			object.parent = null;

			object.dispatchEvent( _removedEvent );

		}

		this.children.length = 0;

		return this;


	},

	attach: function ( object ) {

		// adds object as a child of this, while maintaining the object's world transform

		this.updateWorldMatrix( true, false );

		_m1$1.copy( this.matrixWorld ).invert();

		if ( object.parent !== null ) {

			object.parent.updateWorldMatrix( true, false );

			_m1$1.multiply( object.parent.matrixWorld );

		}

		object.applyMatrix4( _m1$1 );

		this.add( object );

		object.updateWorldMatrix( false, true );

		return this;

	},

	getObjectById: function ( id ) {

		return this.getObjectByProperty( 'id', id );

	},

	getObjectByName: function ( name ) {

		return this.getObjectByProperty( 'name', name );

	},

	getObjectByProperty: function ( name, value ) {

		if ( this[ name ] === value ) return this;

		for ( let i = 0, l = this.children.length; i < l; i ++ ) {

			const child = this.children[ i ];
			const object = child.getObjectByProperty( name, value );

			if ( object !== undefined ) {

				return object;

			}

		}

		return undefined;

	},

	getWorldPosition: function ( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );
			target = new Vector3();

		}

		this.updateWorldMatrix( true, false );

		return target.setFromMatrixPosition( this.matrixWorld );

	},

	getWorldQuaternion: function ( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );
			target = new Quaternion();

		}

		this.updateWorldMatrix( true, false );

		this.matrixWorld.decompose( _position, target, _scale );

		return target;

	},

	getWorldScale: function ( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Object3D: .getWorldScale() target is now required' );
			target = new Vector3();

		}

		this.updateWorldMatrix( true, false );

		this.matrixWorld.decompose( _position, _quaternion$2, target );

		return target;

	},

	getWorldDirection: function ( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );
			target = new Vector3();

		}

		this.updateWorldMatrix( true, false );

		const e = this.matrixWorld.elements;

		return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();

	},

	raycast: function () {},

	traverse: function ( callback ) {

		callback( this );

		const children = this.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].traverse( callback );

		}

	},

	traverseVisible: function ( callback ) {

		if ( this.visible === false ) return;

		callback( this );

		const children = this.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].traverseVisible( callback );

		}

	},

	traverseAncestors: function ( callback ) {

		const parent = this.parent;

		if ( parent !== null ) {

			callback( parent );

			parent.traverseAncestors( callback );

		}

	},

	updateMatrix: function () {

		this.matrix.compose( this.position, this.quaternion, this.scale );

		this.matrixWorldNeedsUpdate = true;

	},

	updateMatrixWorld: function ( force ) {

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		if ( this.matrixWorldNeedsUpdate || force ) {

			if ( this.parent === null ) {

				this.matrixWorld.copy( this.matrix );

			} else {

				this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

			}

			this.matrixWorldNeedsUpdate = false;

			force = true;

		}

		// update children

		const children = this.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].updateMatrixWorld( force );

		}

	},

	updateWorldMatrix: function ( updateParents, updateChildren ) {

		const parent = this.parent;

		if ( updateParents === true && parent !== null ) {

			parent.updateWorldMatrix( true, false );

		}

		if ( this.matrixAutoUpdate ) this.updateMatrix();

		if ( this.parent === null ) {

			this.matrixWorld.copy( this.matrix );

		} else {

			this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

		}

		// update children

		if ( updateChildren === true ) {

			const children = this.children;

			for ( let i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].updateWorldMatrix( false, true );

			}

		}

	},

	toJSON: function ( meta ) {

		// meta is a string when called from JSON.stringify
		const isRootObject = ( meta === undefined || typeof meta === 'string' );

		const output = {};

		// meta is a hash used to collect geometries, materials.
		// not providing it implies that this is the root object
		// being serialized.
		if ( isRootObject ) {

			// initialize meta obj
			meta = {
				geometries: {},
				materials: {},
				textures: {},
				images: {},
				shapes: {},
				skeletons: {},
				animations: {}
			};

			output.metadata = {
				version: 4.5,
				type: 'Object',
				generator: 'Object3D.toJSON'
			};

		}

		// standard Object3D serialization

		const object = {};

		object.uuid = this.uuid;
		object.type = this.type;

		if ( this.name !== '' ) object.name = this.name;
		if ( this.castShadow === true ) object.castShadow = true;
		if ( this.receiveShadow === true ) object.receiveShadow = true;
		if ( this.visible === false ) object.visible = false;
		if ( this.frustumCulled === false ) object.frustumCulled = false;
		if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;
		if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;

		object.layers = this.layers.mask;
		object.matrix = this.matrix.toArray();

		if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;

		// object specific properties

		if ( this.isInstancedMesh ) {

			object.type = 'InstancedMesh';
			object.count = this.count;
			object.instanceMatrix = this.instanceMatrix.toJSON();

		}

		//

		function serialize( library, element ) {

			if ( library[ element.uuid ] === undefined ) {

				library[ element.uuid ] = element.toJSON( meta );

			}

			return element.uuid;

		}

		if ( this.isMesh || this.isLine || this.isPoints ) {

			object.geometry = serialize( meta.geometries, this.geometry );

			const parameters = this.geometry.parameters;

			if ( parameters !== undefined && parameters.shapes !== undefined ) {

				const shapes = parameters.shapes;

				if ( Array.isArray( shapes ) ) {

					for ( let i = 0, l = shapes.length; i < l; i ++ ) {

						const shape = shapes[ i ];

						serialize( meta.shapes, shape );

					}

				} else {

					serialize( meta.shapes, shapes );

				}

			}

		}

		if ( this.isSkinnedMesh ) {

			object.bindMode = this.bindMode;
			object.bindMatrix = this.bindMatrix.toArray();

			if ( this.skeleton !== undefined ) {

				serialize( meta.skeletons, this.skeleton );

				object.skeleton = this.skeleton.uuid;

			}

		}

		if ( this.material !== undefined ) {

			if ( Array.isArray( this.material ) ) {

				const uuids = [];

				for ( let i = 0, l = this.material.length; i < l; i ++ ) {

					uuids.push( serialize( meta.materials, this.material[ i ] ) );

				}

				object.material = uuids;

			} else {

				object.material = serialize( meta.materials, this.material );

			}

		}

		//

		if ( this.children.length > 0 ) {

			object.children = [];

			for ( let i = 0; i < this.children.length; i ++ ) {

				object.children.push( this.children[ i ].toJSON( meta ).object );

			}

		}

		//

		if ( this.animations.length > 0 ) {

			object.animations = [];

			for ( let i = 0; i < this.animations.length; i ++ ) {

				const animation = this.animations[ i ];

				object.animations.push( serialize( meta.animations, animation ) );

			}

		}

		if ( isRootObject ) {

			const geometries = extractFromCache( meta.geometries );
			const materials = extractFromCache( meta.materials );
			const textures = extractFromCache( meta.textures );
			const images = extractFromCache( meta.images );
			const shapes = extractFromCache( meta.shapes );
			const skeletons = extractFromCache( meta.skeletons );
			const animations = extractFromCache( meta.animations );

			if ( geometries.length > 0 ) output.geometries = geometries;
			if ( materials.length > 0 ) output.materials = materials;
			if ( textures.length > 0 ) output.textures = textures;
			if ( images.length > 0 ) output.images = images;
			if ( shapes.length > 0 ) output.shapes = shapes;
			if ( skeletons.length > 0 ) output.skeletons = skeletons;
			if ( animations.length > 0 ) output.animations = animations;

		}

		output.object = object;

		return output;

		// extract data from the cache hash
		// remove metadata on each item
		// and return as array
		function extractFromCache( cache ) {

			const values = [];
			for ( const key in cache ) {

				const data = cache[ key ];
				delete data.metadata;
				values.push( data );

			}

			return values;

		}

	},

	clone: function ( recursive ) {

		return new this.constructor().copy( this, recursive );

	},

	copy: function ( source, recursive = true ) {

		this.name = source.name;

		this.up.copy( source.up );

		this.position.copy( source.position );
		this.rotation.order = source.rotation.order;
		this.quaternion.copy( source.quaternion );
		this.scale.copy( source.scale );

		this.matrix.copy( source.matrix );
		this.matrixWorld.copy( source.matrixWorld );

		this.matrixAutoUpdate = source.matrixAutoUpdate;
		this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;

		this.layers.mask = source.layers.mask;
		this.visible = source.visible;

		this.castShadow = source.castShadow;
		this.receiveShadow = source.receiveShadow;

		this.frustumCulled = source.frustumCulled;
		this.renderOrder = source.renderOrder;

		this.userData = JSON.parse( JSON.stringify( source.userData ) );

		if ( recursive === true ) {

			for ( let i = 0; i < source.children.length; i ++ ) {

				const child = source.children[ i ];
				this.add( child.clone() );

			}

		}

		return this;

	}

} );

const _vector1 = /*@__PURE__*/ new Vector3();
const _vector2 = /*@__PURE__*/ new Vector3();
const _normalMatrix = /*@__PURE__*/ new Matrix3();

class Plane {

	constructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {

		// normal is assumed to be normalized

		this.normal = normal;
		this.constant = constant;

	}

	set( normal, constant ) {

		this.normal.copy( normal );
		this.constant = constant;

		return this;

	}

	setComponents( x, y, z, w ) {

		this.normal.set( x, y, z );
		this.constant = w;

		return this;

	}

	setFromNormalAndCoplanarPoint( normal, point ) {

		this.normal.copy( normal );
		this.constant = - point.dot( this.normal );

		return this;

	}

	setFromCoplanarPoints( a, b, c ) {

		const normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();

		// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?

		this.setFromNormalAndCoplanarPoint( normal, a );

		return this;

	}

	copy( plane ) {

		this.normal.copy( plane.normal );
		this.constant = plane.constant;

		return this;

	}

	normalize() {

		// Note: will lead to a divide by zero if the plane is invalid.

		const inverseNormalLength = 1.0 / this.normal.length();
		this.normal.multiplyScalar( inverseNormalLength );
		this.constant *= inverseNormalLength;

		return this;

	}

	negate() {

		this.constant *= - 1;
		this.normal.negate();

		return this;

	}

	distanceToPoint( point ) {

		return this.normal.dot( point ) + this.constant;

	}

	distanceToSphere( sphere ) {

		return this.distanceToPoint( sphere.center ) - sphere.radius;

	}

	projectPoint( point, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Plane: .projectPoint() target is now required' );
			target = new Vector3();

		}

		return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );

	}

	intersectLine( line, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Plane: .intersectLine() target is now required' );
			target = new Vector3();

		}

		const direction = line.delta( _vector1 );

		const denominator = this.normal.dot( direction );

		if ( denominator === 0 ) {

			// line is coplanar, return origin
			if ( this.distanceToPoint( line.start ) === 0 ) {

				return target.copy( line.start );

			}

			// Unsure if this is the correct method to handle this case.
			return undefined;

		}

		const t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;

		if ( t < 0 || t > 1 ) {

			return undefined;

		}

		return target.copy( direction ).multiplyScalar( t ).add( line.start );

	}

	intersectsLine( line ) {

		// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.

		const startSign = this.distanceToPoint( line.start );
		const endSign = this.distanceToPoint( line.end );

		return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );

	}

	intersectsBox( box ) {

		return box.intersectsPlane( this );

	}

	intersectsSphere( sphere ) {

		return sphere.intersectsPlane( this );

	}

	coplanarPoint( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Plane: .coplanarPoint() target is now required' );
			target = new Vector3();

		}

		return target.copy( this.normal ).multiplyScalar( - this.constant );

	}

	applyMatrix4( matrix, optionalNormalMatrix ) {

		const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );

		const referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );

		const normal = this.normal.applyMatrix3( normalMatrix ).normalize();

		this.constant = - referencePoint.dot( normal );

		return this;

	}

	translate( offset ) {

		this.constant -= offset.dot( this.normal );

		return this;

	}

	equals( plane ) {

		return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

Plane.prototype.isPlane = true;

const _v0$1 = /*@__PURE__*/ new Vector3();
const _v1$3 = /*@__PURE__*/ new Vector3();
const _v2$1 = /*@__PURE__*/ new Vector3();
const _v3 = /*@__PURE__*/ new Vector3();

const _vab = /*@__PURE__*/ new Vector3();
const _vac = /*@__PURE__*/ new Vector3();
const _vbc = /*@__PURE__*/ new Vector3();
const _vap = /*@__PURE__*/ new Vector3();
const _vbp = /*@__PURE__*/ new Vector3();
const _vcp = /*@__PURE__*/ new Vector3();

class Triangle {

	constructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {

		this.a = a;
		this.b = b;
		this.c = c;

	}

	static getNormal( a, b, c, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Triangle: .getNormal() target is now required' );
			target = new Vector3();

		}

		target.subVectors( c, b );
		_v0$1.subVectors( a, b );
		target.cross( _v0$1 );

		const targetLengthSq = target.lengthSq();
		if ( targetLengthSq > 0 ) {

			return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );

		}

		return target.set( 0, 0, 0 );

	}

	// static/instance method to calculate barycentric coordinates
	// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
	static getBarycoord( point, a, b, c, target ) {

		_v0$1.subVectors( c, a );
		_v1$3.subVectors( b, a );
		_v2$1.subVectors( point, a );

		const dot00 = _v0$1.dot( _v0$1 );
		const dot01 = _v0$1.dot( _v1$3 );
		const dot02 = _v0$1.dot( _v2$1 );
		const dot11 = _v1$3.dot( _v1$3 );
		const dot12 = _v1$3.dot( _v2$1 );

		const denom = ( dot00 * dot11 - dot01 * dot01 );

		if ( target === undefined ) {

			console.warn( 'THREE.Triangle: .getBarycoord() target is now required' );
			target = new Vector3();

		}

		// collinear or singular triangle
		if ( denom === 0 ) {

			// arbitrary location outside of triangle?
			// not sure if this is the best idea, maybe should be returning undefined
			return target.set( - 2, - 1, - 1 );

		}

		const invDenom = 1 / denom;
		const u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;
		const v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;

		// barycentric coordinates must always sum to 1
		return target.set( 1 - u - v, v, u );

	}

	static containsPoint( point, a, b, c ) {

		this.getBarycoord( point, a, b, c, _v3 );

		return ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );

	}

	static getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {

		this.getBarycoord( point, p1, p2, p3, _v3 );

		target.set( 0, 0 );
		target.addScaledVector( uv1, _v3.x );
		target.addScaledVector( uv2, _v3.y );
		target.addScaledVector( uv3, _v3.z );

		return target;

	}

	static isFrontFacing( a, b, c, direction ) {

		_v0$1.subVectors( c, b );
		_v1$3.subVectors( a, b );

		// strictly front facing
		return ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;

	}

	set( a, b, c ) {

		this.a.copy( a );
		this.b.copy( b );
		this.c.copy( c );

		return this;

	}

	setFromPointsAndIndices( points, i0, i1, i2 ) {

		this.a.copy( points[ i0 ] );
		this.b.copy( points[ i1 ] );
		this.c.copy( points[ i2 ] );

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( triangle ) {

		this.a.copy( triangle.a );
		this.b.copy( triangle.b );
		this.c.copy( triangle.c );

		return this;

	}

	getArea() {

		_v0$1.subVectors( this.c, this.b );
		_v1$3.subVectors( this.a, this.b );

		return _v0$1.cross( _v1$3 ).length() * 0.5;

	}

	getMidpoint( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Triangle: .getMidpoint() target is now required' );
			target = new Vector3();

		}

		return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );

	}

	getNormal( target ) {

		return Triangle.getNormal( this.a, this.b, this.c, target );

	}

	getPlane( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Triangle: .getPlane() target is now required' );
			target = new Plane();

		}

		return target.setFromCoplanarPoints( this.a, this.b, this.c );

	}

	getBarycoord( point, target ) {

		return Triangle.getBarycoord( point, this.a, this.b, this.c, target );

	}

	getUV( point, uv1, uv2, uv3, target ) {

		return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );

	}

	containsPoint( point ) {

		return Triangle.containsPoint( point, this.a, this.b, this.c );

	}

	isFrontFacing( direction ) {

		return Triangle.isFrontFacing( this.a, this.b, this.c, direction );

	}

	intersectsBox( box ) {

		return box.intersectsTriangle( this );

	}

	closestPointToPoint( p, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );
			target = new Vector3();

		}

		const a = this.a, b = this.b, c = this.c;
		let v, w;

		// algorithm thanks to Real-Time Collision Detection by Christer Ericson,
		// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
		// under the accompanying license; see chapter 5.1.5 for detailed explanation.
		// basically, we're distinguishing which of the voronoi regions of the triangle
		// the point lies in with the minimum amount of redundant computation.

		_vab.subVectors( b, a );
		_vac.subVectors( c, a );
		_vap.subVectors( p, a );
		const d1 = _vab.dot( _vap );
		const d2 = _vac.dot( _vap );
		if ( d1 <= 0 && d2 <= 0 ) {

			// vertex region of A; barycentric coords (1, 0, 0)
			return target.copy( a );

		}

		_vbp.subVectors( p, b );
		const d3 = _vab.dot( _vbp );
		const d4 = _vac.dot( _vbp );
		if ( d3 >= 0 && d4 <= d3 ) {

			// vertex region of B; barycentric coords (0, 1, 0)
			return target.copy( b );

		}

		const vc = d1 * d4 - d3 * d2;
		if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {

			v = d1 / ( d1 - d3 );
			// edge region of AB; barycentric coords (1-v, v, 0)
			return target.copy( a ).addScaledVector( _vab, v );

		}

		_vcp.subVectors( p, c );
		const d5 = _vab.dot( _vcp );
		const d6 = _vac.dot( _vcp );
		if ( d6 >= 0 && d5 <= d6 ) {

			// vertex region of C; barycentric coords (0, 0, 1)
			return target.copy( c );

		}

		const vb = d5 * d2 - d1 * d6;
		if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {

			w = d2 / ( d2 - d6 );
			// edge region of AC; barycentric coords (1-w, 0, w)
			return target.copy( a ).addScaledVector( _vac, w );

		}

		const va = d3 * d6 - d5 * d4;
		if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {

			_vbc.subVectors( c, b );
			w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );
			// edge region of BC; barycentric coords (0, 1-w, w)
			return target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC

		}

		// face region
		const denom = 1 / ( va + vb + vc );
		// u = va * denom
		v = vb * denom;
		w = vc * denom;

		return target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );

	}

	equals( triangle ) {

		return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );

	}

}

let materialId = 0;

function Material() {

	Object.defineProperty( this, 'id', { value: materialId ++ } );

	this.uuid = MathUtils.generateUUID();

	this.name = '';
	this.type = 'Material';

	this.fog = true;

	this.blending = NormalBlending;
	this.side = FrontSide;
	this.vertexColors = false;

	this.opacity = 1;
	this.transparent = false;

	this.blendSrc = SrcAlphaFactor;
	this.blendDst = OneMinusSrcAlphaFactor;
	this.blendEquation = AddEquation;
	this.blendSrcAlpha = null;
	this.blendDstAlpha = null;
	this.blendEquationAlpha = null;

	this.depthFunc = LessEqualDepth;
	this.depthTest = true;
	this.depthWrite = true;

	this.stencilWriteMask = 0xff;
	this.stencilFunc = AlwaysStencilFunc;
	this.stencilRef = 0;
	this.stencilFuncMask = 0xff;
	this.stencilFail = KeepStencilOp;
	this.stencilZFail = KeepStencilOp;
	this.stencilZPass = KeepStencilOp;
	this.stencilWrite = false;

	this.clippingPlanes = null;
	this.clipIntersection = false;
	this.clipShadows = false;

	this.shadowSide = null;

	this.colorWrite = true;

	this.precision = null; // override the renderer's default precision for this material

	this.polygonOffset = false;
	this.polygonOffsetFactor = 0;
	this.polygonOffsetUnits = 0;

	this.dithering = false;

	this.alphaTest = 0;
	this.premultipliedAlpha = false;

	this.visible = true;

	this.toneMapped = true;

	this.userData = {};

	this.version = 0;

}

Material.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

	constructor: Material,

	isMaterial: true,

	onBeforeCompile: function ( /* shaderobject, renderer */ ) {},

	customProgramCacheKey: function () {

		return this.onBeforeCompile.toString();

	},

	setValues: function ( values ) {

		if ( values === undefined ) return;

		for ( const key in values ) {

			const newValue = values[ key ];

			if ( newValue === undefined ) {

				console.warn( 'THREE.Material: \'' + key + '\' parameter is undefined.' );
				continue;

			}

			// for backward compatability if shading is set in the constructor
			if ( key === 'shading' ) {

				console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );
				this.flatShading = ( newValue === FlatShading ) ? true : false;
				continue;

			}

			const currentValue = this[ key ];

			if ( currentValue === undefined ) {

				console.warn( 'THREE.' + this.type + ': \'' + key + '\' is not a property of this material.' );
				continue;

			}

			if ( currentValue && currentValue.isColor ) {

				currentValue.set( newValue );

			} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {

				currentValue.copy( newValue );

			} else {

				this[ key ] = newValue;

			}

		}

	},

	toJSON: function ( meta ) {

		const isRoot = ( meta === undefined || typeof meta === 'string' );

		if ( isRoot ) {

			meta = {
				textures: {},
				images: {}
			};

		}

		const data = {
			metadata: {
				version: 4.5,
				type: 'Material',
				generator: 'Material.toJSON'
			}
		};

		// standard Material serialization
		data.uuid = this.uuid;
		data.type = this.type;

		if ( this.name !== '' ) data.name = this.name;

		if ( this.color && this.color.isColor ) data.color = this.color.getHex();

		if ( this.roughness !== undefined ) data.roughness = this.roughness;
		if ( this.metalness !== undefined ) data.metalness = this.metalness;

		if ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();
		if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();
		if ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;

		if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();
		if ( this.shininess !== undefined ) data.shininess = this.shininess;
		if ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;
		if ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;

		if ( this.clearcoatMap && this.clearcoatMap.isTexture ) {

			data.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;

		}

		if ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {

			data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;

		}

		if ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {

			data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;
			data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();

		}

		if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;
		if ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;
		if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;

		if ( this.lightMap && this.lightMap.isTexture ) {

			data.lightMap = this.lightMap.toJSON( meta ).uuid;
			data.lightMapIntensity = this.lightMapIntensity;

		}

		if ( this.aoMap && this.aoMap.isTexture ) {

			data.aoMap = this.aoMap.toJSON( meta ).uuid;
			data.aoMapIntensity = this.aoMapIntensity;

		}

		if ( this.bumpMap && this.bumpMap.isTexture ) {

			data.bumpMap = this.bumpMap.toJSON( meta ).uuid;
			data.bumpScale = this.bumpScale;

		}

		if ( this.normalMap && this.normalMap.isTexture ) {

			data.normalMap = this.normalMap.toJSON( meta ).uuid;
			data.normalMapType = this.normalMapType;
			data.normalScale = this.normalScale.toArray();

		}

		if ( this.displacementMap && this.displacementMap.isTexture ) {

			data.displacementMap = this.displacementMap.toJSON( meta ).uuid;
			data.displacementScale = this.displacementScale;
			data.displacementBias = this.displacementBias;

		}

		if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;
		if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;

		if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;
		if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;

		if ( this.envMap && this.envMap.isTexture ) {

			data.envMap = this.envMap.toJSON( meta ).uuid;
			data.reflectivity = this.reflectivity; // Scale behind envMap
			data.refractionRatio = this.refractionRatio;

			if ( this.combine !== undefined ) data.combine = this.combine;
			if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;

		}

		if ( this.gradientMap && this.gradientMap.isTexture ) {

			data.gradientMap = this.gradientMap.toJSON( meta ).uuid;

		}

		if ( this.size !== undefined ) data.size = this.size;
		if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;

		if ( this.blending !== NormalBlending ) data.blending = this.blending;
		if ( this.side !== FrontSide ) data.side = this.side;
		if ( this.vertexColors ) data.vertexColors = true;

		if ( this.opacity < 1 ) data.opacity = this.opacity;
		if ( this.transparent === true ) data.transparent = this.transparent;

		data.depthFunc = this.depthFunc;
		data.depthTest = this.depthTest;
		data.depthWrite = this.depthWrite;

		data.stencilWrite = this.stencilWrite;
		data.stencilWriteMask = this.stencilWriteMask;
		data.stencilFunc = this.stencilFunc;
		data.stencilRef = this.stencilRef;
		data.stencilFuncMask = this.stencilFuncMask;
		data.stencilFail = this.stencilFail;
		data.stencilZFail = this.stencilZFail;
		data.stencilZPass = this.stencilZPass;

		// rotation (SpriteMaterial)
		if ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;

		if ( this.polygonOffset === true ) data.polygonOffset = true;
		if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;
		if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;

		if ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;
		if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;
		if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;
		if ( this.scale !== undefined ) data.scale = this.scale;

		if ( this.dithering === true ) data.dithering = true;

		if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;
		if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;

		if ( this.wireframe === true ) data.wireframe = this.wireframe;
		if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;
		if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;
		if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;

		if ( this.morphTargets === true ) data.morphTargets = true;
		if ( this.morphNormals === true ) data.morphNormals = true;
		if ( this.skinning === true ) data.skinning = true;

		if ( this.flatShading === true ) data.flatShading = this.flatShading;

		if ( this.visible === false ) data.visible = false;

		if ( this.toneMapped === false ) data.toneMapped = false;

		if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;

		// TODO: Copied from Object3D.toJSON

		function extractFromCache( cache ) {

			const values = [];

			for ( const key in cache ) {

				const data = cache[ key ];
				delete data.metadata;
				values.push( data );

			}

			return values;

		}

		if ( isRoot ) {

			const textures = extractFromCache( meta.textures );
			const images = extractFromCache( meta.images );

			if ( textures.length > 0 ) data.textures = textures;
			if ( images.length > 0 ) data.images = images;

		}

		return data;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( source ) {

		this.name = source.name;

		this.fog = source.fog;

		this.blending = source.blending;
		this.side = source.side;
		this.vertexColors = source.vertexColors;

		this.opacity = source.opacity;
		this.transparent = source.transparent;

		this.blendSrc = source.blendSrc;
		this.blendDst = source.blendDst;
		this.blendEquation = source.blendEquation;
		this.blendSrcAlpha = source.blendSrcAlpha;
		this.blendDstAlpha = source.blendDstAlpha;
		this.blendEquationAlpha = source.blendEquationAlpha;

		this.depthFunc = source.depthFunc;
		this.depthTest = source.depthTest;
		this.depthWrite = source.depthWrite;

		this.stencilWriteMask = source.stencilWriteMask;
		this.stencilFunc = source.stencilFunc;
		this.stencilRef = source.stencilRef;
		this.stencilFuncMask = source.stencilFuncMask;
		this.stencilFail = source.stencilFail;
		this.stencilZFail = source.stencilZFail;
		this.stencilZPass = source.stencilZPass;
		this.stencilWrite = source.stencilWrite;

		const srcPlanes = source.clippingPlanes;
		let dstPlanes = null;

		if ( srcPlanes !== null ) {

			const n = srcPlanes.length;
			dstPlanes = new Array( n );

			for ( let i = 0; i !== n; ++ i ) {

				dstPlanes[ i ] = srcPlanes[ i ].clone();

			}

		}

		this.clippingPlanes = dstPlanes;
		this.clipIntersection = source.clipIntersection;
		this.clipShadows = source.clipShadows;

		this.shadowSide = source.shadowSide;

		this.colorWrite = source.colorWrite;

		this.precision = source.precision;

		this.polygonOffset = source.polygonOffset;
		this.polygonOffsetFactor = source.polygonOffsetFactor;
		this.polygonOffsetUnits = source.polygonOffsetUnits;

		this.dithering = source.dithering;

		this.alphaTest = source.alphaTest;
		this.premultipliedAlpha = source.premultipliedAlpha;

		this.visible = source.visible;

		this.toneMapped = source.toneMapped;

		this.userData = JSON.parse( JSON.stringify( source.userData ) );

		return this;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

Object.defineProperty( Material.prototype, 'needsUpdate', {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

const _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,
	'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,
	'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,
	'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,
	'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,
	'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,
	'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,
	'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,
	'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,
	'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,
	'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,
	'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,
	'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,
	'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,
	'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,
	'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,
	'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,
	'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,
	'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,
	'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,
	'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,
	'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,
	'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,
	'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };

const _hslA = { h: 0, s: 0, l: 0 };
const _hslB = { h: 0, s: 0, l: 0 };

function hue2rgb( p, q, t ) {

	if ( t < 0 ) t += 1;
	if ( t > 1 ) t -= 1;
	if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;
	if ( t < 1 / 2 ) return q;
	if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );
	return p;

}

function SRGBToLinear( c ) {

	return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );

}

function LinearToSRGB( c ) {

	return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;

}

class Color {

	constructor( r, g, b ) {

		if ( g === undefined && b === undefined ) {

			// r is THREE.Color, hex or string
			return this.set( r );

		}

		return this.setRGB( r, g, b );

	}

	set( value ) {

		if ( value && value.isColor ) {

			this.copy( value );

		} else if ( typeof value === 'number' ) {

			this.setHex( value );

		} else if ( typeof value === 'string' ) {

			this.setStyle( value );

		}

		return this;

	}

	setScalar( scalar ) {

		this.r = scalar;
		this.g = scalar;
		this.b = scalar;

		return this;

	}

	setHex( hex ) {

		hex = Math.floor( hex );

		this.r = ( hex >> 16 & 255 ) / 255;
		this.g = ( hex >> 8 & 255 ) / 255;
		this.b = ( hex & 255 ) / 255;

		return this;

	}

	setRGB( r, g, b ) {

		this.r = r;
		this.g = g;
		this.b = b;

		return this;

	}

	setHSL( h, s, l ) {

		// h,s,l ranges are in 0.0 - 1.0
		h = MathUtils.euclideanModulo( h, 1 );
		s = MathUtils.clamp( s, 0, 1 );
		l = MathUtils.clamp( l, 0, 1 );

		if ( s === 0 ) {

			this.r = this.g = this.b = l;

		} else {

			const p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );
			const q = ( 2 * l ) - p;

			this.r = hue2rgb( q, p, h + 1 / 3 );
			this.g = hue2rgb( q, p, h );
			this.b = hue2rgb( q, p, h - 1 / 3 );

		}

		return this;

	}

	setStyle( style ) {

		function handleAlpha( string ) {

			if ( string === undefined ) return;

			if ( parseFloat( string ) < 1 ) {

				console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );

			}

		}


		let m;

		if ( m = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec( style ) ) {

			// rgb / hsl

			let color;
			const name = m[ 1 ];
			const components = m[ 2 ];

			switch ( name ) {

				case 'rgb':
				case 'rgba':

					if ( color = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec( components ) ) {

						// rgb(255,0,0) rgba(255,0,0,0.5)
						this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;
						this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;
						this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;

						handleAlpha( color[ 4 ] );

						return this;

					}

					if ( color = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec( components ) ) {

						// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
						this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;
						this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;
						this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;

						handleAlpha( color[ 4 ] );

						return this;

					}

					break;

				case 'hsl':
				case 'hsla':

					if ( color = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec( components ) ) {

						// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
						const h = parseFloat( color[ 1 ] ) / 360;
						const s = parseInt( color[ 2 ], 10 ) / 100;
						const l = parseInt( color[ 3 ], 10 ) / 100;

						handleAlpha( color[ 4 ] );

						return this.setHSL( h, s, l );

					}

					break;

			}

		} else if ( m = /^\#([A-Fa-f\d]+)$/.exec( style ) ) {

			// hex color

			const hex = m[ 1 ];
			const size = hex.length;

			if ( size === 3 ) {

				// #ff0
				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;
				this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;
				this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;

				return this;

			} else if ( size === 6 ) {

				// #ff0000
				this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;
				this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;
				this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;

				return this;

			}

		}

		if ( style && style.length > 0 ) {

			return this.setColorName( style );

		}

		return this;

	}

	setColorName( style ) {

		// color keywords
		const hex = _colorKeywords[ style ];

		if ( hex !== undefined ) {

			// red
			this.setHex( hex );

		} else {

			// unknown color
			console.warn( 'THREE.Color: Unknown color ' + style );

		}

		return this;

	}

	clone() {

		return new this.constructor( this.r, this.g, this.b );

	}

	copy( color ) {

		this.r = color.r;
		this.g = color.g;
		this.b = color.b;

		return this;

	}

	copyGammaToLinear( color, gammaFactor = 2.0 ) {

		this.r = Math.pow( color.r, gammaFactor );
		this.g = Math.pow( color.g, gammaFactor );
		this.b = Math.pow( color.b, gammaFactor );

		return this;

	}

	copyLinearToGamma( color, gammaFactor = 2.0 ) {

		const safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;

		this.r = Math.pow( color.r, safeInverse );
		this.g = Math.pow( color.g, safeInverse );
		this.b = Math.pow( color.b, safeInverse );

		return this;

	}

	convertGammaToLinear( gammaFactor ) {

		this.copyGammaToLinear( this, gammaFactor );

		return this;

	}

	convertLinearToGamma( gammaFactor ) {

		this.copyLinearToGamma( this, gammaFactor );

		return this;

	}

	copySRGBToLinear( color ) {

		this.r = SRGBToLinear( color.r );
		this.g = SRGBToLinear( color.g );
		this.b = SRGBToLinear( color.b );

		return this;

	}

	copyLinearToSRGB( color ) {

		this.r = LinearToSRGB( color.r );
		this.g = LinearToSRGB( color.g );
		this.b = LinearToSRGB( color.b );

		return this;

	}

	convertSRGBToLinear() {

		this.copySRGBToLinear( this );

		return this;

	}

	convertLinearToSRGB() {

		this.copyLinearToSRGB( this );

		return this;

	}

	getHex() {

		return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;

	}

	getHexString() {

		return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );

	}

	getHSL( target ) {

		// h,s,l ranges are in 0.0 - 1.0

		if ( target === undefined ) {

			console.warn( 'THREE.Color: .getHSL() target is now required' );
			target = { h: 0, s: 0, l: 0 };

		}

		const r = this.r, g = this.g, b = this.b;

		const max = Math.max( r, g, b );
		const min = Math.min( r, g, b );

		let hue, saturation;
		const lightness = ( min + max ) / 2.0;

		if ( min === max ) {

			hue = 0;
			saturation = 0;

		} else {

			const delta = max - min;

			saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );

			switch ( max ) {

				case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;
				case g: hue = ( b - r ) / delta + 2; break;
				case b: hue = ( r - g ) / delta + 4; break;

			}

			hue /= 6;

		}

		target.h = hue;
		target.s = saturation;
		target.l = lightness;

		return target;

	}

	getStyle() {

		return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';

	}

	offsetHSL( h, s, l ) {

		this.getHSL( _hslA );

		_hslA.h += h; _hslA.s += s; _hslA.l += l;

		this.setHSL( _hslA.h, _hslA.s, _hslA.l );

		return this;

	}

	add( color ) {

		this.r += color.r;
		this.g += color.g;
		this.b += color.b;

		return this;

	}

	addColors( color1, color2 ) {

		this.r = color1.r + color2.r;
		this.g = color1.g + color2.g;
		this.b = color1.b + color2.b;

		return this;

	}

	addScalar( s ) {

		this.r += s;
		this.g += s;
		this.b += s;

		return this;

	}

	sub( color ) {

		this.r = Math.max( 0, this.r - color.r );
		this.g = Math.max( 0, this.g - color.g );
		this.b = Math.max( 0, this.b - color.b );

		return this;

	}

	multiply( color ) {

		this.r *= color.r;
		this.g *= color.g;
		this.b *= color.b;

		return this;

	}

	multiplyScalar( s ) {

		this.r *= s;
		this.g *= s;
		this.b *= s;

		return this;

	}

	lerp( color, alpha ) {

		this.r += ( color.r - this.r ) * alpha;
		this.g += ( color.g - this.g ) * alpha;
		this.b += ( color.b - this.b ) * alpha;

		return this;

	}

	lerpColors( color1, color2, alpha ) {

		this.r = color1.r + ( color2.r - color1.r ) * alpha;
		this.g = color1.g + ( color2.g - color1.g ) * alpha;
		this.b = color1.b + ( color2.b - color1.b ) * alpha;

		return this;

	}

	lerpHSL( color, alpha ) {

		this.getHSL( _hslA );
		color.getHSL( _hslB );

		const h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );
		const s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );
		const l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );

		this.setHSL( h, s, l );

		return this;

	}

	equals( c ) {

		return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );

	}

	fromArray( array, offset = 0 ) {

		this.r = array[ offset ];
		this.g = array[ offset + 1 ];
		this.b = array[ offset + 2 ];

		return this;

	}

	toArray( array = [], offset = 0 ) {

		array[ offset ] = this.r;
		array[ offset + 1 ] = this.g;
		array[ offset + 2 ] = this.b;

		return array;

	}

	fromBufferAttribute( attribute, index ) {

		this.r = attribute.getX( index );
		this.g = attribute.getY( index );
		this.b = attribute.getZ( index );

		if ( attribute.normalized === true ) {

			// assuming Uint8Array

			this.r /= 255;
			this.g /= 255;
			this.b /= 255;

		}

		return this;

	}

	toJSON() {

		return this.getHex();

	}

}

Color.NAMES = _colorKeywords;

Color.prototype.isColor = true;
Color.prototype.r = 1;
Color.prototype.g = 1;
Color.prototype.b = 1;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  depthTest: <bool>,
 *  depthWrite: <bool>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>
 * }
 */

class MeshBasicMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshBasicMaterial';

		this.color = new Color( 0xffffff ); // emissive

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;

		return this;

	}

}

MeshBasicMaterial.prototype.isMeshBasicMaterial = true;

const _vector$3 = new Vector3();
const _vector2$1 = new Vector2();

function BufferAttribute( array, itemSize, normalized ) {

	if ( Array.isArray( array ) ) {

		throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );

	}

	this.name = '';

	this.array = array;
	this.itemSize = itemSize;
	this.count = array !== undefined ? array.length / itemSize : 0;
	this.normalized = normalized === true;

	this.usage = StaticDrawUsage;
	this.updateRange = { offset: 0, count: - 1 };

	this.version = 0;

}

Object.defineProperty( BufferAttribute.prototype, 'needsUpdate', {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

Object.assign( BufferAttribute.prototype, {

	isBufferAttribute: true,

	onUploadCallback: function () {},

	setUsage: function ( value ) {

		this.usage = value;

		return this;

	},

	copy: function ( source ) {

		this.name = source.name;
		this.array = new source.array.constructor( source.array );
		this.itemSize = source.itemSize;
		this.count = source.count;
		this.normalized = source.normalized;

		this.usage = source.usage;

		return this;

	},

	copyAt: function ( index1, attribute, index2 ) {

		index1 *= this.itemSize;
		index2 *= attribute.itemSize;

		for ( let i = 0, l = this.itemSize; i < l; i ++ ) {

			this.array[ index1 + i ] = attribute.array[ index2 + i ];

		}

		return this;

	},

	copyArray: function ( array ) {

		this.array.set( array );

		return this;

	},

	copyColorsArray: function ( colors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = colors.length; i < l; i ++ ) {

			let color = colors[ i ];

			if ( color === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );
				color = new Color();

			}

			array[ offset ++ ] = color.r;
			array[ offset ++ ] = color.g;
			array[ offset ++ ] = color.b;

		}

		return this;

	},

	copyVector2sArray: function ( vectors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = vectors.length; i < l; i ++ ) {

			let vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );
				vector = new Vector2();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;

		}

		return this;

	},

	copyVector3sArray: function ( vectors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = vectors.length; i < l; i ++ ) {

			let vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );
				vector = new Vector3();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;
			array[ offset ++ ] = vector.z;

		}

		return this;

	},

	copyVector4sArray: function ( vectors ) {

		const array = this.array;
		let offset = 0;

		for ( let i = 0, l = vectors.length; i < l; i ++ ) {

			let vector = vectors[ i ];

			if ( vector === undefined ) {

				console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );
				vector = new Vector4();

			}

			array[ offset ++ ] = vector.x;
			array[ offset ++ ] = vector.y;
			array[ offset ++ ] = vector.z;
			array[ offset ++ ] = vector.w;

		}

		return this;

	},

	applyMatrix3: function ( m ) {

		if ( this.itemSize === 2 ) {

			for ( let i = 0, l = this.count; i < l; i ++ ) {

				_vector2$1.fromBufferAttribute( this, i );
				_vector2$1.applyMatrix3( m );

				this.setXY( i, _vector2$1.x, _vector2$1.y );

			}

		} else if ( this.itemSize === 3 ) {

			for ( let i = 0, l = this.count; i < l; i ++ ) {

				_vector$3.fromBufferAttribute( this, i );
				_vector$3.applyMatrix3( m );

				this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

			}

		}

		return this;

	},

	applyMatrix4: function ( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$3.x = this.getX( i );
			_vector$3.y = this.getY( i );
			_vector$3.z = this.getZ( i );

			_vector$3.applyMatrix4( m );

			this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

		}

		return this;

	},

	applyNormalMatrix: function ( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$3.x = this.getX( i );
			_vector$3.y = this.getY( i );
			_vector$3.z = this.getZ( i );

			_vector$3.applyNormalMatrix( m );

			this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

		}

		return this;

	},

	transformDirection: function ( m ) {

		for ( let i = 0, l = this.count; i < l; i ++ ) {

			_vector$3.x = this.getX( i );
			_vector$3.y = this.getY( i );
			_vector$3.z = this.getZ( i );

			_vector$3.transformDirection( m );

			this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

		}

		return this;

	},

	set: function ( value, offset = 0 ) {

		this.array.set( value, offset );

		return this;

	},

	getX: function ( index ) {

		return this.array[ index * this.itemSize ];

	},

	setX: function ( index, x ) {

		this.array[ index * this.itemSize ] = x;

		return this;

	},

	getY: function ( index ) {

		return this.array[ index * this.itemSize + 1 ];

	},

	setY: function ( index, y ) {

		this.array[ index * this.itemSize + 1 ] = y;

		return this;

	},

	getZ: function ( index ) {

		return this.array[ index * this.itemSize + 2 ];

	},

	setZ: function ( index, z ) {

		this.array[ index * this.itemSize + 2 ] = z;

		return this;

	},

	getW: function ( index ) {

		return this.array[ index * this.itemSize + 3 ];

	},

	setW: function ( index, w ) {

		this.array[ index * this.itemSize + 3 ] = w;

		return this;

	},

	setXY: function ( index, x, y ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;

		return this;

	},

	setXYZ: function ( index, x, y, z ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;
		this.array[ index + 2 ] = z;

		return this;

	},

	setXYZW: function ( index, x, y, z, w ) {

		index *= this.itemSize;

		this.array[ index + 0 ] = x;
		this.array[ index + 1 ] = y;
		this.array[ index + 2 ] = z;
		this.array[ index + 3 ] = w;

		return this;

	},

	onUpload: function ( callback ) {

		this.onUploadCallback = callback;

		return this;

	},

	clone: function () {

		return new this.constructor( this.array, this.itemSize ).copy( this );

	},

	toJSON: function () {

		return {
			itemSize: this.itemSize,
			type: this.array.constructor.name,
			array: Array.prototype.slice.call( this.array ),
			normalized: this.normalized
		};

	}

} );

//

function Int8BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );

}

Int8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;


function Uint8BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );

}

Uint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;


function Uint8ClampedBufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );

}

Uint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;


function Int16BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );

}

Int16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;


function Uint16BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );

}

Uint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;


function Int32BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );

}

Int32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;


function Uint32BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );

}

Uint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;

function Float16BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );

}

Float16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Float16BufferAttribute.prototype.constructor = Float16BufferAttribute;
Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;

function Float32BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );

}

Float32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;


function Float64BufferAttribute( array, itemSize, normalized ) {

	BufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );

}

Float64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;

function arrayMax( array ) {

	if ( array.length === 0 ) return - Infinity;

	let max = array[ 0 ];

	for ( let i = 1, l = array.length; i < l; ++ i ) {

		if ( array[ i ] > max ) max = array[ i ];

	}

	return max;

}

const TYPED_ARRAYS = {
	Int8Array: Int8Array,
	Uint8Array: Uint8Array,
	Uint8ClampedArray: Uint8ClampedArray,
	Int16Array: Int16Array,
	Uint16Array: Uint16Array,
	Int32Array: Int32Array,
	Uint32Array: Uint32Array,
	Float32Array: Float32Array,
	Float64Array: Float64Array
};

function getTypedArray( type, buffer ) {

	return new TYPED_ARRAYS[ type ]( buffer );

}

let _id = 0;

const _m1$2 = new Matrix4();
const _obj = new Object3D();
const _offset = new Vector3();
const _box$2 = new Box3();
const _boxMorphTargets = new Box3();
const _vector$4 = new Vector3();

function BufferGeometry() {

	Object.defineProperty( this, 'id', { value: _id ++ } );

	this.uuid = MathUtils.generateUUID();

	this.name = '';
	this.type = 'BufferGeometry';

	this.index = null;
	this.attributes = {};

	this.morphAttributes = {};
	this.morphTargetsRelative = false;

	this.groups = [];

	this.boundingBox = null;
	this.boundingSphere = null;

	this.drawRange = { start: 0, count: Infinity };

	this.userData = {};

}

BufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

	constructor: BufferGeometry,

	isBufferGeometry: true,

	getIndex: function () {

		return this.index;

	},

	setIndex: function ( index ) {

		if ( Array.isArray( index ) ) {

			this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );

		} else {

			this.index = index;

		}

		return this;

	},

	getAttribute: function ( name ) {

		return this.attributes[ name ];

	},

	setAttribute: function ( name, attribute ) {

		this.attributes[ name ] = attribute;

		return this;

	},

	deleteAttribute: function ( name ) {

		delete this.attributes[ name ];

		return this;

	},

	hasAttribute: function ( name ) {

		return this.attributes[ name ] !== undefined;

	},

	addGroup: function ( start, count, materialIndex = 0 ) {

		this.groups.push( {

			start: start,
			count: count,
			materialIndex: materialIndex

		} );

	},

	clearGroups: function () {

		this.groups = [];

	},

	setDrawRange: function ( start, count ) {

		this.drawRange.start = start;
		this.drawRange.count = count;

	},

	applyMatrix4: function ( matrix ) {

		const position = this.attributes.position;

		if ( position !== undefined ) {

			position.applyMatrix4( matrix );

			position.needsUpdate = true;

		}

		const normal = this.attributes.normal;

		if ( normal !== undefined ) {

			const normalMatrix = new Matrix3().getNormalMatrix( matrix );

			normal.applyNormalMatrix( normalMatrix );

			normal.needsUpdate = true;

		}

		const tangent = this.attributes.tangent;

		if ( tangent !== undefined ) {

			tangent.transformDirection( matrix );

			tangent.needsUpdate = true;

		}

		if ( this.boundingBox !== null ) {

			this.computeBoundingBox();

		}

		if ( this.boundingSphere !== null ) {

			this.computeBoundingSphere();

		}

		return this;

	},

	rotateX: function ( angle ) {

		// rotate geometry around world x-axis

		_m1$2.makeRotationX( angle );

		this.applyMatrix4( _m1$2 );

		return this;

	},

	rotateY: function ( angle ) {

		// rotate geometry around world y-axis

		_m1$2.makeRotationY( angle );

		this.applyMatrix4( _m1$2 );

		return this;

	},

	rotateZ: function ( angle ) {

		// rotate geometry around world z-axis

		_m1$2.makeRotationZ( angle );

		this.applyMatrix4( _m1$2 );

		return this;

	},

	translate: function ( x, y, z ) {

		// translate geometry

		_m1$2.makeTranslation( x, y, z );

		this.applyMatrix4( _m1$2 );

		return this;

	},

	scale: function ( x, y, z ) {

		// scale geometry

		_m1$2.makeScale( x, y, z );

		this.applyMatrix4( _m1$2 );

		return this;

	},

	lookAt: function ( vector ) {

		_obj.lookAt( vector );

		_obj.updateMatrix();

		this.applyMatrix4( _obj.matrix );

		return this;

	},

	center: function () {

		this.computeBoundingBox();

		this.boundingBox.getCenter( _offset ).negate();

		this.translate( _offset.x, _offset.y, _offset.z );

		return this;

	},

	setFromPoints: function ( points ) {

		const position = [];

		for ( let i = 0, l = points.length; i < l; i ++ ) {

			const point = points[ i ];
			position.push( point.x, point.y, point.z || 0 );

		}

		this.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );

		return this;

	},

	computeBoundingBox: function () {

		if ( this.boundingBox === null ) {

			this.boundingBox = new Box3();

		}

		const position = this.attributes.position;
		const morphAttributesPosition = this.morphAttributes.position;

		if ( position && position.isGLBufferAttribute ) {

			console.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this );

			this.boundingBox.set(
				new Vector3( - Infinity, - Infinity, - Infinity ),
				new Vector3( + Infinity, + Infinity, + Infinity )
			);

			return;

		}

		if ( position !== undefined ) {

			this.boundingBox.setFromBufferAttribute( position );

			// process morph attributes if present

			if ( morphAttributesPosition ) {

				for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

					const morphAttribute = morphAttributesPosition[ i ];
					_box$2.setFromBufferAttribute( morphAttribute );

					if ( this.morphTargetsRelative ) {

						_vector$4.addVectors( this.boundingBox.min, _box$2.min );
						this.boundingBox.expandByPoint( _vector$4 );

						_vector$4.addVectors( this.boundingBox.max, _box$2.max );
						this.boundingBox.expandByPoint( _vector$4 );

					} else {

						this.boundingBox.expandByPoint( _box$2.min );
						this.boundingBox.expandByPoint( _box$2.max );

					}

				}

			}

		} else {

			this.boundingBox.makeEmpty();

		}

		if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {

			console.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this );

		}

	},

	computeBoundingSphere: function () {

		if ( this.boundingSphere === null ) {

			this.boundingSphere = new Sphere();

		}

		const position = this.attributes.position;
		const morphAttributesPosition = this.morphAttributes.position;

		if ( position && position.isGLBufferAttribute ) {

			console.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this );

			this.boundingSphere.set( new Vector3(), Infinity );

			return;

		}

		if ( position ) {

			// first, find the center of the bounding sphere

			const center = this.boundingSphere.center;

			_box$2.setFromBufferAttribute( position );

			// process morph attributes if present

			if ( morphAttributesPosition ) {

				for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

					const morphAttribute = morphAttributesPosition[ i ];
					_boxMorphTargets.setFromBufferAttribute( morphAttribute );

					if ( this.morphTargetsRelative ) {

						_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );
						_box$2.expandByPoint( _vector$4 );

						_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );
						_box$2.expandByPoint( _vector$4 );

					} else {

						_box$2.expandByPoint( _boxMorphTargets.min );
						_box$2.expandByPoint( _boxMorphTargets.max );

					}

				}

			}

			_box$2.getCenter( center );

			// second, try to find a boundingSphere with a radius smaller than the
			// boundingSphere of the boundingBox: sqrt(3) smaller in the best case

			let maxRadiusSq = 0;

			for ( let i = 0, il = position.count; i < il; i ++ ) {

				_vector$4.fromBufferAttribute( position, i );

				maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );

			}

			// process morph attributes if present

			if ( morphAttributesPosition ) {

				for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

					const morphAttribute = morphAttributesPosition[ i ];
					const morphTargetsRelative = this.morphTargetsRelative;

					for ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {

						_vector$4.fromBufferAttribute( morphAttribute, j );

						if ( morphTargetsRelative ) {

							_offset.fromBufferAttribute( position, j );
							_vector$4.add( _offset );

						}

						maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );

					}

				}

			}

			this.boundingSphere.radius = Math.sqrt( maxRadiusSq );

			if ( isNaN( this.boundingSphere.radius ) ) {

				console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this );

			}

		}

	},

	computeFaceNormals: function () {

		// backwards compatibility

	},

	computeTangents: function () {

		const index = this.index;
		const attributes = this.attributes;

		// based on http://www.terathon.com/code/tangent.html
		// (per vertex tangents)

		if ( index === null ||
			 attributes.position === undefined ||
			 attributes.normal === undefined ||
			 attributes.uv === undefined ) {

			console.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );
			return;

		}

		const indices = index.array;
		const positions = attributes.position.array;
		const normals = attributes.normal.array;
		const uvs = attributes.uv.array;

		const nVertices = positions.length / 3;

		if ( attributes.tangent === undefined ) {

			this.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );

		}

		const tangents = attributes.tangent.array;

		const tan1 = [], tan2 = [];

		for ( let i = 0; i < nVertices; i ++ ) {

			tan1[ i ] = new Vector3();
			tan2[ i ] = new Vector3();

		}

		const vA = new Vector3(),
			vB = new Vector3(),
			vC = new Vector3(),

			uvA = new Vector2(),
			uvB = new Vector2(),
			uvC = new Vector2(),

			sdir = new Vector3(),
			tdir = new Vector3();

		function handleTriangle( a, b, c ) {

			vA.fromArray( positions, a * 3 );
			vB.fromArray( positions, b * 3 );
			vC.fromArray( positions, c * 3 );

			uvA.fromArray( uvs, a * 2 );
			uvB.fromArray( uvs, b * 2 );
			uvC.fromArray( uvs, c * 2 );

			vB.sub( vA );
			vC.sub( vA );

			uvB.sub( uvA );
			uvC.sub( uvA );

			const r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );

			// silently ignore degenerate uv triangles having coincident or colinear vertices

			if ( ! isFinite( r ) ) return;

			sdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );
			tdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );

			tan1[ a ].add( sdir );
			tan1[ b ].add( sdir );
			tan1[ c ].add( sdir );

			tan2[ a ].add( tdir );
			tan2[ b ].add( tdir );
			tan2[ c ].add( tdir );

		}

		let groups = this.groups;

		if ( groups.length === 0 ) {

			groups = [ {
				start: 0,
				count: indices.length
			} ];

		}

		for ( let i = 0, il = groups.length; i < il; ++ i ) {

			const group = groups[ i ];

			const start = group.start;
			const count = group.count;

			for ( let j = start, jl = start + count; j < jl; j += 3 ) {

				handleTriangle(
					indices[ j + 0 ],
					indices[ j + 1 ],
					indices[ j + 2 ]
				);

			}

		}

		const tmp = new Vector3(), tmp2 = new Vector3();
		const n = new Vector3(), n2 = new Vector3();

		function handleVertex( v ) {

			n.fromArray( normals, v * 3 );
			n2.copy( n );

			const t = tan1[ v ];

			// Gram-Schmidt orthogonalize

			tmp.copy( t );
			tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();

			// Calculate handedness

			tmp2.crossVectors( n2, t );
			const test = tmp2.dot( tan2[ v ] );
			const w = ( test < 0.0 ) ? - 1.0 : 1.0;

			tangents[ v * 4 ] = tmp.x;
			tangents[ v * 4 + 1 ] = tmp.y;
			tangents[ v * 4 + 2 ] = tmp.z;
			tangents[ v * 4 + 3 ] = w;

		}

		for ( let i = 0, il = groups.length; i < il; ++ i ) {

			const group = groups[ i ];

			const start = group.start;
			const count = group.count;

			for ( let j = start, jl = start + count; j < jl; j += 3 ) {

				handleVertex( indices[ j + 0 ] );
				handleVertex( indices[ j + 1 ] );
				handleVertex( indices[ j + 2 ] );

			}

		}

	},

	computeVertexNormals: function () {

		const index = this.index;
		const positionAttribute = this.getAttribute( 'position' );

		if ( positionAttribute !== undefined ) {

			let normalAttribute = this.getAttribute( 'normal' );

			if ( normalAttribute === undefined ) {

				normalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );
				this.setAttribute( 'normal', normalAttribute );

			} else {

				// reset existing normals to zero

				for ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {

					normalAttribute.setXYZ( i, 0, 0, 0 );

				}

			}

			const pA = new Vector3(), pB = new Vector3(), pC = new Vector3();
			const nA = new Vector3(), nB = new Vector3(), nC = new Vector3();
			const cb = new Vector3(), ab = new Vector3();

			// indexed elements

			if ( index ) {

				for ( let i = 0, il = index.count; i < il; i += 3 ) {

					const vA = index.getX( i + 0 );
					const vB = index.getX( i + 1 );
					const vC = index.getX( i + 2 );

					pA.fromBufferAttribute( positionAttribute, vA );
					pB.fromBufferAttribute( positionAttribute, vB );
					pC.fromBufferAttribute( positionAttribute, vC );

					cb.subVectors( pC, pB );
					ab.subVectors( pA, pB );
					cb.cross( ab );

					nA.fromBufferAttribute( normalAttribute, vA );
					nB.fromBufferAttribute( normalAttribute, vB );
					nC.fromBufferAttribute( normalAttribute, vC );

					nA.add( cb );
					nB.add( cb );
					nC.add( cb );

					normalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );
					normalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );
					normalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );

				}

			} else {

				// non-indexed elements (unconnected triangle soup)

				for ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {

					pA.fromBufferAttribute( positionAttribute, i + 0 );
					pB.fromBufferAttribute( positionAttribute, i + 1 );
					pC.fromBufferAttribute( positionAttribute, i + 2 );

					cb.subVectors( pC, pB );
					ab.subVectors( pA, pB );
					cb.cross( ab );

					normalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );
					normalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );
					normalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );

				}

			}

			this.normalizeNormals();

			normalAttribute.needsUpdate = true;

		}

	},

	merge: function ( geometry, offset ) {

		if ( ! ( geometry && geometry.isBufferGeometry ) ) {

			console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );
			return;

		}

		if ( offset === undefined ) {

			offset = 0;

			console.warn(
				'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '
				+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'
			);

		}

		const attributes = this.attributes;

		for ( const key in attributes ) {

			if ( geometry.attributes[ key ] === undefined ) continue;

			const attribute1 = attributes[ key ];
			const attributeArray1 = attribute1.array;

			const attribute2 = geometry.attributes[ key ];
			const attributeArray2 = attribute2.array;

			const attributeOffset = attribute2.itemSize * offset;
			const length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );

			for ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {

				attributeArray1[ j ] = attributeArray2[ i ];

			}

		}

		return this;

	},

	normalizeNormals: function () {

		const normals = this.attributes.normal;

		for ( let i = 0, il = normals.count; i < il; i ++ ) {

			_vector$4.fromBufferAttribute( normals, i );

			_vector$4.normalize();

			normals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );

		}

	},

	toNonIndexed: function () {

		function convertBufferAttribute( attribute, indices ) {

			const array = attribute.array;
			const itemSize = attribute.itemSize;
			const normalized = attribute.normalized;

			const array2 = new array.constructor( indices.length * itemSize );

			let index = 0, index2 = 0;

			for ( let i = 0, l = indices.length; i < l; i ++ ) {

				index = indices[ i ] * itemSize;

				for ( let j = 0; j < itemSize; j ++ ) {

					array2[ index2 ++ ] = array[ index ++ ];

				}

			}

			return new BufferAttribute( array2, itemSize, normalized );

		}

		//

		if ( this.index === null ) {

			console.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );
			return this;

		}

		const geometry2 = new BufferGeometry();

		const indices = this.index.array;
		const attributes = this.attributes;

		// attributes

		for ( const name in attributes ) {

			const attribute = attributes[ name ];

			const newAttribute = convertBufferAttribute( attribute, indices );

			geometry2.setAttribute( name, newAttribute );

		}

		// morph attributes

		const morphAttributes = this.morphAttributes;

		for ( const name in morphAttributes ) {

			const morphArray = [];
			const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

			for ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {

				const attribute = morphAttribute[ i ];

				const newAttribute = convertBufferAttribute( attribute, indices );

				morphArray.push( newAttribute );

			}

			geometry2.morphAttributes[ name ] = morphArray;

		}

		geometry2.morphTargetsRelative = this.morphTargetsRelative;

		// groups

		const groups = this.groups;

		for ( let i = 0, l = groups.length; i < l; i ++ ) {

			const group = groups[ i ];
			geometry2.addGroup( group.start, group.count, group.materialIndex );

		}

		return geometry2;

	},

	toJSON: function () {

		const data = {
			metadata: {
				version: 4.5,
				type: 'BufferGeometry',
				generator: 'BufferGeometry.toJSON'
			}
		};

		// standard BufferGeometry serialization

		data.uuid = this.uuid;
		data.type = this.type;
		if ( this.name !== '' ) data.name = this.name;
		if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;

		if ( this.parameters !== undefined ) {

			const parameters = this.parameters;

			for ( const key in parameters ) {

				if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];

			}

			return data;

		}

		data.data = { attributes: {} };

		const index = this.index;

		if ( index !== null ) {

			data.data.index = {
				type: index.array.constructor.name,
				array: Array.prototype.slice.call( index.array )
			};

		}

		const attributes = this.attributes;

		for ( const key in attributes ) {

			const attribute = attributes[ key ];

			const attributeData = attribute.toJSON( data.data );

			if ( attribute.name !== '' ) attributeData.name = attribute.name;

			data.data.attributes[ key ] = attributeData;

		}

		const morphAttributes = {};
		let hasMorphAttributes = false;

		for ( const key in this.morphAttributes ) {

			const attributeArray = this.morphAttributes[ key ];

			const array = [];

			for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {

				const attribute = attributeArray[ i ];

				const attributeData = attribute.toJSON( data.data );

				if ( attribute.name !== '' ) attributeData.name = attribute.name;

				array.push( attributeData );

			}

			if ( array.length > 0 ) {

				morphAttributes[ key ] = array;

				hasMorphAttributes = true;

			}

		}

		if ( hasMorphAttributes ) {

			data.data.morphAttributes = morphAttributes;
			data.data.morphTargetsRelative = this.morphTargetsRelative;

		}

		const groups = this.groups;

		if ( groups.length > 0 ) {

			data.data.groups = JSON.parse( JSON.stringify( groups ) );

		}

		const boundingSphere = this.boundingSphere;

		if ( boundingSphere !== null ) {

			data.data.boundingSphere = {
				center: boundingSphere.center.toArray(),
				radius: boundingSphere.radius
			};

		}

		return data;

	},

	clone: function () {

		/*
		 // Handle primitives

		 const parameters = this.parameters;

		 if ( parameters !== undefined ) {

		 const values = [];

		 for ( const key in parameters ) {

		 values.push( parameters[ key ] );

		 }

		 const geometry = Object.create( this.constructor.prototype );
		 this.constructor.apply( geometry, values );
		 return geometry;

		 }

		 return new this.constructor().copy( this );
		 */

		return new BufferGeometry().copy( this );

	},

	copy: function ( source ) {

		// reset

		this.index = null;
		this.attributes = {};
		this.morphAttributes = {};
		this.groups = [];
		this.boundingBox = null;
		this.boundingSphere = null;

		// used for storing cloned, shared data

		const data = {};

		// name

		this.name = source.name;

		// index

		const index = source.index;

		if ( index !== null ) {

			this.setIndex( index.clone( data ) );

		}

		// attributes

		const attributes = source.attributes;

		for ( const name in attributes ) {

			const attribute = attributes[ name ];
			this.setAttribute( name, attribute.clone( data ) );

		}

		// morph attributes

		const morphAttributes = source.morphAttributes;

		for ( const name in morphAttributes ) {

			const array = [];
			const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

			for ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {

				array.push( morphAttribute[ i ].clone( data ) );

			}

			this.morphAttributes[ name ] = array;

		}

		this.morphTargetsRelative = source.morphTargetsRelative;

		// groups

		const groups = source.groups;

		for ( let i = 0, l = groups.length; i < l; i ++ ) {

			const group = groups[ i ];
			this.addGroup( group.start, group.count, group.materialIndex );

		}

		// bounding box

		const boundingBox = source.boundingBox;

		if ( boundingBox !== null ) {

			this.boundingBox = boundingBox.clone();

		}

		// bounding sphere

		const boundingSphere = source.boundingSphere;

		if ( boundingSphere !== null ) {

			this.boundingSphere = boundingSphere.clone();

		}

		// draw range

		this.drawRange.start = source.drawRange.start;
		this.drawRange.count = source.drawRange.count;

		// user data

		this.userData = source.userData;

		return this;

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

const _inverseMatrix = new Matrix4();
const _ray = new Ray();
const _sphere = new Sphere();

const _vA = new Vector3();
const _vB = new Vector3();
const _vC = new Vector3();

const _tempA = new Vector3();
const _tempB = new Vector3();
const _tempC = new Vector3();

const _morphA = new Vector3();
const _morphB = new Vector3();
const _morphC = new Vector3();

const _uvA = new Vector2();
const _uvB = new Vector2();
const _uvC = new Vector2();

const _intersectionPoint = new Vector3();
const _intersectionPointWorld = new Vector3();

function Mesh( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {

	Object3D.call( this );

	this.type = 'Mesh';

	this.geometry = geometry;
	this.material = material;

	this.updateMorphTargets();

}

Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Mesh,

	isMesh: true,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		if ( source.morphTargetInfluences !== undefined ) {

			this.morphTargetInfluences = source.morphTargetInfluences.slice();

		}

		if ( source.morphTargetDictionary !== undefined ) {

			this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );

		}

		this.material = source.material;
		this.geometry = source.geometry;

		return this;

	},

	updateMorphTargets: function () {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			const morphAttributes = geometry.morphAttributes;
			const keys = Object.keys( morphAttributes );

			if ( keys.length > 0 ) {

				const morphAttribute = morphAttributes[ keys[ 0 ] ];

				if ( morphAttribute !== undefined ) {

					this.morphTargetInfluences = [];
					this.morphTargetDictionary = {};

					for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

						const name = morphAttribute[ m ].name || String( m );

						this.morphTargetInfluences.push( 0 );
						this.morphTargetDictionary[ name ] = m;

					}

				}

			}

		} else {

			const morphTargets = geometry.morphTargets;

			if ( morphTargets !== undefined && morphTargets.length > 0 ) {

				console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

			}

		}

	},

	raycast: function ( raycaster, intersects ) {

		const geometry = this.geometry;
		const material = this.material;
		const matrixWorld = this.matrixWorld;

		if ( material === undefined ) return;

		// Checking boundingSphere distance to ray

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere.copy( geometry.boundingSphere );
		_sphere.applyMatrix4( matrixWorld );

		if ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;

		//

		_inverseMatrix.copy( matrixWorld ).invert();
		_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );

		// Check boundingBox before continuing

		if ( geometry.boundingBox !== null ) {

			if ( _ray.intersectsBox( geometry.boundingBox ) === false ) return;

		}

		let intersection;

		if ( geometry.isBufferGeometry ) {

			const index = geometry.index;
			const position = geometry.attributes.position;
			const morphPosition = geometry.morphAttributes.position;
			const morphTargetsRelative = geometry.morphTargetsRelative;
			const uv = geometry.attributes.uv;
			const uv2 = geometry.attributes.uv2;
			const groups = geometry.groups;
			const drawRange = geometry.drawRange;

			if ( index !== null ) {

				// indexed buffer geometry

				if ( Array.isArray( material ) ) {

					for ( let i = 0, il = groups.length; i < il; i ++ ) {

						const group = groups[ i ];
						const groupMaterial = material[ group.materialIndex ];

						const start = Math.max( group.start, drawRange.start );
						const end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );

						for ( let j = start, jl = end; j < jl; j += 3 ) {

							const a = index.getX( j );
							const b = index.getX( j + 1 );
							const c = index.getX( j + 2 );

							intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

							if ( intersection ) {

								intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics
								intersection.face.materialIndex = group.materialIndex;
								intersects.push( intersection );

							}

						}

					}

				} else {

					const start = Math.max( 0, drawRange.start );
					const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );

					for ( let i = start, il = end; i < il; i += 3 ) {

						const a = index.getX( i );
						const b = index.getX( i + 1 );
						const c = index.getX( i + 2 );

						intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

						if ( intersection ) {

							intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics
							intersects.push( intersection );

						}

					}

				}

			} else if ( position !== undefined ) {

				// non-indexed buffer geometry

				if ( Array.isArray( material ) ) {

					for ( let i = 0, il = groups.length; i < il; i ++ ) {

						const group = groups[ i ];
						const groupMaterial = material[ group.materialIndex ];

						const start = Math.max( group.start, drawRange.start );
						const end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );

						for ( let j = start, jl = end; j < jl; j += 3 ) {

							const a = j;
							const b = j + 1;
							const c = j + 2;

							intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

							if ( intersection ) {

								intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics
								intersection.face.materialIndex = group.materialIndex;
								intersects.push( intersection );

							}

						}

					}

				} else {

					const start = Math.max( 0, drawRange.start );
					const end = Math.min( position.count, ( drawRange.start + drawRange.count ) );

					for ( let i = start, il = end; i < il; i += 3 ) {

						const a = i;
						const b = i + 1;
						const c = i + 2;

						intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

						if ( intersection ) {

							intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics
							intersects.push( intersection );

						}

					}

				}

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

	}

} );

function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {

	let intersect;

	if ( material.side === BackSide ) {

		intersect = ray.intersectTriangle( pC, pB, pA, true, point );

	} else {

		intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );

	}

	if ( intersect === null ) return null;

	_intersectionPointWorld.copy( point );
	_intersectionPointWorld.applyMatrix4( object.matrixWorld );

	const distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );

	if ( distance < raycaster.near || distance > raycaster.far ) return null;

	return {
		distance: distance,
		point: _intersectionPointWorld.clone(),
		object: object
	};

}

function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {

	_vA.fromBufferAttribute( position, a );
	_vB.fromBufferAttribute( position, b );
	_vC.fromBufferAttribute( position, c );

	const morphInfluences = object.morphTargetInfluences;

	if ( material.morphTargets && morphPosition && morphInfluences ) {

		_morphA.set( 0, 0, 0 );
		_morphB.set( 0, 0, 0 );
		_morphC.set( 0, 0, 0 );

		for ( let i = 0, il = morphPosition.length; i < il; i ++ ) {

			const influence = morphInfluences[ i ];
			const morphAttribute = morphPosition[ i ];

			if ( influence === 0 ) continue;

			_tempA.fromBufferAttribute( morphAttribute, a );
			_tempB.fromBufferAttribute( morphAttribute, b );
			_tempC.fromBufferAttribute( morphAttribute, c );

			if ( morphTargetsRelative ) {

				_morphA.addScaledVector( _tempA, influence );
				_morphB.addScaledVector( _tempB, influence );
				_morphC.addScaledVector( _tempC, influence );

			} else {

				_morphA.addScaledVector( _tempA.sub( _vA ), influence );
				_morphB.addScaledVector( _tempB.sub( _vB ), influence );
				_morphC.addScaledVector( _tempC.sub( _vC ), influence );

			}

		}

		_vA.add( _morphA );
		_vB.add( _morphB );
		_vC.add( _morphC );

	}

	if ( object.isSkinnedMesh && material.skinning ) {

		object.boneTransform( a, _vA );
		object.boneTransform( b, _vB );
		object.boneTransform( c, _vC );

	}

	const intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );

	if ( intersection ) {

		if ( uv ) {

			_uvA.fromBufferAttribute( uv, a );
			_uvB.fromBufferAttribute( uv, b );
			_uvC.fromBufferAttribute( uv, c );

			intersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );

		}

		if ( uv2 ) {

			_uvA.fromBufferAttribute( uv2, a );
			_uvB.fromBufferAttribute( uv2, b );
			_uvC.fromBufferAttribute( uv2, c );

			intersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );

		}

		const face = {
			a: a,
			b: a,
			c: c,
			normal: new Vector3(),
			materialIndex: 0
		};

		Triangle.getNormal( _vA, _vB, _vC, face.normal );

		intersection.face = face;

	}

	return intersection;

}

class BoxGeometry extends BufferGeometry {

	constructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {

		super();

		this.type = 'BoxGeometry';

		this.parameters = {
			width: width,
			height: height,
			depth: depth,
			widthSegments: widthSegments,
			heightSegments: heightSegments,
			depthSegments: depthSegments
		};

		const scope = this;

		// segments

		widthSegments = Math.floor( widthSegments );
		heightSegments = Math.floor( heightSegments );
		depthSegments = Math.floor( depthSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		let numberOfVertices = 0;
		let groupStart = 0;

		// build each side of the box geometry

		buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px
		buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx
		buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py
		buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny
		buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz
		buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {

			const segmentWidth = width / gridX;
			const segmentHeight = height / gridY;

			const widthHalf = width / 2;
			const heightHalf = height / 2;
			const depthHalf = depth / 2;

			const gridX1 = gridX + 1;
			const gridY1 = gridY + 1;

			let vertexCounter = 0;
			let groupCount = 0;

			const vector = new Vector3();

			// generate vertices, normals and uvs

			for ( let iy = 0; iy < gridY1; iy ++ ) {

				const y = iy * segmentHeight - heightHalf;

				for ( let ix = 0; ix < gridX1; ix ++ ) {

					const x = ix * segmentWidth - widthHalf;

					// set values to correct vector component

					vector[ u ] = x * udir;
					vector[ v ] = y * vdir;
					vector[ w ] = depthHalf;

					// now apply vector to vertex buffer

					vertices.push( vector.x, vector.y, vector.z );

					// set values to correct vector component

					vector[ u ] = 0;
					vector[ v ] = 0;
					vector[ w ] = depth > 0 ? 1 : - 1;

					// now apply vector to normal buffer

					normals.push( vector.x, vector.y, vector.z );

					// uvs

					uvs.push( ix / gridX );
					uvs.push( 1 - ( iy / gridY ) );

					// counters

					vertexCounter += 1;

				}

			}

			// indices

			// 1. you need three indices to draw a single face
			// 2. a single segment consists of two faces
			// 3. so we need to generate six (2*3) indices per segment

			for ( let iy = 0; iy < gridY; iy ++ ) {

				for ( let ix = 0; ix < gridX; ix ++ ) {

					const a = numberOfVertices + ix + gridX1 * iy;
					const b = numberOfVertices + ix + gridX1 * ( iy + 1 );
					const c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );
					const d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

					// increase counter

					groupCount += 6;

				}

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, materialIndex );

			// calculate new start value for groups

			groupStart += groupCount;

			// update total number of vertices

			numberOfVertices += vertexCounter;

		}

	}

}

/**
 * Uniform Utilities
 */

function cloneUniforms( src ) {

	const dst = {};

	for ( const u in src ) {

		dst[ u ] = {};

		for ( const p in src[ u ] ) {

			const property = src[ u ][ p ];

			if ( property && ( property.isColor ||
				property.isMatrix3 || property.isMatrix4 ||
				property.isVector2 || property.isVector3 || property.isVector4 ||
				property.isTexture || property.isQuaternion ) ) {

				dst[ u ][ p ] = property.clone();

			} else if ( Array.isArray( property ) ) {

				dst[ u ][ p ] = property.slice();

			} else {

				dst[ u ][ p ] = property;

			}

		}

	}

	return dst;

}

function mergeUniforms( uniforms ) {

	const merged = {};

	for ( let u = 0; u < uniforms.length; u ++ ) {

		const tmp = cloneUniforms( uniforms[ u ] );

		for ( const p in tmp ) {

			merged[ p ] = tmp[ p ];

		}

	}

	return merged;

}

// Legacy

const UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };

var default_vertex = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";

var default_fragment = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";

/**
 * parameters = {
 *  defines: { "label" : "value" },
 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
 *
 *  fragmentShader: <string>,
 *  vertexShader: <string>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  lights: <bool>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

function ShaderMaterial( parameters ) {

	Material.call( this );

	this.type = 'ShaderMaterial';

	this.defines = {};
	this.uniforms = {};

	this.vertexShader = default_vertex;
	this.fragmentShader = default_fragment;

	this.linewidth = 1;

	this.wireframe = false;
	this.wireframeLinewidth = 1;

	this.fog = false; // set to use scene fog
	this.lights = false; // set to use scene lights
	this.clipping = false; // set to use user-defined clipping planes

	this.skinning = false; // set to use skinning attribute streams
	this.morphTargets = false; // set to use morph targets
	this.morphNormals = false; // set to use morph normals

	this.extensions = {
		derivatives: false, // set to use derivatives
		fragDepth: false, // set to use fragment depth values
		drawBuffers: false, // set to use draw buffers
		shaderTextureLOD: false // set to use shader texture LOD
	};

	// When rendered geometry doesn't include these attributes but the material does,
	// use these default values in WebGL. This avoids errors when buffer data is missing.
	this.defaultAttributeValues = {
		'color': [ 1, 1, 1 ],
		'uv': [ 0, 0 ],
		'uv2': [ 0, 0 ]
	};

	this.index0AttributeName = undefined;
	this.uniformsNeedUpdate = false;

	this.glslVersion = null;

	if ( parameters !== undefined ) {

		if ( parameters.attributes !== undefined ) {

			console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );

		}

		this.setValues( parameters );

	}

}

ShaderMaterial.prototype = Object.create( Material.prototype );
ShaderMaterial.prototype.constructor = ShaderMaterial;

ShaderMaterial.prototype.isShaderMaterial = true;

ShaderMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.fragmentShader = source.fragmentShader;
	this.vertexShader = source.vertexShader;

	this.uniforms = cloneUniforms( source.uniforms );

	this.defines = Object.assign( {}, source.defines );

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;

	this.lights = source.lights;
	this.clipping = source.clipping;

	this.skinning = source.skinning;

	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	this.extensions = Object.assign( {}, source.extensions );

	this.glslVersion = source.glslVersion;

	return this;

};

ShaderMaterial.prototype.toJSON = function ( meta ) {

	const data = Material.prototype.toJSON.call( this, meta );

	data.glslVersion = this.glslVersion;
	data.uniforms = {};

	for ( const name in this.uniforms ) {

		const uniform = this.uniforms[ name ];
		const value = uniform.value;

		if ( value && value.isTexture ) {

			data.uniforms[ name ] = {
				type: 't',
				value: value.toJSON( meta ).uuid
			};

		} else if ( value && value.isColor ) {

			data.uniforms[ name ] = {
				type: 'c',
				value: value.getHex()
			};

		} else if ( value && value.isVector2 ) {

			data.uniforms[ name ] = {
				type: 'v2',
				value: value.toArray()
			};

		} else if ( value && value.isVector3 ) {

			data.uniforms[ name ] = {
				type: 'v3',
				value: value.toArray()
			};

		} else if ( value && value.isVector4 ) {

			data.uniforms[ name ] = {
				type: 'v4',
				value: value.toArray()
			};

		} else if ( value && value.isMatrix3 ) {

			data.uniforms[ name ] = {
				type: 'm3',
				value: value.toArray()
			};

		} else if ( value && value.isMatrix4 ) {

			data.uniforms[ name ] = {
				type: 'm4',
				value: value.toArray()
			};

		} else {

			data.uniforms[ name ] = {
				value: value
			};

			// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far

		}

	}

	if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;

	data.vertexShader = this.vertexShader;
	data.fragmentShader = this.fragmentShader;

	const extensions = {};

	for ( const key in this.extensions ) {

		if ( this.extensions[ key ] === true ) extensions[ key ] = true;

	}

	if ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;

	return data;

};

function Camera() {

	Object3D.call( this );

	this.type = 'Camera';

	this.matrixWorldInverse = new Matrix4();

	this.projectionMatrix = new Matrix4();
	this.projectionMatrixInverse = new Matrix4();

}

Camera.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Camera,

	isCamera: true,

	copy: function ( source, recursive ) {

		Object3D.prototype.copy.call( this, source, recursive );

		this.matrixWorldInverse.copy( source.matrixWorldInverse );

		this.projectionMatrix.copy( source.projectionMatrix );
		this.projectionMatrixInverse.copy( source.projectionMatrixInverse );

		return this;

	},

	getWorldDirection: function ( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Camera: .getWorldDirection() target is now required' );
			target = new Vector3();

		}

		this.updateWorldMatrix( true, false );

		const e = this.matrixWorld.elements;

		return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();

	},

	updateMatrixWorld: function ( force ) {

		Object3D.prototype.updateMatrixWorld.call( this, force );

		this.matrixWorldInverse.copy( this.matrixWorld ).invert();

	},

	updateWorldMatrix: function ( updateParents, updateChildren ) {

		Object3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );

		this.matrixWorldInverse.copy( this.matrixWorld ).invert();

	},

	clone: function () {

		return new this.constructor().copy( this );

	}

} );

function PerspectiveCamera( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {

	Camera.call( this );

	this.type = 'PerspectiveCamera';

	this.fov = fov;
	this.zoom = 1;

	this.near = near;
	this.far = far;
	this.focus = 10;

	this.aspect = aspect;
	this.view = null;

	this.filmGauge = 35;	// width of the film (default in millimeters)
	this.filmOffset = 0;	// horizontal film offset (same unit as gauge)

	this.updateProjectionMatrix();

}

PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {

	constructor: PerspectiveCamera,

	isPerspectiveCamera: true,

	copy: function ( source, recursive ) {

		Camera.prototype.copy.call( this, source, recursive );

		this.fov = source.fov;
		this.zoom = source.zoom;

		this.near = source.near;
		this.far = source.far;
		this.focus = source.focus;

		this.aspect = source.aspect;
		this.view = source.view === null ? null : Object.assign( {}, source.view );

		this.filmGauge = source.filmGauge;
		this.filmOffset = source.filmOffset;

		return this;

	},

	/**
	 * Sets the FOV by focal length in respect to the current .filmGauge.
	 *
	 * The default film gauge is 35, so that the focal length can be specified for
	 * a 35mm (full frame) camera.
	 *
	 * Values for focal length and film gauge must have the same unit.
	 */
	setFocalLength: function ( focalLength ) {

		/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */
		const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;

		this.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );
		this.updateProjectionMatrix();

	},

	/**
	 * Calculates the focal length from the current .fov and .filmGauge.
	 */
	getFocalLength: function () {

		const vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );

		return 0.5 * this.getFilmHeight() / vExtentSlope;

	},

	getEffectiveFOV: function () {

		return MathUtils.RAD2DEG * 2 * Math.atan(
			Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );

	},

	getFilmWidth: function () {

		// film not completely covered in portrait format (aspect < 1)
		return this.filmGauge * Math.min( this.aspect, 1 );

	},

	getFilmHeight: function () {

		// film not completely covered in landscape format (aspect > 1)
		return this.filmGauge / Math.max( this.aspect, 1 );

	},

	/**
	 * Sets an offset in a larger frustum. This is useful for multi-window or
	 * multi-monitor/multi-machine setups.
	 *
	 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
	 * the monitors are in grid like this
	 *
	 *   +---+---+---+
	 *   | A | B | C |
	 *   +---+---+---+
	 *   | D | E | F |
	 *   +---+---+---+
	 *
	 * then for each monitor you would call it like this
	 *
	 *   const w = 1920;
	 *   const h = 1080;
	 *   const fullWidth = w * 3;
	 *   const fullHeight = h * 2;
	 *
	 *   --A--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
	 *   --B--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
	 *   --C--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
	 *   --D--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
	 *   --E--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
	 *   --F--
	 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
	 *
	 *   Note there is no reason monitors have to be the same size or in a grid.
	 */
	setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {

		this.aspect = fullWidth / fullHeight;

		if ( this.view === null ) {

			this.view = {
				enabled: true,
				fullWidth: 1,
				fullHeight: 1,
				offsetX: 0,
				offsetY: 0,
				width: 1,
				height: 1
			};

		}

		this.view.enabled = true;
		this.view.fullWidth = fullWidth;
		this.view.fullHeight = fullHeight;
		this.view.offsetX = x;
		this.view.offsetY = y;
		this.view.width = width;
		this.view.height = height;

		this.updateProjectionMatrix();

	},

	clearViewOffset: function () {

		if ( this.view !== null ) {

			this.view.enabled = false;

		}

		this.updateProjectionMatrix();

	},

	updateProjectionMatrix: function () {

		const near = this.near;
		let top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom;
		let height = 2 * top;
		let width = this.aspect * height;
		let left = - 0.5 * width;
		const view = this.view;

		if ( this.view !== null && this.view.enabled ) {

			const fullWidth = view.fullWidth,
				fullHeight = view.fullHeight;

			left += view.offsetX * width / fullWidth;
			top -= view.offsetY * height / fullHeight;
			width *= view.width / fullWidth;
			height *= view.height / fullHeight;

		}

		const skew = this.filmOffset;
		if ( skew !== 0 ) left += near * skew / this.getFilmWidth();

		this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );

		this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();

	},

	toJSON: function ( meta ) {

		const data = Object3D.prototype.toJSON.call( this, meta );

		data.object.fov = this.fov;
		data.object.zoom = this.zoom;

		data.object.near = this.near;
		data.object.far = this.far;
		data.object.focus = this.focus;

		data.object.aspect = this.aspect;

		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );

		data.object.filmGauge = this.filmGauge;
		data.object.filmOffset = this.filmOffset;

		return data;

	}

} );

const fov = 90, aspect = 1;

class CubeCamera extends Object3D {

	constructor( near, far, renderTarget ) {

		super();

		this.type = 'CubeCamera';

		if ( renderTarget.isWebGLCubeRenderTarget !== true ) {

			console.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );
			return;

		}

		this.renderTarget = renderTarget;

		const cameraPX = new PerspectiveCamera( fov, aspect, near, far );
		cameraPX.layers = this.layers;
		cameraPX.up.set( 0, - 1, 0 );
		cameraPX.lookAt( new Vector3( 1, 0, 0 ) );
		this.add( cameraPX );

		const cameraNX = new PerspectiveCamera( fov, aspect, near, far );
		cameraNX.layers = this.layers;
		cameraNX.up.set( 0, - 1, 0 );
		cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );
		this.add( cameraNX );

		const cameraPY = new PerspectiveCamera( fov, aspect, near, far );
		cameraPY.layers = this.layers;
		cameraPY.up.set( 0, 0, 1 );
		cameraPY.lookAt( new Vector3( 0, 1, 0 ) );
		this.add( cameraPY );

		const cameraNY = new PerspectiveCamera( fov, aspect, near, far );
		cameraNY.layers = this.layers;
		cameraNY.up.set( 0, 0, - 1 );
		cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );
		this.add( cameraNY );

		const cameraPZ = new PerspectiveCamera( fov, aspect, near, far );
		cameraPZ.layers = this.layers;
		cameraPZ.up.set( 0, - 1, 0 );
		cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );
		this.add( cameraPZ );

		const cameraNZ = new PerspectiveCamera( fov, aspect, near, far );
		cameraNZ.layers = this.layers;
		cameraNZ.up.set( 0, - 1, 0 );
		cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );
		this.add( cameraNZ );

	}

	update( renderer, scene ) {

		if ( this.parent === null ) this.updateMatrixWorld();

		const renderTarget = this.renderTarget;

		const [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;

		const currentXrEnabled = renderer.xr.enabled;
		const currentRenderTarget = renderer.getRenderTarget();

		renderer.xr.enabled = false;

		const generateMipmaps = renderTarget.texture.generateMipmaps;

		renderTarget.texture.generateMipmaps = false;

		renderer.setRenderTarget( renderTarget, 0 );
		renderer.render( scene, cameraPX );

		renderer.setRenderTarget( renderTarget, 1 );
		renderer.render( scene, cameraNX );

		renderer.setRenderTarget( renderTarget, 2 );
		renderer.render( scene, cameraPY );

		renderer.setRenderTarget( renderTarget, 3 );
		renderer.render( scene, cameraNY );

		renderer.setRenderTarget( renderTarget, 4 );
		renderer.render( scene, cameraPZ );

		renderTarget.texture.generateMipmaps = generateMipmaps;

		renderer.setRenderTarget( renderTarget, 5 );
		renderer.render( scene, cameraNZ );

		renderer.setRenderTarget( currentRenderTarget );

		renderer.xr.enabled = currentXrEnabled;

	}

}

class CubeTexture extends Texture {

	constructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {

		images = images !== undefined ? images : [];
		mapping = mapping !== undefined ? mapping : CubeReflectionMapping;
		format = format !== undefined ? format : RGBFormat;

		super( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		// Why CubeTexture._needsFlipEnvMap is necessary:
		//
		// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)
		// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,
		// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.

		// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped
		// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)
		// when using WebGLCubeRenderTarget.texture as a cube texture.

		this._needsFlipEnvMap = true;

		this.flipY = false;

	}

	get images() {

		return this.image;

	}

	set images( value ) {

		this.image = value;

	}

}

CubeTexture.prototype.isCubeTexture = true;

class WebGLCubeRenderTarget extends WebGLRenderTarget {

	constructor( size, options, dummy ) {

		if ( Number.isInteger( options ) ) {

			console.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );

			options = dummy;

		}

		super( size, size, options );

		options = options || {};

		this.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );

		this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;
		this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;

		this.texture._needsFlipEnvMap = false;

	}

	fromEquirectangularTexture( renderer, texture ) {

		this.texture.type = texture.type;
		this.texture.format = RGBAFormat; // see #18859
		this.texture.encoding = texture.encoding;

		this.texture.generateMipmaps = texture.generateMipmaps;
		this.texture.minFilter = texture.minFilter;
		this.texture.magFilter = texture.magFilter;

		const shader = {

			uniforms: {
				tEquirect: { value: null },
			},

			vertexShader: /* glsl */`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,

			fragmentShader: /* glsl */`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`
		};

		const geometry = new BoxGeometry( 5, 5, 5 );

		const material = new ShaderMaterial( {

			name: 'CubemapFromEquirect',

			uniforms: cloneUniforms( shader.uniforms ),
			vertexShader: shader.vertexShader,
			fragmentShader: shader.fragmentShader,
			side: BackSide,
			blending: NoBlending

		} );

		material.uniforms.tEquirect.value = texture;

		const mesh = new Mesh( geometry, material );

		const currentMinFilter = texture.minFilter;

		// Avoid blurred poles
		if ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;

		const camera = new CubeCamera( 1, 10, this );
		camera.update( renderer, mesh );

		texture.minFilter = currentMinFilter;

		mesh.geometry.dispose();
		mesh.material.dispose();

		return this;

	}

	clear( renderer, color, depth, stencil ) {

		const currentRenderTarget = renderer.getRenderTarget();

		for ( let i = 0; i < 6; i ++ ) {

			renderer.setRenderTarget( this, i );

			renderer.clear( color, depth, stencil );

		}

		renderer.setRenderTarget( currentRenderTarget );

	}

}

WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;

class DataTexture extends Texture {

	constructor( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

		super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.image = { data: data || null, width: width || 1, height: height || 1 };

		this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
		this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

		this.generateMipmaps = false;
		this.flipY = false;
		this.unpackAlignment = 1;

		this.needsUpdate = true;

	}

}

DataTexture.prototype.isDataTexture = true;

const _sphere$1 = /*@__PURE__*/ new Sphere();
const _vector$5 = /*@__PURE__*/ new Vector3();

class Frustum {

	constructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {

		this.planes = [ p0, p1, p2, p3, p4, p5 ];

	}

	set( p0, p1, p2, p3, p4, p5 ) {

		const planes = this.planes;

		planes[ 0 ].copy( p0 );
		planes[ 1 ].copy( p1 );
		planes[ 2 ].copy( p2 );
		planes[ 3 ].copy( p3 );
		planes[ 4 ].copy( p4 );
		planes[ 5 ].copy( p5 );

		return this;

	}

	copy( frustum ) {

		const planes = this.planes;

		for ( let i = 0; i < 6; i ++ ) {

			planes[ i ].copy( frustum.planes[ i ] );

		}

		return this;

	}

	setFromProjectionMatrix( m ) {

		const planes = this.planes;
		const me = m.elements;
		const me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];
		const me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];
		const me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];
		const me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];

		planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();
		planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();
		planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();
		planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();
		planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();
		planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();

		return this;

	}

	intersectsObject( object ) {

		const geometry = object.geometry;

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );

		return this.intersectsSphere( _sphere$1 );

	}

	intersectsSprite( sprite ) {

		_sphere$1.center.set( 0, 0, 0 );
		_sphere$1.radius = 0.7071067811865476;
		_sphere$1.applyMatrix4( sprite.matrixWorld );

		return this.intersectsSphere( _sphere$1 );

	}

	intersectsSphere( sphere ) {

		const planes = this.planes;
		const center = sphere.center;
		const negRadius = - sphere.radius;

		for ( let i = 0; i < 6; i ++ ) {

			const distance = planes[ i ].distanceToPoint( center );

			if ( distance < negRadius ) {

				return false;

			}

		}

		return true;

	}

	intersectsBox( box ) {

		const planes = this.planes;

		for ( let i = 0; i < 6; i ++ ) {

			const plane = planes[ i ];

			// corner at max distance

			_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;
			_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;
			_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;

			if ( plane.distanceToPoint( _vector$5 ) < 0 ) {

				return false;

			}

		}

		return true;

	}

	containsPoint( point ) {

		const planes = this.planes;

		for ( let i = 0; i < 6; i ++ ) {

			if ( planes[ i ].distanceToPoint( point ) < 0 ) {

				return false;

			}

		}

		return true;

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

function WebGLAnimation() {

	let context = null;
	let isAnimating = false;
	let animationLoop = null;
	let requestId = null;

	function onAnimationFrame( time, frame ) {

		animationLoop( time, frame );

		requestId = context.requestAnimationFrame( onAnimationFrame );

	}

	return {

		start: function () {

			if ( isAnimating === true ) return;
			if ( animationLoop === null ) return;

			requestId = context.requestAnimationFrame( onAnimationFrame );

			isAnimating = true;

		},

		stop: function () {

			context.cancelAnimationFrame( requestId );

			isAnimating = false;

		},

		setAnimationLoop: function ( callback ) {

			animationLoop = callback;

		},

		setContext: function ( value ) {

			context = value;

		}

	};

}

function WebGLAttributes( gl, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	const buffers = new WeakMap();

	function createBuffer( attribute, bufferType ) {

		const array = attribute.array;
		const usage = attribute.usage;

		const buffer = gl.createBuffer();

		gl.bindBuffer( bufferType, buffer );
		gl.bufferData( bufferType, array, usage );

		attribute.onUploadCallback();

		let type = 5126;

		if ( array instanceof Float32Array ) {

			type = 5126;

		} else if ( array instanceof Float64Array ) {

			console.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );

		} else if ( array instanceof Uint16Array ) {

			if ( attribute.isFloat16BufferAttribute ) {

				if ( isWebGL2 ) {

					type = 5131;

				} else {

					console.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );

				}

			} else {

				type = 5123;

			}

		} else if ( array instanceof Int16Array ) {

			type = 5122;

		} else if ( array instanceof Uint32Array ) {

			type = 5125;

		} else if ( array instanceof Int32Array ) {

			type = 5124;

		} else if ( array instanceof Int8Array ) {

			type = 5120;

		} else if ( array instanceof Uint8Array ) {

			type = 5121;

		}

		return {
			buffer: buffer,
			type: type,
			bytesPerElement: array.BYTES_PER_ELEMENT,
			version: attribute.version
		};

	}

	function updateBuffer( buffer, attribute, bufferType ) {

		const array = attribute.array;
		const updateRange = attribute.updateRange;

		gl.bindBuffer( bufferType, buffer );

		if ( updateRange.count === - 1 ) {

			// Not using update ranges

			gl.bufferSubData( bufferType, 0, array );

		} else {

			if ( isWebGL2 ) {

				gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
					array, updateRange.offset, updateRange.count );

			} else {

				gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
					array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );

			}

			updateRange.count = - 1; // reset range

		}

	}

	//

	function get( attribute ) {

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		return buffers.get( attribute );

	}

	function remove( attribute ) {

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		const data = buffers.get( attribute );

		if ( data ) {

			gl.deleteBuffer( data.buffer );

			buffers.delete( attribute );

		}

	}

	function update( attribute, bufferType ) {

		if ( attribute.isGLBufferAttribute ) {

			const cached = buffers.get( attribute );

			if ( ! cached || cached.version < attribute.version ) {

				buffers.set( attribute, {
					buffer: attribute.buffer,
					type: attribute.type,
					bytesPerElement: attribute.elementSize,
					version: attribute.version
				} );

			}

			return;

		}

		if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;

		const data = buffers.get( attribute );

		if ( data === undefined ) {

			buffers.set( attribute, createBuffer( attribute, bufferType ) );

		} else if ( data.version < attribute.version ) {

			updateBuffer( data.buffer, attribute, bufferType );

			data.version = attribute.version;

		}

	}

	return {

		get: get,
		remove: remove,
		update: update

	};

}

class PlaneGeometry extends BufferGeometry {

	constructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {

		super();
		this.type = 'PlaneGeometry';

		this.parameters = {
			width: width,
			height: height,
			widthSegments: widthSegments,
			heightSegments: heightSegments
		};

		const width_half = width / 2;
		const height_half = height / 2;

		const gridX = Math.floor( widthSegments );
		const gridY = Math.floor( heightSegments );

		const gridX1 = gridX + 1;
		const gridY1 = gridY + 1;

		const segment_width = width / gridX;
		const segment_height = height / gridY;

		//

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		for ( let iy = 0; iy < gridY1; iy ++ ) {

			const y = iy * segment_height - height_half;

			for ( let ix = 0; ix < gridX1; ix ++ ) {

				const x = ix * segment_width - width_half;

				vertices.push( x, - y, 0 );

				normals.push( 0, 0, 1 );

				uvs.push( ix / gridX );
				uvs.push( 1 - ( iy / gridY ) );

			}

		}

		for ( let iy = 0; iy < gridY; iy ++ ) {

			for ( let ix = 0; ix < gridX; ix ++ ) {

				const a = ix + gridX1 * iy;
				const b = ix + gridX1 * ( iy + 1 );
				const c = ( ix + 1 ) + gridX1 * ( iy + 1 );
				const d = ( ix + 1 ) + gridX1 * iy;

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

}

var alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";

var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";

var alphatest_fragment = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif";

var aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif";

var aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";

var begin_vertex = "vec3 transformed = vec3( position );";

var beginnormal_vertex = "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";

var bsdfs = "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif";

var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";

var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";

var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";

var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";

var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";

var color_fragment = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";

var color_pars_fragment = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";

var color_pars_vertex = "#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif";

var color_vertex = "#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif";

var common = "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}";

var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif";

var defaultnormal_vertex = "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";

var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";

var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";

var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";

var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";

var encodings_fragment = "gl_FragColor = linearToOutputTexel( gl_FragColor );";

var encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}";

var envmap_fragment = "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";

var envmap_common_pars_fragment = "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";

var envmap_pars_fragment = "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";

var envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";

var envmap_vertex = "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";

var fog_vertex = "#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif";

var fog_pars_vertex = "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif";

var fog_fragment = "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";

var fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";

var gradientmap_pars_fragment = "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}";

var lightmap_fragment = "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif";

var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";

var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif";

var lights_pars_begin = "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif";

var envmap_physical_pars_fragment = "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif";

var lights_toon_fragment = "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;";

var lights_toon_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)";

var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";

var lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)";

var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif";

var lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";

var lights_fragment_begin = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";

var lights_fragment_maps = "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif";

var lights_fragment_end = "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";

var logdepthbuf_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";

var logdepthbuf_pars_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";

var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";

var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";

var map_fragment = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif";

var map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";

var map_particle_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";

var map_particle_pars_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";

var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";

var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";

var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif";

var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";

var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif";

var normal_fragment_begin = "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";

var normal_fragment_maps = "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif";

var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif";

var clearcoat_normal_fragment_begin = "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";

var clearcoat_normal_fragment_maps = "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif";

var clearcoat_pars_fragment = "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";

var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";

var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";

var project_vertex = "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";

var dithering_fragment = "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";

var dithering_pars_fragment = "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";

var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";

var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";

var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";

var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";

var shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif";

var shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";

var skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";

var skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif";

var skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";

var skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";

var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";

var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";

var tonemapping_fragment = "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";

var tonemapping_pars_fragment = "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }";

var transmissionmap_fragment = "#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif";

var transmissionmap_pars_fragment = "#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif";

var uv_pars_fragment = "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";

var uv_pars_vertex = "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";

var uv_vertex = "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";

var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";

var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";

var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";

var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";

var background_frag = "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

var background_vert = "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";

var cube_frag = "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

var cube_vert = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";

var depth_frag = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";

var depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";

var distanceRGBA_frag = "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";

var distanceRGBA_vert = "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";

var equirect_frag = "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

var equirect_vert = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";

var linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

var linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";

var meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

var meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";

var meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

var meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

var meshmatcap_frag = "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

var meshmatcap_vert = "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";

var meshtoon_frag = "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

var meshtoon_vert = "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

var meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

var meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

var meshphysical_frag = "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

var meshphysical_vert = "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

var normal_frag = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}";

var normal_vert = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";

var points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

var points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";

var shadow_frag = "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";

var shadow_vert = "#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

var sprite_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";

var sprite_vert = "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";

const ShaderChunk = {
	alphamap_fragment: alphamap_fragment,
	alphamap_pars_fragment: alphamap_pars_fragment,
	alphatest_fragment: alphatest_fragment,
	aomap_fragment: aomap_fragment,
	aomap_pars_fragment: aomap_pars_fragment,
	begin_vertex: begin_vertex,
	beginnormal_vertex: beginnormal_vertex,
	bsdfs: bsdfs,
	bumpmap_pars_fragment: bumpmap_pars_fragment,
	clipping_planes_fragment: clipping_planes_fragment,
	clipping_planes_pars_fragment: clipping_planes_pars_fragment,
	clipping_planes_pars_vertex: clipping_planes_pars_vertex,
	clipping_planes_vertex: clipping_planes_vertex,
	color_fragment: color_fragment,
	color_pars_fragment: color_pars_fragment,
	color_pars_vertex: color_pars_vertex,
	color_vertex: color_vertex,
	common: common,
	cube_uv_reflection_fragment: cube_uv_reflection_fragment,
	defaultnormal_vertex: defaultnormal_vertex,
	displacementmap_pars_vertex: displacementmap_pars_vertex,
	displacementmap_vertex: displacementmap_vertex,
	emissivemap_fragment: emissivemap_fragment,
	emissivemap_pars_fragment: emissivemap_pars_fragment,
	encodings_fragment: encodings_fragment,
	encodings_pars_fragment: encodings_pars_fragment,
	envmap_fragment: envmap_fragment,
	envmap_common_pars_fragment: envmap_common_pars_fragment,
	envmap_pars_fragment: envmap_pars_fragment,
	envmap_pars_vertex: envmap_pars_vertex,
	envmap_physical_pars_fragment: envmap_physical_pars_fragment,
	envmap_vertex: envmap_vertex,
	fog_vertex: fog_vertex,
	fog_pars_vertex: fog_pars_vertex,
	fog_fragment: fog_fragment,
	fog_pars_fragment: fog_pars_fragment,
	gradientmap_pars_fragment: gradientmap_pars_fragment,
	lightmap_fragment: lightmap_fragment,
	lightmap_pars_fragment: lightmap_pars_fragment,
	lights_lambert_vertex: lights_lambert_vertex,
	lights_pars_begin: lights_pars_begin,
	lights_toon_fragment: lights_toon_fragment,
	lights_toon_pars_fragment: lights_toon_pars_fragment,
	lights_phong_fragment: lights_phong_fragment,
	lights_phong_pars_fragment: lights_phong_pars_fragment,
	lights_physical_fragment: lights_physical_fragment,
	lights_physical_pars_fragment: lights_physical_pars_fragment,
	lights_fragment_begin: lights_fragment_begin,
	lights_fragment_maps: lights_fragment_maps,
	lights_fragment_end: lights_fragment_end,
	logdepthbuf_fragment: logdepthbuf_fragment,
	logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,
	logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,
	logdepthbuf_vertex: logdepthbuf_vertex,
	map_fragment: map_fragment,
	map_pars_fragment: map_pars_fragment,
	map_particle_fragment: map_particle_fragment,
	map_particle_pars_fragment: map_particle_pars_fragment,
	metalnessmap_fragment: metalnessmap_fragment,
	metalnessmap_pars_fragment: metalnessmap_pars_fragment,
	morphnormal_vertex: morphnormal_vertex,
	morphtarget_pars_vertex: morphtarget_pars_vertex,
	morphtarget_vertex: morphtarget_vertex,
	normal_fragment_begin: normal_fragment_begin,
	normal_fragment_maps: normal_fragment_maps,
	normalmap_pars_fragment: normalmap_pars_fragment,
	clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,
	clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,
	clearcoat_pars_fragment: clearcoat_pars_fragment,
	packing: packing,
	premultiplied_alpha_fragment: premultiplied_alpha_fragment,
	project_vertex: project_vertex,
	dithering_fragment: dithering_fragment,
	dithering_pars_fragment: dithering_pars_fragment,
	roughnessmap_fragment: roughnessmap_fragment,
	roughnessmap_pars_fragment: roughnessmap_pars_fragment,
	shadowmap_pars_fragment: shadowmap_pars_fragment,
	shadowmap_pars_vertex: shadowmap_pars_vertex,
	shadowmap_vertex: shadowmap_vertex,
	shadowmask_pars_fragment: shadowmask_pars_fragment,
	skinbase_vertex: skinbase_vertex,
	skinning_pars_vertex: skinning_pars_vertex,
	skinning_vertex: skinning_vertex,
	skinnormal_vertex: skinnormal_vertex,
	specularmap_fragment: specularmap_fragment,
	specularmap_pars_fragment: specularmap_pars_fragment,
	tonemapping_fragment: tonemapping_fragment,
	tonemapping_pars_fragment: tonemapping_pars_fragment,
	transmissionmap_fragment: transmissionmap_fragment,
	transmissionmap_pars_fragment: transmissionmap_pars_fragment,
	uv_pars_fragment: uv_pars_fragment,
	uv_pars_vertex: uv_pars_vertex,
	uv_vertex: uv_vertex,
	uv2_pars_fragment: uv2_pars_fragment,
	uv2_pars_vertex: uv2_pars_vertex,
	uv2_vertex: uv2_vertex,
	worldpos_vertex: worldpos_vertex,

	background_frag: background_frag,
	background_vert: background_vert,
	cube_frag: cube_frag,
	cube_vert: cube_vert,
	depth_frag: depth_frag,
	depth_vert: depth_vert,
	distanceRGBA_frag: distanceRGBA_frag,
	distanceRGBA_vert: distanceRGBA_vert,
	equirect_frag: equirect_frag,
	equirect_vert: equirect_vert,
	linedashed_frag: linedashed_frag,
	linedashed_vert: linedashed_vert,
	meshbasic_frag: meshbasic_frag,
	meshbasic_vert: meshbasic_vert,
	meshlambert_frag: meshlambert_frag,
	meshlambert_vert: meshlambert_vert,
	meshmatcap_frag: meshmatcap_frag,
	meshmatcap_vert: meshmatcap_vert,
	meshtoon_frag: meshtoon_frag,
	meshtoon_vert: meshtoon_vert,
	meshphong_frag: meshphong_frag,
	meshphong_vert: meshphong_vert,
	meshphysical_frag: meshphysical_frag,
	meshphysical_vert: meshphysical_vert,
	normal_frag: normal_frag,
	normal_vert: normal_vert,
	points_frag: points_frag,
	points_vert: points_vert,
	shadow_frag: shadow_frag,
	shadow_vert: shadow_vert,
	sprite_frag: sprite_frag,
	sprite_vert: sprite_vert
};

/**
 * Uniforms library for shared webgl shaders
 */

const UniformsLib = {

	common: {

		diffuse: { value: new Color( 0xeeeeee ) },
		opacity: { value: 1.0 },

		map: { value: null },
		uvTransform: { value: new Matrix3() },
		uv2Transform: { value: new Matrix3() },

		alphaMap: { value: null },

	},

	specularmap: {

		specularMap: { value: null },

	},

	envmap: {

		envMap: { value: null },
		flipEnvMap: { value: - 1 },
		reflectivity: { value: 1.0 },
		refractionRatio: { value: 0.98 },
		maxMipLevel: { value: 0 }

	},

	aomap: {

		aoMap: { value: null },
		aoMapIntensity: { value: 1 }

	},

	lightmap: {

		lightMap: { value: null },
		lightMapIntensity: { value: 1 }

	},

	emissivemap: {

		emissiveMap: { value: null }

	},

	bumpmap: {

		bumpMap: { value: null },
		bumpScale: { value: 1 }

	},

	normalmap: {

		normalMap: { value: null },
		normalScale: { value: new Vector2( 1, 1 ) }

	},

	displacementmap: {

		displacementMap: { value: null },
		displacementScale: { value: 1 },
		displacementBias: { value: 0 }

	},

	roughnessmap: {

		roughnessMap: { value: null }

	},

	metalnessmap: {

		metalnessMap: { value: null }

	},

	gradientmap: {

		gradientMap: { value: null }

	},

	fog: {

		fogDensity: { value: 0.00025 },
		fogNear: { value: 1 },
		fogFar: { value: 2000 },
		fogColor: { value: new Color( 0xffffff ) }

	},

	lights: {

		ambientLightColor: { value: [] },

		lightProbe: { value: [] },

		directionalLights: { value: [], properties: {
			direction: {},
			color: {}
		} },

		directionalLightShadows: { value: [], properties: {
			shadowBias: {},
			shadowNormalBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		directionalShadowMap: { value: [] },
		directionalShadowMatrix: { value: [] },

		spotLights: { value: [], properties: {
			color: {},
			position: {},
			direction: {},
			distance: {},
			coneCos: {},
			penumbraCos: {},
			decay: {}
		} },

		spotLightShadows: { value: [], properties: {
			shadowBias: {},
			shadowNormalBias: {},
			shadowRadius: {},
			shadowMapSize: {}
		} },

		spotShadowMap: { value: [] },
		spotShadowMatrix: { value: [] },

		pointLights: { value: [], properties: {
			color: {},
			position: {},
			decay: {},
			distance: {}
		} },

		pointLightShadows: { value: [], properties: {
			shadowBias: {},
			shadowNormalBias: {},
			shadowRadius: {},
			shadowMapSize: {},
			shadowCameraNear: {},
			shadowCameraFar: {}
		} },

		pointShadowMap: { value: [] },
		pointShadowMatrix: { value: [] },

		hemisphereLights: { value: [], properties: {
			direction: {},
			skyColor: {},
			groundColor: {}
		} },

		// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
		rectAreaLights: { value: [], properties: {
			color: {},
			position: {},
			width: {},
			height: {}
		} },

		ltc_1: { value: null },
		ltc_2: { value: null }

	},

	points: {

		diffuse: { value: new Color( 0xeeeeee ) },
		opacity: { value: 1.0 },
		size: { value: 1.0 },
		scale: { value: 1.0 },
		map: { value: null },
		alphaMap: { value: null },
		uvTransform: { value: new Matrix3() }

	},

	sprite: {

		diffuse: { value: new Color( 0xeeeeee ) },
		opacity: { value: 1.0 },
		center: { value: new Vector2( 0.5, 0.5 ) },
		rotation: { value: 0.0 },
		map: { value: null },
		alphaMap: { value: null },
		uvTransform: { value: new Matrix3() }

	}

};

const ShaderLib = {

	basic: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.specularmap,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.meshbasic_vert,
		fragmentShader: ShaderChunk.meshbasic_frag

	},

	lambert: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.specularmap,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) }
			}
		] ),

		vertexShader: ShaderChunk.meshlambert_vert,
		fragmentShader: ShaderChunk.meshlambert_frag

	},

	phong: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.specularmap,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) },
				specular: { value: new Color( 0x111111 ) },
				shininess: { value: 30 }
			}
		] ),

		vertexShader: ShaderChunk.meshphong_vert,
		fragmentShader: ShaderChunk.meshphong_frag

	},

	standard: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.envmap,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.roughnessmap,
			UniformsLib.metalnessmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) },
				roughness: { value: 1.0 },
				metalness: { value: 0.0 },
				envMapIntensity: { value: 1 } // temporary
			}
		] ),

		vertexShader: ShaderChunk.meshphysical_vert,
		fragmentShader: ShaderChunk.meshphysical_frag

	},

	toon: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.aomap,
			UniformsLib.lightmap,
			UniformsLib.emissivemap,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.gradientmap,
			UniformsLib.fog,
			UniformsLib.lights,
			{
				emissive: { value: new Color( 0x000000 ) }
			}
		] ),

		vertexShader: ShaderChunk.meshtoon_vert,
		fragmentShader: ShaderChunk.meshtoon_frag

	},

	matcap: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			UniformsLib.fog,
			{
				matcap: { value: null }
			}
		] ),

		vertexShader: ShaderChunk.meshmatcap_vert,
		fragmentShader: ShaderChunk.meshmatcap_frag

	},

	points: {

		uniforms: mergeUniforms( [
			UniformsLib.points,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.points_vert,
		fragmentShader: ShaderChunk.points_frag

	},

	dashed: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.fog,
			{
				scale: { value: 1 },
				dashSize: { value: 1 },
				totalSize: { value: 2 }
			}
		] ),

		vertexShader: ShaderChunk.linedashed_vert,
		fragmentShader: ShaderChunk.linedashed_frag

	},

	depth: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.displacementmap
		] ),

		vertexShader: ShaderChunk.depth_vert,
		fragmentShader: ShaderChunk.depth_frag

	},

	normal: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.bumpmap,
			UniformsLib.normalmap,
			UniformsLib.displacementmap,
			{
				opacity: { value: 1.0 }
			}
		] ),

		vertexShader: ShaderChunk.normal_vert,
		fragmentShader: ShaderChunk.normal_frag

	},

	sprite: {

		uniforms: mergeUniforms( [
			UniformsLib.sprite,
			UniformsLib.fog
		] ),

		vertexShader: ShaderChunk.sprite_vert,
		fragmentShader: ShaderChunk.sprite_frag

	},

	background: {

		uniforms: {
			uvTransform: { value: new Matrix3() },
			t2D: { value: null },
		},

		vertexShader: ShaderChunk.background_vert,
		fragmentShader: ShaderChunk.background_frag

	},
	/* -------------------------------------------------------------------------
	//	Cube map shader
	 ------------------------------------------------------------------------- */

	cube: {

		uniforms: mergeUniforms( [
			UniformsLib.envmap,
			{
				opacity: { value: 1.0 }
			}
		] ),

		vertexShader: ShaderChunk.cube_vert,
		fragmentShader: ShaderChunk.cube_frag

	},

	equirect: {

		uniforms: {
			tEquirect: { value: null },
		},

		vertexShader: ShaderChunk.equirect_vert,
		fragmentShader: ShaderChunk.equirect_frag

	},

	distanceRGBA: {

		uniforms: mergeUniforms( [
			UniformsLib.common,
			UniformsLib.displacementmap,
			{
				referencePosition: { value: new Vector3() },
				nearDistance: { value: 1 },
				farDistance: { value: 1000 }
			}
		] ),

		vertexShader: ShaderChunk.distanceRGBA_vert,
		fragmentShader: ShaderChunk.distanceRGBA_frag

	},

	shadow: {

		uniforms: mergeUniforms( [
			UniformsLib.lights,
			UniformsLib.fog,
			{
				color: { value: new Color( 0x00000 ) },
				opacity: { value: 1.0 }
			},
		] ),

		vertexShader: ShaderChunk.shadow_vert,
		fragmentShader: ShaderChunk.shadow_frag

	}

};

ShaderLib.physical = {

	uniforms: mergeUniforms( [
		ShaderLib.standard.uniforms,
		{
			clearcoat: { value: 0 },
			clearcoatMap: { value: null },
			clearcoatRoughness: { value: 0 },
			clearcoatRoughnessMap: { value: null },
			clearcoatNormalScale: { value: new Vector2( 1, 1 ) },
			clearcoatNormalMap: { value: null },
			sheen: { value: new Color( 0x000000 ) },
			transmission: { value: 0 },
			transmissionMap: { value: null },
		}
	] ),

	vertexShader: ShaderChunk.meshphysical_vert,
	fragmentShader: ShaderChunk.meshphysical_frag

};

function WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {

	const clearColor = new Color( 0x000000 );
	let clearAlpha = 0;

	let planeMesh;
	let boxMesh;

	let currentBackground = null;
	let currentBackgroundVersion = 0;
	let currentTonemapping = null;

	function render( renderList, scene, camera, forceClear ) {

		let background = scene.isScene === true ? scene.background : null;

		if ( background && background.isTexture ) {

			background = cubemaps.get( background );

		}

		// Ignore background in AR
		// TODO: Reconsider this.

		const xr = renderer.xr;
		const session = xr.getSession && xr.getSession();

		if ( session && session.environmentBlendMode === 'additive' ) {

			background = null;

		}

		if ( background === null ) {

			setClear( clearColor, clearAlpha );

		} else if ( background && background.isColor ) {

			setClear( background, 1 );
			forceClear = true;

		}

		if ( renderer.autoClear || forceClear ) {

			renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );

		}

		if ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {

			if ( boxMesh === undefined ) {

				boxMesh = new Mesh(
					new BoxGeometry( 1, 1, 1 ),
					new ShaderMaterial( {
						name: 'BackgroundCubeMaterial',
						uniforms: cloneUniforms( ShaderLib.cube.uniforms ),
						vertexShader: ShaderLib.cube.vertexShader,
						fragmentShader: ShaderLib.cube.fragmentShader,
						side: BackSide,
						depthTest: false,
						depthWrite: false,
						fog: false
					} )
				);

				boxMesh.geometry.deleteAttribute( 'normal' );
				boxMesh.geometry.deleteAttribute( 'uv' );

				boxMesh.onBeforeRender = function ( renderer, scene, camera ) {

					this.matrixWorld.copyPosition( camera.matrixWorld );

				};

				// enable code injection for non-built-in material
				Object.defineProperty( boxMesh.material, 'envMap', {

					get: function () {

						return this.uniforms.envMap.value;

					}

				} );

				objects.update( boxMesh );

			}

			if ( background.isWebGLCubeRenderTarget ) {

				// TODO Deprecate

				background = background.texture;

			}

			boxMesh.material.uniforms.envMap.value = background;
			boxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;

			if ( currentBackground !== background ||
				currentBackgroundVersion !== background.version ||
				currentTonemapping !== renderer.toneMapping ) {

				boxMesh.material.needsUpdate = true;

				currentBackground = background;
				currentBackgroundVersion = background.version;
				currentTonemapping = renderer.toneMapping;

			}

			// push to the pre-sorted opaque render list
			renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );

		} else if ( background && background.isTexture ) {

			if ( planeMesh === undefined ) {

				planeMesh = new Mesh(
					new PlaneGeometry( 2, 2 ),
					new ShaderMaterial( {
						name: 'BackgroundMaterial',
						uniforms: cloneUniforms( ShaderLib.background.uniforms ),
						vertexShader: ShaderLib.background.vertexShader,
						fragmentShader: ShaderLib.background.fragmentShader,
						side: FrontSide,
						depthTest: false,
						depthWrite: false,
						fog: false
					} )
				);

				planeMesh.geometry.deleteAttribute( 'normal' );

				// enable code injection for non-built-in material
				Object.defineProperty( planeMesh.material, 'map', {

					get: function () {

						return this.uniforms.t2D.value;

					}

				} );

				objects.update( planeMesh );

			}

			planeMesh.material.uniforms.t2D.value = background;

			if ( background.matrixAutoUpdate === true ) {

				background.updateMatrix();

			}

			planeMesh.material.uniforms.uvTransform.value.copy( background.matrix );

			if ( currentBackground !== background ||
				currentBackgroundVersion !== background.version ||
				currentTonemapping !== renderer.toneMapping ) {

				planeMesh.material.needsUpdate = true;

				currentBackground = background;
				currentBackgroundVersion = background.version;
				currentTonemapping = renderer.toneMapping;

			}


			// push to the pre-sorted opaque render list
			renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );

		}

	}

	function setClear( color, alpha ) {

		state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );

	}

	return {

		getClearColor: function () {

			return clearColor;

		},
		setClearColor: function ( color, alpha = 1 ) {

			clearColor.set( color );
			clearAlpha = alpha;
			setClear( clearColor, clearAlpha );

		},
		getClearAlpha: function () {

			return clearAlpha;

		},
		setClearAlpha: function ( alpha ) {

			clearAlpha = alpha;
			setClear( clearColor, clearAlpha );

		},
		render: render

	};

}

function WebGLBindingStates( gl, extensions, attributes, capabilities ) {

	const maxVertexAttributes = gl.getParameter( 34921 );

	const extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );
	const vaoAvailable = capabilities.isWebGL2 || extension !== null;

	const bindingStates = {};

	const defaultState = createBindingState( null );
	let currentState = defaultState;

	function setup( object, material, program, geometry, index ) {

		let updateBuffers = false;

		if ( vaoAvailable ) {

			const state = getBindingState( geometry, program, material );

			if ( currentState !== state ) {

				currentState = state;
				bindVertexArrayObject( currentState.object );

			}

			updateBuffers = needsUpdate( geometry, index );

			if ( updateBuffers ) saveCache( geometry, index );

		} else {

			const wireframe = ( material.wireframe === true );

			if ( currentState.geometry !== geometry.id ||
				currentState.program !== program.id ||
				currentState.wireframe !== wireframe ) {

				currentState.geometry = geometry.id;
				currentState.program = program.id;
				currentState.wireframe = wireframe;

				updateBuffers = true;

			}

		}

		if ( object.isInstancedMesh === true ) {

			updateBuffers = true;

		}

		if ( index !== null ) {

			attributes.update( index, 34963 );

		}

		if ( updateBuffers ) {

			setupVertexAttributes( object, material, program, geometry );

			if ( index !== null ) {

				gl.bindBuffer( 34963, attributes.get( index ).buffer );

			}

		}

	}

	function createVertexArrayObject() {

		if ( capabilities.isWebGL2 ) return gl.createVertexArray();

		return extension.createVertexArrayOES();

	}

	function bindVertexArrayObject( vao ) {

		if ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );

		return extension.bindVertexArrayOES( vao );

	}

	function deleteVertexArrayObject( vao ) {

		if ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );

		return extension.deleteVertexArrayOES( vao );

	}

	function getBindingState( geometry, program, material ) {

		const wireframe = ( material.wireframe === true );

		let programMap = bindingStates[ geometry.id ];

		if ( programMap === undefined ) {

			programMap = {};
			bindingStates[ geometry.id ] = programMap;

		}

		let stateMap = programMap[ program.id ];

		if ( stateMap === undefined ) {

			stateMap = {};
			programMap[ program.id ] = stateMap;

		}

		let state = stateMap[ wireframe ];

		if ( state === undefined ) {

			state = createBindingState( createVertexArrayObject() );
			stateMap[ wireframe ] = state;

		}

		return state;

	}

	function createBindingState( vao ) {

		const newAttributes = [];
		const enabledAttributes = [];
		const attributeDivisors = [];

		for ( let i = 0; i < maxVertexAttributes; i ++ ) {

			newAttributes[ i ] = 0;
			enabledAttributes[ i ] = 0;
			attributeDivisors[ i ] = 0;

		}

		return {

			// for backward compatibility on non-VAO support browser
			geometry: null,
			program: null,
			wireframe: false,

			newAttributes: newAttributes,
			enabledAttributes: enabledAttributes,
			attributeDivisors: attributeDivisors,
			object: vao,
			attributes: {},
			index: null

		};

	}

	function needsUpdate( geometry, index ) {

		const cachedAttributes = currentState.attributes;
		const geometryAttributes = geometry.attributes;

		let attributesNum = 0;

		for ( const key in geometryAttributes ) {

			const cachedAttribute = cachedAttributes[ key ];
			const geometryAttribute = geometryAttributes[ key ];

			if ( cachedAttribute === undefined ) return true;

			if ( cachedAttribute.attribute !== geometryAttribute ) return true;

			if ( cachedAttribute.data !== geometryAttribute.data ) return true;

			attributesNum ++;

		}

		if ( currentState.attributesNum !== attributesNum ) return true;

		if ( currentState.index !== index ) return true;

		return false;

	}

	function saveCache( geometry, index ) {

		const cache = {};
		const attributes = geometry.attributes;
		let attributesNum = 0;

		for ( const key in attributes ) {

			const attribute = attributes[ key ];

			const data = {};
			data.attribute = attribute;

			if ( attribute.data ) {

				data.data = attribute.data;

			}

			cache[ key ] = data;

			attributesNum ++;

		}

		currentState.attributes = cache;
		currentState.attributesNum = attributesNum;

		currentState.index = index;

	}

	function initAttributes() {

		const newAttributes = currentState.newAttributes;

		for ( let i = 0, il = newAttributes.length; i < il; i ++ ) {

			newAttributes[ i ] = 0;

		}

	}

	function enableAttribute( attribute ) {

		enableAttributeAndDivisor( attribute, 0 );

	}

	function enableAttributeAndDivisor( attribute, meshPerAttribute ) {

		const newAttributes = currentState.newAttributes;
		const enabledAttributes = currentState.enabledAttributes;
		const attributeDivisors = currentState.attributeDivisors;

		newAttributes[ attribute ] = 1;

		if ( enabledAttributes[ attribute ] === 0 ) {

			gl.enableVertexAttribArray( attribute );
			enabledAttributes[ attribute ] = 1;

		}

		if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {

			const extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );

			extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );
			attributeDivisors[ attribute ] = meshPerAttribute;

		}

	}

	function disableUnusedAttributes() {

		const newAttributes = currentState.newAttributes;
		const enabledAttributes = currentState.enabledAttributes;

		for ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {

			if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {

				gl.disableVertexAttribArray( i );
				enabledAttributes[ i ] = 0;

			}

		}

	}

	function vertexAttribPointer( index, size, type, normalized, stride, offset ) {

		if ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {

			gl.vertexAttribIPointer( index, size, type, stride, offset );

		} else {

			gl.vertexAttribPointer( index, size, type, normalized, stride, offset );

		}

	}

	function setupVertexAttributes( object, material, program, geometry ) {

		if ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {

			if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;

		}

		initAttributes();

		const geometryAttributes = geometry.attributes;

		const programAttributes = program.getAttributes();

		const materialDefaultAttributeValues = material.defaultAttributeValues;

		for ( const name in programAttributes ) {

			const programAttribute = programAttributes[ name ];

			if ( programAttribute >= 0 ) {

				const geometryAttribute = geometryAttributes[ name ];

				if ( geometryAttribute !== undefined ) {

					const normalized = geometryAttribute.normalized;
					const size = geometryAttribute.itemSize;

					const attribute = attributes.get( geometryAttribute );

					// TODO Attribute may not be available on context restore

					if ( attribute === undefined ) continue;

					const buffer = attribute.buffer;
					const type = attribute.type;
					const bytesPerElement = attribute.bytesPerElement;

					if ( geometryAttribute.isInterleavedBufferAttribute ) {

						const data = geometryAttribute.data;
						const stride = data.stride;
						const offset = geometryAttribute.offset;

						if ( data && data.isInstancedInterleavedBuffer ) {

							enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );

							if ( geometry._maxInstanceCount === undefined ) {

								geometry._maxInstanceCount = data.meshPerAttribute * data.count;

							}

						} else {

							enableAttribute( programAttribute );

						}

						gl.bindBuffer( 34962, buffer );
						vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );

					} else {

						if ( geometryAttribute.isInstancedBufferAttribute ) {

							enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );

							if ( geometry._maxInstanceCount === undefined ) {

								geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;

							}

						} else {

							enableAttribute( programAttribute );

						}

						gl.bindBuffer( 34962, buffer );
						vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );

					}

				} else if ( name === 'instanceMatrix' ) {

					const attribute = attributes.get( object.instanceMatrix );

					// TODO Attribute may not be available on context restore

					if ( attribute === undefined ) continue;

					const buffer = attribute.buffer;
					const type = attribute.type;

					enableAttributeAndDivisor( programAttribute + 0, 1 );
					enableAttributeAndDivisor( programAttribute + 1, 1 );
					enableAttributeAndDivisor( programAttribute + 2, 1 );
					enableAttributeAndDivisor( programAttribute + 3, 1 );

					gl.bindBuffer( 34962, buffer );

					gl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );
					gl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );
					gl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );
					gl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );

				} else if ( name === 'instanceColor' ) {

					const attribute = attributes.get( object.instanceColor );

					// TODO Attribute may not be available on context restore

					if ( attribute === undefined ) continue;

					const buffer = attribute.buffer;
					const type = attribute.type;

					enableAttributeAndDivisor( programAttribute, 1 );

					gl.bindBuffer( 34962, buffer );

					gl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );

				} else if ( materialDefaultAttributeValues !== undefined ) {

					const value = materialDefaultAttributeValues[ name ];

					if ( value !== undefined ) {

						switch ( value.length ) {

							case 2:
								gl.vertexAttrib2fv( programAttribute, value );
								break;

							case 3:
								gl.vertexAttrib3fv( programAttribute, value );
								break;

							case 4:
								gl.vertexAttrib4fv( programAttribute, value );
								break;

							default:
								gl.vertexAttrib1fv( programAttribute, value );

						}

					}

				}

			}

		}

		disableUnusedAttributes();

	}

	function dispose() {

		reset();

		for ( const geometryId in bindingStates ) {

			const programMap = bindingStates[ geometryId ];

			for ( const programId in programMap ) {

				const stateMap = programMap[ programId ];

				for ( const wireframe in stateMap ) {

					deleteVertexArrayObject( stateMap[ wireframe ].object );

					delete stateMap[ wireframe ];

				}

				delete programMap[ programId ];

			}

			delete bindingStates[ geometryId ];

		}

	}

	function releaseStatesOfGeometry( geometry ) {

		if ( bindingStates[ geometry.id ] === undefined ) return;

		const programMap = bindingStates[ geometry.id ];

		for ( const programId in programMap ) {

			const stateMap = programMap[ programId ];

			for ( const wireframe in stateMap ) {

				deleteVertexArrayObject( stateMap[ wireframe ].object );

				delete stateMap[ wireframe ];

			}

			delete programMap[ programId ];

		}

		delete bindingStates[ geometry.id ];

	}

	function releaseStatesOfProgram( program ) {

		for ( const geometryId in bindingStates ) {

			const programMap = bindingStates[ geometryId ];

			if ( programMap[ program.id ] === undefined ) continue;

			const stateMap = programMap[ program.id ];

			for ( const wireframe in stateMap ) {

				deleteVertexArrayObject( stateMap[ wireframe ].object );

				delete stateMap[ wireframe ];

			}

			delete programMap[ program.id ];

		}

	}

	function reset() {

		resetDefaultState();

		if ( currentState === defaultState ) return;

		currentState = defaultState;
		bindVertexArrayObject( currentState.object );

	}

	// for backward-compatilibity

	function resetDefaultState() {

		defaultState.geometry = null;
		defaultState.program = null;
		defaultState.wireframe = false;

	}

	return {

		setup: setup,
		reset: reset,
		resetDefaultState: resetDefaultState,
		dispose: dispose,
		releaseStatesOfGeometry: releaseStatesOfGeometry,
		releaseStatesOfProgram: releaseStatesOfProgram,

		initAttributes: initAttributes,
		enableAttribute: enableAttribute,
		disableUnusedAttributes: disableUnusedAttributes

	};

}

function WebGLBufferRenderer( gl, extensions, info, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	let mode;

	function setMode( value ) {

		mode = value;

	}

	function render( start, count ) {

		gl.drawArrays( mode, start, count );

		info.update( count, mode, 1 );

	}

	function renderInstances( start, count, primcount ) {

		if ( primcount === 0 ) return;

		let extension, methodName;

		if ( isWebGL2 ) {

			extension = gl;
			methodName = 'drawArraysInstanced';

		} else {

			extension = extensions.get( 'ANGLE_instanced_arrays' );
			methodName = 'drawArraysInstancedANGLE';

			if ( extension === null ) {

				console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
				return;

			}

		}

		extension[ methodName ]( mode, start, count, primcount );

		info.update( count, mode, primcount );

	}

	//

	this.setMode = setMode;
	this.render = render;
	this.renderInstances = renderInstances;

}

function WebGLCapabilities( gl, extensions, parameters ) {

	let maxAnisotropy;

	function getMaxAnisotropy() {

		if ( maxAnisotropy !== undefined ) return maxAnisotropy;

		if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {

			const extension = extensions.get( 'EXT_texture_filter_anisotropic' );

			maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );

		} else {

			maxAnisotropy = 0;

		}

		return maxAnisotropy;

	}

	function getMaxPrecision( precision ) {

		if ( precision === 'highp' ) {

			if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&
				gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {

				return 'highp';

			}

			precision = 'mediump';

		}

		if ( precision === 'mediump' ) {

			if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&
				gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {

				return 'mediump';

			}

		}

		return 'lowp';

	}

	/* eslint-disable no-undef */
	const isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||
		( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );
	/* eslint-enable no-undef */

	let precision = parameters.precision !== undefined ? parameters.precision : 'highp';
	const maxPrecision = getMaxPrecision( precision );

	if ( maxPrecision !== precision ) {

		console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );
		precision = maxPrecision;

	}

	const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;

	const maxTextures = gl.getParameter( 34930 );
	const maxVertexTextures = gl.getParameter( 35660 );
	const maxTextureSize = gl.getParameter( 3379 );
	const maxCubemapSize = gl.getParameter( 34076 );

	const maxAttributes = gl.getParameter( 34921 );
	const maxVertexUniforms = gl.getParameter( 36347 );
	const maxVaryings = gl.getParameter( 36348 );
	const maxFragmentUniforms = gl.getParameter( 36349 );

	const vertexTextures = maxVertexTextures > 0;
	const floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );
	const floatVertexTextures = vertexTextures && floatFragmentTextures;

	const maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;

	return {

		isWebGL2: isWebGL2,

		getMaxAnisotropy: getMaxAnisotropy,
		getMaxPrecision: getMaxPrecision,

		precision: precision,
		logarithmicDepthBuffer: logarithmicDepthBuffer,

		maxTextures: maxTextures,
		maxVertexTextures: maxVertexTextures,
		maxTextureSize: maxTextureSize,
		maxCubemapSize: maxCubemapSize,

		maxAttributes: maxAttributes,
		maxVertexUniforms: maxVertexUniforms,
		maxVaryings: maxVaryings,
		maxFragmentUniforms: maxFragmentUniforms,

		vertexTextures: vertexTextures,
		floatFragmentTextures: floatFragmentTextures,
		floatVertexTextures: floatVertexTextures,

		maxSamples: maxSamples

	};

}

function WebGLClipping( properties ) {

	const scope = this;

	let globalState = null,
		numGlobalPlanes = 0,
		localClippingEnabled = false,
		renderingShadows = false;

	const plane = new Plane(),
		viewNormalMatrix = new Matrix3(),

		uniform = { value: null, needsUpdate: false };

	this.uniform = uniform;
	this.numPlanes = 0;
	this.numIntersection = 0;

	this.init = function ( planes, enableLocalClipping, camera ) {

		const enabled =
			planes.length !== 0 ||
			enableLocalClipping ||
			// enable state of previous frame - the clipping code has to
			// run another frame in order to reset the state:
			numGlobalPlanes !== 0 ||
			localClippingEnabled;

		localClippingEnabled = enableLocalClipping;

		globalState = projectPlanes( planes, camera, 0 );
		numGlobalPlanes = planes.length;

		return enabled;

	};

	this.beginShadows = function () {

		renderingShadows = true;
		projectPlanes( null );

	};

	this.endShadows = function () {

		renderingShadows = false;
		resetGlobalState();

	};

	this.setState = function ( material, camera, useCache ) {

		const planes = material.clippingPlanes,
			clipIntersection = material.clipIntersection,
			clipShadows = material.clipShadows;

		const materialProperties = properties.get( material );

		if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {

			// there's no local clipping

			if ( renderingShadows ) {

				// there's no global clipping

				projectPlanes( null );

			} else {

				resetGlobalState();

			}

		} else {

			const nGlobal = renderingShadows ? 0 : numGlobalPlanes,
				lGlobal = nGlobal * 4;

			let dstArray = materialProperties.clippingState || null;

			uniform.value = dstArray; // ensure unique state

			dstArray = projectPlanes( planes, camera, lGlobal, useCache );

			for ( let i = 0; i !== lGlobal; ++ i ) {

				dstArray[ i ] = globalState[ i ];

			}

			materialProperties.clippingState = dstArray;
			this.numIntersection = clipIntersection ? this.numPlanes : 0;
			this.numPlanes += nGlobal;

		}


	};

	function resetGlobalState() {

		if ( uniform.value !== globalState ) {

			uniform.value = globalState;
			uniform.needsUpdate = numGlobalPlanes > 0;

		}

		scope.numPlanes = numGlobalPlanes;
		scope.numIntersection = 0;

	}

	function projectPlanes( planes, camera, dstOffset, skipTransform ) {

		const nPlanes = planes !== null ? planes.length : 0;
		let dstArray = null;

		if ( nPlanes !== 0 ) {

			dstArray = uniform.value;

			if ( skipTransform !== true || dstArray === null ) {

				const flatSize = dstOffset + nPlanes * 4,
					viewMatrix = camera.matrixWorldInverse;

				viewNormalMatrix.getNormalMatrix( viewMatrix );

				if ( dstArray === null || dstArray.length < flatSize ) {

					dstArray = new Float32Array( flatSize );

				}

				for ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {

					plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );

					plane.normal.toArray( dstArray, i4 );
					dstArray[ i4 + 3 ] = plane.constant;

				}

			}

			uniform.value = dstArray;
			uniform.needsUpdate = true;

		}

		scope.numPlanes = nPlanes;
		scope.numIntersection = 0;

		return dstArray;

	}

}

function WebGLCubeMaps( renderer ) {

	let cubemaps = new WeakMap();

	function mapTextureMapping( texture, mapping ) {

		if ( mapping === EquirectangularReflectionMapping ) {

			texture.mapping = CubeReflectionMapping;

		} else if ( mapping === EquirectangularRefractionMapping ) {

			texture.mapping = CubeRefractionMapping;

		}

		return texture;

	}

	function get( texture ) {

		if ( texture && texture.isTexture ) {

			const mapping = texture.mapping;

			if ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {

				if ( cubemaps.has( texture ) ) {

					const cubemap = cubemaps.get( texture ).texture;
					return mapTextureMapping( cubemap, texture.mapping );

				} else {

					const image = texture.image;

					if ( image && image.height > 0 ) {

						const currentRenderTarget = renderer.getRenderTarget();

						const renderTarget = new WebGLCubeRenderTarget( image.height / 2 );
						renderTarget.fromEquirectangularTexture( renderer, texture );
						cubemaps.set( texture, renderTarget );

						renderer.setRenderTarget( currentRenderTarget );

						texture.addEventListener( 'dispose', onTextureDispose );

						return mapTextureMapping( renderTarget.texture, texture.mapping );

					} else {

						// image not yet ready. try the conversion next frame

						return null;

					}

				}

			}

		}

		return texture;

	}

	function onTextureDispose( event ) {

		const texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		const cubemap = cubemaps.get( texture );

		if ( cubemap !== undefined ) {

			cubemaps.delete( texture );
			cubemap.dispose();

		}

	}

	function dispose() {

		cubemaps = new WeakMap();

	}

	return {
		get: get,
		dispose: dispose
	};

}

function WebGLExtensions( gl ) {

	const extensions = {};

	function getExtension( name ) {

		if ( extensions[ name ] !== undefined ) {

			return extensions[ name ];

		}

		let extension;

		switch ( name ) {

			case 'WEBGL_depth_texture':
				extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );
				break;

			case 'EXT_texture_filter_anisotropic':
				extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );
				break;

			case 'WEBGL_compressed_texture_s3tc':
				extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );
				break;

			case 'WEBGL_compressed_texture_pvrtc':
				extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );
				break;

			default:
				extension = gl.getExtension( name );

		}

		extensions[ name ] = extension;

		return extension;

	}

	return {

		has: function ( name ) {

			return getExtension( name ) !== null;

		},

		init: function ( capabilities ) {

			if ( capabilities.isWebGL2 ) {

				getExtension( 'EXT_color_buffer_float' );

			} else {

				getExtension( 'WEBGL_depth_texture' );
				getExtension( 'OES_texture_float' );
				getExtension( 'OES_texture_half_float' );
				getExtension( 'OES_texture_half_float_linear' );
				getExtension( 'OES_standard_derivatives' );
				getExtension( 'OES_element_index_uint' );
				getExtension( 'OES_vertex_array_object' );
				getExtension( 'ANGLE_instanced_arrays' );

			}

			getExtension( 'OES_texture_float_linear' );
			getExtension( 'EXT_color_buffer_half_float' );

		},

		get: function ( name ) {

			const extension = getExtension( name );

			if ( extension === null ) {

				console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );

			}

			return extension;

		}

	};

}

function WebGLGeometries( gl, attributes, info, bindingStates ) {

	const geometries = {};
	const wireframeAttributes = new WeakMap();

	function onGeometryDispose( event ) {

		const geometry = event.target;

		if ( geometry.index !== null ) {

			attributes.remove( geometry.index );

		}

		for ( const name in geometry.attributes ) {

			attributes.remove( geometry.attributes[ name ] );

		}

		geometry.removeEventListener( 'dispose', onGeometryDispose );

		delete geometries[ geometry.id ];

		const attribute = wireframeAttributes.get( geometry );

		if ( attribute ) {

			attributes.remove( attribute );
			wireframeAttributes.delete( geometry );

		}

		bindingStates.releaseStatesOfGeometry( geometry );

		if ( geometry.isInstancedBufferGeometry === true ) {

			delete geometry._maxInstanceCount;

		}

		//

		info.memory.geometries --;

	}

	function get( object, geometry ) {

		if ( geometries[ geometry.id ] === true ) return geometry;

		geometry.addEventListener( 'dispose', onGeometryDispose );

		geometries[ geometry.id ] = true;

		info.memory.geometries ++;

		return geometry;

	}

	function update( geometry ) {

		const geometryAttributes = geometry.attributes;

		// Updating index buffer in VAO now. See WebGLBindingStates.

		for ( const name in geometryAttributes ) {

			attributes.update( geometryAttributes[ name ], 34962 );

		}

		// morph targets

		const morphAttributes = geometry.morphAttributes;

		for ( const name in morphAttributes ) {

			const array = morphAttributes[ name ];

			for ( let i = 0, l = array.length; i < l; i ++ ) {

				attributes.update( array[ i ], 34962 );

			}

		}

	}

	function updateWireframeAttribute( geometry ) {

		const indices = [];

		const geometryIndex = geometry.index;
		const geometryPosition = geometry.attributes.position;
		let version = 0;

		if ( geometryIndex !== null ) {

			const array = geometryIndex.array;
			version = geometryIndex.version;

			for ( let i = 0, l = array.length; i < l; i += 3 ) {

				const a = array[ i + 0 ];
				const b = array[ i + 1 ];
				const c = array[ i + 2 ];

				indices.push( a, b, b, c, c, a );

			}

		} else {

			const array = geometryPosition.array;
			version = geometryPosition.version;

			for ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {

				const a = i + 0;
				const b = i + 1;
				const c = i + 2;

				indices.push( a, b, b, c, c, a );

			}

		}

		const attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );
		attribute.version = version;

		// Updating index buffer in VAO now. See WebGLBindingStates

		//

		const previousAttribute = wireframeAttributes.get( geometry );

		if ( previousAttribute ) attributes.remove( previousAttribute );

		//

		wireframeAttributes.set( geometry, attribute );

	}

	function getWireframeAttribute( geometry ) {

		const currentAttribute = wireframeAttributes.get( geometry );

		if ( currentAttribute ) {

			const geometryIndex = geometry.index;

			if ( geometryIndex !== null ) {

				// if the attribute is obsolete, create a new one

				if ( currentAttribute.version < geometryIndex.version ) {

					updateWireframeAttribute( geometry );

				}

			}

		} else {

			updateWireframeAttribute( geometry );

		}

		return wireframeAttributes.get( geometry );

	}

	return {

		get: get,
		update: update,

		getWireframeAttribute: getWireframeAttribute

	};

}

function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	let mode;

	function setMode( value ) {

		mode = value;

	}

	let type, bytesPerElement;

	function setIndex( value ) {

		type = value.type;
		bytesPerElement = value.bytesPerElement;

	}

	function render( start, count ) {

		gl.drawElements( mode, count, type, start * bytesPerElement );

		info.update( count, mode, 1 );

	}

	function renderInstances( start, count, primcount ) {

		if ( primcount === 0 ) return;

		let extension, methodName;

		if ( isWebGL2 ) {

			extension = gl;
			methodName = 'drawElementsInstanced';

		} else {

			extension = extensions.get( 'ANGLE_instanced_arrays' );
			methodName = 'drawElementsInstancedANGLE';

			if ( extension === null ) {

				console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
				return;

			}

		}

		extension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );

		info.update( count, mode, primcount );

	}

	//

	this.setMode = setMode;
	this.setIndex = setIndex;
	this.render = render;
	this.renderInstances = renderInstances;

}

function WebGLInfo( gl ) {

	const memory = {
		geometries: 0,
		textures: 0
	};

	const render = {
		frame: 0,
		calls: 0,
		triangles: 0,
		points: 0,
		lines: 0
	};

	function update( count, mode, instanceCount ) {

		render.calls ++;

		switch ( mode ) {

			case 4:
				render.triangles += instanceCount * ( count / 3 );
				break;

			case 1:
				render.lines += instanceCount * ( count / 2 );
				break;

			case 3:
				render.lines += instanceCount * ( count - 1 );
				break;

			case 2:
				render.lines += instanceCount * count;
				break;

			case 0:
				render.points += instanceCount * count;
				break;

			default:
				console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );
				break;

		}

	}

	function reset() {

		render.frame ++;
		render.calls = 0;
		render.triangles = 0;
		render.points = 0;
		render.lines = 0;

	}

	return {
		memory: memory,
		render: render,
		programs: null,
		autoReset: true,
		reset: reset,
		update: update
	};

}

function numericalSort( a, b ) {

	return a[ 0 ] - b[ 0 ];

}

function absNumericalSort( a, b ) {

	return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );

}

function WebGLMorphtargets( gl ) {

	const influencesList = {};
	const morphInfluences = new Float32Array( 8 );

	const workInfluences = [];

	for ( let i = 0; i < 8; i ++ ) {

		workInfluences[ i ] = [ i, 0 ];

	}

	function update( object, geometry, material, program ) {

		const objectInfluences = object.morphTargetInfluences;

		// When object doesn't have morph target influences defined, we treat it as a 0-length array
		// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences

		const length = objectInfluences === undefined ? 0 : objectInfluences.length;

		let influences = influencesList[ geometry.id ];

		if ( influences === undefined ) {

			// initialise list

			influences = [];

			for ( let i = 0; i < length; i ++ ) {

				influences[ i ] = [ i, 0 ];

			}

			influencesList[ geometry.id ] = influences;

		}

		// Collect influences

		for ( let i = 0; i < length; i ++ ) {

			const influence = influences[ i ];

			influence[ 0 ] = i;
			influence[ 1 ] = objectInfluences[ i ];

		}

		influences.sort( absNumericalSort );

		for ( let i = 0; i < 8; i ++ ) {

			if ( i < length && influences[ i ][ 1 ] ) {

				workInfluences[ i ][ 0 ] = influences[ i ][ 0 ];
				workInfluences[ i ][ 1 ] = influences[ i ][ 1 ];

			} else {

				workInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;
				workInfluences[ i ][ 1 ] = 0;

			}

		}

		workInfluences.sort( numericalSort );

		const morphTargets = material.morphTargets && geometry.morphAttributes.position;
		const morphNormals = material.morphNormals && geometry.morphAttributes.normal;

		let morphInfluencesSum = 0;

		for ( let i = 0; i < 8; i ++ ) {

			const influence = workInfluences[ i ];
			const index = influence[ 0 ];
			const value = influence[ 1 ];

			if ( index !== Number.MAX_SAFE_INTEGER && value ) {

				if ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {

					geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );

				}

				if ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {

					geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );

				}

				morphInfluences[ i ] = value;
				morphInfluencesSum += value;

			} else {

				if ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {

					geometry.deleteAttribute( 'morphTarget' + i );

				}

				if ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {

					geometry.deleteAttribute( 'morphNormal' + i );

				}

				morphInfluences[ i ] = 0;

			}

		}

		// GLSL shader uses formula baseinfluence * base + sum(target * influence)
		// This allows us to switch between absolute morphs and relative morphs without changing shader code
		// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)
		const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;

		program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );
		program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );

	}

	return {

		update: update

	};

}

function WebGLObjects( gl, geometries, attributes, info ) {

	let updateMap = new WeakMap();

	function update( object ) {

		const frame = info.render.frame;

		const geometry = object.geometry;
		const buffergeometry = geometries.get( object, geometry );

		// Update once per frame

		if ( updateMap.get( buffergeometry ) !== frame ) {

			geometries.update( buffergeometry );

			updateMap.set( buffergeometry, frame );

		}

		if ( object.isInstancedMesh ) {

			if ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {

				object.addEventListener( 'dispose', onInstancedMeshDispose );

			}

			attributes.update( object.instanceMatrix, 34962 );

			if ( object.instanceColor !== null ) {

				attributes.update( object.instanceColor, 34962 );

			}

		}

		return buffergeometry;

	}

	function dispose() {

		updateMap = new WeakMap();

	}

	function onInstancedMeshDispose( event ) {

		const instancedMesh = event.target;

		instancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );

		attributes.remove( instancedMesh.instanceMatrix );

		if ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );

	}

	return {

		update: update,
		dispose: dispose

	};

}

class DataTexture2DArray extends Texture {

	constructor( data = null, width = 1, height = 1, depth = 1 ) {

		super( null );

		this.image = { data, width, height, depth };

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.wrapR = ClampToEdgeWrapping;

		this.generateMipmaps = false;
		this.flipY = false;

		this.needsUpdate = true;

	}

}

DataTexture2DArray.prototype.isDataTexture2DArray = true;

class DataTexture3D extends Texture {

	constructor( data = null, width = 1, height = 1, depth = 1 ) {

		// We're going to add .setXXX() methods for setting properties later.
		// Users can still set in DataTexture3D directly.
		//
		//	const texture = new THREE.DataTexture3D( data, width, height, depth );
		// 	texture.anisotropy = 16;
		//
		// See #14839

		super( null );

		this.image = { data, width, height, depth };

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.wrapR = ClampToEdgeWrapping;

		this.generateMipmaps = false;
		this.flipY = false;

		this.needsUpdate = true;

	}

}

DataTexture3D.prototype.isDataTexture3D = true;

/**
 * Uniforms of a program.
 * Those form a tree structure with a special top-level container for the root,
 * which you get by calling 'new WebGLUniforms( gl, program )'.
 *
 *
 * Properties of inner nodes including the top-level container:
 *
 * .seq - array of nested uniforms
 * .map - nested uniforms by name
 *
 *
 * Methods of all nodes except the top-level container:
 *
 * .setValue( gl, value, [textures] )
 *
 * 		uploads a uniform value(s)
 *  	the 'textures' parameter is needed for sampler uniforms
 *
 *
 * Static methods of the top-level container (textures factorizations):
 *
 * .upload( gl, seq, values, textures )
 *
 * 		sets uniforms in 'seq' to 'values[id].value'
 *
 * .seqWithValue( seq, values ) : filteredSeq
 *
 * 		filters 'seq' entries with corresponding entry in values
 *
 *
 * Methods of the top-level container (textures factorizations):
 *
 * .setValue( gl, name, value, textures )
 *
 * 		sets uniform with  name 'name' to 'value'
 *
 * .setOptional( gl, obj, prop )
 *
 * 		like .set for an optional property of the object
 *
 */

const emptyTexture = new Texture();
const emptyTexture2dArray = new DataTexture2DArray();
const emptyTexture3d = new DataTexture3D();
const emptyCubeTexture = new CubeTexture();

// --- Utilities ---

// Array Caches (provide typed arrays for temporary by size)

const arrayCacheF32 = [];
const arrayCacheI32 = [];

// Float32Array caches used for uploading Matrix uniforms

const mat4array = new Float32Array( 16 );
const mat3array = new Float32Array( 9 );
const mat2array = new Float32Array( 4 );

// Flattening for arrays of vectors and matrices

function flatten( array, nBlocks, blockSize ) {

	const firstElem = array[ 0 ];

	if ( firstElem <= 0 || firstElem > 0 ) return array;
	// unoptimized: ! isNaN( firstElem )
	// see http://jacksondunstan.com/articles/983

	const n = nBlocks * blockSize;
	let r = arrayCacheF32[ n ];

	if ( r === undefined ) {

		r = new Float32Array( n );
		arrayCacheF32[ n ] = r;

	}

	if ( nBlocks !== 0 ) {

		firstElem.toArray( r, 0 );

		for ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {

			offset += blockSize;
			array[ i ].toArray( r, offset );

		}

	}

	return r;

}

function arraysEqual( a, b ) {

	if ( a.length !== b.length ) return false;

	for ( let i = 0, l = a.length; i < l; i ++ ) {

		if ( a[ i ] !== b[ i ] ) return false;

	}

	return true;

}

function copyArray( a, b ) {

	for ( let i = 0, l = b.length; i < l; i ++ ) {

		a[ i ] = b[ i ];

	}

}

// Texture unit allocation

function allocTexUnits( textures, n ) {

	let r = arrayCacheI32[ n ];

	if ( r === undefined ) {

		r = new Int32Array( n );
		arrayCacheI32[ n ] = r;

	}

	for ( let i = 0; i !== n; ++ i ) {

		r[ i ] = textures.allocateTextureUnit();

	}

	return r;

}

// --- Setters ---

// Note: Defining these methods externally, because they come in a bunch
// and this way their names minify.

// Single scalar

function setValueV1f( gl, v ) {

	const cache = this.cache;

	if ( cache[ 0 ] === v ) return;

	gl.uniform1f( this.addr, v );

	cache[ 0 ] = v;

}

// Single float vector (from flat array or THREE.VectorN)

function setValueV2f( gl, v ) {

	const cache = this.cache;

	if ( v.x !== undefined ) {

		if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {

			gl.uniform2f( this.addr, v.x, v.y );

			cache[ 0 ] = v.x;
			cache[ 1 ] = v.y;

		}

	} else {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniform2fv( this.addr, v );

		copyArray( cache, v );

	}

}

function setValueV3f( gl, v ) {

	const cache = this.cache;

	if ( v.x !== undefined ) {

		if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {

			gl.uniform3f( this.addr, v.x, v.y, v.z );

			cache[ 0 ] = v.x;
			cache[ 1 ] = v.y;
			cache[ 2 ] = v.z;

		}

	} else if ( v.r !== undefined ) {

		if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {

			gl.uniform3f( this.addr, v.r, v.g, v.b );

			cache[ 0 ] = v.r;
			cache[ 1 ] = v.g;
			cache[ 2 ] = v.b;

		}

	} else {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniform3fv( this.addr, v );

		copyArray( cache, v );

	}

}

function setValueV4f( gl, v ) {

	const cache = this.cache;

	if ( v.x !== undefined ) {

		if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {

			gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );

			cache[ 0 ] = v.x;
			cache[ 1 ] = v.y;
			cache[ 2 ] = v.z;
			cache[ 3 ] = v.w;

		}

	} else {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniform4fv( this.addr, v );

		copyArray( cache, v );

	}

}

// Single matrix (from flat array or MatrixN)

function setValueM2( gl, v ) {

	const cache = this.cache;
	const elements = v.elements;

	if ( elements === undefined ) {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniformMatrix2fv( this.addr, false, v );

		copyArray( cache, v );

	} else {

		if ( arraysEqual( cache, elements ) ) return;

		mat2array.set( elements );

		gl.uniformMatrix2fv( this.addr, false, mat2array );

		copyArray( cache, elements );

	}

}

function setValueM3( gl, v ) {

	const cache = this.cache;
	const elements = v.elements;

	if ( elements === undefined ) {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniformMatrix3fv( this.addr, false, v );

		copyArray( cache, v );

	} else {

		if ( arraysEqual( cache, elements ) ) return;

		mat3array.set( elements );

		gl.uniformMatrix3fv( this.addr, false, mat3array );

		copyArray( cache, elements );

	}

}

function setValueM4( gl, v ) {

	const cache = this.cache;
	const elements = v.elements;

	if ( elements === undefined ) {

		if ( arraysEqual( cache, v ) ) return;

		gl.uniformMatrix4fv( this.addr, false, v );

		copyArray( cache, v );

	} else {

		if ( arraysEqual( cache, elements ) ) return;

		mat4array.set( elements );

		gl.uniformMatrix4fv( this.addr, false, mat4array );

		copyArray( cache, elements );

	}

}

// Single texture (2D / Cube)

function setValueT1( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.safeSetTexture2D( v || emptyTexture, unit );

}

function setValueT2DArray1( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.setTexture2DArray( v || emptyTexture2dArray, unit );

}

function setValueT3D1( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.setTexture3D( v || emptyTexture3d, unit );

}

function setValueT6( gl, v, textures ) {

	const cache = this.cache;
	const unit = textures.allocateTextureUnit();

	if ( cache[ 0 ] !== unit ) {

		gl.uniform1i( this.addr, unit );
		cache[ 0 ] = unit;

	}

	textures.safeSetTextureCube( v || emptyCubeTexture, unit );

}

// Integer / Boolean vectors or arrays thereof (always flat arrays)

function setValueV1i( gl, v ) {

	const cache = this.cache;

	if ( cache[ 0 ] === v ) return;

	gl.uniform1i( this.addr, v );

	cache[ 0 ] = v;

}

function setValueV2i( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform2iv( this.addr, v );

	copyArray( cache, v );

}

function setValueV3i( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform3iv( this.addr, v );

	copyArray( cache, v );

}

function setValueV4i( gl, v ) {

	const cache = this.cache;

	if ( arraysEqual( cache, v ) ) return;

	gl.uniform4iv( this.addr, v );

	copyArray( cache, v );

}

// uint

function setValueV1ui( gl, v ) {

	const cache = this.cache;

	if ( cache[ 0 ] === v ) return;

	gl.uniform1ui( this.addr, v );

	cache[ 0 ] = v;

}

// Helper to pick the right setter for the singular case

function getSingularSetter( type ) {

	switch ( type ) {

		case 0x1406: return setValueV1f; // FLOAT
		case 0x8b50: return setValueV2f; // _VEC2
		case 0x8b51: return setValueV3f; // _VEC3
		case 0x8b52: return setValueV4f; // _VEC4

		case 0x8b5a: return setValueM2; // _MAT2
		case 0x8b5b: return setValueM3; // _MAT3
		case 0x8b5c: return setValueM4; // _MAT4

		case 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL
		case 0x8b53: case 0x8b57: return setValueV2i; // _VEC2
		case 0x8b54: case 0x8b58: return setValueV3i; // _VEC3
		case 0x8b55: case 0x8b59: return setValueV4i; // _VEC4

		case 0x1405: return setValueV1ui; // UINT

		case 0x8b5e: // SAMPLER_2D
		case 0x8d66: // SAMPLER_EXTERNAL_OES
		case 0x8dca: // INT_SAMPLER_2D
		case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D
		case 0x8b62: // SAMPLER_2D_SHADOW
			return setValueT1;

		case 0x8b5f: // SAMPLER_3D
		case 0x8dcb: // INT_SAMPLER_3D
		case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D
			return setValueT3D1;

		case 0x8b60: // SAMPLER_CUBE
		case 0x8dcc: // INT_SAMPLER_CUBE
		case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE
		case 0x8dc5: // SAMPLER_CUBE_SHADOW
			return setValueT6;

		case 0x8dc1: // SAMPLER_2D_ARRAY
		case 0x8dcf: // INT_SAMPLER_2D_ARRAY
		case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY
		case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW
			return setValueT2DArray1;

	}

}

// Array of scalars
function setValueV1fArray( gl, v ) {

	gl.uniform1fv( this.addr, v );

}

// Integer / Boolean vectors or arrays thereof (always flat arrays)
function setValueV1iArray( gl, v ) {

	gl.uniform1iv( this.addr, v );

}

function setValueV2iArray( gl, v ) {

	gl.uniform2iv( this.addr, v );

}

function setValueV3iArray( gl, v ) {

	gl.uniform3iv( this.addr, v );

}

function setValueV4iArray( gl, v ) {

	gl.uniform4iv( this.addr, v );

}


// Array of vectors (flat or from THREE classes)

function setValueV2fArray( gl, v ) {

	const data = flatten( v, this.size, 2 );

	gl.uniform2fv( this.addr, data );

}

function setValueV3fArray( gl, v ) {

	const data = flatten( v, this.size, 3 );

	gl.uniform3fv( this.addr, data );

}

function setValueV4fArray( gl, v ) {

	const data = flatten( v, this.size, 4 );

	gl.uniform4fv( this.addr, data );

}

// Array of matrices (flat or from THREE clases)

function setValueM2Array( gl, v ) {

	const data = flatten( v, this.size, 4 );

	gl.uniformMatrix2fv( this.addr, false, data );

}

function setValueM3Array( gl, v ) {

	const data = flatten( v, this.size, 9 );

	gl.uniformMatrix3fv( this.addr, false, data );

}

function setValueM4Array( gl, v ) {

	const data = flatten( v, this.size, 16 );

	gl.uniformMatrix4fv( this.addr, false, data );

}

// Array of textures (2D / Cube)

function setValueT1Array( gl, v, textures ) {

	const n = v.length;

	const units = allocTexUnits( textures, n );

	gl.uniform1iv( this.addr, units );

	for ( let i = 0; i !== n; ++ i ) {

		textures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );

	}

}

function setValueT6Array( gl, v, textures ) {

	const n = v.length;

	const units = allocTexUnits( textures, n );

	gl.uniform1iv( this.addr, units );

	for ( let i = 0; i !== n; ++ i ) {

		textures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );

	}

}

// Helper to pick the right setter for a pure (bottom-level) array

function getPureArraySetter( type ) {

	switch ( type ) {

		case 0x1406: return setValueV1fArray; // FLOAT
		case 0x8b50: return setValueV2fArray; // _VEC2
		case 0x8b51: return setValueV3fArray; // _VEC3
		case 0x8b52: return setValueV4fArray; // _VEC4

		case 0x8b5a: return setValueM2Array; // _MAT2
		case 0x8b5b: return setValueM3Array; // _MAT3
		case 0x8b5c: return setValueM4Array; // _MAT4

		case 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL
		case 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2
		case 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3
		case 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4

		case 0x8b5e: // SAMPLER_2D
		case 0x8d66: // SAMPLER_EXTERNAL_OES
		case 0x8dca: // INT_SAMPLER_2D
		case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D
		case 0x8b62: // SAMPLER_2D_SHADOW
			return setValueT1Array;

		case 0x8b60: // SAMPLER_CUBE
		case 0x8dcc: // INT_SAMPLER_CUBE
		case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE
		case 0x8dc5: // SAMPLER_CUBE_SHADOW
			return setValueT6Array;

	}

}

// --- Uniform Classes ---

function SingleUniform( id, activeInfo, addr ) {

	this.id = id;
	this.addr = addr;
	this.cache = [];
	this.setValue = getSingularSetter( activeInfo.type );

	// this.path = activeInfo.name; // DEBUG

}

function PureArrayUniform( id, activeInfo, addr ) {

	this.id = id;
	this.addr = addr;
	this.cache = [];
	this.size = activeInfo.size;
	this.setValue = getPureArraySetter( activeInfo.type );

	// this.path = activeInfo.name; // DEBUG

}

PureArrayUniform.prototype.updateCache = function ( data ) {

	const cache = this.cache;

	if ( data instanceof Float32Array && cache.length !== data.length ) {

		this.cache = new Float32Array( data.length );

	}

	copyArray( cache, data );

};

function StructuredUniform( id ) {

	this.id = id;

	this.seq = [];
	this.map = {};

}

StructuredUniform.prototype.setValue = function ( gl, value, textures ) {

	const seq = this.seq;

	for ( let i = 0, n = seq.length; i !== n; ++ i ) {

		const u = seq[ i ];
		u.setValue( gl, value[ u.id ], textures );

	}

};

// --- Top-level ---

// Parser - builds up the property tree from the path strings

const RePathPart = /(\w+)(\])?(\[|\.)?/g;

// extracts
// 	- the identifier (member name or array index)
//  - followed by an optional right bracket (found when array index)
//  - followed by an optional left bracket or dot (type of subscript)
//
// Note: These portions can be read in a non-overlapping fashion and
// allow straightforward parsing of the hierarchy that WebGL encodes
// in the uniform names.

function addUniform( container, uniformObject ) {

	container.seq.push( uniformObject );
	container.map[ uniformObject.id ] = uniformObject;

}

function parseUniform( activeInfo, addr, container ) {

	const path = activeInfo.name,
		pathLength = path.length;

	// reset RegExp object, because of the early exit of a previous run
	RePathPart.lastIndex = 0;

	while ( true ) {

		const match = RePathPart.exec( path ),
			matchEnd = RePathPart.lastIndex;

		let id = match[ 1 ];
		const idIsIndex = match[ 2 ] === ']',
			subscript = match[ 3 ];

		if ( idIsIndex ) id = id | 0; // convert to integer

		if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {

			// bare name or "pure" bottom-level array "[0]" suffix

			addUniform( container, subscript === undefined ?
				new SingleUniform( id, activeInfo, addr ) :
				new PureArrayUniform( id, activeInfo, addr ) );

			break;

		} else {

			// step into inner node / create it in case it doesn't exist

			const map = container.map;
			let next = map[ id ];

			if ( next === undefined ) {

				next = new StructuredUniform( id );
				addUniform( container, next );

			}

			container = next;

		}

	}

}

// Root Container

function WebGLUniforms( gl, program ) {

	this.seq = [];
	this.map = {};

	const n = gl.getProgramParameter( program, 35718 );

	for ( let i = 0; i < n; ++ i ) {

		const info = gl.getActiveUniform( program, i ),
			addr = gl.getUniformLocation( program, info.name );

		parseUniform( info, addr, this );

	}

}

WebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {

	const u = this.map[ name ];

	if ( u !== undefined ) u.setValue( gl, value, textures );

};

WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {

	const v = object[ name ];

	if ( v !== undefined ) this.setValue( gl, name, v );

};


// Static interface

WebGLUniforms.upload = function ( gl, seq, values, textures ) {

	for ( let i = 0, n = seq.length; i !== n; ++ i ) {

		const u = seq[ i ],
			v = values[ u.id ];

		if ( v.needsUpdate !== false ) {

			// note: always updating when .needsUpdate is undefined
			u.setValue( gl, v.value, textures );

		}

	}

};

WebGLUniforms.seqWithValue = function ( seq, values ) {

	const r = [];

	for ( let i = 0, n = seq.length; i !== n; ++ i ) {

		const u = seq[ i ];
		if ( u.id in values ) r.push( u );

	}

	return r;

};

function WebGLShader( gl, type, string ) {

	const shader = gl.createShader( type );

	gl.shaderSource( shader, string );
	gl.compileShader( shader );

	return shader;

}

let programIdCount = 0;

function addLineNumbers( string ) {

	const lines = string.split( '\n' );

	for ( let i = 0; i < lines.length; i ++ ) {

		lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];

	}

	return lines.join( '\n' );

}

function getEncodingComponents( encoding ) {

	switch ( encoding ) {

		case LinearEncoding:
			return [ 'Linear', '( value )' ];
		case sRGBEncoding:
			return [ 'sRGB', '( value )' ];
		case RGBEEncoding:
			return [ 'RGBE', '( value )' ];
		case RGBM7Encoding:
			return [ 'RGBM', '( value, 7.0 )' ];
		case RGBM16Encoding:
			return [ 'RGBM', '( value, 16.0 )' ];
		case RGBDEncoding:
			return [ 'RGBD', '( value, 256.0 )' ];
		case GammaEncoding:
			return [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];
		case LogLuvEncoding:
			return [ 'LogLuv', '( value )' ];
		default:
			console.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );
			return [ 'Linear', '( value )' ];

	}

}

function getShaderErrors( gl, shader, type ) {

	const status = gl.getShaderParameter( shader, 35713 );
	const log = gl.getShaderInfoLog( shader ).trim();

	if ( status && log === '' ) return '';

	// --enable-privileged-webgl-extension
	// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );

	const source = gl.getShaderSource( shader );

	return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\n' + log + addLineNumbers( source );

}

function getTexelDecodingFunction( functionName, encoding ) {

	const components = getEncodingComponents( encoding );
	return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';

}

function getTexelEncodingFunction( functionName, encoding ) {

	const components = getEncodingComponents( encoding );
	return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';

}

function getToneMappingFunction( functionName, toneMapping ) {

	let toneMappingName;

	switch ( toneMapping ) {

		case LinearToneMapping:
			toneMappingName = 'Linear';
			break;

		case ReinhardToneMapping:
			toneMappingName = 'Reinhard';
			break;

		case CineonToneMapping:
			toneMappingName = 'OptimizedCineon';
			break;

		case ACESFilmicToneMapping:
			toneMappingName = 'ACESFilmic';
			break;

		case CustomToneMapping:
			toneMappingName = 'Custom';
			break;

		default:
			console.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );
			toneMappingName = 'Linear';

	}

	return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';

}

function generateExtensions( parameters ) {

	const chunks = [
		( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',
		( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',
		( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',
		( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''
	];

	return chunks.filter( filterEmptyLine ).join( '\n' );

}

function generateDefines( defines ) {

	const chunks = [];

	for ( const name in defines ) {

		const value = defines[ name ];

		if ( value === false ) continue;

		chunks.push( '#define ' + name + ' ' + value );

	}

	return chunks.join( '\n' );

}

function fetchAttributeLocations( gl, program ) {

	const attributes = {};

	const n = gl.getProgramParameter( program, 35721 );

	for ( let i = 0; i < n; i ++ ) {

		const info = gl.getActiveAttrib( program, i );
		const name = info.name;

		// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );

		attributes[ name ] = gl.getAttribLocation( program, name );

	}

	return attributes;

}

function filterEmptyLine( string ) {

	return string !== '';

}

function replaceLightNums( string, parameters ) {

	return string
		.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )
		.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )
		.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )
		.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )
		.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )
		.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )
		.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )
		.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );

}

function replaceClippingPlaneNums( string, parameters ) {

	return string
		.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )
		.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );

}

// Resolve Includes

const includePattern = /^[ \t]*#include +<([\w\d./]+)>/gm;

function resolveIncludes( string ) {

	return string.replace( includePattern, includeReplacer );

}

function includeReplacer( match, include ) {

	const string = ShaderChunk[ include ];

	if ( string === undefined ) {

		throw new Error( 'Can not resolve #include <' + include + '>' );

	}

	return resolveIncludes( string );

}

// Unroll Loops

const deprecatedUnrollLoopPattern = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
const unrollLoopPattern = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;

function unrollLoops( string ) {

	return string
		.replace( unrollLoopPattern, loopReplacer )
		.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );

}

function deprecatedLoopReplacer( match, start, end, snippet ) {

	console.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );
	return loopReplacer( match, start, end, snippet );

}

function loopReplacer( match, start, end, snippet ) {

	let string = '';

	for ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {

		string += snippet
			.replace( /\[\s*i\s*\]/g, '[ ' + i + ' ]' )
			.replace( /UNROLLED_LOOP_INDEX/g, i );

	}

	return string;

}

//

function generatePrecision( parameters ) {

	let precisionstring = 'precision ' + parameters.precision + ' float;\nprecision ' + parameters.precision + ' int;';

	if ( parameters.precision === 'highp' ) {

		precisionstring += '\n#define HIGH_PRECISION';

	} else if ( parameters.precision === 'mediump' ) {

		precisionstring += '\n#define MEDIUM_PRECISION';

	} else if ( parameters.precision === 'lowp' ) {

		precisionstring += '\n#define LOW_PRECISION';

	}

	return precisionstring;

}

function generateShadowMapTypeDefine( parameters ) {

	let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';

	if ( parameters.shadowMapType === PCFShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';

	} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';

	} else if ( parameters.shadowMapType === VSMShadowMap ) {

		shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';

	}

	return shadowMapTypeDefine;

}

function generateEnvMapTypeDefine( parameters ) {

	let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';

	if ( parameters.envMap ) {

		switch ( parameters.envMapMode ) {

			case CubeReflectionMapping:
			case CubeRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
				break;

			case CubeUVReflectionMapping:
			case CubeUVRefractionMapping:
				envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';
				break;

		}

	}

	return envMapTypeDefine;

}

function generateEnvMapModeDefine( parameters ) {

	let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';

	if ( parameters.envMap ) {

		switch ( parameters.envMapMode ) {

			case CubeRefractionMapping:
			case CubeUVRefractionMapping:

				envMapModeDefine = 'ENVMAP_MODE_REFRACTION';
				break;

		}

	}

	return envMapModeDefine;

}

function generateEnvMapBlendingDefine( parameters ) {

	let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';

	if ( parameters.envMap ) {

		switch ( parameters.combine ) {

			case MultiplyOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';
				break;

			case MixOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';
				break;

			case AddOperation:
				envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';
				break;

		}

	}

	return envMapBlendingDefine;

}

function WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {

	const gl = renderer.getContext();

	const defines = parameters.defines;

	let vertexShader = parameters.vertexShader;
	let fragmentShader = parameters.fragmentShader;

	const shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );
	const envMapTypeDefine = generateEnvMapTypeDefine( parameters );
	const envMapModeDefine = generateEnvMapModeDefine( parameters );
	const envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );


	const gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;

	const customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );

	const customDefines = generateDefines( defines );

	const program = gl.createProgram();

	let prefixVertex, prefixFragment;
	let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\n' : '';

	if ( parameters.isRawShaderMaterial ) {

		prefixVertex = [

			customDefines

		].filter( filterEmptyLine ).join( '\n' );

		if ( prefixVertex.length > 0 ) {

			prefixVertex += '\n';

		}

		prefixFragment = [

			customExtensions,
			customDefines

		].filter( filterEmptyLine ).join( '\n' );

		if ( prefixFragment.length > 0 ) {

			prefixFragment += '\n';

		}

	} else {

		prefixVertex = [

			generatePrecision( parameters ),

			'#define SHADER_NAME ' + parameters.shaderName,

			customDefines,

			parameters.instancing ? '#define USE_INSTANCING' : '',
			parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',

			parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',

			'#define GAMMA_FACTOR ' + gammaFactorDefine,

			'#define MAX_BONES ' + parameters.maxBones,
			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
			( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',

			parameters.map ? '#define USE_MAP' : '',
			parameters.envMap ? '#define USE_ENVMAP' : '',
			parameters.envMap ? '#define ' + envMapModeDefine : '',
			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
			parameters.aoMap ? '#define USE_AOMAP' : '',
			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
			parameters.normalMap ? '#define USE_NORMALMAP' : '',
			( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',
			( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',

			parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
			parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
			parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
			parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',
			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',
			parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',

			parameters.vertexTangents ? '#define USE_TANGENT' : '',
			parameters.vertexColors ? '#define USE_COLOR' : '',
			parameters.vertexUvs ? '#define USE_UV' : '',
			parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',

			parameters.flatShading ? '#define FLAT_SHADED' : '',

			parameters.skinning ? '#define USE_SKINNING' : '',
			parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',

			parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',
			parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',
			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
			parameters.flipSided ? '#define FLIP_SIDED' : '',

			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

			parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',

			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
			( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

			'uniform mat4 modelMatrix;',
			'uniform mat4 modelViewMatrix;',
			'uniform mat4 projectionMatrix;',
			'uniform mat4 viewMatrix;',
			'uniform mat3 normalMatrix;',
			'uniform vec3 cameraPosition;',
			'uniform bool isOrthographic;',

			'#ifdef USE_INSTANCING',

			'	attribute mat4 instanceMatrix;',

			'#endif',

			'#ifdef USE_INSTANCING_COLOR',

			'	attribute vec3 instanceColor;',

			'#endif',

			'attribute vec3 position;',
			'attribute vec3 normal;',
			'attribute vec2 uv;',

			'#ifdef USE_TANGENT',

			'	attribute vec4 tangent;',

			'#endif',

			'#ifdef USE_COLOR',

			'	attribute vec3 color;',

			'#endif',

			'#ifdef USE_MORPHTARGETS',

			'	attribute vec3 morphTarget0;',
			'	attribute vec3 morphTarget1;',
			'	attribute vec3 morphTarget2;',
			'	attribute vec3 morphTarget3;',

			'	#ifdef USE_MORPHNORMALS',

			'		attribute vec3 morphNormal0;',
			'		attribute vec3 morphNormal1;',
			'		attribute vec3 morphNormal2;',
			'		attribute vec3 morphNormal3;',

			'	#else',

			'		attribute vec3 morphTarget4;',
			'		attribute vec3 morphTarget5;',
			'		attribute vec3 morphTarget6;',
			'		attribute vec3 morphTarget7;',

			'	#endif',

			'#endif',

			'#ifdef USE_SKINNING',

			'	attribute vec4 skinIndex;',
			'	attribute vec4 skinWeight;',

			'#endif',

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

		prefixFragment = [

			customExtensions,

			generatePrecision( parameters ),

			'#define SHADER_NAME ' + parameters.shaderName,

			customDefines,

			parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer

			'#define GAMMA_FACTOR ' + gammaFactorDefine,

			( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
			( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',

			parameters.map ? '#define USE_MAP' : '',
			parameters.matcap ? '#define USE_MATCAP' : '',
			parameters.envMap ? '#define USE_ENVMAP' : '',
			parameters.envMap ? '#define ' + envMapTypeDefine : '',
			parameters.envMap ? '#define ' + envMapModeDefine : '',
			parameters.envMap ? '#define ' + envMapBlendingDefine : '',
			parameters.lightMap ? '#define USE_LIGHTMAP' : '',
			parameters.aoMap ? '#define USE_AOMAP' : '',
			parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
			parameters.bumpMap ? '#define USE_BUMPMAP' : '',
			parameters.normalMap ? '#define USE_NORMALMAP' : '',
			( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',
			( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',
			parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
			parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
			parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
			parameters.specularMap ? '#define USE_SPECULARMAP' : '',
			parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
			parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
			parameters.alphaMap ? '#define USE_ALPHAMAP' : '',

			parameters.sheen ? '#define USE_SHEEN' : '',
			parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',

			parameters.vertexTangents ? '#define USE_TANGENT' : '',
			parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',
			parameters.vertexUvs ? '#define USE_UV' : '',
			parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',

			parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',

			parameters.flatShading ? '#define FLAT_SHADED' : '',

			parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
			parameters.flipSided ? '#define FLIP_SIDED' : '',

			parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
			parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

			parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',

			parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',

			parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
			( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

			( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',

			'uniform mat4 viewMatrix;',
			'uniform vec3 cameraPosition;',
			'uniform bool isOrthographic;',

			( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',
			( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below
			( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',

			parameters.dithering ? '#define DITHERING' : '',

			ShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below
			parameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',
			parameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',
			parameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',
			parameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',
			parameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',
			getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),

			parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',

			'\n'

		].filter( filterEmptyLine ).join( '\n' );

	}

	vertexShader = resolveIncludes( vertexShader );
	vertexShader = replaceLightNums( vertexShader, parameters );
	vertexShader = replaceClippingPlaneNums( vertexShader, parameters );

	fragmentShader = resolveIncludes( fragmentShader );
	fragmentShader = replaceLightNums( fragmentShader, parameters );
	fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );

	vertexShader = unrollLoops( vertexShader );
	fragmentShader = unrollLoops( fragmentShader );

	if ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {

		// GLSL 3.0 conversion for built-in materials and ShaderMaterial

		versionString = '#version 300 es\n';

		prefixVertex = [
			'#define attribute in',
			'#define varying out',
			'#define texture2D texture'
		].join( '\n' ) + '\n' + prefixVertex;

		prefixFragment = [
			'#define varying in',
			( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',
			( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',
			'#define gl_FragDepthEXT gl_FragDepth',
			'#define texture2D texture',
			'#define textureCube texture',
			'#define texture2DProj textureProj',
			'#define texture2DLodEXT textureLod',
			'#define texture2DProjLodEXT textureProjLod',
			'#define textureCubeLodEXT textureLod',
			'#define texture2DGradEXT textureGrad',
			'#define texture2DProjGradEXT textureProjGrad',
			'#define textureCubeGradEXT textureGrad'
		].join( '\n' ) + '\n' + prefixFragment;

	}

	const vertexGlsl = versionString + prefixVertex + vertexShader;
	const fragmentGlsl = versionString + prefixFragment + fragmentShader;

	// console.log( '*VERTEX*', vertexGlsl );
	// console.log( '*FRAGMENT*', fragmentGlsl );

	const glVertexShader = WebGLShader( gl, 35633, vertexGlsl );
	const glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );

	gl.attachShader( program, glVertexShader );
	gl.attachShader( program, glFragmentShader );

	// Force a particular attribute to index 0.

	if ( parameters.index0AttributeName !== undefined ) {

		gl.bindAttribLocation( program, 0, parameters.index0AttributeName );

	} else if ( parameters.morphTargets === true ) {

		// programs with morphTargets displace position out of attribute 0
		gl.bindAttribLocation( program, 0, 'position' );

	}

	gl.linkProgram( program );

	// check for link errors
	if ( renderer.debug.checkShaderErrors ) {

		const programLog = gl.getProgramInfoLog( program ).trim();
		const vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();
		const fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();

		let runnable = true;
		let haveDiagnostics = true;

		if ( gl.getProgramParameter( program, 35714 ) === false ) {

			runnable = false;

			const vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );
			const fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );

			console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );

		} else if ( programLog !== '' ) {

			console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );

		} else if ( vertexLog === '' || fragmentLog === '' ) {

			haveDiagnostics = false;

		}

		if ( haveDiagnostics ) {

			this.diagnostics = {

				runnable: runnable,

				programLog: programLog,

				vertexShader: {

					log: vertexLog,
					prefix: prefixVertex

				},

				fragmentShader: {

					log: fragmentLog,
					prefix: prefixFragment

				}

			};

		}

	}

	// Clean up

	// Crashes in iOS9 and iOS10. #18402
	// gl.detachShader( program, glVertexShader );
	// gl.detachShader( program, glFragmentShader );

	gl.deleteShader( glVertexShader );
	gl.deleteShader( glFragmentShader );

	// set up caching for uniform locations

	let cachedUniforms;

	this.getUniforms = function () {

		if ( cachedUniforms === undefined ) {

			cachedUniforms = new WebGLUniforms( gl, program );

		}

		return cachedUniforms;

	};

	// set up caching for attribute locations

	let cachedAttributes;

	this.getAttributes = function () {

		if ( cachedAttributes === undefined ) {

			cachedAttributes = fetchAttributeLocations( gl, program );

		}

		return cachedAttributes;

	};

	// free resource

	this.destroy = function () {

		bindingStates.releaseStatesOfProgram( this );

		gl.deleteProgram( program );
		this.program = undefined;

	};

	//

	this.name = parameters.shaderName;
	this.id = programIdCount ++;
	this.cacheKey = cacheKey;
	this.usedTimes = 1;
	this.program = program;
	this.vertexShader = glVertexShader;
	this.fragmentShader = glFragmentShader;

	return this;

}

function WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {

	const programs = [];

	const isWebGL2 = capabilities.isWebGL2;
	const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;
	const floatVertexTextures = capabilities.floatVertexTextures;
	const maxVertexUniforms = capabilities.maxVertexUniforms;
	const vertexTextures = capabilities.vertexTextures;

	let precision = capabilities.precision;

	const shaderIDs = {
		MeshDepthMaterial: 'depth',
		MeshDistanceMaterial: 'distanceRGBA',
		MeshNormalMaterial: 'normal',
		MeshBasicMaterial: 'basic',
		MeshLambertMaterial: 'lambert',
		MeshPhongMaterial: 'phong',
		MeshToonMaterial: 'toon',
		MeshStandardMaterial: 'physical',
		MeshPhysicalMaterial: 'physical',
		MeshMatcapMaterial: 'matcap',
		LineBasicMaterial: 'basic',
		LineDashedMaterial: 'dashed',
		PointsMaterial: 'points',
		ShadowMaterial: 'shadow',
		SpriteMaterial: 'sprite'
	};

	const parameterNames = [
		'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',
		'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',
		'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',
		'roughnessMap', 'metalnessMap', 'gradientMap',
		'alphaMap', 'combine', 'vertexColors', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',
		'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',
		'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals',
		'maxMorphTargets', 'maxMorphNormals', 'premultipliedAlpha',
		'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',
		'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',
		'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',
		'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',
		'sheen', 'transmissionMap'
	];

	function getMaxBones( object ) {

		const skeleton = object.skeleton;
		const bones = skeleton.bones;

		if ( floatVertexTextures ) {

			return 1024;

		} else {

			// default for when object is not specified
			// ( for example when prebuilding shader to be used with multiple objects )
			//
			//  - leave some extra space for other uniforms
			//  - limit here is ANGLE's 254 max uniform vectors
			//    (up to 54 should be safe)

			const nVertexUniforms = maxVertexUniforms;
			const nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );

			const maxBones = Math.min( nVertexMatrices, bones.length );

			if ( maxBones < bones.length ) {

				console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );
				return 0;

			}

			return maxBones;

		}

	}

	function getTextureEncodingFromMap( map ) {

		let encoding;

		if ( map && map.isTexture ) {

			encoding = map.encoding;

		} else if ( map && map.isWebGLRenderTarget ) {

			console.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\'t use render targets as textures. Use their .texture property instead.' );
			encoding = map.texture.encoding;

		} else {

			encoding = LinearEncoding;

		}

		return encoding;

	}

	function getParameters( material, lights, shadows, scene, object ) {

		const fog = scene.fog;
		const environment = material.isMeshStandardMaterial ? scene.environment : null;

		const envMap = cubemaps.get( material.envMap || environment );

		const shaderID = shaderIDs[ material.type ];

		// heuristics to create shader parameters according to lights in the scene
		// (not to blow over maxLights budget)

		const maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;

		if ( material.precision !== null ) {

			precision = capabilities.getMaxPrecision( material.precision );

			if ( precision !== material.precision ) {

				console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );

			}

		}

		let vertexShader, fragmentShader;

		if ( shaderID ) {

			const shader = ShaderLib[ shaderID ];

			vertexShader = shader.vertexShader;
			fragmentShader = shader.fragmentShader;

		} else {

			vertexShader = material.vertexShader;
			fragmentShader = material.fragmentShader;

		}

		const currentRenderTarget = renderer.getRenderTarget();

		const parameters = {

			isWebGL2: isWebGL2,

			shaderID: shaderID,
			shaderName: material.type,

			vertexShader: vertexShader,
			fragmentShader: fragmentShader,
			defines: material.defines,

			isRawShaderMaterial: material.isRawShaderMaterial === true,
			glslVersion: material.glslVersion,

			precision: precision,

			instancing: object.isInstancedMesh === true,
			instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,

			supportsVertexTextures: vertexTextures,
			outputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,
			map: !! material.map,
			mapEncoding: getTextureEncodingFromMap( material.map ),
			matcap: !! material.matcap,
			matcapEncoding: getTextureEncodingFromMap( material.matcap ),
			envMap: !! envMap,
			envMapMode: envMap && envMap.mapping,
			envMapEncoding: getTextureEncodingFromMap( envMap ),
			envMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),
			lightMap: !! material.lightMap,
			lightMapEncoding: getTextureEncodingFromMap( material.lightMap ),
			aoMap: !! material.aoMap,
			emissiveMap: !! material.emissiveMap,
			emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),
			bumpMap: !! material.bumpMap,
			normalMap: !! material.normalMap,
			objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,
			tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,
			clearcoatMap: !! material.clearcoatMap,
			clearcoatRoughnessMap: !! material.clearcoatRoughnessMap,
			clearcoatNormalMap: !! material.clearcoatNormalMap,
			displacementMap: !! material.displacementMap,
			roughnessMap: !! material.roughnessMap,
			metalnessMap: !! material.metalnessMap,
			specularMap: !! material.specularMap,
			alphaMap: !! material.alphaMap,

			gradientMap: !! material.gradientMap,

			sheen: !! material.sheen,

			transmissionMap: !! material.transmissionMap,

			combine: material.combine,

			vertexTangents: ( material.normalMap && material.vertexTangents ),
			vertexColors: material.vertexColors,
			vertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,
			uvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,

			fog: !! fog,
			useFog: material.fog,
			fogExp2: ( fog && fog.isFogExp2 ),

			flatShading: !! material.flatShading,

			sizeAttenuation: material.sizeAttenuation,
			logarithmicDepthBuffer: logarithmicDepthBuffer,

			skinning: material.skinning && maxBones > 0,
			maxBones: maxBones,
			useVertexTexture: floatVertexTextures,

			morphTargets: material.morphTargets,
			morphNormals: material.morphNormals,
			maxMorphTargets: renderer.maxMorphTargets,
			maxMorphNormals: renderer.maxMorphNormals,

			numDirLights: lights.directional.length,
			numPointLights: lights.point.length,
			numSpotLights: lights.spot.length,
			numRectAreaLights: lights.rectArea.length,
			numHemiLights: lights.hemi.length,

			numDirLightShadows: lights.directionalShadowMap.length,
			numPointLightShadows: lights.pointShadowMap.length,
			numSpotLightShadows: lights.spotShadowMap.length,

			numClippingPlanes: clipping.numPlanes,
			numClipIntersection: clipping.numIntersection,

			dithering: material.dithering,

			shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,
			shadowMapType: renderer.shadowMap.type,

			toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,
			physicallyCorrectLights: renderer.physicallyCorrectLights,

			premultipliedAlpha: material.premultipliedAlpha,

			alphaTest: material.alphaTest,
			doubleSided: material.side === DoubleSide,
			flipSided: material.side === BackSide,

			depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,

			index0AttributeName: material.index0AttributeName,

			extensionDerivatives: material.extensions && material.extensions.derivatives,
			extensionFragDepth: material.extensions && material.extensions.fragDepth,
			extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,
			extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,

			rendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),
			rendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),
			rendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),

			customProgramCacheKey: material.customProgramCacheKey()

		};

		return parameters;

	}

	function getProgramCacheKey( parameters ) {

		const array = [];

		if ( parameters.shaderID ) {

			array.push( parameters.shaderID );

		} else {

			array.push( parameters.fragmentShader );
			array.push( parameters.vertexShader );

		}

		if ( parameters.defines !== undefined ) {

			for ( const name in parameters.defines ) {

				array.push( name );
				array.push( parameters.defines[ name ] );

			}

		}

		if ( parameters.isRawShaderMaterial === false ) {

			for ( let i = 0; i < parameterNames.length; i ++ ) {

				array.push( parameters[ parameterNames[ i ] ] );

			}

			array.push( renderer.outputEncoding );
			array.push( renderer.gammaFactor );

		}

		array.push( parameters.customProgramCacheKey );

		return array.join();

	}

	function getUniforms( material ) {

		const shaderID = shaderIDs[ material.type ];
		let uniforms;

		if ( shaderID ) {

			const shader = ShaderLib[ shaderID ];
			uniforms = UniformsUtils.clone( shader.uniforms );

		} else {

			uniforms = material.uniforms;

		}

		return uniforms;

	}

	function acquireProgram( parameters, cacheKey ) {

		let program;

		// Check if code has been already compiled
		for ( let p = 0, pl = programs.length; p < pl; p ++ ) {

			const preexistingProgram = programs[ p ];

			if ( preexistingProgram.cacheKey === cacheKey ) {

				program = preexistingProgram;
				++ program.usedTimes;

				break;

			}

		}

		if ( program === undefined ) {

			program = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );
			programs.push( program );

		}

		return program;

	}

	function releaseProgram( program ) {

		if ( -- program.usedTimes === 0 ) {

			// Remove from unordered set
			const i = programs.indexOf( program );
			programs[ i ] = programs[ programs.length - 1 ];
			programs.pop();

			// Free WebGL resources
			program.destroy();

		}

	}

	return {
		getParameters: getParameters,
		getProgramCacheKey: getProgramCacheKey,
		getUniforms: getUniforms,
		acquireProgram: acquireProgram,
		releaseProgram: releaseProgram,
		// Exposed for resource monitoring & error feedback via renderer.info:
		programs: programs
	};

}

function WebGLProperties() {

	let properties = new WeakMap();

	function get( object ) {

		let map = properties.get( object );

		if ( map === undefined ) {

			map = {};
			properties.set( object, map );

		}

		return map;

	}

	function remove( object ) {

		properties.delete( object );

	}

	function update( object, key, value ) {

		properties.get( object )[ key ] = value;

	}

	function dispose() {

		properties = new WeakMap();

	}

	return {
		get: get,
		remove: remove,
		update: update,
		dispose: dispose
	};

}

function painterSortStable( a, b ) {

	if ( a.groupOrder !== b.groupOrder ) {

		return a.groupOrder - b.groupOrder;

	} else if ( a.renderOrder !== b.renderOrder ) {

		return a.renderOrder - b.renderOrder;

	} else if ( a.program !== b.program ) {

		return a.program.id - b.program.id;

	} else if ( a.material.id !== b.material.id ) {

		return a.material.id - b.material.id;

	} else if ( a.z !== b.z ) {

		return a.z - b.z;

	} else {

		return a.id - b.id;

	}

}

function reversePainterSortStable( a, b ) {

	if ( a.groupOrder !== b.groupOrder ) {

		return a.groupOrder - b.groupOrder;

	} else if ( a.renderOrder !== b.renderOrder ) {

		return a.renderOrder - b.renderOrder;

	} else if ( a.z !== b.z ) {

		return b.z - a.z;

	} else {

		return a.id - b.id;

	}

}


function WebGLRenderList( properties ) {

	const renderItems = [];
	let renderItemsIndex = 0;

	const opaque = [];
	const transparent = [];

	const defaultProgram = { id: - 1 };

	function init() {

		renderItemsIndex = 0;

		opaque.length = 0;
		transparent.length = 0;

	}

	function getNextRenderItem( object, geometry, material, groupOrder, z, group ) {

		let renderItem = renderItems[ renderItemsIndex ];
		const materialProperties = properties.get( material );

		if ( renderItem === undefined ) {

			renderItem = {
				id: object.id,
				object: object,
				geometry: geometry,
				material: material,
				program: materialProperties.program || defaultProgram,
				groupOrder: groupOrder,
				renderOrder: object.renderOrder,
				z: z,
				group: group
			};

			renderItems[ renderItemsIndex ] = renderItem;

		} else {

			renderItem.id = object.id;
			renderItem.object = object;
			renderItem.geometry = geometry;
			renderItem.material = material;
			renderItem.program = materialProperties.program || defaultProgram;
			renderItem.groupOrder = groupOrder;
			renderItem.renderOrder = object.renderOrder;
			renderItem.z = z;
			renderItem.group = group;

		}

		renderItemsIndex ++;

		return renderItem;

	}

	function push( object, geometry, material, groupOrder, z, group ) {

		const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );

		( material.transparent === true ? transparent : opaque ).push( renderItem );

	}

	function unshift( object, geometry, material, groupOrder, z, group ) {

		const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );

		( material.transparent === true ? transparent : opaque ).unshift( renderItem );

	}

	function sort( customOpaqueSort, customTransparentSort ) {

		if ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );
		if ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );

	}

	function finish() {

		// Clear references from inactive renderItems in the list

		for ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {

			const renderItem = renderItems[ i ];

			if ( renderItem.id === null ) break;

			renderItem.id = null;
			renderItem.object = null;
			renderItem.geometry = null;
			renderItem.material = null;
			renderItem.program = null;
			renderItem.group = null;

		}

	}

	return {

		opaque: opaque,
		transparent: transparent,

		init: init,
		push: push,
		unshift: unshift,
		finish: finish,

		sort: sort
	};

}

function WebGLRenderLists( properties ) {

	let lists = new WeakMap();

	function get( scene, renderCallDepth ) {

		let list;

		if ( lists.has( scene ) === false ) {

			list = new WebGLRenderList( properties );
			lists.set( scene, [ list ] );

		} else {

			if ( renderCallDepth >= lists.get( scene ).length ) {

				list = new WebGLRenderList( properties );
				lists.get( scene ).push( list );

			} else {

				list = lists.get( scene )[ renderCallDepth ];

			}

		}

		return list;

	}

	function dispose() {

		lists = new WeakMap();

	}

	return {
		get: get,
		dispose: dispose
	};

}

function UniformsCache() {

	const lights = {};

	return {

		get: function ( light ) {

			if ( lights[ light.id ] !== undefined ) {

				return lights[ light.id ];

			}

			let uniforms;

			switch ( light.type ) {

				case 'DirectionalLight':
					uniforms = {
						direction: new Vector3(),
						color: new Color()
					};
					break;

				case 'SpotLight':
					uniforms = {
						position: new Vector3(),
						direction: new Vector3(),
						color: new Color(),
						distance: 0,
						coneCos: 0,
						penumbraCos: 0,
						decay: 0
					};
					break;

				case 'PointLight':
					uniforms = {
						position: new Vector3(),
						color: new Color(),
						distance: 0,
						decay: 0
					};
					break;

				case 'HemisphereLight':
					uniforms = {
						direction: new Vector3(),
						skyColor: new Color(),
						groundColor: new Color()
					};
					break;

				case 'RectAreaLight':
					uniforms = {
						color: new Color(),
						position: new Vector3(),
						halfWidth: new Vector3(),
						halfHeight: new Vector3()
					};
					break;

			}

			lights[ light.id ] = uniforms;

			return uniforms;

		}

	};

}

function ShadowUniformsCache() {

	const lights = {};

	return {

		get: function ( light ) {

			if ( lights[ light.id ] !== undefined ) {

				return lights[ light.id ];

			}

			let uniforms;

			switch ( light.type ) {

				case 'DirectionalLight':
					uniforms = {
						shadowBias: 0,
						shadowNormalBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'SpotLight':
					uniforms = {
						shadowBias: 0,
						shadowNormalBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2()
					};
					break;

				case 'PointLight':
					uniforms = {
						shadowBias: 0,
						shadowNormalBias: 0,
						shadowRadius: 1,
						shadowMapSize: new Vector2(),
						shadowCameraNear: 1,
						shadowCameraFar: 1000
					};
					break;

				// TODO (abelnation): set RectAreaLight shadow uniforms

			}

			lights[ light.id ] = uniforms;

			return uniforms;

		}

	};

}



let nextVersion = 0;

function shadowCastingLightsFirst( lightA, lightB ) {

	return ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );

}

function WebGLLights( extensions, capabilities ) {

	const cache = new UniformsCache();

	const shadowCache = ShadowUniformsCache();

	const state = {

		version: 0,

		hash: {
			directionalLength: - 1,
			pointLength: - 1,
			spotLength: - 1,
			rectAreaLength: - 1,
			hemiLength: - 1,

			numDirectionalShadows: - 1,
			numPointShadows: - 1,
			numSpotShadows: - 1
		},

		ambient: [ 0, 0, 0 ],
		probe: [],
		directional: [],
		directionalShadow: [],
		directionalShadowMap: [],
		directionalShadowMatrix: [],
		spot: [],
		spotShadow: [],
		spotShadowMap: [],
		spotShadowMatrix: [],
		rectArea: [],
		rectAreaLTC1: null,
		rectAreaLTC2: null,
		point: [],
		pointShadow: [],
		pointShadowMap: [],
		pointShadowMatrix: [],
		hemi: []

	};

	for ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );

	const vector3 = new Vector3();
	const matrix4 = new Matrix4();
	const matrix42 = new Matrix4();

	function setup( lights ) {

		let r = 0, g = 0, b = 0;

		for ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );

		let directionalLength = 0;
		let pointLength = 0;
		let spotLength = 0;
		let rectAreaLength = 0;
		let hemiLength = 0;

		let numDirectionalShadows = 0;
		let numPointShadows = 0;
		let numSpotShadows = 0;

		lights.sort( shadowCastingLightsFirst );

		for ( let i = 0, l = lights.length; i < l; i ++ ) {

			const light = lights[ i ];

			const color = light.color;
			const intensity = light.intensity;
			const distance = light.distance;

			const shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;

			if ( light.isAmbientLight ) {

				r += color.r * intensity;
				g += color.g * intensity;
				b += color.b * intensity;

			} else if ( light.isLightProbe ) {

				for ( let j = 0; j < 9; j ++ ) {

					state.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );

				}

			} else if ( light.isDirectionalLight ) {

				const uniforms = cache.get( light );

				uniforms.color.copy( light.color ).multiplyScalar( light.intensity );

				if ( light.castShadow ) {

					const shadow = light.shadow;

					const shadowUniforms = shadowCache.get( light );

					shadowUniforms.shadowBias = shadow.bias;
					shadowUniforms.shadowNormalBias = shadow.normalBias;
					shadowUniforms.shadowRadius = shadow.radius;
					shadowUniforms.shadowMapSize = shadow.mapSize;

					state.directionalShadow[ directionalLength ] = shadowUniforms;
					state.directionalShadowMap[ directionalLength ] = shadowMap;
					state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;

					numDirectionalShadows ++;

				}

				state.directional[ directionalLength ] = uniforms;

				directionalLength ++;

			} else if ( light.isSpotLight ) {

				const uniforms = cache.get( light );

				uniforms.position.setFromMatrixPosition( light.matrixWorld );

				uniforms.color.copy( color ).multiplyScalar( intensity );
				uniforms.distance = distance;

				uniforms.coneCos = Math.cos( light.angle );
				uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );
				uniforms.decay = light.decay;

				if ( light.castShadow ) {

					const shadow = light.shadow;

					const shadowUniforms = shadowCache.get( light );

					shadowUniforms.shadowBias = shadow.bias;
					shadowUniforms.shadowNormalBias = shadow.normalBias;
					shadowUniforms.shadowRadius = shadow.radius;
					shadowUniforms.shadowMapSize = shadow.mapSize;

					state.spotShadow[ spotLength ] = shadowUniforms;
					state.spotShadowMap[ spotLength ] = shadowMap;
					state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;

					numSpotShadows ++;

				}

				state.spot[ spotLength ] = uniforms;

				spotLength ++;

			} else if ( light.isRectAreaLight ) {

				const uniforms = cache.get( light );

				// (a) intensity is the total visible light emitted
				//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );

				// (b) intensity is the brightness of the light
				uniforms.color.copy( color ).multiplyScalar( intensity );

				uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );
				uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );

				state.rectArea[ rectAreaLength ] = uniforms;

				rectAreaLength ++;

			} else if ( light.isPointLight ) {

				const uniforms = cache.get( light );

				uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
				uniforms.distance = light.distance;
				uniforms.decay = light.decay;

				if ( light.castShadow ) {

					const shadow = light.shadow;

					const shadowUniforms = shadowCache.get( light );

					shadowUniforms.shadowBias = shadow.bias;
					shadowUniforms.shadowNormalBias = shadow.normalBias;
					shadowUniforms.shadowRadius = shadow.radius;
					shadowUniforms.shadowMapSize = shadow.mapSize;
					shadowUniforms.shadowCameraNear = shadow.camera.near;
					shadowUniforms.shadowCameraFar = shadow.camera.far;

					state.pointShadow[ pointLength ] = shadowUniforms;
					state.pointShadowMap[ pointLength ] = shadowMap;
					state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;

					numPointShadows ++;

				}

				state.point[ pointLength ] = uniforms;

				pointLength ++;

			} else if ( light.isHemisphereLight ) {

				const uniforms = cache.get( light );

				uniforms.skyColor.copy( light.color ).multiplyScalar( intensity );
				uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );

				state.hemi[ hemiLength ] = uniforms;

				hemiLength ++;

			}

		}

		if ( rectAreaLength > 0 ) {

			if ( capabilities.isWebGL2 ) {

				// WebGL 2

				state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;
				state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;

			} else {

				// WebGL 1

				if ( extensions.has( 'OES_texture_float_linear' ) === true ) {

					state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;
					state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;

				} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {

					state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;
					state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;

				} else {

					console.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );

				}

			}

		}

		state.ambient[ 0 ] = r;
		state.ambient[ 1 ] = g;
		state.ambient[ 2 ] = b;

		const hash = state.hash;

		if ( hash.directionalLength !== directionalLength ||
			hash.pointLength !== pointLength ||
			hash.spotLength !== spotLength ||
			hash.rectAreaLength !== rectAreaLength ||
			hash.hemiLength !== hemiLength ||
			hash.numDirectionalShadows !== numDirectionalShadows ||
			hash.numPointShadows !== numPointShadows ||
			hash.numSpotShadows !== numSpotShadows ) {

			state.directional.length = directionalLength;
			state.spot.length = spotLength;
			state.rectArea.length = rectAreaLength;
			state.point.length = pointLength;
			state.hemi.length = hemiLength;

			state.directionalShadow.length = numDirectionalShadows;
			state.directionalShadowMap.length = numDirectionalShadows;
			state.pointShadow.length = numPointShadows;
			state.pointShadowMap.length = numPointShadows;
			state.spotShadow.length = numSpotShadows;
			state.spotShadowMap.length = numSpotShadows;
			state.directionalShadowMatrix.length = numDirectionalShadows;
			state.pointShadowMatrix.length = numPointShadows;
			state.spotShadowMatrix.length = numSpotShadows;

			hash.directionalLength = directionalLength;
			hash.pointLength = pointLength;
			hash.spotLength = spotLength;
			hash.rectAreaLength = rectAreaLength;
			hash.hemiLength = hemiLength;

			hash.numDirectionalShadows = numDirectionalShadows;
			hash.numPointShadows = numPointShadows;
			hash.numSpotShadows = numSpotShadows;

			state.version = nextVersion ++;

		}

	}

	function setupView( lights, camera ) {

		let directionalLength = 0;
		let pointLength = 0;
		let spotLength = 0;
		let rectAreaLength = 0;
		let hemiLength = 0;

		const viewMatrix = camera.matrixWorldInverse;

		for ( let i = 0, l = lights.length; i < l; i ++ ) {

			const light = lights[ i ];

			if ( light.isDirectionalLight ) {

				const uniforms = state.directional[ directionalLength ];

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				vector3.setFromMatrixPosition( light.target.matrixWorld );
				uniforms.direction.sub( vector3 );
				uniforms.direction.transformDirection( viewMatrix );

				directionalLength ++;

			} else if ( light.isSpotLight ) {

				const uniforms = state.spot[ spotLength ];

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				vector3.setFromMatrixPosition( light.target.matrixWorld );
				uniforms.direction.sub( vector3 );
				uniforms.direction.transformDirection( viewMatrix );

				spotLength ++;

			} else if ( light.isRectAreaLight ) {

				const uniforms = state.rectArea[ rectAreaLength ];

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				// extract local rotation of light to derive width/height half vectors
				matrix42.identity();
				matrix4.copy( light.matrixWorld );
				matrix4.premultiply( viewMatrix );
				matrix42.extractRotation( matrix4 );

				uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );
				uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );

				uniforms.halfWidth.applyMatrix4( matrix42 );
				uniforms.halfHeight.applyMatrix4( matrix42 );

				rectAreaLength ++;

			} else if ( light.isPointLight ) {

				const uniforms = state.point[ pointLength ];

				uniforms.position.setFromMatrixPosition( light.matrixWorld );
				uniforms.position.applyMatrix4( viewMatrix );

				pointLength ++;

			} else if ( light.isHemisphereLight ) {

				const uniforms = state.hemi[ hemiLength ];

				uniforms.direction.setFromMatrixPosition( light.matrixWorld );
				uniforms.direction.transformDirection( viewMatrix );
				uniforms.direction.normalize();

				hemiLength ++;

			}

		}

	}

	return {
		setup: setup,
		setupView: setupView,
		state: state
	};

}

function WebGLRenderState( extensions, capabilities ) {

	const lights = new WebGLLights( extensions, capabilities );

	const lightsArray = [];
	const shadowsArray = [];

	function init() {

		lightsArray.length = 0;
		shadowsArray.length = 0;

	}

	function pushLight( light ) {

		lightsArray.push( light );

	}

	function pushShadow( shadowLight ) {

		shadowsArray.push( shadowLight );

	}

	function setupLights() {

		lights.setup( lightsArray );

	}

	function setupLightsView( camera ) {

		lights.setupView( lightsArray, camera );

	}

	const state = {
		lightsArray: lightsArray,
		shadowsArray: shadowsArray,

		lights: lights
	};

	return {
		init: init,
		state: state,
		setupLights: setupLights,
		setupLightsView: setupLightsView,

		pushLight: pushLight,
		pushShadow: pushShadow
	};

}

function WebGLRenderStates( extensions, capabilities ) {

	let renderStates = new WeakMap();

	function get( scene, renderCallDepth = 0 ) {

		let renderState;

		if ( renderStates.has( scene ) === false ) {

			renderState = new WebGLRenderState( extensions, capabilities );
			renderStates.set( scene, [ renderState ] );

		} else {

			if ( renderCallDepth >= renderStates.get( scene ).length ) {

				renderState = new WebGLRenderState( extensions, capabilities );
				renderStates.get( scene ).push( renderState );

			} else {

				renderState = renderStates.get( scene )[ renderCallDepth ];

			}

		}

		return renderState;

	}

	function dispose() {

		renderStates = new WeakMap();

	}

	return {
		get: get,
		dispose: dispose
	};

}

/**
 * parameters = {
 *
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 * }
 */

class MeshDepthMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshDepthMaterial';

		this.depthPacking = BasicDepthPacking;

		this.skinning = false;
		this.morphTargets = false;

		this.map = null;

		this.alphaMap = null;

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.depthPacking = source.depthPacking;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		return this;

	}

}

MeshDepthMaterial.prototype.isMeshDepthMaterial = true;

/**
 * parameters = {
 *
 *  referencePosition: <float>,
 *  nearDistance: <float>,
 *  farDistance: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>
 *
 * }
 */

class MeshDistanceMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshDistanceMaterial';

		this.referencePosition = new Vector3();
		this.nearDistance = 1;
		this.farDistance = 1000;

		this.skinning = false;
		this.morphTargets = false;

		this.map = null;

		this.alphaMap = null;

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.fog = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.referencePosition.copy( source.referencePosition );
		this.nearDistance = source.nearDistance;
		this.farDistance = source.farDistance;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		return this;

	}

}

MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;

var vsm_frag = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";

var vsm_vert = "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";

function WebGLShadowMap( _renderer, _objects, maxTextureSize ) {

	let _frustum = new Frustum();

	const _shadowMapSize = new Vector2(),
		_viewportSize = new Vector2(),

		_viewport = new Vector4(),

		_depthMaterials = [],
		_distanceMaterials = [],

		_materialCache = {};

	const shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };

	const shadowMaterialVertical = new ShaderMaterial( {

		defines: {
			SAMPLE_RATE: 2.0 / 8.0,
			HALF_SAMPLE_RATE: 1.0 / 8.0
		},

		uniforms: {
			shadow_pass: { value: null },
			resolution: { value: new Vector2() },
			radius: { value: 4.0 }
		},

		vertexShader: vsm_vert,

		fragmentShader: vsm_frag

	} );

	const shadowMaterialHorizontal = shadowMaterialVertical.clone();
	shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;

	const fullScreenTri = new BufferGeometry();
	fullScreenTri.setAttribute(
		'position',
		new BufferAttribute(
			new Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),
			3
		)
	);

	const fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );

	const scope = this;

	this.enabled = false;

	this.autoUpdate = true;
	this.needsUpdate = false;

	this.type = PCFShadowMap;

	this.render = function ( lights, scene, camera ) {

		if ( scope.enabled === false ) return;
		if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;

		if ( lights.length === 0 ) return;

		const currentRenderTarget = _renderer.getRenderTarget();
		const activeCubeFace = _renderer.getActiveCubeFace();
		const activeMipmapLevel = _renderer.getActiveMipmapLevel();

		const _state = _renderer.state;

		// Set GL state for depth map.
		_state.setBlending( NoBlending );
		_state.buffers.color.setClear( 1, 1, 1, 1 );
		_state.buffers.depth.setTest( true );
		_state.setScissorTest( false );

		// render depth map

		for ( let i = 0, il = lights.length; i < il; i ++ ) {

			const light = lights[ i ];
			const shadow = light.shadow;

			if ( shadow === undefined ) {

				console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );
				continue;

			}

			if ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;

			_shadowMapSize.copy( shadow.mapSize );

			const shadowFrameExtents = shadow.getFrameExtents();

			_shadowMapSize.multiply( shadowFrameExtents );

			_viewportSize.copy( shadow.mapSize );

			if ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {

				if ( _shadowMapSize.x > maxTextureSize ) {

					_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );
					_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;
					shadow.mapSize.x = _viewportSize.x;

				}

				if ( _shadowMapSize.y > maxTextureSize ) {

					_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );
					_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;
					shadow.mapSize.y = _viewportSize.y;

				}

			}

			if ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {

				const pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };

				shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
				shadow.map.texture.name = light.name + '.shadowMap';

				shadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );

				shadow.camera.updateProjectionMatrix();

			}

			if ( shadow.map === null ) {

				const pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };

				shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
				shadow.map.texture.name = light.name + '.shadowMap';

				shadow.camera.updateProjectionMatrix();

			}

			_renderer.setRenderTarget( shadow.map );
			_renderer.clear();

			const viewportCount = shadow.getViewportCount();

			for ( let vp = 0; vp < viewportCount; vp ++ ) {

				const viewport = shadow.getViewport( vp );

				_viewport.set(
					_viewportSize.x * viewport.x,
					_viewportSize.y * viewport.y,
					_viewportSize.x * viewport.z,
					_viewportSize.y * viewport.w
				);

				_state.viewport( _viewport );

				shadow.updateMatrices( light, vp );

				_frustum = shadow.getFrustum();

				renderObject( scene, camera, shadow.camera, light, this.type );

			}

			// do blur pass for VSM

			if ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {

				VSMPass( shadow, camera );

			}

			shadow.needsUpdate = false;

		}

		scope.needsUpdate = false;

		_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );

	};

	function VSMPass( shadow, camera ) {

		const geometry = _objects.update( fullScreenMesh );

		// vertical pass

		shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;
		shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;
		shadowMaterialVertical.uniforms.radius.value = shadow.radius;
		_renderer.setRenderTarget( shadow.mapPass );
		_renderer.clear();
		_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );

		// horizontal pass

		shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;
		shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;
		shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;
		_renderer.setRenderTarget( shadow.map );
		_renderer.clear();
		_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );

	}

	function getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {

		const index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;

		let material = _depthMaterials[ index ];

		if ( material === undefined ) {

			material = new MeshDepthMaterial( {

				depthPacking: RGBADepthPacking,

				morphTargets: useMorphing,
				skinning: useSkinning

			} );

			_depthMaterials[ index ] = material;

		}

		return material;

	}

	function getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {

		const index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;

		let material = _distanceMaterials[ index ];

		if ( material === undefined ) {

			material = new MeshDistanceMaterial( {

				morphTargets: useMorphing,
				skinning: useSkinning

			} );

			_distanceMaterials[ index ] = material;

		}

		return material;

	}

	function getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {

		let result = null;

		let getMaterialVariant = getDepthMaterialVariant;
		let customMaterial = object.customDepthMaterial;

		if ( light.isPointLight === true ) {

			getMaterialVariant = getDistanceMaterialVariant;
			customMaterial = object.customDistanceMaterial;

		}

		if ( customMaterial === undefined ) {

			let useMorphing = false;

			if ( material.morphTargets === true ) {

				useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;

			}

			let useSkinning = false;

			if ( object.isSkinnedMesh === true ) {

				if ( material.skinning === true ) {

					useSkinning = true;

				} else {

					console.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );

				}

			}

			const useInstancing = object.isInstancedMesh === true;

			result = getMaterialVariant( useMorphing, useSkinning, useInstancing );

		} else {

			result = customMaterial;

		}

		if ( _renderer.localClippingEnabled &&
				material.clipShadows === true &&
				material.clippingPlanes.length !== 0 ) {

			// in this case we need a unique material instance reflecting the
			// appropriate state

			const keyA = result.uuid, keyB = material.uuid;

			let materialsForVariant = _materialCache[ keyA ];

			if ( materialsForVariant === undefined ) {

				materialsForVariant = {};
				_materialCache[ keyA ] = materialsForVariant;

			}

			let cachedMaterial = materialsForVariant[ keyB ];

			if ( cachedMaterial === undefined ) {

				cachedMaterial = result.clone();
				materialsForVariant[ keyB ] = cachedMaterial;

			}

			result = cachedMaterial;

		}

		result.visible = material.visible;
		result.wireframe = material.wireframe;

		if ( type === VSMShadowMap ) {

			result.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;

		} else {

			result.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];

		}

		result.clipShadows = material.clipShadows;
		result.clippingPlanes = material.clippingPlanes;
		result.clipIntersection = material.clipIntersection;

		result.wireframeLinewidth = material.wireframeLinewidth;
		result.linewidth = material.linewidth;

		if ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {

			result.referencePosition.setFromMatrixPosition( light.matrixWorld );
			result.nearDistance = shadowCameraNear;
			result.farDistance = shadowCameraFar;

		}

		return result;

	}

	function renderObject( object, camera, shadowCamera, light, type ) {

		if ( object.visible === false ) return;

		const visible = object.layers.test( camera.layers );

		if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {

			if ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {

				object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );

				const geometry = _objects.update( object );
				const material = object.material;

				if ( Array.isArray( material ) ) {

					const groups = geometry.groups;

					for ( let k = 0, kl = groups.length; k < kl; k ++ ) {

						const group = groups[ k ];
						const groupMaterial = material[ group.materialIndex ];

						if ( groupMaterial && groupMaterial.visible ) {

							const depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );

							_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );

						}

					}

				} else if ( material.visible ) {

					const depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );

					_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );

				}

			}

		}

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			renderObject( children[ i ], camera, shadowCamera, light, type );

		}

	}

}

function WebGLState( gl, extensions, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	function ColorBuffer() {

		let locked = false;

		const color = new Vector4();
		let currentColorMask = null;
		const currentColorClear = new Vector4( 0, 0, 0, 0 );

		return {

			setMask: function ( colorMask ) {

				if ( currentColorMask !== colorMask && ! locked ) {

					gl.colorMask( colorMask, colorMask, colorMask, colorMask );
					currentColorMask = colorMask;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( r, g, b, a, premultipliedAlpha ) {

				if ( premultipliedAlpha === true ) {

					r *= a; g *= a; b *= a;

				}

				color.set( r, g, b, a );

				if ( currentColorClear.equals( color ) === false ) {

					gl.clearColor( r, g, b, a );
					currentColorClear.copy( color );

				}

			},

			reset: function () {

				locked = false;

				currentColorMask = null;
				currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state

			}

		};

	}

	function DepthBuffer() {

		let locked = false;

		let currentDepthMask = null;
		let currentDepthFunc = null;
		let currentDepthClear = null;

		return {

			setTest: function ( depthTest ) {

				if ( depthTest ) {

					enable( 2929 );

				} else {

					disable( 2929 );

				}

			},

			setMask: function ( depthMask ) {

				if ( currentDepthMask !== depthMask && ! locked ) {

					gl.depthMask( depthMask );
					currentDepthMask = depthMask;

				}

			},

			setFunc: function ( depthFunc ) {

				if ( currentDepthFunc !== depthFunc ) {

					if ( depthFunc ) {

						switch ( depthFunc ) {

							case NeverDepth:

								gl.depthFunc( 512 );
								break;

							case AlwaysDepth:

								gl.depthFunc( 519 );
								break;

							case LessDepth:

								gl.depthFunc( 513 );
								break;

							case LessEqualDepth:

								gl.depthFunc( 515 );
								break;

							case EqualDepth:

								gl.depthFunc( 514 );
								break;

							case GreaterEqualDepth:

								gl.depthFunc( 518 );
								break;

							case GreaterDepth:

								gl.depthFunc( 516 );
								break;

							case NotEqualDepth:

								gl.depthFunc( 517 );
								break;

							default:

								gl.depthFunc( 515 );

						}

					} else {

						gl.depthFunc( 515 );

					}

					currentDepthFunc = depthFunc;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( depth ) {

				if ( currentDepthClear !== depth ) {

					gl.clearDepth( depth );
					currentDepthClear = depth;

				}

			},

			reset: function () {

				locked = false;

				currentDepthMask = null;
				currentDepthFunc = null;
				currentDepthClear = null;

			}

		};

	}

	function StencilBuffer() {

		let locked = false;

		let currentStencilMask = null;
		let currentStencilFunc = null;
		let currentStencilRef = null;
		let currentStencilFuncMask = null;
		let currentStencilFail = null;
		let currentStencilZFail = null;
		let currentStencilZPass = null;
		let currentStencilClear = null;

		return {

			setTest: function ( stencilTest ) {

				if ( ! locked ) {

					if ( stencilTest ) {

						enable( 2960 );

					} else {

						disable( 2960 );

					}

				}

			},

			setMask: function ( stencilMask ) {

				if ( currentStencilMask !== stencilMask && ! locked ) {

					gl.stencilMask( stencilMask );
					currentStencilMask = stencilMask;

				}

			},

			setFunc: function ( stencilFunc, stencilRef, stencilMask ) {

				if ( currentStencilFunc !== stencilFunc ||
				     currentStencilRef !== stencilRef ||
				     currentStencilFuncMask !== stencilMask ) {

					gl.stencilFunc( stencilFunc, stencilRef, stencilMask );

					currentStencilFunc = stencilFunc;
					currentStencilRef = stencilRef;
					currentStencilFuncMask = stencilMask;

				}

			},

			setOp: function ( stencilFail, stencilZFail, stencilZPass ) {

				if ( currentStencilFail !== stencilFail ||
				     currentStencilZFail !== stencilZFail ||
				     currentStencilZPass !== stencilZPass ) {

					gl.stencilOp( stencilFail, stencilZFail, stencilZPass );

					currentStencilFail = stencilFail;
					currentStencilZFail = stencilZFail;
					currentStencilZPass = stencilZPass;

				}

			},

			setLocked: function ( lock ) {

				locked = lock;

			},

			setClear: function ( stencil ) {

				if ( currentStencilClear !== stencil ) {

					gl.clearStencil( stencil );
					currentStencilClear = stencil;

				}

			},

			reset: function () {

				locked = false;

				currentStencilMask = null;
				currentStencilFunc = null;
				currentStencilRef = null;
				currentStencilFuncMask = null;
				currentStencilFail = null;
				currentStencilZFail = null;
				currentStencilZPass = null;
				currentStencilClear = null;

			}

		};

	}

	//

	const colorBuffer = new ColorBuffer();
	const depthBuffer = new DepthBuffer();
	const stencilBuffer = new StencilBuffer();

	let enabledCapabilities = {};

	let currentProgram = null;

	let currentBlendingEnabled = false;
	let currentBlending = null;
	let currentBlendEquation = null;
	let currentBlendSrc = null;
	let currentBlendDst = null;
	let currentBlendEquationAlpha = null;
	let currentBlendSrcAlpha = null;
	let currentBlendDstAlpha = null;
	let currentPremultipledAlpha = false;

	let currentFlipSided = null;
	let currentCullFace = null;

	let currentLineWidth = null;

	let currentPolygonOffsetFactor = null;
	let currentPolygonOffsetUnits = null;

	const maxTextures = gl.getParameter( 35661 );

	let lineWidthAvailable = false;
	let version = 0;
	const glVersion = gl.getParameter( 7938 );

	if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {

		version = parseFloat( /^WebGL (\d)/.exec( glVersion )[ 1 ] );
		lineWidthAvailable = ( version >= 1.0 );

	} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {

		version = parseFloat( /^OpenGL ES (\d)/.exec( glVersion )[ 1 ] );
		lineWidthAvailable = ( version >= 2.0 );

	}

	let currentTextureSlot = null;
	let currentBoundTextures = {};

	const currentScissor = new Vector4();
	const currentViewport = new Vector4();

	function createTexture( type, target, count ) {

		const data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.
		const texture = gl.createTexture();

		gl.bindTexture( type, texture );
		gl.texParameteri( type, 10241, 9728 );
		gl.texParameteri( type, 10240, 9728 );

		for ( let i = 0; i < count; i ++ ) {

			gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );

		}

		return texture;

	}

	const emptyTextures = {};
	emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );
	emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );

	// init

	colorBuffer.setClear( 0, 0, 0, 1 );
	depthBuffer.setClear( 1 );
	stencilBuffer.setClear( 0 );

	enable( 2929 );
	depthBuffer.setFunc( LessEqualDepth );

	setFlipSided( false );
	setCullFace( CullFaceBack );
	enable( 2884 );

	setBlending( NoBlending );

	//

	function enable( id ) {

		if ( enabledCapabilities[ id ] !== true ) {

			gl.enable( id );
			enabledCapabilities[ id ] = true;

		}

	}

	function disable( id ) {

		if ( enabledCapabilities[ id ] !== false ) {

			gl.disable( id );
			enabledCapabilities[ id ] = false;

		}

	}

	function useProgram( program ) {

		if ( currentProgram !== program ) {

			gl.useProgram( program );

			currentProgram = program;

			return true;

		}

		return false;

	}

	const equationToGL = {
		[ AddEquation ]: 32774,
		[ SubtractEquation ]: 32778,
		[ ReverseSubtractEquation ]: 32779
	};

	if ( isWebGL2 ) {

		equationToGL[ MinEquation ] = 32775;
		equationToGL[ MaxEquation ] = 32776;

	} else {

		const extension = extensions.get( 'EXT_blend_minmax' );

		if ( extension !== null ) {

			equationToGL[ MinEquation ] = extension.MIN_EXT;
			equationToGL[ MaxEquation ] = extension.MAX_EXT;

		}

	}

	const factorToGL = {
		[ ZeroFactor ]: 0,
		[ OneFactor ]: 1,
		[ SrcColorFactor ]: 768,
		[ SrcAlphaFactor ]: 770,
		[ SrcAlphaSaturateFactor ]: 776,
		[ DstColorFactor ]: 774,
		[ DstAlphaFactor ]: 772,
		[ OneMinusSrcColorFactor ]: 769,
		[ OneMinusSrcAlphaFactor ]: 771,
		[ OneMinusDstColorFactor ]: 775,
		[ OneMinusDstAlphaFactor ]: 773
	};

	function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {

		if ( blending === NoBlending ) {

			if ( currentBlendingEnabled === true ) {

				disable( 3042 );
				currentBlendingEnabled = false;

			}

			return;

		}

		if ( currentBlendingEnabled === false ) {

			enable( 3042 );
			currentBlendingEnabled = true;

		}

		if ( blending !== CustomBlending ) {

			if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {

				if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {

					gl.blendEquation( 32774 );

					currentBlendEquation = AddEquation;
					currentBlendEquationAlpha = AddEquation;

				}

				if ( premultipliedAlpha ) {

					switch ( blending ) {

						case NormalBlending:
							gl.blendFuncSeparate( 1, 771, 1, 771 );
							break;

						case AdditiveBlending:
							gl.blendFunc( 1, 1 );
							break;

						case SubtractiveBlending:
							gl.blendFuncSeparate( 0, 0, 769, 771 );
							break;

						case MultiplyBlending:
							gl.blendFuncSeparate( 0, 768, 0, 770 );
							break;

						default:
							console.error( 'THREE.WebGLState: Invalid blending: ', blending );
							break;

					}

				} else {

					switch ( blending ) {

						case NormalBlending:
							gl.blendFuncSeparate( 770, 771, 1, 771 );
							break;

						case AdditiveBlending:
							gl.blendFunc( 770, 1 );
							break;

						case SubtractiveBlending:
							gl.blendFunc( 0, 769 );
							break;

						case MultiplyBlending:
							gl.blendFunc( 0, 768 );
							break;

						default:
							console.error( 'THREE.WebGLState: Invalid blending: ', blending );
							break;

					}

				}

				currentBlendSrc = null;
				currentBlendDst = null;
				currentBlendSrcAlpha = null;
				currentBlendDstAlpha = null;

				currentBlending = blending;
				currentPremultipledAlpha = premultipliedAlpha;

			}

			return;

		}

		// custom blending

		blendEquationAlpha = blendEquationAlpha || blendEquation;
		blendSrcAlpha = blendSrcAlpha || blendSrc;
		blendDstAlpha = blendDstAlpha || blendDst;

		if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {

			gl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );

			currentBlendEquation = blendEquation;
			currentBlendEquationAlpha = blendEquationAlpha;

		}

		if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {

			gl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );

			currentBlendSrc = blendSrc;
			currentBlendDst = blendDst;
			currentBlendSrcAlpha = blendSrcAlpha;
			currentBlendDstAlpha = blendDstAlpha;

		}

		currentBlending = blending;
		currentPremultipledAlpha = null;

	}

	function setMaterial( material, frontFaceCW ) {

		material.side === DoubleSide
			? disable( 2884 )
			: enable( 2884 );

		let flipSided = ( material.side === BackSide );
		if ( frontFaceCW ) flipSided = ! flipSided;

		setFlipSided( flipSided );

		( material.blending === NormalBlending && material.transparent === false )
			? setBlending( NoBlending )
			: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );

		depthBuffer.setFunc( material.depthFunc );
		depthBuffer.setTest( material.depthTest );
		depthBuffer.setMask( material.depthWrite );
		colorBuffer.setMask( material.colorWrite );

		const stencilWrite = material.stencilWrite;
		stencilBuffer.setTest( stencilWrite );
		if ( stencilWrite ) {

			stencilBuffer.setMask( material.stencilWriteMask );
			stencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );
			stencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );

		}

		setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

	}

	//

	function setFlipSided( flipSided ) {

		if ( currentFlipSided !== flipSided ) {

			if ( flipSided ) {

				gl.frontFace( 2304 );

			} else {

				gl.frontFace( 2305 );

			}

			currentFlipSided = flipSided;

		}

	}

	function setCullFace( cullFace ) {

		if ( cullFace !== CullFaceNone ) {

			enable( 2884 );

			if ( cullFace !== currentCullFace ) {

				if ( cullFace === CullFaceBack ) {

					gl.cullFace( 1029 );

				} else if ( cullFace === CullFaceFront ) {

					gl.cullFace( 1028 );

				} else {

					gl.cullFace( 1032 );

				}

			}

		} else {

			disable( 2884 );

		}

		currentCullFace = cullFace;

	}

	function setLineWidth( width ) {

		if ( width !== currentLineWidth ) {

			if ( lineWidthAvailable ) gl.lineWidth( width );

			currentLineWidth = width;

		}

	}

	function setPolygonOffset( polygonOffset, factor, units ) {

		if ( polygonOffset ) {

			enable( 32823 );

			if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {

				gl.polygonOffset( factor, units );

				currentPolygonOffsetFactor = factor;
				currentPolygonOffsetUnits = units;

			}

		} else {

			disable( 32823 );

		}

	}

	function setScissorTest( scissorTest ) {

		if ( scissorTest ) {

			enable( 3089 );

		} else {

			disable( 3089 );

		}

	}

	// texture

	function activeTexture( webglSlot ) {

		if ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;

		if ( currentTextureSlot !== webglSlot ) {

			gl.activeTexture( webglSlot );
			currentTextureSlot = webglSlot;

		}

	}

	function bindTexture( webglType, webglTexture ) {

		if ( currentTextureSlot === null ) {

			activeTexture();

		}

		let boundTexture = currentBoundTextures[ currentTextureSlot ];

		if ( boundTexture === undefined ) {

			boundTexture = { type: undefined, texture: undefined };
			currentBoundTextures[ currentTextureSlot ] = boundTexture;

		}

		if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {

			gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );

			boundTexture.type = webglType;
			boundTexture.texture = webglTexture;

		}

	}

	function unbindTexture() {

		const boundTexture = currentBoundTextures[ currentTextureSlot ];

		if ( boundTexture !== undefined && boundTexture.type !== undefined ) {

			gl.bindTexture( boundTexture.type, null );

			boundTexture.type = undefined;
			boundTexture.texture = undefined;

		}

	}

	function compressedTexImage2D() {

		try {

			gl.compressedTexImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texImage2D() {

		try {

			gl.texImage2D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	function texImage3D() {

		try {

			gl.texImage3D.apply( gl, arguments );

		} catch ( error ) {

			console.error( 'THREE.WebGLState:', error );

		}

	}

	//

	function scissor( scissor ) {

		if ( currentScissor.equals( scissor ) === false ) {

			gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );
			currentScissor.copy( scissor );

		}

	}

	function viewport( viewport ) {

		if ( currentViewport.equals( viewport ) === false ) {

			gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );
			currentViewport.copy( viewport );

		}

	}

	//

	function reset() {

		// reset state

		gl.disable( 3042 );
		gl.disable( 2884 );
		gl.disable( 2929 );
		gl.disable( 32823 );
		gl.disable( 3089 );
		gl.disable( 2960 );

		gl.blendEquation( 32774 );
		gl.blendFunc( 1, 0 );
		gl.blendFuncSeparate( 1, 0, 1, 0 );

		gl.colorMask( true, true, true, true );
		gl.clearColor( 0, 0, 0, 0 );

		gl.depthMask( true );
		gl.depthFunc( 513 );
		gl.clearDepth( 1 );

		gl.stencilMask( 0xffffffff );
		gl.stencilFunc( 519, 0, 0xffffffff );
		gl.stencilOp( 7680, 7680, 7680 );
		gl.clearStencil( 0 );

		gl.cullFace( 1029 );
		gl.frontFace( 2305 );

		gl.polygonOffset( 0, 0 );

		gl.activeTexture( 33984 );

		gl.useProgram( null );

		gl.lineWidth( 1 );

		gl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );
		gl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );

		// reset internals

		enabledCapabilities = {};

		currentTextureSlot = null;
		currentBoundTextures = {};

		currentProgram = null;

		currentBlendingEnabled = false;
		currentBlending = null;
		currentBlendEquation = null;
		currentBlendSrc = null;
		currentBlendDst = null;
		currentBlendEquationAlpha = null;
		currentBlendSrcAlpha = null;
		currentBlendDstAlpha = null;
		currentPremultipledAlpha = false;

		currentFlipSided = null;
		currentCullFace = null;

		currentLineWidth = null;

		currentPolygonOffsetFactor = null;
		currentPolygonOffsetUnits = null;

		colorBuffer.reset();
		depthBuffer.reset();
		stencilBuffer.reset();

	}

	return {

		buffers: {
			color: colorBuffer,
			depth: depthBuffer,
			stencil: stencilBuffer
		},

		enable: enable,
		disable: disable,

		useProgram: useProgram,

		setBlending: setBlending,
		setMaterial: setMaterial,

		setFlipSided: setFlipSided,
		setCullFace: setCullFace,

		setLineWidth: setLineWidth,
		setPolygonOffset: setPolygonOffset,

		setScissorTest: setScissorTest,

		activeTexture: activeTexture,
		bindTexture: bindTexture,
		unbindTexture: unbindTexture,
		compressedTexImage2D: compressedTexImage2D,
		texImage2D: texImage2D,
		texImage3D: texImage3D,

		scissor: scissor,
		viewport: viewport,

		reset: reset

	};

}

function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {

	const isWebGL2 = capabilities.isWebGL2;
	const maxTextures = capabilities.maxTextures;
	const maxCubemapSize = capabilities.maxCubemapSize;
	const maxTextureSize = capabilities.maxTextureSize;
	const maxSamples = capabilities.maxSamples;

	const _videoTextures = new WeakMap();
	let _canvas;

	// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,
	// also OffscreenCanvas.getContext("webgl"), but not OffscreenCanvas.getContext("2d")!
	// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).

	let useOffscreenCanvas = false;

	try {

		useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'
			&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;

	} catch ( err ) {

		// Ignore any errors

	}

	function createCanvas( width, height ) {

		// Use OffscreenCanvas when available. Specially needed in web workers

		return useOffscreenCanvas ?
			new OffscreenCanvas( width, height ) :
			document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );

	}

	function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {

		let scale = 1;

		// handle case if texture exceeds max size

		if ( image.width > maxSize || image.height > maxSize ) {

			scale = maxSize / Math.max( image.width, image.height );

		}

		// only perform resize if necessary

		if ( scale < 1 || needsPowerOfTwo === true ) {

			// only perform resize for certain image types

			if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||
				( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||
				( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {

				const floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;

				const width = floor( scale * image.width );
				const height = floor( scale * image.height );

				if ( _canvas === undefined ) _canvas = createCanvas( width, height );

				// cube textures can't reuse the same canvas

				const canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;

				canvas.width = width;
				canvas.height = height;

				const context = canvas.getContext( '2d' );
				context.drawImage( image, 0, 0, width, height );

				console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );

				return canvas;

			} else {

				if ( 'data' in image ) {

					console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );

				}

				return image;

			}

		}

		return image;

	}

	function isPowerOfTwo( image ) {

		return MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );

	}

	function textureNeedsPowerOfTwo( texture ) {

		if ( isWebGL2 ) return false;

		return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||
			( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );

	}

	function textureNeedsGenerateMipmaps( texture, supportsMips ) {

		return texture.generateMipmaps && supportsMips &&
			texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;

	}

	function generateMipmap( target, texture, width, height ) {

		_gl.generateMipmap( target );

		const textureProperties = properties.get( texture );

		textureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );

	}

	function getInternalFormat( internalFormatName, glFormat, glType ) {

		if ( isWebGL2 === false ) return glFormat;

		if ( internalFormatName !== null ) {

			if ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];

			console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \'' + internalFormatName + '\'' );

		}

		let internalFormat = glFormat;

		if ( glFormat === 6403 ) {

			if ( glType === 5126 ) internalFormat = 33326;
			if ( glType === 5131 ) internalFormat = 33325;
			if ( glType === 5121 ) internalFormat = 33321;

		}

		if ( glFormat === 6407 ) {

			if ( glType === 5126 ) internalFormat = 34837;
			if ( glType === 5131 ) internalFormat = 34843;
			if ( glType === 5121 ) internalFormat = 32849;

		}

		if ( glFormat === 6408 ) {

			if ( glType === 5126 ) internalFormat = 34836;
			if ( glType === 5131 ) internalFormat = 34842;
			if ( glType === 5121 ) internalFormat = 32856;

		}

		if ( internalFormat === 33325 || internalFormat === 33326 ||
			internalFormat === 34842 || internalFormat === 34836 ) {

			extensions.get( 'EXT_color_buffer_float' );

		}

		return internalFormat;

	}

	// Fallback filters for non-power-of-2 textures

	function filterFallback( f ) {

		if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {

			return 9728;

		}

		return 9729;

	}

	//

	function onTextureDispose( event ) {

		const texture = event.target;

		texture.removeEventListener( 'dispose', onTextureDispose );

		deallocateTexture( texture );

		if ( texture.isVideoTexture ) {

			_videoTextures.delete( texture );

		}

		info.memory.textures --;

	}

	function onRenderTargetDispose( event ) {

		const renderTarget = event.target;

		renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );

		deallocateRenderTarget( renderTarget );

		info.memory.textures --;

	}

	//

	function deallocateTexture( texture ) {

		const textureProperties = properties.get( texture );

		if ( textureProperties.__webglInit === undefined ) return;

		_gl.deleteTexture( textureProperties.__webglTexture );

		properties.remove( texture );

	}

	function deallocateRenderTarget( renderTarget ) {

		const texture = renderTarget.texture;

		const renderTargetProperties = properties.get( renderTarget );
		const textureProperties = properties.get( texture );

		if ( ! renderTarget ) return;

		if ( textureProperties.__webglTexture !== undefined ) {

			_gl.deleteTexture( textureProperties.__webglTexture );

		}

		if ( renderTarget.depthTexture ) {

			renderTarget.depthTexture.dispose();

		}

		if ( renderTarget.isWebGLCubeRenderTarget ) {

			for ( let i = 0; i < 6; i ++ ) {

				_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );
				if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );

			}

		} else {

			_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );
			if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );
			if ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );
			if ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );
			if ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );

		}

		properties.remove( texture );
		properties.remove( renderTarget );

	}

	//

	let textureUnits = 0;

	function resetTextureUnits() {

		textureUnits = 0;

	}

	function allocateTextureUnit() {

		const textureUnit = textureUnits;

		if ( textureUnit >= maxTextures ) {

			console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );

		}

		textureUnits += 1;

		return textureUnit;

	}

	//

	function setTexture2D( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.isVideoTexture ) updateVideoTexture( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			const image = texture.image;

			if ( image === undefined ) {

				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );

			} else if ( image.complete === false ) {

				console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );

			} else {

				uploadTexture( textureProperties, texture, slot );
				return;

			}

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 3553, textureProperties.__webglTexture );

	}

	function setTexture2DArray( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			uploadTexture( textureProperties, texture, slot );
			return;

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 35866, textureProperties.__webglTexture );

	}

	function setTexture3D( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			uploadTexture( textureProperties, texture, slot );
			return;

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 32879, textureProperties.__webglTexture );

	}

	function setTextureCube( texture, slot ) {

		const textureProperties = properties.get( texture );

		if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

			uploadCubeTexture( textureProperties, texture, slot );
			return;

		}

		state.activeTexture( 33984 + slot );
		state.bindTexture( 34067, textureProperties.__webglTexture );

	}

	const wrappingToGL = {
		[ RepeatWrapping ]: 10497,
		[ ClampToEdgeWrapping ]: 33071,
		[ MirroredRepeatWrapping ]: 33648
	};

	const filterToGL = {
		[ NearestFilter ]: 9728,
		[ NearestMipmapNearestFilter ]: 9984,
		[ NearestMipmapLinearFilter ]: 9986,

		[ LinearFilter ]: 9729,
		[ LinearMipmapNearestFilter ]: 9985,
		[ LinearMipmapLinearFilter ]: 9987
	};

	function setTextureParameters( textureType, texture, supportsMips ) {

		if ( supportsMips ) {

			_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );
			_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );

			if ( textureType === 32879 || textureType === 35866 ) {

				_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );

			}

			_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );
			_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );

		} else {

			_gl.texParameteri( textureType, 10242, 33071 );
			_gl.texParameteri( textureType, 10243, 33071 );

			if ( textureType === 32879 || textureType === 35866 ) {

				_gl.texParameteri( textureType, 32882, 33071 );

			}

			if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {

				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );

			}

			_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );
			_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );

			if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {

				console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );

			}

		}

		if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {

			const extension = extensions.get( 'EXT_texture_filter_anisotropic' );

			if ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2
			if ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only

			if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {

				_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );
				properties.get( texture ).__currentAnisotropy = texture.anisotropy;

			}

		}

	}

	function initTexture( textureProperties, texture ) {

		if ( textureProperties.__webglInit === undefined ) {

			textureProperties.__webglInit = true;

			texture.addEventListener( 'dispose', onTextureDispose );

			textureProperties.__webglTexture = _gl.createTexture();

			info.memory.textures ++;

		}

	}

	function uploadTexture( textureProperties, texture, slot ) {

		let textureType = 3553;

		if ( texture.isDataTexture2DArray ) textureType = 35866;
		if ( texture.isDataTexture3D ) textureType = 32879;

		initTexture( textureProperties, texture );

		state.activeTexture( 33984 + slot );
		state.bindTexture( textureType, textureProperties.__webglTexture );

		_gl.pixelStorei( 37440, texture.flipY );
		_gl.pixelStorei( 37441, texture.premultiplyAlpha );
		_gl.pixelStorei( 3317, texture.unpackAlignment );
		_gl.pixelStorei( 37443, 0 );

		const needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;
		const image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );

		const supportsMips = isPowerOfTwo( image ) || isWebGL2,
			glFormat = utils.convert( texture.format );

		let glType = utils.convert( texture.type ),
			glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );

		setTextureParameters( textureType, texture, supportsMips );

		let mipmap;
		const mipmaps = texture.mipmaps;

		if ( texture.isDepthTexture ) {

			// populate depth texture with dummy data

			glInternalFormat = 6402;

			if ( isWebGL2 ) {

				if ( texture.type === FloatType ) {

					glInternalFormat = 36012;

				} else if ( texture.type === UnsignedIntType ) {

					glInternalFormat = 33190;

				} else if ( texture.type === UnsignedInt248Type ) {

					glInternalFormat = 35056;

				} else {

					glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D

				}

			} else {

				if ( texture.type === FloatType ) {

					console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );

				}

			}

			// validation checks for WebGL 1

			if ( texture.format === DepthFormat && glInternalFormat === 6402 ) {

				// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
				// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT
				// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
				if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {

					console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );

					texture.type = UnsignedShortType;
					glType = utils.convert( texture.type );

				}

			}

			if ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {

				// Depth stencil textures need the DEPTH_STENCIL internal format
				// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
				glInternalFormat = 34041;

				// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
				// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
				// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
				if ( texture.type !== UnsignedInt248Type ) {

					console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );

					texture.type = UnsignedInt248Type;
					glType = utils.convert( texture.type );

				}

			}

			//

			state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );

		} else if ( texture.isDataTexture ) {

			// use manually created mipmaps if available
			// if there are no manual mipmaps
			// set 0 level mipmap and then use GL to generate other mipmap levels

			if ( mipmaps.length > 0 && supportsMips ) {

				for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];
					state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

				}

				texture.generateMipmaps = false;
				textureProperties.__maxMipLevel = mipmaps.length - 1;

			} else {

				state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );
				textureProperties.__maxMipLevel = 0;

			}

		} else if ( texture.isCompressedTexture ) {

			for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {

				mipmap = mipmaps[ i ];

				if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {

					if ( glFormat !== null ) {

						state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );

					} else {

						console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );

					}

				} else {

					state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

				}

			}

			textureProperties.__maxMipLevel = mipmaps.length - 1;

		} else if ( texture.isDataTexture2DArray ) {

			state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );
			textureProperties.__maxMipLevel = 0;

		} else if ( texture.isDataTexture3D ) {

			state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );
			textureProperties.__maxMipLevel = 0;

		} else {

			// regular Texture (image, video, canvas)

			// use manually created mipmaps if available
			// if there are no manual mipmaps
			// set 0 level mipmap and then use GL to generate other mipmap levels

			if ( mipmaps.length > 0 && supportsMips ) {

				for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];
					state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );

				}

				texture.generateMipmaps = false;
				textureProperties.__maxMipLevel = mipmaps.length - 1;

			} else {

				state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );
				textureProperties.__maxMipLevel = 0;

			}

		}

		if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

			generateMipmap( textureType, texture, image.width, image.height );

		}

		textureProperties.__version = texture.version;

		if ( texture.onUpdate ) texture.onUpdate( texture );

	}

	function uploadCubeTexture( textureProperties, texture, slot ) {

		if ( texture.image.length !== 6 ) return;

		initTexture( textureProperties, texture );

		state.activeTexture( 33984 + slot );
		state.bindTexture( 34067, textureProperties.__webglTexture );

		_gl.pixelStorei( 37440, texture.flipY );
		_gl.pixelStorei( 37441, texture.premultiplyAlpha );
		_gl.pixelStorei( 3317, texture.unpackAlignment );
		_gl.pixelStorei( 37443, 0 );

		const isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );
		const isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );

		const cubeImage = [];

		for ( let i = 0; i < 6; i ++ ) {

			if ( ! isCompressed && ! isDataTexture ) {

				cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );

			} else {

				cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];

			}

		}

		const image = cubeImage[ 0 ],
			supportsMips = isPowerOfTwo( image ) || isWebGL2,
			glFormat = utils.convert( texture.format ),
			glType = utils.convert( texture.type ),
			glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );

		setTextureParameters( 34067, texture, supportsMips );

		let mipmaps;

		if ( isCompressed ) {

			for ( let i = 0; i < 6; i ++ ) {

				mipmaps = cubeImage[ i ].mipmaps;

				for ( let j = 0; j < mipmaps.length; j ++ ) {

					const mipmap = mipmaps[ j ];

					if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {

						if ( glFormat !== null ) {

							state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );

						} else {

							console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );

						}

					} else {

						state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

					}

				}

			}

			textureProperties.__maxMipLevel = mipmaps.length - 1;

		} else {

			mipmaps = texture.mipmaps;

			for ( let i = 0; i < 6; i ++ ) {

				if ( isDataTexture ) {

					state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );

					for ( let j = 0; j < mipmaps.length; j ++ ) {

						const mipmap = mipmaps[ j ];
						const mipmapImage = mipmap.image[ i ].image;

						state.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );

					}

				} else {

					state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );

					for ( let j = 0; j < mipmaps.length; j ++ ) {

						const mipmap = mipmaps[ j ];

						state.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );

					}

				}

			}

			textureProperties.__maxMipLevel = mipmaps.length;

		}

		if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

			// We assume images for cube map have the same size.
			generateMipmap( 34067, texture, image.width, image.height );

		}

		textureProperties.__version = texture.version;

		if ( texture.onUpdate ) texture.onUpdate( texture );

	}

	// Render targets

	// Setup storage for target texture and bind it to correct framebuffer
	function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {

		const texture = renderTarget.texture;

		const glFormat = utils.convert( texture.format );
		const glType = utils.convert( texture.type );
		const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );

		if ( textureTarget === 32879 || textureTarget === 35866 ) {

			state.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );

		} else {

			state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );

		}

		_gl.bindFramebuffer( 36160, framebuffer );
		_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );
		_gl.bindFramebuffer( 36160, null );

	}

	// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
	function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {

		_gl.bindRenderbuffer( 36161, renderbuffer );

		if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {

			let glInternalFormat = 33189;

			if ( isMultisample ) {

				const depthTexture = renderTarget.depthTexture;

				if ( depthTexture && depthTexture.isDepthTexture ) {

					if ( depthTexture.type === FloatType ) {

						glInternalFormat = 36012;

					} else if ( depthTexture.type === UnsignedIntType ) {

						glInternalFormat = 33190;

					}

				}

				const samples = getRenderTargetSamples( renderTarget );

				_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

			} else {

				_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );

			}

			_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );

		} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

			if ( isMultisample ) {

				const samples = getRenderTargetSamples( renderTarget );

				_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );

			} else {

				_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );

			}


			_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );

		} else {

			const texture = renderTarget.texture;

			const glFormat = utils.convert( texture.format );
			const glType = utils.convert( texture.type );
			const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );

			if ( isMultisample ) {

				const samples = getRenderTargetSamples( renderTarget );

				_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

			} else {

				_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );

			}

		}

		_gl.bindRenderbuffer( 36161, null );

	}

	// Setup resources for a Depth Texture for a FBO (needs an extension)
	function setupDepthTexture( framebuffer, renderTarget ) {

		const isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );
		if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );

		_gl.bindFramebuffer( 36160, framebuffer );

		if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {

			throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );

		}

		// upload an empty depth texture with framebuffer size
		if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||
				renderTarget.depthTexture.image.width !== renderTarget.width ||
				renderTarget.depthTexture.image.height !== renderTarget.height ) {

			renderTarget.depthTexture.image.width = renderTarget.width;
			renderTarget.depthTexture.image.height = renderTarget.height;
			renderTarget.depthTexture.needsUpdate = true;

		}

		setTexture2D( renderTarget.depthTexture, 0 );

		const webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;

		if ( renderTarget.depthTexture.format === DepthFormat ) {

			_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );

		} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {

			_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );

		} else {

			throw new Error( 'Unknown depthTexture format' );

		}

	}

	// Setup GL resources for a non-texture depth buffer
	function setupDepthRenderbuffer( renderTarget ) {

		const renderTargetProperties = properties.get( renderTarget );

		const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );

		if ( renderTarget.depthTexture ) {

			if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );

			setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );

		} else {

			if ( isCube ) {

				renderTargetProperties.__webglDepthbuffer = [];

				for ( let i = 0; i < 6; i ++ ) {

					_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );
					renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();
					setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );

				}

			} else {

				_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );
				renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();
				setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );

			}

		}

		_gl.bindFramebuffer( 36160, null );

	}

	// Set up GL resources for the render target
	function setupRenderTarget( renderTarget ) {

		const texture = renderTarget.texture;

		const renderTargetProperties = properties.get( renderTarget );
		const textureProperties = properties.get( texture );

		renderTarget.addEventListener( 'dispose', onRenderTargetDispose );

		textureProperties.__webglTexture = _gl.createTexture();

		info.memory.textures ++;

		const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );
		const isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );
		const isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;
		const supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;

		// Handles WebGL2 RGBFormat fallback - #18858

		if ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {

			texture.format = RGBAFormat;

			console.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );

		}

		// Setup framebuffer

		if ( isCube ) {

			renderTargetProperties.__webglFramebuffer = [];

			for ( let i = 0; i < 6; i ++ ) {

				renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();

			}

		} else {

			renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();

			if ( isMultisample ) {

				if ( isWebGL2 ) {

					renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();
					renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();

					_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );

					const glFormat = utils.convert( texture.format );
					const glType = utils.convert( texture.type );
					const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );
					const samples = getRenderTargetSamples( renderTarget );
					_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

					_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );
					_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );
					_gl.bindRenderbuffer( 36161, null );

					if ( renderTarget.depthBuffer ) {

						renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();
						setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );

					}

					_gl.bindFramebuffer( 36160, null );


				} else {

					console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );

				}

			}

		}

		// Setup color buffer

		if ( isCube ) {

			state.bindTexture( 34067, textureProperties.__webglTexture );
			setTextureParameters( 34067, texture, supportsMips );

			for ( let i = 0; i < 6; i ++ ) {

				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );

			}

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				generateMipmap( 34067, texture, renderTarget.width, renderTarget.height );

			}

			state.bindTexture( 34067, null );

		} else {

			let glTextureType = 3553;

			if ( isRenderTarget3D ) {

				// Render targets containing layers, i.e: Texture 3D and 2d arrays

				if ( isWebGL2 ) {

					const isTexture3D = texture.isDataTexture3D;
					glTextureType = isTexture3D ? 32879 : 35866;

				} else {

					console.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );

				}

			}

			state.bindTexture( glTextureType, textureProperties.__webglTexture );
			setTextureParameters( glTextureType, texture, supportsMips );
			setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, glTextureType );

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				generateMipmap( 3553, texture, renderTarget.width, renderTarget.height );

			}

			state.bindTexture( 3553, null );

		}

		// Setup depth and stencil buffers

		if ( renderTarget.depthBuffer ) {

			setupDepthRenderbuffer( renderTarget );

		}

	}

	function updateRenderTargetMipmap( renderTarget ) {

		const texture = renderTarget.texture;

		const supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;

		if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

			const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;
			const webglTexture = properties.get( texture ).__webglTexture;

			state.bindTexture( target, webglTexture );
			generateMipmap( target, texture, renderTarget.width, renderTarget.height );
			state.bindTexture( target, null );

		}

	}

	function updateMultisampleRenderTarget( renderTarget ) {

		if ( renderTarget.isWebGLMultisampleRenderTarget ) {

			if ( isWebGL2 ) {

				const renderTargetProperties = properties.get( renderTarget );

				_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );
				_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );

				const width = renderTarget.width;
				const height = renderTarget.height;
				let mask = 16384;

				if ( renderTarget.depthBuffer ) mask |= 256;
				if ( renderTarget.stencilBuffer ) mask |= 1024;

				_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );

				_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905

			} else {

				console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );

			}

		}

	}

	function getRenderTargetSamples( renderTarget ) {

		return ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?
			Math.min( maxSamples, renderTarget.samples ) : 0;

	}

	function updateVideoTexture( texture ) {

		const frame = info.render.frame;

		// Check the last frame we updated the VideoTexture

		if ( _videoTextures.get( texture ) !== frame ) {

			_videoTextures.set( texture, frame );
			texture.update();

		}

	}

	// backwards compatibility

	let warnedTexture2D = false;
	let warnedTextureCube = false;

	function safeSetTexture2D( texture, slot ) {

		if ( texture && texture.isWebGLRenderTarget ) {

			if ( warnedTexture2D === false ) {

				console.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\'t use render targets as textures. Use their .texture property instead.' );
				warnedTexture2D = true;

			}

			texture = texture.texture;

		}

		setTexture2D( texture, slot );

	}

	function safeSetTextureCube( texture, slot ) {

		if ( texture && texture.isWebGLCubeRenderTarget ) {

			if ( warnedTextureCube === false ) {

				console.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\'t use cube render targets as textures. Use their .texture property instead.' );
				warnedTextureCube = true;

			}

			texture = texture.texture;

		}


		setTextureCube( texture, slot );

	}

	//

	this.allocateTextureUnit = allocateTextureUnit;
	this.resetTextureUnits = resetTextureUnits;

	this.setTexture2D = setTexture2D;
	this.setTexture2DArray = setTexture2DArray;
	this.setTexture3D = setTexture3D;
	this.setTextureCube = setTextureCube;
	this.setupRenderTarget = setupRenderTarget;
	this.updateRenderTargetMipmap = updateRenderTargetMipmap;
	this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;

	this.safeSetTexture2D = safeSetTexture2D;
	this.safeSetTextureCube = safeSetTextureCube;

}

function WebGLUtils( gl, extensions, capabilities ) {

	const isWebGL2 = capabilities.isWebGL2;

	function convert( p ) {

		let extension;

		if ( p === UnsignedByteType ) return 5121;
		if ( p === UnsignedShort4444Type ) return 32819;
		if ( p === UnsignedShort5551Type ) return 32820;
		if ( p === UnsignedShort565Type ) return 33635;

		if ( p === ByteType ) return 5120;
		if ( p === ShortType ) return 5122;
		if ( p === UnsignedShortType ) return 5123;
		if ( p === IntType ) return 5124;
		if ( p === UnsignedIntType ) return 5125;
		if ( p === FloatType ) return 5126;

		if ( p === HalfFloatType ) {

			if ( isWebGL2 ) return 5131;

			extension = extensions.get( 'OES_texture_half_float' );

			if ( extension !== null ) {

				return extension.HALF_FLOAT_OES;

			} else {

				return null;

			}

		}

		if ( p === AlphaFormat ) return 6406;
		if ( p === RGBFormat ) return 6407;
		if ( p === RGBAFormat ) return 6408;
		if ( p === LuminanceFormat ) return 6409;
		if ( p === LuminanceAlphaFormat ) return 6410;
		if ( p === DepthFormat ) return 6402;
		if ( p === DepthStencilFormat ) return 34041;
		if ( p === RedFormat ) return 6403;

		// WebGL2 formats.

		if ( p === RedIntegerFormat ) return 36244;
		if ( p === RGFormat ) return 33319;
		if ( p === RGIntegerFormat ) return 33320;
		if ( p === RGBIntegerFormat ) return 36248;
		if ( p === RGBAIntegerFormat ) return 36249;

		if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||
			p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );

			if ( extension !== null ) {

				if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;
				if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;
				if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;
				if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;

			} else {

				return null;

			}

		}

		if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||
			p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );

			if ( extension !== null ) {

				if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
				if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
				if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
				if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;

			} else {

				return null;

			}

		}

		if ( p === RGB_ETC1_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_etc1' );

			if ( extension !== null ) {

				return extension.COMPRESSED_RGB_ETC1_WEBGL;

			} else {

				return null;

			}

		}

		if ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_etc' );

			if ( extension !== null ) {

				if ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;
				if ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;

			}

		}

		if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||
			p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||
			p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||
			p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||
			p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||
			p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||
			p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||
			p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||
			p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||
			p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {

			extension = extensions.get( 'WEBGL_compressed_texture_astc' );

			if ( extension !== null ) {

				// TODO Complete?

				return p;

			} else {

				return null;

			}

		}

		if ( p === RGBA_BPTC_Format ) {

			extension = extensions.get( 'EXT_texture_compression_bptc' );

			if ( extension !== null ) {

				// TODO Complete?

				return p;

			} else {

				return null;

			}

		}

		if ( p === UnsignedInt248Type ) {

			if ( isWebGL2 ) return 34042;

			extension = extensions.get( 'WEBGL_depth_texture' );

			if ( extension !== null ) {

				return extension.UNSIGNED_INT_24_8_WEBGL;

			} else {

				return null;

			}

		}

	}

	return { convert: convert };

}

function ArrayCamera( array = [] ) {

	PerspectiveCamera.call( this );

	this.cameras = array;

}

ArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {

	constructor: ArrayCamera,

	isArrayCamera: true

} );

class Group extends Object3D {

	constructor() {

		super();

		this.type = 'Group';

	}

}

Group.prototype.isGroup = true;

function WebXRController() {

	this._targetRay = null;
	this._grip = null;
	this._hand = null;

}

Object.assign( WebXRController.prototype, {

	constructor: WebXRController,

	getHandSpace: function () {

		if ( this._hand === null ) {

			this._hand = new Group();
			this._hand.matrixAutoUpdate = false;
			this._hand.visible = false;

			this._hand.joints = {};
			this._hand.inputState = { pinching: false };

		}

		return this._hand;

	},

	getTargetRaySpace: function () {

		if ( this._targetRay === null ) {

			this._targetRay = new Group();
			this._targetRay.matrixAutoUpdate = false;
			this._targetRay.visible = false;

		}

		return this._targetRay;

	},

	getGripSpace: function () {

		if ( this._grip === null ) {

			this._grip = new Group();
			this._grip.matrixAutoUpdate = false;
			this._grip.visible = false;

		}

		return this._grip;

	},

	dispatchEvent: function ( event ) {

		if ( this._targetRay !== null ) {

			this._targetRay.dispatchEvent( event );

		}

		if ( this._grip !== null ) {

			this._grip.dispatchEvent( event );

		}

		if ( this._hand !== null ) {

			this._hand.dispatchEvent( event );

		}

		return this;

	},

	disconnect: function ( inputSource ) {

		this.dispatchEvent( { type: 'disconnected', data: inputSource } );

		if ( this._targetRay !== null ) {

			this._targetRay.visible = false;

		}

		if ( this._grip !== null ) {

			this._grip.visible = false;

		}

		if ( this._hand !== null ) {

			this._hand.visible = false;

		}

		return this;

	},

	update: function ( inputSource, frame, referenceSpace ) {

		let inputPose = null;
		let gripPose = null;
		let handPose = null;

		const targetRay = this._targetRay;
		const grip = this._grip;
		const hand = this._hand;

		if ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {

			if ( hand && inputSource.hand ) {

				handPose = true;

				for ( const inputjoint of inputSource.hand.values() ) {

					// Update the joints groups with the XRJoint poses
					const jointPose = frame.getJointPose( inputjoint, referenceSpace );

					if ( hand.joints[ inputjoint.jointName ] === undefined ) {

						// The transform of this joint will be updated with the joint pose on each frame
						const joint = new Group();
						joint.matrixAutoUpdate = false;
						joint.visible = false;
						hand.joints[ inputjoint.jointName ] = joint;
						// ??
						hand.add( joint );

					}

					const joint = hand.joints[ inputjoint.jointName ];

					if ( jointPose !== null ) {

						joint.matrix.fromArray( jointPose.transform.matrix );
						joint.matrix.decompose( joint.position, joint.rotation, joint.scale );
						joint.jointRadius = jointPose.radius;

					}

					joint.visible = jointPose !== null;

				}

				// Custom events

				// Check pinchz
				const indexTip = hand.joints[ 'index-finger-tip' ];
				const thumbTip = hand.joints[ 'thumb-tip' ];
				const distance = indexTip.position.distanceTo( thumbTip.position );

				const distanceToPinch = 0.02;
				const threshold = 0.005;

				if ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {

					hand.inputState.pinching = false;
					this.dispatchEvent( {
						type: 'pinchend',
						handedness: inputSource.handedness,
						target: this
					} );

				} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {

					hand.inputState.pinching = true;
					this.dispatchEvent( {
						type: 'pinchstart',
						handedness: inputSource.handedness,
						target: this
					} );

				}

			} else {

				if ( targetRay !== null ) {

					inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );

					if ( inputPose !== null ) {

						targetRay.matrix.fromArray( inputPose.transform.matrix );
						targetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );

					}

				}

				if ( grip !== null && inputSource.gripSpace ) {

					gripPose = frame.getPose( inputSource.gripSpace, referenceSpace );

					if ( gripPose !== null ) {

						grip.matrix.fromArray( gripPose.transform.matrix );
						grip.matrix.decompose( grip.position, grip.rotation, grip.scale );

					}

				}

			}

		}

		if ( targetRay !== null ) {

			targetRay.visible = ( inputPose !== null );

		}

		if ( grip !== null ) {

			grip.visible = ( gripPose !== null );

		}

		if ( hand !== null ) {

			hand.visible = ( handPose !== null );

		}

		return this;

	}

} );

function WebXRManager( renderer, gl ) {

	const scope = this;

	let session = null;

	let framebufferScaleFactor = 1.0;

	let referenceSpace = null;
	let referenceSpaceType = 'local-floor';

	let pose = null;

	const controllers = [];
	const inputSourcesMap = new Map();

	//

	const cameraL = new PerspectiveCamera();
	cameraL.layers.enable( 1 );
	cameraL.viewport = new Vector4();

	const cameraR = new PerspectiveCamera();
	cameraR.layers.enable( 2 );
	cameraR.viewport = new Vector4();

	const cameras = [ cameraL, cameraR ];

	const cameraVR = new ArrayCamera();
	cameraVR.layers.enable( 1 );
	cameraVR.layers.enable( 2 );

	let _currentDepthNear = null;
	let _currentDepthFar = null;

	//

	this.enabled = false;

	this.isPresenting = false;

	this.getController = function ( index ) {

		let controller = controllers[ index ];

		if ( controller === undefined ) {

			controller = new WebXRController();
			controllers[ index ] = controller;

		}

		return controller.getTargetRaySpace();

	};

	this.getControllerGrip = function ( index ) {

		let controller = controllers[ index ];

		if ( controller === undefined ) {

			controller = new WebXRController();
			controllers[ index ] = controller;

		}

		return controller.getGripSpace();

	};

	this.getHand = function ( index ) {

		let controller = controllers[ index ];

		if ( controller === undefined ) {

			controller = new WebXRController();
			controllers[ index ] = controller;

		}

		return controller.getHandSpace();

	};

	//

	function onSessionEvent( event ) {

		const controller = inputSourcesMap.get( event.inputSource );

		if ( controller ) {

			controller.dispatchEvent( { type: event.type, data: event.inputSource } );

		}

	}

	function onSessionEnd() {

		inputSourcesMap.forEach( function ( controller, inputSource ) {

			controller.disconnect( inputSource );

		} );

		inputSourcesMap.clear();

		_currentDepthNear = null;
		_currentDepthFar = null;

		//

		renderer.setFramebuffer( null );
		renderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830
		animation.stop();

		scope.isPresenting = false;

		scope.dispatchEvent( { type: 'sessionend' } );

	}

	this.setFramebufferScaleFactor = function ( value ) {

		framebufferScaleFactor = value;

		if ( scope.isPresenting === true ) {

			console.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );

		}

	};

	this.setReferenceSpaceType = function ( value ) {

		referenceSpaceType = value;

		if ( scope.isPresenting === true ) {

			console.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );

		}

	};

	this.getReferenceSpace = function () {

		return referenceSpace;

	};

	this.getSession = function () {

		return session;

	};

	this.setSession = async function ( value ) {

		session = value;

		if ( session !== null ) {

			session.addEventListener( 'select', onSessionEvent );
			session.addEventListener( 'selectstart', onSessionEvent );
			session.addEventListener( 'selectend', onSessionEvent );
			session.addEventListener( 'squeeze', onSessionEvent );
			session.addEventListener( 'squeezestart', onSessionEvent );
			session.addEventListener( 'squeezeend', onSessionEvent );
			session.addEventListener( 'end', onSessionEnd );
			session.addEventListener( 'inputsourceschange', onInputSourcesChange );

			const attributes = gl.getContextAttributes();

			if ( attributes.xrCompatible !== true ) {

				await gl.makeXRCompatible();

			}

			const layerInit = {
				antialias: attributes.antialias,
				alpha: attributes.alpha,
				depth: attributes.depth,
				stencil: attributes.stencil,
				framebufferScaleFactor: framebufferScaleFactor
			};

			// eslint-disable-next-line no-undef
			const baseLayer = new XRWebGLLayer( session, gl, layerInit );

			session.updateRenderState( { baseLayer: baseLayer } );

			referenceSpace = await session.requestReferenceSpace( referenceSpaceType );

			animation.setContext( session );
			animation.start();

			scope.isPresenting = true;

			scope.dispatchEvent( { type: 'sessionstart' } );

		}

	};

	function onInputSourcesChange( event ) {

		const inputSources = session.inputSources;

		// Assign inputSources to available controllers

		for ( let i = 0; i < controllers.length; i ++ ) {

			inputSourcesMap.set( inputSources[ i ], controllers[ i ] );

		}

		// Notify disconnected

		for ( let i = 0; i < event.removed.length; i ++ ) {

			const inputSource = event.removed[ i ];
			const controller = inputSourcesMap.get( inputSource );

			if ( controller ) {

				controller.dispatchEvent( { type: 'disconnected', data: inputSource } );
				inputSourcesMap.delete( inputSource );

			}

		}

		// Notify connected

		for ( let i = 0; i < event.added.length; i ++ ) {

			const inputSource = event.added[ i ];
			const controller = inputSourcesMap.get( inputSource );

			if ( controller ) {

				controller.dispatchEvent( { type: 'connected', data: inputSource } );

			}

		}

	}

	//

	const cameraLPos = new Vector3();
	const cameraRPos = new Vector3();

	/**
	 * Assumes 2 cameras that are parallel and share an X-axis, and that
	 * the cameras' projection and world matrices have already been set.
	 * And that near and far planes are identical for both cameras.
	 * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
	 */
	function setProjectionFromUnion( camera, cameraL, cameraR ) {

		cameraLPos.setFromMatrixPosition( cameraL.matrixWorld );
		cameraRPos.setFromMatrixPosition( cameraR.matrixWorld );

		const ipd = cameraLPos.distanceTo( cameraRPos );

		const projL = cameraL.projectionMatrix.elements;
		const projR = cameraR.projectionMatrix.elements;

		// VR systems will have identical far and near planes, and
		// most likely identical top and bottom frustum extents.
		// Use the left camera for these values.
		const near = projL[ 14 ] / ( projL[ 10 ] - 1 );
		const far = projL[ 14 ] / ( projL[ 10 ] + 1 );
		const topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];
		const bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];

		const leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];
		const rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];
		const left = near * leftFov;
		const right = near * rightFov;

		// Calculate the new camera's position offset from the
		// left camera. xOffset should be roughly half `ipd`.
		const zOffset = ipd / ( - leftFov + rightFov );
		const xOffset = zOffset * - leftFov;

		// TODO: Better way to apply this offset?
		cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );
		camera.translateX( xOffset );
		camera.translateZ( zOffset );
		camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );
		camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();

		// Find the union of the frustum values of the cameras and scale
		// the values so that the near plane's position does not change in world space,
		// although must now be relative to the new union camera.
		const near2 = near + zOffset;
		const far2 = far + zOffset;
		const left2 = left - xOffset;
		const right2 = right + ( ipd - xOffset );
		const top2 = topFov * far / far2 * near2;
		const bottom2 = bottomFov * far / far2 * near2;

		camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );

	}

	function updateCamera( camera, parent ) {

		if ( parent === null ) {

			camera.matrixWorld.copy( camera.matrix );

		} else {

			camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );

		}

		camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();

	}

	this.getCamera = function ( camera ) {

		cameraVR.near = cameraR.near = cameraL.near = camera.near;
		cameraVR.far = cameraR.far = cameraL.far = camera.far;

		if ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {

			// Note that the new renderState won't apply until the next frame. See #18320

			session.updateRenderState( {
				depthNear: cameraVR.near,
				depthFar: cameraVR.far
			} );

			_currentDepthNear = cameraVR.near;
			_currentDepthFar = cameraVR.far;

		}

		const parent = camera.parent;
		const cameras = cameraVR.cameras;

		updateCamera( cameraVR, parent );

		for ( let i = 0; i < cameras.length; i ++ ) {

			updateCamera( cameras[ i ], parent );

		}

		// update camera and its children

		camera.matrixWorld.copy( cameraVR.matrixWorld );
		camera.matrix.copy( cameraVR.matrix );
		camera.matrix.decompose( camera.position, camera.quaternion, camera.scale );

		const children = camera.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			children[ i ].updateMatrixWorld( true );

		}

		// update projection matrix for proper view frustum culling

		if ( cameras.length === 2 ) {

			setProjectionFromUnion( cameraVR, cameraL, cameraR );

		} else {

			// assume single camera setup (AR)

			cameraVR.projectionMatrix.copy( cameraL.projectionMatrix );

		}

		return cameraVR;

	};

	// Animation Loop

	let onAnimationFrameCallback = null;

	function onAnimationFrame( time, frame ) {

		pose = frame.getViewerPose( referenceSpace );

		if ( pose !== null ) {

			const views = pose.views;
			const baseLayer = session.renderState.baseLayer;

			renderer.setFramebuffer( baseLayer.framebuffer );

			let cameraVRNeedsUpdate = false;

			// check if it's necessary to rebuild cameraVR's camera list

			if ( views.length !== cameraVR.cameras.length ) {

				cameraVR.cameras.length = 0;
				cameraVRNeedsUpdate = true;

			}

			for ( let i = 0; i < views.length; i ++ ) {

				const view = views[ i ];
				const viewport = baseLayer.getViewport( view );

				const camera = cameras[ i ];
				camera.matrix.fromArray( view.transform.matrix );
				camera.projectionMatrix.fromArray( view.projectionMatrix );
				camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );

				if ( i === 0 ) {

					cameraVR.matrix.copy( camera.matrix );

				}

				if ( cameraVRNeedsUpdate === true ) {

					cameraVR.cameras.push( camera );

				}

			}

		}

		//

		const inputSources = session.inputSources;

		for ( let i = 0; i < controllers.length; i ++ ) {

			const controller = controllers[ i ];
			const inputSource = inputSources[ i ];

			controller.update( inputSource, frame, referenceSpace );

		}

		if ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );

	}

	const animation = new WebGLAnimation();
	animation.setAnimationLoop( onAnimationFrame );

	this.setAnimationLoop = function ( callback ) {

		onAnimationFrameCallback = callback;

	};

	this.dispose = function () {};

}

Object.assign( WebXRManager.prototype, EventDispatcher.prototype );

function WebGLMaterials( properties ) {

	function refreshFogUniforms( uniforms, fog ) {

		uniforms.fogColor.value.copy( fog.color );

		if ( fog.isFog ) {

			uniforms.fogNear.value = fog.near;
			uniforms.fogFar.value = fog.far;

		} else if ( fog.isFogExp2 ) {

			uniforms.fogDensity.value = fog.density;

		}

	}

	function refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {

		if ( material.isMeshBasicMaterial ) {

			refreshUniformsCommon( uniforms, material );

		} else if ( material.isMeshLambertMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsLambert( uniforms, material );

		} else if ( material.isMeshToonMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsToon( uniforms, material );

		} else if ( material.isMeshPhongMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsPhong( uniforms, material );

		} else if ( material.isMeshStandardMaterial ) {

			refreshUniformsCommon( uniforms, material );

			if ( material.isMeshPhysicalMaterial ) {

				refreshUniformsPhysical( uniforms, material );

			} else {

				refreshUniformsStandard( uniforms, material );

			}

		} else if ( material.isMeshMatcapMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsMatcap( uniforms, material );

		} else if ( material.isMeshDepthMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsDepth( uniforms, material );

		} else if ( material.isMeshDistanceMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsDistance( uniforms, material );

		} else if ( material.isMeshNormalMaterial ) {

			refreshUniformsCommon( uniforms, material );
			refreshUniformsNormal( uniforms, material );

		} else if ( material.isLineBasicMaterial ) {

			refreshUniformsLine( uniforms, material );

			if ( material.isLineDashedMaterial ) {

				refreshUniformsDash( uniforms, material );

			}

		} else if ( material.isPointsMaterial ) {

			refreshUniformsPoints( uniforms, material, pixelRatio, height );

		} else if ( material.isSpriteMaterial ) {

			refreshUniformsSprites( uniforms, material );

		} else if ( material.isShadowMaterial ) {

			uniforms.color.value.copy( material.color );
			uniforms.opacity.value = material.opacity;

		} else if ( material.isShaderMaterial ) {

			material.uniformsNeedUpdate = false; // #15581

		}

	}

	function refreshUniformsCommon( uniforms, material ) {

		uniforms.opacity.value = material.opacity;

		if ( material.color ) {

			uniforms.diffuse.value.copy( material.color );

		}

		if ( material.emissive ) {

			uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );

		}

		if ( material.map ) {

			uniforms.map.value = material.map;

		}

		if ( material.alphaMap ) {

			uniforms.alphaMap.value = material.alphaMap;

		}

		if ( material.specularMap ) {

			uniforms.specularMap.value = material.specularMap;

		}

		const envMap = properties.get( material ).envMap;

		if ( envMap ) {

			uniforms.envMap.value = envMap;

			uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;

			uniforms.reflectivity.value = material.reflectivity;
			uniforms.refractionRatio.value = material.refractionRatio;

			const maxMipLevel = properties.get( envMap ).__maxMipLevel;

			if ( maxMipLevel !== undefined ) {

				uniforms.maxMipLevel.value = maxMipLevel;

			}

		}

		if ( material.lightMap ) {

			uniforms.lightMap.value = material.lightMap;
			uniforms.lightMapIntensity.value = material.lightMapIntensity;

		}

		if ( material.aoMap ) {

			uniforms.aoMap.value = material.aoMap;
			uniforms.aoMapIntensity.value = material.aoMapIntensity;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. specular map
		// 3. displacementMap map
		// 4. normal map
		// 5. bump map
		// 6. roughnessMap map
		// 7. metalnessMap map
		// 8. alphaMap map
		// 9. emissiveMap map
		// 10. clearcoat map
		// 11. clearcoat normal map
		// 12. clearcoat roughnessMap map

		let uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.specularMap ) {

			uvScaleMap = material.specularMap;

		} else if ( material.displacementMap ) {

			uvScaleMap = material.displacementMap;

		} else if ( material.normalMap ) {

			uvScaleMap = material.normalMap;

		} else if ( material.bumpMap ) {

			uvScaleMap = material.bumpMap;

		} else if ( material.roughnessMap ) {

			uvScaleMap = material.roughnessMap;

		} else if ( material.metalnessMap ) {

			uvScaleMap = material.metalnessMap;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		} else if ( material.emissiveMap ) {

			uvScaleMap = material.emissiveMap;

		} else if ( material.clearcoatMap ) {

			uvScaleMap = material.clearcoatMap;

		} else if ( material.clearcoatNormalMap ) {

			uvScaleMap = material.clearcoatNormalMap;

		} else if ( material.clearcoatRoughnessMap ) {

			uvScaleMap = material.clearcoatRoughnessMap;

		}

		if ( uvScaleMap !== undefined ) {

			// backwards compatibility
			if ( uvScaleMap.isWebGLRenderTarget ) {

				uvScaleMap = uvScaleMap.texture;

			}

			if ( uvScaleMap.matrixAutoUpdate === true ) {

				uvScaleMap.updateMatrix();

			}

			uniforms.uvTransform.value.copy( uvScaleMap.matrix );

		}

		// uv repeat and offset setting priorities for uv2
		// 1. ao map
		// 2. light map

		let uv2ScaleMap;

		if ( material.aoMap ) {

			uv2ScaleMap = material.aoMap;

		} else if ( material.lightMap ) {

			uv2ScaleMap = material.lightMap;

		}

		if ( uv2ScaleMap !== undefined ) {

			// backwards compatibility
			if ( uv2ScaleMap.isWebGLRenderTarget ) {

				uv2ScaleMap = uv2ScaleMap.texture;

			}

			if ( uv2ScaleMap.matrixAutoUpdate === true ) {

				uv2ScaleMap.updateMatrix();

			}

			uniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );

		}

	}

	function refreshUniformsLine( uniforms, material ) {

		uniforms.diffuse.value.copy( material.color );
		uniforms.opacity.value = material.opacity;

	}

	function refreshUniformsDash( uniforms, material ) {

		uniforms.dashSize.value = material.dashSize;
		uniforms.totalSize.value = material.dashSize + material.gapSize;
		uniforms.scale.value = material.scale;

	}

	function refreshUniformsPoints( uniforms, material, pixelRatio, height ) {

		uniforms.diffuse.value.copy( material.color );
		uniforms.opacity.value = material.opacity;
		uniforms.size.value = material.size * pixelRatio;
		uniforms.scale.value = height * 0.5;

		if ( material.map ) {

			uniforms.map.value = material.map;

		}

		if ( material.alphaMap ) {

			uniforms.alphaMap.value = material.alphaMap;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. alpha map

		let uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		}

		if ( uvScaleMap !== undefined ) {

			if ( uvScaleMap.matrixAutoUpdate === true ) {

				uvScaleMap.updateMatrix();

			}

			uniforms.uvTransform.value.copy( uvScaleMap.matrix );

		}

	}

	function refreshUniformsSprites( uniforms, material ) {

		uniforms.diffuse.value.copy( material.color );
		uniforms.opacity.value = material.opacity;
		uniforms.rotation.value = material.rotation;

		if ( material.map ) {

			uniforms.map.value = material.map;

		}

		if ( material.alphaMap ) {

			uniforms.alphaMap.value = material.alphaMap;

		}

		// uv repeat and offset setting priorities
		// 1. color map
		// 2. alpha map

		let uvScaleMap;

		if ( material.map ) {

			uvScaleMap = material.map;

		} else if ( material.alphaMap ) {

			uvScaleMap = material.alphaMap;

		}

		if ( uvScaleMap !== undefined ) {

			if ( uvScaleMap.matrixAutoUpdate === true ) {

				uvScaleMap.updateMatrix();

			}

			uniforms.uvTransform.value.copy( uvScaleMap.matrix );

		}

	}

	function refreshUniformsLambert( uniforms, material ) {

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

	}

	function refreshUniformsPhong( uniforms, material ) {

		uniforms.specular.value.copy( material.specular );
		uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsToon( uniforms, material ) {

		if ( material.gradientMap ) {

			uniforms.gradientMap.value = material.gradientMap;

		}

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsStandard( uniforms, material ) {

		uniforms.roughness.value = material.roughness;
		uniforms.metalness.value = material.metalness;

		if ( material.roughnessMap ) {

			uniforms.roughnessMap.value = material.roughnessMap;

		}

		if ( material.metalnessMap ) {

			uniforms.metalnessMap.value = material.metalnessMap;

		}

		if ( material.emissiveMap ) {

			uniforms.emissiveMap.value = material.emissiveMap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

		const envMap = properties.get( material ).envMap;

		if ( envMap ) {

			//uniforms.envMap.value = material.envMap; // part of uniforms common
			uniforms.envMapIntensity.value = material.envMapIntensity;

		}

	}

	function refreshUniformsPhysical( uniforms, material ) {

		refreshUniformsStandard( uniforms, material );

		uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common

		uniforms.clearcoat.value = material.clearcoat;
		uniforms.clearcoatRoughness.value = material.clearcoatRoughness;
		if ( material.sheen ) uniforms.sheen.value.copy( material.sheen );

		if ( material.clearcoatMap ) {

			uniforms.clearcoatMap.value = material.clearcoatMap;

		}

		if ( material.clearcoatRoughnessMap ) {

			uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;

		}

		if ( material.clearcoatNormalMap ) {

			uniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );
			uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;

			if ( material.side === BackSide ) {

				uniforms.clearcoatNormalScale.value.negate();

			}

		}

		uniforms.transmission.value = material.transmission;

		if ( material.transmissionMap ) {

			uniforms.transmissionMap.value = material.transmissionMap;

		}

	}

	function refreshUniformsMatcap( uniforms, material ) {

		if ( material.matcap ) {

			uniforms.matcap.value = material.matcap;

		}

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsDepth( uniforms, material ) {

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	function refreshUniformsDistance( uniforms, material ) {

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

		uniforms.referencePosition.value.copy( material.referencePosition );
		uniforms.nearDistance.value = material.nearDistance;
		uniforms.farDistance.value = material.farDistance;

	}

	function refreshUniformsNormal( uniforms, material ) {

		if ( material.bumpMap ) {

			uniforms.bumpMap.value = material.bumpMap;
			uniforms.bumpScale.value = material.bumpScale;
			if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;

		}

		if ( material.normalMap ) {

			uniforms.normalMap.value = material.normalMap;
			uniforms.normalScale.value.copy( material.normalScale );
			if ( material.side === BackSide ) uniforms.normalScale.value.negate();

		}

		if ( material.displacementMap ) {

			uniforms.displacementMap.value = material.displacementMap;
			uniforms.displacementScale.value = material.displacementScale;
			uniforms.displacementBias.value = material.displacementBias;

		}

	}

	return {
		refreshFogUniforms: refreshFogUniforms,
		refreshMaterialUniforms: refreshMaterialUniforms
	};

}

function createCanvasElement() {

	const canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );
	canvas.style.display = 'block';
	return canvas;

}

function WebGLRenderer( parameters ) {

	parameters = parameters || {};

	const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),
		_context = parameters.context !== undefined ? parameters.context : null,

		_alpha = parameters.alpha !== undefined ? parameters.alpha : false,
		_depth = parameters.depth !== undefined ? parameters.depth : true,
		_stencil = parameters.stencil !== undefined ? parameters.stencil : true,
		_antialias = parameters.antialias !== undefined ? parameters.antialias : false,
		_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,
		_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,
		_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',
		_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;

	let currentRenderList = null;
	let currentRenderState = null;

	// render() can be called from within a callback triggered by another render.
	// We track this so that the nested render call gets its list and state isolated from the parent render call.

	const renderListStack = [];
	const renderStateStack = [];

	// public properties

	this.domElement = _canvas;

	// Debug configuration container
	this.debug = {

		/**
		 * Enables error checking and reporting when shader programs are being compiled
		 * @type {boolean}
		 */
		checkShaderErrors: true
	};

	// clearing

	this.autoClear = true;
	this.autoClearColor = true;
	this.autoClearDepth = true;
	this.autoClearStencil = true;

	// scene graph

	this.sortObjects = true;

	// user-defined clipping

	this.clippingPlanes = [];
	this.localClippingEnabled = false;

	// physically based shading

	this.gammaFactor = 2.0;	// for backwards compatibility
	this.outputEncoding = LinearEncoding;

	// physical lights

	this.physicallyCorrectLights = false;

	// tone mapping

	this.toneMapping = NoToneMapping;
	this.toneMappingExposure = 1.0;

	// morphs

	this.maxMorphTargets = 8;
	this.maxMorphNormals = 4;

	// internal properties

	const _this = this;

	let _isContextLost = false;

	// internal state cache

	let _framebuffer = null;

	let _currentActiveCubeFace = 0;
	let _currentActiveMipmapLevel = 0;
	let _currentRenderTarget = null;
	let _currentFramebuffer = null;
	let _currentMaterialId = - 1;

	let _currentCamera = null;

	const _currentViewport = new Vector4();
	const _currentScissor = new Vector4();
	let _currentScissorTest = null;

	//

	let _width = _canvas.width;
	let _height = _canvas.height;

	let _pixelRatio = 1;
	let _opaqueSort = null;
	let _transparentSort = null;

	const _viewport = new Vector4( 0, 0, _width, _height );
	const _scissor = new Vector4( 0, 0, _width, _height );
	let _scissorTest = false;

	// frustum

	const _frustum = new Frustum();

	// clipping

	let _clippingEnabled = false;
	let _localClippingEnabled = false;

	// camera matrices cache

	const _projScreenMatrix = new Matrix4();

	const _vector3 = new Vector3();

	const _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };

	function getTargetPixelRatio() {

		return _currentRenderTarget === null ? _pixelRatio : 1;

	}

	// initialize

	let _gl = _context;

	function getContext( contextNames, contextAttributes ) {

		for ( let i = 0; i < contextNames.length; i ++ ) {

			const contextName = contextNames[ i ];
			const context = _canvas.getContext( contextName, contextAttributes );
			if ( context !== null ) return context;

		}

		return null;

	}

	try {

		const contextAttributes = {
			alpha: _alpha,
			depth: _depth,
			stencil: _stencil,
			antialias: _antialias,
			premultipliedAlpha: _premultipliedAlpha,
			preserveDrawingBuffer: _preserveDrawingBuffer,
			powerPreference: _powerPreference,
			failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat
		};

		// event listeners must be registered before WebGL context is created, see #12753

		_canvas.addEventListener( 'webglcontextlost', onContextLost, false );
		_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );

		if ( _gl === null ) {

			const contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];

			if ( _this.isWebGL1Renderer === true ) {

				contextNames.shift();

			}

			_gl = getContext( contextNames, contextAttributes );

			if ( _gl === null ) {

				if ( getContext( contextNames ) ) {

					throw new Error( 'Error creating WebGL context with your selected attributes.' );

				} else {

					throw new Error( 'Error creating WebGL context.' );

				}

			}

		}

		// Some experimental-webgl implementations do not have getShaderPrecisionFormat

		if ( _gl.getShaderPrecisionFormat === undefined ) {

			_gl.getShaderPrecisionFormat = function () {

				return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };

			};

		}

	} catch ( error ) {

		console.error( 'THREE.WebGLRenderer: ' + error.message );
		throw error;

	}

	let extensions, capabilities, state, info;
	let properties, textures, cubemaps, attributes, geometries, objects;
	let programCache, materials, renderLists, renderStates, clipping;

	let background, morphtargets, bufferRenderer, indexedBufferRenderer;

	let utils, bindingStates;

	function initGLContext() {

		extensions = new WebGLExtensions( _gl );

		capabilities = new WebGLCapabilities( _gl, extensions, parameters );

		extensions.init( capabilities );

		utils = new WebGLUtils( _gl, extensions, capabilities );

		state = new WebGLState( _gl, extensions, capabilities );
		state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );
		state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );

		info = new WebGLInfo( _gl );
		properties = new WebGLProperties();
		textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );
		cubemaps = new WebGLCubeMaps( _this );
		attributes = new WebGLAttributes( _gl, capabilities );
		bindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );
		geometries = new WebGLGeometries( _gl, attributes, info, bindingStates );
		objects = new WebGLObjects( _gl, geometries, attributes, info );
		morphtargets = new WebGLMorphtargets( _gl );
		clipping = new WebGLClipping( properties );
		programCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );
		materials = new WebGLMaterials( properties );
		renderLists = new WebGLRenderLists( properties );
		renderStates = new WebGLRenderStates( extensions, capabilities );
		background = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );

		bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );
		indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );

		info.programs = programCache.programs;

		_this.capabilities = capabilities;
		_this.extensions = extensions;
		_this.properties = properties;
		_this.renderLists = renderLists;
		_this.state = state;
		_this.info = info;

	}

	initGLContext();

	// xr

	const xr = new WebXRManager( _this, _gl );

	this.xr = xr;

	// shadow map

	const shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );

	this.shadowMap = shadowMap;

	// API

	this.getContext = function () {

		return _gl;

	};

	this.getContextAttributes = function () {

		return _gl.getContextAttributes();

	};

	this.forceContextLoss = function () {

		const extension = extensions.get( 'WEBGL_lose_context' );
		if ( extension ) extension.loseContext();

	};

	this.forceContextRestore = function () {

		const extension = extensions.get( 'WEBGL_lose_context' );
		if ( extension ) extension.restoreContext();

	};

	this.getPixelRatio = function () {

		return _pixelRatio;

	};

	this.setPixelRatio = function ( value ) {

		if ( value === undefined ) return;

		_pixelRatio = value;

		this.setSize( _width, _height, false );

	};

	this.getSize = function ( target ) {

		if ( target === undefined ) {

			console.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );

			target = new Vector2();

		}

		return target.set( _width, _height );

	};

	this.setSize = function ( width, height, updateStyle ) {

		if ( xr.isPresenting ) {

			console.warn( 'THREE.WebGLRenderer: Can\'t change size while VR device is presenting.' );
			return;

		}

		_width = width;
		_height = height;

		_canvas.width = Math.floor( width * _pixelRatio );
		_canvas.height = Math.floor( height * _pixelRatio );

		if ( updateStyle !== false ) {

			_canvas.style.width = width + 'px';
			_canvas.style.height = height + 'px';

		}

		this.setViewport( 0, 0, width, height );

	};

	this.getDrawingBufferSize = function ( target ) {

		if ( target === undefined ) {

			console.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );

			target = new Vector2();

		}

		return target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();

	};

	this.setDrawingBufferSize = function ( width, height, pixelRatio ) {

		_width = width;
		_height = height;

		_pixelRatio = pixelRatio;

		_canvas.width = Math.floor( width * pixelRatio );
		_canvas.height = Math.floor( height * pixelRatio );

		this.setViewport( 0, 0, width, height );

	};

	this.getCurrentViewport = function ( target ) {

		if ( target === undefined ) {

			console.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );

			target = new Vector4();

		}

		return target.copy( _currentViewport );

	};

	this.getViewport = function ( target ) {

		return target.copy( _viewport );

	};

	this.setViewport = function ( x, y, width, height ) {

		if ( x.isVector4 ) {

			_viewport.set( x.x, x.y, x.z, x.w );

		} else {

			_viewport.set( x, y, width, height );

		}

		state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );

	};

	this.getScissor = function ( target ) {

		return target.copy( _scissor );

	};

	this.setScissor = function ( x, y, width, height ) {

		if ( x.isVector4 ) {

			_scissor.set( x.x, x.y, x.z, x.w );

		} else {

			_scissor.set( x, y, width, height );

		}

		state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );

	};

	this.getScissorTest = function () {

		return _scissorTest;

	};

	this.setScissorTest = function ( boolean ) {

		state.setScissorTest( _scissorTest = boolean );

	};

	this.setOpaqueSort = function ( method ) {

		_opaqueSort = method;

	};

	this.setTransparentSort = function ( method ) {

		_transparentSort = method;

	};

	// Clearing

	this.getClearColor = function ( target ) {

		if ( target === undefined ) {

			console.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );

			target = new Color();

		}

		return target.copy( background.getClearColor() );

	};

	this.setClearColor = function () {

		background.setClearColor.apply( background, arguments );

	};

	this.getClearAlpha = function () {

		return background.getClearAlpha();

	};

	this.setClearAlpha = function () {

		background.setClearAlpha.apply( background, arguments );

	};

	this.clear = function ( color, depth, stencil ) {

		let bits = 0;

		if ( color === undefined || color ) bits |= 16384;
		if ( depth === undefined || depth ) bits |= 256;
		if ( stencil === undefined || stencil ) bits |= 1024;

		_gl.clear( bits );

	};

	this.clearColor = function () {

		this.clear( true, false, false );

	};

	this.clearDepth = function () {

		this.clear( false, true, false );

	};

	this.clearStencil = function () {

		this.clear( false, false, true );

	};

	//

	this.dispose = function () {

		_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );
		_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );

		renderLists.dispose();
		renderStates.dispose();
		properties.dispose();
		cubemaps.dispose();
		objects.dispose();
		bindingStates.dispose();

		xr.dispose();

		animation.stop();

	};

	// Events

	function onContextLost( event ) {

		event.preventDefault();

		console.log( 'THREE.WebGLRenderer: Context Lost.' );

		_isContextLost = true;

	}

	function onContextRestore( /* event */ ) {

		console.log( 'THREE.WebGLRenderer: Context Restored.' );

		_isContextLost = false;

		initGLContext();

	}

	function onMaterialDispose( event ) {

		const material = event.target;

		material.removeEventListener( 'dispose', onMaterialDispose );

		deallocateMaterial( material );

	}

	// Buffer deallocation

	function deallocateMaterial( material ) {

		releaseMaterialProgramReference( material );

		properties.remove( material );

	}


	function releaseMaterialProgramReference( material ) {

		const programInfo = properties.get( material ).program;

		if ( programInfo !== undefined ) {

			programCache.releaseProgram( programInfo );

		}

	}

	// Buffer rendering

	function renderObjectImmediate( object, program ) {

		object.render( function ( object ) {

			_this.renderBufferImmediate( object, program );

		} );

	}

	this.renderBufferImmediate = function ( object, program ) {

		bindingStates.initAttributes();

		const buffers = properties.get( object );

		if ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();
		if ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();
		if ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();
		if ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();

		const programAttributes = program.getAttributes();

		if ( object.hasPositions ) {

			_gl.bindBuffer( 34962, buffers.position );
			_gl.bufferData( 34962, object.positionArray, 35048 );

			bindingStates.enableAttribute( programAttributes.position );
			_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );

		}

		if ( object.hasNormals ) {

			_gl.bindBuffer( 34962, buffers.normal );
			_gl.bufferData( 34962, object.normalArray, 35048 );

			bindingStates.enableAttribute( programAttributes.normal );
			_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );

		}

		if ( object.hasUvs ) {

			_gl.bindBuffer( 34962, buffers.uv );
			_gl.bufferData( 34962, object.uvArray, 35048 );

			bindingStates.enableAttribute( programAttributes.uv );
			_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );

		}

		if ( object.hasColors ) {

			_gl.bindBuffer( 34962, buffers.color );
			_gl.bufferData( 34962, object.colorArray, 35048 );

			bindingStates.enableAttribute( programAttributes.color );
			_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );

		}

		bindingStates.disableUnusedAttributes();

		_gl.drawArrays( 4, 0, object.count );

		object.count = 0;

	};

	this.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {

		if ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)

		const frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );

		const program = setProgram( camera, scene, material, object );

		state.setMaterial( material, frontFaceCW );

		//

		let index = geometry.index;
		const position = geometry.attributes.position;

		//

		if ( index === null ) {

			if ( position === undefined || position.count === 0 ) return;

		} else if ( index.count === 0 ) {

			return;

		}

		//

		let rangeFactor = 1;

		if ( material.wireframe === true ) {

			index = geometries.getWireframeAttribute( geometry );
			rangeFactor = 2;

		}

		if ( material.morphTargets || material.morphNormals ) {

			morphtargets.update( object, geometry, material, program );

		}

		bindingStates.setup( object, material, program, geometry, index );

		let attribute;
		let renderer = bufferRenderer;

		if ( index !== null ) {

			attribute = attributes.get( index );

			renderer = indexedBufferRenderer;
			renderer.setIndex( attribute );

		}

		//

		const dataCount = ( index !== null ) ? index.count : position.count;

		const rangeStart = geometry.drawRange.start * rangeFactor;
		const rangeCount = geometry.drawRange.count * rangeFactor;

		const groupStart = group !== null ? group.start * rangeFactor : 0;
		const groupCount = group !== null ? group.count * rangeFactor : Infinity;

		const drawStart = Math.max( rangeStart, groupStart );
		const drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;

		const drawCount = Math.max( 0, drawEnd - drawStart + 1 );

		if ( drawCount === 0 ) return;

		//

		if ( object.isMesh ) {

			if ( material.wireframe === true ) {

				state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );
				renderer.setMode( 1 );

			} else {

				renderer.setMode( 4 );

			}

		} else if ( object.isLine ) {

			let lineWidth = material.linewidth;

			if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material

			state.setLineWidth( lineWidth * getTargetPixelRatio() );

			if ( object.isLineSegments ) {

				renderer.setMode( 1 );

			} else if ( object.isLineLoop ) {

				renderer.setMode( 2 );

			} else {

				renderer.setMode( 3 );

			}

		} else if ( object.isPoints ) {

			renderer.setMode( 0 );

		} else if ( object.isSprite ) {

			renderer.setMode( 4 );

		}

		if ( object.isInstancedMesh ) {

			renderer.renderInstances( drawStart, drawCount, object.count );

		} else if ( geometry.isInstancedBufferGeometry ) {

			const instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );

			renderer.renderInstances( drawStart, drawCount, instanceCount );

		} else {

			renderer.render( drawStart, drawCount );

		}

	};

	// Compile

	this.compile = function ( scene, camera ) {

		currentRenderState = renderStates.get( scene );
		currentRenderState.init();

		scene.traverseVisible( function ( object ) {

			if ( object.isLight && object.layers.test( camera.layers ) ) {

				currentRenderState.pushLight( object );

				if ( object.castShadow ) {

					currentRenderState.pushShadow( object );

				}

			}

		} );

		currentRenderState.setupLights();

		const compiled = new WeakMap();

		scene.traverse( function ( object ) {

			const material = object.material;

			if ( material ) {

				if ( Array.isArray( material ) ) {

					for ( let i = 0; i < material.length; i ++ ) {

						const material2 = material[ i ];

						if ( compiled.has( material2 ) === false ) {

							initMaterial( material2, scene, object );
							compiled.set( material2 );

						}

					}

				} else if ( compiled.has( material ) === false ) {

					initMaterial( material, scene, object );
					compiled.set( material );

				}

			}

		} );

	};

	// Animation Loop

	let onAnimationFrameCallback = null;

	function onAnimationFrame( time ) {

		if ( xr.isPresenting ) return;
		if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );

	}

	const animation = new WebGLAnimation();
	animation.setAnimationLoop( onAnimationFrame );

	if ( typeof window !== 'undefined' ) animation.setContext( window );

	this.setAnimationLoop = function ( callback ) {

		onAnimationFrameCallback = callback;
		xr.setAnimationLoop( callback );

		( callback === null ) ? animation.stop() : animation.start();

	};

	// Rendering

	this.render = function ( scene, camera ) {

		let renderTarget, forceClear;

		if ( arguments[ 2 ] !== undefined ) {

			console.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );
			renderTarget = arguments[ 2 ];

		}

		if ( arguments[ 3 ] !== undefined ) {

			console.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );
			forceClear = arguments[ 3 ];

		}

		if ( camera !== undefined && camera.isCamera !== true ) {

			console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );
			return;

		}

		if ( _isContextLost === true ) return;

		// reset caching for this frame

		bindingStates.resetDefaultState();
		_currentMaterialId = - 1;
		_currentCamera = null;

		// update scene graph

		if ( scene.autoUpdate === true ) scene.updateMatrixWorld();

		// update camera matrices and frustum

		if ( camera.parent === null ) camera.updateMatrixWorld();

		if ( xr.enabled === true && xr.isPresenting === true ) {

			camera = xr.getCamera( camera );

		}

		//
		if ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );

		currentRenderState = renderStates.get( scene, renderStateStack.length );
		currentRenderState.init();

		renderStateStack.push( currentRenderState );

		_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		_frustum.setFromProjectionMatrix( _projScreenMatrix );

		_localClippingEnabled = this.localClippingEnabled;
		_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );

		currentRenderList = renderLists.get( scene, renderListStack.length );
		currentRenderList.init();

		renderListStack.push( currentRenderList );

		projectObject( scene, camera, 0, _this.sortObjects );

		currentRenderList.finish();

		if ( _this.sortObjects === true ) {

			currentRenderList.sort( _opaqueSort, _transparentSort );

		}

		//

		if ( _clippingEnabled === true ) clipping.beginShadows();

		const shadowsArray = currentRenderState.state.shadowsArray;

		shadowMap.render( shadowsArray, scene, camera );

		currentRenderState.setupLights();
		currentRenderState.setupLightsView( camera );

		if ( _clippingEnabled === true ) clipping.endShadows();

		//

		if ( this.info.autoReset === true ) this.info.reset();

		if ( renderTarget !== undefined ) {

			this.setRenderTarget( renderTarget );

		}

		//

		background.render( currentRenderList, scene, camera, forceClear );

		// render scene

		const opaqueObjects = currentRenderList.opaque;
		const transparentObjects = currentRenderList.transparent;

		if ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );
		if ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );

		//

		if ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );

		//

		if ( _currentRenderTarget !== null ) {

			// Generate mipmap if we're using any kind of mipmap filtering

			textures.updateRenderTargetMipmap( _currentRenderTarget );

			// resolve multisample renderbuffers to a single-sample texture if necessary

			textures.updateMultisampleRenderTarget( _currentRenderTarget );

		}

		// Ensure depth buffer writing is enabled so it can be cleared on next render

		state.buffers.depth.setTest( true );
		state.buffers.depth.setMask( true );
		state.buffers.color.setMask( true );

		state.setPolygonOffset( false );

		// _gl.finish();

		renderStateStack.pop();

		if ( renderStateStack.length > 0 ) {

			currentRenderState = renderStateStack[ renderStateStack.length - 1 ];

		} else {

			currentRenderState = null;

		}

		renderListStack.pop();

		if ( renderListStack.length > 0 ) {

			currentRenderList = renderListStack[ renderListStack.length - 1 ];

		} else {

			currentRenderList = null;

		}

	};

	function projectObject( object, camera, groupOrder, sortObjects ) {

		if ( object.visible === false ) return;

		const visible = object.layers.test( camera.layers );

		if ( visible ) {

			if ( object.isGroup ) {

				groupOrder = object.renderOrder;

			} else if ( object.isLOD ) {

				if ( object.autoUpdate === true ) object.update( camera );

			} else if ( object.isLight ) {

				currentRenderState.pushLight( object );

				if ( object.castShadow ) {

					currentRenderState.pushShadow( object );

				}

			} else if ( object.isSprite ) {

				if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {

					if ( sortObjects ) {

						_vector3.setFromMatrixPosition( object.matrixWorld )
							.applyMatrix4( _projScreenMatrix );

					}

					const geometry = objects.update( object );
					const material = object.material;

					if ( material.visible ) {

						currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );

					}

				}

			} else if ( object.isImmediateRenderObject ) {

				if ( sortObjects ) {

					_vector3.setFromMatrixPosition( object.matrixWorld )
						.applyMatrix4( _projScreenMatrix );

				}

				currentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );

			} else if ( object.isMesh || object.isLine || object.isPoints ) {

				if ( object.isSkinnedMesh ) {

					// update skeleton only once in a frame

					if ( object.skeleton.frame !== info.render.frame ) {

						object.skeleton.update();
						object.skeleton.frame = info.render.frame;

					}

				}

				if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {

					if ( sortObjects ) {

						_vector3.setFromMatrixPosition( object.matrixWorld )
							.applyMatrix4( _projScreenMatrix );

					}

					const geometry = objects.update( object );
					const material = object.material;

					if ( Array.isArray( material ) ) {

						const groups = geometry.groups;

						for ( let i = 0, l = groups.length; i < l; i ++ ) {

							const group = groups[ i ];
							const groupMaterial = material[ group.materialIndex ];

							if ( groupMaterial && groupMaterial.visible ) {

								currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );

							}

						}

					} else if ( material.visible ) {

						currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );

					}

				}

			}

		}

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			projectObject( children[ i ], camera, groupOrder, sortObjects );

		}

	}

	function renderObjects( renderList, scene, camera ) {

		const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;

		for ( let i = 0, l = renderList.length; i < l; i ++ ) {

			const renderItem = renderList[ i ];

			const object = renderItem.object;
			const geometry = renderItem.geometry;
			const material = overrideMaterial === null ? renderItem.material : overrideMaterial;
			const group = renderItem.group;

			if ( camera.isArrayCamera ) {

				const cameras = camera.cameras;

				for ( let j = 0, jl = cameras.length; j < jl; j ++ ) {

					const camera2 = cameras[ j ];

					if ( object.layers.test( camera2.layers ) ) {

						state.viewport( _currentViewport.copy( camera2.viewport ) );

						currentRenderState.setupLightsView( camera2 );

						renderObject( object, scene, camera2, geometry, material, group );

					}

				}

			} else {

				renderObject( object, scene, camera, geometry, material, group );

			}

		}

	}

	function renderObject( object, scene, camera, geometry, material, group ) {

		object.onBeforeRender( _this, scene, camera, geometry, material, group );

		object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );
		object.normalMatrix.getNormalMatrix( object.modelViewMatrix );

		if ( object.isImmediateRenderObject ) {

			const program = setProgram( camera, scene, material, object );

			state.setMaterial( material );

			bindingStates.reset();

			renderObjectImmediate( object, program );

		} else {

			_this.renderBufferDirect( camera, scene, geometry, material, object, group );

		}

		object.onAfterRender( _this, scene, camera, geometry, material, group );

	}

	function initMaterial( material, scene, object ) {

		if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...

		const materialProperties = properties.get( material );

		const lights = currentRenderState.state.lights;
		const shadowsArray = currentRenderState.state.shadowsArray;

		const lightsStateVersion = lights.state.version;

		const parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );
		const programCacheKey = programCache.getProgramCacheKey( parameters );

		let program = materialProperties.program;
		let programChange = true;

		// always update environment and fog - changing these trigger an initMaterial call, but it's possible that the program doesn't change

		materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;
		materialProperties.fog = scene.fog;
		materialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );

		if ( program === undefined ) {

			// new material
			material.addEventListener( 'dispose', onMaterialDispose );

		} else if ( program.cacheKey !== programCacheKey ) {

			// changed glsl or parameters
			releaseMaterialProgramReference( material );

		} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {

			programChange = false;

		} else if ( parameters.shaderID !== undefined ) {

			// same glsl and uniform list
			return;

		} else {

			// only rebuild uniform list
			programChange = false;

		}

		if ( programChange ) {

			parameters.uniforms = programCache.getUniforms( material );

			material.onBeforeCompile( parameters, _this );

			program = programCache.acquireProgram( parameters, programCacheKey );

			materialProperties.program = program;
			materialProperties.uniforms = parameters.uniforms;
			materialProperties.outputEncoding = parameters.outputEncoding;

		}

		const uniforms = materialProperties.uniforms;

		if ( ! material.isShaderMaterial &&
			! material.isRawShaderMaterial ||
			material.clipping === true ) {

			materialProperties.numClippingPlanes = clipping.numPlanes;
			materialProperties.numIntersection = clipping.numIntersection;
			uniforms.clippingPlanes = clipping.uniform;

		}

		// store the light setup it was created for

		materialProperties.needsLights = materialNeedsLights( material );
		materialProperties.lightsStateVersion = lightsStateVersion;

		if ( materialProperties.needsLights ) {

			// wire up the material to this renderer's lighting state

			uniforms.ambientLightColor.value = lights.state.ambient;
			uniforms.lightProbe.value = lights.state.probe;
			uniforms.directionalLights.value = lights.state.directional;
			uniforms.directionalLightShadows.value = lights.state.directionalShadow;
			uniforms.spotLights.value = lights.state.spot;
			uniforms.spotLightShadows.value = lights.state.spotShadow;
			uniforms.rectAreaLights.value = lights.state.rectArea;
			uniforms.ltc_1.value = lights.state.rectAreaLTC1;
			uniforms.ltc_2.value = lights.state.rectAreaLTC2;
			uniforms.pointLights.value = lights.state.point;
			uniforms.pointLightShadows.value = lights.state.pointShadow;
			uniforms.hemisphereLights.value = lights.state.hemi;

			uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;
			uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;
			uniforms.spotShadowMap.value = lights.state.spotShadowMap;
			uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;
			uniforms.pointShadowMap.value = lights.state.pointShadowMap;
			uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;
			// TODO (abelnation): add area lights shadow info to uniforms

		}

		const progUniforms = materialProperties.program.getUniforms();
		const uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );

		materialProperties.uniformsList = uniformsList;

	}

	function setProgram( camera, scene, material, object ) {

		if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...

		textures.resetTextureUnits();

		const fog = scene.fog;
		const environment = material.isMeshStandardMaterial ? scene.environment : null;
		const encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;
		const envMap = cubemaps.get( material.envMap || environment );

		const materialProperties = properties.get( material );
		const lights = currentRenderState.state.lights;

		if ( _clippingEnabled === true ) {

			if ( _localClippingEnabled === true || camera !== _currentCamera ) {

				const useCache =
					camera === _currentCamera &&
					material.id === _currentMaterialId;

				// we might want to call this function with some ClippingGroup
				// object instead of the material, once it becomes feasible
				// (#8465, #8379)
				clipping.setState( material, camera, useCache );

			}

		}

		if ( material.version === materialProperties.__version ) {

			if ( material.fog && materialProperties.fog !== fog ) {

				initMaterial( material, scene, object );

			} else if ( materialProperties.environment !== environment ) {

				initMaterial( material, scene, object );

			} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {

				initMaterial( material, scene, object );

			} else if ( materialProperties.numClippingPlanes !== undefined &&
				( materialProperties.numClippingPlanes !== clipping.numPlanes ||
				materialProperties.numIntersection !== clipping.numIntersection ) ) {

				initMaterial( material, scene, object );

			} else if ( materialProperties.outputEncoding !== encoding ) {

				initMaterial( material, scene, object );

			} else if ( materialProperties.envMap !== envMap ) {

				initMaterial( material, scene, object );

			}

		} else {

			initMaterial( material, scene, object );
			materialProperties.__version = material.version;

		}

		let refreshProgram = false;
		let refreshMaterial = false;
		let refreshLights = false;

		const program = materialProperties.program,
			p_uniforms = program.getUniforms(),
			m_uniforms = materialProperties.uniforms;

		if ( state.useProgram( program.program ) ) {

			refreshProgram = true;
			refreshMaterial = true;
			refreshLights = true;

		}

		if ( material.id !== _currentMaterialId ) {

			_currentMaterialId = material.id;

			refreshMaterial = true;

		}

		if ( refreshProgram || _currentCamera !== camera ) {

			p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );

			if ( capabilities.logarithmicDepthBuffer ) {

				p_uniforms.setValue( _gl, 'logDepthBufFC',
					2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );

			}

			if ( _currentCamera !== camera ) {

				_currentCamera = camera;

				// lighting uniforms depend on the camera so enforce an update
				// now, in case this material supports lights - or later, when
				// the next material that does gets activated:

				refreshMaterial = true;		// set to true on material change
				refreshLights = true;		// remains set until update done

			}

			// load material specific uniforms
			// (shader material also gets them for the sake of genericity)

			if ( material.isShaderMaterial ||
				material.isMeshPhongMaterial ||
				material.isMeshToonMaterial ||
				material.isMeshStandardMaterial ||
				material.envMap ) {

				const uCamPos = p_uniforms.map.cameraPosition;

				if ( uCamPos !== undefined ) {

					uCamPos.setValue( _gl,
						_vector3.setFromMatrixPosition( camera.matrixWorld ) );

				}

			}

			if ( material.isMeshPhongMaterial ||
				material.isMeshToonMaterial ||
				material.isMeshLambertMaterial ||
				material.isMeshBasicMaterial ||
				material.isMeshStandardMaterial ||
				material.isShaderMaterial ) {

				p_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );

			}

			if ( material.isMeshPhongMaterial ||
				material.isMeshToonMaterial ||
				material.isMeshLambertMaterial ||
				material.isMeshBasicMaterial ||
				material.isMeshStandardMaterial ||
				material.isShaderMaterial ||
				material.isShadowMaterial ||
				material.skinning ) {

				p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );

			}

		}

		// skinning uniforms must be set even if material didn't change
		// auto-setting of texture unit for bone texture must go before other textures
		// otherwise textures used for skinning can take over texture units reserved for other material textures

		if ( material.skinning ) {

			p_uniforms.setOptional( _gl, object, 'bindMatrix' );
			p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );

			const skeleton = object.skeleton;

			if ( skeleton ) {

				const bones = skeleton.bones;

				if ( capabilities.floatVertexTextures ) {

					if ( skeleton.boneTexture === null ) {

						// layout (1 matrix = 4 pixels)
						//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
						//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
						//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
						//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
						//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)


						let size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix
						size = MathUtils.ceilPowerOfTwo( size );
						size = Math.max( size, 4 );

						const boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel
						boneMatrices.set( skeleton.boneMatrices ); // copy current values

						const boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );

						skeleton.boneMatrices = boneMatrices;
						skeleton.boneTexture = boneTexture;
						skeleton.boneTextureSize = size;

					}

					p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );
					p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );

				} else {

					p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );

				}

			}

		}

		if ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {

			materialProperties.receiveShadow = object.receiveShadow;
			p_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );

		}

		if ( refreshMaterial ) {

			p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );

			if ( materialProperties.needsLights ) {

				// the current material requires lighting info

				// note: all lighting uniforms are always set correctly
				// they simply reference the renderer's state for their
				// values
				//
				// use the current material's .needsUpdate flags to set
				// the GL state when required

				markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );

			}

			// refresh uniforms common to several materials

			if ( fog && material.fog ) {

				materials.refreshFogUniforms( m_uniforms, fog );

			}

			materials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );

			WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );

		}

		if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {

			WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );
			material.uniformsNeedUpdate = false;

		}

		if ( material.isSpriteMaterial ) {

			p_uniforms.setValue( _gl, 'center', object.center );

		}

		// common matrices

		p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );
		p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );
		p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );

		return program;

	}

	// If uniforms are marked as clean, they don't need to be loaded to the GPU.

	function markUniformsLightsNeedsUpdate( uniforms, value ) {

		uniforms.ambientLightColor.needsUpdate = value;
		uniforms.lightProbe.needsUpdate = value;

		uniforms.directionalLights.needsUpdate = value;
		uniforms.directionalLightShadows.needsUpdate = value;
		uniforms.pointLights.needsUpdate = value;
		uniforms.pointLightShadows.needsUpdate = value;
		uniforms.spotLights.needsUpdate = value;
		uniforms.spotLightShadows.needsUpdate = value;
		uniforms.rectAreaLights.needsUpdate = value;
		uniforms.hemisphereLights.needsUpdate = value;

	}

	function materialNeedsLights( material ) {

		return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||
			material.isMeshStandardMaterial || material.isShadowMaterial ||
			( material.isShaderMaterial && material.lights === true );

	}

	//
	this.setFramebuffer = function ( value ) {

		if ( _framebuffer !== value && _currentRenderTarget === null ) _gl.bindFramebuffer( 36160, value );

		_framebuffer = value;

	};

	this.getActiveCubeFace = function () {

		return _currentActiveCubeFace;

	};

	this.getActiveMipmapLevel = function () {

		return _currentActiveMipmapLevel;

	};

	this.getRenderTarget = function () {

		return _currentRenderTarget;

	};

	this.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {

		_currentRenderTarget = renderTarget;
		_currentActiveCubeFace = activeCubeFace;
		_currentActiveMipmapLevel = activeMipmapLevel;

		if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {

			textures.setupRenderTarget( renderTarget );

		}

		let framebuffer = _framebuffer;
		let isCube = false;
		let isRenderTarget3D = false;

		if ( renderTarget ) {

			const texture = renderTarget.texture;

			if ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {

				isRenderTarget3D = true;

			}

			const __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;

			if ( renderTarget.isWebGLCubeRenderTarget ) {

				framebuffer = __webglFramebuffer[ activeCubeFace ];
				isCube = true;

			} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {

				framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;

			} else {

				framebuffer = __webglFramebuffer;

			}

			_currentViewport.copy( renderTarget.viewport );
			_currentScissor.copy( renderTarget.scissor );
			_currentScissorTest = renderTarget.scissorTest;

		} else {

			_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();
			_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();
			_currentScissorTest = _scissorTest;

		}

		if ( _currentFramebuffer !== framebuffer ) {

			_gl.bindFramebuffer( 36160, framebuffer );
			_currentFramebuffer = framebuffer;

		}

		state.viewport( _currentViewport );
		state.scissor( _currentScissor );
		state.setScissorTest( _currentScissorTest );

		if ( isCube ) {

			const textureProperties = properties.get( renderTarget.texture );
			_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );

		} else if ( isRenderTarget3D ) {

			const textureProperties = properties.get( renderTarget.texture );
			const layer = activeCubeFace || 0;
			_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );

		}

	};

	this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {

		if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {

			console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );
			return;

		}

		let framebuffer = properties.get( renderTarget ).__webglFramebuffer;

		if ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {

			framebuffer = framebuffer[ activeCubeFaceIndex ];

		}

		if ( framebuffer ) {

			let restore = false;

			if ( framebuffer !== _currentFramebuffer ) {

				_gl.bindFramebuffer( 36160, framebuffer );

				restore = true;

			}

			try {

				const texture = renderTarget.texture;
				const textureFormat = texture.format;
				const textureType = texture.type;

				if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );
					return;

				}

				const halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );

				if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)
					! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox
					! halfFloatSupportedByExt ) {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );
					return;

				}

				if ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {

					// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)

					if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {

						_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );

					}

				} else {

					console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );

				}

			} finally {

				if ( restore ) {

					_gl.bindFramebuffer( 36160, _currentFramebuffer );

				}

			}

		}

	};

	this.copyFramebufferToTexture = function ( position, texture, level = 0 ) {

		const levelScale = Math.pow( 2, - level );
		const width = Math.floor( texture.image.width * levelScale );
		const height = Math.floor( texture.image.height * levelScale );
		const glFormat = utils.convert( texture.format );

		textures.setTexture2D( texture, 0 );

		_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );

		state.unbindTexture();

	};

	this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {

		const width = srcTexture.image.width;
		const height = srcTexture.image.height;
		const glFormat = utils.convert( dstTexture.format );
		const glType = utils.convert( dstTexture.type );

		textures.setTexture2D( dstTexture, 0 );

		// As another texture upload may have changed pixelStorei
		// parameters, make sure they are correct for the dstTexture
		_gl.pixelStorei( 37440, dstTexture.flipY );
		_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );
		_gl.pixelStorei( 3317, dstTexture.unpackAlignment );

		if ( srcTexture.isDataTexture ) {

			_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );

		} else {

			if ( srcTexture.isCompressedTexture ) {

				_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );

			} else {

				_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );

			}

		}

		// Generate mipmaps only when copying level 0
		if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );

		state.unbindTexture();

	};

	this.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {

		if ( _this.isWebGL1Renderer ) {

			console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );
			return;

		}

		const { width, height, data } = srcTexture.image;
		const glFormat = utils.convert( dstTexture.format );
		const glType = utils.convert( dstTexture.type );
		let glTarget;

		if ( dstTexture.isDataTexture3D ) {

			textures.setTexture3D( dstTexture, 0 );
			glTarget = 32879;

		} else if ( dstTexture.isDataTexture2DArray ) {

			textures.setTexture2DArray( dstTexture, 0 );
			glTarget = 35866;

		} else {

			console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );
			return;

		}

		_gl.pixelStorei( 37440, dstTexture.flipY );
		_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );
		_gl.pixelStorei( 3317, dstTexture.unpackAlignment );

		const unpackRowLen = _gl.getParameter( 3314 );
		const unpackImageHeight = _gl.getParameter( 32878 );
		const unpackSkipPixels = _gl.getParameter( 3316 );
		const unpackSkipRows = _gl.getParameter( 3315 );
		const unpackSkipImages = _gl.getParameter( 32877 );

		_gl.pixelStorei( 3314, width );
		_gl.pixelStorei( 32878, height );
		_gl.pixelStorei( 3316, sourceBox.min.x );
		_gl.pixelStorei( 3315, sourceBox.min.y );
		_gl.pixelStorei( 32877, sourceBox.min.z );

		_gl.texSubImage3D(
			glTarget,
			level,
			position.x,
			position.y,
			position.z,
			sourceBox.max.x - sourceBox.min.x + 1,
			sourceBox.max.y - sourceBox.min.y + 1,
			sourceBox.max.z - sourceBox.min.z + 1,
			glFormat,
			glType,
			data
		);

		_gl.pixelStorei( 3314, unpackRowLen );
		_gl.pixelStorei( 32878, unpackImageHeight );
		_gl.pixelStorei( 3316, unpackSkipPixels );
		_gl.pixelStorei( 3315, unpackSkipRows );
		_gl.pixelStorei( 32877, unpackSkipImages );

		// Generate mipmaps only when copying level 0
		if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );

		state.unbindTexture();

	};

	this.initTexture = function ( texture ) {

		textures.setTexture2D( texture, 0 );

		state.unbindTexture();

	};

	this.resetState = function () {

		state.reset();
		bindingStates.reset();

	};

	if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

		__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef

	}

}

class WebGL1Renderer extends WebGLRenderer {}

WebGL1Renderer.prototype.isWebGL1Renderer = true;

class FogExp2 {

	constructor( color, density ) {

		this.name = '';

		this.color = new Color( color );
		this.density = ( density !== undefined ) ? density : 0.00025;

	}

	clone() {

		return new FogExp2( this.color, this.density );

	}

	toJSON( /* meta */ ) {

		return {
			type: 'FogExp2',
			color: this.color.getHex(),
			density: this.density
		};

	}

}

FogExp2.prototype.isFogExp2 = true;

class Fog {

	constructor( color, near, far ) {

		this.name = '';

		this.color = new Color( color );

		this.near = ( near !== undefined ) ? near : 1;
		this.far = ( far !== undefined ) ? far : 1000;

	}

	clone() {

		return new Fog( this.color, this.near, this.far );

	}

	toJSON( /* meta */ ) {

		return {
			type: 'Fog',
			color: this.color.getHex(),
			near: this.near,
			far: this.far
		};

	}

}

Fog.prototype.isFog = true;

class Scene extends Object3D {

	constructor() {

		super();

		this.type = 'Scene';

		this.background = null;
		this.environment = null;
		this.fog = null;

		this.overrideMaterial = null;

		this.autoUpdate = true; // checked by the renderer

		if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

			__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef

		}

	}

	copy( source, recursive ) {

		super.copy( source, recursive );

		if ( source.background !== null ) this.background = source.background.clone();
		if ( source.environment !== null ) this.environment = source.environment.clone();
		if ( source.fog !== null ) this.fog = source.fog.clone();

		if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();

		this.autoUpdate = source.autoUpdate;
		this.matrixAutoUpdate = source.matrixAutoUpdate;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		if ( this.background !== null ) data.object.background = this.background.toJSON( meta );
		if ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );
		if ( this.fog !== null ) data.object.fog = this.fog.toJSON();

		return data;

	}

}

Scene.prototype.isScene = true;

function InterleavedBuffer( array, stride ) {

	this.array = array;
	this.stride = stride;
	this.count = array !== undefined ? array.length / stride : 0;

	this.usage = StaticDrawUsage;
	this.updateRange = { offset: 0, count: - 1 };

	this.version = 0;

	this.uuid = MathUtils.generateUUID();

}

Object.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

Object.assign( InterleavedBuffer.prototype, {

	isInterleavedBuffer: true,

	onUploadCallback: function () {},

	setUsage: function ( value ) {

		this.usage = value;

		return this;

	},

	copy: function ( source ) {

		this.array = new source.array.constructor( source.array );
		this.count = source.count;
		this.stride = source.stride;
		this.usage = source.usage;

		return this;

	},

	copyAt: function ( index1, attribute, index2 ) {

		index1 *= this.stride;
		index2 *= attribute.stride;

		for ( let i = 0, l = this.stride; i < l; i ++ ) {

			this.array[ index1 + i ] = attribute.array[ index2 + i ];

		}

		return this;

	},

	set: function ( value, offset = 0 ) {

		this.array.set( value, offset );

		return this;

	},

	clone: function ( data ) {

		if ( data.arrayBuffers === undefined ) {

			data.arrayBuffers = {};

		}

		if ( this.array.buffer._uuid === undefined ) {

			this.array.buffer._uuid = MathUtils.generateUUID();

		}

		if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {

			data.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;

		}

		const array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );

		const ib = new InterleavedBuffer( array, this.stride );
		ib.setUsage( this.usage );

		return ib;

	},

	onUpload: function ( callback ) {

		this.onUploadCallback = callback;

		return this;

	},

	toJSON: function ( data ) {

		if ( data.arrayBuffers === undefined ) {

			data.arrayBuffers = {};

		}

		// generate UUID for array buffer if necessary

		if ( this.array.buffer._uuid === undefined ) {

			this.array.buffer._uuid = MathUtils.generateUUID();

		}

		if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {

			data.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );

		}

		//

		return {
			uuid: this.uuid,
			buffer: this.array.buffer._uuid,
			type: this.array.constructor.name,
			stride: this.stride
		};

	}

} );

const _vector$6 = new Vector3();

function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {

	this.name = '';

	this.data = interleavedBuffer;
	this.itemSize = itemSize;
	this.offset = offset;

	this.normalized = normalized === true;

}

Object.defineProperties( InterleavedBufferAttribute.prototype, {

	count: {

		get: function () {

			return this.data.count;

		}

	},

	array: {

		get: function () {

			return this.data.array;

		}

	},

	needsUpdate: {

		set: function ( value ) {

			this.data.needsUpdate = value;

		}

	}

} );

Object.assign( InterleavedBufferAttribute.prototype, {

	isInterleavedBufferAttribute: true,

	applyMatrix4: function ( m ) {

		for ( let i = 0, l = this.data.count; i < l; i ++ ) {

			_vector$6.x = this.getX( i );
			_vector$6.y = this.getY( i );
			_vector$6.z = this.getZ( i );

			_vector$6.applyMatrix4( m );

			this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );

		}

		return this;

	},

	setX: function ( index, x ) {

		this.data.array[ index * this.data.stride + this.offset ] = x;

		return this;

	},

	setY: function ( index, y ) {

		this.data.array[ index * this.data.stride + this.offset + 1 ] = y;

		return this;

	},

	setZ: function ( index, z ) {

		this.data.array[ index * this.data.stride + this.offset + 2 ] = z;

		return this;

	},

	setW: function ( index, w ) {

		this.data.array[ index * this.data.stride + this.offset + 3 ] = w;

		return this;

	},

	getX: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset ];

	},

	getY: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 1 ];

	},

	getZ: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 2 ];

	},

	getW: function ( index ) {

		return this.data.array[ index * this.data.stride + this.offset + 3 ];

	},

	setXY: function ( index, x, y ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;

		return this;

	},

	setXYZ: function ( index, x, y, z ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;
		this.data.array[ index + 2 ] = z;

		return this;

	},

	setXYZW: function ( index, x, y, z, w ) {

		index = index * this.data.stride + this.offset;

		this.data.array[ index + 0 ] = x;
		this.data.array[ index + 1 ] = y;
		this.data.array[ index + 2 ] = z;
		this.data.array[ index + 3 ] = w;

		return this;

	},

	clone: function ( data ) {

		if ( data === undefined ) {

			console.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );

			const array = [];

			for ( let i = 0; i < this.count; i ++ ) {

				const index = i * this.data.stride + this.offset;

				for ( let j = 0; j < this.itemSize; j ++ ) {

					array.push( this.data.array[ index + j ] );

				}

			}

			return new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );

		} else {

			if ( data.interleavedBuffers === undefined ) {

				data.interleavedBuffers = {};

			}

			if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {

				data.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );

			}

			return new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );

		}

	},

	toJSON: function ( data ) {

		if ( data === undefined ) {

			console.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );

			const array = [];

			for ( let i = 0; i < this.count; i ++ ) {

				const index = i * this.data.stride + this.offset;

				for ( let j = 0; j < this.itemSize; j ++ ) {

					array.push( this.data.array[ index + j ] );

				}

			}

			// deinterleave data and save it as an ordinary buffer attribute for now

			return {
				itemSize: this.itemSize,
				type: this.array.constructor.name,
				array: array,
				normalized: this.normalized
			};

		} else {

			// save as true interlaved attribtue

			if ( data.interleavedBuffers === undefined ) {

				data.interleavedBuffers = {};

			}

			if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {

				data.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );

			}

			return {
				isInterleavedBufferAttribute: true,
				itemSize: this.itemSize,
				data: this.data.uuid,
				offset: this.offset,
				normalized: this.normalized
			};

		}

	}

} );

/**
 * parameters = {
 *  color: <hex>,
 *  map: new THREE.Texture( <Image> ),
 *  alphaMap: new THREE.Texture( <Image> ),
 *  rotation: <float>,
 *  sizeAttenuation: <bool>
 * }
 */

class SpriteMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'SpriteMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;

		this.alphaMap = null;

		this.rotation = 0;

		this.sizeAttenuation = true;

		this.transparent = true;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.rotation = source.rotation;

		this.sizeAttenuation = source.sizeAttenuation;

		return this;

	}

}

SpriteMaterial.prototype.isSpriteMaterial = true;

let _geometry;

const _intersectPoint = /*@__PURE__*/ new Vector3();
const _worldScale = /*@__PURE__*/ new Vector3();
const _mvPosition = /*@__PURE__*/ new Vector3();

const _alignedPosition = /*@__PURE__*/ new Vector2();
const _rotatedPosition = /*@__PURE__*/ new Vector2();
const _viewWorldMatrix = /*@__PURE__*/ new Matrix4();

const _vA$1 = /*@__PURE__*/ new Vector3();
const _vB$1 = /*@__PURE__*/ new Vector3();
const _vC$1 = /*@__PURE__*/ new Vector3();

const _uvA$1 = /*@__PURE__*/ new Vector2();
const _uvB$1 = /*@__PURE__*/ new Vector2();
const _uvC$1 = /*@__PURE__*/ new Vector2();

class Sprite extends Object3D {

	constructor( material ) {

		super();

		this.type = 'Sprite';

		if ( _geometry === undefined ) {

			_geometry = new BufferGeometry();

			const float32Array = new Float32Array( [
				- 0.5, - 0.5, 0, 0, 0,
				0.5, - 0.5, 0, 1, 0,
				0.5, 0.5, 0, 1, 1,
				- 0.5, 0.5, 0, 0, 1
			] );

			const interleavedBuffer = new InterleavedBuffer( float32Array, 5 );

			_geometry.setIndex( [ 0, 1, 2,	0, 2, 3 ] );
			_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );
			_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );

		}

		this.geometry = _geometry;
		this.material = ( material !== undefined ) ? material : new SpriteMaterial();

		this.center = new Vector2( 0.5, 0.5 );

	}

	raycast( raycaster, intersects ) {

		if ( raycaster.camera === null ) {

			console.error( 'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.' );

		}

		_worldScale.setFromMatrixScale( this.matrixWorld );

		_viewWorldMatrix.copy( raycaster.camera.matrixWorld );
		this.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );

		_mvPosition.setFromMatrixPosition( this.modelViewMatrix );

		if ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {

			_worldScale.multiplyScalar( - _mvPosition.z );

		}

		const rotation = this.material.rotation;
		let sin, cos;

		if ( rotation !== 0 ) {

			cos = Math.cos( rotation );
			sin = Math.sin( rotation );

		}

		const center = this.center;

		transformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
		transformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
		transformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );

		_uvA$1.set( 0, 0 );
		_uvB$1.set( 1, 0 );
		_uvC$1.set( 1, 1 );

		// check first triangle
		let intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );

		if ( intersect === null ) {

			// check second triangle
			transformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
			_uvB$1.set( 0, 1 );

			intersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );
			if ( intersect === null ) {

				return;

			}

		}

		const distance = raycaster.ray.origin.distanceTo( _intersectPoint );

		if ( distance < raycaster.near || distance > raycaster.far ) return;

		intersects.push( {

			distance: distance,
			point: _intersectPoint.clone(),
			uv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),
			face: null,
			object: this

		} );

	}

	copy( source ) {

		super.copy( source );

		if ( source.center !== undefined ) this.center.copy( source.center );

		this.material = source.material;

		return this;

	}

}

Sprite.prototype.isSprite = true;

function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {

	// compute position in camera space
	_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );

	// to check if rotation is not zero
	if ( sin !== undefined ) {

		_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );
		_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );

	} else {

		_rotatedPosition.copy( _alignedPosition );

	}


	vertexPosition.copy( mvPosition );
	vertexPosition.x += _rotatedPosition.x;
	vertexPosition.y += _rotatedPosition.y;

	// transform to world space
	vertexPosition.applyMatrix4( _viewWorldMatrix );

}

const _v1$4 = /*@__PURE__*/ new Vector3();
const _v2$2 = /*@__PURE__*/ new Vector3();

class LOD extends Object3D {

	constructor() {

		super();

		this._currentLevel = 0;

		this.type = 'LOD';

		Object.defineProperties( this, {
			levels: {
				enumerable: true,
				value: []
			},
			isLOD: {
				value: true,
			}
		} );

		this.autoUpdate = true;

	}

	copy( source ) {

		super.copy( source, false );

		const levels = source.levels;

		for ( let i = 0, l = levels.length; i < l; i ++ ) {

			const level = levels[ i ];

			this.addLevel( level.object.clone(), level.distance );

		}

		this.autoUpdate = source.autoUpdate;

		return this;

	}

	addLevel( object, distance = 0 ) {

		distance = Math.abs( distance );

		const levels = this.levels;

		let l;

		for ( l = 0; l < levels.length; l ++ ) {

			if ( distance < levels[ l ].distance ) {

				break;

			}

		}

		levels.splice( l, 0, { distance: distance, object: object } );

		this.add( object );

		return this;

	}

	getCurrentLevel() {

		return this._currentLevel;

	}

	getObjectForDistance( distance ) {

		const levels = this.levels;

		if ( levels.length > 0 ) {

			let i, l;

			for ( i = 1, l = levels.length; i < l; i ++ ) {

				if ( distance < levels[ i ].distance ) {

					break;

				}

			}

			return levels[ i - 1 ].object;

		}

		return null;

	}

	raycast( raycaster, intersects ) {

		const levels = this.levels;

		if ( levels.length > 0 ) {

			_v1$4.setFromMatrixPosition( this.matrixWorld );

			const distance = raycaster.ray.origin.distanceTo( _v1$4 );

			this.getObjectForDistance( distance ).raycast( raycaster, intersects );

		}

	}

	update( camera ) {

		const levels = this.levels;

		if ( levels.length > 1 ) {

			_v1$4.setFromMatrixPosition( camera.matrixWorld );
			_v2$2.setFromMatrixPosition( this.matrixWorld );

			const distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;

			levels[ 0 ].object.visible = true;

			let i, l;

			for ( i = 1, l = levels.length; i < l; i ++ ) {

				if ( distance >= levels[ i ].distance ) {

					levels[ i - 1 ].object.visible = false;
					levels[ i ].object.visible = true;

				} else {

					break;

				}

			}

			this._currentLevel = i - 1;

			for ( ; i < l; i ++ ) {

				levels[ i ].object.visible = false;

			}

		}

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		if ( this.autoUpdate === false ) data.object.autoUpdate = false;

		data.object.levels = [];

		const levels = this.levels;

		for ( let i = 0, l = levels.length; i < l; i ++ ) {

			const level = levels[ i ];

			data.object.levels.push( {
				object: level.object.uuid,
				distance: level.distance
			} );

		}

		return data;

	}

}

const _basePosition = new Vector3();

const _skinIndex = new Vector4();
const _skinWeight = new Vector4();

const _vector$7 = new Vector3();
const _matrix$1 = new Matrix4();

function SkinnedMesh( geometry, material ) {

	Mesh.call( this, geometry, material );

	this.type = 'SkinnedMesh';

	this.bindMode = 'attached';
	this.bindMatrix = new Matrix4();
	this.bindMatrixInverse = new Matrix4();

}

SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {

	constructor: SkinnedMesh,

	isSkinnedMesh: true,

	copy: function ( source ) {

		Mesh.prototype.copy.call( this, source );

		this.bindMode = source.bindMode;
		this.bindMatrix.copy( source.bindMatrix );
		this.bindMatrixInverse.copy( source.bindMatrixInverse );

		this.skeleton = source.skeleton;

		return this;

	},

	bind: function ( skeleton, bindMatrix ) {

		this.skeleton = skeleton;

		if ( bindMatrix === undefined ) {

			this.updateMatrixWorld( true );

			this.skeleton.calculateInverses();

			bindMatrix = this.matrixWorld;

		}

		this.bindMatrix.copy( bindMatrix );
		this.bindMatrixInverse.copy( bindMatrix ).invert();

	},

	pose: function () {

		this.skeleton.pose();

	},

	normalizeSkinWeights: function () {

		const vector = new Vector4();

		const skinWeight = this.geometry.attributes.skinWeight;

		for ( let i = 0, l = skinWeight.count; i < l; i ++ ) {

			vector.x = skinWeight.getX( i );
			vector.y = skinWeight.getY( i );
			vector.z = skinWeight.getZ( i );
			vector.w = skinWeight.getW( i );

			const scale = 1.0 / vector.manhattanLength();

			if ( scale !== Infinity ) {

				vector.multiplyScalar( scale );

			} else {

				vector.set( 1, 0, 0, 0 ); // do something reasonable

			}

			skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );

		}

	},

	updateMatrixWorld: function ( force ) {

		Mesh.prototype.updateMatrixWorld.call( this, force );

		if ( this.bindMode === 'attached' ) {

			this.bindMatrixInverse.copy( this.matrixWorld ).invert();

		} else if ( this.bindMode === 'detached' ) {

			this.bindMatrixInverse.copy( this.bindMatrix ).invert();

		} else {

			console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );

		}

	},

	boneTransform: function ( index, target ) {

		const skeleton = this.skeleton;
		const geometry = this.geometry;

		_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );
		_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );

		_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );

		target.set( 0, 0, 0 );

		for ( let i = 0; i < 4; i ++ ) {

			const weight = _skinWeight.getComponent( i );

			if ( weight !== 0 ) {

				const boneIndex = _skinIndex.getComponent( i );

				_matrix$1.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );

				target.addScaledVector( _vector$7.copy( _basePosition ).applyMatrix4( _matrix$1 ), weight );

			}

		}

		return target.applyMatrix4( this.bindMatrixInverse );

	}

} );

function Bone() {

	Object3D.call( this );

	this.type = 'Bone';

}

Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Bone,

	isBone: true

} );

const _offsetMatrix = /*@__PURE__*/ new Matrix4();
const _identityMatrix = /*@__PURE__*/ new Matrix4();

class Skeleton {

	constructor( bones = [], boneInverses = [] ) {

		this.uuid = MathUtils.generateUUID();

		this.bones = bones.slice( 0 );
		this.boneInverses = boneInverses;
		this.boneMatrices = null;

		this.boneTexture = null;
		this.boneTextureSize = 0;

		this.frame = - 1;

		this.init();

	}

	init() {

		const bones = this.bones;
		const boneInverses = this.boneInverses;

		this.boneMatrices = new Float32Array( bones.length * 16 );

		// calculate inverse bone matrices if necessary

		if ( boneInverses.length === 0 ) {

			this.calculateInverses();

		} else {

			// handle special case

			if ( bones.length !== boneInverses.length ) {

				console.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );

				this.boneInverses = [];

				for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

					this.boneInverses.push( new Matrix4() );

				}

			}

		}

	}

	calculateInverses() {

		this.boneInverses.length = 0;

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const inverse = new Matrix4();

			if ( this.bones[ i ] ) {

				inverse.copy( this.bones[ i ].matrixWorld ).invert();

			}

			this.boneInverses.push( inverse );

		}

	}

	pose() {

		// recover the bind-time world matrices

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const bone = this.bones[ i ];

			if ( bone ) {

				bone.matrixWorld.copy( this.boneInverses[ i ] ).invert();

			}

		}

		// compute the local matrices, positions, rotations and scales

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const bone = this.bones[ i ];

			if ( bone ) {

				if ( bone.parent && bone.parent.isBone ) {

					bone.matrix.copy( bone.parent.matrixWorld ).invert();
					bone.matrix.multiply( bone.matrixWorld );

				} else {

					bone.matrix.copy( bone.matrixWorld );

				}

				bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );

			}

		}

	}

	update() {

		const bones = this.bones;
		const boneInverses = this.boneInverses;
		const boneMatrices = this.boneMatrices;
		const boneTexture = this.boneTexture;

		// flatten bone matrices to array

		for ( let i = 0, il = bones.length; i < il; i ++ ) {

			// compute the offset between the current and the original transform

			const matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;

			_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );
			_offsetMatrix.toArray( boneMatrices, i * 16 );

		}

		if ( boneTexture !== null ) {

			boneTexture.needsUpdate = true;

		}

	}

	clone() {

		return new Skeleton( this.bones, this.boneInverses );

	}

	getBoneByName( name ) {

		for ( let i = 0, il = this.bones.length; i < il; i ++ ) {

			const bone = this.bones[ i ];

			if ( bone.name === name ) {

				return bone;

			}

		}

		return undefined;

	}

	dispose( ) {

		if ( this.boneTexture !== null ) {

			this.boneTexture.dispose();

			this.boneTexture = null;

		}

	}

	fromJSON( json, bones ) {

		this.uuid = json.uuid;

		for ( let i = 0, l = json.bones.length; i < l; i ++ ) {

			const uuid = json.bones[ i ];
			let bone = bones[ uuid ];

			if ( bone === undefined ) {

				console.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );
				bone = new Bone();

			}

			this.bones.push( bone );
			this.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );

		}

		this.init();

		return this;

	}

	toJSON() {

		const data = {
			metadata: {
				version: 4.5,
				type: 'Skeleton',
				generator: 'Skeleton.toJSON'
			},
			bones: [],
			boneInverses: []
		};

		data.uuid = this.uuid;

		const bones = this.bones;
		const boneInverses = this.boneInverses;

		for ( let i = 0, l = bones.length; i < l; i ++ ) {

			const bone = bones[ i ];
			data.bones.push( bone.uuid );

			const boneInverse = boneInverses[ i ];
			data.boneInverses.push( boneInverse.toArray() );

		}

		return data;

	}

}

const _instanceLocalMatrix = new Matrix4();
const _instanceWorldMatrix = new Matrix4();

const _instanceIntersects = [];

const three_module_mesh = new Mesh();

function InstancedMesh( geometry, material, count ) {

	Mesh.call( this, geometry, material );

	this.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );
	this.instanceColor = null;

	this.count = count;

	this.frustumCulled = false;

}

InstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {

	constructor: InstancedMesh,

	isInstancedMesh: true,

	copy: function ( source ) {

		Mesh.prototype.copy.call( this, source );

		this.instanceMatrix.copy( source.instanceMatrix );

		if ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();

		this.count = source.count;

		return this;

	},

	getColorAt: function ( index, color ) {

		color.fromArray( this.instanceColor.array, index * 3 );

	},

	getMatrixAt: function ( index, matrix ) {

		matrix.fromArray( this.instanceMatrix.array, index * 16 );

	},

	raycast: function ( raycaster, intersects ) {

		const matrixWorld = this.matrixWorld;
		const raycastTimes = this.count;

		three_module_mesh.geometry = this.geometry;
		three_module_mesh.material = this.material;

		if ( three_module_mesh.material === undefined ) return;

		for ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {

			// calculate the world matrix for each instance

			this.getMatrixAt( instanceId, _instanceLocalMatrix );

			_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );

			// the mesh represents this single instance

			three_module_mesh.matrixWorld = _instanceWorldMatrix;

			three_module_mesh.raycast( raycaster, _instanceIntersects );

			// process the result of raycast

			for ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {

				const intersect = _instanceIntersects[ i ];
				intersect.instanceId = instanceId;
				intersect.object = this;
				intersects.push( intersect );

			}

			_instanceIntersects.length = 0;

		}

	},

	setColorAt: function ( index, color ) {

		if ( this.instanceColor === null ) {

			this.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );

		}

		color.toArray( this.instanceColor.array, index * 3 );

	},

	setMatrixAt: function ( index, matrix ) {

		matrix.toArray( this.instanceMatrix.array, index * 16 );

	},

	updateMorphTargets: function () {

	},

	dispose: function () {

		this.dispatchEvent( { type: 'dispose' } );

	}

} );

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *  linecap: "round",
 *  linejoin: "round"
 * }
 */

class LineBasicMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'LineBasicMaterial';

		this.color = new Color( 0xffffff );

		this.linewidth = 1;
		this.linecap = 'round';
		this.linejoin = 'round';

		this.morphTargets = false;

		this.setValues( parameters );

	}


	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.linewidth = source.linewidth;
		this.linecap = source.linecap;
		this.linejoin = source.linejoin;

		this.morphTargets = source.morphTargets;

		return this;

	}

}

LineBasicMaterial.prototype.isLineBasicMaterial = true;

const _start = new Vector3();
const _end = new Vector3();
const _inverseMatrix$1 = new Matrix4();
const _ray$1 = new Ray();
const _sphere$2 = new Sphere();

function Line( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {

	Object3D.call( this );

	this.type = 'Line';

	this.geometry = geometry;
	this.material = material;

	this.updateMorphTargets();

}

Line.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Line,

	isLine: true,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		this.material = source.material;
		this.geometry = source.geometry;

		return this;

	},

	computeLineDistances: function () {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			// we assume non-indexed geometry

			if ( geometry.index === null ) {

				const positionAttribute = geometry.attributes.position;
				const lineDistances = [ 0 ];

				for ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {

					_start.fromBufferAttribute( positionAttribute, i - 1 );
					_end.fromBufferAttribute( positionAttribute, i );

					lineDistances[ i ] = lineDistances[ i - 1 ];
					lineDistances[ i ] += _start.distanceTo( _end );

				}

				geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );

			} else {

				console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

		return this;

	},

	raycast: function ( raycaster, intersects ) {

		const geometry = this.geometry;
		const matrixWorld = this.matrixWorld;
		const threshold = raycaster.params.Line.threshold;

		// Checking boundingSphere distance to ray

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere$2.copy( geometry.boundingSphere );
		_sphere$2.applyMatrix4( matrixWorld );
		_sphere$2.radius += threshold;

		if ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) return;

		//

		_inverseMatrix$1.copy( matrixWorld ).invert();
		_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );

		const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
		const localThresholdSq = localThreshold * localThreshold;

		const vStart = new Vector3();
		const vEnd = new Vector3();
		const interSegment = new Vector3();
		const interRay = new Vector3();
		const step = this.isLineSegments ? 2 : 1;

		if ( geometry.isBufferGeometry ) {

			const index = geometry.index;
			const attributes = geometry.attributes;
			const positionAttribute = attributes.position;

			if ( index !== null ) {

				const indices = index.array;

				for ( let i = 0, l = indices.length - 1; i < l; i += step ) {

					const a = indices[ i ];
					const b = indices[ i + 1 ];

					vStart.fromBufferAttribute( positionAttribute, a );
					vEnd.fromBufferAttribute( positionAttribute, b );

					const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

					if ( distSq > localThresholdSq ) continue;

					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

					const distance = raycaster.ray.origin.distanceTo( interRay );

					if ( distance < raycaster.near || distance > raycaster.far ) continue;

					intersects.push( {

						distance: distance,
						// What do we want? intersection point on the ray or on the segment??
						// point: raycaster.ray.at( distance ),
						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
						index: i,
						face: null,
						faceIndex: null,
						object: this

					} );

				}

			} else {

				for ( let i = 0, l = positionAttribute.count - 1; i < l; i += step ) {

					vStart.fromBufferAttribute( positionAttribute, i );
					vEnd.fromBufferAttribute( positionAttribute, i + 1 );

					const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

					if ( distSq > localThresholdSq ) continue;

					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

					const distance = raycaster.ray.origin.distanceTo( interRay );

					if ( distance < raycaster.near || distance > raycaster.far ) continue;

					intersects.push( {

						distance: distance,
						// What do we want? intersection point on the ray or on the segment??
						// point: raycaster.ray.at( distance ),
						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
						index: i,
						face: null,
						faceIndex: null,
						object: this

					} );

				}

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

	},

	updateMorphTargets: function () {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			const morphAttributes = geometry.morphAttributes;
			const keys = Object.keys( morphAttributes );

			if ( keys.length > 0 ) {

				const morphAttribute = morphAttributes[ keys[ 0 ] ];

				if ( morphAttribute !== undefined ) {

					this.morphTargetInfluences = [];
					this.morphTargetDictionary = {};

					for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

						const name = morphAttribute[ m ].name || String( m );

						this.morphTargetInfluences.push( 0 );
						this.morphTargetDictionary[ name ] = m;

					}

				}

			}

		} else {

			const morphTargets = geometry.morphTargets;

			if ( morphTargets !== undefined && morphTargets.length > 0 ) {

				console.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );

			}

		}

	}

} );

const _start$1 = new Vector3();
const _end$1 = new Vector3();

function LineSegments( geometry, material ) {

	Line.call( this, geometry, material );

	this.type = 'LineSegments';

}

LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {

	constructor: LineSegments,

	isLineSegments: true,

	computeLineDistances: function () {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			// we assume non-indexed geometry

			if ( geometry.index === null ) {

				const positionAttribute = geometry.attributes.position;
				const lineDistances = [];

				for ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {

					_start$1.fromBufferAttribute( positionAttribute, i );
					_end$1.fromBufferAttribute( positionAttribute, i + 1 );

					lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];
					lineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );

				}

				geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );

			} else {

				console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );

			}

		} else if ( geometry.isGeometry ) {

			console.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

		return this;

	}

} );

class LineLoop extends Line {

	constructor( geometry, material ) {

		super( geometry, material );

		this.type = 'LineLoop';

	}

}

LineLoop.prototype.isLineLoop = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *  map: new THREE.Texture( <Image> ),
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  size: <float>,
 *  sizeAttenuation: <bool>
 *
 *  morphTargets: <bool>
 * }
 */

class PointsMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'PointsMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;

		this.alphaMap = null;

		this.size = 1;
		this.sizeAttenuation = true;

		this.morphTargets = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.size = source.size;
		this.sizeAttenuation = source.sizeAttenuation;

		this.morphTargets = source.morphTargets;

		return this;

	}

}

PointsMaterial.prototype.isPointsMaterial = true;

const _inverseMatrix$2 = new Matrix4();
const _ray$2 = new Ray();
const _sphere$3 = new Sphere();
const _position$1 = new Vector3();

function Points( geometry = new BufferGeometry(), material = new PointsMaterial() ) {

	Object3D.call( this );

	this.type = 'Points';

	this.geometry = geometry;
	this.material = material;

	this.updateMorphTargets();

}

Points.prototype = Object.assign( Object.create( Object3D.prototype ), {

	constructor: Points,

	isPoints: true,

	copy: function ( source ) {

		Object3D.prototype.copy.call( this, source );

		this.material = source.material;
		this.geometry = source.geometry;

		return this;

	},

	raycast: function ( raycaster, intersects ) {

		const geometry = this.geometry;
		const matrixWorld = this.matrixWorld;
		const threshold = raycaster.params.Points.threshold;

		// Checking boundingSphere distance to ray

		if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();

		_sphere$3.copy( geometry.boundingSphere );
		_sphere$3.applyMatrix4( matrixWorld );
		_sphere$3.radius += threshold;

		if ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;

		//

		_inverseMatrix$2.copy( matrixWorld ).invert();
		_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );

		const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
		const localThresholdSq = localThreshold * localThreshold;

		if ( geometry.isBufferGeometry ) {

			const index = geometry.index;
			const attributes = geometry.attributes;
			const positionAttribute = attributes.position;

			if ( index !== null ) {

				const indices = index.array;

				for ( let i = 0, il = indices.length; i < il; i ++ ) {

					const a = indices[ i ];

					_position$1.fromBufferAttribute( positionAttribute, a );

					testPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );

				}

			} else {

				for ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {

					_position$1.fromBufferAttribute( positionAttribute, i );

					testPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );

				}

			}

		} else {

			console.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

	},

	updateMorphTargets: function () {

		const geometry = this.geometry;

		if ( geometry.isBufferGeometry ) {

			const morphAttributes = geometry.morphAttributes;
			const keys = Object.keys( morphAttributes );

			if ( keys.length > 0 ) {

				const morphAttribute = morphAttributes[ keys[ 0 ] ];

				if ( morphAttribute !== undefined ) {

					this.morphTargetInfluences = [];
					this.morphTargetDictionary = {};

					for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

						const name = morphAttribute[ m ].name || String( m );

						this.morphTargetInfluences.push( 0 );
						this.morphTargetDictionary[ name ] = m;

					}

				}

			}

		} else {

			const morphTargets = geometry.morphTargets;

			if ( morphTargets !== undefined && morphTargets.length > 0 ) {

				console.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );

			}

		}

	}

} );

function testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {

	const rayPointDistanceSq = _ray$2.distanceSqToPoint( point );

	if ( rayPointDistanceSq < localThresholdSq ) {

		const intersectPoint = new Vector3();

		_ray$2.closestPointToPoint( point, intersectPoint );
		intersectPoint.applyMatrix4( matrixWorld );

		const distance = raycaster.ray.origin.distanceTo( intersectPoint );

		if ( distance < raycaster.near || distance > raycaster.far ) return;

		intersects.push( {

			distance: distance,
			distanceToRay: Math.sqrt( rayPointDistanceSq ),
			point: intersectPoint,
			index: index,
			face: null,
			object: object

		} );

	}

}

class VideoTexture extends Texture {

	constructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

		super( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.format = format !== undefined ? format : RGBFormat;

		this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;
		this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;

		this.generateMipmaps = false;

		const scope = this;

		function updateVideo() {

			scope.needsUpdate = true;
			video.requestVideoFrameCallback( updateVideo );

		}

		if ( 'requestVideoFrameCallback' in video ) {

			video.requestVideoFrameCallback( updateVideo );

		}

	}

	clone() {

		return new this.constructor( this.image ).copy( this );

	}

	update() {

		const video = this.image;
		const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;

		if ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {

			this.needsUpdate = true;

		}

	}

}

VideoTexture.prototype.isVideoTexture = true;

class CompressedTexture extends Texture {

	constructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

		super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.image = { width: width, height: height };
		this.mipmaps = mipmaps;

		// no flipping for cube textures
		// (also flipping doesn't work for compressed textures )

		this.flipY = false;

		// can't generate mipmaps for compressed textures
		// mips must be embedded in DDS files

		this.generateMipmaps = false;

	}

}

CompressedTexture.prototype.isCompressedTexture = true;

class CanvasTexture extends Texture {

	constructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

		super( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.needsUpdate = true;

	}

}

CanvasTexture.prototype.isCanvasTexture = true;

class DepthTexture extends Texture {

	constructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {

		format = format !== undefined ? format : DepthFormat;

		if ( format !== DepthFormat && format !== DepthStencilFormat ) {

			throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );

		}

		if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;
		if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;

		super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.image = { width: width, height: height };

		this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
		this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

		this.flipY = false;
		this.generateMipmaps	= false;

	}


}

DepthTexture.prototype.isDepthTexture = true;

class CircleGeometry extends BufferGeometry {

	constructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super();

		this.type = 'CircleGeometry';

		this.parameters = {
			radius: radius,
			segments: segments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		segments = Math.max( 3, segments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		const vertex = new Vector3();
		const uv = new Vector2();

		// center point

		vertices.push( 0, 0, 0 );
		normals.push( 0, 0, 1 );
		uvs.push( 0.5, 0.5 );

		for ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {

			const segment = thetaStart + s / segments * thetaLength;

			// vertex

			vertex.x = radius * Math.cos( segment );
			vertex.y = radius * Math.sin( segment );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			normals.push( 0, 0, 1 );

			// uvs

			uv.x = ( vertices[ i ] / radius + 1 ) / 2;
			uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;

			uvs.push( uv.x, uv.y );

		}

		// indices

		for ( let i = 1; i <= segments; i ++ ) {

			indices.push( i, i + 1, 0 );

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

}

class CylinderGeometry extends BufferGeometry {

	constructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super();
		this.type = 'CylinderGeometry';

		this.parameters = {
			radiusTop: radiusTop,
			radiusBottom: radiusBottom,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		const scope = this;

		radialSegments = Math.floor( radialSegments );
		heightSegments = Math.floor( heightSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		let index = 0;
		const indexArray = [];
		const halfHeight = height / 2;
		let groupStart = 0;

		// generate geometry

		generateTorso();

		if ( openEnded === false ) {

			if ( radiusTop > 0 ) generateCap( true );
			if ( radiusBottom > 0 ) generateCap( false );

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		function generateTorso() {

			const normal = new Vector3();
			const vertex = new Vector3();

			let groupCount = 0;

			// this will be used to calculate the normal
			const slope = ( radiusBottom - radiusTop ) / height;

			// generate vertices, normals and uvs

			for ( let y = 0; y <= heightSegments; y ++ ) {

				const indexRow = [];

				const v = y / heightSegments;

				// calculate the radius of the current row

				const radius = v * ( radiusBottom - radiusTop ) + radiusTop;

				for ( let x = 0; x <= radialSegments; x ++ ) {

					const u = x / radialSegments;

					const theta = u * thetaLength + thetaStart;

					const sinTheta = Math.sin( theta );
					const cosTheta = Math.cos( theta );

					// vertex

					vertex.x = radius * sinTheta;
					vertex.y = - v * height + halfHeight;
					vertex.z = radius * cosTheta;
					vertices.push( vertex.x, vertex.y, vertex.z );

					// normal

					normal.set( sinTheta, slope, cosTheta ).normalize();
					normals.push( normal.x, normal.y, normal.z );

					// uv

					uvs.push( u, 1 - v );

					// save index of vertex in respective row

					indexRow.push( index ++ );

				}

				// now save vertices of the row in our index array

				indexArray.push( indexRow );

			}

			// generate indices

			for ( let x = 0; x < radialSegments; x ++ ) {

				for ( let y = 0; y < heightSegments; y ++ ) {

					// we use the index array to access the correct indices

					const a = indexArray[ y ][ x ];
					const b = indexArray[ y + 1 ][ x ];
					const c = indexArray[ y + 1 ][ x + 1 ];
					const d = indexArray[ y ][ x + 1 ];

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

					// update group counter

					groupCount += 6;

				}

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, 0 );

			// calculate new start value for groups

			groupStart += groupCount;

		}

		function generateCap( top ) {

			// save the index of the first center vertex
			const centerIndexStart = index;

			const uv = new Vector2();
			const vertex = new Vector3();

			let groupCount = 0;

			const radius = ( top === true ) ? radiusTop : radiusBottom;
			const sign = ( top === true ) ? 1 : - 1;

			// first we generate the center vertex data of the cap.
			// because the geometry needs one set of uvs per face,
			// we must generate a center vertex per face/segment

			for ( let x = 1; x <= radialSegments; x ++ ) {

				// vertex

				vertices.push( 0, halfHeight * sign, 0 );

				// normal

				normals.push( 0, sign, 0 );

				// uv

				uvs.push( 0.5, 0.5 );

				// increase index

				index ++;

			}

			// save the index of the last center vertex
			const centerIndexEnd = index;

			// now we generate the surrounding vertices, normals and uvs

			for ( let x = 0; x <= radialSegments; x ++ ) {

				const u = x / radialSegments;
				const theta = u * thetaLength + thetaStart;

				const cosTheta = Math.cos( theta );
				const sinTheta = Math.sin( theta );

				// vertex

				vertex.x = radius * sinTheta;
				vertex.y = halfHeight * sign;
				vertex.z = radius * cosTheta;
				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normals.push( 0, sign, 0 );

				// uv

				uv.x = ( cosTheta * 0.5 ) + 0.5;
				uv.y = ( sinTheta * 0.5 * sign ) + 0.5;
				uvs.push( uv.x, uv.y );

				// increase index

				index ++;

			}

			// generate indices

			for ( let x = 0; x < radialSegments; x ++ ) {

				const c = centerIndexStart + x;
				const i = centerIndexEnd + x;

				if ( top === true ) {

					// face top

					indices.push( i, i + 1, c );

				} else {

					// face bottom

					indices.push( i + 1, i, c );

				}

				groupCount += 3;

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );

			// calculate new start value for groups

			groupStart += groupCount;

		}

	}

}

class ConeGeometry extends CylinderGeometry {

	constructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );

		this.type = 'ConeGeometry';

		this.parameters = {
			radius: radius,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

	}

}

class PolyhedronGeometry extends BufferGeometry {

	constructor( vertices, indices, radius = 1, detail = 0 ) {

		super();

		this.type = 'PolyhedronGeometry';

		this.parameters = {
			vertices: vertices,
			indices: indices,
			radius: radius,
			detail: detail
		};

		// default buffer data

		const vertexBuffer = [];
		const uvBuffer = [];

		// the subdivision creates the vertex buffer data

		subdivide( detail );

		// all vertices should lie on a conceptual sphere with a given radius

		applyRadius( radius );

		// finally, create the uv data

		generateUVs();

		// build non-indexed geometry

		this.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );

		if ( detail === 0 ) {

			this.computeVertexNormals(); // flat normals

		} else {

			this.normalizeNormals(); // smooth normals

		}

		// helper functions

		function subdivide( detail ) {

			const a = new Vector3();
			const b = new Vector3();
			const c = new Vector3();

			// iterate over all faces and apply a subdivison with the given detail value

			for ( let i = 0; i < indices.length; i += 3 ) {

				// get the vertices of the face

				getVertexByIndex( indices[ i + 0 ], a );
				getVertexByIndex( indices[ i + 1 ], b );
				getVertexByIndex( indices[ i + 2 ], c );

				// perform subdivision

				subdivideFace( a, b, c, detail );

			}

		}

		function subdivideFace( a, b, c, detail ) {

			const cols = detail + 1;

			// we use this multidimensional array as a data structure for creating the subdivision

			const v = [];

			// construct all of the vertices for this subdivision

			for ( let i = 0; i <= cols; i ++ ) {

				v[ i ] = [];

				const aj = a.clone().lerp( c, i / cols );
				const bj = b.clone().lerp( c, i / cols );

				const rows = cols - i;

				for ( let j = 0; j <= rows; j ++ ) {

					if ( j === 0 && i === cols ) {

						v[ i ][ j ] = aj;

					} else {

						v[ i ][ j ] = aj.clone().lerp( bj, j / rows );

					}

				}

			}

			// construct all of the faces

			for ( let i = 0; i < cols; i ++ ) {

				for ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {

					const k = Math.floor( j / 2 );

					if ( j % 2 === 0 ) {

						pushVertex( v[ i ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k ] );
						pushVertex( v[ i ][ k ] );

					} else {

						pushVertex( v[ i ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k ] );

					}

				}

			}

		}

		function applyRadius( radius ) {

			const vertex = new Vector3();

			// iterate over the entire buffer and apply the radius to each vertex

			for ( let i = 0; i < vertexBuffer.length; i += 3 ) {

				vertex.x = vertexBuffer[ i + 0 ];
				vertex.y = vertexBuffer[ i + 1 ];
				vertex.z = vertexBuffer[ i + 2 ];

				vertex.normalize().multiplyScalar( radius );

				vertexBuffer[ i + 0 ] = vertex.x;
				vertexBuffer[ i + 1 ] = vertex.y;
				vertexBuffer[ i + 2 ] = vertex.z;

			}

		}

		function generateUVs() {

			const vertex = new Vector3();

			for ( let i = 0; i < vertexBuffer.length; i += 3 ) {

				vertex.x = vertexBuffer[ i + 0 ];
				vertex.y = vertexBuffer[ i + 1 ];
				vertex.z = vertexBuffer[ i + 2 ];

				const u = azimuth( vertex ) / 2 / Math.PI + 0.5;
				const v = inclination( vertex ) / Math.PI + 0.5;
				uvBuffer.push( u, 1 - v );

			}

			correctUVs();

			correctSeam();

		}

		function correctSeam() {

			// handle case when face straddles the seam, see #3269

			for ( let i = 0; i < uvBuffer.length; i += 6 ) {

				// uv data of a single face

				const x0 = uvBuffer[ i + 0 ];
				const x1 = uvBuffer[ i + 2 ];
				const x2 = uvBuffer[ i + 4 ];

				const max = Math.max( x0, x1, x2 );
				const min = Math.min( x0, x1, x2 );

				// 0.9 is somewhat arbitrary

				if ( max > 0.9 && min < 0.1 ) {

					if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;
					if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;
					if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;

				}

			}

		}

		function pushVertex( vertex ) {

			vertexBuffer.push( vertex.x, vertex.y, vertex.z );

		}

		function getVertexByIndex( index, vertex ) {

			const stride = index * 3;

			vertex.x = vertices[ stride + 0 ];
			vertex.y = vertices[ stride + 1 ];
			vertex.z = vertices[ stride + 2 ];

		}

		function correctUVs() {

			const a = new Vector3();
			const b = new Vector3();
			const c = new Vector3();

			const centroid = new Vector3();

			const uvA = new Vector2();
			const uvB = new Vector2();
			const uvC = new Vector2();

			for ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {

				a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );
				b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );
				c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );

				uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );
				uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );
				uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );

				centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );

				const azi = azimuth( centroid );

				correctUV( uvA, j + 0, a, azi );
				correctUV( uvB, j + 2, b, azi );
				correctUV( uvC, j + 4, c, azi );

			}

		}

		function correctUV( uv, stride, vector, azimuth ) {

			if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {

				uvBuffer[ stride ] = uv.x - 1;

			}

			if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {

				uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;

			}

		}

		// Angle around the Y axis, counter-clockwise when looking from above.

		function azimuth( vector ) {

			return Math.atan2( vector.z, - vector.x );

		}


		// Angle above the XZ plane.

		function inclination( vector ) {

			return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );

		}

	}

}

class DodecahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const t = ( 1 + Math.sqrt( 5 ) ) / 2;
		const r = 1 / t;

		const vertices = [

			// (±1, ±1, ±1)
			- 1, - 1, - 1,	- 1, - 1, 1,
			- 1, 1, - 1, - 1, 1, 1,
			1, - 1, - 1, 1, - 1, 1,
			1, 1, - 1, 1, 1, 1,

			// (0, ±1/φ, ±φ)
			0, - r, - t, 0, - r, t,
			0, r, - t, 0, r, t,

			// (±1/φ, ±φ, 0)
			- r, - t, 0, - r, t, 0,
			r, - t, 0, r, t, 0,

			// (±φ, 0, ±1/φ)
			- t, 0, - r, t, 0, - r,
			- t, 0, r, t, 0, r
		];

		const indices = [
			3, 11, 7, 	3, 7, 15, 	3, 15, 13,
			7, 19, 17, 	7, 17, 6, 	7, 6, 15,
			17, 4, 8, 	17, 8, 10, 	17, 10, 6,
			8, 0, 16, 	8, 16, 2, 	8, 2, 10,
			0, 12, 1, 	0, 1, 18, 	0, 18, 16,
			6, 10, 2, 	6, 2, 13, 	6, 13, 15,
			2, 16, 18, 	2, 18, 3, 	2, 3, 13,
			18, 1, 9, 	18, 9, 11, 	18, 11, 3,
			4, 14, 12, 	4, 12, 0, 	4, 0, 8,
			11, 9, 5, 	11, 5, 19, 	11, 19, 7,
			19, 5, 14, 	19, 14, 4, 	19, 4, 17,
			1, 12, 14, 	1, 14, 5, 	1, 5, 9
		];

		super( vertices, indices, radius, detail );

		this.type = 'DodecahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

}

const _v0$2 = new Vector3();
const _v1$5 = new Vector3();
const _normal$1 = new Vector3();
const _triangle = new Triangle();

class EdgesGeometry extends BufferGeometry {

	constructor( geometry, thresholdAngle ) {

		super();

		this.type = 'EdgesGeometry';

		this.parameters = {
			thresholdAngle: thresholdAngle
		};

		thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;

		if ( geometry.isGeometry === true ) {

			console.error( 'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );
			return;

		}

		const precisionPoints = 4;
		const precision = Math.pow( 10, precisionPoints );
		const thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );

		const indexAttr = geometry.getIndex();
		const positionAttr = geometry.getAttribute( 'position' );
		const indexCount = indexAttr ? indexAttr.count : positionAttr.count;

		const indexArr = [ 0, 0, 0 ];
		const vertKeys = [ 'a', 'b', 'c' ];
		const hashes = new Array( 3 );

		const edgeData = {};
		const vertices = [];
		for ( let i = 0; i < indexCount; i += 3 ) {

			if ( indexAttr ) {

				indexArr[ 0 ] = indexAttr.getX( i );
				indexArr[ 1 ] = indexAttr.getX( i + 1 );
				indexArr[ 2 ] = indexAttr.getX( i + 2 );

			} else {

				indexArr[ 0 ] = i;
				indexArr[ 1 ] = i + 1;
				indexArr[ 2 ] = i + 2;

			}

			const { a, b, c } = _triangle;
			a.fromBufferAttribute( positionAttr, indexArr[ 0 ] );
			b.fromBufferAttribute( positionAttr, indexArr[ 1 ] );
			c.fromBufferAttribute( positionAttr, indexArr[ 2 ] );
			_triangle.getNormal( _normal$1 );

			// create hashes for the edge from the vertices
			hashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;
			hashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;
			hashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;

			// skip degenerate triangles
			if ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {

				continue;

			}

			// iterate over every edge
			for ( let j = 0; j < 3; j ++ ) {

				// get the first and next vertex making up the edge
				const jNext = ( j + 1 ) % 3;
				const vecHash0 = hashes[ j ];
				const vecHash1 = hashes[ jNext ];
				const v0 = _triangle[ vertKeys[ j ] ];
				const v1 = _triangle[ vertKeys[ jNext ] ];

				const hash = `${ vecHash0 }_${ vecHash1 }`;
				const reverseHash = `${ vecHash1 }_${ vecHash0 }`;

				if ( reverseHash in edgeData && edgeData[ reverseHash ] ) {

					// if we found a sibling edge add it into the vertex array if
					// it meets the angle threshold and delete the edge from the map.
					if ( _normal$1.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {

						vertices.push( v0.x, v0.y, v0.z );
						vertices.push( v1.x, v1.y, v1.z );

					}

					edgeData[ reverseHash ] = null;

				} else if ( ! ( hash in edgeData ) ) {

					// if we've already got an edge here then skip adding a new one
					edgeData[ hash ] = {

						index0: indexArr[ j ],
						index1: indexArr[ jNext ],
						normal: _normal$1.clone(),

					};

				}

			}

		}

		// iterate over all remaining, unmatched edges and add them to the vertex array
		for ( const key in edgeData ) {

			if ( edgeData[ key ] ) {

				const { index0, index1 } = edgeData[ key ];
				_v0$2.fromBufferAttribute( positionAttr, index0 );
				_v1$5.fromBufferAttribute( positionAttr, index1 );

				vertices.push( _v0$2.x, _v0$2.y, _v0$2.z );
				vertices.push( _v1$5.x, _v1$5.y, _v1$5.z );

			}

		}

		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

	}

}

/**
 * Port from https://github.com/mapbox/earcut (v2.2.2)
 */

const Earcut = {

	triangulate: function ( data, holeIndices, dim ) {

		dim = dim || 2;

		const hasHoles = holeIndices && holeIndices.length;
		const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;
		let outerNode = linkedList( data, 0, outerLen, dim, true );
		const triangles = [];

		if ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;

		let minX, minY, maxX, maxY, x, y, invSize;

		if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );

		// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
		if ( data.length > 80 * dim ) {

			minX = maxX = data[ 0 ];
			minY = maxY = data[ 1 ];

			for ( let i = dim; i < outerLen; i += dim ) {

				x = data[ i ];
				y = data[ i + 1 ];
				if ( x < minX ) minX = x;
				if ( y < minY ) minY = y;
				if ( x > maxX ) maxX = x;
				if ( y > maxY ) maxY = y;

			}

			// minX, minY and invSize are later used to transform coords into integers for z-order calculation
			invSize = Math.max( maxX - minX, maxY - minY );
			invSize = invSize !== 0 ? 1 / invSize : 0;

		}

		earcutLinked( outerNode, triangles, dim, minX, minY, invSize );

		return triangles;

	}

};

// create a circular doubly linked list from polygon points in the specified winding order
function linkedList( data, start, end, dim, clockwise ) {

	let i, last;

	if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {

		for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );

	} else {

		for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );

	}

	if ( last && equals( last, last.next ) ) {

		removeNode( last );
		last = last.next;

	}

	return last;

}

// eliminate colinear or duplicate points
function filterPoints( start, end ) {

	if ( ! start ) return start;
	if ( ! end ) end = start;

	let p = start,
		again;
	do {

		again = false;

		if ( ! p.steiner && ( equals( p, p.next ) || three_module_area( p.prev, p, p.next ) === 0 ) ) {

			removeNode( p );
			p = end = p.prev;
			if ( p === p.next ) break;
			again = true;

		} else {

			p = p.next;

		}

	} while ( again || p !== end );

	return end;

}

// main ear slicing loop which triangulates a polygon (given as a linked list)
function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {

	if ( ! ear ) return;

	// interlink polygon nodes in z-order
	if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );

	let stop = ear,
		prev, next;

	// iterate through ears, slicing them one by one
	while ( ear.prev !== ear.next ) {

		prev = ear.prev;
		next = ear.next;

		if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {

			// cut off the triangle
			triangles.push( prev.i / dim );
			triangles.push( ear.i / dim );
			triangles.push( next.i / dim );

			removeNode( ear );

			// skipping the next vertex leads to less sliver triangles
			ear = next.next;
			stop = next.next;

			continue;

		}

		ear = next;

		// if we looped through the whole remaining polygon and can't find any more ears
		if ( ear === stop ) {

			// try filtering points and slicing again
			if ( ! pass ) {

				earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );

				// if this didn't work, try curing all small self-intersections locally

			} else if ( pass === 1 ) {

				ear = cureLocalIntersections( filterPoints( ear ), triangles, dim );
				earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );

				// as a last resort, try splitting the remaining polygon into two

			} else if ( pass === 2 ) {

				splitEarcut( ear, triangles, dim, minX, minY, invSize );

			}

			break;

		}

	}

}

// check whether a polygon node forms a valid ear with adjacent nodes
function isEar( ear ) {

	const a = ear.prev,
		b = ear,
		c = ear.next;

	if ( three_module_area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear

	// now make sure we don't have other points inside the potential ear
	let p = ear.next.next;

	while ( p !== ear.prev ) {

		if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
			three_module_area( p.prev, p, p.next ) >= 0 ) return false;
		p = p.next;

	}

	return true;

}

function isEarHashed( ear, minX, minY, invSize ) {

	const a = ear.prev,
		b = ear,
		c = ear.next;

	if ( three_module_area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear

	// triangle bbox; min & max are calculated like this for speed
	const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),
		minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),
		maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),
		maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );

	// z-order range for the current triangle bbox;
	const minZ = zOrder( minTX, minTY, minX, minY, invSize ),
		maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );

	let p = ear.prevZ,
		n = ear.nextZ;

	// look for points inside the triangle in both directions
	while ( p && p.z >= minZ && n && n.z <= maxZ ) {

		if ( p !== ear.prev && p !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
			three_module_area( p.prev, p, p.next ) >= 0 ) return false;
		p = p.prevZ;

		if ( n !== ear.prev && n !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&
			three_module_area( n.prev, n, n.next ) >= 0 ) return false;
		n = n.nextZ;

	}

	// look for remaining points in decreasing z-order
	while ( p && p.z >= minZ ) {

		if ( p !== ear.prev && p !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
			three_module_area( p.prev, p, p.next ) >= 0 ) return false;
		p = p.prevZ;

	}

	// look for remaining points in increasing z-order
	while ( n && n.z <= maxZ ) {

		if ( n !== ear.prev && n !== ear.next &&
			pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&
			three_module_area( n.prev, n, n.next ) >= 0 ) return false;
		n = n.nextZ;

	}

	return true;

}

// go through all polygon nodes and cure small local self-intersections
function cureLocalIntersections( start, triangles, dim ) {

	let p = start;
	do {

		const a = p.prev,
			b = p.next.next;

		if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {

			triangles.push( a.i / dim );
			triangles.push( p.i / dim );
			triangles.push( b.i / dim );

			// remove two nodes involved
			removeNode( p );
			removeNode( p.next );

			p = start = b;

		}

		p = p.next;

	} while ( p !== start );

	return filterPoints( p );

}

// try splitting polygon into two and triangulate them independently
function splitEarcut( start, triangles, dim, minX, minY, invSize ) {

	// look for a valid diagonal that divides the polygon into two
	let a = start;
	do {

		let b = a.next.next;
		while ( b !== a.prev ) {

			if ( a.i !== b.i && isValidDiagonal( a, b ) ) {

				// split the polygon in two by the diagonal
				let c = splitPolygon( a, b );

				// filter colinear points around the cuts
				a = filterPoints( a, a.next );
				c = filterPoints( c, c.next );

				// run earcut on each half
				earcutLinked( a, triangles, dim, minX, minY, invSize );
				earcutLinked( c, triangles, dim, minX, minY, invSize );
				return;

			}

			b = b.next;

		}

		a = a.next;

	} while ( a !== start );

}

// link every hole into the outer loop, producing a single-ring polygon without holes
function eliminateHoles( data, holeIndices, outerNode, dim ) {

	const queue = [];
	let i, len, start, end, list;

	for ( i = 0, len = holeIndices.length; i < len; i ++ ) {

		start = holeIndices[ i ] * dim;
		end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;
		list = linkedList( data, start, end, dim, false );
		if ( list === list.next ) list.steiner = true;
		queue.push( getLeftmost( list ) );

	}

	queue.sort( compareX );

	// process holes from left to right
	for ( i = 0; i < queue.length; i ++ ) {

		eliminateHole( queue[ i ], outerNode );
		outerNode = filterPoints( outerNode, outerNode.next );

	}

	return outerNode;

}

function compareX( a, b ) {

	return a.x - b.x;

}

// find a bridge between vertices that connects hole with an outer ring and and link it
function eliminateHole( hole, outerNode ) {

	outerNode = findHoleBridge( hole, outerNode );
	if ( outerNode ) {

		const b = splitPolygon( outerNode, hole );

		// filter collinear points around the cuts
		filterPoints( outerNode, outerNode.next );
		filterPoints( b, b.next );

	}

}

// David Eberly's algorithm for finding a bridge between hole and outer polygon
function findHoleBridge( hole, outerNode ) {

	let p = outerNode;
	const hx = hole.x;
	const hy = hole.y;
	let qx = - Infinity, m;

	// find a segment intersected by a ray from the hole's leftmost point to the left;
	// segment's endpoint with lesser x will be potential connection point
	do {

		if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {

			const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );
			if ( x <= hx && x > qx ) {

				qx = x;
				if ( x === hx ) {

					if ( hy === p.y ) return p;
					if ( hy === p.next.y ) return p.next;

				}

				m = p.x < p.next.x ? p : p.next;

			}

		}

		p = p.next;

	} while ( p !== outerNode );

	if ( ! m ) return null;

	if ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint

	// look for points inside the triangle of hole point, segment intersection and endpoint;
	// if there are no points found, we have a valid connection;
	// otherwise choose the point of the minimum angle with the ray as connection point

	const stop = m,
		mx = m.x,
		my = m.y;
	let tanMin = Infinity, tan;

	p = m;

	do {

		if ( hx >= p.x && p.x >= mx && hx !== p.x &&
				pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {

			tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential

			if ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {

				m = p;
				tanMin = tan;

			}

		}

		p = p.next;

	} while ( p !== stop );

	return m;

}

// whether sector in vertex m contains sector in vertex p in the same coordinates
function sectorContainsSector( m, p ) {

	return three_module_area( m.prev, m, p.prev ) < 0 && three_module_area( p.next, m, m.next ) < 0;

}

// interlink polygon nodes in z-order
function indexCurve( start, minX, minY, invSize ) {

	let p = start;
	do {

		if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );
		p.prevZ = p.prev;
		p.nextZ = p.next;
		p = p.next;

	} while ( p !== start );

	p.prevZ.nextZ = null;
	p.prevZ = null;

	sortLinked( p );

}

// Simon Tatham's linked list merge sort algorithm
// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
function sortLinked( list ) {

	let i, p, q, e, tail, numMerges, pSize, qSize,
		inSize = 1;

	do {

		p = list;
		list = null;
		tail = null;
		numMerges = 0;

		while ( p ) {

			numMerges ++;
			q = p;
			pSize = 0;
			for ( i = 0; i < inSize; i ++ ) {

				pSize ++;
				q = q.nextZ;
				if ( ! q ) break;

			}

			qSize = inSize;

			while ( pSize > 0 || ( qSize > 0 && q ) ) {

				if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {

					e = p;
					p = p.nextZ;
					pSize --;

				} else {

					e = q;
					q = q.nextZ;
					qSize --;

				}

				if ( tail ) tail.nextZ = e;
				else list = e;

				e.prevZ = tail;
				tail = e;

			}

			p = q;

		}

		tail.nextZ = null;
		inSize *= 2;

	} while ( numMerges > 1 );

	return list;

}

// z-order of a point given coords and inverse of the longer side of data bbox
function zOrder( x, y, minX, minY, invSize ) {

	// coords are transformed into non-negative 15-bit integer range
	x = 32767 * ( x - minX ) * invSize;
	y = 32767 * ( y - minY ) * invSize;

	x = ( x | ( x << 8 ) ) & 0x00FF00FF;
	x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;
	x = ( x | ( x << 2 ) ) & 0x33333333;
	x = ( x | ( x << 1 ) ) & 0x55555555;

	y = ( y | ( y << 8 ) ) & 0x00FF00FF;
	y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;
	y = ( y | ( y << 2 ) ) & 0x33333333;
	y = ( y | ( y << 1 ) ) & 0x55555555;

	return x | ( y << 1 );

}

// find the leftmost node of a polygon ring
function getLeftmost( start ) {

	let p = start,
		leftmost = start;
	do {

		if ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;
		p = p.next;

	} while ( p !== start );

	return leftmost;

}

// check if a point lies within a convex triangle
function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {

	return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&
			( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&
			( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;

}

// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
function isValidDiagonal( a, b ) {

	return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges
		( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible
		( three_module_area( a.prev, a, b.prev ) || three_module_area( a, b.prev, b ) ) || // does not create opposite-facing sectors
		equals( a, b ) && three_module_area( a.prev, a, a.next ) > 0 && three_module_area( b.prev, b, b.next ) > 0 ); // special zero-length case

}

// signed area of a triangle
function three_module_area( p, q, r ) {

	return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );

}

// check if two points are equal
function equals( p1, p2 ) {

	return p1.x === p2.x && p1.y === p2.y;

}

// check if two segments intersect
function intersects( p1, q1, p2, q2 ) {

	const o1 = sign( three_module_area( p1, q1, p2 ) );
	const o2 = sign( three_module_area( p1, q1, q2 ) );
	const o3 = sign( three_module_area( p2, q2, p1 ) );
	const o4 = sign( three_module_area( p2, q2, q1 ) );

	if ( o1 !== o2 && o3 !== o4 ) return true; // general case

	if ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1
	if ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1
	if ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2
	if ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2

	return false;

}

// for collinear points p, q, r, check if point q lies on segment pr
function onSegment( p, q, r ) {

	return q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );

}

function sign( num ) {

	return num > 0 ? 1 : num < 0 ? - 1 : 0;

}

// check if a polygon diagonal intersects any polygon segments
function intersectsPolygon( a, b ) {

	let p = a;
	do {

		if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&
				intersects( p, p.next, a, b ) ) return true;
		p = p.next;

	} while ( p !== a );

	return false;

}

// check if a polygon diagonal is locally inside the polygon
function locallyInside( a, b ) {

	return three_module_area( a.prev, a, a.next ) < 0 ?
		three_module_area( a, b, a.next ) >= 0 && three_module_area( a, a.prev, b ) >= 0 :
		three_module_area( a, b, a.prev ) < 0 || three_module_area( a, a.next, b ) < 0;

}

// check if the middle point of a polygon diagonal is inside the polygon
function middleInside( a, b ) {

	let p = a,
		inside = false;
	const px = ( a.x + b.x ) / 2,
		py = ( a.y + b.y ) / 2;
	do {

		if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&
				( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )
			inside = ! inside;
		p = p.next;

	} while ( p !== a );

	return inside;

}

// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
// if one belongs to the outer ring and another to a hole, it merges it into a single ring
function splitPolygon( a, b ) {

	const a2 = new Node( a.i, a.x, a.y ),
		b2 = new Node( b.i, b.x, b.y ),
		an = a.next,
		bp = b.prev;

	a.next = b;
	b.prev = a;

	a2.next = an;
	an.prev = a2;

	b2.next = a2;
	a2.prev = b2;

	bp.next = b2;
	b2.prev = bp;

	return b2;

}

// create a node and optionally link it with previous one (in a circular doubly linked list)
function insertNode( i, x, y, last ) {

	const p = new Node( i, x, y );

	if ( ! last ) {

		p.prev = p;
		p.next = p;

	} else {

		p.next = last.next;
		p.prev = last;
		last.next.prev = p;
		last.next = p;

	}

	return p;

}

function removeNode( p ) {

	p.next.prev = p.prev;
	p.prev.next = p.next;

	if ( p.prevZ ) p.prevZ.nextZ = p.nextZ;
	if ( p.nextZ ) p.nextZ.prevZ = p.prevZ;

}

function Node( i, x, y ) {

	// vertex index in coordinates array
	this.i = i;

	// vertex coordinates
	this.x = x;
	this.y = y;

	// previous and next vertex nodes in a polygon ring
	this.prev = null;
	this.next = null;

	// z-order curve value
	this.z = null;

	// previous and next nodes in z-order
	this.prevZ = null;
	this.nextZ = null;

	// indicates whether this is a steiner point
	this.steiner = false;

}

function signedArea( data, start, end, dim ) {

	let sum = 0;
	for ( let i = start, j = end - dim; i < end; i += dim ) {

		sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );
		j = i;

	}

	return sum;

}

const ShapeUtils = {

	// calculate area of the contour polygon

	area: function ( contour ) {

		const n = contour.length;
		let a = 0.0;

		for ( let p = n - 1, q = 0; q < n; p = q ++ ) {

			a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;

		}

		return a * 0.5;

	},

	isClockWise: function ( pts ) {

		return ShapeUtils.area( pts ) < 0;

	},

	triangulateShape: function ( contour, holes ) {

		const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
		const holeIndices = []; // array of hole indices
		const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]

		removeDupEndPts( contour );
		addContour( vertices, contour );

		//

		let holeIndex = contour.length;

		holes.forEach( removeDupEndPts );

		for ( let i = 0; i < holes.length; i ++ ) {

			holeIndices.push( holeIndex );
			holeIndex += holes[ i ].length;
			addContour( vertices, holes[ i ] );

		}

		//

		const triangles = Earcut.triangulate( vertices, holeIndices );

		//

		for ( let i = 0; i < triangles.length; i += 3 ) {

			faces.push( triangles.slice( i, i + 3 ) );

		}

		return faces;

	}

};

function removeDupEndPts( points ) {

	const l = points.length;

	if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {

		points.pop();

	}

}

function addContour( vertices, contour ) {

	for ( let i = 0; i < contour.length; i ++ ) {

		vertices.push( contour[ i ].x );
		vertices.push( contour[ i ].y );

	}

}

/**
 * Creates extruded geometry from a path shape.
 *
 * parameters = {
 *
 *  curveSegments: <int>, // number of points on the curves
 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
 *  depth: <float>, // Depth to extrude the shape
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into the original shape bevel goes
 *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
 *  bevelOffset: <float>, // how far from shape outline does bevel start
 *  bevelSegments: <int>, // number of bevel layers
 *
 *  extrudePath: <THREE.Curve> // curve to extrude shape along
 *
 *  UVGenerator: <Object> // object that provides UV generator functions
 *
 * }
 */

class ExtrudeGeometry extends BufferGeometry {

	constructor( shapes, options ) {

		super();

		this.type = 'ExtrudeGeometry';

		this.parameters = {
			shapes: shapes,
			options: options
		};

		shapes = Array.isArray( shapes ) ? shapes : [ shapes ];

		const scope = this;

		const verticesArray = [];
		const uvArray = [];

		for ( let i = 0, l = shapes.length; i < l; i ++ ) {

			const shape = shapes[ i ];
			addShape( shape );

		}

		// build geometry

		this.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );

		this.computeVertexNormals();

		// functions

		function addShape( shape ) {

			const placeholder = [];

			// options

			const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;
			const steps = options.steps !== undefined ? options.steps : 1;
			let depth = options.depth !== undefined ? options.depth : 100;

			let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;
			let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;
			let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;
			let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;
			let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;

			const extrudePath = options.extrudePath;

			const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;

			// deprecated options

			if ( options.amount !== undefined ) {

				console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );
				depth = options.amount;

			}

			//

			let extrudePts, extrudeByPath = false;
			let splineTube, binormal, normal, position2;

			if ( extrudePath ) {

				extrudePts = extrudePath.getSpacedPoints( steps );

				extrudeByPath = true;
				bevelEnabled = false; // bevels not supported for path extrusion

				// SETUP TNB variables

				// TODO1 - have a .isClosed in spline?

				splineTube = extrudePath.computeFrenetFrames( steps, false );

				// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);

				binormal = new Vector3();
				normal = new Vector3();
				position2 = new Vector3();

			}

			// Safeguards if bevels are not enabled

			if ( ! bevelEnabled ) {

				bevelSegments = 0;
				bevelThickness = 0;
				bevelSize = 0;
				bevelOffset = 0;

			}

			// Variables initialization

			const shapePoints = shape.extractPoints( curveSegments );

			let vertices = shapePoints.shape;
			const holes = shapePoints.holes;

			const reverse = ! ShapeUtils.isClockWise( vertices );

			if ( reverse ) {

				vertices = vertices.reverse();

				// Maybe we should also check if holes are in the opposite direction, just to be safe ...

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];

					if ( ShapeUtils.isClockWise( ahole ) ) {

						holes[ h ] = ahole.reverse();

					}

				}

			}


			const faces = ShapeUtils.triangulateShape( vertices, holes );

			/* Vertices */

			const contour = vertices; // vertices has all points but contour has only points of circumference

			for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

				const ahole = holes[ h ];

				vertices = vertices.concat( ahole );

			}


			function scalePt2( pt, vec, size ) {

				if ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );

				return vec.clone().multiplyScalar( size ).add( pt );

			}

			const vlen = vertices.length, flen = faces.length;


			// Find directions for point movement


			function getBevelVec( inPt, inPrev, inNext ) {

				// computes for inPt the corresponding point inPt' on a new contour
				//   shifted by 1 unit (length of normalized vector) to the left
				// if we walk along contour clockwise, this new contour is outside the old one
				//
				// inPt' is the intersection of the two lines parallel to the two
				//  adjacent edges of inPt at a distance of 1 unit on the left side.

				let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt

				// good reading for geometry algorithms (here: line-line intersection)
				// http://geomalgorithms.com/a05-_intersect-1.html

				const v_prev_x = inPt.x - inPrev.x,
					v_prev_y = inPt.y - inPrev.y;
				const v_next_x = inNext.x - inPt.x,
					v_next_y = inNext.y - inPt.y;

				const v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );

				// check for collinear edges
				const collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );

				if ( Math.abs( collinear0 ) > Number.EPSILON ) {

					// not collinear

					// length of vectors for normalizing

					const v_prev_len = Math.sqrt( v_prev_lensq );
					const v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );

					// shift adjacent points by unit vectors to the left

					const ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );
					const ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );

					const ptNextShift_x = ( inNext.x - v_next_y / v_next_len );
					const ptNextShift_y = ( inNext.y + v_next_x / v_next_len );

					// scaling factor for v_prev to intersection point

					const sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -
							( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /
						( v_prev_x * v_next_y - v_prev_y * v_next_x );

					// vector from inPt to intersection point

					v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );
					v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );

					// Don't normalize!, otherwise sharp corners become ugly
					//  but prevent crazy spikes
					const v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );
					if ( v_trans_lensq <= 2 ) {

						return new Vector2( v_trans_x, v_trans_y );

					} else {

						shrink_by = Math.sqrt( v_trans_lensq / 2 );

					}

				} else {

					// handle special case of collinear edges

					let direction_eq = false; // assumes: opposite

					if ( v_prev_x > Number.EPSILON ) {

						if ( v_next_x > Number.EPSILON ) {

							direction_eq = true;

						}

					} else {

						if ( v_prev_x < - Number.EPSILON ) {

							if ( v_next_x < - Number.EPSILON ) {

								direction_eq = true;

							}

						} else {

							if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {

								direction_eq = true;

							}

						}

					}

					if ( direction_eq ) {

						// console.log("Warning: lines are a straight sequence");
						v_trans_x = - v_prev_y;
						v_trans_y = v_prev_x;
						shrink_by = Math.sqrt( v_prev_lensq );

					} else {

						// console.log("Warning: lines are a straight spike");
						v_trans_x = v_prev_x;
						v_trans_y = v_prev_y;
						shrink_by = Math.sqrt( v_prev_lensq / 2 );

					}

				}

				return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );

			}


			const contourMovements = [];

			for ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

				if ( j === il ) j = 0;
				if ( k === il ) k = 0;

				//  (j)---(i)---(k)
				// console.log('i,j,k', i, j , k)

				contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );

			}

			const holesMovements = [];
			let oneHoleMovements, verticesMovements = contourMovements.concat();

			for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

				const ahole = holes[ h ];

				oneHoleMovements = [];

				for ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

					if ( j === il ) j = 0;
					if ( k === il ) k = 0;

					//  (j)---(i)---(k)
					oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );

				}

				holesMovements.push( oneHoleMovements );
				verticesMovements = verticesMovements.concat( oneHoleMovements );

			}


			// Loop bevelSegments, 1 for the front, 1 for the back

			for ( let b = 0; b < bevelSegments; b ++ ) {

				//for ( b = bevelSegments; b > 0; b -- ) {

				const t = b / bevelSegments;
				const z = bevelThickness * Math.cos( t * Math.PI / 2 );
				const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;

				// contract shape

				for ( let i = 0, il = contour.length; i < il; i ++ ) {

					const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );

					v( vert.x, vert.y, - z );

				}

				// expand holes

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];
					oneHoleMovements = holesMovements[ h ];

					for ( let i = 0, il = ahole.length; i < il; i ++ ) {

						const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

						v( vert.x, vert.y, - z );

					}

				}

			}

			const bs = bevelSize + bevelOffset;

			// Back facing vertices

			for ( let i = 0; i < vlen; i ++ ) {

				const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

				if ( ! extrudeByPath ) {

					v( vert.x, vert.y, 0 );

				} else {

					// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );

					normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );
					binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );

					position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );

					v( position2.x, position2.y, position2.z );

				}

			}

			// Add stepped vertices...
			// Including front facing vertices

			for ( let s = 1; s <= steps; s ++ ) {

				for ( let i = 0; i < vlen; i ++ ) {

					const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

					if ( ! extrudeByPath ) {

						v( vert.x, vert.y, depth / steps * s );

					} else {

						// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );

						normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );
						binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );

						position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );

						v( position2.x, position2.y, position2.z );

					}

				}

			}


			// Add bevel segments planes

			//for ( b = 1; b <= bevelSegments; b ++ ) {
			for ( let b = bevelSegments - 1; b >= 0; b -- ) {

				const t = b / bevelSegments;
				const z = bevelThickness * Math.cos( t * Math.PI / 2 );
				const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;

				// contract shape

				for ( let i = 0, il = contour.length; i < il; i ++ ) {

					const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
					v( vert.x, vert.y, depth + z );

				}

				// expand holes

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];
					oneHoleMovements = holesMovements[ h ];

					for ( let i = 0, il = ahole.length; i < il; i ++ ) {

						const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

						if ( ! extrudeByPath ) {

							v( vert.x, vert.y, depth + z );

						} else {

							v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );

						}

					}

				}

			}

			/* Faces */

			// Top and bottom faces

			buildLidFaces();

			// Sides faces

			buildSideFaces();


			/////  Internal functions

			function buildLidFaces() {

				const start = verticesArray.length / 3;

				if ( bevelEnabled ) {

					let layer = 0; // steps + 1
					let offset = vlen * layer;

					// Bottom faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );

					}

					layer = steps + bevelSegments * 2;
					offset = vlen * layer;

					// Top faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );

					}

				} else {

					// Bottom faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 2 ], face[ 1 ], face[ 0 ] );

					}

					// Top faces

					for ( let i = 0; i < flen; i ++ ) {

						const face = faces[ i ];
						f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );

					}

				}

				scope.addGroup( start, verticesArray.length / 3 - start, 0 );

			}

			// Create faces for the z-sides of the shape

			function buildSideFaces() {

				const start = verticesArray.length / 3;
				let layeroffset = 0;
				sidewalls( contour, layeroffset );
				layeroffset += contour.length;

				for ( let h = 0, hl = holes.length; h < hl; h ++ ) {

					const ahole = holes[ h ];
					sidewalls( ahole, layeroffset );

					//, true
					layeroffset += ahole.length;

				}


				scope.addGroup( start, verticesArray.length / 3 - start, 1 );


			}

			function sidewalls( contour, layeroffset ) {

				let i = contour.length;

				while ( -- i >= 0 ) {

					const j = i;
					let k = i - 1;
					if ( k < 0 ) k = contour.length - 1;

					//console.log('b', i,j, i-1, k,vertices.length);

					for ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {

						const slen1 = vlen * s;
						const slen2 = vlen * ( s + 1 );

						const a = layeroffset + j + slen1,
							b = layeroffset + k + slen1,
							c = layeroffset + k + slen2,
							d = layeroffset + j + slen2;

						f4( a, b, c, d );

					}

				}

			}

			function v( x, y, z ) {

				placeholder.push( x );
				placeholder.push( y );
				placeholder.push( z );

			}


			function f3( a, b, c ) {

				addVertex( a );
				addVertex( b );
				addVertex( c );

				const nextIndex = verticesArray.length / 3;
				const uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

				addUV( uvs[ 0 ] );
				addUV( uvs[ 1 ] );
				addUV( uvs[ 2 ] );

			}

			function f4( a, b, c, d ) {

				addVertex( a );
				addVertex( b );
				addVertex( d );

				addVertex( b );
				addVertex( c );
				addVertex( d );


				const nextIndex = verticesArray.length / 3;
				const uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

				addUV( uvs[ 0 ] );
				addUV( uvs[ 1 ] );
				addUV( uvs[ 3 ] );

				addUV( uvs[ 1 ] );
				addUV( uvs[ 2 ] );
				addUV( uvs[ 3 ] );

			}

			function addVertex( index ) {

				verticesArray.push( placeholder[ index * 3 + 0 ] );
				verticesArray.push( placeholder[ index * 3 + 1 ] );
				verticesArray.push( placeholder[ index * 3 + 2 ] );

			}


			function addUV( vector2 ) {

				uvArray.push( vector2.x );
				uvArray.push( vector2.y );

			}

		}

	}

	toJSON() {

		const data = BufferGeometry.prototype.toJSON.call( this );

		const shapes = this.parameters.shapes;
		const options = this.parameters.options;

		return toJSON( shapes, options, data );

	}

}

const WorldUVGenerator = {

	generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {

		const a_x = vertices[ indexA * 3 ];
		const a_y = vertices[ indexA * 3 + 1 ];
		const b_x = vertices[ indexB * 3 ];
		const b_y = vertices[ indexB * 3 + 1 ];
		const c_x = vertices[ indexC * 3 ];
		const c_y = vertices[ indexC * 3 + 1 ];

		return [
			new Vector2( a_x, a_y ),
			new Vector2( b_x, b_y ),
			new Vector2( c_x, c_y )
		];

	},

	generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {

		const a_x = vertices[ indexA * 3 ];
		const a_y = vertices[ indexA * 3 + 1 ];
		const a_z = vertices[ indexA * 3 + 2 ];
		const b_x = vertices[ indexB * 3 ];
		const b_y = vertices[ indexB * 3 + 1 ];
		const b_z = vertices[ indexB * 3 + 2 ];
		const c_x = vertices[ indexC * 3 ];
		const c_y = vertices[ indexC * 3 + 1 ];
		const c_z = vertices[ indexC * 3 + 2 ];
		const d_x = vertices[ indexD * 3 ];
		const d_y = vertices[ indexD * 3 + 1 ];
		const d_z = vertices[ indexD * 3 + 2 ];

		if ( Math.abs( a_y - b_y ) < 0.01 ) {

			return [
				new Vector2( a_x, 1 - a_z ),
				new Vector2( b_x, 1 - b_z ),
				new Vector2( c_x, 1 - c_z ),
				new Vector2( d_x, 1 - d_z )
			];

		} else {

			return [
				new Vector2( a_y, 1 - a_z ),
				new Vector2( b_y, 1 - b_z ),
				new Vector2( c_y, 1 - c_z ),
				new Vector2( d_y, 1 - d_z )
			];

		}

	}

};

function toJSON( shapes, options, data ) {

	data.shapes = [];

	if ( Array.isArray( shapes ) ) {

		for ( let i = 0, l = shapes.length; i < l; i ++ ) {

			const shape = shapes[ i ];

			data.shapes.push( shape.uuid );

		}

	} else {

		data.shapes.push( shapes.uuid );

	}

	if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();

	return data;

}

class IcosahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const t = ( 1 + Math.sqrt( 5 ) ) / 2;

		const vertices = [
			- 1, t, 0, 	1, t, 0, 	- 1, - t, 0, 	1, - t, 0,
			0, - 1, t, 	0, 1, t,	0, - 1, - t, 	0, 1, - t,
			t, 0, - 1, 	t, 0, 1, 	- t, 0, - 1, 	- t, 0, 1
		];

		const indices = [
			0, 11, 5, 	0, 5, 1, 	0, 1, 7, 	0, 7, 10, 	0, 10, 11,
			1, 5, 9, 	5, 11, 4,	11, 10, 2,	10, 7, 6,	7, 1, 8,
			3, 9, 4, 	3, 4, 2,	3, 2, 6,	3, 6, 8,	3, 8, 9,
			4, 9, 5, 	2, 4, 11,	6, 2, 10,	8, 6, 7,	9, 8, 1
		];

		super( vertices, indices, radius, detail );

		this.type = 'IcosahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

}

class LatheGeometry extends BufferGeometry {

	constructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {

		super();

		this.type = 'LatheGeometry';

		this.parameters = {
			points: points,
			segments: segments,
			phiStart: phiStart,
			phiLength: phiLength
		};

		segments = Math.floor( segments );

		// clamp phiLength so it's in range of [ 0, 2PI ]

		phiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );

		// buffers

		const indices = [];
		const vertices = [];
		const uvs = [];

		// helper variables

		const inverseSegments = 1.0 / segments;
		const vertex = new Vector3();
		const uv = new Vector2();

		// generate vertices and uvs

		for ( let i = 0; i <= segments; i ++ ) {

			const phi = phiStart + i * inverseSegments * phiLength;

			const sin = Math.sin( phi );
			const cos = Math.cos( phi );

			for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {

				// vertex

				vertex.x = points[ j ].x * sin;
				vertex.y = points[ j ].y;
				vertex.z = points[ j ].x * cos;

				vertices.push( vertex.x, vertex.y, vertex.z );

				// uv

				uv.x = i / segments;
				uv.y = j / ( points.length - 1 );

				uvs.push( uv.x, uv.y );


			}

		}

		// indices

		for ( let i = 0; i < segments; i ++ ) {

			for ( let j = 0; j < ( points.length - 1 ); j ++ ) {

				const base = j + i * points.length;

				const a = base;
				const b = base + points.length;
				const c = base + points.length + 1;
				const d = base + 1;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// generate normals

		this.computeVertexNormals();

		// if the geometry is closed, we need to average the normals along the seam.
		// because the corresponding vertices are identical (but still have different UVs).

		if ( phiLength === Math.PI * 2 ) {

			const normals = this.attributes.normal.array;
			const n1 = new Vector3();
			const n2 = new Vector3();
			const n = new Vector3();

			// this is the buffer offset for the last line of vertices

			const base = segments * points.length * 3;

			for ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {

				// select the normal of the vertex in the first line

				n1.x = normals[ j + 0 ];
				n1.y = normals[ j + 1 ];
				n1.z = normals[ j + 2 ];

				// select the normal of the vertex in the last line

				n2.x = normals[ base + j + 0 ];
				n2.y = normals[ base + j + 1 ];
				n2.z = normals[ base + j + 2 ];

				// average normals

				n.addVectors( n1, n2 ).normalize();

				// assign the new values to both normals

				normals[ j + 0 ] = normals[ base + j + 0 ] = n.x;
				normals[ j + 1 ] = normals[ base + j + 1 ] = n.y;
				normals[ j + 2 ] = normals[ base + j + 2 ] = n.z;

			}

		}

	}

}

class OctahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const vertices = [
			1, 0, 0, 	- 1, 0, 0,	0, 1, 0,
			0, - 1, 0, 	0, 0, 1,	0, 0, - 1
		];

		const indices = [
			0, 2, 4,	0, 4, 3,	0, 3, 5,
			0, 5, 2,	1, 2, 5,	1, 5, 3,
			1, 3, 4,	1, 4, 2
		];

		super( vertices, indices, radius, detail );

		this.type = 'OctahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

}

/**
 * Parametric Surfaces Geometry
 * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html
 */

function ParametricGeometry( func, slices, stacks ) {

	BufferGeometry.call( this );

	this.type = 'ParametricGeometry';

	this.parameters = {
		func: func,
		slices: slices,
		stacks: stacks
	};

	// buffers

	const indices = [];
	const vertices = [];
	const normals = [];
	const uvs = [];

	const EPS = 0.00001;

	const normal = new Vector3();

	const p0 = new Vector3(), p1 = new Vector3();
	const pu = new Vector3(), pv = new Vector3();

	if ( func.length < 3 ) {

		console.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );

	}

	// generate vertices, normals and uvs

	const sliceCount = slices + 1;

	for ( let i = 0; i <= stacks; i ++ ) {

		const v = i / stacks;

		for ( let j = 0; j <= slices; j ++ ) {

			const u = j / slices;

			// vertex

			func( u, v, p0 );
			vertices.push( p0.x, p0.y, p0.z );

			// normal

			// approximate tangent vectors via finite differences

			if ( u - EPS >= 0 ) {

				func( u - EPS, v, p1 );
				pu.subVectors( p0, p1 );

			} else {

				func( u + EPS, v, p1 );
				pu.subVectors( p1, p0 );

			}

			if ( v - EPS >= 0 ) {

				func( u, v - EPS, p1 );
				pv.subVectors( p0, p1 );

			} else {

				func( u, v + EPS, p1 );
				pv.subVectors( p1, p0 );

			}

			// cross product of tangent vectors returns surface normal

			normal.crossVectors( pu, pv ).normalize();
			normals.push( normal.x, normal.y, normal.z );

			// uv

			uvs.push( u, v );

		}

	}

	// generate indices

	for ( let i = 0; i < stacks; i ++ ) {

		for ( let j = 0; j < slices; j ++ ) {

			const a = i * sliceCount + j;
			const b = i * sliceCount + j + 1;
			const c = ( i + 1 ) * sliceCount + j + 1;
			const d = ( i + 1 ) * sliceCount + j;

			// faces one and two

			indices.push( a, b, d );
			indices.push( b, c, d );

		}

	}

	// build geometry

	this.setIndex( indices );
	this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
	this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
	this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

}

ParametricGeometry.prototype = Object.create( BufferGeometry.prototype );
ParametricGeometry.prototype.constructor = ParametricGeometry;

class RingGeometry extends BufferGeometry {

	constructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {

		super();

		this.type = 'RingGeometry';

		this.parameters = {
			innerRadius: innerRadius,
			outerRadius: outerRadius,
			thetaSegments: thetaSegments,
			phiSegments: phiSegments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		thetaSegments = Math.max( 3, thetaSegments );
		phiSegments = Math.max( 1, phiSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// some helper variables

		let radius = innerRadius;
		const radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );
		const vertex = new Vector3();
		const uv = new Vector2();

		// generate vertices, normals and uvs

		for ( let j = 0; j <= phiSegments; j ++ ) {

			for ( let i = 0; i <= thetaSegments; i ++ ) {

				// values are generate from the inside of the ring to the outside

				const segment = thetaStart + i / thetaSegments * thetaLength;

				// vertex

				vertex.x = radius * Math.cos( segment );
				vertex.y = radius * Math.sin( segment );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normals.push( 0, 0, 1 );

				// uv

				uv.x = ( vertex.x / outerRadius + 1 ) / 2;
				uv.y = ( vertex.y / outerRadius + 1 ) / 2;

				uvs.push( uv.x, uv.y );

			}

			// increase the radius for next row of vertices

			radius += radiusStep;

		}

		// indices

		for ( let j = 0; j < phiSegments; j ++ ) {

			const thetaSegmentLevel = j * ( thetaSegments + 1 );

			for ( let i = 0; i < thetaSegments; i ++ ) {

				const segment = i + thetaSegmentLevel;

				const a = segment;
				const b = segment + thetaSegments + 1;
				const c = segment + thetaSegments + 2;
				const d = segment + 1;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

}

class ShapeGeometry extends BufferGeometry {

	constructor( shapes, curveSegments = 12 ) {

		super();
		this.type = 'ShapeGeometry';

		this.parameters = {
			shapes: shapes,
			curveSegments: curveSegments
		};

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		let groupStart = 0;
		let groupCount = 0;

		// allow single and array values for "shapes" parameter

		if ( Array.isArray( shapes ) === false ) {

			addShape( shapes );

		} else {

			for ( let i = 0; i < shapes.length; i ++ ) {

				addShape( shapes[ i ] );

				this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support

				groupStart += groupCount;
				groupCount = 0;

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );


		// helper functions

		function addShape( shape ) {

			const indexOffset = vertices.length / 3;
			const points = shape.extractPoints( curveSegments );

			let shapeVertices = points.shape;
			const shapeHoles = points.holes;

			// check direction of vertices

			if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {

				shapeVertices = shapeVertices.reverse();

			}

			for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {

				const shapeHole = shapeHoles[ i ];

				if ( ShapeUtils.isClockWise( shapeHole ) === true ) {

					shapeHoles[ i ] = shapeHole.reverse();

				}

			}

			const faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );

			// join vertices of inner and outer paths to a single array

			for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {

				const shapeHole = shapeHoles[ i ];
				shapeVertices = shapeVertices.concat( shapeHole );

			}

			// vertices, normals, uvs

			for ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {

				const vertex = shapeVertices[ i ];

				vertices.push( vertex.x, vertex.y, 0 );
				normals.push( 0, 0, 1 );
				uvs.push( vertex.x, vertex.y ); // world uvs

			}

			// incides

			for ( let i = 0, l = faces.length; i < l; i ++ ) {

				const face = faces[ i ];

				const a = face[ 0 ] + indexOffset;
				const b = face[ 1 ] + indexOffset;
				const c = face[ 2 ] + indexOffset;

				indices.push( a, b, c );
				groupCount += 3;

			}

		}

	}

	toJSON() {

		const data = BufferGeometry.prototype.toJSON.call( this );

		const shapes = this.parameters.shapes;

		return toJSON$1( shapes, data );

	}

}

function toJSON$1( shapes, data ) {

	data.shapes = [];

	if ( Array.isArray( shapes ) ) {

		for ( let i = 0, l = shapes.length; i < l; i ++ ) {

			const shape = shapes[ i ];

			data.shapes.push( shape.uuid );

		}

	} else {

		data.shapes.push( shapes.uuid );

	}

	return data;

}

class SphereGeometry extends BufferGeometry {

	constructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {

		super();
		this.type = 'SphereGeometry';

		this.parameters = {
			radius: radius,
			widthSegments: widthSegments,
			heightSegments: heightSegments,
			phiStart: phiStart,
			phiLength: phiLength,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		widthSegments = Math.max( 3, Math.floor( widthSegments ) );
		heightSegments = Math.max( 2, Math.floor( heightSegments ) );

		const thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );

		let index = 0;
		const grid = [];

		const vertex = new Vector3();
		const normal = new Vector3();

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// generate vertices, normals and uvs

		for ( let iy = 0; iy <= heightSegments; iy ++ ) {

			const verticesRow = [];

			const v = iy / heightSegments;

			// special case for the poles

			let uOffset = 0;

			if ( iy == 0 && thetaStart == 0 ) {

				uOffset = 0.5 / widthSegments;

			} else if ( iy == heightSegments && thetaEnd == Math.PI ) {

				uOffset = - 0.5 / widthSegments;

			}

			for ( let ix = 0; ix <= widthSegments; ix ++ ) {

				const u = ix / widthSegments;

				// vertex

				vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
				vertex.y = radius * Math.cos( thetaStart + v * thetaLength );
				vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normal.copy( vertex ).normalize();
				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( u + uOffset, 1 - v );

				verticesRow.push( index ++ );

			}

			grid.push( verticesRow );

		}

		// indices

		for ( let iy = 0; iy < heightSegments; iy ++ ) {

			for ( let ix = 0; ix < widthSegments; ix ++ ) {

				const a = grid[ iy ][ ix + 1 ];
				const b = grid[ iy ][ ix ];
				const c = grid[ iy + 1 ][ ix ];
				const d = grid[ iy + 1 ][ ix + 1 ];

				if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );
				if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

}

class TetrahedronGeometry extends PolyhedronGeometry {

	constructor( radius = 1, detail = 0 ) {

		const vertices = [
			1, 1, 1, 	- 1, - 1, 1, 	- 1, 1, - 1, 	1, - 1, - 1
		];

		const indices = [
			2, 1, 0, 	0, 3, 2,	1, 3, 0,	2, 3, 1
		];

		super( vertices, indices, radius, detail );

		this.type = 'TetrahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

}

/**
 * Text = 3D Text
 *
 * parameters = {
 *  font: <THREE.Font>, // font
 *
 *  size: <float>, // size of the text
 *  height: <float>, // thickness to extrude text
 *  curveSegments: <int>, // number of points on the curves
 *
 *  bevelEnabled: <bool>, // turn on bevel
 *  bevelThickness: <float>, // how deep into text bevel goes
 *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel
 *  bevelOffset: <float> // how far from text outline does bevel start
 * }
 */

class TextGeometry extends ExtrudeGeometry {

	constructor( text, parameters = {} ) {

		const font = parameters.font;

		if ( ! ( font && font.isFont ) ) {

			console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );
			return new BufferGeometry();

		}

		const shapes = font.generateShapes( text, parameters.size );

		// translate parameters to ExtrudeGeometry API

		parameters.depth = parameters.height !== undefined ? parameters.height : 50;

		// defaults

		if ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;
		if ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;
		if ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;

		super( shapes, parameters );

		this.type = 'TextGeometry';

	}

}

class TorusGeometry extends BufferGeometry {

	constructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {

		super();
		this.type = 'TorusGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			radialSegments: radialSegments,
			tubularSegments: tubularSegments,
			arc: arc
		};

		radialSegments = Math.floor( radialSegments );
		tubularSegments = Math.floor( tubularSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		const center = new Vector3();
		const vertex = new Vector3();
		const normal = new Vector3();

		// generate vertices, normals and uvs

		for ( let j = 0; j <= radialSegments; j ++ ) {

			for ( let i = 0; i <= tubularSegments; i ++ ) {

				const u = i / tubularSegments * arc;
				const v = j / radialSegments * Math.PI * 2;

				// vertex

				vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );
				vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );
				vertex.z = tube * Math.sin( v );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				center.x = radius * Math.cos( u );
				center.y = radius * Math.sin( u );
				normal.subVectors( vertex, center ).normalize();

				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( i / tubularSegments );
				uvs.push( j / radialSegments );

			}

		}

		// generate indices

		for ( let j = 1; j <= radialSegments; j ++ ) {

			for ( let i = 1; i <= tubularSegments; i ++ ) {

				// indices

				const a = ( tubularSegments + 1 ) * j + i - 1;
				const b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;
				const c = ( tubularSegments + 1 ) * ( j - 1 ) + i;
				const d = ( tubularSegments + 1 ) * j + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

}

class TorusKnotGeometry extends BufferGeometry {

	constructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {

		super();
		this.type = 'TorusKnotGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			tubularSegments: tubularSegments,
			radialSegments: radialSegments,
			p: p,
			q: q
		};

		tubularSegments = Math.floor( tubularSegments );
		radialSegments = Math.floor( radialSegments );

		// buffers

		const indices = [];
		const vertices = [];
		const normals = [];
		const uvs = [];

		// helper variables

		const vertex = new Vector3();
		const normal = new Vector3();

		const P1 = new Vector3();
		const P2 = new Vector3();

		const B = new Vector3();
		const T = new Vector3();
		const N = new Vector3();

		// generate vertices, normals and uvs

		for ( let i = 0; i <= tubularSegments; ++ i ) {

			// the radian "u" is used to calculate the position on the torus curve of the current tubular segement

			const u = i / tubularSegments * p * Math.PI * 2;

			// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
			// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions

			calculatePositionOnCurve( u, p, q, radius, P1 );
			calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );

			// calculate orthonormal basis

			T.subVectors( P2, P1 );
			N.addVectors( P2, P1 );
			B.crossVectors( T, N );
			N.crossVectors( B, T );

			// normalize B, N. T can be ignored, we don't use it

			B.normalize();
			N.normalize();

			for ( let j = 0; j <= radialSegments; ++ j ) {

				// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
				// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.

				const v = j / radialSegments * Math.PI * 2;
				const cx = - tube * Math.cos( v );
				const cy = tube * Math.sin( v );

				// now calculate the final vertex position.
				// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve

				vertex.x = P1.x + ( cx * N.x + cy * B.x );
				vertex.y = P1.y + ( cx * N.y + cy * B.y );
				vertex.z = P1.z + ( cx * N.z + cy * B.z );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)

				normal.subVectors( vertex, P1 ).normalize();

				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( i / tubularSegments );
				uvs.push( j / radialSegments );

			}

		}

		// generate indices

		for ( let j = 1; j <= tubularSegments; j ++ ) {

			for ( let i = 1; i <= radialSegments; i ++ ) {

				// indices

				const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
				const b = ( radialSegments + 1 ) * j + ( i - 1 );
				const c = ( radialSegments + 1 ) * j + i;
				const d = ( radialSegments + 1 ) * ( j - 1 ) + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// this function calculates the current position on the torus curve

		function calculatePositionOnCurve( u, p, q, radius, position ) {

			const cu = Math.cos( u );
			const su = Math.sin( u );
			const quOverP = q / p * u;
			const cs = Math.cos( quOverP );

			position.x = radius * ( 2 + cs ) * 0.5 * cu;
			position.y = radius * ( 2 + cs ) * su * 0.5;
			position.z = radius * Math.sin( quOverP ) * 0.5;

		}

	}

}

class TubeGeometry extends BufferGeometry {

	constructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {

		super();
		this.type = 'TubeGeometry';

		this.parameters = {
			path: path,
			tubularSegments: tubularSegments,
			radius: radius,
			radialSegments: radialSegments,
			closed: closed
		};

		const frames = path.computeFrenetFrames( tubularSegments, closed );

		// expose internals

		this.tangents = frames.tangents;
		this.normals = frames.normals;
		this.binormals = frames.binormals;

		// helper variables

		const vertex = new Vector3();
		const normal = new Vector3();
		const uv = new Vector2();
		let P = new Vector3();

		// buffer

		const vertices = [];
		const normals = [];
		const uvs = [];
		const indices = [];

		// create buffer data

		generateBufferData();

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// functions

		function generateBufferData() {

			for ( let i = 0; i < tubularSegments; i ++ ) {

				generateSegment( i );

			}

			// if the geometry is not closed, generate the last row of vertices and normals
			// at the regular position on the given path
			//
			// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)

			generateSegment( ( closed === false ) ? tubularSegments : 0 );

			// uvs are generated in a separate function.
			// this makes it easy compute correct values for closed geometries

			generateUVs();

			// finally create faces

			generateIndices();

		}

		function generateSegment( i ) {

			// we use getPointAt to sample evenly distributed points from the given path

			P = path.getPointAt( i / tubularSegments, P );

			// retrieve corresponding normal and binormal

			const N = frames.normals[ i ];
			const B = frames.binormals[ i ];

			// generate normals and vertices for the current segment

			for ( let j = 0; j <= radialSegments; j ++ ) {

				const v = j / radialSegments * Math.PI * 2;

				const sin = Math.sin( v );
				const cos = - Math.cos( v );

				// normal

				normal.x = ( cos * N.x + sin * B.x );
				normal.y = ( cos * N.y + sin * B.y );
				normal.z = ( cos * N.z + sin * B.z );
				normal.normalize();

				normals.push( normal.x, normal.y, normal.z );

				// vertex

				vertex.x = P.x + radius * normal.x;
				vertex.y = P.y + radius * normal.y;
				vertex.z = P.z + radius * normal.z;

				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		}

		function generateIndices() {

			for ( let j = 1; j <= tubularSegments; j ++ ) {

				for ( let i = 1; i <= radialSegments; i ++ ) {

					const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
					const b = ( radialSegments + 1 ) * j + ( i - 1 );
					const c = ( radialSegments + 1 ) * j + i;
					const d = ( radialSegments + 1 ) * ( j - 1 ) + i;

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

				}

			}

		}

		function generateUVs() {

			for ( let i = 0; i <= tubularSegments; i ++ ) {

				for ( let j = 0; j <= radialSegments; j ++ ) {

					uv.x = i / tubularSegments;
					uv.y = j / radialSegments;

					uvs.push( uv.x, uv.y );

				}

			}

		}

	}
	toJSON() {

		const data = BufferGeometry.prototype.toJSON.call( this );

		data.path = this.parameters.path.toJSON();

		return data;

	}

}

class WireframeGeometry extends BufferGeometry {

	constructor( geometry ) {

		super();
		this.type = 'WireframeGeometry';

		if ( geometry.isGeometry === true ) {

			console.error( 'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );
			return;

		}

		// buffer

		const vertices = [];

		// helper variables

		const edge = [ 0, 0 ], edges = {};

		const vertex = new Vector3();

		if ( geometry.index !== null ) {

			// indexed BufferGeometry

			const position = geometry.attributes.position;
			const indices = geometry.index;
			let groups = geometry.groups;

			if ( groups.length === 0 ) {

				groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];

			}

			// create a data structure that contains all eges without duplicates

			for ( let o = 0, ol = groups.length; o < ol; ++ o ) {

				const group = groups[ o ];

				const start = group.start;
				const count = group.count;

				for ( let i = start, l = ( start + count ); i < l; i += 3 ) {

					for ( let j = 0; j < 3; j ++ ) {

						const edge1 = indices.getX( i + j );
						const edge2 = indices.getX( i + ( j + 1 ) % 3 );
						edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates
						edge[ 1 ] = Math.max( edge1, edge2 );

						const key = edge[ 0 ] + ',' + edge[ 1 ];

						if ( edges[ key ] === undefined ) {

							edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };

						}

					}

				}

			}

			// generate vertices

			for ( const key in edges ) {

				const e = edges[ key ];

				vertex.fromBufferAttribute( position, e.index1 );
				vertices.push( vertex.x, vertex.y, vertex.z );

				vertex.fromBufferAttribute( position, e.index2 );
				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		} else {

			// non-indexed BufferGeometry

			const position = geometry.attributes.position;

			for ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {

				for ( let j = 0; j < 3; j ++ ) {

					// three edges per triangle, an edge is represented as (index1, index2)
					// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)

					const index1 = 3 * i + j;
					vertex.fromBufferAttribute( position, index1 );
					vertices.push( vertex.x, vertex.y, vertex.z );

					const index2 = 3 * i + ( ( j + 1 ) % 3 );
					vertex.fromBufferAttribute( position, index2 );
					vertices.push( vertex.x, vertex.y, vertex.z );

				}

			}

		}

		// build geometry

		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

	}

}

var Geometries = /*#__PURE__*/Object.freeze({
	__proto__: null,
	BoxGeometry: BoxGeometry,
	BoxBufferGeometry: BoxGeometry,
	CircleGeometry: CircleGeometry,
	CircleBufferGeometry: CircleGeometry,
	ConeGeometry: ConeGeometry,
	ConeBufferGeometry: ConeGeometry,
	CylinderGeometry: CylinderGeometry,
	CylinderBufferGeometry: CylinderGeometry,
	DodecahedronGeometry: DodecahedronGeometry,
	DodecahedronBufferGeometry: DodecahedronGeometry,
	EdgesGeometry: EdgesGeometry,
	ExtrudeGeometry: ExtrudeGeometry,
	ExtrudeBufferGeometry: ExtrudeGeometry,
	IcosahedronGeometry: IcosahedronGeometry,
	IcosahedronBufferGeometry: IcosahedronGeometry,
	LatheGeometry: LatheGeometry,
	LatheBufferGeometry: LatheGeometry,
	OctahedronGeometry: OctahedronGeometry,
	OctahedronBufferGeometry: OctahedronGeometry,
	ParametricGeometry: ParametricGeometry,
	ParametricBufferGeometry: ParametricGeometry,
	PlaneGeometry: PlaneGeometry,
	PlaneBufferGeometry: PlaneGeometry,
	PolyhedronGeometry: PolyhedronGeometry,
	PolyhedronBufferGeometry: PolyhedronGeometry,
	RingGeometry: RingGeometry,
	RingBufferGeometry: RingGeometry,
	ShapeGeometry: ShapeGeometry,
	ShapeBufferGeometry: ShapeGeometry,
	SphereGeometry: SphereGeometry,
	SphereBufferGeometry: SphereGeometry,
	TetrahedronGeometry: TetrahedronGeometry,
	TetrahedronBufferGeometry: TetrahedronGeometry,
	TextGeometry: TextGeometry,
	TextBufferGeometry: TextGeometry,
	TorusGeometry: TorusGeometry,
	TorusBufferGeometry: TorusGeometry,
	TorusKnotGeometry: TorusKnotGeometry,
	TorusKnotBufferGeometry: TorusKnotGeometry,
	TubeGeometry: TubeGeometry,
	TubeBufferGeometry: TubeGeometry,
	WireframeGeometry: WireframeGeometry
});

/**
 * parameters = {
 *  color: <THREE.Color>
 * }
 */

class ShadowMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'ShadowMaterial';

		this.color = new Color( 0x000000 );
		this.transparent = true;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		return this;

	}

}

ShadowMaterial.prototype.isShadowMaterial = true;

class RawShaderMaterial extends ShaderMaterial {

	constructor( parameters ) {

		super( parameters );

		this.type = 'RawShaderMaterial';

	}

}

RawShaderMaterial.prototype.isRawShaderMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  roughness: <float>,
 *  metalness: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  roughnessMap: new THREE.Texture( <Image> ),
 *
 *  metalnessMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  envMapIntensity: <float>
 *
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>,
 *
 *  flatShading: <bool>
 * }
 */

function MeshStandardMaterial( parameters ) {

	Material.call( this );

	this.defines = { 'STANDARD': '' };

	this.type = 'MeshStandardMaterial';

	this.color = new Color( 0xffffff ); // diffuse
	this.roughness = 1.0;
	this.metalness = 0.0;

	this.map = null;

	this.lightMap = null;
	this.lightMapIntensity = 1.0;

	this.aoMap = null;
	this.aoMapIntensity = 1.0;

	this.emissive = new Color( 0x000000 );
	this.emissiveIntensity = 1.0;
	this.emissiveMap = null;

	this.bumpMap = null;
	this.bumpScale = 1;

	this.normalMap = null;
	this.normalMapType = TangentSpaceNormalMap;
	this.normalScale = new Vector2( 1, 1 );

	this.displacementMap = null;
	this.displacementScale = 1;
	this.displacementBias = 0;

	this.roughnessMap = null;

	this.metalnessMap = null;

	this.alphaMap = null;

	this.envMap = null;
	this.envMapIntensity = 1.0;

	this.refractionRatio = 0.98;

	this.wireframe = false;
	this.wireframeLinewidth = 1;
	this.wireframeLinecap = 'round';
	this.wireframeLinejoin = 'round';

	this.skinning = false;
	this.morphTargets = false;
	this.morphNormals = false;

	this.flatShading = false;

	this.vertexTangents = false;

	this.setValues( parameters );

}

MeshStandardMaterial.prototype = Object.create( Material.prototype );
MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;

MeshStandardMaterial.prototype.isMeshStandardMaterial = true;

MeshStandardMaterial.prototype.copy = function ( source ) {

	Material.prototype.copy.call( this, source );

	this.defines = { 'STANDARD': '' };

	this.color.copy( source.color );
	this.roughness = source.roughness;
	this.metalness = source.metalness;

	this.map = source.map;

	this.lightMap = source.lightMap;
	this.lightMapIntensity = source.lightMapIntensity;

	this.aoMap = source.aoMap;
	this.aoMapIntensity = source.aoMapIntensity;

	this.emissive.copy( source.emissive );
	this.emissiveMap = source.emissiveMap;
	this.emissiveIntensity = source.emissiveIntensity;

	this.bumpMap = source.bumpMap;
	this.bumpScale = source.bumpScale;

	this.normalMap = source.normalMap;
	this.normalMapType = source.normalMapType;
	this.normalScale.copy( source.normalScale );

	this.displacementMap = source.displacementMap;
	this.displacementScale = source.displacementScale;
	this.displacementBias = source.displacementBias;

	this.roughnessMap = source.roughnessMap;

	this.metalnessMap = source.metalnessMap;

	this.alphaMap = source.alphaMap;

	this.envMap = source.envMap;
	this.envMapIntensity = source.envMapIntensity;

	this.refractionRatio = source.refractionRatio;

	this.wireframe = source.wireframe;
	this.wireframeLinewidth = source.wireframeLinewidth;
	this.wireframeLinecap = source.wireframeLinecap;
	this.wireframeLinejoin = source.wireframeLinejoin;

	this.skinning = source.skinning;
	this.morphTargets = source.morphTargets;
	this.morphNormals = source.morphNormals;

	this.flatShading = source.flatShading;

	this.vertexTangents = source.vertexTangents;

	return this;

};

/**
 * parameters = {
 *  clearcoat: <float>,
 *  clearcoatMap: new THREE.Texture( <Image> ),
 *  clearcoatRoughness: <float>,
 *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),
 *  clearcoatNormalScale: <Vector2>,
 *  clearcoatNormalMap: new THREE.Texture( <Image> ),
 *
 *  reflectivity: <float>,
 *  ior: <float>,
 *
 *  sheen: <Color>,
 *
 *  transmission: <float>,
 *  transmissionMap: new THREE.Texture( <Image> )
 * }
 */

function MeshPhysicalMaterial( parameters ) {

	MeshStandardMaterial.call( this );

	this.defines = {

		'STANDARD': '',
		'PHYSICAL': ''

	};

	this.type = 'MeshPhysicalMaterial';

	this.clearcoat = 0.0;
	this.clearcoatMap = null;
	this.clearcoatRoughness = 0.0;
	this.clearcoatRoughnessMap = null;
	this.clearcoatNormalScale = new Vector2( 1, 1 );
	this.clearcoatNormalMap = null;

	this.reflectivity = 0.5; // maps to F0 = 0.04

	Object.defineProperty( this, 'ior', {
		get: function () {

			return ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );

		},
		set: function ( ior ) {

			this.reflectivity = MathUtils.clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );

		}
	} );

	this.sheen = null; // null will disable sheen bsdf

	this.transmission = 0.0;
	this.transmissionMap = null;

	this.setValues( parameters );

}

MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );
MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;

MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;

MeshPhysicalMaterial.prototype.copy = function ( source ) {

	MeshStandardMaterial.prototype.copy.call( this, source );

	this.defines = {

		'STANDARD': '',
		'PHYSICAL': ''

	};

	this.clearcoat = source.clearcoat;
	this.clearcoatMap = source.clearcoatMap;
	this.clearcoatRoughness = source.clearcoatRoughness;
	this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;
	this.clearcoatNormalMap = source.clearcoatNormalMap;
	this.clearcoatNormalScale.copy( source.clearcoatNormalScale );

	this.reflectivity = source.reflectivity;

	if ( source.sheen ) {

		this.sheen = ( this.sheen || new Color() ).copy( source.sheen );

	} else {

		this.sheen = null;

	}

	this.transmission = source.transmission;
	this.transmissionMap = source.transmissionMap;

	return this;

};

/**
 * parameters = {
 *  color: <hex>,
 *  specular: <hex>,
 *  shininess: <float>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.MultiplyOperation,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>,
 *
 *  flatShading: <bool>
 * }
 */

class MeshPhongMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshPhongMaterial';

		this.color = new Color( 0xffffff ); // diffuse
		this.specular = new Color( 0x111111 );
		this.shininess = 30;

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.flatShading = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );
		this.specular.copy( source.specular );
		this.shininess = source.shininess;

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshPhongMaterial.prototype.isMeshPhongMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *
 *  map: new THREE.Texture( <Image> ),
 *  gradientMap: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

class MeshToonMaterial extends Material {

	constructor( parameters ) {

		super();

		this.defines = { 'TOON': '' };

		this.type = 'MeshToonMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;
		this.gradientMap = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.alphaMap = null;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;
		this.gradientMap = source.gradientMap;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.alphaMap = source.alphaMap;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	}

}

MeshToonMaterial.prototype.isMeshToonMaterial = true;

/**
 * parameters = {
 *  opacity: <float>,
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>,
 *
 *  flatShading: <bool>
 * }
 */

class MeshNormalMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshNormalMaterial';

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false;

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.flatShading = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshNormalMaterial.prototype.isMeshNormalMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  lightMap: new THREE.Texture( <Image> ),
 *  lightMapIntensity: <float>
 *
 *  aoMap: new THREE.Texture( <Image> ),
 *  aoMapIntensity: <float>
 *
 *  emissive: <hex>,
 *  emissiveIntensity: <float>
 *  emissiveMap: new THREE.Texture( <Image> ),
 *
 *  specularMap: new THREE.Texture( <Image> ),
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
 *  combine: THREE.Multiply,
 *  reflectivity: <float>,
 *  refractionRatio: <float>,
 *
 *  wireframe: <boolean>,
 *  wireframeLinewidth: <float>,
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 * }
 */

class MeshLambertMaterial extends Material {

	constructor( parameters ) {

		super();

		this.type = 'MeshLambertMaterial';

		this.color = new Color( 0xffffff ); // diffuse

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	}

}

MeshLambertMaterial.prototype.isMeshLambertMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  matcap: new THREE.Texture( <Image> ),
 *
 *  map: new THREE.Texture( <Image> ),
 *
 *  bumpMap: new THREE.Texture( <Image> ),
 *  bumpScale: <float>,
 *
 *  normalMap: new THREE.Texture( <Image> ),
 *  normalMapType: THREE.TangentSpaceNormalMap,
 *  normalScale: <Vector2>,
 *
 *  displacementMap: new THREE.Texture( <Image> ),
 *  displacementScale: <float>,
 *  displacementBias: <float>,
 *
 *  alphaMap: new THREE.Texture( <Image> ),
 *
 *  skinning: <bool>,
 *  morphTargets: <bool>,
 *  morphNormals: <bool>
 *
 *  flatShading: <bool>
 * }
 */

class MeshMatcapMaterial extends Material {

	constructor( parameters ) {

		super();

		this.defines = { 'MATCAP': '' };

		this.type = 'MeshMatcapMaterial';

		this.color = new Color( 0xffffff ); // diffuse

		this.matcap = null;

		this.map = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.alphaMap = null;

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.flatShading = false;

		this.setValues( parameters );

	}


	copy( source ) {

		super.copy( source );

		this.defines = { 'MATCAP': '' };

		this.color.copy( source.color );

		this.matcap = source.matcap;

		this.map = source.map;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.alphaMap = source.alphaMap;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		this.flatShading = source.flatShading;

		return this;

	}

}

MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;

/**
 * parameters = {
 *  color: <hex>,
 *  opacity: <float>,
 *
 *  linewidth: <float>,
 *
 *  scale: <float>,
 *  dashSize: <float>,
 *  gapSize: <float>
 * }
 */

class LineDashedMaterial extends LineBasicMaterial {

	constructor( parameters ) {

		super();

		this.type = 'LineDashedMaterial';

		this.scale = 1;
		this.dashSize = 3;
		this.gapSize = 1;

		this.setValues( parameters );

	}

	copy( source ) {

		super.copy( source );

		this.scale = source.scale;
		this.dashSize = source.dashSize;
		this.gapSize = source.gapSize;

		return this;

	}

}

LineDashedMaterial.prototype.isLineDashedMaterial = true;

var Materials = /*#__PURE__*/Object.freeze({
	__proto__: null,
	ShadowMaterial: ShadowMaterial,
	SpriteMaterial: SpriteMaterial,
	RawShaderMaterial: RawShaderMaterial,
	ShaderMaterial: ShaderMaterial,
	PointsMaterial: PointsMaterial,
	MeshPhysicalMaterial: MeshPhysicalMaterial,
	MeshStandardMaterial: MeshStandardMaterial,
	MeshPhongMaterial: MeshPhongMaterial,
	MeshToonMaterial: MeshToonMaterial,
	MeshNormalMaterial: MeshNormalMaterial,
	MeshLambertMaterial: MeshLambertMaterial,
	MeshDepthMaterial: MeshDepthMaterial,
	MeshDistanceMaterial: MeshDistanceMaterial,
	MeshBasicMaterial: MeshBasicMaterial,
	MeshMatcapMaterial: MeshMatcapMaterial,
	LineDashedMaterial: LineDashedMaterial,
	LineBasicMaterial: LineBasicMaterial,
	Material: Material
});

const AnimationUtils = {

	// same as Array.prototype.slice, but also works on typed arrays
	arraySlice: function ( array, from, to ) {

		if ( AnimationUtils.isTypedArray( array ) ) {

			// in ios9 array.subarray(from, undefined) will return empty array
			// but array.subarray(from) or array.subarray(from, len) is correct
			return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );

		}

		return array.slice( from, to );

	},

	// converts an array to a specific type
	convertArray: function ( array, type, forceClone ) {

		if ( ! array || // let 'undefined' and 'null' pass
			! forceClone && array.constructor === type ) return array;

		if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {

			return new type( array ); // create typed array

		}

		return Array.prototype.slice.call( array ); // create Array

	},

	isTypedArray: function ( object ) {

		return ArrayBuffer.isView( object ) &&
			! ( object instanceof DataView );

	},

	// returns an array by which times and values can be sorted
	getKeyframeOrder: function ( times ) {

		function compareTime( i, j ) {

			return times[ i ] - times[ j ];

		}

		const n = times.length;
		const result = new Array( n );
		for ( let i = 0; i !== n; ++ i ) result[ i ] = i;

		result.sort( compareTime );

		return result;

	},

	// uses the array previously returned by 'getKeyframeOrder' to sort data
	sortedArray: function ( values, stride, order ) {

		const nValues = values.length;
		const result = new values.constructor( nValues );

		for ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {

			const srcOffset = order[ i ] * stride;

			for ( let j = 0; j !== stride; ++ j ) {

				result[ dstOffset ++ ] = values[ srcOffset + j ];

			}

		}

		return result;

	},

	// function for parsing AOS keyframe formats
	flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {

		let i = 1, key = jsonKeys[ 0 ];

		while ( key !== undefined && key[ valuePropertyName ] === undefined ) {

			key = jsonKeys[ i ++ ];

		}

		if ( key === undefined ) return; // no data

		let value = key[ valuePropertyName ];
		if ( value === undefined ) return; // no data

		if ( Array.isArray( value ) ) {

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					values.push.apply( values, value ); // push all elements

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		} else if ( value.toArray !== undefined ) {

			// ...assume THREE.Math-ish

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					value.toArray( values, values.length );

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		} else {

			// otherwise push as-is

			do {

				value = key[ valuePropertyName ];

				if ( value !== undefined ) {

					times.push( key.time );
					values.push( value );

				}

				key = jsonKeys[ i ++ ];

			} while ( key !== undefined );

		}

	},

	subclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {

		const clip = sourceClip.clone();

		clip.name = name;

		const tracks = [];

		for ( let i = 0; i < clip.tracks.length; ++ i ) {

			const track = clip.tracks[ i ];
			const valueSize = track.getValueSize();

			const times = [];
			const values = [];

			for ( let j = 0; j < track.times.length; ++ j ) {

				const frame = track.times[ j ] * fps;

				if ( frame < startFrame || frame >= endFrame ) continue;

				times.push( track.times[ j ] );

				for ( let k = 0; k < valueSize; ++ k ) {

					values.push( track.values[ j * valueSize + k ] );

				}

			}

			if ( times.length === 0 ) continue;

			track.times = AnimationUtils.convertArray( times, track.times.constructor );
			track.values = AnimationUtils.convertArray( values, track.values.constructor );

			tracks.push( track );

		}

		clip.tracks = tracks;

		// find minimum .times value across all tracks in the trimmed clip

		let minStartTime = Infinity;

		for ( let i = 0; i < clip.tracks.length; ++ i ) {

			if ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {

				minStartTime = clip.tracks[ i ].times[ 0 ];

			}

		}

		// shift all tracks such that clip begins at t=0

		for ( let i = 0; i < clip.tracks.length; ++ i ) {

			clip.tracks[ i ].shift( - 1 * minStartTime );

		}

		clip.resetDuration();

		return clip;

	},

	makeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {

		if ( fps <= 0 ) fps = 30;

		const numTracks = referenceClip.tracks.length;
		const referenceTime = referenceFrame / fps;

		// Make each track's values relative to the values at the reference frame
		for ( let i = 0; i < numTracks; ++ i ) {

			const referenceTrack = referenceClip.tracks[ i ];
			const referenceTrackType = referenceTrack.ValueTypeName;

			// Skip this track if it's non-numeric
			if ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;

			// Find the track in the target clip whose name and type matches the reference track
			const targetTrack = targetClip.tracks.find( function ( track ) {

				return track.name === referenceTrack.name
					&& track.ValueTypeName === referenceTrackType;

			} );

			if ( targetTrack === undefined ) continue;

			let referenceOffset = 0;
			const referenceValueSize = referenceTrack.getValueSize();

			if ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {

				referenceOffset = referenceValueSize / 3;

			}

			let targetOffset = 0;
			const targetValueSize = targetTrack.getValueSize();

			if ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {

				targetOffset = targetValueSize / 3;

			}

			const lastIndex = referenceTrack.times.length - 1;
			let referenceValue;

			// Find the value to subtract out of the track
			if ( referenceTime <= referenceTrack.times[ 0 ] ) {

				// Reference frame is earlier than the first keyframe, so just use the first keyframe
				const startIndex = referenceOffset;
				const endIndex = referenceValueSize - referenceOffset;
				referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );

			} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {

				// Reference frame is after the last keyframe, so just use the last keyframe
				const startIndex = lastIndex * referenceValueSize + referenceOffset;
				const endIndex = startIndex + referenceValueSize - referenceOffset;
				referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );

			} else {

				// Interpolate to the reference value
				const interpolant = referenceTrack.createInterpolant();
				const startIndex = referenceOffset;
				const endIndex = referenceValueSize - referenceOffset;
				interpolant.evaluate( referenceTime );
				referenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );

			}

			// Conjugate the quaternion
			if ( referenceTrackType === 'quaternion' ) {

				const referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();
				referenceQuat.toArray( referenceValue );

			}

			// Subtract the reference value from all of the track values

			const numTimes = targetTrack.times.length;
			for ( let j = 0; j < numTimes; ++ j ) {

				const valueStart = j * targetValueSize + targetOffset;

				if ( referenceTrackType === 'quaternion' ) {

					// Multiply the conjugate for quaternion track types
					Quaternion.multiplyQuaternionsFlat(
						targetTrack.values,
						valueStart,
						referenceValue,
						0,
						targetTrack.values,
						valueStart
					);

				} else {

					const valueEnd = targetValueSize - targetOffset * 2;

					// Subtract each value for all other numeric track types
					for ( let k = 0; k < valueEnd; ++ k ) {

						targetTrack.values[ valueStart + k ] -= referenceValue[ k ];

					}

				}

			}

		}

		targetClip.blendMode = AdditiveAnimationBlendMode;

		return targetClip;

	}

};

/**
 * Abstract base class of interpolants over parametric samples.
 *
 * The parameter domain is one dimensional, typically the time or a path
 * along a curve defined by the data.
 *
 * The sample values can have any dimensionality and derived classes may
 * apply special interpretations to the data.
 *
 * This class provides the interval seek in a Template Method, deferring
 * the actual interpolation to derived classes.
 *
 * Time complexity is O(1) for linear access crossing at most two points
 * and O(log N) for random access, where N is the number of positions.
 *
 * References:
 *
 * 		http://www.oodesign.com/template-method-pattern.html
 *
 */

function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	this.parameterPositions = parameterPositions;
	this._cachedIndex = 0;

	this.resultBuffer = resultBuffer !== undefined ?
		resultBuffer : new sampleValues.constructor( sampleSize );
	this.sampleValues = sampleValues;
	this.valueSize = sampleSize;

}

Object.assign( Interpolant.prototype, {

	evaluate: function ( t ) {

		const pp = this.parameterPositions;
		let i1 = this._cachedIndex,
			t1 = pp[ i1 ],
			t0 = pp[ i1 - 1 ];

		validate_interval: {

			seek: {

				let right;

				linear_scan: {

					//- See http://jsperf.com/comparison-to-undefined/3
					//- slower code:
					//-
					//- 				if ( t >= t1 || t1 === undefined ) {
					forward_scan: if ( ! ( t < t1 ) ) {

						for ( let giveUpAt = i1 + 2; ; ) {

							if ( t1 === undefined ) {

								if ( t < t0 ) break forward_scan;

								// after end

								i1 = pp.length;
								this._cachedIndex = i1;
								return this.afterEnd_( i1 - 1, t, t0 );

							}

							if ( i1 === giveUpAt ) break; // this loop

							t0 = t1;
							t1 = pp[ ++ i1 ];

							if ( t < t1 ) {

								// we have arrived at the sought interval
								break seek;

							}

						}

						// prepare binary search on the right side of the index
						right = pp.length;
						break linear_scan;

					}

					//- slower code:
					//-					if ( t < t0 || t0 === undefined ) {
					if ( ! ( t >= t0 ) ) {

						// looping?

						const t1global = pp[ 1 ];

						if ( t < t1global ) {

							i1 = 2; // + 1, using the scan for the details
							t0 = t1global;

						}

						// linear reverse scan

						for ( let giveUpAt = i1 - 2; ; ) {

							if ( t0 === undefined ) {

								// before start

								this._cachedIndex = 0;
								return this.beforeStart_( 0, t, t1 );

							}

							if ( i1 === giveUpAt ) break; // this loop

							t1 = t0;
							t0 = pp[ -- i1 - 1 ];

							if ( t >= t0 ) {

								// we have arrived at the sought interval
								break seek;

							}

						}

						// prepare binary search on the left side of the index
						right = i1;
						i1 = 0;
						break linear_scan;

					}

					// the interval is valid

					break validate_interval;

				} // linear scan

				// binary search

				while ( i1 < right ) {

					const mid = ( i1 + right ) >>> 1;

					if ( t < pp[ mid ] ) {

						right = mid;

					} else {

						i1 = mid + 1;

					}

				}

				t1 = pp[ i1 ];
				t0 = pp[ i1 - 1 ];

				// check boundary cases, again

				if ( t0 === undefined ) {

					this._cachedIndex = 0;
					return this.beforeStart_( 0, t, t1 );

				}

				if ( t1 === undefined ) {

					i1 = pp.length;
					this._cachedIndex = i1;
					return this.afterEnd_( i1 - 1, t0, t );

				}

			} // seek

			this._cachedIndex = i1;

			this.intervalChanged_( i1, t0, t1 );

		} // validate_interval

		return this.interpolate_( i1, t0, t, t1 );

	},

	settings: null, // optional, subclass-specific settings structure
	// Note: The indirection allows central control of many interpolants.

	// --- Protected interface

	DefaultSettings_: {},

	getSettings_: function () {

		return this.settings || this.DefaultSettings_;

	},

	copySampleValue_: function ( index ) {

		// copies a sample value to the result buffer

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,
			offset = index * stride;

		for ( let i = 0; i !== stride; ++ i ) {

			result[ i ] = values[ offset + i ];

		}

		return result;

	},

	// Template methods for derived classes:

	interpolate_: function ( /* i1, t0, t, t1 */ ) {

		throw new Error( 'call to abstract method' );
		// implementations shall return this.resultBuffer

	},

	intervalChanged_: function ( /* i1, t0, t1 */ ) {

		// empty

	}

} );

// DECLARE ALIAS AFTER assign prototype
Object.assign( Interpolant.prototype, {

	//( 0, t, t0 ), returns this.resultBuffer
	beforeStart_: Interpolant.prototype.copySampleValue_,

	//( N-1, tN-1, t ), returns this.resultBuffer
	afterEnd_: Interpolant.prototype.copySampleValue_,

} );

/**
 * Fast and simple cubic spline interpolant.
 *
 * It was derived from a Hermitian construction setting the first derivative
 * at each sample position to the linear slope between neighboring positions
 * over their parameter interval.
 */

function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

	this._weightPrev = - 0;
	this._offsetPrev = - 0;
	this._weightNext = - 0;
	this._offsetNext = - 0;

}

CubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: CubicInterpolant,

	DefaultSettings_: {

		endingStart: ZeroCurvatureEnding,
		endingEnd: ZeroCurvatureEnding

	},

	intervalChanged_: function ( i1, t0, t1 ) {

		const pp = this.parameterPositions;
		let iPrev = i1 - 2,
			iNext = i1 + 1,

			tPrev = pp[ iPrev ],
			tNext = pp[ iNext ];

		if ( tPrev === undefined ) {

			switch ( this.getSettings_().endingStart ) {

				case ZeroSlopeEnding:

					// f'(t0) = 0
					iPrev = i1;
					tPrev = 2 * t0 - t1;

					break;

				case WrapAroundEnding:

					// use the other end of the curve
					iPrev = pp.length - 2;
					tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];

					break;

				default: // ZeroCurvatureEnding

					// f''(t0) = 0 a.k.a. Natural Spline
					iPrev = i1;
					tPrev = t1;

			}

		}

		if ( tNext === undefined ) {

			switch ( this.getSettings_().endingEnd ) {

				case ZeroSlopeEnding:

					// f'(tN) = 0
					iNext = i1;
					tNext = 2 * t1 - t0;

					break;

				case WrapAroundEnding:

					// use the other end of the curve
					iNext = 1;
					tNext = t1 + pp[ 1 ] - pp[ 0 ];

					break;

				default: // ZeroCurvatureEnding

					// f''(tN) = 0, a.k.a. Natural Spline
					iNext = i1 - 1;
					tNext = t0;

			}

		}

		const halfDt = ( t1 - t0 ) * 0.5,
			stride = this.valueSize;

		this._weightPrev = halfDt / ( t0 - tPrev );
		this._weightNext = halfDt / ( tNext - t1 );
		this._offsetPrev = iPrev * stride;
		this._offsetNext = iNext * stride;

	},

	interpolate_: function ( i1, t0, t, t1 ) {

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			o1 = i1 * stride,		o0 = o1 - stride,
			oP = this._offsetPrev, 	oN = this._offsetNext,
			wP = this._weightPrev,	wN = this._weightNext,

			p = ( t - t0 ) / ( t1 - t0 ),
			pp = p * p,
			ppp = pp * p;

		// evaluate polynomials

		const sP = - wP * ppp + 2 * wP * pp - wP * p;
		const s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;
		const s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;
		const sN = wN * ppp - wN * pp;

		// combine data linearly

		for ( let i = 0; i !== stride; ++ i ) {

			result[ i ] =
					sP * values[ oP + i ] +
					s0 * values[ o0 + i ] +
					s1 * values[ o1 + i ] +
					sN * values[ oN + i ];

		}

		return result;

	}

} );

function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

}

LinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: LinearInterpolant,

	interpolate_: function ( i1, t0, t, t1 ) {

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			offset1 = i1 * stride,
			offset0 = offset1 - stride,

			weight1 = ( t - t0 ) / ( t1 - t0 ),
			weight0 = 1 - weight1;

		for ( let i = 0; i !== stride; ++ i ) {

			result[ i ] =
					values[ offset0 + i ] * weight0 +
					values[ offset1 + i ] * weight1;

		}

		return result;

	}

} );

/**
 *
 * Interpolant that evaluates to the sample value at the position preceeding
 * the parameter.
 */

function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

}

DiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: DiscreteInterpolant,

	interpolate_: function ( i1 /*, t0, t, t1 */ ) {

		return this.copySampleValue_( i1 - 1 );

	}

} );

class KeyframeTrack {

	constructor( name, times, values, interpolation ) {

		if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );
		if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );

		this.name = name;

		this.times = AnimationUtils.convertArray( times, this.TimeBufferType );
		this.values = AnimationUtils.convertArray( values, this.ValueBufferType );

		this.setInterpolation( interpolation || this.DefaultInterpolation );

	}

	// Serialization (in static context, because of constructor invocation
	// and automatic invocation of .toJSON):

	static toJSON( track ) {

		const trackType = track.constructor;

		let json;

		// derived classes can define a static toJSON method
		if ( trackType.toJSON !== this.toJSON ) {

			json = trackType.toJSON( track );

		} else {

			// by default, we assume the data can be serialized as-is
			json = {

				'name': track.name,
				'times': AnimationUtils.convertArray( track.times, Array ),
				'values': AnimationUtils.convertArray( track.values, Array )

			};

			const interpolation = track.getInterpolation();

			if ( interpolation !== track.DefaultInterpolation ) {

				json.interpolation = interpolation;

			}

		}

		json.type = track.ValueTypeName; // mandatory

		return json;

	}

	InterpolantFactoryMethodDiscrete( result ) {

		return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );

	}

	InterpolantFactoryMethodLinear( result ) {

		return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );

	}

	InterpolantFactoryMethodSmooth( result ) {

		return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );

	}

	setInterpolation( interpolation ) {

		let factoryMethod;

		switch ( interpolation ) {

			case InterpolateDiscrete:

				factoryMethod = this.InterpolantFactoryMethodDiscrete;

				break;

			case InterpolateLinear:

				factoryMethod = this.InterpolantFactoryMethodLinear;

				break;

			case InterpolateSmooth:

				factoryMethod = this.InterpolantFactoryMethodSmooth;

				break;

		}

		if ( factoryMethod === undefined ) {

			const message = 'unsupported interpolation for ' +
				this.ValueTypeName + ' keyframe track named ' + this.name;

			if ( this.createInterpolant === undefined ) {

				// fall back to default, unless the default itself is messed up
				if ( interpolation !== this.DefaultInterpolation ) {

					this.setInterpolation( this.DefaultInterpolation );

				} else {

					throw new Error( message ); // fatal, in this case

				}

			}

			console.warn( 'THREE.KeyframeTrack:', message );
			return this;

		}

		this.createInterpolant = factoryMethod;

		return this;

	}

	getInterpolation() {

		switch ( this.createInterpolant ) {

			case this.InterpolantFactoryMethodDiscrete:

				return InterpolateDiscrete;

			case this.InterpolantFactoryMethodLinear:

				return InterpolateLinear;

			case this.InterpolantFactoryMethodSmooth:

				return InterpolateSmooth;

		}

	}

	getValueSize() {

		return this.values.length / this.times.length;

	}

	// move all keyframes either forwards or backwards in time
	shift( timeOffset ) {

		if ( timeOffset !== 0.0 ) {

			const times = this.times;

			for ( let i = 0, n = times.length; i !== n; ++ i ) {

				times[ i ] += timeOffset;

			}

		}

		return this;

	}

	// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
	scale( timeScale ) {

		if ( timeScale !== 1.0 ) {

			const times = this.times;

			for ( let i = 0, n = times.length; i !== n; ++ i ) {

				times[ i ] *= timeScale;

			}

		}

		return this;

	}

	// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
	// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
	trim( startTime, endTime ) {

		const times = this.times,
			nKeys = times.length;

		let from = 0,
			to = nKeys - 1;

		while ( from !== nKeys && times[ from ] < startTime ) {

			++ from;

		}

		while ( to !== - 1 && times[ to ] > endTime ) {

			-- to;

		}

		++ to; // inclusive -> exclusive bound

		if ( from !== 0 || to !== nKeys ) {

			// empty tracks are forbidden, so keep at least one keyframe
			if ( from >= to ) {

				to = Math.max( to, 1 );
				from = to - 1;

			}

			const stride = this.getValueSize();
			this.times = AnimationUtils.arraySlice( times, from, to );
			this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );

		}

		return this;

	}

	// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
	validate() {

		let valid = true;

		const valueSize = this.getValueSize();
		if ( valueSize - Math.floor( valueSize ) !== 0 ) {

			console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );
			valid = false;

		}

		const times = this.times,
			values = this.values,

			nKeys = times.length;

		if ( nKeys === 0 ) {

			console.error( 'THREE.KeyframeTrack: Track is empty.', this );
			valid = false;

		}

		let prevTime = null;

		for ( let i = 0; i !== nKeys; i ++ ) {

			const currTime = times[ i ];

			if ( typeof currTime === 'number' && isNaN( currTime ) ) {

				console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );
				valid = false;
				break;

			}

			if ( prevTime !== null && prevTime > currTime ) {

				console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );
				valid = false;
				break;

			}

			prevTime = currTime;

		}

		if ( values !== undefined ) {

			if ( AnimationUtils.isTypedArray( values ) ) {

				for ( let i = 0, n = values.length; i !== n; ++ i ) {

					const value = values[ i ];

					if ( isNaN( value ) ) {

						console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );
						valid = false;
						break;

					}

				}

			}

		}

		return valid;

	}

	// removes equivalent sequential keys as common in morph target sequences
	// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
	optimize() {

		// times or values may be shared with other tracks, so overwriting is unsafe
		const times = AnimationUtils.arraySlice( this.times ),
			values = AnimationUtils.arraySlice( this.values ),
			stride = this.getValueSize(),

			smoothInterpolation = this.getInterpolation() === InterpolateSmooth,

			lastIndex = times.length - 1;

		let writeIndex = 1;

		for ( let i = 1; i < lastIndex; ++ i ) {

			let keep = false;

			const time = times[ i ];
			const timeNext = times[ i + 1 ];

			// remove adjacent keyframes scheduled at the same time

			if ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {

				if ( ! smoothInterpolation ) {

					// remove unnecessary keyframes same as their neighbors

					const offset = i * stride,
						offsetP = offset - stride,
						offsetN = offset + stride;

					for ( let j = 0; j !== stride; ++ j ) {

						const value = values[ offset + j ];

						if ( value !== values[ offsetP + j ] ||
							value !== values[ offsetN + j ] ) {

							keep = true;
							break;

						}

					}

				} else {

					keep = true;

				}

			}

			// in-place compaction

			if ( keep ) {

				if ( i !== writeIndex ) {

					times[ writeIndex ] = times[ i ];

					const readOffset = i * stride,
						writeOffset = writeIndex * stride;

					for ( let j = 0; j !== stride; ++ j ) {

						values[ writeOffset + j ] = values[ readOffset + j ];

					}

				}

				++ writeIndex;

			}

		}

		// flush last keyframe (compaction looks ahead)

		if ( lastIndex > 0 ) {

			times[ writeIndex ] = times[ lastIndex ];

			for ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {

				values[ writeOffset + j ] = values[ readOffset + j ];

			}

			++ writeIndex;

		}

		if ( writeIndex !== times.length ) {

			this.times = AnimationUtils.arraySlice( times, 0, writeIndex );
			this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );

		} else {

			this.times = times;
			this.values = values;

		}

		return this;

	}

	clone() {

		const times = AnimationUtils.arraySlice( this.times, 0 );
		const values = AnimationUtils.arraySlice( this.values, 0 );

		const TypedKeyframeTrack = this.constructor;
		const track = new TypedKeyframeTrack( this.name, times, values );

		// Interpolant argument to constructor is not saved, so copy the factory method directly.
		track.createInterpolant = this.createInterpolant;

		return track;

	}

}

KeyframeTrack.prototype.TimeBufferType = Float32Array;
KeyframeTrack.prototype.ValueBufferType = Float32Array;
KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;

/**
 * A Track of Boolean keyframe values.
 */
class BooleanKeyframeTrack extends KeyframeTrack {}

BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';
BooleanKeyframeTrack.prototype.ValueBufferType = Array;
BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;
BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;
BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;

/**
 * A Track of keyframe values that represent color.
 */
class ColorKeyframeTrack extends KeyframeTrack {}

ColorKeyframeTrack.prototype.ValueTypeName = 'color';

/**
 * A Track of numeric keyframe values.
 */
class NumberKeyframeTrack extends KeyframeTrack {}

NumberKeyframeTrack.prototype.ValueTypeName = 'number';

/**
 * Spherical linear unit quaternion interpolant.
 */

function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

	Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

}

QuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

	constructor: QuaternionLinearInterpolant,

	interpolate_: function ( i1, t0, t, t1 ) {

		const result = this.resultBuffer,
			values = this.sampleValues,
			stride = this.valueSize,

			alpha = ( t - t0 ) / ( t1 - t0 );

		let offset = i1 * stride;

		for ( let end = offset + stride; offset !== end; offset += 4 ) {

			Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );

		}

		return result;

	}

} );

/**
 * A Track of quaternion keyframe values.
 */
class QuaternionKeyframeTrack extends KeyframeTrack {

	InterpolantFactoryMethodLinear( result ) {

		return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );

	}

}

QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';
// ValueBufferType is inherited
QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;
QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;

/**
 * A Track that interpolates Strings
 */
class StringKeyframeTrack extends KeyframeTrack {}

StringKeyframeTrack.prototype.ValueTypeName = 'string';
StringKeyframeTrack.prototype.ValueBufferType = Array;
StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;
StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;
StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;

/**
 * A Track of vectored keyframe values.
 */
class VectorKeyframeTrack extends KeyframeTrack {}

VectorKeyframeTrack.prototype.ValueTypeName = 'vector';

class AnimationClip {

	constructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {

		this.name = name;
		this.tracks = tracks;
		this.duration = duration;
		this.blendMode = blendMode;

		this.uuid = MathUtils.generateUUID();

		// this means it should figure out its duration by scanning the tracks
		if ( this.duration < 0 ) {

			this.resetDuration();

		}

	}


	static parse( json ) {

		const tracks = [],
			jsonTracks = json.tracks,
			frameTime = 1.0 / ( json.fps || 1.0 );

		for ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {

			tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );

		}

		const clip = new this( json.name, json.duration, tracks, json.blendMode );
		clip.uuid = json.uuid;

		return clip;

	}

	static toJSON( clip ) {

		const tracks = [],
			clipTracks = clip.tracks;

		const json = {

			'name': clip.name,
			'duration': clip.duration,
			'tracks': tracks,
			'uuid': clip.uuid,
			'blendMode': clip.blendMode

		};

		for ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {

			tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );

		}

		return json;

	}

	static CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {

		const numMorphTargets = morphTargetSequence.length;
		const tracks = [];

		for ( let i = 0; i < numMorphTargets; i ++ ) {

			let times = [];
			let values = [];

			times.push(
				( i + numMorphTargets - 1 ) % numMorphTargets,
				i,
				( i + 1 ) % numMorphTargets );

			values.push( 0, 1, 0 );

			const order = AnimationUtils.getKeyframeOrder( times );
			times = AnimationUtils.sortedArray( times, 1, order );
			values = AnimationUtils.sortedArray( values, 1, order );

			// if there is a key at the first frame, duplicate it as the
			// last frame as well for perfect loop.
			if ( ! noLoop && times[ 0 ] === 0 ) {

				times.push( numMorphTargets );
				values.push( values[ 0 ] );

			}

			tracks.push(
				new NumberKeyframeTrack(
					'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',
					times, values
				).scale( 1.0 / fps ) );

		}

		return new this( name, - 1, tracks );

	}

	static findByName( objectOrClipArray, name ) {

		let clipArray = objectOrClipArray;

		if ( ! Array.isArray( objectOrClipArray ) ) {

			const o = objectOrClipArray;
			clipArray = o.geometry && o.geometry.animations || o.animations;

		}

		for ( let i = 0; i < clipArray.length; i ++ ) {

			if ( clipArray[ i ].name === name ) {

				return clipArray[ i ];

			}

		}

		return null;

	}

	static CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {

		const animationToMorphTargets = {};

		// tested with https://regex101.com/ on trick sequences
		// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
		const pattern = /^([\w-]*?)([\d]+)$/;

		// sort morph target names into animation groups based
		// patterns like Walk_001, Walk_002, Run_001, Run_002
		for ( let i = 0, il = morphTargets.length; i < il; i ++ ) {

			const morphTarget = morphTargets[ i ];
			const parts = morphTarget.name.match( pattern );

			if ( parts && parts.length > 1 ) {

				const name = parts[ 1 ];

				let animationMorphTargets = animationToMorphTargets[ name ];

				if ( ! animationMorphTargets ) {

					animationToMorphTargets[ name ] = animationMorphTargets = [];

				}

				animationMorphTargets.push( morphTarget );

			}

		}

		const clips = [];

		for ( const name in animationToMorphTargets ) {

			clips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );

		}

		return clips;

	}

	// parse the animation.hierarchy format
	static parseAnimation( animation, bones ) {

		if ( ! animation ) {

			console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );
			return null;

		}

		const addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {

			// only return track if there are actually keys.
			if ( animationKeys.length !== 0 ) {

				const times = [];
				const values = [];

				AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );

				// empty keys are filtered out, so check again
				if ( times.length !== 0 ) {

					destTracks.push( new trackType( trackName, times, values ) );

				}

			}

		};

		const tracks = [];

		const clipName = animation.name || 'default';
		const fps = animation.fps || 30;
		const blendMode = animation.blendMode;

		// automatic length determination in AnimationClip.
		let duration = animation.length || - 1;

		const hierarchyTracks = animation.hierarchy || [];

		for ( let h = 0; h < hierarchyTracks.length; h ++ ) {

			const animationKeys = hierarchyTracks[ h ].keys;

			// skip empty tracks
			if ( ! animationKeys || animationKeys.length === 0 ) continue;

			// process morph targets
			if ( animationKeys[ 0 ].morphTargets ) {

				// figure out all morph targets used in this track
				const morphTargetNames = {};

				let k;

				for ( k = 0; k < animationKeys.length; k ++ ) {

					if ( animationKeys[ k ].morphTargets ) {

						for ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {

							morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;

						}

					}

				}

				// create a track for each morph target with all zero
				// morphTargetInfluences except for the keys in which
				// the morphTarget is named.
				for ( const morphTargetName in morphTargetNames ) {

					const times = [];
					const values = [];

					for ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {

						const animationKey = animationKeys[ k ];

						times.push( animationKey.time );
						values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );

					}

					tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );

				}

				duration = morphTargetNames.length * ( fps || 1.0 );

			} else {

				// ...assume skeletal animation

				const boneName = '.bones[' + bones[ h ].name + ']';

				addNonemptyTrack(
					VectorKeyframeTrack, boneName + '.position',
					animationKeys, 'pos', tracks );

				addNonemptyTrack(
					QuaternionKeyframeTrack, boneName + '.quaternion',
					animationKeys, 'rot', tracks );

				addNonemptyTrack(
					VectorKeyframeTrack, boneName + '.scale',
					animationKeys, 'scl', tracks );

			}

		}

		if ( tracks.length === 0 ) {

			return null;

		}

		const clip = new this( clipName, duration, tracks, blendMode );

		return clip;

	}

	resetDuration() {

		const tracks = this.tracks;
		let duration = 0;

		for ( let i = 0, n = tracks.length; i !== n; ++ i ) {

			const track = this.tracks[ i ];

			duration = Math.max( duration, track.times[ track.times.length - 1 ] );

		}

		this.duration = duration;

		return this;

	}

	trim() {

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			this.tracks[ i ].trim( 0, this.duration );

		}

		return this;

	}

	validate() {

		let valid = true;

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			valid = valid && this.tracks[ i ].validate();

		}

		return valid;

	}

	optimize() {

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			this.tracks[ i ].optimize();

		}

		return this;

	}

	clone() {

		const tracks = [];

		for ( let i = 0; i < this.tracks.length; i ++ ) {

			tracks.push( this.tracks[ i ].clone() );

		}

		return new this.constructor( this.name, this.duration, tracks, this.blendMode );

	}

	toJSON() {

		return this.constructor.toJSON( this );

	}

}

function getTrackTypeForValueTypeName( typeName ) {

	switch ( typeName.toLowerCase() ) {

		case 'scalar':
		case 'double':
		case 'float':
		case 'number':
		case 'integer':

			return NumberKeyframeTrack;

		case 'vector':
		case 'vector2':
		case 'vector3':
		case 'vector4':

			return VectorKeyframeTrack;

		case 'color':

			return ColorKeyframeTrack;

		case 'quaternion':

			return QuaternionKeyframeTrack;

		case 'bool':
		case 'boolean':

			return BooleanKeyframeTrack;

		case 'string':

			return StringKeyframeTrack;

	}

	throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );

}

function parseKeyframeTrack( json ) {

	if ( json.type === undefined ) {

		throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );

	}

	const trackType = getTrackTypeForValueTypeName( json.type );

	if ( json.times === undefined ) {

		const times = [], values = [];

		AnimationUtils.flattenJSON( json.keys, times, values, 'value' );

		json.times = times;
		json.values = values;

	}

	// derived classes can define a static parse method
	if ( trackType.parse !== undefined ) {

		return trackType.parse( json );

	} else {

		// by default, we assume a constructor compatible with the base
		return new trackType( json.name, json.times, json.values, json.interpolation );

	}

}

const Cache = {

	enabled: false,

	files: {},

	add: function ( key, file ) {

		if ( this.enabled === false ) return;

		// console.log( 'THREE.Cache', 'Adding key:', key );

		this.files[ key ] = file;

	},

	get: function ( key ) {

		if ( this.enabled === false ) return;

		// console.log( 'THREE.Cache', 'Checking key:', key );

		return this.files[ key ];

	},

	remove: function ( key ) {

		delete this.files[ key ];

	},

	clear: function () {

		this.files = {};

	}

};

function LoadingManager( onLoad, onProgress, onError ) {

	const scope = this;

	let isLoading = false;
	let itemsLoaded = 0;
	let itemsTotal = 0;
	let urlModifier = undefined;
	const handlers = [];

	// Refer to #5689 for the reason why we don't set .onStart
	// in the constructor

	this.onStart = undefined;
	this.onLoad = onLoad;
	this.onProgress = onProgress;
	this.onError = onError;

	this.itemStart = function ( url ) {

		itemsTotal ++;

		if ( isLoading === false ) {

			if ( scope.onStart !== undefined ) {

				scope.onStart( url, itemsLoaded, itemsTotal );

			}

		}

		isLoading = true;

	};

	this.itemEnd = function ( url ) {

		itemsLoaded ++;

		if ( scope.onProgress !== undefined ) {

			scope.onProgress( url, itemsLoaded, itemsTotal );

		}

		if ( itemsLoaded === itemsTotal ) {

			isLoading = false;

			if ( scope.onLoad !== undefined ) {

				scope.onLoad();

			}

		}

	};

	this.itemError = function ( url ) {

		if ( scope.onError !== undefined ) {

			scope.onError( url );

		}

	};

	this.resolveURL = function ( url ) {

		if ( urlModifier ) {

			return urlModifier( url );

		}

		return url;

	};

	this.setURLModifier = function ( transform ) {

		urlModifier = transform;

		return this;

	};

	this.addHandler = function ( regex, loader ) {

		handlers.push( regex, loader );

		return this;

	};

	this.removeHandler = function ( regex ) {

		const index = handlers.indexOf( regex );

		if ( index !== - 1 ) {

			handlers.splice( index, 2 );

		}

		return this;

	};

	this.getHandler = function ( file ) {

		for ( let i = 0, l = handlers.length; i < l; i += 2 ) {

			const regex = handlers[ i ];
			const loader = handlers[ i + 1 ];

			if ( regex.global ) regex.lastIndex = 0; // see #17920

			if ( regex.test( file ) ) {

				return loader;

			}

		}

		return null;

	};

}

const DefaultLoadingManager = new LoadingManager();

function Loader( manager ) {

	this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

	this.crossOrigin = 'anonymous';
	this.withCredentials = false;
	this.path = '';
	this.resourcePath = '';
	this.requestHeader = {};

}

Object.assign( Loader.prototype, {

	load: function ( /* url, onLoad, onProgress, onError */ ) {},

	loadAsync: function ( url, onProgress ) {

		const scope = this;

		return new Promise( function ( resolve, reject ) {

			scope.load( url, resolve, onProgress, reject );

		} );

	},

	parse: function ( /* data */ ) {},

	setCrossOrigin: function ( crossOrigin ) {

		this.crossOrigin = crossOrigin;
		return this;

	},

	setWithCredentials: function ( value ) {

		this.withCredentials = value;
		return this;

	},

	setPath: function ( path ) {

		this.path = path;
		return this;

	},

	setResourcePath: function ( resourcePath ) {

		this.resourcePath = resourcePath;
		return this;

	},

	setRequestHeader: function ( requestHeader ) {

		this.requestHeader = requestHeader;
		return this;

	}

} );

const loading = {};

function FileLoader( manager ) {

	Loader.call( this, manager );

}

FileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

	constructor: FileLoader,

	load: function ( url, onLoad, onProgress, onError ) {

		if ( url === undefined ) url = '';

		if ( this.path !== undefined ) url = this.path + url;

		url = this.manager.resolveURL( url );

		const scope = this;

		const cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		// Check if request is duplicate

		if ( loading[ url ] !== undefined ) {

			loading[ url ].push( {

				onLoad: onLoad,
				onProgress: onProgress,
				onError: onError

			} );

			return;

		}

		// Check for data: URI
		const dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;
		const dataUriRegexResult = url.match( dataUriRegex );
		let request;

		// Safari can not handle Data URIs through XMLHttpRequest so process manually
		if ( dataUriRegexResult ) {

			const mimeType = dataUriRegexResult[ 1 ];
			const isBase64 = !! dataUriRegexResult[ 2 ];

			let data = dataUriRegexResult[ 3 ];
			data = decodeURIComponent( data );

			if ( isBase64 ) data = atob( data );

			try {

				let response;
				const responseType = ( this.responseType || '' ).toLowerCase();

				switch ( responseType ) {

					case 'arraybuffer':
					case 'blob':

						const view = new Uint8Array( data.length );

						for ( let i = 0; i < data.length; i ++ ) {

							view[ i ] = data.charCodeAt( i );

						}

						if ( responseType === 'blob' ) {

							response = new Blob( [ view.buffer ], { type: mimeType } );

						} else {

							response = view.buffer;

						}

						break;

					case 'document':

						const parser = new DOMParser();
						response = parser.parseFromString( data, mimeType );

						break;

					case 'json':

						response = JSON.parse( data );

						break;

					default: // 'text' or other

						response = data;

						break;

				}

				// Wait for next browser tick like standard XMLHttpRequest event dispatching does
				setTimeout( function () {

					if ( onLoad ) onLoad( response );

					scope.manager.itemEnd( url );

				}, 0 );

			} catch ( error ) {

				// Wait for next browser tick like standard XMLHttpRequest event dispatching does
				setTimeout( function () {

					if ( onError ) onError( error );

					scope.manager.itemError( url );
					scope.manager.itemEnd( url );

				}, 0 );

			}

		} else {

			// Initialise array for duplicate requests

			loading[ url ] = [];

			loading[ url ].push( {

				onLoad: onLoad,
				onProgress: onProgress,
				onError: onError

			} );

			request = new XMLHttpRequest();

			request.open( 'GET', url, true );

			request.addEventListener( 'load', function ( event ) {

				const response = this.response;

				const callbacks = loading[ url ];

				delete loading[ url ];

				if ( this.status === 200 || this.status === 0 ) {

					// Some browsers return HTTP Status 0 when using non-http protocol
					// e.g. 'file://' or 'data://'. Handle as success.

					if ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );

					// Add to cache only on HTTP success, so that we do not cache
					// error response bodies as proper responses to requests.
					Cache.add( url, response );

					for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

						const callback = callbacks[ i ];
						if ( callback.onLoad ) callback.onLoad( response );

					}

					scope.manager.itemEnd( url );

				} else {

					for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

						const callback = callbacks[ i ];
						if ( callback.onError ) callback.onError( event );

					}

					scope.manager.itemError( url );
					scope.manager.itemEnd( url );

				}

			}, false );

			request.addEventListener( 'progress', function ( event ) {

				const callbacks = loading[ url ];

				for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

					const callback = callbacks[ i ];
					if ( callback.onProgress ) callback.onProgress( event );

				}

			}, false );

			request.addEventListener( 'error', function ( event ) {

				const callbacks = loading[ url ];

				delete loading[ url ];

				for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

					const callback = callbacks[ i ];
					if ( callback.onError ) callback.onError( event );

				}

				scope.manager.itemError( url );
				scope.manager.itemEnd( url );

			}, false );

			request.addEventListener( 'abort', function ( event ) {

				const callbacks = loading[ url ];

				delete loading[ url ];

				for ( let i = 0, il = callbacks.length; i < il; i ++ ) {

					const callback = callbacks[ i ];
					if ( callback.onError ) callback.onError( event );

				}

				scope.manager.itemError( url );
				scope.manager.itemEnd( url );

			}, false );

			if ( this.responseType !== undefined ) request.responseType = this.responseType;
			if ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;

			if ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );

			for ( const header in this.requestHeader ) {

				request.setRequestHeader( header, this.requestHeader[ header ] );

			}

			request.send( null );

		}

		scope.manager.itemStart( url );

		return request;

	},

	setResponseType: function ( value ) {

		this.responseType = value;
		return this;

	},

	setMimeType: function ( value ) {

		this.mimeType = value;
		return this;

	}

} );

class AnimationLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( text ) {

			try {

				onLoad( scope.parse( JSON.parse( text ) ) );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

	parse( json ) {

		const animations = [];

		for ( let i = 0; i < json.length; i ++ ) {

			const clip = AnimationClip.parse( json[ i ] );

			animations.push( clip );

		}

		return animations;

	}

}

/**
 * Abstract Base class to block based textures loader (dds, pvr, ...)
 *
 * Sub classes have to implement the parse() method which will be used in load().
 */

function CompressedTextureLoader( manager ) {

	Loader.call( this, manager );

}

CompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

	constructor: CompressedTextureLoader,

	load: function ( url, onLoad, onProgress, onError ) {

		const scope = this;

		const images = [];

		const texture = new CompressedTexture();

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setResponseType( 'arraybuffer' );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( scope.withCredentials );

		let loaded = 0;

		function loadTexture( i ) {

			loader.load( url[ i ], function ( buffer ) {

				const texDatas = scope.parse( buffer, true );

				images[ i ] = {
					width: texDatas.width,
					height: texDatas.height,
					format: texDatas.format,
					mipmaps: texDatas.mipmaps
				};

				loaded += 1;

				if ( loaded === 6 ) {

					if ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;

					texture.image = images;
					texture.format = texDatas.format;
					texture.needsUpdate = true;

					if ( onLoad ) onLoad( texture );

				}

			}, onProgress, onError );

		}

		if ( Array.isArray( url ) ) {

			for ( let i = 0, il = url.length; i < il; ++ i ) {

				loadTexture( i );

			}

		} else {

			// compressed cubemap texture stored in a single DDS file

			loader.load( url, function ( buffer ) {

				const texDatas = scope.parse( buffer, true );

				if ( texDatas.isCubemap ) {

					const faces = texDatas.mipmaps.length / texDatas.mipmapCount;

					for ( let f = 0; f < faces; f ++ ) {

						images[ f ] = { mipmaps: [] };

						for ( let i = 0; i < texDatas.mipmapCount; i ++ ) {

							images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );
							images[ f ].format = texDatas.format;
							images[ f ].width = texDatas.width;
							images[ f ].height = texDatas.height;

						}

					}

					texture.image = images;

				} else {

					texture.image.width = texDatas.width;
					texture.image.height = texDatas.height;
					texture.mipmaps = texDatas.mipmaps;

				}

				if ( texDatas.mipmapCount === 1 ) {

					texture.minFilter = LinearFilter;

				}

				texture.format = texDatas.format;
				texture.needsUpdate = true;

				if ( onLoad ) onLoad( texture );

			}, onProgress, onError );

		}

		return texture;

	}

} );

class ImageLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		if ( this.path !== undefined ) url = this.path + url;

		url = this.manager.resolveURL( url );

		const scope = this;

		const cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		const image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );

		function onImageLoad() {

			image.removeEventListener( 'load', onImageLoad, false );
			image.removeEventListener( 'error', onImageError, false );

			Cache.add( url, this );

			if ( onLoad ) onLoad( this );

			scope.manager.itemEnd( url );

		}

		function onImageError( event ) {

			image.removeEventListener( 'load', onImageLoad, false );
			image.removeEventListener( 'error', onImageError, false );

			if ( onError ) onError( event );

			scope.manager.itemError( url );
			scope.manager.itemEnd( url );

		}

		image.addEventListener( 'load', onImageLoad, false );
		image.addEventListener( 'error', onImageError, false );

		if ( url.substr( 0, 5 ) !== 'data:' ) {

			if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;

		}

		scope.manager.itemStart( url );

		image.src = url;

		return image;

	}

}

class CubeTextureLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( urls, onLoad, onProgress, onError ) {

		const texture = new CubeTexture();

		const loader = new ImageLoader( this.manager );
		loader.setCrossOrigin( this.crossOrigin );
		loader.setPath( this.path );

		let loaded = 0;

		function loadTexture( i ) {

			loader.load( urls[ i ], function ( image ) {

				texture.images[ i ] = image;

				loaded ++;

				if ( loaded === 6 ) {

					texture.needsUpdate = true;

					if ( onLoad ) onLoad( texture );

				}

			}, undefined, onError );

		}

		for ( let i = 0; i < urls.length; ++ i ) {

			loadTexture( i );

		}

		return texture;

	}

}

/**
 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
 *
 * Sub classes have to implement the parse() method which will be used in load().
 */

function DataTextureLoader( manager ) {

	Loader.call( this, manager );

}

DataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

	constructor: DataTextureLoader,

	load: function ( url, onLoad, onProgress, onError ) {

		const scope = this;

		const texture = new DataTexture();

		const loader = new FileLoader( this.manager );
		loader.setResponseType( 'arraybuffer' );
		loader.setRequestHeader( this.requestHeader );
		loader.setPath( this.path );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( buffer ) {

			const texData = scope.parse( buffer );

			if ( ! texData ) return;

			if ( texData.image !== undefined ) {

				texture.image = texData.image;

			} else if ( texData.data !== undefined ) {

				texture.image.width = texData.width;
				texture.image.height = texData.height;
				texture.image.data = texData.data;

			}

			texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;
			texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;

			texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;
			texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;

			texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;

			if ( texData.encoding !== undefined ) {

				texture.encoding = texData.encoding;

			}

			if ( texData.flipY !== undefined ) {

				texture.flipY = texData.flipY;

			}

			if ( texData.format !== undefined ) {

				texture.format = texData.format;

			}

			if ( texData.type !== undefined ) {

				texture.type = texData.type;

			}

			if ( texData.mipmaps !== undefined ) {

				texture.mipmaps = texData.mipmaps;
				texture.minFilter = LinearMipmapLinearFilter; // presumably...

			}

			if ( texData.mipmapCount === 1 ) {

				texture.minFilter = LinearFilter;

			}

			texture.needsUpdate = true;

			if ( onLoad ) onLoad( texture, texData );

		}, onProgress, onError );


		return texture;

	}

} );

function TextureLoader( manager ) {

	Loader.call( this, manager );

}

TextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

	constructor: TextureLoader,

	load: function ( url, onLoad, onProgress, onError ) {

		const texture = new Texture();

		const loader = new ImageLoader( this.manager );
		loader.setCrossOrigin( this.crossOrigin );
		loader.setPath( this.path );

		loader.load( url, function ( image ) {

			texture.image = image;

			// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
			const isJPEG = url.search( /\.jpe?g($|\?)/i ) > 0 || url.search( /^data\:image\/jpeg/ ) === 0;

			texture.format = isJPEG ? RGBFormat : RGBAFormat;
			texture.needsUpdate = true;

			if ( onLoad !== undefined ) {

				onLoad( texture );

			}

		}, onProgress, onError );

		return texture;

	}

} );

/**
 * Extensible curve object.
 *
 * Some common of curve methods:
 * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )
 * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )
 * .getPoints(), .getSpacedPoints()
 * .getLength()
 * .updateArcLengths()
 *
 * This following curves inherit from THREE.Curve:
 *
 * -- 2D curves --
 * THREE.ArcCurve
 * THREE.CubicBezierCurve
 * THREE.EllipseCurve
 * THREE.LineCurve
 * THREE.QuadraticBezierCurve
 * THREE.SplineCurve
 *
 * -- 3D curves --
 * THREE.CatmullRomCurve3
 * THREE.CubicBezierCurve3
 * THREE.LineCurve3
 * THREE.QuadraticBezierCurve3
 *
 * A series of curves can be represented as a THREE.CurvePath.
 *
 **/

function Curve() {

	this.type = 'Curve';

	this.arcLengthDivisions = 200;

}

Object.assign( Curve.prototype, {

	// Virtual base class method to overwrite and implement in subclasses
	//	- t [0 .. 1]

	getPoint: function ( /* t, optionalTarget */ ) {

		console.warn( 'THREE.Curve: .getPoint() not implemented.' );
		return null;

	},

	// Get point at relative position in curve according to arc length
	// - u [0 .. 1]

	getPointAt: function ( u, optionalTarget ) {

		const t = this.getUtoTmapping( u );
		return this.getPoint( t, optionalTarget );

	},

	// Get sequence of points using getPoint( t )

	getPoints: function ( divisions = 5 ) {

		const points = [];

		for ( let d = 0; d <= divisions; d ++ ) {

			points.push( this.getPoint( d / divisions ) );

		}

		return points;

	},

	// Get sequence of points using getPointAt( u )

	getSpacedPoints: function ( divisions = 5 ) {

		const points = [];

		for ( let d = 0; d <= divisions; d ++ ) {

			points.push( this.getPointAt( d / divisions ) );

		}

		return points;

	},

	// Get total curve arc length

	getLength: function () {

		const lengths = this.getLengths();
		return lengths[ lengths.length - 1 ];

	},

	// Get list of cumulative segment lengths

	getLengths: function ( divisions ) {

		if ( divisions === undefined ) divisions = this.arcLengthDivisions;

		if ( this.cacheArcLengths &&
			( this.cacheArcLengths.length === divisions + 1 ) &&
			! this.needsUpdate ) {

			return this.cacheArcLengths;

		}

		this.needsUpdate = false;

		const cache = [];
		let current, last = this.getPoint( 0 );
		let sum = 0;

		cache.push( 0 );

		for ( let p = 1; p <= divisions; p ++ ) {

			current = this.getPoint( p / divisions );
			sum += current.distanceTo( last );
			cache.push( sum );
			last = current;

		}

		this.cacheArcLengths = cache;

		return cache; // { sums: cache, sum: sum }; Sum is in the last element.

	},

	updateArcLengths: function () {

		this.needsUpdate = true;
		this.getLengths();

	},

	// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant

	getUtoTmapping: function ( u, distance ) {

		const arcLengths = this.getLengths();

		let i = 0;
		const il = arcLengths.length;

		let targetArcLength; // The targeted u distance value to get

		if ( distance ) {

			targetArcLength = distance;

		} else {

			targetArcLength = u * arcLengths[ il - 1 ];

		}

		// binary search for the index with largest value smaller than target u distance

		let low = 0, high = il - 1, comparison;

		while ( low <= high ) {

			i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats

			comparison = arcLengths[ i ] - targetArcLength;

			if ( comparison < 0 ) {

				low = i + 1;

			} else if ( comparison > 0 ) {

				high = i - 1;

			} else {

				high = i;
				break;

				// DONE

			}

		}

		i = high;

		if ( arcLengths[ i ] === targetArcLength ) {

			return i / ( il - 1 );

		}

		// we could get finer grain at lengths, or use simple interpolation between two points

		const lengthBefore = arcLengths[ i ];
		const lengthAfter = arcLengths[ i + 1 ];

		const segmentLength = lengthAfter - lengthBefore;

		// determine where we are between the 'before' and 'after' points

		const segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;

		// add that fractional amount to t

		const t = ( i + segmentFraction ) / ( il - 1 );

		return t;

	},

	// Returns a unit vector tangent at t
	// In case any sub curve does not implement its tangent derivation,
	// 2 points a small delta apart will be used to find its gradient
	// which seems to give a reasonable approximation

	getTangent: function ( t, optionalTarget ) {

		const delta = 0.0001;
		let t1 = t - delta;
		let t2 = t + delta;

		// Capping in case of danger

		if ( t1 < 0 ) t1 = 0;
		if ( t2 > 1 ) t2 = 1;

		const pt1 = this.getPoint( t1 );
		const pt2 = this.getPoint( t2 );

		const tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );

		tangent.copy( pt2 ).sub( pt1 ).normalize();

		return tangent;

	},

	getTangentAt: function ( u, optionalTarget ) {

		const t = this.getUtoTmapping( u );
		return this.getTangent( t, optionalTarget );

	},

	computeFrenetFrames: function ( segments, closed ) {

		// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf

		const normal = new Vector3();

		const tangents = [];
		const normals = [];
		const binormals = [];

		const vec = new Vector3();
		const mat = new Matrix4();

		// compute the tangent vectors for each segment on the curve

		for ( let i = 0; i <= segments; i ++ ) {

			const u = i / segments;

			tangents[ i ] = this.getTangentAt( u, new Vector3() );
			tangents[ i ].normalize();

		}

		// select an initial normal vector perpendicular to the first tangent vector,
		// and in the direction of the minimum tangent xyz component

		normals[ 0 ] = new Vector3();
		binormals[ 0 ] = new Vector3();
		let min = Number.MAX_VALUE;
		const tx = Math.abs( tangents[ 0 ].x );
		const ty = Math.abs( tangents[ 0 ].y );
		const tz = Math.abs( tangents[ 0 ].z );

		if ( tx <= min ) {

			min = tx;
			normal.set( 1, 0, 0 );

		}

		if ( ty <= min ) {

			min = ty;
			normal.set( 0, 1, 0 );

		}

		if ( tz <= min ) {

			normal.set( 0, 0, 1 );

		}

		vec.crossVectors( tangents[ 0 ], normal ).normalize();

		normals[ 0 ].crossVectors( tangents[ 0 ], vec );
		binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );


		// compute the slowly-varying normal and binormal vectors for each segment on the curve

		for ( let i = 1; i <= segments; i ++ ) {

			normals[ i ] = normals[ i - 1 ].clone();

			binormals[ i ] = binormals[ i - 1 ].clone();

			vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );

			if ( vec.length() > Number.EPSILON ) {

				vec.normalize();

				const theta = Math.acos( MathUtils.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors

				normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );

			}

			binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

		}

		// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same

		if ( closed === true ) {

			let theta = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );
			theta /= segments;

			if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {

				theta = - theta;

			}

			for ( let i = 1; i <= segments; i ++ ) {

				// twist a little...
				normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );
				binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

			}

		}

		return {
			tangents: tangents,
			normals: normals,
			binormals: binormals
		};

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	copy: function ( source ) {

		this.arcLengthDivisions = source.arcLengthDivisions;

		return this;

	},

	toJSON: function () {

		const data = {
			metadata: {
				version: 4.5,
				type: 'Curve',
				generator: 'Curve.toJSON'
			}
		};

		data.arcLengthDivisions = this.arcLengthDivisions;
		data.type = this.type;

		return data;

	},

	fromJSON: function ( json ) {

		this.arcLengthDivisions = json.arcLengthDivisions;

		return this;

	}

} );

class EllipseCurve extends Curve {

	constructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {

		super();

		this.type = 'EllipseCurve';

		this.aX = aX;
		this.aY = aY;

		this.xRadius = xRadius;
		this.yRadius = yRadius;

		this.aStartAngle = aStartAngle;
		this.aEndAngle = aEndAngle;

		this.aClockwise = aClockwise;

		this.aRotation = aRotation;

	}

	getPoint( t, optionalTarget ) {

		const point = optionalTarget || new Vector2();

		const twoPi = Math.PI * 2;
		let deltaAngle = this.aEndAngle - this.aStartAngle;
		const samePoints = Math.abs( deltaAngle ) < Number.EPSILON;

		// ensures that deltaAngle is 0 .. 2 PI
		while ( deltaAngle < 0 ) deltaAngle += twoPi;
		while ( deltaAngle > twoPi ) deltaAngle -= twoPi;

		if ( deltaAngle < Number.EPSILON ) {

			if ( samePoints ) {

				deltaAngle = 0;

			} else {

				deltaAngle = twoPi;

			}

		}

		if ( this.aClockwise === true && ! samePoints ) {

			if ( deltaAngle === twoPi ) {

				deltaAngle = - twoPi;

			} else {

				deltaAngle = deltaAngle - twoPi;

			}

		}

		const angle = this.aStartAngle + t * deltaAngle;
		let x = this.aX + this.xRadius * Math.cos( angle );
		let y = this.aY + this.yRadius * Math.sin( angle );

		if ( this.aRotation !== 0 ) {

			const cos = Math.cos( this.aRotation );
			const sin = Math.sin( this.aRotation );

			const tx = x - this.aX;
			const ty = y - this.aY;

			// Rotate the point about the center of the ellipse.
			x = tx * cos - ty * sin + this.aX;
			y = tx * sin + ty * cos + this.aY;

		}

		return point.set( x, y );

	}

	copy( source ) {

		super.copy( source );

		this.aX = source.aX;
		this.aY = source.aY;

		this.xRadius = source.xRadius;
		this.yRadius = source.yRadius;

		this.aStartAngle = source.aStartAngle;
		this.aEndAngle = source.aEndAngle;

		this.aClockwise = source.aClockwise;

		this.aRotation = source.aRotation;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.aX = this.aX;
		data.aY = this.aY;

		data.xRadius = this.xRadius;
		data.yRadius = this.yRadius;

		data.aStartAngle = this.aStartAngle;
		data.aEndAngle = this.aEndAngle;

		data.aClockwise = this.aClockwise;

		data.aRotation = this.aRotation;

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.aX = json.aX;
		this.aY = json.aY;

		this.xRadius = json.xRadius;
		this.yRadius = json.yRadius;

		this.aStartAngle = json.aStartAngle;
		this.aEndAngle = json.aEndAngle;

		this.aClockwise = json.aClockwise;

		this.aRotation = json.aRotation;

		return this;

	}

}

EllipseCurve.prototype.isEllipseCurve = true;

class ArcCurve extends EllipseCurve {

	constructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		super( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

		this.type = 'ArcCurve';

	}

}

ArcCurve.prototype.isArcCurve = true;

/**
 * Centripetal CatmullRom Curve - which is useful for avoiding
 * cusps and self-intersections in non-uniform catmull rom curves.
 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
 *
 * curve.type accepts centripetal(default), chordal and catmullrom
 * curve.tension is used for catmullrom which defaults to 0.5
 */


/*
Based on an optimized c++ solution in
 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
 - http://ideone.com/NoEbVM

This CubicPoly class could be used for reusing some variables and calculations,
but for three.js curve use, it could be possible inlined and flatten into a single function call
which can be placed in CurveUtils.
*/

function CubicPoly() {

	let c0 = 0, c1 = 0, c2 = 0, c3 = 0;

	/*
	 * Compute coefficients for a cubic polynomial
	 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
	 * such that
	 *   p(0) = x0, p(1) = x1
	 *  and
	 *   p'(0) = t0, p'(1) = t1.
	 */
	function init( x0, x1, t0, t1 ) {

		c0 = x0;
		c1 = t0;
		c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;
		c3 = 2 * x0 - 2 * x1 + t0 + t1;

	}

	return {

		initCatmullRom: function ( x0, x1, x2, x3, tension ) {

			init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );

		},

		initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {

			// compute tangents when parameterized in [t1,t2]
			let t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;
			let t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;

			// rescale tangents for parametrization in [0,1]
			t1 *= dt1;
			t2 *= dt1;

			init( x1, x2, t1, t2 );

		},

		calc: function ( t ) {

			const t2 = t * t;
			const t3 = t2 * t;
			return c0 + c1 * t + c2 * t2 + c3 * t3;

		}

	};

}

//

const tmp = new Vector3();
const px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();

class CatmullRomCurve3 extends Curve {

	constructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {

		super();

		this.type = 'CatmullRomCurve3';

		this.points = points;
		this.closed = closed;
		this.curveType = curveType;
		this.tension = tension;

	}

	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		const points = this.points;
		const l = points.length;

		const p = ( l - ( this.closed ? 0 : 1 ) ) * t;
		let intPoint = Math.floor( p );
		let weight = p - intPoint;

		if ( this.closed ) {

			intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;

		} else if ( weight === 0 && intPoint === l - 1 ) {

			intPoint = l - 2;
			weight = 1;

		}

		let p0, p3; // 4 points (p1 & p2 defined below)

		if ( this.closed || intPoint > 0 ) {

			p0 = points[ ( intPoint - 1 ) % l ];

		} else {

			// extrapolate first point
			tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );
			p0 = tmp;

		}

		const p1 = points[ intPoint % l ];
		const p2 = points[ ( intPoint + 1 ) % l ];

		if ( this.closed || intPoint + 2 < l ) {

			p3 = points[ ( intPoint + 2 ) % l ];

		} else {

			// extrapolate last point
			tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );
			p3 = tmp;

		}

		if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {

			// init Centripetal / Chordal Catmull-Rom
			const pow = this.curveType === 'chordal' ? 0.5 : 0.25;
			let dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );
			let dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );
			let dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );

			// safety check for repeated points
			if ( dt1 < 1e-4 ) dt1 = 1.0;
			if ( dt0 < 1e-4 ) dt0 = dt1;
			if ( dt2 < 1e-4 ) dt2 = dt1;

			px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );
			py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );
			pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );

		} else if ( this.curveType === 'catmullrom' ) {

			px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );
			py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );
			pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );

		}

		point.set(
			px.calc( weight ),
			py.calc( weight ),
			pz.calc( weight )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.points = [];

		for ( let i = 0, l = source.points.length; i < l; i ++ ) {

			const point = source.points[ i ];

			this.points.push( point.clone() );

		}

		this.closed = source.closed;
		this.curveType = source.curveType;
		this.tension = source.tension;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.points = [];

		for ( let i = 0, l = this.points.length; i < l; i ++ ) {

			const point = this.points[ i ];
			data.points.push( point.toArray() );

		}

		data.closed = this.closed;
		data.curveType = this.curveType;
		data.tension = this.tension;

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.points = [];

		for ( let i = 0, l = json.points.length; i < l; i ++ ) {

			const point = json.points[ i ];
			this.points.push( new Vector3().fromArray( point ) );

		}

		this.closed = json.closed;
		this.curveType = json.curveType;
		this.tension = json.tension;

		return this;

	}

}

CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;

/**
 * Bezier Curves formulas obtained from
 * http://en.wikipedia.org/wiki/Bézier_curve
 */

function CatmullRom( t, p0, p1, p2, p3 ) {

	const v0 = ( p2 - p0 ) * 0.5;
	const v1 = ( p3 - p1 ) * 0.5;
	const t2 = t * t;
	const t3 = t * t2;
	return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;

}

//

function QuadraticBezierP0( t, p ) {

	const k = 1 - t;
	return k * k * p;

}

function QuadraticBezierP1( t, p ) {

	return 2 * ( 1 - t ) * t * p;

}

function QuadraticBezierP2( t, p ) {

	return t * t * p;

}

function QuadraticBezier( t, p0, p1, p2 ) {

	return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +
		QuadraticBezierP2( t, p2 );

}

//

function CubicBezierP0( t, p ) {

	const k = 1 - t;
	return k * k * k * p;

}

function CubicBezierP1( t, p ) {

	const k = 1 - t;
	return 3 * k * k * t * p;

}

function CubicBezierP2( t, p ) {

	return 3 * ( 1 - t ) * t * t * p;

}

function CubicBezierP3( t, p ) {

	return t * t * t * p;

}

function CubicBezier( t, p0, p1, p2, p3 ) {

	return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +
		CubicBezierP3( t, p3 );

}

class CubicBezierCurve extends Curve {

	constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {

		super();

		this.type = 'CubicBezierCurve';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;
		this.v3 = v3;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

		point.set(
			CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
			CubicBezier( t, v0.y, v1.y, v2.y, v3.y )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );
		this.v3.copy( source.v3 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();
		data.v3 = this.v3.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );
		this.v3.fromArray( json.v3 );

		return this;

	}

}

CubicBezierCurve.prototype.isCubicBezierCurve = true;

class CubicBezierCurve3 extends Curve {

	constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {

		super();

		this.type = 'CubicBezierCurve3';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;
		this.v3 = v3;

	}

	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

		point.set(
			CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
			CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),
			CubicBezier( t, v0.z, v1.z, v2.z, v3.z )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );
		this.v3.copy( source.v3 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();
		data.v3 = this.v3.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );
		this.v3.fromArray( json.v3 );

		return this;

	}

}

CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;

class LineCurve extends Curve {

	constructor( v1 = new Vector2(), v2 = new Vector2() ) {

		super();

		this.type = 'LineCurve';

		this.v1 = v1;
		this.v2 = v2;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		if ( t === 1 ) {

			point.copy( this.v2 );

		} else {

			point.copy( this.v2 ).sub( this.v1 );
			point.multiplyScalar( t ).add( this.v1 );

		}

		return point;

	}

	// Line curve is linear, so we can overwrite default getPointAt
	getPointAt( u, optionalTarget ) {

		return this.getPoint( u, optionalTarget );

	}

	getTangent( t, optionalTarget ) {

		const tangent = optionalTarget || new Vector2();

		tangent.copy( this.v2 ).sub( this.v1 ).normalize();

		return tangent;

	}

	copy( source ) {

		super.copy( source );

		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

LineCurve.prototype.isLineCurve = true;

class LineCurve3 extends Curve {

	constructor( v1 = new Vector3(), v2 = new Vector3() ) {

		super();

		this.type = 'LineCurve3';
		this.isLineCurve3 = true;

		this.v1 = v1;
		this.v2 = v2;

	}
	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		if ( t === 1 ) {

			point.copy( this.v2 );

		} else {

			point.copy( this.v2 ).sub( this.v1 );
			point.multiplyScalar( t ).add( this.v1 );

		}

		return point;

	}
	// Line curve is linear, so we can overwrite default getPointAt
	getPointAt( u, optionalTarget ) {

		return this.getPoint( u, optionalTarget );

	}
	copy( source ) {

		super.copy( source );

		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}
	toJSON() {

		const data = super.toJSON();

		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}
	fromJSON( json ) {

		super.fromJSON( json );

		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

class QuadraticBezierCurve extends Curve {

	constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {

		super();

		this.type = 'QuadraticBezierCurve';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2;

		point.set(
			QuadraticBezier( t, v0.x, v1.x, v2.x ),
			QuadraticBezier( t, v0.y, v1.y, v2.y )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;

class QuadraticBezierCurve3 extends Curve {

	constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {

		super();

		this.type = 'QuadraticBezierCurve3';

		this.v0 = v0;
		this.v1 = v1;
		this.v2 = v2;

	}

	getPoint( t, optionalTarget = new Vector3() ) {

		const point = optionalTarget;

		const v0 = this.v0, v1 = this.v1, v2 = this.v2;

		point.set(
			QuadraticBezier( t, v0.x, v1.x, v2.x ),
			QuadraticBezier( t, v0.y, v1.y, v2.y ),
			QuadraticBezier( t, v0.z, v1.z, v2.z )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	}

}

QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;

class SplineCurve extends Curve {

	constructor( points = [] ) {

		super();

		this.type = 'SplineCurve';

		this.points = points;

	}

	getPoint( t, optionalTarget = new Vector2() ) {

		const point = optionalTarget;

		const points = this.points;
		const p = ( points.length - 1 ) * t;

		const intPoint = Math.floor( p );
		const weight = p - intPoint;

		const p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];
		const p1 = points[ intPoint ];
		const p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];
		const p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];

		point.set(
			CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),
			CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )
		);

		return point;

	}

	copy( source ) {

		super.copy( source );

		this.points = [];

		for ( let i = 0, l = source.points.length; i < l; i ++ ) {

			const point = source.points[ i ];

			this.points.push( point.clone() );

		}

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.points = [];

		for ( let i = 0, l = this.points.length; i < l; i ++ ) {

			const point = this.points[ i ];
			data.points.push( point.toArray() );

		}

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.points = [];

		for ( let i = 0, l = json.points.length; i < l; i ++ ) {

			const point = json.points[ i ];
			this.points.push( new Vector2().fromArray( point ) );

		}

		return this;

	}

}

SplineCurve.prototype.isSplineCurve = true;

var Curves = /*#__PURE__*/Object.freeze({
	__proto__: null,
	ArcCurve: ArcCurve,
	CatmullRomCurve3: CatmullRomCurve3,
	CubicBezierCurve: CubicBezierCurve,
	CubicBezierCurve3: CubicBezierCurve3,
	EllipseCurve: EllipseCurve,
	LineCurve: LineCurve,
	LineCurve3: LineCurve3,
	QuadraticBezierCurve: QuadraticBezierCurve,
	QuadraticBezierCurve3: QuadraticBezierCurve3,
	SplineCurve: SplineCurve
});

/**************************************************************
 *	Curved Path - a curve path is simply a array of connected
 *  curves, but retains the api of a curve
 **************************************************************/

class CurvePath extends Curve {

	constructor() {

		super();

		this.type = 'CurvePath';

		this.curves = [];
		this.autoClose = false; // Automatically closes the path

	}

	add( curve ) {

		this.curves.push( curve );

	}

	closePath() {

		// Add a line curve if start and end of lines are not connected
		const startPoint = this.curves[ 0 ].getPoint( 0 );
		const endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );

		if ( ! startPoint.equals( endPoint ) ) {

			this.curves.push( new LineCurve( endPoint, startPoint ) );

		}

	}

	// To get accurate point with reference to
	// entire path distance at time t,
	// following has to be done:

	// 1. Length of each sub path have to be known
	// 2. Locate and identify type of curve
	// 3. Get t for the curve
	// 4. Return curve.getPointAt(t')

	getPoint( t ) {

		const d = t * this.getLength();
		const curveLengths = this.getCurveLengths();
		let i = 0;

		// To think about boundaries points.

		while ( i < curveLengths.length ) {

			if ( curveLengths[ i ] >= d ) {

				const diff = curveLengths[ i ] - d;
				const curve = this.curves[ i ];

				const segmentLength = curve.getLength();
				const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;

				return curve.getPointAt( u );

			}

			i ++;

		}

		return null;

		// loop where sum != 0, sum > d , sum+1 <d

	}

	// We cannot use the default THREE.Curve getPoint() with getLength() because in
	// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
	// getPoint() depends on getLength

	getLength() {

		const lens = this.getCurveLengths();
		return lens[ lens.length - 1 ];

	}

	// cacheLengths must be recalculated.
	updateArcLengths() {

		this.needsUpdate = true;
		this.cacheLengths = null;
		this.getCurveLengths();

	}

	// Compute lengths and cache them
	// We cannot overwrite getLengths() because UtoT mapping uses it.

	getCurveLengths() {

		// We use cache values if curves and cache array are same length

		if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {

			return this.cacheLengths;

		}

		// Get length of sub-curve
		// Push sums into cached array

		const lengths = [];
		let sums = 0;

		for ( let i = 0, l = this.curves.length; i < l; i ++ ) {

			sums += this.curves[ i ].getLength();
			lengths.push( sums );

		}

		this.cacheLengths = lengths;

		return lengths;

	}

	getSpacedPoints( divisions = 40 ) {

		const points = [];

		for ( let i = 0; i <= divisions; i ++ ) {

			points.push( this.getPoint( i / divisions ) );

		}

		if ( this.autoClose ) {

			points.push( points[ 0 ] );

		}

		return points;

	}

	getPoints( divisions = 12 ) {

		const points = [];
		let last;

		for ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {

			const curve = curves[ i ];
			const resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2
				: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1
					: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length
						: divisions;

			const pts = curve.getPoints( resolution );

			for ( let j = 0; j < pts.length; j ++ ) {

				const point = pts[ j ];

				if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates

				points.push( point );
				last = point;

			}

		}

		if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {

			points.push( points[ 0 ] );

		}

		return points;

	}

	copy( source ) {

		super.copy( source );

		this.curves = [];

		for ( let i = 0, l = source.curves.length; i < l; i ++ ) {

			const curve = source.curves[ i ];

			this.curves.push( curve.clone() );

		}

		this.autoClose = source.autoClose;

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.autoClose = this.autoClose;
		data.curves = [];

		for ( let i = 0, l = this.curves.length; i < l; i ++ ) {

			const curve = this.curves[ i ];
			data.curves.push( curve.toJSON() );

		}

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.autoClose = json.autoClose;
		this.curves = [];

		for ( let i = 0, l = json.curves.length; i < l; i ++ ) {

			const curve = json.curves[ i ];
			this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );

		}

		return this;

	}

}

class Path extends CurvePath {

	constructor( points ) {

		super();
		this.type = 'Path';

		this.currentPoint = new Vector2();

		if ( points ) {

			this.setFromPoints( points );

		}

	}

	setFromPoints( points ) {

		this.moveTo( points[ 0 ].x, points[ 0 ].y );

		for ( let i = 1, l = points.length; i < l; i ++ ) {

			this.lineTo( points[ i ].x, points[ i ].y );

		}

		return this;

	}

	moveTo( x, y ) {

		this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?

		return this;

	}

	lineTo( x, y ) {

		const curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );
		this.curves.push( curve );

		this.currentPoint.set( x, y );

		return this;

	}

	quadraticCurveTo( aCPx, aCPy, aX, aY ) {

		const curve = new QuadraticBezierCurve(
			this.currentPoint.clone(),
			new Vector2( aCPx, aCPy ),
			new Vector2( aX, aY )
		);

		this.curves.push( curve );

		this.currentPoint.set( aX, aY );

		return this;

	}

	bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

		const curve = new CubicBezierCurve(
			this.currentPoint.clone(),
			new Vector2( aCP1x, aCP1y ),
			new Vector2( aCP2x, aCP2y ),
			new Vector2( aX, aY )
		);

		this.curves.push( curve );

		this.currentPoint.set( aX, aY );

		return this;

	}

	splineThru( pts /*Array of Vector*/ ) {

		const npts = [ this.currentPoint.clone() ].concat( pts );

		const curve = new SplineCurve( npts );
		this.curves.push( curve );

		this.currentPoint.copy( pts[ pts.length - 1 ] );

		return this;

	}

	arc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		const x0 = this.currentPoint.x;
		const y0 = this.currentPoint.y;

		this.absarc( aX + x0, aY + y0, aRadius,
			aStartAngle, aEndAngle, aClockwise );

		return this;

	}

	absarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

		return this;

	}

	ellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		const x0 = this.currentPoint.x;
		const y0 = this.currentPoint.y;

		this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

		return this;

	}

	absellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		const curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

		if ( this.curves.length > 0 ) {

			// if a previous curve is present, attempt to join
			const firstPoint = curve.getPoint( 0 );

			if ( ! firstPoint.equals( this.currentPoint ) ) {

				this.lineTo( firstPoint.x, firstPoint.y );

			}

		}

		this.curves.push( curve );

		const lastPoint = curve.getPoint( 1 );
		this.currentPoint.copy( lastPoint );

		return this;

	}

	copy( source ) {

		super.copy( source );

		this.currentPoint.copy( source.currentPoint );

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.currentPoint = this.currentPoint.toArray();

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.currentPoint.fromArray( json.currentPoint );

		return this;

	}

}

class Shape extends Path {

	constructor( points ) {

		super( points );

		this.uuid = MathUtils.generateUUID();

		this.type = 'Shape';

		this.holes = [];

	}

	getPointsHoles( divisions ) {

		const holesPts = [];

		for ( let i = 0, l = this.holes.length; i < l; i ++ ) {

			holesPts[ i ] = this.holes[ i ].getPoints( divisions );

		}

		return holesPts;

	}

	// get points of shape and holes (keypoints based on segments parameter)

	extractPoints( divisions ) {

		return {

			shape: this.getPoints( divisions ),
			holes: this.getPointsHoles( divisions )

		};

	}

	copy( source ) {

		super.copy( source );

		this.holes = [];

		for ( let i = 0, l = source.holes.length; i < l; i ++ ) {

			const hole = source.holes[ i ];

			this.holes.push( hole.clone() );

		}

		return this;

	}

	toJSON() {

		const data = super.toJSON();

		data.uuid = this.uuid;
		data.holes = [];

		for ( let i = 0, l = this.holes.length; i < l; i ++ ) {

			const hole = this.holes[ i ];
			data.holes.push( hole.toJSON() );

		}

		return data;

	}

	fromJSON( json ) {

		super.fromJSON( json );

		this.uuid = json.uuid;
		this.holes = [];

		for ( let i = 0, l = json.holes.length; i < l; i ++ ) {

			const hole = json.holes[ i ];
			this.holes.push( new Path().fromJSON( hole ) );

		}

		return this;

	}

}

class Light extends Object3D {

	constructor( color, intensity = 1 ) {

		super();

		this.type = 'Light';

		this.color = new Color( color );
		this.intensity = intensity;

	}

	copy( source ) {

		super.copy( source );

		this.color.copy( source.color );
		this.intensity = source.intensity;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.color = this.color.getHex();
		data.object.intensity = this.intensity;

		if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();

		if ( this.distance !== undefined ) data.object.distance = this.distance;
		if ( this.angle !== undefined ) data.object.angle = this.angle;
		if ( this.decay !== undefined ) data.object.decay = this.decay;
		if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;

		if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();

		return data;

	}

}

Light.prototype.isLight = true;

class HemisphereLight extends Light {

	constructor( skyColor, groundColor, intensity ) {

		super( skyColor, intensity );

		this.type = 'HemisphereLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.groundColor = new Color( groundColor );

	}

	copy( source ) {

		Light.prototype.copy.call( this, source );

		this.groundColor.copy( source.groundColor );

		return this;

	}

}

HemisphereLight.prototype.isHemisphereLight = true;

const _projScreenMatrix = /*@__PURE__*/ new Matrix4();
const _lightPositionWorld = /*@__PURE__*/ new Vector3();
const _lookTarget = /*@__PURE__*/ new Vector3();

class LightShadow {

	constructor( camera ) {

		this.camera = camera;

		this.bias = 0;
		this.normalBias = 0;
		this.radius = 1;

		this.mapSize = new Vector2( 512, 512 );

		this.map = null;
		this.mapPass = null;
		this.matrix = new Matrix4();

		this.autoUpdate = true;
		this.needsUpdate = false;

		this._frustum = new Frustum();
		this._frameExtents = new Vector2( 1, 1 );

		this._viewportCount = 1;

		this._viewports = [

			new Vector4( 0, 0, 1, 1 )

		];

	}

	getViewportCount() {

		return this._viewportCount;

	}

	getFrustum() {

		return this._frustum;

	}

	updateMatrices( light ) {

		const shadowCamera = this.camera;
		const shadowMatrix = this.matrix;

		_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );
		shadowCamera.position.copy( _lightPositionWorld );

		_lookTarget.setFromMatrixPosition( light.target.matrixWorld );
		shadowCamera.lookAt( _lookTarget );
		shadowCamera.updateMatrixWorld();

		_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );
		this._frustum.setFromProjectionMatrix( _projScreenMatrix );

		shadowMatrix.set(
			0.5, 0.0, 0.0, 0.5,
			0.0, 0.5, 0.0, 0.5,
			0.0, 0.0, 0.5, 0.5,
			0.0, 0.0, 0.0, 1.0
		);

		shadowMatrix.multiply( shadowCamera.projectionMatrix );
		shadowMatrix.multiply( shadowCamera.matrixWorldInverse );

	}

	getViewport( viewportIndex ) {

		return this._viewports[ viewportIndex ];

	}

	getFrameExtents() {

		return this._frameExtents;

	}

	copy( source ) {

		this.camera = source.camera.clone();

		this.bias = source.bias;
		this.radius = source.radius;

		this.mapSize.copy( source.mapSize );

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	toJSON() {

		const object = {};

		if ( this.bias !== 0 ) object.bias = this.bias;
		if ( this.normalBias !== 0 ) object.normalBias = this.normalBias;
		if ( this.radius !== 1 ) object.radius = this.radius;
		if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();

		object.camera = this.camera.toJSON( false ).object;
		delete object.camera.matrix;

		return object;

	}

}

class SpotLightShadow extends LightShadow {

	constructor() {

		super( new PerspectiveCamera( 50, 1, 0.5, 500 ) );

		this.focus = 1;

	}

	updateMatrices( light ) {

		const camera = this.camera;

		const fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;
		const aspect = this.mapSize.width / this.mapSize.height;
		const far = light.distance || camera.far;

		if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {

			camera.fov = fov;
			camera.aspect = aspect;
			camera.far = far;
			camera.updateProjectionMatrix();

		}

		super.updateMatrices( light );

	}

}

SpotLightShadow.prototype.isSpotLightShadow = true;

class SpotLight extends Light {

	constructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {

		super( color, intensity );

		this.type = 'SpotLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.target = new Object3D();

		this.distance = distance;
		this.angle = angle;
		this.penumbra = penumbra;
		this.decay = decay; // for physically correct lights, should be 2.

		this.shadow = new SpotLightShadow();

	}

	get power() {

		// intensity = power per solid angle.
		// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
		return this.intensity * Math.PI;

	}

	set power( power ) {

		// intensity = power per solid angle.
		// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
		this.intensity = power / Math.PI;

	}

	copy( source ) {

		super.copy( source );

		this.distance = source.distance;
		this.angle = source.angle;
		this.penumbra = source.penumbra;
		this.decay = source.decay;

		this.target = source.target.clone();

		this.shadow = source.shadow.clone();

		return this;

	}

}

SpotLight.prototype.isSpotLight = true;

const _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();
const _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();
const _lookTarget$1 = /*@__PURE__*/ new Vector3();

class PointLightShadow extends LightShadow {

	constructor() {

		super( new PerspectiveCamera( 90, 1, 0.5, 500 ) );

		this._frameExtents = new Vector2( 4, 2 );

		this._viewportCount = 6;

		this._viewports = [
			// These viewports map a cube-map onto a 2D texture with the
			// following orientation:
			//
			//  xzXZ
			//   y Y
			//
			// X - Positive x direction
			// x - Negative x direction
			// Y - Positive y direction
			// y - Negative y direction
			// Z - Positive z direction
			// z - Negative z direction

			// positive X
			new Vector4( 2, 1, 1, 1 ),
			// negative X
			new Vector4( 0, 1, 1, 1 ),
			// positive Z
			new Vector4( 3, 1, 1, 1 ),
			// negative Z
			new Vector4( 1, 1, 1, 1 ),
			// positive Y
			new Vector4( 3, 0, 1, 1 ),
			// negative Y
			new Vector4( 1, 0, 1, 1 )
		];

		this._cubeDirections = [
			new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),
			new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )
		];

		this._cubeUps = [
			new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),
			new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),	new Vector3( 0, 0, - 1 )
		];

	}

	updateMatrices( light, viewportIndex = 0 ) {

		const camera = this.camera;
		const shadowMatrix = this.matrix;

		_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );
		camera.position.copy( _lightPositionWorld$1 );

		_lookTarget$1.copy( camera.position );
		_lookTarget$1.add( this._cubeDirections[ viewportIndex ] );
		camera.up.copy( this._cubeUps[ viewportIndex ] );
		camera.lookAt( _lookTarget$1 );
		camera.updateMatrixWorld();

		shadowMatrix.makeTranslation( - _lightPositionWorld$1.x, - _lightPositionWorld$1.y, - _lightPositionWorld$1.z );

		_projScreenMatrix$1.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
		this._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );

	}

}

PointLightShadow.prototype.isPointLightShadow = true;

class PointLight extends Light {

	constructor( color, intensity, distance = 0, decay = 1 ) {

		super( color, intensity );

		this.type = 'PointLight';

		this.distance = distance;
		this.decay = decay; // for physically correct lights, should be 2.

		this.shadow = new PointLightShadow();

	}

	get power() {

		// intensity = power per solid angle.
		// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
		return this.intensity * 4 * Math.PI;

	}

	set power( power ) {

		// intensity = power per solid angle.
		// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
		this.intensity = power / ( 4 * Math.PI );

	}

	copy( source ) {

		super.copy( source );

		this.distance = source.distance;
		this.decay = source.decay;

		this.shadow = source.shadow.clone();

		return this;

	}

}

PointLight.prototype.isPointLight = true;

class OrthographicCamera extends Camera {

	constructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {

		super();

		this.type = 'OrthographicCamera';

		this.zoom = 1;
		this.view = null;

		this.left = left;
		this.right = right;
		this.top = top;
		this.bottom = bottom;

		this.near = near;
		this.far = far;

		this.updateProjectionMatrix();

	}

	copy( source, recursive ) {

		super.copy( source, recursive );

		this.left = source.left;
		this.right = source.right;
		this.top = source.top;
		this.bottom = source.bottom;
		this.near = source.near;
		this.far = source.far;

		this.zoom = source.zoom;
		this.view = source.view === null ? null : Object.assign( {}, source.view );

		return this;

	}

	setViewOffset( fullWidth, fullHeight, x, y, width, height ) {

		if ( this.view === null ) {

			this.view = {
				enabled: true,
				fullWidth: 1,
				fullHeight: 1,
				offsetX: 0,
				offsetY: 0,
				width: 1,
				height: 1
			};

		}

		this.view.enabled = true;
		this.view.fullWidth = fullWidth;
		this.view.fullHeight = fullHeight;
		this.view.offsetX = x;
		this.view.offsetY = y;
		this.view.width = width;
		this.view.height = height;

		this.updateProjectionMatrix();

	}

	clearViewOffset() {

		if ( this.view !== null ) {

			this.view.enabled = false;

		}

		this.updateProjectionMatrix();

	}

	updateProjectionMatrix() {

		const dx = ( this.right - this.left ) / ( 2 * this.zoom );
		const dy = ( this.top - this.bottom ) / ( 2 * this.zoom );
		const cx = ( this.right + this.left ) / 2;
		const cy = ( this.top + this.bottom ) / 2;

		let left = cx - dx;
		let right = cx + dx;
		let top = cy + dy;
		let bottom = cy - dy;

		if ( this.view !== null && this.view.enabled ) {

			const scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;
			const scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;

			left += scaleW * this.view.offsetX;
			right = left + scaleW * this.view.width;
			top -= scaleH * this.view.offsetY;
			bottom = top - scaleH * this.view.height;

		}

		this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );

		this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();

	}

	toJSON( meta ) {

		const data = Object3D.prototype.toJSON.call( this, meta );

		data.object.zoom = this.zoom;
		data.object.left = this.left;
		data.object.right = this.right;
		data.object.top = this.top;
		data.object.bottom = this.bottom;
		data.object.near = this.near;
		data.object.far = this.far;

		if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );

		return data;

	}

}

OrthographicCamera.prototype.isOrthographicCamera = true;

class DirectionalLightShadow extends LightShadow {

	constructor() {

		super( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );

	}

}

DirectionalLightShadow.prototype.isDirectionalLightShadow = true;

class DirectionalLight extends Light {

	constructor( color, intensity ) {

		super( color, intensity );

		this.type = 'DirectionalLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.target = new Object3D();

		this.shadow = new DirectionalLightShadow();

	}

	copy( source ) {

		super.copy( source );

		this.target = source.target.clone();
		this.shadow = source.shadow.clone();

		return this;

	}

}

DirectionalLight.prototype.isDirectionalLight = true;

class AmbientLight extends Light {

	constructor( color, intensity ) {

		super( color, intensity );

		this.type = 'AmbientLight';

	}

}

AmbientLight.prototype.isAmbientLight = true;

class RectAreaLight extends Light {

	constructor( color, intensity, width = 10, height = 10 ) {

		super( color, intensity );

		this.type = 'RectAreaLight';

		this.width = width;
		this.height = height;

	}

	copy( source ) {

		super.copy( source );

		this.width = source.width;
		this.height = source.height;

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.width = this.width;
		data.object.height = this.height;

		return data;

	}

}

RectAreaLight.prototype.isRectAreaLight = true;

/**
 * Primary reference:
 *   https://graphics.stanford.edu/papers/envmap/envmap.pdf
 *
 * Secondary reference:
 *   https://www.ppsloan.org/publications/StupidSH36.pdf
 */

// 3-band SH defined by 9 coefficients

class SphericalHarmonics3 {

	constructor() {

		this.coefficients = [];

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients.push( new Vector3() );

		}

	}

	set( coefficients ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].copy( coefficients[ i ] );

		}

		return this;

	}

	zero() {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].set( 0, 0, 0 );

		}

		return this;

	}

	// get the radiance in the direction of the normal
	// target is a Vector3
	getAt( normal, target ) {

		// normal is assumed to be unit length

		const x = normal.x, y = normal.y, z = normal.z;

		const coeff = this.coefficients;

		// band 0
		target.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );

		// band 1
		target.addScaledVector( coeff[ 1 ], 0.488603 * y );
		target.addScaledVector( coeff[ 2 ], 0.488603 * z );
		target.addScaledVector( coeff[ 3 ], 0.488603 * x );

		// band 2
		target.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );
		target.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );
		target.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );
		target.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );
		target.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );

		return target;

	}

	// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
	// target is a Vector3
	// https://graphics.stanford.edu/papers/envmap/envmap.pdf
	getIrradianceAt( normal, target ) {

		// normal is assumed to be unit length

		const x = normal.x, y = normal.y, z = normal.z;

		const coeff = this.coefficients;

		// band 0
		target.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095

		// band 1
		target.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603
		target.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );
		target.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );

		// band 2
		target.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548
		target.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );
		target.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3
		target.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );
		target.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274

		return target;

	}

	add( sh ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].add( sh.coefficients[ i ] );

		}

		return this;

	}

	addScaledSH( sh, s ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );

		}

		return this;

	}

	scale( s ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].multiplyScalar( s );

		}

		return this;

	}

	lerp( sh, alpha ) {

		for ( let i = 0; i < 9; i ++ ) {

			this.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );

		}

		return this;

	}

	equals( sh ) {

		for ( let i = 0; i < 9; i ++ ) {

			if ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {

				return false;

			}

		}

		return true;

	}

	copy( sh ) {

		return this.set( sh.coefficients );

	}

	clone() {

		return new this.constructor().copy( this );

	}

	fromArray( array, offset = 0 ) {

		const coefficients = this.coefficients;

		for ( let i = 0; i < 9; i ++ ) {

			coefficients[ i ].fromArray( array, offset + ( i * 3 ) );

		}

		return this;

	}

	toArray( array = [], offset = 0 ) {

		const coefficients = this.coefficients;

		for ( let i = 0; i < 9; i ++ ) {

			coefficients[ i ].toArray( array, offset + ( i * 3 ) );

		}

		return array;

	}

	// evaluate the basis functions
	// shBasis is an Array[ 9 ]
	static getBasisAt( normal, shBasis ) {

		// normal is assumed to be unit length

		const x = normal.x, y = normal.y, z = normal.z;

		// band 0
		shBasis[ 0 ] = 0.282095;

		// band 1
		shBasis[ 1 ] = 0.488603 * y;
		shBasis[ 2 ] = 0.488603 * z;
		shBasis[ 3 ] = 0.488603 * x;

		// band 2
		shBasis[ 4 ] = 1.092548 * x * y;
		shBasis[ 5 ] = 1.092548 * y * z;
		shBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );
		shBasis[ 7 ] = 1.092548 * x * z;
		shBasis[ 8 ] = 0.546274 * ( x * x - y * y );

	}

}

SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;

class LightProbe extends Light {

	constructor( sh = new SphericalHarmonics3(), intensity = 1 ) {

		super( undefined, intensity );

		this.sh = sh;

	}

	copy( source ) {

		super.copy( source );

		this.sh.copy( source.sh );

		return this;

	}

	fromJSON( json ) {

		this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();
		this.sh.fromArray( json.sh );

		return this;

	}

	toJSON( meta ) {

		const data = super.toJSON( meta );

		data.object.sh = this.sh.toArray();

		return data;

	}

}

LightProbe.prototype.isLightProbe = true;

class MaterialLoader extends Loader {

	constructor( manager ) {

		super( manager );
		this.textures = {};

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( scope.manager );
		loader.setPath( scope.path );
		loader.setRequestHeader( scope.requestHeader );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( text ) {

			try {

				onLoad( scope.parse( JSON.parse( text ) ) );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

	parse( json ) {

		const textures = this.textures;

		function getTexture( name ) {

			if ( textures[ name ] === undefined ) {

				console.warn( 'THREE.MaterialLoader: Undefined texture', name );

			}

			return textures[ name ];

		}

		const material = new Materials[ json.type ]();

		if ( json.uuid !== undefined ) material.uuid = json.uuid;
		if ( json.name !== undefined ) material.name = json.name;
		if ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );
		if ( json.roughness !== undefined ) material.roughness = json.roughness;
		if ( json.metalness !== undefined ) material.metalness = json.metalness;
		if ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );
		if ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );
		if ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );
		if ( json.shininess !== undefined ) material.shininess = json.shininess;
		if ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;
		if ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;
		if ( json.fog !== undefined ) material.fog = json.fog;
		if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;
		if ( json.blending !== undefined ) material.blending = json.blending;
		if ( json.combine !== undefined ) material.combine = json.combine;
		if ( json.side !== undefined ) material.side = json.side;
		if ( json.opacity !== undefined ) material.opacity = json.opacity;
		if ( json.transparent !== undefined ) material.transparent = json.transparent;
		if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;
		if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;
		if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;
		if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;

		if ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;
		if ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;
		if ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;
		if ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;
		if ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;
		if ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;
		if ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;
		if ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;

		if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;
		if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;
		if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;
		if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;

		if ( json.rotation !== undefined ) material.rotation = json.rotation;

		if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;
		if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;
		if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;
		if ( json.scale !== undefined ) material.scale = json.scale;

		if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;
		if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;
		if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;

		if ( json.skinning !== undefined ) material.skinning = json.skinning;
		if ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;
		if ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;
		if ( json.dithering !== undefined ) material.dithering = json.dithering;

		if ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;

		if ( json.visible !== undefined ) material.visible = json.visible;

		if ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;

		if ( json.userData !== undefined ) material.userData = json.userData;

		if ( json.vertexColors !== undefined ) {

			if ( typeof json.vertexColors === 'number' ) {

				material.vertexColors = ( json.vertexColors > 0 ) ? true : false;

			} else {

				material.vertexColors = json.vertexColors;

			}

		}

		// Shader Material

		if ( json.uniforms !== undefined ) {

			for ( const name in json.uniforms ) {

				const uniform = json.uniforms[ name ];

				material.uniforms[ name ] = {};

				switch ( uniform.type ) {

					case 't':
						material.uniforms[ name ].value = getTexture( uniform.value );
						break;

					case 'c':
						material.uniforms[ name ].value = new Color().setHex( uniform.value );
						break;

					case 'v2':
						material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );
						break;

					case 'v3':
						material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );
						break;

					case 'v4':
						material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );
						break;

					case 'm3':
						material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );
						break;

					case 'm4':
						material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );
						break;

					default:
						material.uniforms[ name ].value = uniform.value;

				}

			}

		}

		if ( json.defines !== undefined ) material.defines = json.defines;
		if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;
		if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;

		if ( json.extensions !== undefined ) {

			for ( const key in json.extensions ) {

				material.extensions[ key ] = json.extensions[ key ];

			}

		}

		// Deprecated

		if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading

		// for PointsMaterial

		if ( json.size !== undefined ) material.size = json.size;
		if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;

		// maps

		if ( json.map !== undefined ) material.map = getTexture( json.map );
		if ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );

		if ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );

		if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );
		if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;

		if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );
		if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;
		if ( json.normalScale !== undefined ) {

			let normalScale = json.normalScale;

			if ( Array.isArray( normalScale ) === false ) {

				// Blender exporter used to export a scalar. See #7459

				normalScale = [ normalScale, normalScale ];

			}

			material.normalScale = new Vector2().fromArray( normalScale );

		}

		if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );
		if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;
		if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;

		if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );
		if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );

		if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );
		if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;

		if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );

		if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );
		if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;

		if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;
		if ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;

		if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );
		if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;

		if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );
		if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;

		if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );

		if ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );
		if ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );
		if ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );
		if ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );

		if ( json.transmission !== undefined ) material.transmission = json.transmission;
		if ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );

		return material;

	}

	setTextures( value ) {

		this.textures = value;
		return this;

	}

}

const LoaderUtils = {

	decodeText: function ( array ) {

		if ( typeof TextDecoder !== 'undefined' ) {

			return new TextDecoder().decode( array );

		}

		// Avoid the String.fromCharCode.apply(null, array) shortcut, which
		// throws a "maximum call stack size exceeded" error for large arrays.

		let s = '';

		for ( let i = 0, il = array.length; i < il; i ++ ) {

			// Implicitly assumes little-endian.
			s += String.fromCharCode( array[ i ] );

		}

		try {

			// merges multi-byte utf-8 characters.

			return decodeURIComponent( escape( s ) );

		} catch ( e ) { // see #16358

			return s;

		}

	},

	extractUrlBase: function ( url ) {

		const index = url.lastIndexOf( '/' );

		if ( index === - 1 ) return './';

		return url.substr( 0, index + 1 );

	}

};

function InstancedBufferGeometry() {

	BufferGeometry.call( this );

	this.type = 'InstancedBufferGeometry';
	this.instanceCount = Infinity;

}

InstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {

	constructor: InstancedBufferGeometry,

	isInstancedBufferGeometry: true,

	copy: function ( source ) {

		BufferGeometry.prototype.copy.call( this, source );

		this.instanceCount = source.instanceCount;

		return this;

	},

	clone: function () {

		return new this.constructor().copy( this );

	},

	toJSON: function () {

		const data = BufferGeometry.prototype.toJSON.call( this );

		data.instanceCount = this.instanceCount;

		data.isInstancedBufferGeometry = true;

		return data;

	}

} );

function InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {

	if ( typeof ( normalized ) === 'number' ) {

		meshPerAttribute = normalized;

		normalized = false;

		console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );

	}

	BufferAttribute.call( this, array, itemSize, normalized );

	this.meshPerAttribute = meshPerAttribute || 1;

}

InstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {

	constructor: InstancedBufferAttribute,

	isInstancedBufferAttribute: true,

	copy: function ( source ) {

		BufferAttribute.prototype.copy.call( this, source );

		this.meshPerAttribute = source.meshPerAttribute;

		return this;

	},

	toJSON: function ()	{

		const data = BufferAttribute.prototype.toJSON.call( this );

		data.meshPerAttribute = this.meshPerAttribute;

		data.isInstancedBufferAttribute = true;

		return data;

	}

} );

class BufferGeometryLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( scope.manager );
		loader.setPath( scope.path );
		loader.setRequestHeader( scope.requestHeader );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( text ) {

			try {

				onLoad( scope.parse( JSON.parse( text ) ) );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

	parse( json ) {

		const interleavedBufferMap = {};
		const arrayBufferMap = {};

		function getInterleavedBuffer( json, uuid ) {

			if ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];

			const interleavedBuffers = json.interleavedBuffers;
			const interleavedBuffer = interleavedBuffers[ uuid ];

			const buffer = getArrayBuffer( json, interleavedBuffer.buffer );

			const array = getTypedArray( interleavedBuffer.type, buffer );
			const ib = new InterleavedBuffer( array, interleavedBuffer.stride );
			ib.uuid = interleavedBuffer.uuid;

			interleavedBufferMap[ uuid ] = ib;

			return ib;

		}

		function getArrayBuffer( json, uuid ) {

			if ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];

			const arrayBuffers = json.arrayBuffers;
			const arrayBuffer = arrayBuffers[ uuid ];

			const ab = new Uint32Array( arrayBuffer ).buffer;

			arrayBufferMap[ uuid ] = ab;

			return ab;

		}

		const geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();

		const index = json.data.index;

		if ( index !== undefined ) {

			const typedArray = getTypedArray( index.type, index.array );
			geometry.setIndex( new BufferAttribute( typedArray, 1 ) );

		}

		const attributes = json.data.attributes;

		for ( const key in attributes ) {

			const attribute = attributes[ key ];
			let bufferAttribute;

			if ( attribute.isInterleavedBufferAttribute ) {

				const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );
				bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );

			} else {

				const typedArray = getTypedArray( attribute.type, attribute.array );
				const bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;
				bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );

			}

			if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;
			geometry.setAttribute( key, bufferAttribute );

		}

		const morphAttributes = json.data.morphAttributes;

		if ( morphAttributes ) {

			for ( const key in morphAttributes ) {

				const attributeArray = morphAttributes[ key ];

				const array = [];

				for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {

					const attribute = attributeArray[ i ];
					let bufferAttribute;

					if ( attribute.isInterleavedBufferAttribute ) {

						const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );
						bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );

					} else {

						const typedArray = getTypedArray( attribute.type, attribute.array );
						bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );

					}

					if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;
					array.push( bufferAttribute );

				}

				geometry.morphAttributes[ key ] = array;

			}

		}

		const morphTargetsRelative = json.data.morphTargetsRelative;

		if ( morphTargetsRelative ) {

			geometry.morphTargetsRelative = true;

		}

		const groups = json.data.groups || json.data.drawcalls || json.data.offsets;

		if ( groups !== undefined ) {

			for ( let i = 0, n = groups.length; i !== n; ++ i ) {

				const group = groups[ i ];

				geometry.addGroup( group.start, group.count, group.materialIndex );

			}

		}

		const boundingSphere = json.data.boundingSphere;

		if ( boundingSphere !== undefined ) {

			const center = new Vector3();

			if ( boundingSphere.center !== undefined ) {

				center.fromArray( boundingSphere.center );

			}

			geometry.boundingSphere = new Sphere( center, boundingSphere.radius );

		}

		if ( json.name ) geometry.name = json.name;
		if ( json.userData ) geometry.userData = json.userData;

		return geometry;

	}

}

class ObjectLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;
		this.resourcePath = this.resourcePath || path;

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( text ) {

			let json = null;

			try {

				json = JSON.parse( text );

			} catch ( error ) {

				if ( onError !== undefined ) onError( error );

				console.error( 'THREE:ObjectLoader: Can\'t parse ' + url + '.', error.message );

				return;

			}

			const metadata = json.metadata;

			if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {

				console.error( 'THREE.ObjectLoader: Can\'t load ' + url );
				return;

			}

			scope.parse( json, onLoad );

		}, onProgress, onError );

	}

	parse( json, onLoad ) {

		const animations = this.parseAnimations( json.animations );
		const shapes = this.parseShapes( json.shapes );
		const geometries = this.parseGeometries( json.geometries, shapes );

		const images = this.parseImages( json.images, function () {

			if ( onLoad !== undefined ) onLoad( object );

		} );

		const textures = this.parseTextures( json.textures, images );
		const materials = this.parseMaterials( json.materials, textures );

		const object = this.parseObject( json.object, geometries, materials, animations );
		const skeletons = this.parseSkeletons( json.skeletons, object );

		this.bindSkeletons( object, skeletons );

		//

		if ( onLoad !== undefined ) {

			let hasImages = false;

			for ( const uuid in images ) {

				if ( images[ uuid ] instanceof HTMLImageElement ) {

					hasImages = true;
					break;

				}

			}

			if ( hasImages === false ) onLoad( object );

		}

		return object;

	}

	parseShapes( json ) {

		const shapes = {};

		if ( json !== undefined ) {

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const shape = new Shape().fromJSON( json[ i ] );

				shapes[ shape.uuid ] = shape;

			}

		}

		return shapes;

	}

	parseSkeletons( json, object ) {

		const skeletons = {};
		const bones = {};

		// generate bone lookup table

		object.traverse( function ( child ) {

			if ( child.isBone ) bones[ child.uuid ] = child;

		} );

		// create skeletons

		if ( json !== undefined ) {

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const skeleton = new Skeleton().fromJSON( json[ i ], bones );

				skeletons[ skeleton.uuid ] = skeleton;

			}

		}

		return skeletons;

	}

	parseGeometries( json, shapes ) {

		const geometries = {};
		let geometryShapes;

		if ( json !== undefined ) {

			const bufferGeometryLoader = new BufferGeometryLoader();

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				let geometry;
				const data = json[ i ];

				switch ( data.type ) {

					case 'PlaneGeometry':
					case 'PlaneBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.width,
							data.height,
							data.widthSegments,
							data.heightSegments
						);

						break;

					case 'BoxGeometry':
					case 'BoxBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.width,
							data.height,
							data.depth,
							data.widthSegments,
							data.heightSegments,
							data.depthSegments
						);

						break;

					case 'CircleGeometry':
					case 'CircleBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.segments,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'CylinderGeometry':
					case 'CylinderBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radiusTop,
							data.radiusBottom,
							data.height,
							data.radialSegments,
							data.heightSegments,
							data.openEnded,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'ConeGeometry':
					case 'ConeBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.height,
							data.radialSegments,
							data.heightSegments,
							data.openEnded,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'SphereGeometry':
					case 'SphereBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.widthSegments,
							data.heightSegments,
							data.phiStart,
							data.phiLength,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'DodecahedronGeometry':
					case 'DodecahedronBufferGeometry':
					case 'IcosahedronGeometry':
					case 'IcosahedronBufferGeometry':
					case 'OctahedronGeometry':
					case 'OctahedronBufferGeometry':
					case 'TetrahedronGeometry':
					case 'TetrahedronBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.detail
						);

						break;

					case 'RingGeometry':
					case 'RingBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.innerRadius,
							data.outerRadius,
							data.thetaSegments,
							data.phiSegments,
							data.thetaStart,
							data.thetaLength
						);

						break;

					case 'TorusGeometry':
					case 'TorusBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.tube,
							data.radialSegments,
							data.tubularSegments,
							data.arc
						);

						break;

					case 'TorusKnotGeometry':
					case 'TorusKnotBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.radius,
							data.tube,
							data.tubularSegments,
							data.radialSegments,
							data.p,
							data.q
						);

						break;

					case 'TubeGeometry':
					case 'TubeBufferGeometry':

						// This only works for built-in curves (e.g. CatmullRomCurve3).
						// User defined curves or instances of CurvePath will not be deserialized.
						geometry = new Geometries[ data.type ](
							new Curves[ data.path.type ]().fromJSON( data.path ),
							data.tubularSegments,
							data.radius,
							data.radialSegments,
							data.closed
						);

						break;

					case 'LatheGeometry':
					case 'LatheBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.points,
							data.segments,
							data.phiStart,
							data.phiLength
						);

						break;

					case 'PolyhedronGeometry':
					case 'PolyhedronBufferGeometry':

						geometry = new Geometries[ data.type ](
							data.vertices,
							data.indices,
							data.radius,
							data.details
						);

						break;

					case 'ShapeGeometry':
					case 'ShapeBufferGeometry':

						geometryShapes = [];

						for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {

							const shape = shapes[ data.shapes[ j ] ];

							geometryShapes.push( shape );

						}

						geometry = new Geometries[ data.type ](
							geometryShapes,
							data.curveSegments
						);

						break;


					case 'ExtrudeGeometry':
					case 'ExtrudeBufferGeometry':

						geometryShapes = [];

						for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {

							const shape = shapes[ data.shapes[ j ] ];

							geometryShapes.push( shape );

						}

						const extrudePath = data.options.extrudePath;

						if ( extrudePath !== undefined ) {

							data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );

						}

						geometry = new Geometries[ data.type ](
							geometryShapes,
							data.options
						);

						break;

					case 'BufferGeometry':
					case 'InstancedBufferGeometry':

						geometry = bufferGeometryLoader.parse( data );

						break;

					case 'Geometry':

						console.error( 'THREE.ObjectLoader: Loading "Geometry" is not supported anymore.' );

						break;

					default:

						console.warn( 'THREE.ObjectLoader: Unsupported geometry type "' + data.type + '"' );

						continue;

				}

				geometry.uuid = data.uuid;

				if ( data.name !== undefined ) geometry.name = data.name;
				if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;

				geometries[ data.uuid ] = geometry;

			}

		}

		return geometries;

	}

	parseMaterials( json, textures ) {

		const cache = {}; // MultiMaterial
		const materials = {};

		if ( json !== undefined ) {

			const loader = new MaterialLoader();
			loader.setTextures( textures );

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const data = json[ i ];

				if ( data.type === 'MultiMaterial' ) {

					// Deprecated

					const array = [];

					for ( let j = 0; j < data.materials.length; j ++ ) {

						const material = data.materials[ j ];

						if ( cache[ material.uuid ] === undefined ) {

							cache[ material.uuid ] = loader.parse( material );

						}

						array.push( cache[ material.uuid ] );

					}

					materials[ data.uuid ] = array;

				} else {

					if ( cache[ data.uuid ] === undefined ) {

						cache[ data.uuid ] = loader.parse( data );

					}

					materials[ data.uuid ] = cache[ data.uuid ];

				}

			}

		}

		return materials;

	}

	parseAnimations( json ) {

		const animations = {};

		if ( json !== undefined ) {

			for ( let i = 0; i < json.length; i ++ ) {

				const data = json[ i ];

				const clip = AnimationClip.parse( data );

				animations[ clip.uuid ] = clip;

			}

		}

		return animations;

	}

	parseImages( json, onLoad ) {

		const scope = this;
		const images = {};

		let loader;

		function loadImage( url ) {

			scope.manager.itemStart( url );

			return loader.load( url, function () {

				scope.manager.itemEnd( url );

			}, undefined, function () {

				scope.manager.itemError( url );
				scope.manager.itemEnd( url );

			} );

		}

		function deserializeImage( image ) {

			if ( typeof image === 'string' ) {

				const url = image;

				const path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( url ) ? url : scope.resourcePath + url;

				return loadImage( path );

			} else {

				if ( image.data ) {

					return {
						data: getTypedArray( image.type, image.data ),
						width: image.width,
						height: image.height
					};

				} else {

					return null;

				}

			}

		}

		if ( json !== undefined && json.length > 0 ) {

			const manager = new LoadingManager( onLoad );

			loader = new ImageLoader( manager );
			loader.setCrossOrigin( this.crossOrigin );

			for ( let i = 0, il = json.length; i < il; i ++ ) {

				const image = json[ i ];
				const url = image.url;

				if ( Array.isArray( url ) ) {

					// load array of images e.g CubeTexture

					images[ image.uuid ] = [];

					for ( let j = 0, jl = url.length; j < jl; j ++ ) {

						const currentUrl = url[ j ];

						const deserializedImage = deserializeImage( currentUrl );

						if ( deserializedImage !== null ) {

							if ( deserializedImage instanceof HTMLImageElement ) {

								images[ image.uuid ].push( deserializedImage );

							} else {

								// special case: handle array of data textures for cube textures

								images[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );

							}

						}

					}

				} else {

					// load single image

					const deserializedImage = deserializeImage( image.url );

					if ( deserializedImage !== null ) {

						images[ image.uuid ] = deserializedImage;

					}

				}

			}

		}

		return images;

	}

	parseTextures( json, images ) {

		function parseConstant( value, type ) {

			if ( typeof value === 'number' ) return value;

			console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );

			return type[ value ];

		}

		const textures = {};

		if ( json !== undefined ) {

			for ( let i = 0, l = json.length; i < l; i ++ ) {

				const data = json[ i ];

				if ( data.image === undefined ) {

					console.warn( 'THREE.ObjectLoader: No "image" specified for', data.uuid );

				}

				if ( images[ data.image ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined image', data.image );

				}

				let texture;
				const image = images[ data.image ];

				if ( Array.isArray( image ) ) {

					texture = new CubeTexture( image );

					if ( image.length === 6 ) texture.needsUpdate = true;

				} else {

					if ( image && image.data ) {

						texture = new DataTexture( image.data, image.width, image.height );

					} else {

						texture = new Texture( image );

					}

					if ( image ) texture.needsUpdate = true; // textures can have undefined image data

				}

				texture.uuid = data.uuid;

				if ( data.name !== undefined ) texture.name = data.name;

				if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );

				if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );
				if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );
				if ( data.center !== undefined ) texture.center.fromArray( data.center );
				if ( data.rotation !== undefined ) texture.rotation = data.rotation;

				if ( data.wrap !== undefined ) {

					texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );
					texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );

				}

				if ( data.format !== undefined ) texture.format = data.format;
				if ( data.type !== undefined ) texture.type = data.type;
				if ( data.encoding !== undefined ) texture.encoding = data.encoding;

				if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );
				if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );
				if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;

				if ( data.flipY !== undefined ) texture.flipY = data.flipY;

				if ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;
				if ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;

				textures[ data.uuid ] = texture;

			}

		}

		return textures;

	}

	parseObject( data, geometries, materials, animations ) {

		let object;

		function getGeometry( name ) {

			if ( geometries[ name ] === undefined ) {

				console.warn( 'THREE.ObjectLoader: Undefined geometry', name );

			}

			return geometries[ name ];

		}

		function getMaterial( name ) {

			if ( name === undefined ) return undefined;

			if ( Array.isArray( name ) ) {

				const array = [];

				for ( let i = 0, l = name.length; i < l; i ++ ) {

					const uuid = name[ i ];

					if ( materials[ uuid ] === undefined ) {

						console.warn( 'THREE.ObjectLoader: Undefined material', uuid );

					}

					array.push( materials[ uuid ] );

				}

				return array;

			}

			if ( materials[ name ] === undefined ) {

				console.warn( 'THREE.ObjectLoader: Undefined material', name );

			}

			return materials[ name ];

		}

		let geometry, material;

		switch ( data.type ) {

			case 'Scene':

				object = new Scene();

				if ( data.background !== undefined ) {

					if ( Number.isInteger( data.background ) ) {

						object.background = new Color( data.background );

					}

				}

				if ( data.fog !== undefined ) {

					if ( data.fog.type === 'Fog' ) {

						object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );

					} else if ( data.fog.type === 'FogExp2' ) {

						object.fog = new FogExp2( data.fog.color, data.fog.density );

					}

				}

				break;

			case 'PerspectiveCamera':

				object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );

				if ( data.focus !== undefined ) object.focus = data.focus;
				if ( data.zoom !== undefined ) object.zoom = data.zoom;
				if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;
				if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;
				if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );

				break;

			case 'OrthographicCamera':

				object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );

				if ( data.zoom !== undefined ) object.zoom = data.zoom;
				if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );

				break;

			case 'AmbientLight':

				object = new AmbientLight( data.color, data.intensity );

				break;

			case 'DirectionalLight':

				object = new DirectionalLight( data.color, data.intensity );

				break;

			case 'PointLight':

				object = new PointLight( data.color, data.intensity, data.distance, data.decay );

				break;

			case 'RectAreaLight':

				object = new RectAreaLight( data.color, data.intensity, data.width, data.height );

				break;

			case 'SpotLight':

				object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );

				break;

			case 'HemisphereLight':

				object = new HemisphereLight( data.color, data.groundColor, data.intensity );

				break;

			case 'LightProbe':

				object = new LightProbe().fromJSON( data );

				break;

			case 'SkinnedMesh':

				geometry = getGeometry( data.geometry );
			 	material = getMaterial( data.material );

				object = new SkinnedMesh( geometry, material );

				if ( data.bindMode !== undefined ) object.bindMode = data.bindMode;
				if ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );
				if ( data.skeleton !== undefined ) object.skeleton = data.skeleton;

				break;

			case 'Mesh':

				geometry = getGeometry( data.geometry );
				material = getMaterial( data.material );

				object = new Mesh( geometry, material );

				break;

			case 'InstancedMesh':

				geometry = getGeometry( data.geometry );
				material = getMaterial( data.material );
				const count = data.count;
				const instanceMatrix = data.instanceMatrix;

				object = new InstancedMesh( geometry, material, count );
				object.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );

				break;

			case 'LOD':

				object = new LOD();

				break;

			case 'Line':

				object = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'LineLoop':

				object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'LineSegments':

				object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'PointCloud':
			case 'Points':

				object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );

				break;

			case 'Sprite':

				object = new Sprite( getMaterial( data.material ) );

				break;

			case 'Group':

				object = new Group();

				break;

			case 'Bone':

				object = new Bone();

				break;

			default:

				object = new Object3D();

		}

		object.uuid = data.uuid;

		if ( data.name !== undefined ) object.name = data.name;

		if ( data.matrix !== undefined ) {

			object.matrix.fromArray( data.matrix );

			if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;
			if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );

		} else {

			if ( data.position !== undefined ) object.position.fromArray( data.position );
			if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );
			if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );
			if ( data.scale !== undefined ) object.scale.fromArray( data.scale );

		}

		if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;
		if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;

		if ( data.shadow ) {

			if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;
			if ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;
			if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;
			if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );
			if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );

		}

		if ( data.visible !== undefined ) object.visible = data.visible;
		if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;
		if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;
		if ( data.userData !== undefined ) object.userData = data.userData;
		if ( data.layers !== undefined ) object.layers.mask = data.layers;

		if ( data.children !== undefined ) {

			const children = data.children;

			for ( let i = 0; i < children.length; i ++ ) {

				object.add( this.parseObject( children[ i ], geometries, materials, animations ) );

			}

		}

		if ( data.animations !== undefined ) {

			const objectAnimations = data.animations;

			for ( let i = 0; i < objectAnimations.length; i ++ ) {

				const uuid = objectAnimations[ i ];

				object.animations.push( animations[ uuid ] );

			}

		}

		if ( data.type === 'LOD' ) {

			if ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;

			const levels = data.levels;

			for ( let l = 0; l < levels.length; l ++ ) {

				const level = levels[ l ];
				const child = object.getObjectByProperty( 'uuid', level.object );

				if ( child !== undefined ) {

					object.addLevel( child, level.distance );

				}

			}

		}

		return object;

	}

	bindSkeletons( object, skeletons ) {

		if ( Object.keys( skeletons ).length === 0 ) return;

		object.traverse( function ( child ) {

			if ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {

				const skeleton = skeletons[ child.skeleton ];

				if ( skeleton === undefined ) {

					console.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );

				} else {

					child.bind( skeleton, child.bindMatrix );

				}

			}

		} );

	}

	/* DEPRECATED */

	setTexturePath( value ) {

		console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );
		return this.setResourcePath( value );

	}

}

const TEXTURE_MAPPING = {
	UVMapping: UVMapping,
	CubeReflectionMapping: CubeReflectionMapping,
	CubeRefractionMapping: CubeRefractionMapping,
	EquirectangularReflectionMapping: EquirectangularReflectionMapping,
	EquirectangularRefractionMapping: EquirectangularRefractionMapping,
	CubeUVReflectionMapping: CubeUVReflectionMapping,
	CubeUVRefractionMapping: CubeUVRefractionMapping
};

const TEXTURE_WRAPPING = {
	RepeatWrapping: RepeatWrapping,
	ClampToEdgeWrapping: ClampToEdgeWrapping,
	MirroredRepeatWrapping: MirroredRepeatWrapping
};

const TEXTURE_FILTER = {
	NearestFilter: NearestFilter,
	NearestMipmapNearestFilter: NearestMipmapNearestFilter,
	NearestMipmapLinearFilter: NearestMipmapLinearFilter,
	LinearFilter: LinearFilter,
	LinearMipmapNearestFilter: LinearMipmapNearestFilter,
	LinearMipmapLinearFilter: LinearMipmapLinearFilter
};

function ImageBitmapLoader( manager ) {

	if ( typeof createImageBitmap === 'undefined' ) {

		console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );

	}

	if ( typeof fetch === 'undefined' ) {

		console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );

	}

	Loader.call( this, manager );

	this.options = { premultiplyAlpha: 'none' };

}

ImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

	constructor: ImageBitmapLoader,

	isImageBitmapLoader: true,

	setOptions: function setOptions( options ) {

		this.options = options;

		return this;

	},

	load: function ( url, onLoad, onProgress, onError ) {

		if ( url === undefined ) url = '';

		if ( this.path !== undefined ) url = this.path + url;

		url = this.manager.resolveURL( url );

		const scope = this;

		const cached = Cache.get( url );

		if ( cached !== undefined ) {

			scope.manager.itemStart( url );

			setTimeout( function () {

				if ( onLoad ) onLoad( cached );

				scope.manager.itemEnd( url );

			}, 0 );

			return cached;

		}

		const fetchOptions = {};
		fetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';
		fetchOptions.headers = this.requestHeader;

		fetch( url, fetchOptions ).then( function ( res ) {

			return res.blob();

		} ).then( function ( blob ) {

			return createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );

		} ).then( function ( imageBitmap ) {

			Cache.add( url, imageBitmap );

			if ( onLoad ) onLoad( imageBitmap );

			scope.manager.itemEnd( url );

		} ).catch( function ( e ) {

			if ( onError ) onError( e );

			scope.manager.itemError( url );
			scope.manager.itemEnd( url );

		} );

		scope.manager.itemStart( url );

	}

} );

class ShapePath {

	constructor() {

		this.type = 'ShapePath';

		this.color = new Color();

		this.subPaths = [];
		this.currentPath = null;

	}

	moveTo( x, y ) {

		this.currentPath = new Path();
		this.subPaths.push( this.currentPath );
		this.currentPath.moveTo( x, y );

		return this;

	}

	lineTo( x, y ) {

		this.currentPath.lineTo( x, y );

		return this;

	}

	quadraticCurveTo( aCPx, aCPy, aX, aY ) {

		this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );

		return this;

	}

	bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

		this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );

		return this;

	}

	splineThru( pts ) {

		this.currentPath.splineThru( pts );

		return this;

	}

	toShapes( isCCW, noHoles ) {

		function toShapesNoHoles( inSubpaths ) {

			const shapes = [];

			for ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {

				const tmpPath = inSubpaths[ i ];

				const tmpShape = new Shape();
				tmpShape.curves = tmpPath.curves;

				shapes.push( tmpShape );

			}

			return shapes;

		}

		function isPointInsidePolygon( inPt, inPolygon ) {

			const polyLen = inPolygon.length;

			// inPt on polygon contour => immediate success    or
			// toggling of inside/outside at every single! intersection point of an edge
			//  with the horizontal line through inPt, left of inPt
			//  not counting lowerY endpoints of edges and whole edges on that line
			let inside = false;
			for ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {

				let edgeLowPt = inPolygon[ p ];
				let edgeHighPt = inPolygon[ q ];

				let edgeDx = edgeHighPt.x - edgeLowPt.x;
				let edgeDy = edgeHighPt.y - edgeLowPt.y;

				if ( Math.abs( edgeDy ) > Number.EPSILON ) {

					// not parallel
					if ( edgeDy < 0 ) {

						edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;
						edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;

					}

					if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) 		continue;

					if ( inPt.y === edgeLowPt.y ) {

						if ( inPt.x === edgeLowPt.x )		return	true;		// inPt is on contour ?
						// continue;				// no intersection or edgeLowPt => doesn't count !!!

					} else {

						const perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );
						if ( perpEdge === 0 )				return	true;		// inPt is on contour ?
						if ( perpEdge < 0 ) 				continue;
						inside = ! inside;		// true intersection left of inPt

					}

				} else {

					// parallel or collinear
					if ( inPt.y !== edgeLowPt.y ) 		continue;			// parallel
					// edge lies on the same horizontal line as inPt
					if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||
						 ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )		return	true;	// inPt: Point on contour !
					// continue;

				}

			}

			return	inside;

		}

		const isClockWise = ShapeUtils.isClockWise;

		const subPaths = this.subPaths;
		if ( subPaths.length === 0 ) return [];

		if ( noHoles === true )	return	toShapesNoHoles( subPaths );


		let solid, tmpPath, tmpShape;
		const shapes = [];

		if ( subPaths.length === 1 ) {

			tmpPath = subPaths[ 0 ];
			tmpShape = new Shape();
			tmpShape.curves = tmpPath.curves;
			shapes.push( tmpShape );
			return shapes;

		}

		let holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );
		holesFirst = isCCW ? ! holesFirst : holesFirst;

		// console.log("Holes first", holesFirst);

		const betterShapeHoles = [];
		const newShapes = [];
		let newShapeHoles = [];
		let mainIdx = 0;
		let tmpPoints;

		newShapes[ mainIdx ] = undefined;
		newShapeHoles[ mainIdx ] = [];

		for ( let i = 0, l = subPaths.length; i < l; i ++ ) {

			tmpPath = subPaths[ i ];
			tmpPoints = tmpPath.getPoints();
			solid = isClockWise( tmpPoints );
			solid = isCCW ? ! solid : solid;

			if ( solid ) {

				if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )	mainIdx ++;

				newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };
				newShapes[ mainIdx ].s.curves = tmpPath.curves;

				if ( holesFirst )	mainIdx ++;
				newShapeHoles[ mainIdx ] = [];

				//console.log('cw', i);

			} else {

				newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );

				//console.log('ccw', i);

			}

		}

		// only Holes? -> probably all Shapes with wrong orientation
		if ( ! newShapes[ 0 ] )	return	toShapesNoHoles( subPaths );


		if ( newShapes.length > 1 ) {

			let ambiguous = false;
			const toChange = [];

			for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

				betterShapeHoles[ sIdx ] = [];

			}

			for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

				const sho = newShapeHoles[ sIdx ];

				for ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {

					const ho = sho[ hIdx ];
					let hole_unassigned = true;

					for ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {

						if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {

							if ( sIdx !== s2Idx )	toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );
							if ( hole_unassigned ) {

								hole_unassigned = false;
								betterShapeHoles[ s2Idx ].push( ho );

							} else {

								ambiguous = true;

							}

						}

					}

					if ( hole_unassigned ) {

						betterShapeHoles[ sIdx ].push( ho );

					}

				}

			}
			// console.log("ambiguous: ", ambiguous);

			if ( toChange.length > 0 ) {

				// console.log("to change: ", toChange);
				if ( ! ambiguous )	newShapeHoles = betterShapeHoles;

			}

		}

		let tmpHoles;

		for ( let i = 0, il = newShapes.length; i < il; i ++ ) {

			tmpShape = newShapes[ i ].s;
			shapes.push( tmpShape );
			tmpHoles = newShapeHoles[ i ];

			for ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {

				tmpShape.holes.push( tmpHoles[ j ].h );

			}

		}

		//console.log("shape", shapes);

		return shapes;

	}

}

class Font {

	constructor( data ) {

		this.type = 'Font';

		this.data = data;

	}

	generateShapes( text, size = 100 ) {

		const shapes = [];
		const paths = createPaths( text, size, this.data );

		for ( let p = 0, pl = paths.length; p < pl; p ++ ) {

			Array.prototype.push.apply( shapes, paths[ p ].toShapes() );

		}

		return shapes;

	}

}

function createPaths( text, size, data ) {

	const chars = Array.from( text );
	const scale = size / data.resolution;
	const line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;

	const paths = [];

	let offsetX = 0, offsetY = 0;

	for ( let i = 0; i < chars.length; i ++ ) {

		const char = chars[ i ];

		if ( char === '\n' ) {

			offsetX = 0;
			offsetY -= line_height;

		} else {

			const ret = createPath( char, scale, offsetX, offsetY, data );
			offsetX += ret.offsetX;
			paths.push( ret.path );

		}

	}

	return paths;

}

function createPath( char, scale, offsetX, offsetY, data ) {

	const glyph = data.glyphs[ char ] || data.glyphs[ '?' ];

	if ( ! glyph ) {

		console.error( 'THREE.Font: character "' + char + '" does not exists in font family ' + data.familyName + '.' );

		return;

	}

	const path = new ShapePath();

	let x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;

	if ( glyph.o ) {

		const outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );

		for ( let i = 0, l = outline.length; i < l; ) {

			const action = outline[ i ++ ];

			switch ( action ) {

				case 'm': // moveTo

					x = outline[ i ++ ] * scale + offsetX;
					y = outline[ i ++ ] * scale + offsetY;

					path.moveTo( x, y );

					break;

				case 'l': // lineTo

					x = outline[ i ++ ] * scale + offsetX;
					y = outline[ i ++ ] * scale + offsetY;

					path.lineTo( x, y );

					break;

				case 'q': // quadraticCurveTo

					cpx = outline[ i ++ ] * scale + offsetX;
					cpy = outline[ i ++ ] * scale + offsetY;
					cpx1 = outline[ i ++ ] * scale + offsetX;
					cpy1 = outline[ i ++ ] * scale + offsetY;

					path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );

					break;

				case 'b': // bezierCurveTo

					cpx = outline[ i ++ ] * scale + offsetX;
					cpy = outline[ i ++ ] * scale + offsetY;
					cpx1 = outline[ i ++ ] * scale + offsetX;
					cpy1 = outline[ i ++ ] * scale + offsetY;
					cpx2 = outline[ i ++ ] * scale + offsetX;
					cpy2 = outline[ i ++ ] * scale + offsetY;

					path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );

					break;

			}

		}

	}

	return { offsetX: glyph.ha * scale, path: path };

}

Font.prototype.isFont = true;

class FontLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( this.manager );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( scope.withCredentials );
		loader.load( url, function ( text ) {

			let json;

			try {

				json = JSON.parse( text );

			} catch ( e ) {

				console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );
				json = JSON.parse( text.substring( 65, text.length - 2 ) );

			}

			const font = scope.parse( json );

			if ( onLoad ) onLoad( font );

		}, onProgress, onError );

	}

	parse( json ) {

		return new Font( json );

	}

}

let three_module_context;

const AudioContext = {

	getContext: function () {

		if ( three_module_context === undefined ) {

			three_module_context = new ( window.AudioContext || window.webkitAudioContext )();

		}

		return three_module_context;

	},

	setContext: function ( value ) {

		three_module_context = value;

	}

};

class AudioLoader extends Loader {

	constructor( manager ) {

		super( manager );

	}

	load( url, onLoad, onProgress, onError ) {

		const scope = this;

		const loader = new FileLoader( this.manager );
		loader.setResponseType( 'arraybuffer' );
		loader.setPath( this.path );
		loader.setRequestHeader( this.requestHeader );
		loader.setWithCredentials( this.withCredentials );
		loader.load( url, function ( buffer ) {

			try {

				// Create a copy of the buffer. The `decodeAudioData` method
				// detaches the buffer when complete, preventing reuse.
				const bufferCopy = buffer.slice( 0 );

				const context = AudioContext.getContext();
				context.decodeAudioData( bufferCopy, function ( audioBuffer ) {

					onLoad( audioBuffer );

				} );

			} catch ( e ) {

				if ( onError ) {

					onError( e );

				} else {

					console.error( e );

				}

				scope.manager.itemError( url );

			}

		}, onProgress, onError );

	}

}

class HemisphereLightProbe extends LightProbe {

	constructor( skyColor, groundColor, intensity = 1 ) {

		super( undefined, intensity );

		const color1 = new Color().set( skyColor );
		const color2 = new Color().set( groundColor );

		const sky = new Vector3( color1.r, color1.g, color1.b );
		const ground = new Vector3( color2.r, color2.g, color2.b );

		// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );
		const c0 = Math.sqrt( Math.PI );
		const c1 = c0 * Math.sqrt( 0.75 );

		this.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );
		this.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );

	}

}

HemisphereLightProbe.prototype.isHemisphereLightProbe = true;

class AmbientLightProbe extends LightProbe {

	constructor( color, intensity = 1 ) {

		super( undefined, intensity );

		const color1 = new Color().set( color );

		// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );
		this.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );

	}

}

AmbientLightProbe.prototype.isAmbientLightProbe = true;

const _eyeRight = new Matrix4();
const _eyeLeft = new Matrix4();

class StereoCamera {

	constructor() {

		this.type = 'StereoCamera';

		this.aspect = 1;

		this.eyeSep = 0.064;

		this.cameraL = new PerspectiveCamera();
		this.cameraL.layers.enable( 1 );
		this.cameraL.matrixAutoUpdate = false;

		this.cameraR = new PerspectiveCamera();
		this.cameraR.layers.enable( 2 );
		this.cameraR.matrixAutoUpdate = false;

		this._cache = {
			focus: null,
			fov: null,
			aspect: null,
			near: null,
			far: null,
			zoom: null,
			eyeSep: null
		};

	}

	update( camera ) {

		const cache = this._cache;

		const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||
			cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||
			cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;

		if ( needsUpdate ) {

			cache.focus = camera.focus;
			cache.fov = camera.fov;
			cache.aspect = camera.aspect * this.aspect;
			cache.near = camera.near;
			cache.far = camera.far;
			cache.zoom = camera.zoom;
			cache.eyeSep = this.eyeSep;

			// Off-axis stereoscopic effect based on
			// http://paulbourke.net/stereographics/stereorender/

			const projectionMatrix = camera.projectionMatrix.clone();
			const eyeSepHalf = cache.eyeSep / 2;
			const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;
			const ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;
			let xmin, xmax;

			// translate xOffset

			_eyeLeft.elements[ 12 ] = - eyeSepHalf;
			_eyeRight.elements[ 12 ] = eyeSepHalf;

			// for left eye

			xmin = - ymax * cache.aspect + eyeSepOnProjection;
			xmax = ymax * cache.aspect + eyeSepOnProjection;

			projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );
			projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

			this.cameraL.projectionMatrix.copy( projectionMatrix );

			// for right eye

			xmin = - ymax * cache.aspect - eyeSepOnProjection;
			xmax = ymax * cache.aspect - eyeSepOnProjection;

			projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );
			projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

			this.cameraR.projectionMatrix.copy( projectionMatrix );

		}

		this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );
		this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );

	}

}

class Clock {

	constructor( autoStart ) {

		this.autoStart = ( autoStart !== undefined ) ? autoStart : true;

		this.startTime = 0;
		this.oldTime = 0;
		this.elapsedTime = 0;

		this.running = false;

	}

	start() {

		this.startTime = now();

		this.oldTime = this.startTime;
		this.elapsedTime = 0;
		this.running = true;

	}

	stop() {

		this.getElapsedTime();
		this.running = false;
		this.autoStart = false;

	}

	getElapsedTime() {

		this.getDelta();
		return this.elapsedTime;

	}

	getDelta() {

		let diff = 0;

		if ( this.autoStart && ! this.running ) {

			this.start();
			return 0;

		}

		if ( this.running ) {

			const newTime = now();

			diff = ( newTime - this.oldTime ) / 1000;
			this.oldTime = newTime;

			this.elapsedTime += diff;

		}

		return diff;

	}

}

function now() {

	return ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732

}

const _position$2 = /*@__PURE__*/ new Vector3();
const _quaternion$3 = /*@__PURE__*/ new Quaternion();
const _scale$1 = /*@__PURE__*/ new Vector3();
const _orientation = /*@__PURE__*/ new Vector3();

class AudioListener extends Object3D {

	constructor() {

		super();

		this.type = 'AudioListener';

		this.context = AudioContext.getContext();

		this.gain = this.context.createGain();
		this.gain.connect( this.context.destination );

		this.filter = null;

		this.timeDelta = 0;

		// private

		this._clock = new Clock();

	}

	getInput() {

		return this.gain;

	}

	removeFilter() {

		if ( this.filter !== null ) {

			this.gain.disconnect( this.filter );
			this.filter.disconnect( this.context.destination );
			this.gain.connect( this.context.destination );
			this.filter = null;

		}

		return this;

	}

	getFilter() {

		return this.filter;

	}

	setFilter( value ) {

		if ( this.filter !== null ) {

			this.gain.disconnect( this.filter );
			this.filter.disconnect( this.context.destination );

		} else {

			this.gain.disconnect( this.context.destination );

		}

		this.filter = value;
		this.gain.connect( this.filter );
		this.filter.connect( this.context.destination );

		return this;

	}

	getMasterVolume() {

		return this.gain.gain.value;

	}

	setMasterVolume( value ) {

		this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );

		return this;

	}

	updateMatrixWorld( force ) {

		super.updateMatrixWorld( force );

		const listener = this.context.listener;
		const up = this.up;

		this.timeDelta = this._clock.getDelta();

		this.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );

		_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );

		if ( listener.positionX ) {

			// code path for Chrome (see #14393)

			const endTime = this.context.currentTime + this.timeDelta;

			listener.positionX.linearRampToValueAtTime( _position$2.x, endTime );
			listener.positionY.linearRampToValueAtTime( _position$2.y, endTime );
			listener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );
			listener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );
			listener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );
			listener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );
			listener.upX.linearRampToValueAtTime( up.x, endTime );
			listener.upY.linearRampToValueAtTime( up.y, endTime );
			listener.upZ.linearRampToValueAtTime( up.z, endTime );

		} else {

			listener.setPosition( _position$2.x, _position$2.y, _position$2.z );
			listener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );

		}

	}

}

class Audio extends Object3D {

	constructor( listener ) {

		super();

		this.type = 'Audio';

		this.listener = listener;
		this.context = listener.context;

		this.gain = this.context.createGain();
		this.gain.connect( listener.getInput() );

		this.autoplay = false;

		this.buffer = null;
		this.detune = 0;
		this.loop = false;
		this.loopStart = 0;
		this.loopEnd = 0;
		this.offset = 0;
		this.duration = undefined;
		this.playbackRate = 1;
		this.isPlaying = false;
		this.hasPlaybackControl = true;
		this.source = null;
		this.sourceType = 'empty';

		this._startedAt = 0;
		this._progress = 0;
		this._connected = false;

		this.filters = [];

	}

	getOutput() {

		return this.gain;

	}

	setNodeSource( audioNode ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'audioNode';
		this.source = audioNode;
		this.connect();

		return this;

	}

	setMediaElementSource( mediaElement ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'mediaNode';
		this.source = this.context.createMediaElementSource( mediaElement );
		this.connect();

		return this;

	}

	setMediaStreamSource( mediaStream ) {

		this.hasPlaybackControl = false;
		this.sourceType = 'mediaStreamNode';
		this.source = this.context.createMediaStreamSource( mediaStream );
		this.connect();

		return this;

	}

	setBuffer( audioBuffer ) {

		this.buffer = audioBuffer;
		this.sourceType = 'buffer';

		if ( this.autoplay ) this.play();

		return this;

	}

	play( delay = 0 ) {

		if ( this.isPlaying === true ) {

			console.warn( 'THREE.Audio: Audio is already playing.' );
			return;

		}

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this._startedAt = this.context.currentTime + delay;

		const source = this.context.createBufferSource();
		source.buffer = this.buffer;
		source.loop = this.loop;
		source.loopStart = this.loopStart;
		source.loopEnd = this.loopEnd;
		source.onended = this.onEnded.bind( this );
		source.start( this._startedAt, this._progress + this.offset, this.duration );

		this.isPlaying = true;

		this.source = source;

		this.setDetune( this.detune );
		this.setPlaybackRate( this.playbackRate );

		return this.connect();

	}

	pause() {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		if ( this.isPlaying === true ) {

			// update current progress

			this._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;

			if ( this.loop === true ) {

				// ensure _progress does not exceed duration with looped audios

				this._progress = this._progress % ( this.duration || this.buffer.duration );

			}

			this.source.stop();
			this.source.onended = null;

			this.isPlaying = false;

		}

		return this;

	}

	stop() {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this._progress = 0;

		this.source.stop();
		this.source.onended = null;
		this.isPlaying = false;

		return this;

	}

	connect() {

		if ( this.filters.length > 0 ) {

			this.source.connect( this.filters[ 0 ] );

			for ( let i = 1, l = this.filters.length; i < l; i ++ ) {

				this.filters[ i - 1 ].connect( this.filters[ i ] );

			}

			this.filters[ this.filters.length - 1 ].connect( this.getOutput() );

		} else {

			this.source.connect( this.getOutput() );

		}

		this._connected = true;

		return this;

	}

	disconnect() {

		if ( this.filters.length > 0 ) {

			this.source.disconnect( this.filters[ 0 ] );

			for ( let i = 1, l = this.filters.length; i < l; i ++ ) {

				this.filters[ i - 1 ].disconnect( this.filters[ i ] );

			}

			this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );

		} else {

			this.source.disconnect( this.getOutput() );

		}

		this._connected = false;

		return this;

	}

	getFilters() {

		return this.filters;

	}

	setFilters( value ) {

		if ( ! value ) value = [];

		if ( this._connected === true ) {

			this.disconnect();
			this.filters = value.slice();
			this.connect();

		} else {

			this.filters = value.slice();

		}

		return this;

	}

	setDetune( value ) {

		this.detune = value;

		if ( this.source.detune === undefined ) return; // only set detune when available

		if ( this.isPlaying === true ) {

			this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );

		}

		return this;

	}

	getDetune() {

		return this.detune;

	}

	getFilter() {

		return this.getFilters()[ 0 ];

	}

	setFilter( filter ) {

		return this.setFilters( filter ? [ filter ] : [] );

	}

	setPlaybackRate( value ) {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.playbackRate = value;

		if ( this.isPlaying === true ) {

			this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );

		}

		return this;

	}

	getPlaybackRate() {

		return this.playbackRate;

	}

	onEnded() {

		this.isPlaying = false;

	}

	getLoop() {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return false;

		}

		return this.loop;

	}

	setLoop( value ) {

		if ( this.hasPlaybackControl === false ) {

			console.warn( 'THREE.Audio: this Audio has no playback control.' );
			return;

		}

		this.loop = value;

		if ( this.isPlaying === true ) {

			this.source.loop = this.loop;

		}

		return this;

	}

	setLoopStart( value ) {

		this.loopStart = value;

		return this;

	}

	setLoopEnd( value ) {

		this.loopEnd = value;

		return this;

	}

	getVolume() {

		return this.gain.gain.value;

	}

	setVolume( value ) {

		this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );

		return this;

	}

}

const _position$3 = /*@__PURE__*/ new Vector3();
const _quaternion$4 = /*@__PURE__*/ new Quaternion();
const _scale$2 = /*@__PURE__*/ new Vector3();
const _orientation$1 = /*@__PURE__*/ new Vector3();

class PositionalAudio extends Audio {

	constructor( listener ) {

		super( listener );

		this.panner = this.context.createPanner();
		this.panner.panningModel = 'HRTF';
		this.panner.connect( this.gain );

	}

	getOutput() {

		return this.panner;

	}

	getRefDistance() {

		return this.panner.refDistance;

	}

	setRefDistance( value ) {

		this.panner.refDistance = value;

		return this;

	}

	getRolloffFactor() {

		return this.panner.rolloffFactor;

	}

	setRolloffFactor( value ) {

		this.panner.rolloffFactor = value;

		return this;

	}

	getDistanceModel() {

		return this.panner.distanceModel;

	}

	setDistanceModel( value ) {

		this.panner.distanceModel = value;

		return this;

	}

	getMaxDistance() {

		return this.panner.maxDistance;

	}

	setMaxDistance( value ) {

		this.panner.maxDistance = value;

		return this;

	}

	setDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {

		this.panner.coneInnerAngle = coneInnerAngle;
		this.panner.coneOuterAngle = coneOuterAngle;
		this.panner.coneOuterGain = coneOuterGain;

		return this;

	}

	updateMatrixWorld( force ) {

		super.updateMatrixWorld( force );

		if ( this.hasPlaybackControl === true && this.isPlaying === false ) return;

		this.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );

		_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );

		const panner = this.panner;

		if ( panner.positionX ) {

			// code path for Chrome and Firefox (see #14393)

			const endTime = this.context.currentTime + this.listener.timeDelta;

			panner.positionX.linearRampToValueAtTime( _position$3.x, endTime );
			panner.positionY.linearRampToValueAtTime( _position$3.y, endTime );
			panner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );
			panner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );
			panner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );
			panner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );

		} else {

			panner.setPosition( _position$3.x, _position$3.y, _position$3.z );
			panner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );

		}

	}

}

class AudioAnalyser {

	constructor( audio, fftSize = 2048 ) {

		this.analyser = audio.context.createAnalyser();
		this.analyser.fftSize = fftSize;

		this.data = new Uint8Array( this.analyser.frequencyBinCount );

		audio.getOutput().connect( this.analyser );

	}


	getFrequencyData() {

		this.analyser.getByteFrequencyData( this.data );

		return this.data;

	}

	getAverageFrequency() {

		let value = 0;
		const data = this.getFrequencyData();

		for ( let i = 0; i < data.length; i ++ ) {

			value += data[ i ];

		}

		return value / data.length;

	}

}

class PropertyMixer {

	constructor( binding, typeName, valueSize ) {

		this.binding = binding;
		this.valueSize = valueSize;

		let mixFunction,
			mixFunctionAdditive,
			setIdentity;

		// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]
		//
		// interpolators can use .buffer as their .result
		// the data then goes to 'incoming'
		//
		// 'accu0' and 'accu1' are used frame-interleaved for
		// the cumulative result and are compared to detect
		// changes
		//
		// 'orig' stores the original state of the property
		//
		// 'add' is used for additive cumulative results
		//
		// 'work' is optional and is only present for quaternion types. It is used
		// to store intermediate quaternion multiplication results

		switch ( typeName ) {

			case 'quaternion':
				mixFunction = this._slerp;
				mixFunctionAdditive = this._slerpAdditive;
				setIdentity = this._setAdditiveIdentityQuaternion;

				this.buffer = new Float64Array( valueSize * 6 );
				this._workIndex = 5;
				break;

			case 'string':
			case 'bool':
				mixFunction = this._select;

				// Use the regular mix function and for additive on these types,
				// additive is not relevant for non-numeric types
				mixFunctionAdditive = this._select;

				setIdentity = this._setAdditiveIdentityOther;

				this.buffer = new Array( valueSize * 5 );
				break;

			default:
				mixFunction = this._lerp;
				mixFunctionAdditive = this._lerpAdditive;
				setIdentity = this._setAdditiveIdentityNumeric;

				this.buffer = new Float64Array( valueSize * 5 );

		}

		this._mixBufferRegion = mixFunction;
		this._mixBufferRegionAdditive = mixFunctionAdditive;
		this._setIdentity = setIdentity;
		this._origIndex = 3;
		this._addIndex = 4;

		this.cumulativeWeight = 0;
		this.cumulativeWeightAdditive = 0;

		this.useCount = 0;
		this.referenceCount = 0;

	}

	// accumulate data in the 'incoming' region into 'accu<i>'
	accumulate( accuIndex, weight ) {

		// note: happily accumulating nothing when weight = 0, the caller knows
		// the weight and shouldn't have made the call in the first place

		const buffer = this.buffer,
			stride = this.valueSize,
			offset = accuIndex * stride + stride;

		let currentWeight = this.cumulativeWeight;

		if ( currentWeight === 0 ) {

			// accuN := incoming * weight

			for ( let i = 0; i !== stride; ++ i ) {

				buffer[ offset + i ] = buffer[ i ];

			}

			currentWeight = weight;

		} else {

			// accuN := accuN + incoming * weight

			currentWeight += weight;
			const mix = weight / currentWeight;
			this._mixBufferRegion( buffer, offset, 0, mix, stride );

		}

		this.cumulativeWeight = currentWeight;

	}

	// accumulate data in the 'incoming' region into 'add'
	accumulateAdditive( weight ) {

		const buffer = this.buffer,
			stride = this.valueSize,
			offset = stride * this._addIndex;

		if ( this.cumulativeWeightAdditive === 0 ) {

			// add = identity

			this._setIdentity();

		}

		// add := add + incoming * weight

		this._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );
		this.cumulativeWeightAdditive += weight;

	}

	// apply the state of 'accu<i>' to the binding when accus differ
	apply( accuIndex ) {

		const stride = this.valueSize,
			buffer = this.buffer,
			offset = accuIndex * stride + stride,

			weight = this.cumulativeWeight,
			weightAdditive = this.cumulativeWeightAdditive,

			binding = this.binding;

		this.cumulativeWeight = 0;
		this.cumulativeWeightAdditive = 0;

		if ( weight < 1 ) {

			// accuN := accuN + original * ( 1 - cumulativeWeight )

			const originalValueOffset = stride * this._origIndex;

			this._mixBufferRegion(
				buffer, offset, originalValueOffset, 1 - weight, stride );

		}

		if ( weightAdditive > 0 ) {

			// accuN := accuN + additive accuN

			this._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );

		}

		for ( let i = stride, e = stride + stride; i !== e; ++ i ) {

			if ( buffer[ i ] !== buffer[ i + stride ] ) {

				// value has changed -> update scene graph

				binding.setValue( buffer, offset );
				break;

			}

		}

	}

	// remember the state of the bound property and copy it to both accus
	saveOriginalState() {

		const binding = this.binding;

		const buffer = this.buffer,
			stride = this.valueSize,

			originalValueOffset = stride * this._origIndex;

		binding.getValue( buffer, originalValueOffset );

		// accu[0..1] := orig -- initially detect changes against the original
		for ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {

			buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];

		}

		// Add to identity for additive
		this._setIdentity();

		this.cumulativeWeight = 0;
		this.cumulativeWeightAdditive = 0;

	}

	// apply the state previously taken via 'saveOriginalState' to the binding
	restoreOriginalState() {

		const originalValueOffset = this.valueSize * 3;
		this.binding.setValue( this.buffer, originalValueOffset );

	}

	_setAdditiveIdentityNumeric() {

		const startIndex = this._addIndex * this.valueSize;
		const endIndex = startIndex + this.valueSize;

		for ( let i = startIndex; i < endIndex; i ++ ) {

			this.buffer[ i ] = 0;

		}

	}

	_setAdditiveIdentityQuaternion() {

		this._setAdditiveIdentityNumeric();
		this.buffer[ this._addIndex * this.valueSize + 3 ] = 1;

	}

	_setAdditiveIdentityOther() {

		const startIndex = this._origIndex * this.valueSize;
		const targetIndex = this._addIndex * this.valueSize;

		for ( let i = 0; i < this.valueSize; i ++ ) {

			this.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];

		}

	}


	// mix functions

	_select( buffer, dstOffset, srcOffset, t, stride ) {

		if ( t >= 0.5 ) {

			for ( let i = 0; i !== stride; ++ i ) {

				buffer[ dstOffset + i ] = buffer[ srcOffset + i ];

			}

		}

	}

	_slerp( buffer, dstOffset, srcOffset, t ) {

		Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );

	}

	_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {

		const workOffset = this._workIndex * stride;

		// Store result in intermediate buffer offset
		Quaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );

		// Slerp to the intermediate result
		Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );

	}

	_lerp( buffer, dstOffset, srcOffset, t, stride ) {

		const s = 1 - t;

		for ( let i = 0; i !== stride; ++ i ) {

			const j = dstOffset + i;

			buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;

		}

	}

	_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {

		for ( let i = 0; i !== stride; ++ i ) {

			const j = dstOffset + i;

			buffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;

		}

	}

}

// Characters [].:/ are reserved for track binding syntax.
const _RESERVED_CHARS_RE = '\\[\\]\\.:\\/';
const _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );

// Attempts to allow node names from any language. ES5's `\w` regexp matches
// only latin characters, and the unicode \p{L} is not yet supported. So
// instead, we exclude reserved characters and match everything else.
const _wordChar = '[^' + _RESERVED_CHARS_RE + ']';
const _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\.', '' ) + ']';

// Parent directories, delimited by '/' or ':'. Currently unused, but must
// be matched to parse the rest of the track name.
const _directoryRe = /((?:WC+[\/:])*)/.source.replace( 'WC', _wordChar );

// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.
const _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );

// Object on target node, and accessor. May not contain reserved
// characters. Accessor may contain any character except closing bracket.
const _objectRe = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace( 'WC', _wordChar );

// Property and accessor. May not contain reserved characters. Accessor may
// contain any non-bracket characters.
const _propertyRe = /\.(WC+)(?:\[(.+)\])?/.source.replace( 'WC', _wordChar );

const _trackRe = new RegExp( ''
	+ '^'
	+ _directoryRe
	+ _nodeRe
	+ _objectRe
	+ _propertyRe
	+ '$'
);

const _supportedObjectNames = [ 'material', 'materials', 'bones' ];

function Composite( targetGroup, path, optionalParsedPath ) {

	const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );

	this._targetGroup = targetGroup;
	this._bindings = targetGroup.subscribe_( path, parsedPath );

}

Object.assign( Composite.prototype, {

	getValue: function ( array, offset ) {

		this.bind(); // bind all binding

		const firstValidIndex = this._targetGroup.nCachedObjects_,
			binding = this._bindings[ firstValidIndex ];

		// and only call .getValue on the first
		if ( binding !== undefined ) binding.getValue( array, offset );

	},

	setValue: function ( array, offset ) {

		const bindings = this._bindings;

		for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].setValue( array, offset );

		}

	},

	bind: function () {

		const bindings = this._bindings;

		for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].bind();

		}

	},

	unbind: function () {

		const bindings = this._bindings;

		for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

			bindings[ i ].unbind();

		}

	}

} );


function PropertyBinding( rootNode, path, parsedPath ) {

	this.path = path;
	this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );

	this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;

	this.rootNode = rootNode;

}

Object.assign( PropertyBinding, {

	Composite: Composite,

	create: function ( root, path, parsedPath ) {

		if ( ! ( root && root.isAnimationObjectGroup ) ) {

			return new PropertyBinding( root, path, parsedPath );

		} else {

			return new PropertyBinding.Composite( root, path, parsedPath );

		}

	},

	/**
	 * Replaces spaces with underscores and removes unsupported characters from
	 * node names, to ensure compatibility with parseTrackName().
	 *
	 * @param {string} name Node name to be sanitized.
	 * @return {string}
	 */
	sanitizeNodeName: function ( name ) {

		return name.replace( /\s/g, '_' ).replace( _reservedRe, '' );

	},

	parseTrackName: function ( trackName ) {

		const matches = _trackRe.exec( trackName );

		if ( ! matches ) {

			throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );

		}

		const results = {
			// directoryName: matches[ 1 ], // (tschw) currently unused
			nodeName: matches[ 2 ],
			objectName: matches[ 3 ],
			objectIndex: matches[ 4 ],
			propertyName: matches[ 5 ], // required
			propertyIndex: matches[ 6 ]
		};

		const lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );

		if ( lastDot !== undefined && lastDot !== - 1 ) {

			const objectName = results.nodeName.substring( lastDot + 1 );

			// Object names must be checked against an allowlist. Otherwise, there
			// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
			// 'bar' could be the objectName, or part of a nodeName (which can
			// include '.' characters).
			if ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {

				results.nodeName = results.nodeName.substring( 0, lastDot );
				results.objectName = objectName;

			}

		}

		if ( results.propertyName === null || results.propertyName.length === 0 ) {

			throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );

		}

		return results;

	},

	findNode: function ( root, nodeName ) {

		if ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {

			return root;

		}

		// search into skeleton bones.
		if ( root.skeleton ) {

			const bone = root.skeleton.getBoneByName( nodeName );

			if ( bone !== undefined ) {

				return bone;

			}

		}

		// search into node subtree.
		if ( root.children ) {

			const searchNodeSubtree = function ( children ) {

				for ( let i = 0; i < children.length; i ++ ) {

					const childNode = children[ i ];

					if ( childNode.name === nodeName || childNode.uuid === nodeName ) {

						return childNode;

					}

					const result = searchNodeSubtree( childNode.children );

					if ( result ) return result;

				}

				return null;

			};

			const subTreeNode = searchNodeSubtree( root.children );

			if ( subTreeNode ) {

				return subTreeNode;

			}

		}

		return null;

	}

} );

Object.assign( PropertyBinding.prototype, { // prototype, continued

	// these are used to "bind" a nonexistent property
	_getValue_unavailable: function () {},
	_setValue_unavailable: function () {},

	BindingType: {
		Direct: 0,
		EntireArray: 1,
		ArrayElement: 2,
		HasFromToArray: 3
	},

	Versioning: {
		None: 0,
		NeedsUpdate: 1,
		MatrixWorldNeedsUpdate: 2
	},

	GetterByBindingType: [

		function getValue_direct( buffer, offset ) {

			buffer[ offset ] = this.node[ this.propertyName ];

		},

		function getValue_array( buffer, offset ) {

			const source = this.resolvedProperty;

			for ( let i = 0, n = source.length; i !== n; ++ i ) {

				buffer[ offset ++ ] = source[ i ];

			}

		},

		function getValue_arrayElement( buffer, offset ) {

			buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];

		},

		function getValue_toArray( buffer, offset ) {

			this.resolvedProperty.toArray( buffer, offset );

		}

	],

	SetterByBindingTypeAndVersioning: [

		[
			// Direct

			function setValue_direct( buffer, offset ) {

				this.targetObject[ this.propertyName ] = buffer[ offset ];

			},

			function setValue_direct_setNeedsUpdate( buffer, offset ) {

				this.targetObject[ this.propertyName ] = buffer[ offset ];
				this.targetObject.needsUpdate = true;

			},

			function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {

				this.targetObject[ this.propertyName ] = buffer[ offset ];
				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		], [

			// EntireArray

			function setValue_array( buffer, offset ) {

				const dest = this.resolvedProperty;

				for ( let i = 0, n = dest.length; i !== n; ++ i ) {

					dest[ i ] = buffer[ offset ++ ];

				}

			},

			function setValue_array_setNeedsUpdate( buffer, offset ) {

				const dest = this.resolvedProperty;

				for ( let i = 0, n = dest.length; i !== n; ++ i ) {

					dest[ i ] = buffer[ offset ++ ];

				}

				this.targetObject.needsUpdate = true;

			},

			function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {

				const dest = this.resolvedProperty;

				for ( let i = 0, n = dest.length; i !== n; ++ i ) {

					dest[ i ] = buffer[ offset ++ ];

				}

				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		], [

			// ArrayElement

			function setValue_arrayElement( buffer, offset ) {

				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];

			},

			function setValue_arrayElement_setNeedsUpdate( buffer, offset ) {

				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
				this.targetObject.needsUpdate = true;

			},

			function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {

				this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		], [

			// HasToFromArray

			function setValue_fromArray( buffer, offset ) {

				this.resolvedProperty.fromArray( buffer, offset );

			},

			function setValue_fromArray_setNeedsUpdate( buffer, offset ) {

				this.resolvedProperty.fromArray( buffer, offset );
				this.targetObject.needsUpdate = true;

			},

			function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {

				this.resolvedProperty.fromArray( buffer, offset );
				this.targetObject.matrixWorldNeedsUpdate = true;

			}

		]

	],

	getValue: function getValue_unbound( targetArray, offset ) {

		this.bind();
		this.getValue( targetArray, offset );

		// Note: This class uses a State pattern on a per-method basis:
		// 'bind' sets 'this.getValue' / 'setValue' and shadows the
		// prototype version of these methods with one that represents
		// the bound state. When the property is not found, the methods
		// become no-ops.

	},

	setValue: function getValue_unbound( sourceArray, offset ) {

		this.bind();
		this.setValue( sourceArray, offset );

	},

	// create getter / setter pair for a property in the scene graph
	bind: function () {

		let targetObject = this.node;
		const parsedPath = this.parsedPath;

		const objectName = parsedPath.objectName;
		const propertyName = parsedPath.propertyName;
		let propertyIndex = parsedPath.propertyIndex;

		if ( ! targetObject ) {

			targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;

			this.node = targetObject;

		}

		// set fail state so we can just 'return' on error
		this.getValue = this._getValue_unavailable;
		this.setValue = this._setValue_unavailable;

		// ensure there is a value node
		if ( ! targetObject ) {

			console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\'t found.' );
			return;

		}

		if ( objectName ) {

			let objectIndex = parsedPath.objectIndex;

			// special cases were we need to reach deeper into the hierarchy to get the face materials....
			switch ( objectName ) {

				case 'materials':

					if ( ! targetObject.material ) {

						console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );
						return;

					}

					if ( ! targetObject.material.materials ) {

						console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );
						return;

					}

					targetObject = targetObject.material.materials;

					break;

				case 'bones':

					if ( ! targetObject.skeleton ) {

						console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );
						return;

					}

					// potential future optimization: skip this if propertyIndex is already an integer
					// and convert the integer string to a true integer.

					targetObject = targetObject.skeleton.bones;

					// support resolving morphTarget names into indices.
					for ( let i = 0; i < targetObject.length; i ++ ) {

						if ( targetObject[ i ].name === objectIndex ) {

							objectIndex = i;
							break;

						}

					}

					break;

				default:

					if ( targetObject[ objectName ] === undefined ) {

						console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );
						return;

					}

					targetObject = targetObject[ objectName ];

			}


			if ( objectIndex !== undefined ) {

				if ( targetObject[ objectIndex ] === undefined ) {

					console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );
					return;

				}

				targetObject = targetObject[ objectIndex ];

			}

		}

		// resolve property
		const nodeProperty = targetObject[ propertyName ];

		if ( nodeProperty === undefined ) {

			const nodeName = parsedPath.nodeName;

			console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +
				'.' + propertyName + ' but it wasn\'t found.', targetObject );
			return;

		}

		// determine versioning scheme
		let versioning = this.Versioning.None;

		this.targetObject = targetObject;

		if ( targetObject.needsUpdate !== undefined ) { // material

			versioning = this.Versioning.NeedsUpdate;

		} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform

			versioning = this.Versioning.MatrixWorldNeedsUpdate;

		}

		// determine how the property gets bound
		let bindingType = this.BindingType.Direct;

		if ( propertyIndex !== undefined ) {

			// access a sub element of the property array (only primitives are supported right now)

			if ( propertyName === 'morphTargetInfluences' ) {

				// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.

				// support resolving morphTarget names into indices.
				if ( ! targetObject.geometry ) {

					console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );
					return;

				}

				if ( targetObject.geometry.isBufferGeometry ) {

					if ( ! targetObject.geometry.morphAttributes ) {

						console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );
						return;

					}

					if ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {

						propertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];

					}


				} else {

					console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );
					return;

				}

			}

			bindingType = this.BindingType.ArrayElement;

			this.resolvedProperty = nodeProperty;
			this.propertyIndex = propertyIndex;

		} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {

			// must use copy for Object3D.Euler/Quaternion

			bindingType = this.BindingType.HasFromToArray;

			this.resolvedProperty = nodeProperty;

		} else if ( Array.isArray( nodeProperty ) ) {

			bindingType = this.BindingType.EntireArray;

			this.resolvedProperty = nodeProperty;

		} else {

			this.propertyName = propertyName;

		}

		// select getter / setter
		this.getValue = this.GetterByBindingType[ bindingType ];
		this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];

	},

	unbind: function () {

		this.node = null;

		// back to the prototype version of getValue / setValue
		// note: avoiding to mutate the shape of 'this' via 'delete'
		this.getValue = this._getValue_unbound;
		this.setValue = this._setValue_unbound;

	}

} );

// DECLARE ALIAS AFTER assign prototype
Object.assign( PropertyBinding.prototype, {

	// initial state of these methods that calls 'bind'
	_getValue_unbound: PropertyBinding.prototype.getValue,
	_setValue_unbound: PropertyBinding.prototype.setValue,

} );

/**
 *
 * A group of objects that receives a shared animation state.
 *
 * Usage:
 *
 *  - Add objects you would otherwise pass as 'root' to the
 *    constructor or the .clipAction method of AnimationMixer.
 *
 *  - Instead pass this object as 'root'.
 *
 *  - You can also add and remove objects later when the mixer
 *    is running.
 *
 * Note:
 *
 *    Objects of this class appear as one object to the mixer,
 *    so cache control of the individual objects must be done
 *    on the group.
 *
 * Limitation:
 *
 *  - The animated properties must be compatible among the
 *    all objects in the group.
 *
 *  - A single property can either be controlled through a
 *    target group or directly, but not both.
 */

class AnimationObjectGroup {

	constructor() {

		this.uuid = MathUtils.generateUUID();

		// cached objects followed by the active ones
		this._objects = Array.prototype.slice.call( arguments );

		this.nCachedObjects_ = 0; // threshold
		// note: read by PropertyBinding.Composite

		const indices = {};
		this._indicesByUUID = indices; // for bookkeeping

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			indices[ arguments[ i ].uuid ] = i;

		}

		this._paths = []; // inside: string
		this._parsedPaths = []; // inside: { we don't care, here }
		this._bindings = []; // inside: Array< PropertyBinding >
		this._bindingsIndicesByPath = {}; // inside: indices in these arrays

		const scope = this;

		this.stats = {

			objects: {
				get total() {

					return scope._objects.length;

				},
				get inUse() {

					return this.total - scope.nCachedObjects_;

				}
			},
			get bindingsPerObject() {

				return scope._bindings.length;

			}

		};

	}

	add() {

		const objects = this._objects,
			indicesByUUID = this._indicesByUUID,
			paths = this._paths,
			parsedPaths = this._parsedPaths,
			bindings = this._bindings,
			nBindings = bindings.length;

		let knownObject = undefined,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_;

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			const object = arguments[ i ],
				uuid = object.uuid;
			let index = indicesByUUID[ uuid ];

			if ( index === undefined ) {

				// unknown object -> add it to the ACTIVE region

				index = nObjects ++;
				indicesByUUID[ uuid ] = index;
				objects.push( object );

				// accounting is done, now do the same for all bindings

				for ( let j = 0, m = nBindings; j !== m; ++ j ) {

					bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );

				}

			} else if ( index < nCachedObjects ) {

				knownObject = objects[ index ];

				// move existing object to the ACTIVE region

				const firstActiveIndex = -- nCachedObjects,
					lastCachedObject = objects[ firstActiveIndex ];

				indicesByUUID[ lastCachedObject.uuid ] = index;
				objects[ index ] = lastCachedObject;

				indicesByUUID[ uuid ] = firstActiveIndex;
				objects[ firstActiveIndex ] = object;

				// accounting is done, now do the same for all bindings

				for ( let j = 0, m = nBindings; j !== m; ++ j ) {

					const bindingsForPath = bindings[ j ],
						lastCached = bindingsForPath[ firstActiveIndex ];

					let binding = bindingsForPath[ index ];

					bindingsForPath[ index ] = lastCached;

					if ( binding === undefined ) {

						// since we do not bother to create new bindings
						// for objects that are cached, the binding may
						// or may not exist

						binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );

					}

					bindingsForPath[ firstActiveIndex ] = binding;

				}

			} else if ( objects[ index ] !== knownObject ) {

				console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +
					'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );

			} // else the object is already where we want it to be

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	}

	remove() {

		const objects = this._objects,
			indicesByUUID = this._indicesByUUID,
			bindings = this._bindings,
			nBindings = bindings.length;

		let nCachedObjects = this.nCachedObjects_;

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			const object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ];

			if ( index !== undefined && index >= nCachedObjects ) {

				// move existing object into the CACHED region

				const lastCachedIndex = nCachedObjects ++,
					firstActiveObject = objects[ lastCachedIndex ];

				indicesByUUID[ firstActiveObject.uuid ] = index;
				objects[ index ] = firstActiveObject;

				indicesByUUID[ uuid ] = lastCachedIndex;
				objects[ lastCachedIndex ] = object;

				// accounting is done, now do the same for all bindings

				for ( let j = 0, m = nBindings; j !== m; ++ j ) {

					const bindingsForPath = bindings[ j ],
						firstActive = bindingsForPath[ lastCachedIndex ],
						binding = bindingsForPath[ index ];

					bindingsForPath[ index ] = firstActive;
					bindingsForPath[ lastCachedIndex ] = binding;

				}

			}

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	}

	// remove & forget
	uncache() {

		const objects = this._objects,
			indicesByUUID = this._indicesByUUID,
			bindings = this._bindings,
			nBindings = bindings.length;

		let nCachedObjects = this.nCachedObjects_,
			nObjects = objects.length;

		for ( let i = 0, n = arguments.length; i !== n; ++ i ) {

			const object = arguments[ i ],
				uuid = object.uuid,
				index = indicesByUUID[ uuid ];

			if ( index !== undefined ) {

				delete indicesByUUID[ uuid ];

				if ( index < nCachedObjects ) {

					// object is cached, shrink the CACHED region

					const firstActiveIndex = -- nCachedObjects,
						lastCachedObject = objects[ firstActiveIndex ],
						lastIndex = -- nObjects,
						lastObject = objects[ lastIndex ];

					// last cached object takes this object's place
					indicesByUUID[ lastCachedObject.uuid ] = index;
					objects[ index ] = lastCachedObject;

					// last object goes to the activated slot and pop
					indicesByUUID[ lastObject.uuid ] = firstActiveIndex;
					objects[ firstActiveIndex ] = lastObject;
					objects.pop();

					// accounting is done, now do the same for all bindings

					for ( let j = 0, m = nBindings; j !== m; ++ j ) {

						const bindingsForPath = bindings[ j ],
							lastCached = bindingsForPath[ firstActiveIndex ],
							last = bindingsForPath[ lastIndex ];

						bindingsForPath[ index ] = lastCached;
						bindingsForPath[ firstActiveIndex ] = last;
						bindingsForPath.pop();

					}

				} else {

					// object is active, just swap with the last and pop

					const lastIndex = -- nObjects,
						lastObject = objects[ lastIndex ];

					if ( lastIndex > 0 ) {

						indicesByUUID[ lastObject.uuid ] = index;

					}

					objects[ index ] = lastObject;
					objects.pop();

					// accounting is done, now do the same for all bindings

					for ( let j = 0, m = nBindings; j !== m; ++ j ) {

						const bindingsForPath = bindings[ j ];

						bindingsForPath[ index ] = bindingsForPath[ lastIndex ];
						bindingsForPath.pop();

					}

				} // cached or active

			} // if object is known

		} // for arguments

		this.nCachedObjects_ = nCachedObjects;

	}

	// Internal interface used by befriended PropertyBinding.Composite:

	subscribe_( path, parsedPath ) {

		// returns an array of bindings for the given path that is changed
		// according to the contained objects in the group

		const indicesByPath = this._bindingsIndicesByPath;
		let index = indicesByPath[ path ];
		const bindings = this._bindings;

		if ( index !== undefined ) return bindings[ index ];

		const paths = this._paths,
			parsedPaths = this._parsedPaths,
			objects = this._objects,
			nObjects = objects.length,
			nCachedObjects = this.nCachedObjects_,
			bindingsForPath = new Array( nObjects );

		index = bindings.length;

		indicesByPath[ path ] = index;

		paths.push( path );
		parsedPaths.push( parsedPath );
		bindings.push( bindingsForPath );

		for ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {

			const object = objects[ i ];
			bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );

		}

		return bindingsForPath;

	}

	unsubscribe_( path ) {

		// tells the group to forget about a property path and no longer
		// update the array previously obtained with 'subscribe_'

		const indicesByPath = this._bindingsIndicesByPath,
			index = indicesByPath[ path ];

		if ( index !== undefined ) {

			const paths = this._paths,
				parsedPaths = this._parsedPaths,
				bindings = this._bindings,
				lastBindingsIndex = bindings.length - 1,
				lastBindings = bindings[ lastBindingsIndex ],
				lastBindingsPath = path[ lastBindingsIndex ];

			indicesByPath[ lastBindingsPath ] = index;

			bindings[ index ] = lastBindings;
			bindings.pop();

			parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];
			parsedPaths.pop();

			paths[ index ] = paths[ lastBindingsIndex ];
			paths.pop();

		}

	}

}

AnimationObjectGroup.prototype.isAnimationObjectGroup = true;

class AnimationAction {

	constructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {

		this._mixer = mixer;
		this._clip = clip;
		this._localRoot = localRoot;
		this.blendMode = blendMode;

		const tracks = clip.tracks,
			nTracks = tracks.length,
			interpolants = new Array( nTracks );

		const interpolantSettings = {
			endingStart: ZeroCurvatureEnding,
			endingEnd: ZeroCurvatureEnding
		};

		for ( let i = 0; i !== nTracks; ++ i ) {

			const interpolant = tracks[ i ].createInterpolant( null );
			interpolants[ i ] = interpolant;
			interpolant.settings = interpolantSettings;

		}

		this._interpolantSettings = interpolantSettings;

		this._interpolants = interpolants; // bound by the mixer

		// inside: PropertyMixer (managed by the mixer)
		this._propertyBindings = new Array( nTracks );

		this._cacheIndex = null; // for the memory manager
		this._byClipCacheIndex = null; // for the memory manager

		this._timeScaleInterpolant = null;
		this._weightInterpolant = null;

		this.loop = LoopRepeat;
		this._loopCount = - 1;

		// global mixer time when the action is to be started
		// it's set back to 'null' upon start of the action
		this._startTime = null;

		// scaled local time of the action
		// gets clamped or wrapped to 0..clip.duration according to loop
		this.time = 0;

		this.timeScale = 1;
		this._effectiveTimeScale = 1;

		this.weight = 1;
		this._effectiveWeight = 1;

		this.repetitions = Infinity; // no. of repetitions when looping

		this.paused = false; // true -> zero effective time scale
		this.enabled = true; // false -> zero effective weight

		this.clampWhenFinished = false;// keep feeding the last frame?

		this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate
		this.zeroSlopeAtEnd = true;// clips for start, loop and end

	}

	// State & Scheduling

	play() {

		this._mixer._activateAction( this );

		return this;

	}

	stop() {

		this._mixer._deactivateAction( this );

		return this.reset();

	}

	reset() {

		this.paused = false;
		this.enabled = true;

		this.time = 0; // restart clip
		this._loopCount = - 1;// forget previous loops
		this._startTime = null;// forget scheduling

		return this.stopFading().stopWarping();

	}

	isRunning() {

		return this.enabled && ! this.paused && this.timeScale !== 0 &&
			this._startTime === null && this._mixer._isActiveAction( this );

	}

	// return true when play has been called
	isScheduled() {

		return this._mixer._isActiveAction( this );

	}

	startAt( time ) {

		this._startTime = time;

		return this;

	}

	setLoop( mode, repetitions ) {

		this.loop = mode;
		this.repetitions = repetitions;

		return this;

	}

	// Weight

	// set the weight stopping any scheduled fading
	// although .enabled = false yields an effective weight of zero, this
	// method does *not* change .enabled, because it would be confusing
	setEffectiveWeight( weight ) {

		this.weight = weight;

		// note: same logic as when updated at runtime
		this._effectiveWeight = this.enabled ? weight : 0;

		return this.stopFading();

	}

	// return the weight considering fading and .enabled
	getEffectiveWeight() {

		return this._effectiveWeight;

	}

	fadeIn( duration ) {

		return this._scheduleFading( duration, 0, 1 );

	}

	fadeOut( duration ) {

		return this._scheduleFading( duration, 1, 0 );

	}

	crossFadeFrom( fadeOutAction, duration, warp ) {

		fadeOutAction.fadeOut( duration );
		this.fadeIn( duration );

		if ( warp ) {

			const fadeInDuration = this._clip.duration,
				fadeOutDuration = fadeOutAction._clip.duration,

				startEndRatio = fadeOutDuration / fadeInDuration,
				endStartRatio = fadeInDuration / fadeOutDuration;

			fadeOutAction.warp( 1.0, startEndRatio, duration );
			this.warp( endStartRatio, 1.0, duration );

		}

		return this;

	}

	crossFadeTo( fadeInAction, duration, warp ) {

		return fadeInAction.crossFadeFrom( this, duration, warp );

	}

	stopFading() {

		const weightInterpolant = this._weightInterpolant;

		if ( weightInterpolant !== null ) {

			this._weightInterpolant = null;
			this._mixer._takeBackControlInterpolant( weightInterpolant );

		}

		return this;

	}

	// Time Scale Control

	// set the time scale stopping any scheduled warping
	// although .paused = true yields an effective time scale of zero, this
	// method does *not* change .paused, because it would be confusing
	setEffectiveTimeScale( timeScale ) {

		this.timeScale = timeScale;
		this._effectiveTimeScale = this.paused ? 0 : timeScale;

		return this.stopWarping();

	}

	// return the time scale considering warping and .paused
	getEffectiveTimeScale() {

		return this._effectiveTimeScale;

	}

	setDuration( duration ) {

		this.timeScale = this._clip.duration / duration;

		return this.stopWarping();

	}

	syncWith( action ) {

		this.time = action.time;
		this.timeScale = action.timeScale;

		return this.stopWarping();

	}

	halt( duration ) {

		return this.warp( this._effectiveTimeScale, 0, duration );

	}

	warp( startTimeScale, endTimeScale, duration ) {

		const mixer = this._mixer,
			now = mixer.time,
			timeScale = this.timeScale;

		let interpolant = this._timeScaleInterpolant;

		if ( interpolant === null ) {

			interpolant = mixer._lendControlInterpolant();
			this._timeScaleInterpolant = interpolant;

		}

		const times = interpolant.parameterPositions,
			values = interpolant.sampleValues;

		times[ 0 ] = now;
		times[ 1 ] = now + duration;

		values[ 0 ] = startTimeScale / timeScale;
		values[ 1 ] = endTimeScale / timeScale;

		return this;

	}

	stopWarping() {

		const timeScaleInterpolant = this._timeScaleInterpolant;

		if ( timeScaleInterpolant !== null ) {

			this._timeScaleInterpolant = null;
			this._mixer._takeBackControlInterpolant( timeScaleInterpolant );

		}

		return this;

	}

	// Object Accessors

	getMixer() {

		return this._mixer;

	}

	getClip() {

		return this._clip;

	}

	getRoot() {

		return this._localRoot || this._mixer._root;

	}

	// Interna

	_update( time, deltaTime, timeDirection, accuIndex ) {

		// called by the mixer

		if ( ! this.enabled ) {

			// call ._updateWeight() to update ._effectiveWeight

			this._updateWeight( time );
			return;

		}

		const startTime = this._startTime;

		if ( startTime !== null ) {

			// check for scheduled start of action

			const timeRunning = ( time - startTime ) * timeDirection;
			if ( timeRunning < 0 || timeDirection === 0 ) {

				return; // yet to come / don't decide when delta = 0

			}

			// start

			this._startTime = null; // unschedule
			deltaTime = timeDirection * timeRunning;

		}

		// apply time scale and advance time

		deltaTime *= this._updateTimeScale( time );
		const clipTime = this._updateTime( deltaTime );

		// note: _updateTime may disable the action resulting in
		// an effective weight of 0

		const weight = this._updateWeight( time );

		if ( weight > 0 ) {

			const interpolants = this._interpolants;
			const propertyMixers = this._propertyBindings;

			switch ( this.blendMode ) {

				case AdditiveAnimationBlendMode:

					for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {

						interpolants[ j ].evaluate( clipTime );
						propertyMixers[ j ].accumulateAdditive( weight );

					}

					break;

				case NormalAnimationBlendMode:
				default:

					for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {

						interpolants[ j ].evaluate( clipTime );
						propertyMixers[ j ].accumulate( accuIndex, weight );

					}

			}

		}

	}

	_updateWeight( time ) {

		let weight = 0;

		if ( this.enabled ) {

			weight = this.weight;
			const interpolant = this._weightInterpolant;

			if ( interpolant !== null ) {

				const interpolantValue = interpolant.evaluate( time )[ 0 ];

				weight *= interpolantValue;

				if ( time > interpolant.parameterPositions[ 1 ] ) {

					this.stopFading();

					if ( interpolantValue === 0 ) {

						// faded out, disable
						this.enabled = false;

					}

				}

			}

		}

		this._effectiveWeight = weight;
		return weight;

	}

	_updateTimeScale( time ) {

		let timeScale = 0;

		if ( ! this.paused ) {

			timeScale = this.timeScale;

			const interpolant = this._timeScaleInterpolant;

			if ( interpolant !== null ) {

				const interpolantValue = interpolant.evaluate( time )[ 0 ];

				timeScale *= interpolantValue;

				if ( time > interpolant.parameterPositions[ 1 ] ) {

					this.stopWarping();

					if ( timeScale === 0 ) {

						// motion has halted, pause
						this.paused = true;

					} else {

						// warp done - apply final time scale
						this.timeScale = timeScale;

					}

				}

			}

		}

		this._effectiveTimeScale = timeScale;
		return timeScale;

	}

	_updateTime( deltaTime ) {

		const duration = this._clip.duration;
		const loop = this.loop;

		let time = this.time + deltaTime;
		let loopCount = this._loopCount;

		const pingPong = ( loop === LoopPingPong );

		if ( deltaTime === 0 ) {

			if ( loopCount === - 1 ) return time;

			return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;

		}

		if ( loop === LoopOnce ) {

			if ( loopCount === - 1 ) {

				// just started

				this._loopCount = 0;
				this._setEndings( true, true, false );

			}

			handle_stop: {

				if ( time >= duration ) {

					time = duration;

				} else if ( time < 0 ) {

					time = 0;

				} else {

					this.time = time;

					break handle_stop;

				}

				if ( this.clampWhenFinished ) this.paused = true;
				else this.enabled = false;

				this.time = time;

				this._mixer.dispatchEvent( {
					type: 'finished', action: this,
					direction: deltaTime < 0 ? - 1 : 1
				} );

			}

		} else { // repetitive Repeat or PingPong

			if ( loopCount === - 1 ) {

				// just started

				if ( deltaTime >= 0 ) {

					loopCount = 0;

					this._setEndings( true, this.repetitions === 0, pingPong );

				} else {

					// when looping in reverse direction, the initial
					// transition through zero counts as a repetition,
					// so leave loopCount at -1

					this._setEndings( this.repetitions === 0, true, pingPong );

				}

			}

			if ( time >= duration || time < 0 ) {

				// wrap around

				const loopDelta = Math.floor( time / duration ); // signed
				time -= duration * loopDelta;

				loopCount += Math.abs( loopDelta );

				const pending = this.repetitions - loopCount;

				if ( pending <= 0 ) {

					// have to stop (switch state, clamp time, fire event)

					if ( this.clampWhenFinished ) this.paused = true;
					else this.enabled = false;

					time = deltaTime > 0 ? duration : 0;

					this.time = time;

					this._mixer.dispatchEvent( {
						type: 'finished', action: this,
						direction: deltaTime > 0 ? 1 : - 1
					} );

				} else {

					// keep running

					if ( pending === 1 ) {

						// entering the last round

						const atStart = deltaTime < 0;
						this._setEndings( atStart, ! atStart, pingPong );

					} else {

						this._setEndings( false, false, pingPong );

					}

					this._loopCount = loopCount;

					this.time = time;

					this._mixer.dispatchEvent( {
						type: 'loop', action: this, loopDelta: loopDelta
					} );

				}

			} else {

				this.time = time;

			}

			if ( pingPong && ( loopCount & 1 ) === 1 ) {

				// invert time for the "pong round"

				return duration - time;

			}

		}

		return time;

	}

	_setEndings( atStart, atEnd, pingPong ) {

		const settings = this._interpolantSettings;

		if ( pingPong ) {

			settings.endingStart = ZeroSlopeEnding;
			settings.endingEnd = ZeroSlopeEnding;

		} else {

			// assuming for LoopOnce atStart == atEnd == true

			if ( atStart ) {

				settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;

			} else {

				settings.endingStart = WrapAroundEnding;

			}

			if ( atEnd ) {

				settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;

			} else {

				settings.endingEnd 	 = WrapAroundEnding;

			}

		}

	}

	_scheduleFading( duration, weightNow, weightThen ) {

		const mixer = this._mixer, now = mixer.time;
		let interpolant = this._weightInterpolant;

		if ( interpolant === null ) {

			interpolant = mixer._lendControlInterpolant();
			this._weightInterpolant = interpolant;

		}

		const times = interpolant.parameterPositions,
			values = interpolant.sampleValues;

		times[ 0 ] = now;
		values[ 0 ] = weightNow;
		times[ 1 ] = now + duration;
		values[ 1 ] = weightThen;

		return this;

	}

}

class AnimationMixer extends EventDispatcher {

	constructor( root ) {

		super();

		this._root = root;
		this._initMemoryManager();
		this._accuIndex = 0;
		this.time = 0;
		this.timeScale = 1.0;

	}

	_bindAction( action, prototypeAction ) {

		const root = action._localRoot || this._root,
			tracks = action._clip.tracks,
			nTracks = tracks.length,
			bindings = action._propertyBindings,
			interpolants = action._interpolants,
			rootUuid = root.uuid,
			bindingsByRoot = this._bindingsByRootAndName;

		let bindingsByName = bindingsByRoot[ rootUuid ];

		if ( bindingsByName === undefined ) {

			bindingsByName = {};
			bindingsByRoot[ rootUuid ] = bindingsByName;

		}

		for ( let i = 0; i !== nTracks; ++ i ) {

			const track = tracks[ i ],
				trackName = track.name;

			let binding = bindingsByName[ trackName ];

			if ( binding !== undefined ) {

				bindings[ i ] = binding;

			} else {

				binding = bindings[ i ];

				if ( binding !== undefined ) {

					// existing binding, make sure the cache knows

					if ( binding._cacheIndex === null ) {

						++ binding.referenceCount;
						this._addInactiveBinding( binding, rootUuid, trackName );

					}

					continue;

				}

				const path = prototypeAction && prototypeAction.
					_propertyBindings[ i ].binding.parsedPath;

				binding = new PropertyMixer(
					PropertyBinding.create( root, trackName, path ),
					track.ValueTypeName, track.getValueSize() );

				++ binding.referenceCount;
				this._addInactiveBinding( binding, rootUuid, trackName );

				bindings[ i ] = binding;

			}

			interpolants[ i ].resultBuffer = binding.buffer;

		}

	}

	_activateAction( action ) {

		if ( ! this._isActiveAction( action ) ) {

			if ( action._cacheIndex === null ) {

				// this action has been forgotten by the cache, but the user
				// appears to be still using it -> rebind

				const rootUuid = ( action._localRoot || this._root ).uuid,
					clipUuid = action._clip.uuid,
					actionsForClip = this._actionsByClip[ clipUuid ];

				this._bindAction( action,
					actionsForClip && actionsForClip.knownActions[ 0 ] );

				this._addInactiveAction( action, clipUuid, rootUuid );

			}

			const bindings = action._propertyBindings;

			// increment reference counts / sort out state
			for ( let i = 0, n = bindings.length; i !== n; ++ i ) {

				const binding = bindings[ i ];

				if ( binding.useCount ++ === 0 ) {

					this._lendBinding( binding );
					binding.saveOriginalState();

				}

			}

			this._lendAction( action );

		}

	}

	_deactivateAction( action ) {

		if ( this._isActiveAction( action ) ) {

			const bindings = action._propertyBindings;

			// decrement reference counts / sort out state
			for ( let i = 0, n = bindings.length; i !== n; ++ i ) {

				const binding = bindings[ i ];

				if ( -- binding.useCount === 0 ) {

					binding.restoreOriginalState();
					this._takeBackBinding( binding );

				}

			}

			this._takeBackAction( action );

		}

	}

	// Memory manager

	_initMemoryManager() {

		this._actions = []; // 'nActiveActions' followed by inactive ones
		this._nActiveActions = 0;

		this._actionsByClip = {};
		// inside:
		// {
		// 	knownActions: Array< AnimationAction > - used as prototypes
		// 	actionByRoot: AnimationAction - lookup
		// }


		this._bindings = []; // 'nActiveBindings' followed by inactive ones
		this._nActiveBindings = 0;

		this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >


		this._controlInterpolants = []; // same game as above
		this._nActiveControlInterpolants = 0;

		const scope = this;

		this.stats = {

			actions: {
				get total() {

					return scope._actions.length;

				},
				get inUse() {

					return scope._nActiveActions;

				}
			},
			bindings: {
				get total() {

					return scope._bindings.length;

				},
				get inUse() {

					return scope._nActiveBindings;

				}
			},
			controlInterpolants: {
				get total() {

					return scope._controlInterpolants.length;

				},
				get inUse() {

					return scope._nActiveControlInterpolants;

				}
			}

		};

	}

	// Memory management for AnimationAction objects

	_isActiveAction( action ) {

		const index = action._cacheIndex;
		return index !== null && index < this._nActiveActions;

	}

	_addInactiveAction( action, clipUuid, rootUuid ) {

		const actions = this._actions,
			actionsByClip = this._actionsByClip;

		let actionsForClip = actionsByClip[ clipUuid ];

		if ( actionsForClip === undefined ) {

			actionsForClip = {

				knownActions: [ action ],
				actionByRoot: {}

			};

			action._byClipCacheIndex = 0;

			actionsByClip[ clipUuid ] = actionsForClip;

		} else {

			const knownActions = actionsForClip.knownActions;

			action._byClipCacheIndex = knownActions.length;
			knownActions.push( action );

		}

		action._cacheIndex = actions.length;
		actions.push( action );

		actionsForClip.actionByRoot[ rootUuid ] = action;

	}

	_removeInactiveAction( action ) {

		const actions = this._actions,
			lastInactiveAction = actions[ actions.length - 1 ],
			cacheIndex = action._cacheIndex;

		lastInactiveAction._cacheIndex = cacheIndex;
		actions[ cacheIndex ] = lastInactiveAction;
		actions.pop();

		action._cacheIndex = null;


		const clipUuid = action._clip.uuid,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ],
			knownActionsForClip = actionsForClip.knownActions,

			lastKnownAction =
				knownActionsForClip[ knownActionsForClip.length - 1 ],

			byClipCacheIndex = action._byClipCacheIndex;

		lastKnownAction._byClipCacheIndex = byClipCacheIndex;
		knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;
		knownActionsForClip.pop();

		action._byClipCacheIndex = null;


		const actionByRoot = actionsForClip.actionByRoot,
			rootUuid = ( action._localRoot || this._root ).uuid;

		delete actionByRoot[ rootUuid ];

		if ( knownActionsForClip.length === 0 ) {

			delete actionsByClip[ clipUuid ];

		}

		this._removeInactiveBindingsForAction( action );

	}

	_removeInactiveBindingsForAction( action ) {

		const bindings = action._propertyBindings;

		for ( let i = 0, n = bindings.length; i !== n; ++ i ) {

			const binding = bindings[ i ];

			if ( -- binding.referenceCount === 0 ) {

				this._removeInactiveBinding( binding );

			}

		}

	}

	_lendAction( action ) {

		// [ active actions |  inactive actions  ]
		// [  active actions >| inactive actions ]
		//                 s        a
		//                  <-swap->
		//                 a        s

		const actions = this._actions,
			prevIndex = action._cacheIndex,

			lastActiveIndex = this._nActiveActions ++,

			firstInactiveAction = actions[ lastActiveIndex ];

		action._cacheIndex = lastActiveIndex;
		actions[ lastActiveIndex ] = action;

		firstInactiveAction._cacheIndex = prevIndex;
		actions[ prevIndex ] = firstInactiveAction;

	}

	_takeBackAction( action ) {

		// [  active actions  | inactive actions ]
		// [ active actions |< inactive actions  ]
		//        a        s
		//         <-swap->
		//        s        a

		const actions = this._actions,
			prevIndex = action._cacheIndex,

			firstInactiveIndex = -- this._nActiveActions,

			lastActiveAction = actions[ firstInactiveIndex ];

		action._cacheIndex = firstInactiveIndex;
		actions[ firstInactiveIndex ] = action;

		lastActiveAction._cacheIndex = prevIndex;
		actions[ prevIndex ] = lastActiveAction;

	}

	// Memory management for PropertyMixer objects

	_addInactiveBinding( binding, rootUuid, trackName ) {

		const bindingsByRoot = this._bindingsByRootAndName,
			bindings = this._bindings;

		let bindingByName = bindingsByRoot[ rootUuid ];

		if ( bindingByName === undefined ) {

			bindingByName = {};
			bindingsByRoot[ rootUuid ] = bindingByName;

		}

		bindingByName[ trackName ] = binding;

		binding._cacheIndex = bindings.length;
		bindings.push( binding );

	}

	_removeInactiveBinding( binding ) {

		const bindings = this._bindings,
			propBinding = binding.binding,
			rootUuid = propBinding.rootNode.uuid,
			trackName = propBinding.path,
			bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ],

			lastInactiveBinding = bindings[ bindings.length - 1 ],
			cacheIndex = binding._cacheIndex;

		lastInactiveBinding._cacheIndex = cacheIndex;
		bindings[ cacheIndex ] = lastInactiveBinding;
		bindings.pop();

		delete bindingByName[ trackName ];

		if ( Object.keys( bindingByName ).length === 0 ) {

			delete bindingsByRoot[ rootUuid ];

		}

	}

	_lendBinding( binding ) {

		const bindings = this._bindings,
			prevIndex = binding._cacheIndex,

			lastActiveIndex = this._nActiveBindings ++,

			firstInactiveBinding = bindings[ lastActiveIndex ];

		binding._cacheIndex = lastActiveIndex;
		bindings[ lastActiveIndex ] = binding;

		firstInactiveBinding._cacheIndex = prevIndex;
		bindings[ prevIndex ] = firstInactiveBinding;

	}

	_takeBackBinding( binding ) {

		const bindings = this._bindings,
			prevIndex = binding._cacheIndex,

			firstInactiveIndex = -- this._nActiveBindings,

			lastActiveBinding = bindings[ firstInactiveIndex ];

		binding._cacheIndex = firstInactiveIndex;
		bindings[ firstInactiveIndex ] = binding;

		lastActiveBinding._cacheIndex = prevIndex;
		bindings[ prevIndex ] = lastActiveBinding;

	}


	// Memory management of Interpolants for weight and time scale

	_lendControlInterpolant() {

		const interpolants = this._controlInterpolants,
			lastActiveIndex = this._nActiveControlInterpolants ++;

		let interpolant = interpolants[ lastActiveIndex ];

		if ( interpolant === undefined ) {

			interpolant = new LinearInterpolant(
				new Float32Array( 2 ), new Float32Array( 2 ),
				1, this._controlInterpolantsResultBuffer );

			interpolant.__cacheIndex = lastActiveIndex;
			interpolants[ lastActiveIndex ] = interpolant;

		}

		return interpolant;

	}

	_takeBackControlInterpolant( interpolant ) {

		const interpolants = this._controlInterpolants,
			prevIndex = interpolant.__cacheIndex,

			firstInactiveIndex = -- this._nActiveControlInterpolants,

			lastActiveInterpolant = interpolants[ firstInactiveIndex ];

		interpolant.__cacheIndex = firstInactiveIndex;
		interpolants[ firstInactiveIndex ] = interpolant;

		lastActiveInterpolant.__cacheIndex = prevIndex;
		interpolants[ prevIndex ] = lastActiveInterpolant;

	}

	// return an action for a clip optionally using a custom root target
	// object (this method allocates a lot of dynamic memory in case a
	// previously unknown clip/root combination is specified)
	clipAction( clip, optionalRoot, blendMode ) {

		const root = optionalRoot || this._root,
			rootUuid = root.uuid;

		let clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;

		const clipUuid = clipObject !== null ? clipObject.uuid : clip;

		const actionsForClip = this._actionsByClip[ clipUuid ];
		let prototypeAction = null;

		if ( blendMode === undefined ) {

			if ( clipObject !== null ) {

				blendMode = clipObject.blendMode;

			} else {

				blendMode = NormalAnimationBlendMode;

			}

		}

		if ( actionsForClip !== undefined ) {

			const existingAction = actionsForClip.actionByRoot[ rootUuid ];

			if ( existingAction !== undefined && existingAction.blendMode === blendMode ) {

				return existingAction;

			}

			// we know the clip, so we don't have to parse all
			// the bindings again but can just copy
			prototypeAction = actionsForClip.knownActions[ 0 ];

			// also, take the clip from the prototype action
			if ( clipObject === null )
				clipObject = prototypeAction._clip;

		}

		// clip must be known when specified via string
		if ( clipObject === null ) return null;

		// allocate all resources required to run it
		const newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );

		this._bindAction( newAction, prototypeAction );

		// and make the action known to the memory manager
		this._addInactiveAction( newAction, clipUuid, rootUuid );

		return newAction;

	}

	// get an existing action
	existingAction( clip, optionalRoot ) {

		const root = optionalRoot || this._root,
			rootUuid = root.uuid,

			clipObject = typeof clip === 'string' ?
				AnimationClip.findByName( root, clip ) : clip,

			clipUuid = clipObject ? clipObject.uuid : clip,

			actionsForClip = this._actionsByClip[ clipUuid ];

		if ( actionsForClip !== undefined ) {

			return actionsForClip.actionByRoot[ rootUuid ] || null;

		}

		return null;

	}

	// deactivates all previously scheduled actions
	stopAllAction() {

		const actions = this._actions,
			nActions = this._nActiveActions;

		for ( let i = nActions - 1; i >= 0; -- i ) {

			actions[ i ].stop();

		}

		return this;

	}

	// advance the time and update apply the animation
	update( deltaTime ) {

		deltaTime *= this.timeScale;

		const actions = this._actions,
			nActions = this._nActiveActions,

			time = this.time += deltaTime,
			timeDirection = Math.sign( deltaTime ),

			accuIndex = this._accuIndex ^= 1;

		// run active actions

		for ( let i = 0; i !== nActions; ++ i ) {

			const action = actions[ i ];

			action._update( time, deltaTime, timeDirection, accuIndex );

		}

		// update scene graph

		const bindings = this._bindings,
			nBindings = this._nActiveBindings;

		for ( let i = 0; i !== nBindings; ++ i ) {

			bindings[ i ].apply( accuIndex );

		}

		return this;

	}

	// Allows you to seek to a specific time in an animation.
	setTime( timeInSeconds ) {

		this.time = 0; // Zero out time attribute for AnimationMixer object;
		for ( let i = 0; i < this._actions.length; i ++ ) {

			this._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.

		}

		return this.update( timeInSeconds ); // Update used to set exact time. Returns "this" AnimationMixer object.

	}

	// return this mixer's root target object
	getRoot() {

		return this._root;

	}

	// free all resources specific to a particular clip
	uncacheClip( clip ) {

		const actions = this._actions,
			clipUuid = clip.uuid,
			actionsByClip = this._actionsByClip,
			actionsForClip = actionsByClip[ clipUuid ];

		if ( actionsForClip !== undefined ) {

			// note: just calling _removeInactiveAction would mess up the
			// iteration state and also require updating the state we can
			// just throw away

			const actionsToRemove = actionsForClip.knownActions;

			for ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {

				const action = actionsToRemove[ i ];

				this._deactivateAction( action );

				const cacheIndex = action._cacheIndex,
					lastInactiveAction = actions[ actions.length - 1 ];

				action._cacheIndex = null;
				action._byClipCacheIndex = null;

				lastInactiveAction._cacheIndex = cacheIndex;
				actions[ cacheIndex ] = lastInactiveAction;
				actions.pop();

				this._removeInactiveBindingsForAction( action );

			}

			delete actionsByClip[ clipUuid ];

		}

	}

	// free all resources specific to a particular root target object
	uncacheRoot( root ) {

		const rootUuid = root.uuid,
			actionsByClip = this._actionsByClip;

		for ( const clipUuid in actionsByClip ) {

			const actionByRoot = actionsByClip[ clipUuid ].actionByRoot,
				action = actionByRoot[ rootUuid ];

			if ( action !== undefined ) {

				this._deactivateAction( action );
				this._removeInactiveAction( action );

			}

		}

		const bindingsByRoot = this._bindingsByRootAndName,
			bindingByName = bindingsByRoot[ rootUuid ];

		if ( bindingByName !== undefined ) {

			for ( const trackName in bindingByName ) {

				const binding = bindingByName[ trackName ];
				binding.restoreOriginalState();
				this._removeInactiveBinding( binding );

			}

		}

	}

	// remove a targeted clip from the cache
	uncacheAction( clip, optionalRoot ) {

		const action = this.existingAction( clip, optionalRoot );

		if ( action !== null ) {

			this._deactivateAction( action );
			this._removeInactiveAction( action );

		}

	}

}

AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );

class Uniform {

	constructor( value ) {

		if ( typeof value === 'string' ) {

			console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );
			value = arguments[ 1 ];

		}

		this.value = value;

	}

	clone() {

		return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );

	}

}

function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {

	InterleavedBuffer.call( this, array, stride );

	this.meshPerAttribute = meshPerAttribute || 1;

}

InstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {

	constructor: InstancedInterleavedBuffer,

	isInstancedInterleavedBuffer: true,

	copy: function ( source ) {

		InterleavedBuffer.prototype.copy.call( this, source );

		this.meshPerAttribute = source.meshPerAttribute;

		return this;

	},

	clone: function ( data ) {

		const ib = InterleavedBuffer.prototype.clone.call( this, data );

		ib.meshPerAttribute = this.meshPerAttribute;

		return ib;

	},

	toJSON: function ( data ) {

		const json = InterleavedBuffer.prototype.toJSON.call( this, data );

		json.isInstancedInterleavedBuffer = true;
		json.meshPerAttribute = this.meshPerAttribute;

		return json;

	}

} );

function GLBufferAttribute( buffer, type, itemSize, elementSize, count ) {

	this.buffer = buffer;
	this.type = type;
	this.itemSize = itemSize;
	this.elementSize = elementSize;
	this.count = count;

	this.version = 0;

}

Object.defineProperty( GLBufferAttribute.prototype, 'needsUpdate', {

	set: function ( value ) {

		if ( value === true ) this.version ++;

	}

} );

Object.assign( GLBufferAttribute.prototype, {

	isGLBufferAttribute: true,

	setBuffer: function ( buffer ) {

		this.buffer = buffer;

		return this;

	},

	setType: function ( type, elementSize ) {

		this.type = type;
		this.elementSize = elementSize;

		return this;

	},

	setItemSize: function ( itemSize ) {

		this.itemSize = itemSize;

		return this;

	},

	setCount: function ( count ) {

		this.count = count;

		return this;

	},

} );

function Raycaster( origin, direction, near = 0, far = Infinity ) {

	this.ray = new Ray( origin, direction );
	// direction is assumed to be normalized (for accurate distance calculations)

	this.near = near;
	this.far = far;
	this.camera = null;
	this.layers = new Layers();

	this.params = {
		Mesh: {},
		Line: { threshold: 1 },
		LOD: {},
		Points: { threshold: 1 },
		Sprite: {}
	};

	Object.defineProperties( this.params, {
		PointCloud: {
			get: function () {

				console.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );
				return this.Points;

			}
		}
	} );

}

function ascSort( a, b ) {

	return a.distance - b.distance;

}

function intersectObject( object, raycaster, intersects, recursive ) {

	if ( object.layers.test( raycaster.layers ) ) {

		object.raycast( raycaster, intersects );

	}

	if ( recursive === true ) {

		const children = object.children;

		for ( let i = 0, l = children.length; i < l; i ++ ) {

			intersectObject( children[ i ], raycaster, intersects, true );

		}

	}

}

Object.assign( Raycaster.prototype, {

	set: function ( origin, direction ) {

		// direction is assumed to be normalized (for accurate distance calculations)

		this.ray.set( origin, direction );

	},

	setFromCamera: function ( coords, camera ) {

		if ( camera && camera.isPerspectiveCamera ) {

			this.ray.origin.setFromMatrixPosition( camera.matrixWorld );
			this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();
			this.camera = camera;

		} else if ( camera && camera.isOrthographicCamera ) {

			this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera
			this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );
			this.camera = camera;

		} else {

			console.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );

		}

	},

	intersectObject: function ( object, recursive = false, intersects = [] ) {

		intersectObject( object, this, intersects, recursive );

		intersects.sort( ascSort );

		return intersects;

	},

	intersectObjects: function ( objects, recursive = false, intersects = [] ) {

		for ( let i = 0, l = objects.length; i < l; i ++ ) {

			intersectObject( objects[ i ], this, intersects, recursive );

		}

		intersects.sort( ascSort );

		return intersects;

	}

} );

/**
 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
 *
 * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
 * The azimuthal angle (theta) is measured from the positive z-axis.
 */

class Spherical {

	constructor( radius = 1, phi = 0, theta = 0 ) {

		this.radius = radius;
		this.phi = phi; // polar angle
		this.theta = theta; // azimuthal angle

		return this;

	}

	set( radius, phi, theta ) {

		this.radius = radius;
		this.phi = phi;
		this.theta = theta;

		return this;

	}

	copy( other ) {

		this.radius = other.radius;
		this.phi = other.phi;
		this.theta = other.theta;

		return this;

	}

	// restrict phi to be betwee EPS and PI-EPS
	makeSafe() {

		const EPS = 0.000001;
		this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );

		return this;

	}

	setFromVector3( v ) {

		return this.setFromCartesianCoords( v.x, v.y, v.z );

	}

	setFromCartesianCoords( x, y, z ) {

		this.radius = Math.sqrt( x * x + y * y + z * z );

		if ( this.radius === 0 ) {

			this.theta = 0;
			this.phi = 0;

		} else {

			this.theta = Math.atan2( x, z );
			this.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );

		}

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

/**
 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
 */

class Cylindrical {

	constructor( radius = 1, theta = 0, y = 0 ) {

		this.radius = radius; // distance from the origin to a point in the x-z plane
		this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis
		this.y = y; // height above the x-z plane

		return this;

	}

	set( radius, theta, y ) {

		this.radius = radius;
		this.theta = theta;
		this.y = y;

		return this;

	}

	copy( other ) {

		this.radius = other.radius;
		this.theta = other.theta;
		this.y = other.y;

		return this;

	}

	setFromVector3( v ) {

		return this.setFromCartesianCoords( v.x, v.y, v.z );

	}

	setFromCartesianCoords( x, y, z ) {

		this.radius = Math.sqrt( x * x + z * z );
		this.theta = Math.atan2( x, z );
		this.y = y;

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

const _vector$8 = /*@__PURE__*/ new Vector2();

class Box2 {

	constructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {

		this.min = min;
		this.max = max;

	}

	set( min, max ) {

		this.min.copy( min );
		this.max.copy( max );

		return this;

	}

	setFromPoints( points ) {

		this.makeEmpty();

		for ( let i = 0, il = points.length; i < il; i ++ ) {

			this.expandByPoint( points[ i ] );

		}

		return this;

	}

	setFromCenterAndSize( center, size ) {

		const halfSize = _vector$8.copy( size ).multiplyScalar( 0.5 );
		this.min.copy( center ).sub( halfSize );
		this.max.copy( center ).add( halfSize );

		return this;

	}

	clone() {

		return new this.constructor().copy( this );

	}

	copy( box ) {

		this.min.copy( box.min );
		this.max.copy( box.max );

		return this;

	}

	makeEmpty() {

		this.min.x = this.min.y = + Infinity;
		this.max.x = this.max.y = - Infinity;

		return this;

	}

	isEmpty() {

		// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

		return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );

	}

	getCenter( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Box2: .getCenter() target is now required' );
			target = new Vector2();

		}

		return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

	}

	getSize( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Box2: .getSize() target is now required' );
			target = new Vector2();

		}

		return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );

	}

	expandByPoint( point ) {

		this.min.min( point );
		this.max.max( point );

		return this;

	}

	expandByVector( vector ) {

		this.min.sub( vector );
		this.max.add( vector );

		return this;

	}

	expandByScalar( scalar ) {

		this.min.addScalar( - scalar );
		this.max.addScalar( scalar );

		return this;

	}

	containsPoint( point ) {

		return point.x < this.min.x || point.x > this.max.x ||
			point.y < this.min.y || point.y > this.max.y ? false : true;

	}

	containsBox( box ) {

		return this.min.x <= box.min.x && box.max.x <= this.max.x &&
			this.min.y <= box.min.y && box.max.y <= this.max.y;

	}

	getParameter( point, target ) {

		// This can potentially have a divide by zero if the box
		// has a size dimension of 0.

		if ( target === undefined ) {

			console.warn( 'THREE.Box2: .getParameter() target is now required' );
			target = new Vector2();

		}

		return target.set(
			( point.x - this.min.x ) / ( this.max.x - this.min.x ),
			( point.y - this.min.y ) / ( this.max.y - this.min.y )
		);

	}

	intersectsBox( box ) {

		// using 4 splitting planes to rule out intersections

		return box.max.x < this.min.x || box.min.x > this.max.x ||
			box.max.y < this.min.y || box.min.y > this.max.y ? false : true;

	}

	clampPoint( point, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Box2: .clampPoint() target is now required' );
			target = new Vector2();

		}

		return target.copy( point ).clamp( this.min, this.max );

	}

	distanceToPoint( point ) {

		const clampedPoint = _vector$8.copy( point ).clamp( this.min, this.max );
		return clampedPoint.sub( point ).length();

	}

	intersect( box ) {

		this.min.max( box.min );
		this.max.min( box.max );

		return this;

	}

	union( box ) {

		this.min.min( box.min );
		this.max.max( box.max );

		return this;

	}

	translate( offset ) {

		this.min.add( offset );
		this.max.add( offset );

		return this;

	}

	equals( box ) {

		return box.min.equals( this.min ) && box.max.equals( this.max );

	}

}

Box2.prototype.isBox2 = true;

const _startP = /*@__PURE__*/ new Vector3();
const _startEnd = /*@__PURE__*/ new Vector3();

class Line3 {

	constructor( start = new Vector3(), end = new Vector3() ) {

		this.start = start;
		this.end = end;

	}

	set( start, end ) {

		this.start.copy( start );
		this.end.copy( end );

		return this;

	}

	copy( line ) {

		this.start.copy( line.start );
		this.end.copy( line.end );

		return this;

	}

	getCenter( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Line3: .getCenter() target is now required' );
			target = new Vector3();

		}

		return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );

	}

	delta( target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Line3: .delta() target is now required' );
			target = new Vector3();

		}

		return target.subVectors( this.end, this.start );

	}

	distanceSq() {

		return this.start.distanceToSquared( this.end );

	}

	distance() {

		return this.start.distanceTo( this.end );

	}

	at( t, target ) {

		if ( target === undefined ) {

			console.warn( 'THREE.Line3: .at() target is now required' );
			target = new Vector3();

		}

		return this.delta( target ).multiplyScalar( t ).add( this.start );

	}

	closestPointToPointParameter( point, clampToLine ) {

		_startP.subVectors( point, this.start );
		_startEnd.subVectors( this.end, this.start );

		const startEnd2 = _startEnd.dot( _startEnd );
		const startEnd_startP = _startEnd.dot( _startP );

		let t = startEnd_startP / startEnd2;

		if ( clampToLine ) {

			t = MathUtils.clamp( t, 0, 1 );

		}

		return t;

	}

	closestPointToPoint( point, clampToLine, target ) {

		const t = this.closestPointToPointParameter( point, clampToLine );

		if ( target === undefined ) {

			console.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );
			target = new Vector3();

		}

		return this.delta( target ).multiplyScalar( t ).add( this.start );

	}

	applyMatrix4( matrix ) {

		this.start.applyMatrix4( matrix );
		this.end.applyMatrix4( matrix );

		return this;

	}

	equals( line ) {

		return line.start.equals( this.start ) && line.end.equals( this.end );

	}

	clone() {

		return new this.constructor().copy( this );

	}

}

function ImmediateRenderObject( material ) {

	Object3D.call( this );

	this.material = material;
	this.render = function ( /* renderCallback */ ) {};

	this.hasPositions = false;
	this.hasNormals = false;
	this.hasColors = false;
	this.hasUvs = false;

	this.positionArray = null;
	this.normalArray = null;
	this.colorArray = null;
	this.uvArray = null;

	this.count = 0;

}

ImmediateRenderObject.prototype = Object.create( Object3D.prototype );
ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;

ImmediateRenderObject.prototype.isImmediateRenderObject = true;

const _vector$9 = /*@__PURE__*/ new Vector3();

class SpotLightHelper extends Object3D {

	constructor( light, color ) {

		super();
		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		const geometry = new BufferGeometry();

		const positions = [
			0, 0, 0, 	0, 0, 1,
			0, 0, 0, 	1, 0, 1,
			0, 0, 0,	- 1, 0, 1,
			0, 0, 0, 	0, 1, 1,
			0, 0, 0, 	0, - 1, 1
		];

		for ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {

			const p1 = ( i / l ) * Math.PI * 2;
			const p2 = ( j / l ) * Math.PI * 2;

			positions.push(
				Math.cos( p1 ), Math.sin( p1 ), 1,
				Math.cos( p2 ), Math.sin( p2 ), 1
			);

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

		const material = new LineBasicMaterial( { fog: false, toneMapped: false } );

		this.cone = new LineSegments( geometry, material );
		this.add( this.cone );

		this.update();

	}

	dispose() {

		this.cone.geometry.dispose();
		this.cone.material.dispose();

	}

	update() {

		this.light.updateMatrixWorld();

		const coneLength = this.light.distance ? this.light.distance : 1000;
		const coneWidth = coneLength * Math.tan( this.light.angle );

		this.cone.scale.set( coneWidth, coneWidth, coneLength );

		_vector$9.setFromMatrixPosition( this.light.target.matrixWorld );

		this.cone.lookAt( _vector$9 );

		if ( this.color !== undefined ) {

			this.cone.material.color.set( this.color );

		} else {

			this.cone.material.color.copy( this.light.color );

		}

	}

}

const _vector$a = /*@__PURE__*/ new Vector3();
const _boneMatrix = /*@__PURE__*/ new Matrix4();
const _matrixWorldInv = /*@__PURE__*/ new Matrix4();


class SkeletonHelper extends LineSegments {

	constructor( object ) {

		const bones = getBoneList( object );

		const geometry = new BufferGeometry();

		const vertices = [];
		const colors = [];

		const color1 = new Color( 0, 0, 1 );
		const color2 = new Color( 0, 1, 0 );

		for ( let i = 0; i < bones.length; i ++ ) {

			const bone = bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				vertices.push( 0, 0, 0 );
				vertices.push( 0, 0, 0 );
				colors.push( color1.r, color1.g, color1.b );
				colors.push( color2.r, color2.g, color2.b );

			}

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );

		super( geometry, material );

		this.type = 'SkeletonHelper';
		this.isSkeletonHelper = true;

		this.root = object;
		this.bones = bones;

		this.matrix = object.matrixWorld;
		this.matrixAutoUpdate = false;

	}

	updateMatrixWorld( force ) {

		const bones = this.bones;

		const geometry = this.geometry;
		const position = geometry.getAttribute( 'position' );

		_matrixWorldInv.copy( this.root.matrixWorld ).invert();

		for ( let i = 0, j = 0; i < bones.length; i ++ ) {

			const bone = bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );
				_vector$a.setFromMatrixPosition( _boneMatrix );
				position.setXYZ( j, _vector$a.x, _vector$a.y, _vector$a.z );

				_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );
				_vector$a.setFromMatrixPosition( _boneMatrix );
				position.setXYZ( j + 1, _vector$a.x, _vector$a.y, _vector$a.z );

				j += 2;

			}

		}

		geometry.getAttribute( 'position' ).needsUpdate = true;

		super.updateMatrixWorld( force );

	}

}


function getBoneList( object ) {

	const boneList = [];

	if ( object && object.isBone ) {

		boneList.push( object );

	}

	for ( let i = 0; i < object.children.length; i ++ ) {

		boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );

	}

	return boneList;

}

class PointLightHelper extends Mesh {

	constructor( light, sphereSize, color ) {

		const geometry = new SphereGeometry( sphereSize, 4, 2 );
		const material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );

		super( geometry, material );

		this.light = light;
		this.light.updateMatrixWorld();

		this.color = color;

		this.type = 'PointLightHelper';

		this.matrix = this.light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.update();


		/*
	// TODO: delete this comment?
	const distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );
	const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );

	this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
	this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );

	const d = light.distance;

	if ( d === 0.0 ) {

		this.lightDistance.visible = false;

	} else {

		this.lightDistance.scale.set( d, d, d );

	}

	this.add( this.lightDistance );
	*/

	}

	dispose() {

		this.geometry.dispose();
		this.material.dispose();

	}

	update() {

		if ( this.color !== undefined ) {

			this.material.color.set( this.color );

		} else {

			this.material.color.copy( this.light.color );

		}

		/*
		const d = this.light.distance;

		if ( d === 0.0 ) {

			this.lightDistance.visible = false;

		} else {

			this.lightDistance.visible = true;
			this.lightDistance.scale.set( d, d, d );

		}
		*/

	}

}

const _vector$b = /*@__PURE__*/ new Vector3();
const _color1 = /*@__PURE__*/ new Color();
const _color2 = /*@__PURE__*/ new Color();

class HemisphereLightHelper extends Object3D {

	constructor( light, size, color ) {

		super();
		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		const geometry = new OctahedronGeometry( size );
		geometry.rotateY( Math.PI * 0.5 );

		this.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );
		if ( this.color === undefined ) this.material.vertexColors = true;

		const position = geometry.getAttribute( 'position' );
		const colors = new Float32Array( position.count * 3 );

		geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );

		this.add( new Mesh( geometry, this.material ) );

		this.update();

	}

	dispose() {

		this.children[ 0 ].geometry.dispose();
		this.children[ 0 ].material.dispose();

	}

	update() {

		const mesh = this.children[ 0 ];

		if ( this.color !== undefined ) {

			this.material.color.set( this.color );

		} else {

			const colors = mesh.geometry.getAttribute( 'color' );

			_color1.copy( this.light.color );
			_color2.copy( this.light.groundColor );

			for ( let i = 0, l = colors.count; i < l; i ++ ) {

				const color = ( i < ( l / 2 ) ) ? _color1 : _color2;

				colors.setXYZ( i, color.r, color.g, color.b );

			}

			colors.needsUpdate = true;

		}

		mesh.lookAt( _vector$b.setFromMatrixPosition( this.light.matrixWorld ).negate() );

	}

}

class GridHelper extends LineSegments {

	constructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {

		color1 = new Color( color1 );
		color2 = new Color( color2 );

		const center = divisions / 2;
		const step = size / divisions;
		const halfSize = size / 2;

		const vertices = [], colors = [];

		for ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {

			vertices.push( - halfSize, 0, k, halfSize, 0, k );
			vertices.push( k, 0, - halfSize, k, 0, halfSize );

			const color = i === center ? color1 : color2;

			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;

		}

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		super( geometry, material );

		this.type = 'GridHelper';

	}

}

class PolarGridHelper extends LineSegments {

	constructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {

		color1 = new Color( color1 );
		color2 = new Color( color2 );

		const vertices = [];
		const colors = [];

		// create the radials

		for ( let i = 0; i <= radials; i ++ ) {

			const v = ( i / radials ) * ( Math.PI * 2 );

			const x = Math.sin( v ) * radius;
			const z = Math.cos( v ) * radius;

			vertices.push( 0, 0, 0 );
			vertices.push( x, 0, z );

			const color = ( i & 1 ) ? color1 : color2;

			colors.push( color.r, color.g, color.b );
			colors.push( color.r, color.g, color.b );

		}

		// create the circles

		for ( let i = 0; i <= circles; i ++ ) {

			const color = ( i & 1 ) ? color1 : color2;

			const r = radius - ( radius / circles * i );

			for ( let j = 0; j < divisions; j ++ ) {

				// first vertex

				let v = ( j / divisions ) * ( Math.PI * 2 );

				let x = Math.sin( v ) * r;
				let z = Math.cos( v ) * r;

				vertices.push( x, 0, z );
				colors.push( color.r, color.g, color.b );

				// second vertex

				v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );

				x = Math.sin( v ) * r;
				z = Math.cos( v ) * r;

				vertices.push( x, 0, z );
				colors.push( color.r, color.g, color.b );

			}

		}

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		super( geometry, material );

		this.type = 'PolarGridHelper';

	}

}

const _v1$6 = /*@__PURE__*/ new Vector3();
const _v2$3 = /*@__PURE__*/ new Vector3();
const _v3$1 = /*@__PURE__*/ new Vector3();

class DirectionalLightHelper extends Object3D {

	constructor( light, size, color ) {

		super();
		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		if ( size === undefined ) size = 1;

		let geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( [
			- size, size, 0,
			size, size, 0,
			size, - size, 0,
			- size, - size, 0,
			- size, size, 0
		], 3 ) );

		const material = new LineBasicMaterial( { fog: false, toneMapped: false } );

		this.lightPlane = new Line( geometry, material );
		this.add( this.lightPlane );

		geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );

		this.targetLine = new Line( geometry, material );
		this.add( this.targetLine );

		this.update();

	}

	dispose() {

		this.lightPlane.geometry.dispose();
		this.lightPlane.material.dispose();
		this.targetLine.geometry.dispose();
		this.targetLine.material.dispose();

	}

	update() {

		_v1$6.setFromMatrixPosition( this.light.matrixWorld );
		_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );
		_v3$1.subVectors( _v2$3, _v1$6 );

		this.lightPlane.lookAt( _v2$3 );

		if ( this.color !== undefined ) {

			this.lightPlane.material.color.set( this.color );
			this.targetLine.material.color.set( this.color );

		} else {

			this.lightPlane.material.color.copy( this.light.color );
			this.targetLine.material.color.copy( this.light.color );

		}

		this.targetLine.lookAt( _v2$3 );
		this.targetLine.scale.z = _v3$1.length();

	}

}

const _vector$c = /*@__PURE__*/ new Vector3();
const _camera = /*@__PURE__*/ new Camera();

/**
 *	- shows frustum, line of sight and up of the camera
 *	- suitable for fast updates
 * 	- based on frustum visualization in lightgl.js shadowmap example
 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
 */

class CameraHelper extends LineSegments {

	constructor( camera ) {

		const geometry = new BufferGeometry();
		const material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );

		const vertices = [];
		const colors = [];

		const pointMap = {};

		// colors

		const colorFrustum = new Color( 0xffaa00 );
		const colorCone = new Color( 0xff0000 );
		const colorUp = new Color( 0x00aaff );
		const colorTarget = new Color( 0xffffff );
		const colorCross = new Color( 0x333333 );

		// near

		addLine( 'n1', 'n2', colorFrustum );
		addLine( 'n2', 'n4', colorFrustum );
		addLine( 'n4', 'n3', colorFrustum );
		addLine( 'n3', 'n1', colorFrustum );

		// far

		addLine( 'f1', 'f2', colorFrustum );
		addLine( 'f2', 'f4', colorFrustum );
		addLine( 'f4', 'f3', colorFrustum );
		addLine( 'f3', 'f1', colorFrustum );

		// sides

		addLine( 'n1', 'f1', colorFrustum );
		addLine( 'n2', 'f2', colorFrustum );
		addLine( 'n3', 'f3', colorFrustum );
		addLine( 'n4', 'f4', colorFrustum );

		// cone

		addLine( 'p', 'n1', colorCone );
		addLine( 'p', 'n2', colorCone );
		addLine( 'p', 'n3', colorCone );
		addLine( 'p', 'n4', colorCone );

		// up

		addLine( 'u1', 'u2', colorUp );
		addLine( 'u2', 'u3', colorUp );
		addLine( 'u3', 'u1', colorUp );

		// target

		addLine( 'c', 't', colorTarget );
		addLine( 'p', 'c', colorCross );

		// cross

		addLine( 'cn1', 'cn2', colorCross );
		addLine( 'cn3', 'cn4', colorCross );

		addLine( 'cf1', 'cf2', colorCross );
		addLine( 'cf3', 'cf4', colorCross );

		function addLine( a, b, color ) {

			addPoint( a, color );
			addPoint( b, color );

		}

		function addPoint( id, color ) {

			vertices.push( 0, 0, 0 );
			colors.push( color.r, color.g, color.b );

			if ( pointMap[ id ] === undefined ) {

				pointMap[ id ] = [];

			}

			pointMap[ id ].push( ( vertices.length / 3 ) - 1 );

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		super( geometry, material );

		this.type = 'CameraHelper';

		this.camera = camera;
		if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();

		this.matrix = camera.matrixWorld;
		this.matrixAutoUpdate = false;

		this.pointMap = pointMap;

		this.update();

	}

	update() {

		const geometry = this.geometry;
		const pointMap = this.pointMap;

		const w = 1, h = 1;

		// we need just camera projection matrix inverse
		// world matrix must be identity

		_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );

		// center / target

		setPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );
		setPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );

		// near

		setPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );
		setPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );
		setPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );
		setPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );

		// far

		setPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );
		setPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );
		setPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );
		setPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );

		// up

		setPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );
		setPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );
		setPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );

		// cross

		setPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );
		setPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );
		setPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );
		setPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );

		setPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );
		setPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );
		setPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );
		setPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );

		geometry.getAttribute( 'position' ).needsUpdate = true;

	}

}


function setPoint( point, pointMap, geometry, camera, x, y, z ) {

	_vector$c.set( x, y, z ).unproject( camera );

	const points = pointMap[ point ];

	if ( points !== undefined ) {

		const position = geometry.getAttribute( 'position' );

		for ( let i = 0, l = points.length; i < l; i ++ ) {

			position.setXYZ( points[ i ], _vector$c.x, _vector$c.y, _vector$c.z );

		}

	}

}

const _box$3 = /*@__PURE__*/ new Box3();

class BoxHelper extends LineSegments {

	constructor( object, color = 0xffff00 ) {

		const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );
		const positions = new Float32Array( 8 * 3 );

		const geometry = new BufferGeometry();
		geometry.setIndex( new BufferAttribute( indices, 1 ) );
		geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );

		super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.object = object;
		this.type = 'BoxHelper';

		this.matrixAutoUpdate = false;

		this.update();

	}

	update( object ) {

		if ( object !== undefined ) {

			console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );

		}

		if ( this.object !== undefined ) {

			_box$3.setFromObject( this.object );

		}

		if ( _box$3.isEmpty() ) return;

		const min = _box$3.min;
		const max = _box$3.max;

		/*
			5____4
		1/___0/|
		| 6__|_7
		2/___3/

		0: max.x, max.y, max.z
		1: min.x, max.y, max.z
		2: min.x, min.y, max.z
		3: max.x, min.y, max.z
		4: max.x, max.y, min.z
		5: min.x, max.y, min.z
		6: min.x, min.y, min.z
		7: max.x, min.y, min.z
		*/

		const position = this.geometry.attributes.position;
		const array = position.array;

		array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;
		array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;
		array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;
		array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;
		array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;
		array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;
		array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;
		array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;

		position.needsUpdate = true;

		this.geometry.computeBoundingSphere();


	}

	setFromObject( object ) {

		this.object = object;
		this.update();

		return this;

	}

	copy( source ) {

		LineSegments.prototype.copy.call( this, source );

		this.object = source.object;

		return this;

	}

}

class Box3Helper extends LineSegments {

	constructor( box, color = 0xffff00 ) {

		const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );

		const positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];

		const geometry = new BufferGeometry();

		geometry.setIndex( new BufferAttribute( indices, 1 ) );

		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

		super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.box = box;

		this.type = 'Box3Helper';

		this.geometry.computeBoundingSphere();

	}

	updateMatrixWorld( force ) {

		const box = this.box;

		if ( box.isEmpty() ) return;

		box.getCenter( this.position );

		box.getSize( this.scale );

		this.scale.multiplyScalar( 0.5 );

		super.updateMatrixWorld( force );

	}

}

class PlaneHelper extends Line {

	constructor( plane, size = 1, hex = 0xffff00 ) {

		const color = hex;

		const positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );
		geometry.computeBoundingSphere();

		super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.type = 'PlaneHelper';

		this.plane = plane;

		this.size = size;

		const positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];

		const geometry2 = new BufferGeometry();
		geometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );
		geometry2.computeBoundingSphere();

		this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );

	}

	updateMatrixWorld( force ) {

		let scale = - this.plane.constant;

		if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter

		this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );

		this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here

		this.lookAt( this.plane.normal );

		super.updateMatrixWorld( force );

	}

}

const _axis = /*@__PURE__*/ new Vector3();
let _lineGeometry, _coneGeometry;

class ArrowHelper extends Object3D {

	// dir is assumed to be normalized

	constructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {

		super();

		this.type = 'ArrowHelper';

		if ( _lineGeometry === undefined ) {

			_lineGeometry = new BufferGeometry();
			_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );

			_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );
			_coneGeometry.translate( 0, - 0.5, 0 );

		}

		this.position.copy( origin );

		this.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );
		this.line.matrixAutoUpdate = false;
		this.add( this.line );

		this.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );
		this.cone.matrixAutoUpdate = false;
		this.add( this.cone );

		this.setDirection( dir );
		this.setLength( length, headLength, headWidth );

	}

	setDirection( dir ) {

		// dir is assumed to be normalized

		if ( dir.y > 0.99999 ) {

			this.quaternion.set( 0, 0, 0, 1 );

		} else if ( dir.y < - 0.99999 ) {

			this.quaternion.set( 1, 0, 0, 0 );

		} else {

			_axis.set( dir.z, 0, - dir.x ).normalize();

			const radians = Math.acos( dir.y );

			this.quaternion.setFromAxisAngle( _axis, radians );

		}

	}

	setLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {

		this.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458
		this.line.updateMatrix();

		this.cone.scale.set( headWidth, headLength, headWidth );
		this.cone.position.y = length;
		this.cone.updateMatrix();

	}

	setColor( color ) {

		this.line.material.color.set( color );
		this.cone.material.color.set( color );

	}

	copy( source ) {

		super.copy( source, false );

		this.line.copy( source.line );
		this.cone.copy( source.cone );

		return this;

	}

}

class AxesHelper extends LineSegments {

	constructor( size = 1 ) {

		const vertices = [
			0, 0, 0,	size, 0, 0,
			0, 0, 0,	0, size, 0,
			0, 0, 0,	0, 0, size
		];

		const colors = [
			1, 0, 0,	1, 0.6, 0,
			0, 1, 0,	0.6, 1, 0,
			0, 0, 1,	0, 0.6, 1
		];

		const geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		super( geometry, material );

		this.type = 'AxesHelper';

	}

}

const _floatView = new Float32Array( 1 );
const _int32View = new Int32Array( _floatView.buffer );

const DataUtils = {

	// Converts float32 to float16 (stored as uint16 value).

	toHalfFloat: function ( val ) {

		// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410

		/* This method is faster than the OpenEXR implementation (very often
		* used, eg. in Ogre), with the additional benefit of rounding, inspired
		* by James Tursa?s half-precision code. */

		_floatView[ 0 ] = val;
		const x = _int32View[ 0 ];

		let bits = ( x >> 16 ) & 0x8000; /* Get the sign */
		let m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */
		const e = ( x >> 23 ) & 0xff; /* Using int is faster here */

		/* If zero, or denormal, or exponent underflows too much for a denormal
			* half, return signed zero. */
		if ( e < 103 ) return bits;

		/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */
		if ( e > 142 ) {

			bits |= 0x7c00;
			/* If exponent was 0xff and one mantissa bit was set, it means NaN,
						* not Inf, so make sure we set one mantissa bit too. */
			bits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );
			return bits;

		}

		/* If exponent underflows but not too much, return a denormal */
		if ( e < 113 ) {

			m |= 0x0800;
			/* Extra rounding may overflow and set mantissa to 0 and exponent
				* to 1, which is OK. */
			bits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );
			return bits;

		}

		bits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );
		/* Extra rounding. An overflow will set mantissa to 0 and increment
			* the exponent, which is OK. */
		bits += m & 1;
		return bits;

	}

};

const LOD_MIN = 4;
const LOD_MAX = 8;
const SIZE_MAX = Math.pow( 2, LOD_MAX );

// The standard deviations (radians) associated with the extra mips. These are
// chosen to approximate a Trowbridge-Reitz distribution function times the
// geometric shadowing function. These sigma values squared must match the
// variance #defines in cube_uv_reflection_fragment.glsl.js.
const EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];

const TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;

// The maximum length of the blur for loop. Smaller sigmas will use fewer
// samples and exit early, but not recompile the shader.
const MAX_SAMPLES = 20;

const ENCODINGS = {
	[ LinearEncoding ]: 0,
	[ sRGBEncoding ]: 1,
	[ RGBEEncoding ]: 2,
	[ RGBM7Encoding ]: 3,
	[ RGBM16Encoding ]: 4,
	[ RGBDEncoding ]: 5,
	[ GammaEncoding ]: 6
};

const backgroundMaterial = new MeshBasicMaterial( {
	side: BackSide,
	depthWrite: false,
	depthTest: false,
} );
const backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );

const _flatCamera = /*@__PURE__*/ new OrthographicCamera();
const { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();
const _clearColor = /*@__PURE__*/ new Color();
let _oldTarget = null;

// Golden Ratio
const PHI = ( 1 + Math.sqrt( 5 ) ) / 2;
const INV_PHI = 1 / PHI;

// Vertices of a dodecahedron (except the opposites, which represent the
// same axis), used as axis directions evenly spread on a sphere.
const _axisDirections = [
	/*@__PURE__*/ new Vector3( 1, 1, 1 ),
	/*@__PURE__*/ new Vector3( - 1, 1, 1 ),
	/*@__PURE__*/ new Vector3( 1, 1, - 1 ),
	/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),
	/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),
	/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),
	/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),
	/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),
	/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),
	/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];

/**
 * This class generates a Prefiltered, Mipmapped Radiance Environment Map
 * (PMREM) from a cubeMap environment texture. This allows different levels of
 * blur to be quickly accessed based on material roughness. It is packed into a
 * special CubeUV format that allows us to perform custom interpolation so that
 * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap
 * chain, it only goes down to the LOD_MIN level (above), and then creates extra
 * even more filtered 'mips' at the same LOD_MIN resolution, associated with
 * higher roughness levels. In this way we maintain resolution to smoothly
 * interpolate diffuse lighting while limiting sampling computation.
 */

function convertLinearToRGBE( color ) {

	const maxComponent = Math.max( color.r, color.g, color.b );
	const fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );
	color.multiplyScalar( Math.pow( 2.0, - fExp ) );

	const alpha = ( fExp + 128.0 ) / 255.0;
	return alpha;

}

class PMREMGenerator {

	constructor( renderer ) {

		this._renderer = renderer;
		this._pingPongRenderTarget = null;

		this._blurMaterial = _getBlurShader( MAX_SAMPLES );
		this._equirectShader = null;
		this._cubemapShader = null;

		this._compileMaterial( this._blurMaterial );

	}

	/**
	 * Generates a PMREM from a supplied Scene, which can be faster than using an
	 * image if networking bandwidth is low. Optional sigma specifies a blur radius
	 * in radians to be applied to the scene before PMREM generation. Optional near
	 * and far planes ensure the scene is rendered in its entirety (the cubeCamera
	 * is placed at the origin).
	 */
	fromScene( scene, sigma = 0, near = 0.1, far = 100 ) {

		_oldTarget = this._renderer.getRenderTarget();
		const cubeUVRenderTarget = this._allocateTargets();

		this._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );
		if ( sigma > 0 ) {

			this._blur( cubeUVRenderTarget, 0, 0, sigma );

		}

		this._applyPMREM( cubeUVRenderTarget );
		this._cleanup( cubeUVRenderTarget );

		return cubeUVRenderTarget;

	}

	/**
	 * Generates a PMREM from an equirectangular texture, which can be either LDR
	 * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),
	 * as this matches best with the 256 x 256 cubemap output.
	 */
	fromEquirectangular( equirectangular ) {

		return this._fromTexture( equirectangular );

	}

	/**
	 * Generates a PMREM from an cubemap texture, which can be either LDR
	 * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,
	 * as this matches best with the 256 x 256 cubemap output.
	 */
	fromCubemap( cubemap ) {

		return this._fromTexture( cubemap );

	}

	/**
	 * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during
	 * your texture's network fetch for increased concurrency.
	 */
	compileCubemapShader() {

		if ( this._cubemapShader === null ) {

			this._cubemapShader = _getCubemapShader();
			this._compileMaterial( this._cubemapShader );

		}

	}

	/**
	 * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during
	 * your texture's network fetch for increased concurrency.
	 */
	compileEquirectangularShader() {

		if ( this._equirectShader === null ) {

			this._equirectShader = _getEquirectShader();
			this._compileMaterial( this._equirectShader );

		}

	}

	/**
	 * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,
	 * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on
	 * one of them will cause any others to also become unusable.
	 */
	dispose() {

		this._blurMaterial.dispose();

		if ( this._cubemapShader !== null ) this._cubemapShader.dispose();
		if ( this._equirectShader !== null ) this._equirectShader.dispose();

		for ( let i = 0; i < _lodPlanes.length; i ++ ) {

			_lodPlanes[ i ].dispose();

		}

	}

	// private interface

	_cleanup( outputTarget ) {

		this._pingPongRenderTarget.dispose();
		this._renderer.setRenderTarget( _oldTarget );
		outputTarget.scissorTest = false;
		_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );

	}

	_fromTexture( texture ) {

		_oldTarget = this._renderer.getRenderTarget();
		const cubeUVRenderTarget = this._allocateTargets( texture );
		this._textureToCubeUV( texture, cubeUVRenderTarget );
		this._applyPMREM( cubeUVRenderTarget );
		this._cleanup( cubeUVRenderTarget );

		return cubeUVRenderTarget;

	}

	_allocateTargets( texture ) { // warning: null texture is valid

		const params = {
			magFilter: NearestFilter,
			minFilter: NearestFilter,
			generateMipmaps: false,
			type: UnsignedByteType,
			format: RGBEFormat,
			encoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,
			depthBuffer: false
		};

		const cubeUVRenderTarget = _createRenderTarget( params );
		cubeUVRenderTarget.depthBuffer = texture ? false : true;
		this._pingPongRenderTarget = _createRenderTarget( params );
		return cubeUVRenderTarget;

	}

	_compileMaterial( material ) {

		const tmpMesh = new Mesh( _lodPlanes[ 0 ], material );
		this._renderer.compile( tmpMesh, _flatCamera );

	}

	_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {

		const fov = 90;
		const aspect = 1;
		const cubeCamera = new PerspectiveCamera( fov, aspect, near, far );
		const upSign = [ 1, - 1, 1, 1, 1, 1 ];
		const forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];
		const renderer = this._renderer;

		const originalAutoClear = renderer.autoClear;
		const outputEncoding = renderer.outputEncoding;
		const toneMapping = renderer.toneMapping;
		renderer.getClearColor( _clearColor );

		renderer.toneMapping = NoToneMapping;
		renderer.outputEncoding = LinearEncoding;
		renderer.autoClear = false;

		let useSolidColor = false;
		const background = scene.background;
		if ( background ) {

			if ( background.isColor ) {

				backgroundMaterial.color.copy( background ).convertSRGBToLinear();
				scene.background = null;

				const alpha = convertLinearToRGBE( backgroundMaterial.color );
				backgroundMaterial.opacity = alpha;
				useSolidColor = true;

			}

		} else {

			backgroundMaterial.color.copy( _clearColor ).convertSRGBToLinear();

			const alpha = convertLinearToRGBE( backgroundMaterial.color );
			backgroundMaterial.opacity = alpha;
			useSolidColor = true;

		}


		for ( let i = 0; i < 6; i ++ ) {

			const col = i % 3;
			if ( col == 0 ) {

				cubeCamera.up.set( 0, upSign[ i ], 0 );
				cubeCamera.lookAt( forwardSign[ i ], 0, 0 );

			} else if ( col == 1 ) {

				cubeCamera.up.set( 0, 0, upSign[ i ] );
				cubeCamera.lookAt( 0, forwardSign[ i ], 0 );

			} else {

				cubeCamera.up.set( 0, upSign[ i ], 0 );
				cubeCamera.lookAt( 0, 0, forwardSign[ i ] );

			}

			_setViewport( cubeUVRenderTarget,
				col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );
			renderer.setRenderTarget( cubeUVRenderTarget );

			if ( useSolidColor ) {

				renderer.render( backgroundBox, cubeCamera );

			}

			renderer.render( scene, cubeCamera );

		}

		renderer.toneMapping = toneMapping;
		renderer.outputEncoding = outputEncoding;
		renderer.autoClear = originalAutoClear;

	}

	_textureToCubeUV( texture, cubeUVRenderTarget ) {

		const renderer = this._renderer;

		if ( texture.isCubeTexture ) {

			if ( this._cubemapShader == null ) {

				this._cubemapShader = _getCubemapShader();

			}

		} else {

			if ( this._equirectShader == null ) {

				this._equirectShader = _getEquirectShader();

			}

		}

		const material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;
		const mesh = new Mesh( _lodPlanes[ 0 ], material );

		const uniforms = material.uniforms;

		uniforms[ 'envMap' ].value = texture;

		if ( ! texture.isCubeTexture ) {

			uniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );

		}

		uniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];
		uniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];

		_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );

		renderer.setRenderTarget( cubeUVRenderTarget );
		renderer.render( mesh, _flatCamera );

	}

	_applyPMREM( cubeUVRenderTarget ) {

		const renderer = this._renderer;
		const autoClear = renderer.autoClear;
		renderer.autoClear = false;

		for ( let i = 1; i < TOTAL_LODS; i ++ ) {

			const sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );

			const poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];

			this._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );

		}

		renderer.autoClear = autoClear;

	}

	/**
	 * This is a two-pass Gaussian blur for a cubemap. Normally this is done
	 * vertically and horizontally, but this breaks down on a cube. Here we apply
	 * the blur latitudinally (around the poles), and then longitudinally (towards
	 * the poles) to approximate the orthogonally-separable blur. It is least
	 * accurate at the poles, but still does a decent job.
	 */
	_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {

		const pingPongRenderTarget = this._pingPongRenderTarget;

		this._halfBlur(
			cubeUVRenderTarget,
			pingPongRenderTarget,
			lodIn,
			lodOut,
			sigma,
			'latitudinal',
			poleAxis );

		this._halfBlur(
			pingPongRenderTarget,
			cubeUVRenderTarget,
			lodOut,
			lodOut,
			sigma,
			'longitudinal',
			poleAxis );

	}

	_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {

		const renderer = this._renderer;
		const blurMaterial = this._blurMaterial;

		if ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {

			console.error(
				'blur direction must be either latitudinal or longitudinal!' );

		}

		// Number of standard deviations at which to cut off the discrete approximation.
		const STANDARD_DEVIATIONS = 3;

		const blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );
		const blurUniforms = blurMaterial.uniforms;

		const pixels = _sizeLods[ lodIn ] - 1;
		const radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );
		const sigmaPixels = sigmaRadians / radiansPerPixel;
		const samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;

		if ( samples > MAX_SAMPLES ) {

			console.warn( `sigmaRadians, ${
				sigmaRadians}, is too large and will clip, as it requested ${
				samples} samples when the maximum is set to ${MAX_SAMPLES}` );

		}

		const weights = [];
		let sum = 0;

		for ( let i = 0; i < MAX_SAMPLES; ++ i ) {

			const x = i / sigmaPixels;
			const weight = Math.exp( - x * x / 2 );
			weights.push( weight );

			if ( i == 0 ) {

				sum += weight;

			} else if ( i < samples ) {

				sum += 2 * weight;

			}

		}

		for ( let i = 0; i < weights.length; i ++ ) {

			weights[ i ] = weights[ i ] / sum;

		}

		blurUniforms[ 'envMap' ].value = targetIn.texture;
		blurUniforms[ 'samples' ].value = samples;
		blurUniforms[ 'weights' ].value = weights;
		blurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';

		if ( poleAxis ) {

			blurUniforms[ 'poleAxis' ].value = poleAxis;

		}

		blurUniforms[ 'dTheta' ].value = radiansPerPixel;
		blurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;
		blurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];
		blurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];

		const outputSize = _sizeLods[ lodOut ];
		const x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );
		const y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );

		_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );
		renderer.setRenderTarget( targetOut );
		renderer.render( blurMesh, _flatCamera );

	}

}

function _isLDR( texture ) {

	if ( texture === undefined || texture.type !== UnsignedByteType ) return false;

	return texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;

}

function _createPlanes() {

	const _lodPlanes = [];
	const _sizeLods = [];
	const _sigmas = [];

	let lod = LOD_MAX;

	for ( let i = 0; i < TOTAL_LODS; i ++ ) {

		const sizeLod = Math.pow( 2, lod );
		_sizeLods.push( sizeLod );
		let sigma = 1.0 / sizeLod;

		if ( i > LOD_MAX - LOD_MIN ) {

			sigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];

		} else if ( i == 0 ) {

			sigma = 0;

		}

		_sigmas.push( sigma );

		const texelSize = 1.0 / ( sizeLod - 1 );
		const min = - texelSize / 2;
		const max = 1 + texelSize / 2;
		const uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];

		const cubeFaces = 6;
		const vertices = 6;
		const positionSize = 3;
		const uvSize = 2;
		const faceIndexSize = 1;

		const position = new Float32Array( positionSize * vertices * cubeFaces );
		const uv = new Float32Array( uvSize * vertices * cubeFaces );
		const faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );

		for ( let face = 0; face < cubeFaces; face ++ ) {

			const x = ( face % 3 ) * 2 / 3 - 1;
			const y = face > 2 ? 0 : - 1;
			const coordinates = [
				x, y, 0,
				x + 2 / 3, y, 0,
				x + 2 / 3, y + 1, 0,
				x, y, 0,
				x + 2 / 3, y + 1, 0,
				x, y + 1, 0
			];
			position.set( coordinates, positionSize * vertices * face );
			uv.set( uv1, uvSize * vertices * face );
			const fill = [ face, face, face, face, face, face ];
			faceIndex.set( fill, faceIndexSize * vertices * face );

		}

		const planes = new BufferGeometry();
		planes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );
		planes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );
		planes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );
		_lodPlanes.push( planes );

		if ( lod > LOD_MIN ) {

			lod --;

		}

	}

	return { _lodPlanes, _sizeLods, _sigmas };

}

function _createRenderTarget( params ) {

	const cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );
	cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;
	cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';
	cubeUVRenderTarget.scissorTest = true;
	return cubeUVRenderTarget;

}

function _setViewport( target, x, y, width, height ) {

	target.viewport.set( x, y, width, height );
	target.scissor.set( x, y, width, height );

}

function _getBlurShader( maxSamples ) {

	const weights = new Float32Array( maxSamples );
	const poleAxis = new Vector3( 0, 1, 0 );
	const shaderMaterial = new RawShaderMaterial( {

		name: 'SphericalGaussianBlur',

		defines: { 'n': maxSamples },

		uniforms: {
			'envMap': { value: null },
			'samples': { value: 1 },
			'weights': { value: weights },
			'latitudinal': { value: false },
			'dTheta': { value: 0 },
			'mipInt': { value: 0 },
			'poleAxis': { value: poleAxis },
			'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },
			'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }
		},

		vertexShader: _getCommonVertexShader(),

		fragmentShader: /* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${ _getEncodings() }

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,

		blending: NoBlending,
		depthTest: false,
		depthWrite: false

	} );

	return shaderMaterial;

}

function _getEquirectShader() {

	const texelSize = new Vector2( 1, 1 );
	const shaderMaterial = new RawShaderMaterial( {

		name: 'EquirectangularToCubeUV',

		uniforms: {
			'envMap': { value: null },
			'texelSize': { value: texelSize },
			'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },
			'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }
		},

		vertexShader: _getCommonVertexShader(),

		fragmentShader: /* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${ _getEncodings() }

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,

		blending: NoBlending,
		depthTest: false,
		depthWrite: false

	} );

	return shaderMaterial;

}

function _getCubemapShader() {

	const shaderMaterial = new RawShaderMaterial( {

		name: 'CubemapToCubeUV',

		uniforms: {
			'envMap': { value: null },
			'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },
			'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }
		},

		vertexShader: _getCommonVertexShader(),

		fragmentShader: /* glsl */`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${ _getEncodings() }

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,

		blending: NoBlending,
		depthTest: false,
		depthWrite: false

	} );

	return shaderMaterial;

}

function _getCommonVertexShader() {

	return /* glsl */`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;

}

function _getEncodings() {

	return /* glsl */`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`;

}

const LineStrip = 0;
const LinePieces = 1;
const NoColors = 0;
const FaceColors = 1;
const VertexColors = 2;

function MeshFaceMaterial( materials ) {

	console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );
	return materials;

}

function MultiMaterial( materials = [] ) {

	console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );
	materials.isMultiMaterial = true;
	materials.materials = materials;
	materials.clone = function () {

		return materials.slice();

	};

	return materials;

}

function PointCloud( geometry, material ) {

	console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );
	return new Points( geometry, material );

}

function Particle( material ) {

	console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );
	return new Sprite( material );

}

function ParticleSystem( geometry, material ) {

	console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );
	return new Points( geometry, material );

}

function PointCloudMaterial( parameters ) {

	console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function ParticleBasicMaterial( parameters ) {

	console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function ParticleSystemMaterial( parameters ) {

	console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );
	return new PointsMaterial( parameters );

}

function Vertex( x, y, z ) {

	console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );
	return new Vector3( x, y, z );

}

//

function DynamicBufferAttribute( array, itemSize ) {

	console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );
	return new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );

}

function Int8Attribute( array, itemSize ) {

	console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );
	return new Int8BufferAttribute( array, itemSize );

}

function Uint8Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );
	return new Uint8BufferAttribute( array, itemSize );

}

function Uint8ClampedAttribute( array, itemSize ) {

	console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );
	return new Uint8ClampedBufferAttribute( array, itemSize );

}

function Int16Attribute( array, itemSize ) {

	console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );
	return new Int16BufferAttribute( array, itemSize );

}

function Uint16Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );
	return new Uint16BufferAttribute( array, itemSize );

}

function Int32Attribute( array, itemSize ) {

	console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );
	return new Int32BufferAttribute( array, itemSize );

}

function Uint32Attribute( array, itemSize ) {

	console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );
	return new Uint32BufferAttribute( array, itemSize );

}

function Float32Attribute( array, itemSize ) {

	console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );
	return new Float32BufferAttribute( array, itemSize );

}

function Float64Attribute( array, itemSize ) {

	console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );
	return new Float64BufferAttribute( array, itemSize );

}

//

Curve.create = function ( construct, getPoint ) {

	console.log( 'THREE.Curve.create() has been deprecated' );

	construct.prototype = Object.create( Curve.prototype );
	construct.prototype.constructor = construct;
	construct.prototype.getPoint = getPoint;

	return construct;

};

//

Path.prototype.fromPoints = function ( points ) {

	console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );
	return this.setFromPoints( points );

};

//

function AxisHelper( size ) {

	console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );
	return new AxesHelper( size );

}

function BoundingBoxHelper( object, color ) {

	console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );
	return new BoxHelper( object, color );

}

function EdgesHelper( object, hex ) {

	console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );
	return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

}

GridHelper.prototype.setColors = function () {

	console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );

};

SkeletonHelper.prototype.update = function () {

	console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );

};

function WireframeHelper( object, hex ) {

	console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );
	return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

}

//

Loader.prototype.extractUrlBase = function ( url ) {

	console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );
	return LoaderUtils.extractUrlBase( url );

};

Loader.Handlers = {

	add: function ( /* regex, loader */ ) {

		console.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );

	},

	get: function ( /* file */ ) {

		console.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );

	}

};

function XHRLoader( manager ) {

	console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );
	return new FileLoader( manager );

}

function BinaryTextureLoader( manager ) {

	console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );
	return new DataTextureLoader( manager );

}

//

Box2.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

Box2.prototype.empty = function () {

	console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );
	return this.isEmpty();

};

Box2.prototype.isIntersectionBox = function ( box ) {

	console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );
	return this.intersectsBox( box );

};

Box2.prototype.size = function ( optionalTarget ) {

	console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );
	return this.getSize( optionalTarget );

};

//

Box3.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

Box3.prototype.empty = function () {

	console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );
	return this.isEmpty();

};

Box3.prototype.isIntersectionBox = function ( box ) {

	console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );
	return this.intersectsBox( box );

};

Box3.prototype.isIntersectionSphere = function ( sphere ) {

	console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
	return this.intersectsSphere( sphere );

};

Box3.prototype.size = function ( optionalTarget ) {

	console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );
	return this.getSize( optionalTarget );

};

//

Sphere.prototype.empty = function () {

	console.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );
	return this.isEmpty();

};

//

Frustum.prototype.setFromMatrix = function ( m ) {

	console.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );
	return this.setFromProjectionMatrix( m );

};

//

Line3.prototype.center = function ( optionalTarget ) {

	console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );
	return this.getCenter( optionalTarget );

};

//

MathUtils.random16 = function () {

	console.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );
	return Math.random();

};

MathUtils.nearestPowerOfTwo = function ( value ) {

	console.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );
	return MathUtils.floorPowerOfTwo( value );

};

MathUtils.nextPowerOfTwo = function ( value ) {

	console.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );
	return MathUtils.ceilPowerOfTwo( value );

};

//

Matrix3.prototype.flattenToArrayOffset = function ( array, offset ) {

	console.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );
	return this.toArray( array, offset );

};

Matrix3.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );
	return vector.applyMatrix3( this );

};

Matrix3.prototype.multiplyVector3Array = function ( /* a */ ) {

	console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );

};

Matrix3.prototype.applyToBufferAttribute = function ( attribute ) {

	console.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );
	return attribute.applyMatrix3( this );

};

Matrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {

	console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );

};

Matrix3.prototype.getInverse = function ( matrix ) {

	console.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );
	return this.copy( matrix ).invert();

};

//

Matrix4.prototype.extractPosition = function ( m ) {

	console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );
	return this.copyPosition( m );

};

Matrix4.prototype.flattenToArrayOffset = function ( array, offset ) {

	console.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );
	return this.toArray( array, offset );

};

Matrix4.prototype.getPosition = function () {

	console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );
	return new Vector3().setFromMatrixColumn( this, 3 );

};

Matrix4.prototype.setRotationFromQuaternion = function ( q ) {

	console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );
	return this.makeRotationFromQuaternion( q );

};

Matrix4.prototype.multiplyToArray = function () {

	console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );

};

Matrix4.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	return vector.applyMatrix4( this );

};

Matrix4.prototype.multiplyVector4 = function ( vector ) {

	console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	return vector.applyMatrix4( this );

};

Matrix4.prototype.multiplyVector3Array = function ( /* a */ ) {

	console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );

};

Matrix4.prototype.rotateAxis = function ( v ) {

	console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );
	v.transformDirection( this );

};

Matrix4.prototype.crossVector = function ( vector ) {

	console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
	return vector.applyMatrix4( this );

};

Matrix4.prototype.translate = function () {

	console.error( 'THREE.Matrix4: .translate() has been removed.' );

};

Matrix4.prototype.rotateX = function () {

	console.error( 'THREE.Matrix4: .rotateX() has been removed.' );

};

Matrix4.prototype.rotateY = function () {

	console.error( 'THREE.Matrix4: .rotateY() has been removed.' );

};

Matrix4.prototype.rotateZ = function () {

	console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );

};

Matrix4.prototype.rotateByAxis = function () {

	console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );

};

Matrix4.prototype.applyToBufferAttribute = function ( attribute ) {

	console.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );
	return attribute.applyMatrix4( this );

};

Matrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {

	console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );

};

Matrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {

	console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );
	return this.makePerspective( left, right, top, bottom, near, far );

};

Matrix4.prototype.getInverse = function ( matrix ) {

	console.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );
	return this.copy( matrix ).invert();

};

//

Plane.prototype.isIntersectionLine = function ( line ) {

	console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );
	return this.intersectsLine( line );

};

//

Quaternion.prototype.multiplyVector3 = function ( vector ) {

	console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );
	return vector.applyQuaternion( this );

};

Quaternion.prototype.inverse = function ( ) {

	console.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );
	return this.invert();

};

//

Ray.prototype.isIntersectionBox = function ( box ) {

	console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );
	return this.intersectsBox( box );

};

Ray.prototype.isIntersectionPlane = function ( plane ) {

	console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );
	return this.intersectsPlane( plane );

};

Ray.prototype.isIntersectionSphere = function ( sphere ) {

	console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
	return this.intersectsSphere( sphere );

};

//

Triangle.prototype.area = function () {

	console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );
	return this.getArea();

};

Triangle.prototype.barycoordFromPoint = function ( point, target ) {

	console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );
	return this.getBarycoord( point, target );

};

Triangle.prototype.midpoint = function ( target ) {

	console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );
	return this.getMidpoint( target );

};

Triangle.prototypenormal = function ( target ) {

	console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );
	return this.getNormal( target );

};

Triangle.prototype.plane = function ( target ) {

	console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );
	return this.getPlane( target );

};

Triangle.barycoordFromPoint = function ( point, a, b, c, target ) {

	console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );
	return Triangle.getBarycoord( point, a, b, c, target );

};

Triangle.normal = function ( a, b, c, target ) {

	console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );
	return Triangle.getNormal( a, b, c, target );

};

//

Shape.prototype.extractAllPoints = function ( divisions ) {

	console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );
	return this.extractPoints( divisions );

};

Shape.prototype.extrude = function ( options ) {

	console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );
	return new ExtrudeGeometry( this, options );

};

Shape.prototype.makeGeometry = function ( options ) {

	console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );
	return new ShapeGeometry( this, options );

};

//

Vector2.prototype.fromAttribute = function ( attribute, index, offset ) {

	console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );
	return this.fromBufferAttribute( attribute, index, offset );

};

Vector2.prototype.distanceToManhattan = function ( v ) {

	console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );
	return this.manhattanDistanceTo( v );

};

Vector2.prototype.lengthManhattan = function () {

	console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );
	return this.manhattanLength();

};

//

Vector3.prototype.setEulerFromRotationMatrix = function () {

	console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );

};

Vector3.prototype.setEulerFromQuaternion = function () {

	console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );

};

Vector3.prototype.getPositionFromMatrix = function ( m ) {

	console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );
	return this.setFromMatrixPosition( m );

};

Vector3.prototype.getScaleFromMatrix = function ( m ) {

	console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );
	return this.setFromMatrixScale( m );

};

Vector3.prototype.getColumnFromMatrix = function ( index, matrix ) {

	console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );
	return this.setFromMatrixColumn( matrix, index );

};

Vector3.prototype.applyProjection = function ( m ) {

	console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );
	return this.applyMatrix4( m );

};

Vector3.prototype.fromAttribute = function ( attribute, index, offset ) {

	console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );
	return this.fromBufferAttribute( attribute, index, offset );

};

Vector3.prototype.distanceToManhattan = function ( v ) {

	console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );
	return this.manhattanDistanceTo( v );

};

Vector3.prototype.lengthManhattan = function () {

	console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );
	return this.manhattanLength();

};

//

Vector4.prototype.fromAttribute = function ( attribute, index, offset ) {

	console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );
	return this.fromBufferAttribute( attribute, index, offset );

};

Vector4.prototype.lengthManhattan = function () {

	console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );
	return this.manhattanLength();

};

//

Object3D.prototype.getChildByName = function ( name ) {

	console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );
	return this.getObjectByName( name );

};

Object3D.prototype.renderDepth = function () {

	console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );

};

Object3D.prototype.translate = function ( distance, axis ) {

	console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );
	return this.translateOnAxis( axis, distance );

};

Object3D.prototype.getWorldRotation = function () {

	console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );

};

Object3D.prototype.applyMatrix = function ( matrix ) {

	console.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );
	return this.applyMatrix4( matrix );

};

Object.defineProperties( Object3D.prototype, {

	eulerOrder: {
		get: function () {

			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
			return this.rotation.order;

		},
		set: function ( value ) {

			console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
			this.rotation.order = value;

		}
	},
	useQuaternion: {
		get: function () {

			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

		},
		set: function () {

			console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

		}
	}

} );

Mesh.prototype.setDrawMode = function () {

	console.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );

};

Object.defineProperties( Mesh.prototype, {

	drawMode: {
		get: function () {

			console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );
			return TrianglesDrawMode;

		},
		set: function () {

			console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );

		}
	}

} );

Object.defineProperties( LOD.prototype, {

	objects: {
		get: function () {

			console.warn( 'THREE.LOD: .objects has been renamed to .levels.' );
			return this.levels;

		}
	}

} );

Object.defineProperty( Skeleton.prototype, 'useVertexTexture', {

	get: function () {

		console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );

	},
	set: function () {

		console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );

	}

} );

SkinnedMesh.prototype.initBones = function () {

	console.error( 'THREE.SkinnedMesh: initBones() has been removed.' );

};

Object.defineProperty( Curve.prototype, '__arcLengthDivisions', {

	get: function () {

		console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );
		return this.arcLengthDivisions;

	},
	set: function ( value ) {

		console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );
		this.arcLengthDivisions = value;

	}

} );

//

PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {

	console.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +
			'Use .setFocalLength and .filmGauge for a photographic setup.' );

	if ( filmGauge !== undefined ) this.filmGauge = filmGauge;
	this.setFocalLength( focalLength );

};

//

Object.defineProperties( Light.prototype, {
	onlyShadow: {
		set: function () {

			console.warn( 'THREE.Light: .onlyShadow has been removed.' );

		}
	},
	shadowCameraFov: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );
			this.shadow.camera.fov = value;

		}
	},
	shadowCameraLeft: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );
			this.shadow.camera.left = value;

		}
	},
	shadowCameraRight: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );
			this.shadow.camera.right = value;

		}
	},
	shadowCameraTop: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );
			this.shadow.camera.top = value;

		}
	},
	shadowCameraBottom: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );
			this.shadow.camera.bottom = value;

		}
	},
	shadowCameraNear: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );
			this.shadow.camera.near = value;

		}
	},
	shadowCameraFar: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );
			this.shadow.camera.far = value;

		}
	},
	shadowCameraVisible: {
		set: function () {

			console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );

		}
	},
	shadowBias: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );
			this.shadow.bias = value;

		}
	},
	shadowDarkness: {
		set: function () {

			console.warn( 'THREE.Light: .shadowDarkness has been removed.' );

		}
	},
	shadowMapWidth: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );
			this.shadow.mapSize.width = value;

		}
	},
	shadowMapHeight: {
		set: function ( value ) {

			console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );
			this.shadow.mapSize.height = value;

		}
	}
} );

//

Object.defineProperties( BufferAttribute.prototype, {

	length: {
		get: function () {

			console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );
			return this.array.length;

		}
	},
	dynamic: {
		get: function () {

			console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );
			return this.usage === DynamicDrawUsage;

		},
		set: function ( /* value */ ) {

			console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );
			this.setUsage( DynamicDrawUsage );

		}
	}

} );

BufferAttribute.prototype.setDynamic = function ( value ) {

	console.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );
	this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );
	return this;

};

BufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {

	console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );

},

BufferAttribute.prototype.setArray = function ( /* array */ ) {

	console.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );

};

//

BufferGeometry.prototype.addIndex = function ( index ) {

	console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );
	this.setIndex( index );

};

BufferGeometry.prototype.addAttribute = function ( name, attribute ) {

	console.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );

	if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {

		console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );

		return this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );

	}

	if ( name === 'index' ) {

		console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );
		this.setIndex( attribute );

		return this;

	}

	return this.setAttribute( name, attribute );

};

BufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {

	if ( indexOffset !== undefined ) {

		console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );

	}

	console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );
	this.addGroup( start, count );

};

BufferGeometry.prototype.clearDrawCalls = function () {

	console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );
	this.clearGroups();

};

BufferGeometry.prototype.computeOffsets = function () {

	console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );

};

BufferGeometry.prototype.removeAttribute = function ( name ) {

	console.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );

	return this.deleteAttribute( name );

};

BufferGeometry.prototype.applyMatrix = function ( matrix ) {

	console.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );
	return this.applyMatrix4( matrix );

};

Object.defineProperties( BufferGeometry.prototype, {

	drawcalls: {
		get: function () {

			console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );
			return this.groups;

		}
	},
	offsets: {
		get: function () {

			console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );
			return this.groups;

		}
	}

} );

Object.defineProperties( InstancedBufferGeometry.prototype, {

	maxInstancedCount: {
		get: function () {

			console.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );
			return this.instanceCount;

		},
		set: function ( value ) {

			console.warn( 'THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount.' );
			this.instanceCount = value;

		}
	}

} );

Object.defineProperties( Raycaster.prototype, {

	linePrecision: {
		get: function () {

			console.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );
			return this.params.Line.threshold;

		},
		set: function ( value ) {

			console.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );
			this.params.Line.threshold = value;

		}
	}

} );

Object.defineProperties( InterleavedBuffer.prototype, {

	dynamic: {
		get: function () {

			console.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );
			return this.usage === DynamicDrawUsage;

		},
		set: function ( value ) {

			console.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );
			this.setUsage( value );

		}
	}

} );

InterleavedBuffer.prototype.setDynamic = function ( value ) {

	console.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );
	this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );
	return this;

};

InterleavedBuffer.prototype.setArray = function ( /* array */ ) {

	console.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );

};

//

ExtrudeGeometry.prototype.getArrays = function () {

	console.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );

};

ExtrudeGeometry.prototype.addShapeList = function () {

	console.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );

};

ExtrudeGeometry.prototype.addShape = function () {

	console.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );

};

//

Scene.prototype.dispose = function () {

	console.error( 'THREE.Scene: .dispose() has been removed.' );

};

//

Object.defineProperties( Uniform.prototype, {

	dynamic: {
		set: function () {

			console.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );

		}
	},
	onUpdate: {
		value: function () {

			console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );
			return this;

		}
	}

} );

//

Object.defineProperties( Material.prototype, {

	wrapAround: {
		get: function () {

			console.warn( 'THREE.Material: .wrapAround has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.Material: .wrapAround has been removed.' );

		}
	},

	overdraw: {
		get: function () {

			console.warn( 'THREE.Material: .overdraw has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.Material: .overdraw has been removed.' );

		}
	},

	wrapRGB: {
		get: function () {

			console.warn( 'THREE.Material: .wrapRGB has been removed.' );
			return new Color();

		}
	},

	shading: {
		get: function () {

			console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );

		},
		set: function ( value ) {

			console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );
			this.flatShading = ( value === FlatShading );

		}
	},

	stencilMask: {
		get: function () {

			console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );
			return this.stencilFuncMask;

		},
		set: function ( value ) {

			console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );
			this.stencilFuncMask = value;

		}
	}

} );

Object.defineProperties( MeshPhongMaterial.prototype, {

	metal: {
		get: function () {

			console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );
			return false;

		},
		set: function () {

			console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );

		}
	}

} );

Object.defineProperties( MeshPhysicalMaterial.prototype, {

	transparency: {
		get: function () {

			console.warn( 'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.' );
			return this.transmission;

		},
		set: function ( value ) {

			console.warn( 'THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission.' );
			this.transmission = value;

		}
	}

} );

Object.defineProperties( ShaderMaterial.prototype, {

	derivatives: {
		get: function () {

			console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
			return this.extensions.derivatives;

		},
		set: function ( value ) {

			console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
			this.extensions.derivatives = value;

		}
	}

} );

//

WebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {

	console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );
	this.setRenderTarget( renderTarget );
	this.clear( color, depth, stencil );

};

WebGLRenderer.prototype.animate = function ( callback ) {

	console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );
	this.setAnimationLoop( callback );

};

WebGLRenderer.prototype.getCurrentRenderTarget = function () {

	console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );
	return this.getRenderTarget();

};

WebGLRenderer.prototype.getMaxAnisotropy = function () {

	console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );
	return this.capabilities.getMaxAnisotropy();

};

WebGLRenderer.prototype.getPrecision = function () {

	console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );
	return this.capabilities.precision;

};

WebGLRenderer.prototype.resetGLState = function () {

	console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );
	return this.state.reset();

};

WebGLRenderer.prototype.supportsFloatTextures = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).' );
	return this.extensions.get( 'OES_texture_float' );

};

WebGLRenderer.prototype.supportsHalfFloatTextures = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).' );
	return this.extensions.get( 'OES_texture_half_float' );

};

WebGLRenderer.prototype.supportsStandardDerivatives = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).' );
	return this.extensions.get( 'OES_standard_derivatives' );

};

WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).' );
	return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );

};

WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).' );
	return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );

};

WebGLRenderer.prototype.supportsBlendMinMax = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).' );
	return this.extensions.get( 'EXT_blend_minmax' );

};

WebGLRenderer.prototype.supportsVertexTextures = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );
	return this.capabilities.vertexTextures;

};

WebGLRenderer.prototype.supportsInstancedArrays = function () {

	console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).' );
	return this.extensions.get( 'ANGLE_instanced_arrays' );

};

WebGLRenderer.prototype.enableScissorTest = function ( boolean ) {

	console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );
	this.setScissorTest( boolean );

};

WebGLRenderer.prototype.initMaterial = function () {

	console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );

};

WebGLRenderer.prototype.addPrePlugin = function () {

	console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );

};

WebGLRenderer.prototype.addPostPlugin = function () {

	console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );

};

WebGLRenderer.prototype.updateShadowMap = function () {

	console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );

};

WebGLRenderer.prototype.setFaceCulling = function () {

	console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );

};

WebGLRenderer.prototype.allocTextureUnit = function () {

	console.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );

};

WebGLRenderer.prototype.setTexture = function () {

	console.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );

};

WebGLRenderer.prototype.setTexture2D = function () {

	console.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );

};

WebGLRenderer.prototype.setTextureCube = function () {

	console.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );

};

WebGLRenderer.prototype.getActiveMipMapLevel = function () {

	console.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );
	return this.getActiveMipmapLevel();

};

Object.defineProperties( WebGLRenderer.prototype, {

	shadowMapEnabled: {
		get: function () {

			return this.shadowMap.enabled;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );
			this.shadowMap.enabled = value;

		}
	},
	shadowMapType: {
		get: function () {

			return this.shadowMap.type;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );
			this.shadowMap.type = value;

		}
	},
	shadowMapCullFace: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function ( /* value */ ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );

		}
	},
	context: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );
			return this.getContext();

		}
	},
	vr: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );
			return this.xr;

		}
	},
	gammaInput: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );
			return false;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );

		}
	},
	gammaOutput: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );
			return false;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );
			this.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;

		}
	},
	toneMappingWhitePoint: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );
			return 1.0;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );

		}
	},

} );

Object.defineProperties( WebGLShadowMap.prototype, {

	cullFace: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function ( /* cullFace */ ) {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );

		}
	},
	renderReverseSided: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );

		}
	},
	renderSingleSided: {
		get: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );
			return undefined;

		},
		set: function () {

			console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );

		}
	}

} );

function WebGLRenderTargetCube( width, height, options ) {

	console.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );
	return new WebGLCubeRenderTarget( width, options );

}

//

Object.defineProperties( WebGLRenderTarget.prototype, {

	wrapS: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
			return this.texture.wrapS;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
			this.texture.wrapS = value;

		}
	},
	wrapT: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
			return this.texture.wrapT;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
			this.texture.wrapT = value;

		}
	},
	magFilter: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
			return this.texture.magFilter;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
			this.texture.magFilter = value;

		}
	},
	minFilter: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
			return this.texture.minFilter;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
			this.texture.minFilter = value;

		}
	},
	anisotropy: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
			return this.texture.anisotropy;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
			this.texture.anisotropy = value;

		}
	},
	offset: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
			return this.texture.offset;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
			this.texture.offset = value;

		}
	},
	repeat: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
			return this.texture.repeat;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
			this.texture.repeat = value;

		}
	},
	format: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
			return this.texture.format;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
			this.texture.format = value;

		}
	},
	type: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
			return this.texture.type;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
			this.texture.type = value;

		}
	},
	generateMipmaps: {
		get: function () {

			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
			return this.texture.generateMipmaps;

		},
		set: function ( value ) {

			console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
			this.texture.generateMipmaps = value;

		}
	}

} );

//

Object.defineProperties( Audio.prototype, {

	load: {
		value: function ( file ) {

			console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );
			const scope = this;
			const audioLoader = new AudioLoader();
			audioLoader.load( file, function ( buffer ) {

				scope.setBuffer( buffer );

			} );
			return this;

		}
	},
	startTime: {
		set: function () {

			console.warn( 'THREE.Audio: .startTime is now .play( delay ).' );

		}
	}

} );

AudioAnalyser.prototype.getData = function () {

	console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );
	return this.getFrequencyData();

};

//

CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {

	console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );
	return this.update( renderer, scene );

};

CubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {

	console.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );
	return this.renderTarget.clear( renderer, color, depth, stencil );

};

ImageUtils.crossOrigin = undefined;

ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {

	console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );

	const loader = new TextureLoader();
	loader.setCrossOrigin( this.crossOrigin );

	const texture = loader.load( url, onLoad, undefined, onError );

	if ( mapping ) texture.mapping = mapping;

	return texture;

};

ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {

	console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );

	const loader = new CubeTextureLoader();
	loader.setCrossOrigin( this.crossOrigin );

	const texture = loader.load( urls, onLoad, undefined, onError );

	if ( mapping ) texture.mapping = mapping;

	return texture;

};

ImageUtils.loadCompressedTexture = function () {

	console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );

};

ImageUtils.loadCompressedTextureCube = function () {

	console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );

};

//

function CanvasRenderer() {

	console.error( 'THREE.CanvasRenderer has been removed' );

}

//

function JSONLoader() {

	console.error( 'THREE.JSONLoader has been removed.' );

}

//

const SceneUtils = {

	createMultiMaterialObject: function ( /* geometry, materials */ ) {

		console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

	},

	detach: function ( /* child, parent, scene */ ) {

		console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

	},

	attach: function ( /* child, scene, parent */ ) {

		console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

	}

};

//

function LensFlare() {

	console.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );

}

if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

	/* eslint-disable no-undef */
	__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {
		revision: REVISION,
	} } ) );
	/* eslint-enable no-undef */

}

if ( typeof window !== 'undefined' ) {

	if ( window.__THREE__ ) {

		console.warn( 'WARNING: Multiple instances of Three.js being imported.' );

	} else {

		window.__THREE__ = REVISION;

	}

}



// EXTERNAL MODULE: ./node_modules/threads/dist-esm/master/spawn.js
var spawn = __webpack_require__("731b");

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/master/get-bundle-url.browser.js
// Source: <https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/builtins/bundle-url.js>
let bundleURL;
function getBundleURLCached() {
    if (!bundleURL) {
        bundleURL = getBundleURL();
    }
    return bundleURL;
}
function getBundleURL() {
    // Attempt to find the URL of the current script and use that as the base URL
    try {
        throw new Error;
    }
    catch (err) {
        const matches = ("" + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\/\/[^)\n]+/g);
        if (matches) {
            return getBaseURL(matches[0]);
        }
    }
    return "/";
}
function getBaseURL(url) {
    return ("" + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\/\/.+)?\/[^/]+(?:\?.*)?$/, '$1') + '/';
}


// CONCATENATED MODULE: ./node_modules/threads/dist-esm/master/implementation.browser.js
// tslint:disable max-classes-per-file

const defaultPoolSize = typeof navigator !== "undefined" && navigator.hardwareConcurrency
    ? navigator.hardwareConcurrency
    : 4;
const isAbsoluteURL = (value) => /^(file|https?:)?\/\//i.test(value);
function createSourceBlobURL(code) {
    const blob = new Blob([code], { type: "application/javascript" });
    return URL.createObjectURL(blob);
}
function selectWorkerImplementation() {
    if (typeof Worker === "undefined") {
        // Might happen on Safari, for instance
        // The idea is to only fail if the constructor is actually used
        return class NoWebWorker {
            constructor() {
                throw Error("No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.");
            }
        };
    }
    class WebWorker extends Worker {
        constructor(url, options) {
            if (typeof url === "string" && options && options._baseURL) {
                url = new URL(url, options._baseURL);
            }
            else if (typeof url === "string" && !isAbsoluteURL(url) && getBundleURLCached().match(/^file:\/\//i)) {
                url = new URL(url, getBundleURLCached().replace(/\/[^\/]+$/, "/"));
                url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);
            }
            if (typeof url === "string" && isAbsoluteURL(url)) {
                // Create source code blob loading JS file via `importScripts()`
                // to circumvent worker CORS restrictions
                url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);
            }
            super(url, options);
        }
    }
    class BlobWorker extends WebWorker {
        constructor(blob, options) {
            const url = window.URL.createObjectURL(blob);
            super(url, options);
        }
        static fromText(source, options) {
            const blob = new window.Blob([source], { type: "text/javascript" });
            return new BlobWorker(blob, options);
        }
    }
    return {
        blob: BlobWorker,
        default: WebWorker
    };
}
let implementation;
function getWorkerImplementation() {
    if (!implementation) {
        implementation = selectWorkerImplementation();
    }
    return implementation;
}
function isWorkerRuntime() {
    const isWindowContext = typeof self !== "undefined" && typeof Window !== "undefined" && self instanceof Window;
    return typeof self !== "undefined" && self.postMessage && !isWindowContext ? true : false;
}

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/master/index.js





/** Separate class to spawn workers from source code blobs or strings. */
const master_BlobWorker = getWorkerImplementation().blob;
/** Worker implementation. Either web worker or a node.js Worker class. */
const master_Worker = getWorkerImplementation().default;

// EXTERNAL MODULE: ./node_modules/threads/dist-esm/transferable.js
var transferable = __webpack_require__("cd8f");

// EXTERNAL MODULE: ./node_modules/threads/dist-esm/symbols.js
var symbols = __webpack_require__("7b0a");

// CONCATENATED MODULE: ./node_modules/threads/dist-esm/master/thread.js

function fail(message) {
    throw Error(message);
}
/** Thread utility functions. Use them to manage or inspect a `spawn()`-ed thread. */
const Thread = {
    /** Return an observable that can be used to subscribe to all errors happening in the thread. */
    errors(thread) {
        return thread[symbols["a" /* $errors */]] || fail("Error observable not found. Make sure to pass a thread instance as returned by the spawn() promise.");
    },
    /** Return an observable that can be used to subscribe to internal events happening in the thread. Useful for debugging. */
    events(thread) {
        return thread[symbols["b" /* $events */]] || fail("Events observable not found. Make sure to pass a thread instance as returned by the spawn() promise.");
    },
    /** Terminate a thread. Remember to terminate every thread when you are done using it. */
    terminate(thread) {
        return thread[symbols["c" /* $terminate */]]();
    }
};

// CONCATENATED MODULE: ./src/parsers/gcode.worker.js
/* harmony default export */ var gcode_worker = ("/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n});\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ deserialize; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ serialize; });\n\n// UNUSED EXPORTS: registerSerializer\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/serializers.js\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nconst DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/common.js\n\nlet registeredSerializer = DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = extendSerializer(registeredSerializer, serializer);\n}\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MasterMessageType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return WorkerMessageType; });\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType || (MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType || (WorkerMessageType = {}));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ isTransferDescriptor; });\n\n// UNUSED EXPORTS: Transfer\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/symbols.js\nconst $errors = Symbol(\"thread.errors\");\nconst $events = Symbol(\"thread.events\");\nconst $terminate = Symbol(\"thread.terminate\");\nconst $transferable = Symbol(\"thread.transferable\");\nconst $worker = Symbol(\"thread.worker\");\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/transferable.js\n\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[$transferable];\n}\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nconst symbolObservable = __webpack_require__(7).default;\n\nmodule.exports = value => Boolean(value && value[symbolObservable] && value === value[symbolObservable]());\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return symbolObservablePonyfill; });\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {}\n\nvar result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(root);\n/* harmony default export */ __webpack_exports__[\"default\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(8), __webpack_require__(9)(module)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/threads/dist-esm/worker/index.js\nvar worker = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/_symbols.js\nconst hasSymbols = () => typeof Symbol === \"function\";\nconst hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);\nconst getSymbol = (name) => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nfunction registerObservableSymbol() {\n    if (hasSymbols() && !hasSymbol(\"observable\")) {\n        Symbol.observable = Symbol(\"observable\");\n    }\n}\nif (!hasSymbol(\"asyncIterator\")) {\n    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}\n\n// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/observable.js\n/**\n * Based on <https://raw.githubusercontent.com/zenparsing/zen-observable/master/src/Observable.js>\n * At commit: f63849a8c60af5d514efc8e9d6138d8273c49ad6\n */\n/// <reference path=\"../types/symbols.d.ts\" />\n\nconst SymbolIterator = getSymbol(\"iterator\");\nconst SymbolObservable = getSymbol(\"observable\");\nconst SymbolSpecies = getSymbol(\"species\");\n// === Abstract Operations ===\nfunction getMethod(obj, key) {\n    const value = obj[key];\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value !== \"function\") {\n        throw new TypeError(value + \" is not a function\");\n    }\n    return value;\n}\nfunction getSpecies(obj) {\n    let ctor = obj.constructor;\n    if (ctor !== undefined) {\n        ctor = ctor[SymbolSpecies];\n        if (ctor === null) {\n            ctor = undefined;\n        }\n    }\n    return ctor !== undefined ? ctor : observable_Observable;\n}\nfunction isObservable(x) {\n    return x instanceof observable_Observable; // SPEC: Brand check\n}\nfunction hostReportError(error) {\n    if (hostReportError.log) {\n        hostReportError.log(error);\n    }\n    else {\n        setTimeout(() => { throw error; }, 0);\n    }\n}\nfunction enqueue(fn) {\n    Promise.resolve().then(() => {\n        try {\n            fn();\n        }\n        catch (e) {\n            hostReportError(e);\n        }\n    });\n}\nfunction cleanupSubscription(subscription) {\n    const cleanup = subscription._cleanup;\n    if (cleanup === undefined) {\n        return;\n    }\n    subscription._cleanup = undefined;\n    if (!cleanup) {\n        return;\n    }\n    try {\n        if (typeof cleanup === \"function\") {\n            cleanup();\n        }\n        else {\n            const unsubscribe = getMethod(cleanup, \"unsubscribe\");\n            if (unsubscribe) {\n                unsubscribe.call(cleanup);\n            }\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n}\nfunction closeSubscription(subscription) {\n    subscription._observer = undefined;\n    subscription._queue = undefined;\n    subscription._state = \"closed\";\n}\nfunction flushSubscription(subscription) {\n    const queue = subscription._queue;\n    if (!queue) {\n        return;\n    }\n    subscription._queue = undefined;\n    subscription._state = \"ready\";\n    for (const item of queue) {\n        notifySubscription(subscription, item.type, item.value);\n        if (subscription._state === \"closed\") {\n            break;\n        }\n    }\n}\nfunction notifySubscription(subscription, type, value) {\n    subscription._state = \"running\";\n    const observer = subscription._observer;\n    try {\n        const m = observer ? getMethod(observer, type) : undefined;\n        switch (type) {\n            case \"next\":\n                if (m)\n                    m.call(observer, value);\n                break;\n            case \"error\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer, value);\n                else\n                    throw value;\n                break;\n            case \"complete\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer);\n                break;\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n    if (subscription._state === \"closed\") {\n        cleanupSubscription(subscription);\n    }\n    else if (subscription._state === \"running\") {\n        subscription._state = \"ready\";\n    }\n}\nfunction onNotify(subscription, type, value) {\n    if (subscription._state === \"closed\") {\n        return;\n    }\n    if (subscription._state === \"buffering\") {\n        subscription._queue = subscription._queue || [];\n        subscription._queue.push({ type, value });\n        return;\n    }\n    if (subscription._state !== \"ready\") {\n        subscription._state = \"buffering\";\n        subscription._queue = [{ type, value }];\n        enqueue(() => flushSubscription(subscription));\n        return;\n    }\n    notifySubscription(subscription, type, value);\n}\nclass Subscription {\n    constructor(observer, subscriber) {\n        // ASSERT: observer is an object\n        // ASSERT: subscriber is callable\n        this._cleanup = undefined;\n        this._observer = observer;\n        this._queue = undefined;\n        this._state = \"initializing\";\n        const subscriptionObserver = new SubscriptionObserver(this);\n        try {\n            this._cleanup = subscriber.call(undefined, subscriptionObserver);\n        }\n        catch (e) {\n            subscriptionObserver.error(e);\n        }\n        if (this._state === \"initializing\") {\n            this._state = \"ready\";\n        }\n    }\n    get closed() {\n        return this._state === \"closed\";\n    }\n    unsubscribe() {\n        if (this._state !== \"closed\") {\n            closeSubscription(this);\n            cleanupSubscription(this);\n        }\n    }\n}\nclass SubscriptionObserver {\n    constructor(subscription) { this._subscription = subscription; }\n    get closed() { return this._subscription._state === \"closed\"; }\n    next(value) { onNotify(this._subscription, \"next\", value); }\n    error(value) { onNotify(this._subscription, \"error\", value); }\n    complete() { onNotify(this._subscription, \"complete\"); }\n}\n/**\n * The basic Observable class. This primitive is used to wrap asynchronous\n * data streams in a common standardized data type that is interoperable\n * between libraries and can be composed to represent more complex processes.\n */\nclass observable_Observable {\n    constructor(subscriber) {\n        if (!(this instanceof observable_Observable)) {\n            throw new TypeError(\"Observable cannot be called as a function\");\n        }\n        if (typeof subscriber !== \"function\") {\n            throw new TypeError(\"Observable initializer must be a function\");\n        }\n        this._subscriber = subscriber;\n    }\n    subscribe(nextOrObserver, onError, onComplete) {\n        if (typeof nextOrObserver !== \"object\" || nextOrObserver === null) {\n            nextOrObserver = {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            };\n        }\n        return new Subscription(nextOrObserver, this._subscriber);\n    }\n    pipe(first, ...mappers) {\n        // tslint:disable-next-line no-this-assignment\n        let intermediate = this;\n        for (const mapper of [first, ...mappers]) {\n            intermediate = mapper(intermediate);\n        }\n        return intermediate;\n    }\n    tap(nextOrObserver, onError, onComplete) {\n        const tapObserver = typeof nextOrObserver !== \"object\" || nextOrObserver === null\n            ? {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            }\n            : nextOrObserver;\n        return new observable_Observable(observer => {\n            return this.subscribe({\n                next(value) {\n                    tapObserver.next && tapObserver.next(value);\n                    observer.next(value);\n                },\n                error(error) {\n                    tapObserver.error && tapObserver.error(error);\n                    observer.error(error);\n                },\n                complete() {\n                    tapObserver.complete && tapObserver.complete();\n                    observer.complete();\n                },\n                start(subscription) {\n                    tapObserver.start && tapObserver.start(subscription);\n                }\n            });\n        });\n    }\n    forEach(fn) {\n        return new Promise((resolve, reject) => {\n            if (typeof fn !== \"function\") {\n                reject(new TypeError(fn + \" is not a function\"));\n                return;\n            }\n            function done() {\n                subscription.unsubscribe();\n                resolve();\n            }\n            const subscription = this.subscribe({\n                next(value) {\n                    try {\n                        fn(value, done);\n                    }\n                    catch (e) {\n                        reject(e);\n                        subscription.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n        });\n    }\n    map(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                let propagatedValue = value;\n                try {\n                    propagatedValue = fn(value);\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(propagatedValue);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    filter(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                try {\n                    if (!fn(value))\n                        return;\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(value);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    reduce(fn, seed) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        const hasSeed = arguments.length > 1;\n        let hasValue = false;\n        let acc = seed;\n        return new C(observer => this.subscribe({\n            next(value) {\n                const first = !hasValue;\n                hasValue = true;\n                if (!first || hasSeed) {\n                    try {\n                        acc = fn(acc, value);\n                    }\n                    catch (e) {\n                        return observer.error(e);\n                    }\n                }\n                else {\n                    acc = value;\n                }\n            },\n            error(e) { observer.error(e); },\n            complete() {\n                if (!hasValue && !hasSeed) {\n                    return observer.error(new TypeError(\"Cannot reduce an empty sequence\"));\n                }\n                observer.next(acc);\n                observer.complete();\n            },\n        }));\n    }\n    concat(...sources) {\n        const C = getSpecies(this);\n        return new C(observer => {\n            let subscription;\n            let index = 0;\n            function startNext(next) {\n                subscription = next.subscribe({\n                    next(v) { observer.next(v); },\n                    error(e) { observer.error(e); },\n                    complete() {\n                        if (index === sources.length) {\n                            subscription = undefined;\n                            observer.complete();\n                        }\n                        else {\n                            startNext(C.from(sources[index++]));\n                        }\n                    },\n                });\n            }\n            startNext(this);\n            return () => {\n                if (subscription) {\n                    subscription.unsubscribe();\n                    subscription = undefined;\n                }\n            };\n        });\n    }\n    flatMap(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => {\n            const subscriptions = [];\n            const outer = this.subscribe({\n                next(value) {\n                    let normalizedValue;\n                    if (fn) {\n                        try {\n                            normalizedValue = fn(value);\n                        }\n                        catch (e) {\n                            return observer.error(e);\n                        }\n                    }\n                    else {\n                        normalizedValue = value;\n                    }\n                    const inner = C.from(normalizedValue).subscribe({\n                        next(innerValue) { observer.next(innerValue); },\n                        error(e) { observer.error(e); },\n                        complete() {\n                            const i = subscriptions.indexOf(inner);\n                            if (i >= 0)\n                                subscriptions.splice(i, 1);\n                            completeIfDone();\n                        },\n                    });\n                    subscriptions.push(inner);\n                },\n                error(e) { observer.error(e); },\n                complete() { completeIfDone(); },\n            });\n            function completeIfDone() {\n                if (outer.closed && subscriptions.length === 0) {\n                    observer.complete();\n                }\n            }\n            return () => {\n                subscriptions.forEach(s => s.unsubscribe());\n                outer.unsubscribe();\n            };\n        });\n    }\n    [SymbolObservable]() { return this; }\n    static from(x) {\n        const C = (typeof this === \"function\" ? this : observable_Observable);\n        if (x == null) {\n            throw new TypeError(x + \" is not an object\");\n        }\n        const observableMethod = getMethod(x, SymbolObservable);\n        if (observableMethod) {\n            const observable = observableMethod.call(x);\n            if (Object(observable) !== observable) {\n                throw new TypeError(observable + \" is not an object\");\n            }\n            if (isObservable(observable) && observable.constructor === C) {\n                return observable;\n            }\n            return new C(observer => observable.subscribe(observer));\n        }\n        if (hasSymbol(\"iterator\")) {\n            const iteratorMethod = getMethod(x, SymbolIterator);\n            if (iteratorMethod) {\n                return new C(observer => {\n                    enqueue(() => {\n                        if (observer.closed)\n                            return;\n                        for (const item of iteratorMethod.call(x)) {\n                            observer.next(item);\n                            if (observer.closed)\n                                return;\n                        }\n                        observer.complete();\n                    });\n                });\n            }\n        }\n        if (Array.isArray(x)) {\n            return new C(observer => {\n                enqueue(() => {\n                    if (observer.closed)\n                        return;\n                    for (const item of x) {\n                        observer.next(item);\n                        if (observer.closed)\n                            return;\n                    }\n                    observer.complete();\n                });\n            });\n        }\n        throw new TypeError(x + \" is not observable\");\n    }\n    static of(...items) {\n        const C = (typeof this === \"function\" ? this : observable_Observable);\n        return new C(observer => {\n            enqueue(() => {\n                if (observer.closed)\n                    return;\n                for (const item of items) {\n                    observer.next(item);\n                    if (observer.closed)\n                        return;\n                }\n                observer.complete();\n            });\n        });\n    }\n    static get [SymbolSpecies]() { return this; }\n}\nif (hasSymbols()) {\n    Object.defineProperty(observable_Observable, Symbol(\"extensions\"), {\n        value: {\n            symbol: SymbolObservable,\n            hostReportError,\n        },\n        configurable: true,\n    });\n}\n/* harmony default export */ var observable = (observable_Observable);\n\n// CONCATENATED MODULE: ./src/parsers/gcode.worker.js\n/**\n * @fileoverview GCODE Parser Worker\n */\n\n//Imports\n\n\n\n//Calculate the delta between 2 vertices\nfunction delta(relative, vertex1, vertex2)\n{\n  return relative ? vertex2 : vertex2 - vertex1;\n}\n\n//Calculate the absolute value between 2 vertices\nfunction absolute(relative, vertex1, vertex2)\n{\n  return relative ? vertex1 + vertex2 : vertex2;\n}\n\n//Instance variables\nlet previousProgress = 0;\nlet proxyObserver;\n\n/**\n * GCODE Parser worker\n */\nconst gcode_worker_worker = {\n  /**\n   * Observe the progress\n   * @returns {Observable}\n   */\n  observeProgress: () => new observable(observer =>\n  {\n    proxyObserver = observer;\n  }),\n  /**\n   * Parse the file\n   * @param file {ArrayBuffer}\n   * @returns {Promise<Object>}\n   */\n  parse: async file =>\n  {\n    //Extract arguments\n    let gcode = new TextDecoder().decode(file);\n\n    //Variables\n    const primaryVertices = [];\n    const secondaryVertices = [];\n    let state = {x: 0, y: 0, z: 0, e: 0, f: 0};\n    let relative = false;\n\n    //Remove comments\n    gcode = gcode.replace(/;.+/g, '').split('\\n');\n\n    //Parse commands\n    for (let i = 0; i < gcode.length; i++)\n    {\n      //Parse tokens\n      let tokens = gcode[i].split(' ');\n      const command = tokens[0].toUpperCase();\n      const args = {};\n      tokens = tokens.splice(1);\n\n      //Parse arguments\n      for (let i = 0; i < tokens.length; i++)\n      {\n        //If not null, store argument\n        if (tokens[i][0] != null)\n        {\n          const key = tokens[i][0].toLowerCase();\n          const value = parseFloat(tokens[i].substring(1));\n          args[key] = value;\n        }\n      }\n\n      //Convert GCODE to Three.JS land\n\n      //Linear move\n      if (command == 'G0' || command == 'G1')\n      {\n        const line = {\n          x: args.x != null ? absolute(relative, state.x, args.x) : state.x,\n          y: args.y != null ? absolute(relative, state.y, args.y) : state.y,\n          z: args.z != null ? absolute(relative, state.z, args.z) : state.z,\n          e: args.e != null ? absolute(relative, state.e, args.e) : state.e,\n          f: args.f != null ? absolute(relative, state.f, args.f) : state.f\n        };\n\n        //Only push valid coordinates/states\n        if (!isNaN(line.x) &&\n          !isNaN(line.y) &&\n          !isNaN(line.z) &&\n          !isNaN(line.e) &&\n          !isNaN(line.f)\n        )\n        {\n          //Primary (E-dimension changed)\n          if (delta(relative, state.e, line.e) > 0)\n          {\n            primaryVertices.push(line.x, line.y, line.z);\n          }\n          //Secondary\n          else\n          {\n            secondaryVertices.push(line.x, line.y, line.z);\n          }\n        }\n\n        //Update position\n        state = line;\n      }\n      //Absolute positioning\n      else if (command == 'G90')\n      {\n        relative = false;\n      }\n      //Relative positioning\n      else if (command == 'G91')\n      {\n        relative = true;\n      }\n      //Set position\n      else if (command == 'G92')\n      {\n        state = args;\n      }\n\n      //Update progress\n      const progress = Math.round((i / gcode.length) * 100);\n\n      if (progress != previousProgress)\n      {\n        proxyObserver.next(progress);\n      }\n\n      previousProgress = progress;\n    }\n\n    // return {primaryVertices, secondaryVertices};\n    return { primaryVertices };\n  }\n};\n\n//Expose\nObject(worker[\"a\" /* expose */])(gcode_worker_worker);\n\n/***/ }),\n/* 11 */,\n/* 12 */,\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export isWorkerRuntime */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return expose; });\n/* harmony import */ var is_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var is_observable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_observable__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var _transferable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var _types_messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);\n/* harmony import */ var _implementation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(0);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n/** Returns `true` if this code is currently running in a worker. */\nconst isWorkerRuntime = _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* MasterMessageType */ \"a\"].cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* MasterMessageType */ \"a\"].run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable__WEBPACK_IMPORTED_MODULE_0___default()(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return Object(_transferable__WEBPACK_IMPORTED_MODULE_2__[/* isTransferDescriptor */ \"a\"])(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].error,\n        uid,\n        error: Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error)\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].running,\n        uid,\n        resultType\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].uncaughtError,\n            error: Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error)\n        };\n        _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(value)), error => {\n                postJobErrorMessage(jobUID, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!_implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(_common__WEBPACK_IMPORTED_MODULE_1__[/* deserialize */ \"a\"]));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(_common__WEBPACK_IMPORTED_MODULE_1__[/* deserialize */ \"a\"]));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))\n\n/***/ })\n/******/ ]);");
// CONCATENATED MODULE: ./src/parsers/gcode.js



function cov_ha03xog23() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/parsers/gcode.js";
  var hash = "ed30a0e0f4ad13e0a1cac3c6c2dd14b4d8b4d438";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/parsers/gcode.js",
    statementMap: {
      "0": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "1": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "2": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "3": {
        start: {
          line: 32,
          column: 47
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "4": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 35,
          column: 27
        }
      },
      "5": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "6": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "7": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 42,
          column: 46
        }
      },
      "8": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 48
        }
      },
      "9": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 48,
          column: 4
        }
      },
      "10": {
        start: {
          line: 49,
          column: 2
        },
        end: {
          line: 52,
          column: 4
        }
      },
      "11": {
        start: {
          line: 54,
          column: 22
        },
        end: {
          line: 54,
          column: 64
        }
      },
      "12": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "13": {
        start: {
          line: 58,
          column: 2
        },
        end: {
          line: 58,
          column: 69
        }
      },
      "14": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 75
        }
      },
      "15": {
        start: {
          line: 62,
          column: 2
        },
        end: {
          line: 62,
          column: 28
        }
      },
      "16": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 63,
          column: 30
        }
      },
      "17": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "18": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 65,
          column: 30
        }
      },
      "19": {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 67,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 16
          }
        },
        loc: {
          start: {
            line: 21,
            column: 0
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 16
          },
          end: {
            line: 29,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 27
          },
          end: {
            line: 29,
            column: 41
          }
        }, {
          start: {
            line: 29,
            column: 44
          },
          end: {
            line: 29,
            column: 48
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ed30a0e0f4ad13e0a1cac3c6c2dd14b4d8b4d438"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ha03xog23 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_ha03xog23();


/**
 * @fileoverview GCODE Parser
 * Based on https://github.com/mrdoob/three.js/blob/dev/examples/js/loaders/GCodeLoader.js
 * @author tentone
 * @author joewalnes
 * @author wakeful-cloud
 */


 //Export

/* harmony default export */ var gcode = (/*#__PURE__*/(function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file, transfer, theme, progress) {
    var worker, bytes, _ref2, primaryVertices, secondaryVertices, primaryMaterial, secondaryMaterial, primaryGeometry, secondaryGeometry, primaryLine, secondaryLine;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cov_ha03xog23().f[0]++;
            cov_ha03xog23().s[0]++;
            _context.next = 4;
            return Object(spawn["a" /* spawn */])(master_BlobWorker.fromText(gcode_worker));

          case 4:
            worker = _context.sent;
            cov_ha03xog23().s[1]++;
            //Observe progress
            worker.observeProgress().subscribe(progress); //If the transfer option is true, convert the model to a ThreadJS transferable otherwise have ThreadsJS clone the arraybuffer

            bytes = (cov_ha03xog23().s[2]++, transfer ? (cov_ha03xog23().b[0][0]++, Object(transferable["a" /* Transfer */])(file)) : (cov_ha03xog23().b[0][1]++, file)); //Parse

            cov_ha03xog23().s[3]++;
            _context.next = 11;
            return worker.parse(bytes);

          case 11:
            _ref2 = _context.sent;
            primaryVertices = _ref2.primaryVertices;
            secondaryVertices = _ref2.secondaryVertices;
            cov_ha03xog23().s[4]++;
            //Kill the worker
            Thread.terminate(worker); //Theming

            primaryMaterial = (cov_ha03xog23().s[5]++, new LineBasicMaterial({
              color: theme.primary
            }));
            secondaryMaterial = (cov_ha03xog23().s[6]++, new LineBasicMaterial({
              color: theme.secondary
            })); //Line generation

            primaryGeometry = (cov_ha03xog23().s[7]++, new BufferGeometry());
            secondaryGeometry = (cov_ha03xog23().s[8]++, new BufferGeometry());
            cov_ha03xog23().s[9]++;
            primaryGeometry.setAttribute('position', new Float32BufferAttribute(primaryVertices, 3));
            cov_ha03xog23().s[10]++;
            secondaryGeometry.setAttribute('position', new Float32BufferAttribute(secondaryVertices, 3));
            primaryLine = (cov_ha03xog23().s[11]++, new Line(primaryGeometry, primaryMaterial));
            secondaryLine = (cov_ha03xog23().s[12]++, new Line(secondaryGeometry, secondaryMaterial)); //Metadata

            cov_ha03xog23().s[13]++;
            primaryLine.metadata = _objectSpread2(_objectSpread2({}, primaryLine.metadata), {}, {
              color: 'primary'
            });
            cov_ha03xog23().s[14]++;
            secondaryLine.metadata = _objectSpread2(_objectSpread2({}, secondaryLine.metadata), {}, {
              color: 'secondary'
            }); //Cleanup

            cov_ha03xog23().s[15]++;
            primaryGeometry.dispose();
            cov_ha03xog23().s[16]++;
            secondaryGeometry.dispose();
            cov_ha03xog23().s[17]++;
            primaryMaterial.dispose();
            cov_ha03xog23().s[18]++;
            secondaryMaterial.dispose();
            cov_ha03xog23().s[19]++;
            return _context.abrupt("return", [primaryLine, secondaryLine]);

          case 40:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
})());
// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js
var es_array_concat = __webpack_require__("99af");

// CONCATENATED MODULE: ./src/parsers/unified.worker.js
/* harmony default export */ var unified_worker = ("/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 17);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n});\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ deserialize; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ serialize; });\n\n// UNUSED EXPORTS: registerSerializer\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/serializers.js\nfunction extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nconst DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/common.js\n\nlet registeredSerializer = DefaultSerializer;\nfunction registerSerializer(serializer) {\n    registeredSerializer = extendSerializer(registeredSerializer, serializer);\n}\nfunction deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nfunction serialize(input) {\n    return registeredSerializer.serialize(input);\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MasterMessageType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return WorkerMessageType; });\n/////////////////////////////\n// Messages sent by master:\nvar MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType || (MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nvar WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType || (WorkerMessageType = {}));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ isTransferDescriptor; });\n\n// UNUSED EXPORTS: Transfer\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/symbols.js\nconst $errors = Symbol(\"thread.errors\");\nconst $events = Symbol(\"thread.events\");\nconst $terminate = Symbol(\"thread.terminate\");\nconst $transferable = Symbol(\"thread.transferable\");\nconst $worker = Symbol(\"thread.worker\");\n\n// CONCATENATED MODULE: ./node_modules/threads/dist-esm/transferable.js\n\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nfunction isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[$transferable];\n}\nfunction Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, Buffer, setImmediate) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Sy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return gg; });\nvar e=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};function t(e,t,r){return e(r={path:t,exports:{},require:function(e,t){return n(null==t&&r.path)}},r.exports),r.exports}function n(){throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\")}var r=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.DEFAULT_CONFIG=void 0;t.DEFAULT_CONFIG={epsilon:1e-12,matrix:\"Matrix\",number:\"number\",precision:64,predictable:!1,randomSeed:null}})),i=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(e){return e&&!0===e.constructor.prototype.isBigNumber||!1}function i(e){return e&&\"object\"===n(e)&&!0===Object.getPrototypeOf(e).isComplex||!1}function a(e){return e&&\"object\"===n(e)&&!0===Object.getPrototypeOf(e).isFraction||!1}function o(e){return e&&!0===e.constructor.prototype.isUnit||!1}Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNumber=function(e){return\"number\"==typeof e},t.isBigNumber=r,t.isComplex=i,t.isFraction=a,t.isUnit=o,t.isString=function(e){return\"string\"==typeof e},t.isMatrix=c,t.isCollection=function(e){return Array.isArray(e)||c(e)},t.isDenseMatrix=function(e){return e&&e.isDenseMatrix&&!0===e.constructor.prototype.isMatrix||!1},t.isSparseMatrix=function(e){return e&&e.isSparseMatrix&&!0===e.constructor.prototype.isMatrix||!1},t.isRange=u,t.isIndex=l,t.isBoolean=function(e){return\"boolean\"==typeof e},t.isResultSet=d,t.isHelp=f,t.isFunction=function(e){return\"function\"==typeof e},t.isDate=function(e){return e instanceof Date},t.isRegExp=function(e){return e instanceof RegExp},t.isObject=function(e){return!(!e||\"object\"!==n(e)||e.constructor!==Object||i(e)||a(e))},t.isNull=function(e){return null===e},t.isUndefined=function(e){return void 0===e},t.isAccessorNode=function(e){return e&&!0===e.isAccessorNode&&!0===e.constructor.prototype.isNode||!1},t.isArrayNode=function(e){return e&&!0===e.isArrayNode&&!0===e.constructor.prototype.isNode||!1},t.isAssignmentNode=function(e){return e&&!0===e.isAssignmentNode&&!0===e.constructor.prototype.isNode||!1},t.isBlockNode=function(e){return e&&!0===e.isBlockNode&&!0===e.constructor.prototype.isNode||!1},t.isConditionalNode=function(e){return e&&!0===e.isConditionalNode&&!0===e.constructor.prototype.isNode||!1},t.isConstantNode=function(e){return e&&!0===e.isConstantNode&&!0===e.constructor.prototype.isNode||!1},t.isFunctionAssignmentNode=function(e){return e&&!0===e.isFunctionAssignmentNode&&!0===e.constructor.prototype.isNode||!1},t.isFunctionNode=function(e){return e&&!0===e.isFunctionNode&&!0===e.constructor.prototype.isNode||!1},t.isIndexNode=function(e){return e&&!0===e.isIndexNode&&!0===e.constructor.prototype.isNode||!1},t.isNode=p,t.isObjectNode=function(e){return e&&!0===e.isObjectNode&&!0===e.constructor.prototype.isNode||!1},t.isOperatorNode=function(e){return e&&!0===e.isOperatorNode&&!0===e.constructor.prototype.isNode||!1},t.isParenthesisNode=function(e){return e&&!0===e.isParenthesisNode&&!0===e.constructor.prototype.isNode||!1},t.isRangeNode=function(e){return e&&!0===e.isRangeNode&&!0===e.constructor.prototype.isNode||!1},t.isSymbolNode=function(e){return e&&!0===e.isSymbolNode&&!0===e.constructor.prototype.isNode||!1},t.isChain=m,t.typeOf=function(e){var t=n(e);if(\"object\"===t)return null===e?\"null\":Array.isArray(e)?\"Array\":e instanceof Date?\"Date\":e instanceof RegExp?\"RegExp\":r(e)?\"BigNumber\":i(e)?\"Complex\":a(e)?\"Fraction\":c(e)?\"Matrix\":o(e)?\"Unit\":l(e)?\"Index\":u(e)?\"Range\":d(e)?\"ResultSet\":p(e)?e.type:m(e)?\"Chain\":f(e)?\"Help\":\"Object\";return\"function\"===t?\"Function\":t},t.isArray=void 0;var s=Array.isArray;function c(e){return e&&!0===e.constructor.prototype.isMatrix||!1}function u(e){return e&&!0===e.constructor.prototype.isRange||!1}function l(e){return e&&!0===e.constructor.prototype.isIndex||!1}function d(e){return e&&!0===e.constructor.prototype.isResultSet||!1}function f(e){return e&&!0===e.constructor.prototype.isHelp||!1}function p(e){return e&&!0===e.isNode&&!0===e.constructor.prototype.isNode||!1}function m(e){return e&&!0===e.constructor.prototype.isChain||!1}t.isArray=s})),a=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(e,t){var n={};for(var r in e)a(e,r)&&(n[r]=t(e[r]));return n}function a(e,t){return e&&Object.hasOwnProperty.call(e,t)}function o(e,t){if(\"string\"==typeof t)return c(t)?o(e,t.split(\".\")):e[t];for(var n=e,r=0;r<t.length;r++){var i=t[r];n=n?n[i]:void 0}return n}function s(e,t,n){if(\"string\"==typeof t)return c(t)?s(e,t.split(\".\"),n):(e[t]=n,e);for(var r=e,i=0;i<t.length-1;i++){var a=t[i];void 0===r[a]&&(r[a]={}),r=r[a]}t.length>0&&(r[t[t.length-1]]=n);return e}function c(e){return-1!==e.indexOf(\".\")}Object.defineProperty(t,\"__esModule\",{value:!0}),t.clone=function e(t){var a=n(t);if(\"number\"===a||\"string\"===a||\"boolean\"===a||null==t)return t;if(\"function\"==typeof t.clone)return t.clone();if(Array.isArray(t))return t.map((function(t){return e(t)}));if(t instanceof Date)return new Date(t.valueOf());if((0,i.isBigNumber)(t))return t;if(t instanceof RegExp)throw new TypeError(\"Cannot clone \"+t);return r(t,e)},t.mapObject=r,t.extend=function(e,t){for(var n in t)a(t,n)&&(e[n]=t[n]);return e},t.deepExtend=function e(t,n){if(Array.isArray(n))throw new TypeError(\"Arrays are not supported by deepExtend\");for(var r in n)if(a(n,r)&&!(r in Object.prototype)&&!(r in Function.prototype))if(n[r]&&n[r].constructor===Object)void 0===t[r]&&(t[r]={}),t[r]&&t[r].constructor===Object?e(t[r],n[r]):t[r]=n[r];else{if(Array.isArray(n[r]))throw new TypeError(\"Arrays are not supported by deepExtend\");t[r]=n[r]}return t},t.deepStrictEqual=function e(t,n){var r,i,a;if(Array.isArray(t)){if(!Array.isArray(n))return!1;if(t.length!==n.length)return!1;for(i=0,a=t.length;i<a;i++)if(!e(t[i],n[i]))return!1;return!0}if(\"function\"==typeof t)return t===n;if(t instanceof Object){if(Array.isArray(n)||!(n instanceof Object))return!1;for(r in t)if(!(r in n)||!e(t[r],n[r]))return!1;for(r in n)if(!(r in t)||!e(t[r],n[r]))return!1;return!0}return t===n},t.deepFlatten=function(e){var t={};return function e(t,r){for(var i in t)if(a(t,i)){var o=t[i];\"object\"===n(o)&&null!==o?e(o,r):r[i]=o}}(e,t),t},t.canDefineProperty=function(){try{if(Object.defineProperty)return Object.defineProperty({},\"x\",{get:function(){}}),!0}catch(e){}return!1},t.lazy=function(e,t,n){var r,i=!0;Object.defineProperty(e,t,{get:function(){return i&&(r=n(),i=!1),r},set:function(e){r=e,i=!1},configurable:!0,enumerable:!0})},t.traverse=function e(t,n){if(n&&\"string\"==typeof n)return e(t,n.split(\".\"));var r=t;if(n)for(var i=0;i<n.length;i++){var a=n[i];a in r||(r[a]={}),r=r[a]}return r},t.hasOwnProperty=a,t.isLegacyFactory=function(e){return e&&\"function\"==typeof e.factory},t.get=o,t.set=s,t.pick=function(e,t,n){for(var r={},i=0;i<t.length;i++){var a=t[i],c=o(e,a);void 0!==c&&s(r,a,n?n(c,a):c)}return r},t.pickShallow=function(e,t){for(var n={},r=0;r<t.length;r++){var i=t[r],a=e[i];void 0!==a&&(n[i]=a)}return n},t.values=function(e){return Object.keys(e).map((function(t){return e[t]}))}})),o=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.configFactory=function(e,t){function s(r){if(r){var s=(0,a.mapObject)(e,a.clone);o(r,\"matrix\",n),o(r,\"number\",i),(0,a.deepExtend)(e,r);var c=(0,a.mapObject)(e,a.clone),u=(0,a.mapObject)(r,a.clone);return t(\"config\",c,s,u),c}return(0,a.mapObject)(e,a.clone)}return s.MATRIX_OPTIONS=n,s.NUMBER_OPTIONS=i,Object.keys(r.DEFAULT_CONFIG).forEach((function(t){Object.defineProperty(s,t,{get:function(){return e[t]},enumerable:!0,configurable:!0})})),s},t.NUMBER_OPTIONS=t.MATRIX_OPTIONS=void 0;var n=[\"Matrix\",\"Array\"];t.MATRIX_OPTIONS=n;var i=[\"number\",\"BigNumber\",\"Fraction\"];function o(e,t,n){void 0===e[t]||function(e,t){return-1!==e.indexOf(t)}(n,e[t])||console.warn('Warning: Unknown value \"'+e[t]+'\" for configuration option \"'+t+'\". Available options: '+n.map((function(e){return JSON.stringify(e)})).join(\", \")+\".\")}t.NUMBER_OPTIONS=i})),s=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.config=void 0;var i=function(e){if(e)throw new Error(\"The global config is readonly. \\nPlease create a mathjs instance if you want to change the default configuration. \\nExample:\\n\\n  import { create, all } from 'mathjs';\\n  const mathjs = create(all);\\n  mathjs.config({ number: 'BigNumber' });\\n\");return Object.freeze(r.DEFAULT_CONFIG)};t.config=i,n(i,r.DEFAULT_CONFIG,{MATRIX_OPTIONS:o.MATRIX_OPTIONS,NUMBER_OPTIONS:o.NUMBER_OPTIONS})})),c=t((function(e,t){e.exports=function(){function e(){return!0}function t(){return!1}function n(){}return function r(){var i=[{name:\"number\",test:function(e){return\"number\"==typeof e}},{name:\"string\",test:function(e){return\"string\"==typeof e}},{name:\"boolean\",test:function(e){return\"boolean\"==typeof e}},{name:\"Function\",test:function(e){return\"function\"==typeof e}},{name:\"Array\",test:Array.isArray},{name:\"Date\",test:function(e){return e instanceof Date}},{name:\"RegExp\",test:function(e){return e instanceof RegExp}},{name:\"Object\",test:function(e){return\"object\"==typeof e&&null!==e&&e.constructor===Object}},{name:\"null\",test:function(e){return null===e}},{name:\"undefined\",test:function(e){return void 0===e}}],a={name:\"any\",test:e},o=[],s=[],c={types:i,conversions:s,ignore:o};function u(e){var t=F(c.types,(function(t){return t.name===e}));if(t)return t;if(\"any\"===e)return a;var n=F(c.types,(function(t){return t.name.toLowerCase()===e.toLowerCase()}));throw new TypeError('Unknown type \"'+e+'\"'+(n?'. Did you mean \"'+n.name+'\"?':\"\"))}function l(e){return e===a?999:c.types.indexOf(e)}function d(e){var t=F(c.types,(function(t){return t.test(e)}));if(t)return t.name;throw new TypeError(\"Value has unknown type. Value: \"+e)}function f(e){return e.map((function(e){var t=e.types.map(x);return(e.restParam?\"...\":\"\")+t.join(\"|\")})).join(\",\")}function p(e,t){var n=0===e.indexOf(\"...\"),r=(n?e.length>3?e.slice(3):\"any\":e).split(\"|\").map(C).filter(T).filter(E),i=function(e,t){var n={};return e.forEach((function(e){-1!==t.indexOf(e.from)||-1===t.indexOf(e.to)||n[e.from]||(n[e.from]=e)})),Object.keys(n).map((function(e){return n[e]}))}(t,r),a=r.map((function(e){var t=u(e);return{name:e,typeIndex:l(t),test:t.test,conversion:null,conversionIndex:-1}})),o=i.map((function(e){var n=u(e.from);return{name:e.from,typeIndex:l(n),test:n.test,conversion:e,conversionIndex:t.indexOf(e)}}));return{types:a.concat(o),restParam:n}}function m(e){var t=B(e);return!!t&&t.restParam}function h(e){return e.types.some((function(e){return null!=e.conversion}))}function y(t){if(t&&0!==t.types.length){if(1===t.types.length)return u(t.types[0].name).test;if(2===t.types.length){var n=u(t.types[0].name).test,r=u(t.types[1].name).test;return function(e){return n(e)||r(e)}}var i=t.types.map((function(e){return u(e.name).test}));return function(e){for(var t=0;t<i.length;t++)if(i[t](e))return!0;return!1}}return e}function v(e){var t,n,r,i;if(m(e)){var a=(t=(i=e,i.slice(0,i.length-1)).map(y)).length,o=y(B(e));return function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return function(e){for(var t=a;t<e.length;t++)if(!o(e[t]))return!1;return!0}(e)&&e.length>=a+1}}return 0===e.length?function(e){return 0===e.length}:1===e.length?(n=y(e[0]),function(e){return n(e[0])&&1===e.length}):2===e.length?(n=y(e[0]),r=y(e[1]),function(e){return n(e[0])&&r(e[1])&&2===e.length}):(t=e.map(y),function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return e.length===t.length})}function g(e,t){return t<e.params.length?e.params[t]:m(e.params)?B(e.params):null}function b(e,t,n){var r=g(e,t);return(r?n?r.types.filter(D):r.types:[]).map(x)}function x(e){return e.name}function D(e){return null===e.conversion||void 0===e.conversion}function _(e,t){var n=function(e){for(var t={},n=0;n<e.length;n++)t[e[n]]=!0;return Object.keys(t)}(U(e,(function(e){return b(e,t,!1)})));return-1!==n.indexOf(\"any\")?[\"any\"]:n}function w(e,t,n){var r,i,a,o=e||\"unnamed\",s=n;for(a=0;a<t.length;a++){var c=s.filter((function(e){var n=y(g(e,a));return(a<e.params.length||m(e.params))&&n(t[a])}));if(0===c.length){if((i=_(s,a)).length>0){var u=d(t[a]);return(r=new TypeError(\"Unexpected type of argument in function \"+o+\" (expected: \"+i.join(\" or \")+\", actual: \"+u+\", index: \"+a+\")\")).data={category:\"wrongType\",fn:o,index:a,actual:u,expected:i},r}}else s=c}var l=s.map((function(e){return m(e.params)?1/0:e.params.length}));if(t.length<Math.min.apply(null,l))return i=_(s,a),(r=new TypeError(\"Too few arguments in function \"+o+\" (expected: \"+i.join(\" or \")+\", index: \"+t.length+\")\")).data={category:\"tooFewArgs\",fn:o,index:t.length,expected:i},r;var f=Math.max.apply(null,l);return t.length>f?((r=new TypeError(\"Too many arguments in function \"+o+\" (expected: \"+f+\", actual: \"+t.length+\")\")).data={category:\"tooManyArgs\",fn:o,index:t.length,expectedLength:f},r):((r=new TypeError('Arguments of type \"'+t.join(\", \")+'\" do not match any of the defined signatures of function '+o+\".\")).data={category:\"mismatch\",actual:t.map(d)},r)}function N(e){for(var t=999,n=0;n<e.types.length;n++)D(e.types[n])&&(t=Math.min(t,e.types[n].typeIndex));return t}function M(e){for(var t=999,n=0;n<e.types.length;n++)D(e.types[n])||(t=Math.min(t,e.types[n].conversionIndex));return t}function O(e,t){var n;return 0!=(n=e.restParam-t.restParam)||0!=(n=h(e)-h(t))||0!=(n=N(e)-N(t))?n:M(e)-M(t)}function S(e,t){var n,r,i=Math.min(e.params.length,t.params.length);if(0!=(r=e.params.some(h)-t.params.some(h)))return r;for(n=0;n<i;n++)if(0!=(r=h(e.params[n])-h(t.params[n])))return r;for(n=0;n<i;n++)if(0!==(r=O(e.params[n],t.params[n])))return r;return e.params.length-t.params.length}function P(e){var t,n,r,i,a=[],o=[];switch(e.types.forEach((function(e){e.conversion&&(a.push(u(e.conversion.from).test),o.push(e.conversion.convert))})),o.length){case 0:return function(e){return e};case 1:return t=a[0],r=o[0],function(e){return t(e)?r(e):e};case 2:return t=a[0],n=a[1],r=o[0],i=o[1],function(e){return t(e)?r(e):n(e)?i(e):e};default:return function(e){for(var t=0;t<o.length;t++)if(a[t](e))return o[t](e);return e}}}function j(e,t){return function e(n,r,i){if(r<n.length){var a,o=n[r],s=t?o.types.filter(D):o.types;if(o.restParam){var c=s.filter(D);a=c.length<s.length?[c,s]:[s]}else a=s.map((function(e){return[e]}));return U(a,(function(t){return e(n,r+1,i.concat([t]))}))}return[i.map((function(e,t){return{types:e,restParam:t===n.length-1&&m(n)}}))]}(e,0,[])}function A(e,r){if(0===Object.keys(r).length)throw new SyntaxError(\"No signatures provided\");var i=[];Object.keys(r).map((function(e){return function(e,t,n){var r=[];return\"\"!==e.trim()&&(r=e.split(\",\").map(C).map((function(e,t,r){var i=p(e,n);if(i.restParam&&t!==r.length-1)throw new SyntaxError('Unexpected rest parameter \"'+e+'\": only allowed for the last parameter');return i}))),r.some(I)?null:{params:r,fn:t}}(e,r[e],c.conversions)})).filter(k).forEach((function(e){var t=F(i,(function(t){return function(e,t){for(var n=Math.max(e.params.length,t.params.length),r=0;r<n;r++)if(!q(b(e,r,!0),b(t,r,!0)))return!1;var i=e.params.length,a=t.params.length,o=m(e.params),s=m(t.params);return o?s?i===a:a>=i:s?i>=a:i===a}(t,e)}));if(t)throw new TypeError('Conflicting signatures \"'+f(t.params)+'\" and \"'+f(e.params)+'\".');i.push(e)}));var a=U(i,(function(e){return(e?j(e.params,!1):[]).map((function(t){return{params:t,fn:e.fn}}))})).filter(k);a.sort(S);var o=a[0]&&a[0].params.length<=2&&!m(a[0].params),s=a[1]&&a[1].params.length<=2&&!m(a[1].params),u=a[2]&&a[2].params.length<=2&&!m(a[2].params),l=a[3]&&a[3].params.length<=2&&!m(a[3].params),d=a[4]&&a[4].params.length<=2&&!m(a[4].params),g=a[5]&&a[5].params.length<=2&&!m(a[5].params),x=o&&s&&u&&l&&d&&g,D=a.map((function(e){return v(e.params)})),_=o?y(a[0].params[0]):t,N=s?y(a[1].params[0]):t,M=u?y(a[2].params[0]):t,O=l?y(a[3].params[0]):t,A=d?y(a[4].params[0]):t,E=g?y(a[5].params[0]):t,T=o?y(a[0].params[1]):t,B=s?y(a[1].params[1]):t,R=u?y(a[2].params[1]):t,L=l?y(a[3].params[1]):t,H=d?y(a[4].params[1]):t,Z=g?y(a[5].params[1]):t,V=a.map((function(e){return function(e,t){var n=t;if(e.some(h)){var r=m(e),i=e.map(P);n=function(){for(var e=[],n=r?arguments.length-1:arguments.length,a=0;a<n;a++)e[a]=i[a](arguments[a]);return r&&(e[n]=arguments[n].map(i[n])),t.apply(this,e)}}var a=n;if(m(e)){var o=e.length-1;a=function(){return n.apply(this,z(arguments,0,o).concat([z(arguments,o)]))}}return a}(e.params,e.fn)})),W=o?V[0]:n,G=s?V[1]:n,$=u?V[2]:n,Q=l?V[3]:n,X=d?V[4]:n,Y=g?V[5]:n,J=o?a[0].params.length:-1,K=s?a[1].params.length:-1,ee=u?a[2].params.length:-1,te=l?a[3].params.length:-1,ne=d?a[4].params.length:-1,re=g?a[5].params.length:-1,ie=x?6:0,ae=a.length,oe=function(){for(var t=ie;t<ae;t++)if(D[t](arguments))return V[t].apply(this,arguments);throw w(e,arguments,a)},se=function e(t,n){return arguments.length===J&&_(t)&&T(n)?W.apply(e,arguments):arguments.length===K&&N(t)&&B(n)?G.apply(e,arguments):arguments.length===ee&&M(t)&&R(n)?$.apply(e,arguments):arguments.length===te&&O(t)&&L(n)?Q.apply(e,arguments):arguments.length===ne&&A(t)&&H(n)?X.apply(e,arguments):arguments.length===re&&E(t)&&Z(n)?Y.apply(e,arguments):oe.apply(e,arguments)};try{Object.defineProperty(se,\"name\",{value:e})}catch(e){}return se.signatures=function(e){var t={};return e.forEach((function(e){e.params.some(h)||j(e.params,!0).forEach((function(n){t[f(n)]=e.fn}))})),t}(a),se}function E(e){return-1===c.ignore.indexOf(e)}function C(e){return e.trim()}function T(e){return!!e}function k(e){return null!==e}function I(e){return 0===e.types.length}function B(e){return e[e.length-1]}function z(e,t,n){return Array.prototype.slice.call(e,t,n)}function R(e,t){return-1!==e.indexOf(t)}function q(e,t){for(var n=0;n<e.length;n++)if(R(t,e[n]))return!0;return!1}function F(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return e[n]}function U(e,t){return Array.prototype.concat.apply([],e.map(t))}function L(e){for(var t=\"\",n=0;n<e.length;n++){var r=e[n];if((\"object\"==typeof r.signatures||\"string\"==typeof r.signature)&&\"\"!==r.name)if(\"\"===t)t=r.name;else if(t!==r.name){var i=new Error(\"Function names do not match (expected: \"+t+\", actual: \"+r.name+\")\");throw i.data={actual:r.name,expected:t},i}}return t}function H(e){var t,n={};function r(e,r){if(n.hasOwnProperty(e)&&r!==n[e])throw(t=new Error('Signature \"'+e+'\" is defined twice')).data={signature:e},t}for(var i=0;i<e.length;i++){var a=e[i];if(\"object\"==typeof a.signatures)for(var o in a.signatures)a.signatures.hasOwnProperty(o)&&(r(o,a.signatures[o]),n[o]=a.signatures[o]);else{if(\"string\"!=typeof a.signature)throw(t=new TypeError(\"Function is no typed-function (index: \"+i+\")\")).data={index:i},t;r(a.signature,a),n[a.signature]=a}}return n}return(c=A(\"typed\",{\"string, Object\":A,Object:function(e){var t=[];for(var n in e)e.hasOwnProperty(n)&&t.push(e[n]);return A(L(t),e)},\"...Function\":function(e){return A(L(e),H(e))},\"string, ...Function\":function(e,t){return A(e,H(t))}})).create=r,c.types=i,c.conversions=s,c.ignore=o,c.convert=function(e,t){var n=d(e);if(t===n)return e;for(var r=0;r<c.conversions.length;r++){var i=c.conversions[r];if(i.from===n&&i.to===t)return i.convert(e)}throw new Error(\"Cannot convert from \"+n+\" to \"+t)},c.find=function(e,t){if(!e.signatures)throw new TypeError(\"Function is no typed-function\");var n;if(\"string\"==typeof t){n=t.split(\",\");for(var r=0;r<n.length;r++)n[r]=n[r].trim()}else{if(!Array.isArray(t))throw new TypeError(\"String array or a comma separated string expected\");n=t}var i=n.join(\",\"),a=e.signatures[i];if(a)return a;throw new TypeError(\"Signature not found (signature: \"+(e.name||\"unnamed\")+\"(\"+n.join(\", \")+\"))\")},c.addType=function(e,t){if(!e||\"string\"!=typeof e.name||\"function\"!=typeof e.test)throw new TypeError(\"Object with properties {name: string, test: function} expected\");if(!1!==t)for(var n=0;n<c.types.length;n++)if(\"Object\"===c.types[n].name)return void c.types.splice(n,0,e);c.types.push(e)},c.addConversion=function(e){if(!e||\"string\"!=typeof e.from||\"string\"!=typeof e.to||\"function\"!=typeof e.convert)throw new TypeError(\"Object with properties {from: string, to: string, convert: function} expected\");c.conversions.push(e)},c}()}()})),u=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isInteger=function(e){if(\"boolean\"==typeof e)return!0;return!!isFinite(e)&&e===Math.round(e)},t.format=function(e,t){if(\"function\"==typeof t)return t(e);if(e===1/0)return\"Infinity\";if(e===-1/0)return\"-Infinity\";if(isNaN(e))return\"NaN\";var n,r=\"auto\";t&&(t.notation&&(r=t.notation),(0,i.isNumber)(t)?n=t:(0,i.isNumber)(t.precision)&&(n=t.precision));switch(r){case\"fixed\":return d(e,n);case\"exponential\":return f(e,n);case\"engineering\":return l(e,n);case\"auto\":return p(e,n,t&&t).replace(/((\\.\\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return\".\"!==e?e+t:t}));default:throw new Error('Unknown notation \"'+r+'\". Choose \"auto\", \"exponential\", or \"fixed\".')}},t.splitNumber=u,t.toEngineering=l,t.toFixed=d,t.toExponential=f,t.toPrecision=p,t.roundDigits=m,t.digits=function(e){return e.toExponential().replace(/e.*$/,\"\").replace(/^0\\.?0*|\\./,\"\").length},t.nearlyEqual=function(e,t,n){if(null==n)return e===t;if(e===t)return!0;if(isNaN(e)||isNaN(t))return!1;if(isFinite(e)&&isFinite(t)){var r=Math.abs(e-t);return r<y||r<=Math.max(Math.abs(e),Math.abs(t))*n}return!1},t.tanh=t.sinh=t.cosh=t.atanh=t.asinh=t.acosh=t.DBL_EPSILON=t.expm1=t.cbrt=t.log1p=t.log10=t.log2=t.sign=void 0;var n=Math.sign||function(e){return e>0?1:e<0?-1:0};t.sign=n;var r=Math.log2||function(e){return Math.log(e)/Math.LN2};t.log2=r;var a=Math.log10||function(e){return Math.log(e)/Math.LN10};t.log10=a;var o=Math.log1p||function(e){return Math.log(e+1)};t.log1p=o;var s=Math.cbrt||function(e){if(0===e)return e;var t,n=e<0;return n&&(e=-e),t=isFinite(e)?(e/((t=Math.exp(Math.log(e)/3))*t)+2*t)/3:e,n?-t:t};t.cbrt=s;var c=Math.expm1||function(e){return e>=2e-4||e<=-2e-4?Math.exp(e)-1:e+e*e/2+e*e*e/6};function u(e){var t=String(e).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);if(!t)throw new SyntaxError(\"Invalid number \"+e);var n=t[1],r=t[2],i=parseFloat(t[4]||\"0\"),a=r.indexOf(\".\");i+=-1!==a?a-1:r.length-1;var o=r.replace(\".\",\"\").replace(/^0*/,(function(e){return i-=e.length,\"\"})).replace(/0*$/,\"\").split(\"\").map((function(e){return parseInt(e)}));return 0===o.length&&(o.push(0),i++),{sign:n,coefficients:o,exponent:i}}function l(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=m(u(e),t),r=n.exponent,a=n.coefficients,o=r%3==0?r:r<0?r-3-r%3:r-r%3;if((0,i.isNumber)(t))for(;t>a.length||r-o+1>a.length;)a.push(0);else for(var s=Math.abs(r-o)-(a.length-1),c=0;c<s;c++)a.push(0);for(var l=Math.abs(r-o),d=1;l>0;)d++,l--;var f=a.slice(d).join(\"\"),p=(0,i.isNumber)(t)&&f.length||f.match(/[1-9]/)?\".\"+f:\"\",h=a.slice(0,d).join(\"\")+p+\"e\"+(r>=0?\"+\":\"\")+o.toString();return n.sign+h}function d(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=u(e),r=\"number\"==typeof t?m(n,n.exponent+1+t):n,i=r.coefficients,a=r.exponent+1,o=a+(t||0);return i.length<o&&(i=i.concat(h(o-i.length))),a<0&&(i=h(1-a).concat(i),a=1),a<i.length&&i.splice(a,0,0===a?\"0.\":\".\"),r.sign+i.join(\"\")}function f(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=u(e),r=t?m(n,t):n,i=r.coefficients,a=r.exponent;i.length<t&&(i=i.concat(h(t-i.length)));var o=i.shift();return r.sign+o+(i.length>0?\".\"+i.join(\"\"):\"\")+\"e\"+(a>=0?\"+\":\"\")+a}function p(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var r=n&&void 0!==n.lowerExp?n.lowerExp:-3,i=n&&void 0!==n.upperExp?n.upperExp:5,a=u(e),o=t?m(a,t):a;if(o.exponent<r||o.exponent>=i)return f(e,t);var s=o.coefficients,c=o.exponent;s.length<t&&(s=s.concat(h(t-s.length))),s=s.concat(h(c-s.length+1+(s.length<t?t-s.length:0)));var l=c>0?c:0;return l<(s=h(-c).concat(s)).length-1&&s.splice(l+1,0,\".\"),o.sign+s.join(\"\")}function m(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},r=n.coefficients;t<=0;)r.unshift(0),n.exponent++,t++;if(r.length>t&&r.splice(t,r.length-t)[0]>=5){var i=t-1;for(r[i]++;10===r[i];)r.pop(),0===i&&(r.unshift(0),n.exponent++,i++),r[--i]++}return n}function h(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}t.expm1=c;var y=Number.EPSILON||2220446049250313e-31;t.DBL_EPSILON=y;var v=Math.acosh||function(e){return Math.log(Math.sqrt(e*e-1)+e)};t.acosh=v;var g=Math.asinh||function(e){return Math.log(Math.sqrt(e*e+1)+e)};t.asinh=g;var b=Math.atanh||function(e){return Math.log((1+e)/(1-e))/2};t.atanh=b;var x=Math.cosh||function(e){return(Math.exp(e)+Math.exp(-e))/2};t.cosh=x;var D=Math.sinh||function(e){return(Math.exp(e)-Math.exp(-e))/2};t.sinh=D;var _=Math.tanh||function(e){var t=Math.exp(2*e);return(t-1)/(t+1)};t.tanh=_})),l=t((function(e,t){function n(e,t){var n=e.e,r=n%3==0?n:n<0?n-3-n%3:n-n%3,i=e.mul(Math.pow(10,-r)),a=i.toPrecision(t);return-1!==a.indexOf(\"e\")&&(a=i.toString()),a+\"e\"+(n>=0?\"+\":\"\")+r.toString()}function r(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()}function i(e,t){return e.toFixed(t)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.format=function(e,t){if(\"function\"==typeof t)return t(e);if(!e.isFinite())return e.isNaN()?\"NaN\":e.gt(0)?\"Infinity\":\"-Infinity\";var a,o=\"auto\";void 0!==t&&(t.notation&&(o=t.notation),\"number\"==typeof t?a=t:t.precision&&(a=t.precision));switch(o){case\"fixed\":return i(e,a);case\"exponential\":return r(e,a);case\"engineering\":return n(e,a);case\"auto\":var s=t&&void 0!==t.lowerExp?t.lowerExp:-3,c=t&&void 0!==t.upperExp?t.upperExp:5;if(e.isZero())return\"0\";var u=e.toSignificantDigits(a),l=u.e;return(l>=s&&l<c?u.toFixed():r(e,a)).replace(/((\\.\\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return\".\"!==e?e+t:t}));default:throw new Error('Unknown notation \"'+o+'\". Choose \"auto\", \"exponential\", or \"fixed\".')}},t.toEngineering=n,t.toExponential=r,t.toFixed=i})),d=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(e,t){return\"number\"==typeof e?(0,u.format)(e,t):(0,i.isBigNumber)(e)?(0,l.format)(e,t):function(e){return e&&\"object\"===n(e)&&\"number\"==typeof e.s&&\"number\"==typeof e.n&&\"number\"==typeof e.d||!1}(e)?t&&\"decimal\"===t.fraction?e.toString():e.s*e.n+\"/\"+e.d:Array.isArray(e)?function e(t,n){if(Array.isArray(t)){for(var i=\"[\",a=t.length,o=0;o<a;o++)0!==o&&(i+=\", \"),i+=e(t[o],n);return i+=\"]\"}return r(t,n)}(e,t):(0,i.isString)(e)?'\"'+e+'\"':\"function\"==typeof e?e.syntax?String(e.syntax):\"function\":e&&\"object\"===n(e)?\"function\"==typeof e.format?e.format(t):e&&e.toString(t)!=={}.toString()?e.toString(t):\"{\"+Object.keys(e).map((function(n){return'\"'+n+'\": '+r(e[n],t)})).join(\", \")+\"}\":String(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.endsWith=function(e,t){var n=e.length-t.length,r=e.length;return e.substring(n,r)===t},t.format=r,t.stringify=function(e){var t=String(e),n=\"\",r=0;for(;r<t.length;){var i=t.charAt(r);\"\\\\\"===i?(n+=i,r++,\"\"!==(i=t.charAt(r))&&-1!=='\"\\\\/bfnrtu'.indexOf(i)||(n+=\"\\\\\"),n+=i):n+='\"'===i?'\\\\\"':i,r++}return'\"'+n+'\"'},t.escape=function(e){var t=String(e);return t=t.replace(/&/g,\"&amp;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#39;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")},t.compareText=function(e,t){if(!(0,i.isString)(e))throw new TypeError(\"Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: \"+(0,i.typeOf)(e)+\", index: 0)\");if(!(0,i.isString)(t))throw new TypeError(\"Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: \"+(0,i.typeOf)(t)+\", index: 1)\");return e===t?0:e>t?1:-1}})),f=t((function(e,t){function n(e,t,r){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");this.actual=e,this.expected=t,this.relation=r,this.message=\"Dimension mismatch (\"+(Array.isArray(e)?\"[\"+e.join(\", \")+\"]\":e)+\" \"+(this.relation||\"!=\")+\" \"+(Array.isArray(t)?\"[\"+t.join(\", \")+\"]\":t)+\")\",this.stack=(new Error).stack}Object.defineProperty(t,\"__esModule\",{value:!0}),t.DimensionError=n,n.prototype=new RangeError,n.prototype.constructor=RangeError,n.prototype.name=\"DimensionError\",n.prototype.isDimensionError=!0})),p=t((function(e,t){function n(e,t,r){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=r),void 0!==this.min&&this.index<this.min?this.message=\"Index out of range (\"+this.index+\" < \"+this.min+\")\":void 0!==this.max&&this.index>=this.max?this.message=\"Index out of range (\"+this.index+\" > \"+(this.max-1)+\")\":this.message=\"Index out of range (\"+this.index+\")\",this.stack=(new Error).stack}Object.defineProperty(t,\"__esModule\",{value:!0}),t.IndexError=n,n.prototype=new RangeError,n.prototype.constructor=RangeError,n.prototype.name=\"IndexError\",n.prototype.isIndexError=!0})),m=t((function(e,t){function n(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function r(e){if(!Array.isArray(e))return e;var t=[];return e.forEach((function e(n){Array.isArray(n)?n.forEach(e):t.push(n)})),t}Object.defineProperty(t,\"__esModule\",{value:!0}),t.arraySize=n,t.validate=function(e,t){if(0===t.length){if(Array.isArray(e))throw new f.DimensionError(e.length,0)}else!function e(t,n,r){var i,a=t.length;if(a!==n[r])throw new f.DimensionError(a,n[r]);if(r<n.length-1){var o=r+1;for(i=0;i<a;i++){var s=t[i];if(!Array.isArray(s))throw new f.DimensionError(n.length-1,n.length,\"<\");e(t[i],n,o)}}else for(i=0;i<a;i++)if(Array.isArray(t[i]))throw new f.DimensionError(n.length+1,n.length,\">\")}(e,t,0)},t.validateIndex=function(e,t){if(!(0,i.isNumber)(e)||!(0,u.isInteger)(e))throw new TypeError(\"Index must be an integer (value: \"+e+\")\");if(e<0||\"number\"==typeof t&&e>=t)throw new p.IndexError(e,t)},t.resize=function(e,t,n){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError(\"Array expected\");if(0===t.length)throw new Error(\"Resizing to scalar is not supported\");t.forEach((function(e){if(!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<0)throw new TypeError(\"Invalid size, must contain positive integers (size: \"+(0,d.format)(t)+\")\")}));var r=void 0!==n?n:0;return function e(t,n,r,i){var a,o,s=t.length,c=n[r],u=Math.min(s,c);if(t.length=c,r<n.length-1){var l=r+1;for(a=0;a<u;a++)o=t[a],Array.isArray(o)||(o=[o],t[a]=o),e(o,n,l,i);for(a=u;a<c;a++)o=[],t[a]=o,e(o,n,l,i)}else{for(a=0;a<u;a++)for(;Array.isArray(t[a]);)t[a]=t[a][0];for(a=u;a<c;a++)t[a]=i}}(e,t,0,r),e},t.reshape=function(e,t){var i,a=r(e);function o(e){return e.reduce((function(e,t){return e*t}))}if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError(\"Array expected\");if(0===t.length)throw new f.DimensionError(0,o(n(e)),\"!=\");for(var s=1,c=0;c<t.length;c++)s*=t[c];if(a.length!==s)throw new f.DimensionError(o(t),o(n(e)),\"!=\");try{i=function(e,t){for(var n,r=e,i=t.length-1;i>0;i--){var a=t[i];n=[];for(var o=r.length/a,s=0;s<o;s++)n.push(r.slice(s*a,(s+1)*a));r=n}return r}(a,t)}catch(r){if(r instanceof f.DimensionError)throw new f.DimensionError(o(t),o(n(e)),\"!=\");throw r}return i},t.squeeze=function(e,t){var r=t||n(e);for(;Array.isArray(e)&&1===e.length;)e=e[0],r.shift();var i=r.length;for(;1===r[i-1];)i--;i<r.length&&(e=function e(t,n,r){var i,a;if(r<n){var o=r+1;for(i=0,a=t.length;i<a;i++)t[i]=e(t[i],n,o)}else for(;Array.isArray(t);)t=t[0];return t}(e,i,0),r.length=i);return e},t.unsqueeze=function(e,t,r,i){var a=i||n(e);if(r)for(var o=0;o<r;o++)e=[e],a.unshift(1);e=function e(t,n,r){var i,a;if(Array.isArray(t)){var o=r+1;for(i=0,a=t.length;i<a;i++)t[i]=e(t[i],n,o)}else for(var s=r;s<n;s++)t=[t];return t}(e,t,0);for(;a.length<t;)a.push(1);return e},t.flatten=r,t.map=function(e,t){return Array.prototype.map.call(e,t)},t.forEach=function(e,t){Array.prototype.forEach.call(e,t)},t.filter=function(e,t){if(1!==n(e).length)throw new Error(\"Only one dimensional matrices supported\");return Array.prototype.filter.call(e,t)},t.filterRegExp=function(e,t){if(1!==n(e).length)throw new Error(\"Only one dimensional matrices supported\");return Array.prototype.filter.call(e,(function(e){return t.test(e)}))},t.join=function(e,t){return Array.prototype.join.call(e,t)},t.identify=function(e){if(!Array.isArray(e))throw new TypeError(\"Array input expected\");if(0===e.length)return e;var t=[],n=0;t[0]={value:e[0],identifier:0};for(var r=1;r<e.length;r++)e[r]===e[r-1]?n++:n=0,t.push({value:e[r],identifier:n});return t},t.generalize=function(e){if(!Array.isArray(e))throw new TypeError(\"Array input expected\");if(0===e.length)return e;for(var t=[],n=0;n<e.length;n++)t.push(e[n].value);return t},t.getArrayDataType=function e(t,n){for(var r,i=0,a=0;a<t.length;a++){var o=t[a],s=Array.isArray(o);if(0===a&&s&&(i=o.length),s&&o.length!==i)return;var c=s?e(o,n):n(o);if(void 0===r)r=c;else if(r!==c)return\"mixed\"}return r},t.last=function(e){return e[e.length-1]},t.initial=function(e){return e.slice(0,e.length-1)},t.contains=function(e,t){return-1!==e.indexOf(t)}})),h=t((function(e,t){function n(e){var t={};function n(e,i){if(r(e)){if((0,m.contains)(e.dependencies,i.fn||i.name))return!0;if(e.dependencies.some((function(e){return n(t[e],i)})))return!0}return!1}e.forEach((function(e){t[e.fn]=e}));var i=[];function a(e){for(var t=0;t<i.length&&!n(i[t],e);)t++;i.splice(t,0,e)}return e.filter(r).forEach(a),e.filter((function(e){return!r(e)})).forEach(a),i}function r(e){return\"function\"==typeof e&&\"string\"==typeof e.fn&&Array.isArray(e.dependencies)}function i(e,t,n){if(!t.filter((function(e){return!o(e)})).every((function(e){return void 0!==n[e]}))){var r=t.filter((function(e){return void 0===n[e]}));throw new Error('Cannot create function \"'.concat(e,'\", ')+\"some dependencies are missing: \".concat(r.map((function(e){return'\"'.concat(e,'\"')})).join(\", \"),\".\"))}}function o(e){return e&&\"?\"===e[0]}function s(e){return e&&\"?\"===e[0]?e.slice(1):e}Object.defineProperty(t,\"__esModule\",{value:!0}),t.factory=function(e,t,n,r){function o(r){var o=(0,a.pickShallow)(r,t.map(s));return i(e,t,r),n(o)}o.isFactory=!0,o.fn=e,o.dependencies=t.slice().sort(),r&&(o.meta=r);return o},t.sortFactories=n,t.create=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n(e).forEach((function(e){return e(t)})),t},t.isFactory=r,t.assertDependencies=i,t.isOptionalDependency=o,t.stripOptionalNotation=s})),y=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTyped=void 0;var n,r=(n=c)&&n.__esModule?n:{default:n};var a=function(){return a=r.default.create,r.default},o=[\"?BigNumber\",\"?Complex\",\"?DenseMatrix\",\"?Fraction\"],s=(0,h.factory)(\"typed\",o,(function(e){var t=e.BigNumber,n=e.Complex,r=e.DenseMatrix,o=e.Fraction,s=a();return s.types=[{name:\"number\",test:i.isNumber},{name:\"Complex\",test:i.isComplex},{name:\"BigNumber\",test:i.isBigNumber},{name:\"Fraction\",test:i.isFraction},{name:\"Unit\",test:i.isUnit},{name:\"string\",test:i.isString},{name:\"Chain\",test:i.isChain},{name:\"Array\",test:i.isArray},{name:\"Matrix\",test:i.isMatrix},{name:\"DenseMatrix\",test:i.isDenseMatrix},{name:\"SparseMatrix\",test:i.isSparseMatrix},{name:\"Range\",test:i.isRange},{name:\"Index\",test:i.isIndex},{name:\"boolean\",test:i.isBoolean},{name:\"ResultSet\",test:i.isResultSet},{name:\"Help\",test:i.isHelp},{name:\"function\",test:i.isFunction},{name:\"Date\",test:i.isDate},{name:\"RegExp\",test:i.isRegExp},{name:\"null\",test:i.isNull},{name:\"undefined\",test:i.isUndefined},{name:\"AccessorNode\",test:i.isAccessorNode},{name:\"ArrayNode\",test:i.isArrayNode},{name:\"AssignmentNode\",test:i.isAssignmentNode},{name:\"BlockNode\",test:i.isBlockNode},{name:\"ConditionalNode\",test:i.isConditionalNode},{name:\"ConstantNode\",test:i.isConstantNode},{name:\"FunctionNode\",test:i.isFunctionNode},{name:\"FunctionAssignmentNode\",test:i.isFunctionAssignmentNode},{name:\"IndexNode\",test:i.isIndexNode},{name:\"Node\",test:i.isNode},{name:\"ObjectNode\",test:i.isObjectNode},{name:\"OperatorNode\",test:i.isOperatorNode},{name:\"ParenthesisNode\",test:i.isParenthesisNode},{name:\"RangeNode\",test:i.isRangeNode},{name:\"SymbolNode\",test:i.isSymbolNode},{name:\"Object\",test:i.isObject}],s.conversions=[{from:\"number\",to:\"BigNumber\",convert:function(e){if(t||l(e),(0,u.digits)(e)>15)throw new TypeError(\"Cannot implicitly convert a number with >15 significant digits to BigNumber (value: \"+e+\"). Use function bignumber(x) to convert to BigNumber.\");return new t(e)}},{from:\"number\",to:\"Complex\",convert:function(e){return n||d(e),new n(e,0)}},{from:\"number\",to:\"string\",convert:function(e){return e+\"\"}},{from:\"BigNumber\",to:\"Complex\",convert:function(e){return n||d(e),new n(e.toNumber(),0)}},{from:\"Fraction\",to:\"BigNumber\",convert:function(e){throw new TypeError(\"Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.\")}},{from:\"Fraction\",to:\"Complex\",convert:function(e){return n||d(e),new n(e.valueOf(),0)}},{from:\"number\",to:\"Fraction\",convert:function(e){o||f(e);var t=new o(e);if(t.valueOf()!==e)throw new TypeError(\"Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: \"+e+\"). Use function fraction(x) to convert to Fraction.\");return t}},{from:\"string\",to:\"number\",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert \"'+e+'\" to a number');return t}},{from:\"string\",to:\"BigNumber\",convert:function(e){t||l(e);try{return new t(e)}catch(t){throw new Error('Cannot convert \"'+e+'\" to BigNumber')}}},{from:\"string\",to:\"Fraction\",convert:function(e){o||f(e);try{return new o(e)}catch(t){throw new Error('Cannot convert \"'+e+'\" to Fraction')}}},{from:\"string\",to:\"Complex\",convert:function(e){n||d(e);try{return new n(e)}catch(t){throw new Error('Cannot convert \"'+e+'\" to Complex')}}},{from:\"boolean\",to:\"number\",convert:function(e){return+e}},{from:\"boolean\",to:\"BigNumber\",convert:function(e){return t||l(e),new t(+e)}},{from:\"boolean\",to:\"Fraction\",convert:function(e){return o||f(e),new o(+e)}},{from:\"boolean\",to:\"string\",convert:function(e){return String(e)}},{from:\"Array\",to:\"Matrix\",convert:function(e){return r||function(){throw new Error(\"Cannot convert array into a Matrix: no class 'DenseMatrix' provided\")}(),new r(e)}},{from:\"Matrix\",to:\"Array\",convert:function(e){return e.valueOf()}}],s}));function l(e){throw new Error(\"Cannot convert value \".concat(e,\" into a BigNumber: no class 'BigNumber' provided\"))}function d(e){throw new Error(\"Cannot convert value \".concat(e,\" into a Complex number: no class 'Complex' provided\"))}function f(e){throw new Error(\"Cannot convert value \".concat(e,\" into a Fraction, no class 'Fraction' provided.\"))}t.createTyped=s})),v=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createResultSet=void 0;var n=[],r=(0,h.factory)(\"ResultSet\",n,(function(){function e(t){if(!(this instanceof e))throw new SyntaxError(\"Constructor must be called with the new operator\");this.entries=t||[]}return e.prototype.type=\"ResultSet\",e.prototype.isResultSet=!0,e.prototype.valueOf=function(){return this.entries},e.prototype.toString=function(){return\"[\"+this.entries.join(\", \")+\"]\"},e.prototype.toJSON=function(){return{mathjs:\"ResultSet\",entries:this.entries}},e.fromJSON=function(t){return new e(t.entries)},e}),{isClass:!0});t.createResultSet=r})),g=t((function(t){!function(e){var n,r,i,a,o=9e15,s=\"0123456789abcdef\",c=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",u=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",l={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-o,maxE:o,crypto:!1},d=!0,f=\"[DecimalError] Invalid argument: \",p=Math.floor,m=Math.pow,h=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,y=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,v=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,g=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,b=1e7,x=c.length-1,D=u.length-1,_={name:\"[object Decimal]\"};function w(e){var t,n,r,i=e.length-1,a=\"\",o=e[0];if(i>0){for(a+=o,t=1;t<i;t++)(n=7-(r=e[t]+\"\").length)&&(a+=k(n)),a+=r;(n=7-(r=(o=e[t])+\"\").length)&&(a+=k(n))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return a+o}function N(e,t,n){if(e!==~~e||e<t||e>n)throw Error(f+e)}function M(e,t,n,r){var i,a,o,s;for(a=e[0];a>=10;a/=10)--t;return--t<0?(t+=7,i=0):(i=Math.ceil((t+1)/7),t%=7),a=m(10,7-t),s=e[i]%a|0,null==r?t<3?(0==t?s=s/100|0:1==t&&(s=s/10|0),o=n<4&&99999==s||n>3&&49999==s||5e4==s||0==s):o=(n<4&&s+1==a||n>3&&s+1==a/2)&&(e[i+1]/a/100|0)==m(10,t-2)-1||(s==a/2||0==s)&&0==(e[i+1]/a/100|0):t<4?(0==t?s=s/1e3|0:1==t?s=s/100|0:2==t&&(s=s/10|0),o=(r||n<4)&&9999==s||!r&&n>3&&4999==s):o=((r||n<4)&&s+1==a||!r&&n>3&&s+1==a/2)&&(e[i+1]/a/1e3|0)==m(10,t-3)-1,o}function O(e,t,n){for(var r,i,a=[0],o=0,c=e.length;o<c;){for(i=a.length;i--;)a[i]*=t;for(a[0]+=s.indexOf(e.charAt(o++)),r=0;r<a.length;r++)a[r]>n-1&&(void 0===a[r+1]&&(a[r+1]=0),a[r+1]+=a[r]/n|0,a[r]%=n)}return a.reverse()}_.absoluteValue=_.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),P(e)},_.ceil=function(){return P(new this.constructor(this),this.e+1,2)},_.comparedTo=_.cmp=function(e){var t,n,r,i,a=this,o=a.d,s=(e=new a.constructor(e)).d,c=a.s,u=e.s;if(!o||!s)return c&&u?c!==u?c:o===s?0:!o^c<0?1:-1:NaN;if(!o[0]||!s[0])return o[0]?c:s[0]?-u:0;if(c!==u)return c;if(a.e!==e.e)return a.e>e.e^c<0?1:-1;for(t=0,n=(r=o.length)<(i=s.length)?r:i;t<n;++t)if(o[t]!==s[t])return o[t]>s[t]^c<0?1:-1;return r===i?0:r>i^c<0?1:-1},_.cosine=_.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r,i=t.d.length;i<32?(n=Math.ceil(i/3),r=(1/Z(4,n)).toString()):(n=16,r=\"2.3283064365386962890625e-10\");e.precision+=n,t=H(e,1,t.times(r),new e(1));for(var a=n;a--;){var o=t.times(t);t=o.times(o).minus(o).times(8).plus(1)}return e.precision-=n,t}(r,V(r,n)),r.precision=e,r.rounding=t,P(2==a||3==a?n.neg():n,e,t,!0)):new r(1):new r(NaN)},_.cubeRoot=_.cbrt=function(){var e,t,n,r,i,a,o,s,c,u,l=this,f=l.constructor;if(!l.isFinite()||l.isZero())return new f(l);for(d=!1,(a=l.s*m(l.s*l,1/3))&&Math.abs(a)!=1/0?r=new f(a.toString()):(n=w(l.d),(a=((e=l.e)-n.length+1)%3)&&(n+=1==a||-2==a?\"0\":\"00\"),a=m(n,1/3),e=p((e+1)/3)-(e%3==(e<0?-1:2)),(r=new f(n=a==1/0?\"5e\"+e:(n=a.toExponential()).slice(0,n.indexOf(\"e\")+1)+e)).s=l.s),o=(e=f.precision)+3;;)if(u=(c=(s=r).times(s).times(s)).plus(l),r=S(u.plus(l).times(s),u.plus(c),o+2,1),w(s.d).slice(0,o)===(n=w(r.d)).slice(0,o)){if(\"9999\"!=(n=n.slice(o-3,o+1))&&(i||\"4999\"!=n)){+n&&(+n.slice(1)||\"5\"!=n.charAt(0))||(P(r,e+1,1),t=!r.times(r).times(r).eq(l));break}if(!i&&(P(s,e+1,0),s.times(s).times(s).eq(l))){r=s;break}o+=4,i=1}return d=!0,P(r,e,f.rounding,t)},_.decimalPlaces=_.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=7*((e=t.length-1)-p(this.e/7)),e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},_.dividedBy=_.div=function(e){return S(this,new this.constructor(e))},_.dividedToIntegerBy=_.divToInt=function(e){var t=this.constructor;return P(S(this,new t(e),0,1,1),t.precision,t.rounding)},_.equals=_.eq=function(e){return 0===this.cmp(e)},_.floor=function(){return P(new this.constructor(this),this.e+1,3)},_.greaterThan=_.gt=function(e){return this.cmp(e)>0},_.greaterThanOrEqualTo=_.gte=function(e){var t=this.cmp(e);return 1==t||0===t},_.hyperbolicCosine=_.cosh=function(){var e,t,n,r,i,a=this,o=a.constructor,s=new o(1);if(!a.isFinite())return new o(a.s?1/0:NaN);if(a.isZero())return s;n=o.precision,r=o.rounding,o.precision=n+Math.max(a.e,a.sd())+4,o.rounding=1,(i=a.d.length)<32?t=(1/Z(4,e=Math.ceil(i/3))).toString():(e=16,t=\"2.3283064365386962890625e-10\"),a=H(o,1,a.times(t),new o(1),!0);for(var c,u=e,l=new o(8);u--;)c=a.times(a),a=s.minus(c.times(l.minus(c.times(l))));return P(a,o.precision=n,o.rounding=r,!0)},_.hyperbolicSine=_.sinh=function(){var e,t,n,r,i=this,a=i.constructor;if(!i.isFinite()||i.isZero())return new a(i);if(t=a.precision,n=a.rounding,a.precision=t+Math.max(i.e,i.sd())+4,a.rounding=1,(r=i.d.length)<3)i=H(a,2,i,i,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,i=H(a,2,i=i.times(1/Z(5,e)),i,!0);for(var o,s=new a(5),c=new a(16),u=new a(20);e--;)o=i.times(i),i=i.times(s.plus(o.times(c.times(o).plus(u))))}return a.precision=t,a.rounding=n,P(i,t,n,!0)},_.hyperbolicTangent=_.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,S(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},_.inverseCosine=_.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),i=n.precision,a=n.rounding;return-1!==r?0===r?t.isNeg()?C(n,i,a):new n(0):new n(NaN):t.isZero()?C(n,i+4,a).times(.5):(n.precision=i+6,n.rounding=1,t=t.asin(),e=C(n,i+4,a).times(.5),n.precision=i,n.rounding=a,e.minus(t))},_.inverseHyperbolicCosine=_.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,d=!1,n=n.times(n).minus(1).sqrt().plus(n),d=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},_.inverseHyperbolicSine=_.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,d=!1,n=n.times(n).plus(1).sqrt().plus(n),d=!0,r.precision=e,r.rounding=t,n.ln())},_.inverseHyperbolicTangent=_.atanh=function(){var e,t,n,r,i=this,a=i.constructor;return i.isFinite()?i.e>=0?new a(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=a.precision,t=a.rounding,r=i.sd(),Math.max(r,e)<2*-i.e-1?P(new a(i),e,t,!0):(a.precision=n=r-i.e,i=S(i.plus(1),new a(1).minus(i),n+e,1),a.precision=e+4,a.rounding=1,i=i.ln(),a.precision=e,a.rounding=t,i.times(.5))):new a(NaN)},_.inverseSine=_.asin=function(){var e,t,n,r,i=this,a=i.constructor;return i.isZero()?new a(i):(t=i.abs().cmp(1),n=a.precision,r=a.rounding,-1!==t?0===t?((e=C(a,n+4,r).times(.5)).s=i.s,e):new a(NaN):(a.precision=n+6,a.rounding=1,i=i.div(new a(1).minus(i.times(i)).sqrt().plus(1)).atan(),a.precision=n,a.rounding=r,i.times(2)))},_.inverseTangent=_.atan=function(){var e,t,n,r,i,a,o,s,c,u=this,l=u.constructor,f=l.precision,p=l.rounding;if(u.isFinite()){if(u.isZero())return new l(u);if(u.abs().eq(1)&&f+4<=D)return(o=C(l,f+4,p).times(.25)).s=u.s,o}else{if(!u.s)return new l(NaN);if(f+4<=D)return(o=C(l,f+4,p).times(.5)).s=u.s,o}for(l.precision=s=f+10,l.rounding=1,e=n=Math.min(28,s/7+2|0);e;--e)u=u.div(u.times(u).plus(1).sqrt().plus(1));for(d=!1,t=Math.ceil(s/7),r=1,c=u.times(u),o=new l(u),i=u;-1!==e;)if(i=i.times(c),a=o.minus(i.div(r+=2)),i=i.times(c),void 0!==(o=a.plus(i.div(r+=2))).d[t])for(e=t;o.d[e]===a.d[e]&&e--;);return n&&(o=o.times(2<<n-1)),d=!0,P(o,l.precision=f,l.rounding=p,!0)},_.isFinite=function(){return!!this.d},_.isInteger=_.isInt=function(){return!!this.d&&p(this.e/7)>this.d.length-2},_.isNaN=function(){return!this.s},_.isNegative=_.isNeg=function(){return this.s<0},_.isPositive=_.isPos=function(){return this.s>0},_.isZero=function(){return!!this.d&&0===this.d[0]},_.lessThan=_.lt=function(e){return this.cmp(e)<0},_.lessThanOrEqualTo=_.lte=function(e){return this.cmp(e)<1},_.logarithm=_.log=function(e){var t,n,r,i,a,o,s,c,u=this.constructor,l=u.precision,f=u.rounding;if(null==e)e=new u(10),t=!0;else{if(n=(e=new u(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new u(NaN);t=e.eq(10)}if(n=this.d,this.s<0||!n||!n[0]||this.eq(1))return new u(n&&!n[0]?-1/0:1!=this.s?NaN:n?0:1/0);if(t)if(n.length>1)a=!0;else{for(i=n[0];i%10==0;)i/=10;a=1!==i}if(d=!1,o=q(this,s=l+5),r=t?E(u,s+10):q(e,s),M((c=S(o,r,s,1)).d,i=l,f))do{if(o=q(this,s+=10),r=t?E(u,s+10):q(e,s),c=S(o,r,s,1),!a){+w(c.d).slice(i+1,i+15)+1==1e14&&(c=P(c,l+1,0));break}}while(M(c.d,i+=10,f));return d=!0,P(c,l,f)},_.minus=_.sub=function(e){var t,n,r,i,a,o,s,c,u,l,f,m,h=this,y=h.constructor;if(e=new y(e),!h.d||!e.d)return h.s&&e.s?h.d?e.s=-e.s:e=new y(e.d||h.s!==e.s?h:NaN):e=new y(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.plus(e);if(u=h.d,m=e.d,s=y.precision,c=y.rounding,!u[0]||!m[0]){if(m[0])e.s=-e.s;else{if(!u[0])return new y(3===c?-0:0);e=new y(h)}return d?P(e,s,c):e}if(n=p(e.e/7),l=p(h.e/7),u=u.slice(),a=l-n){for((f=a<0)?(t=u,a=-a,o=m.length):(t=m,n=l,o=u.length),a>(r=Math.max(Math.ceil(s/7),o)+2)&&(a=r,t.length=1),t.reverse(),r=a;r--;)t.push(0);t.reverse()}else{for((f=(r=u.length)<(o=m.length))&&(o=r),r=0;r<o;r++)if(u[r]!=m[r]){f=u[r]<m[r];break}a=0}for(f&&(t=u,u=m,m=t,e.s=-e.s),o=u.length,r=m.length-o;r>0;--r)u[o++]=0;for(r=m.length;r>a;){if(u[--r]<m[r]){for(i=r;i&&0===u[--i];)u[i]=b-1;--u[i],u[r]+=b}u[r]-=m[r]}for(;0===u[--o];)u.pop();for(;0===u[0];u.shift())--n;return u[0]?(e.d=u,e.e=A(u,n),d?P(e,s,c):e):new y(3===c?-0:0)},_.modulo=_.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?P(new r(n),r.precision,r.rounding):(d=!1,9==r.modulo?(t=S(n,e.abs(),0,3,1)).s*=e.s:t=S(n,e,0,r.modulo,1),t=t.times(e),d=!0,n.minus(t))},_.naturalExponential=_.exp=function(){return R(this)},_.naturalLogarithm=_.ln=function(){return q(this)},_.negated=_.neg=function(){var e=new this.constructor(this);return e.s=-e.s,P(e)},_.plus=_.add=function(e){var t,n,r,i,a,o,s,c,u,l,f=this,m=f.constructor;if(e=new m(e),!f.d||!e.d)return f.s&&e.s?f.d||(e=new m(e.d||f.s===e.s?f:NaN)):e=new m(NaN),e;if(f.s!=e.s)return e.s=-e.s,f.minus(e);if(u=f.d,l=e.d,s=m.precision,c=m.rounding,!u[0]||!l[0])return l[0]||(e=new m(f)),d?P(e,s,c):e;if(a=p(f.e/7),r=p(e.e/7),u=u.slice(),i=a-r){for(i<0?(n=u,i=-i,o=l.length):(n=l,r=a,o=u.length),i>(o=(a=Math.ceil(s/7))>o?a+1:o+1)&&(i=o,n.length=1),n.reverse();i--;)n.push(0);n.reverse()}for((o=u.length)-(i=l.length)<0&&(i=o,n=l,l=u,u=n),t=0;i;)t=(u[--i]=u[i]+l[i]+t)/b|0,u[i]%=b;for(t&&(u.unshift(t),++r),o=u.length;0==u[--o];)u.pop();return e.d=u,e.e=A(u,r),d?P(e,s,c):e},_.precision=_.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(f+e);return n.d?(t=T(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},_.round=function(){var e=this,t=e.constructor;return P(new t(e),e.e+1,t.rounding)},_.sine=_.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return H(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=t.times(1/Z(5,n)),t=H(e,2,t,t);for(var i,a=new e(5),o=new e(16),s=new e(20);n--;)i=t.times(t),t=t.times(a.plus(i.times(o.times(i).minus(s))));return t}(r,V(r,n)),r.precision=e,r.rounding=t,P(a>2?n.neg():n,e,t,!0)):new r(NaN)},_.squareRoot=_.sqrt=function(){var e,t,n,r,i,a,o=this,s=o.d,c=o.e,u=o.s,l=o.constructor;if(1!==u||!s||!s[0])return new l(!u||u<0&&(!s||s[0])?NaN:s?o:1/0);for(d=!1,0==(u=Math.sqrt(+o))||u==1/0?(((t=w(s)).length+c)%2==0&&(t+=\"0\"),u=Math.sqrt(t),c=p((c+1)/2)-(c<0||c%2),r=new l(t=u==1/0?\"5e\"+c:(t=u.toExponential()).slice(0,t.indexOf(\"e\")+1)+c)):r=new l(u.toString()),n=(c=l.precision)+3;;)if(r=(a=r).plus(S(o,a,n+2,1)).times(.5),w(a.d).slice(0,n)===(t=w(r.d)).slice(0,n)){if(\"9999\"!=(t=t.slice(n-3,n+1))&&(i||\"4999\"!=t)){+t&&(+t.slice(1)||\"5\"!=t.charAt(0))||(P(r,c+1,1),e=!r.times(r).eq(o));break}if(!i&&(P(a,c+1,0),a.times(a).eq(o))){r=a;break}n+=4,i=1}return d=!0,P(r,c,l.rounding,e)},_.tangent=_.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=S(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,P(2==a||4==a?n.neg():n,e,t,!0)):new r(NaN)},_.times=_.mul=function(e){var t,n,r,i,a,o,s,c,u,l=this,f=l.constructor,m=l.d,h=(e=new f(e)).d;if(e.s*=l.s,!(m&&m[0]&&h&&h[0]))return new f(!e.s||m&&!m[0]&&!h||h&&!h[0]&&!m?NaN:m&&h?0*e.s:e.s/0);for(n=p(l.e/7)+p(e.e/7),(c=m.length)<(u=h.length)&&(a=m,m=h,h=a,o=c,c=u,u=o),a=[],r=o=c+u;r--;)a.push(0);for(r=u;--r>=0;){for(t=0,i=c+r;i>r;)s=a[i]+h[r]*m[i-r-1]+t,a[i--]=s%b|0,t=s/b|0;a[i]=(a[i]+t)%b|0}for(;!a[--o];)a.pop();return t?++n:a.shift(),e.d=a,e.e=A(a,n),d?P(e,f.precision,f.rounding):e},_.toBinary=function(e,t){return W(this,2,e,t)},_.toDecimalPlaces=_.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(N(e,0,1e9),void 0===t?t=r.rounding:N(t,0,8),P(n,e+n.e+1,t))},_.toExponential=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=j(r,!0):(N(e,0,1e9),void 0===t?t=i.rounding:N(t,0,8),n=j(r=P(new i(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?\"-\"+n:n},_.toFixed=function(e,t){var n,r,i=this,a=i.constructor;return void 0===e?n=j(i):(N(e,0,1e9),void 0===t?t=a.rounding:N(t,0,8),n=j(r=P(new a(i),e+i.e+1,t),!1,e+r.e+1)),i.isNeg()&&!i.isZero()?\"-\"+n:n},_.toFraction=function(e){var t,n,r,i,a,o,s,c,u,l,p,h,y=this,v=y.d,g=y.constructor;if(!v)return new g(y);if(u=n=new g(1),r=c=new g(0),o=(a=(t=new g(r)).e=T(v)-y.e-1)%7,t.d[0]=m(10,o<0?7+o:o),null==e)e=a>0?t:u;else{if(!(s=new g(e)).isInt()||s.lt(u))throw Error(f+s);e=s.gt(t)?a>0?t:u:s}for(d=!1,s=new g(w(v)),l=g.precision,g.precision=a=7*v.length*2;p=S(s,t,0,1,1),1!=(i=n.plus(p.times(r))).cmp(e);)n=r,r=i,i=u,u=c.plus(p.times(i)),c=i,i=t,t=s.minus(p.times(i)),s=i;return i=S(e.minus(n),r,0,1,1),c=c.plus(i.times(u)),n=n.plus(i.times(r)),c.s=u.s=y.s,h=S(u,r,a,1).minus(y).abs().cmp(S(c,n,a,1).minus(y).abs())<1?[u,r]:[c,n],g.precision=l,d=!0,h},_.toHexadecimal=_.toHex=function(e,t){return W(this,16,e,t)},_.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:N(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(d=!1,n=S(n,e,0,t,1).times(e),d=!0,P(n)):(e.s=n.s,n=e),n},_.toNumber=function(){return+this},_.toOctal=function(e,t){return W(this,8,e,t)},_.toPower=_.pow=function(e){var t,n,r,i,a,o,s=this,c=s.constructor,u=+(e=new c(e));if(!(s.d&&e.d&&s.d[0]&&e.d[0]))return new c(m(+s,u));if((s=new c(s)).eq(1))return s;if(r=c.precision,a=c.rounding,e.eq(1))return P(s,r,a);if((t=p(e.e/7))>=e.d.length-1&&(n=u<0?-u:u)<=9007199254740991)return i=I(c,s,n,r),e.s<0?new c(1).div(i):P(i,r,a);if((o=s.s)<0){if(t<e.d.length-1)return new c(NaN);if(0==(1&e.d[t])&&(o=1),0==s.e&&1==s.d[0]&&1==s.d.length)return s.s=o,s}return(t=0!=(n=m(+s,u))&&isFinite(n)?new c(n+\"\").e:p(u*(Math.log(\"0.\"+w(s.d))/Math.LN10+s.e+1)))>c.maxE+1||t<c.minE-1?new c(t>0?o/0:0):(d=!1,c.rounding=s.s=1,n=Math.min(12,(t+\"\").length),(i=R(e.times(q(s,r+n)),r)).d&&M((i=P(i,r+5,1)).d,r,a)&&(t=r+10,+w((i=P(R(e.times(q(s,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(i=P(i,r+1,0))),i.s=o,d=!0,c.rounding=a,P(i,r,a))},_.toPrecision=function(e,t){var n,r=this,i=r.constructor;return void 0===e?n=j(r,r.e<=i.toExpNeg||r.e>=i.toExpPos):(N(e,1,1e9),void 0===t?t=i.rounding:N(t,0,8),n=j(r=P(new i(r),e,t),e<=r.e||r.e<=i.toExpNeg,e)),r.isNeg()&&!r.isZero()?\"-\"+n:n},_.toSignificantDigits=_.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(N(e,1,1e9),void 0===t?t=n.rounding:N(t,0,8)),P(new n(this),e,t)},_.toString=function(){var e=this,t=e.constructor,n=j(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?\"-\"+n:n},_.truncated=_.trunc=function(){return P(new this.constructor(this),this.e+1,1)},_.valueOf=_.toJSON=function(){var e=this,t=e.constructor,n=j(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?\"-\"+n:n};var S=function(){function e(e,t,n){var r,i=0,a=e.length;for(e=e.slice();a--;)r=e[a]*t+i,e[a]=r%n|0,i=r/n|0;return i&&e.unshift(i),e}function t(e,t,n,r){var i,a;if(n!=r)a=n>r?1:-1;else for(i=a=0;i<n;i++)if(e[i]!=t[i]){a=e[i]>t[i]?1:-1;break}return a}function n(e,t,n,r){for(var i=0;n--;)e[n]-=i,i=e[n]<t[n]?1:0,e[n]=i*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(i,a,o,s,c,u){var l,d,f,m,h,y,v,g,x,D,_,w,N,M,O,S,j,A,E,C,T=i.constructor,k=i.s==a.s?1:-1,I=i.d,B=a.d;if(!(I&&I[0]&&B&&B[0]))return new T(i.s&&a.s&&(I?!B||I[0]!=B[0]:B)?I&&0==I[0]||!B?0*k:k/0:NaN);for(u?(h=1,d=i.e-a.e):(u=b,h=7,d=p(i.e/h)-p(a.e/h)),E=B.length,j=I.length,D=(x=new T(k)).d=[],f=0;B[f]==(I[f]||0);f++);if(B[f]>(I[f]||0)&&d--,null==o?(M=o=T.precision,s=T.rounding):M=c?o+(i.e-a.e)+1:o,M<0)D.push(1),y=!0;else{if(M=M/h+2|0,f=0,1==E){for(m=0,B=B[0],M++;(f<j||m)&&M--;f++)O=m*u+(I[f]||0),D[f]=O/B|0,m=O%B|0;y=m||f<j}else{for((m=u/(B[0]+1)|0)>1&&(B=e(B,m,u),I=e(I,m,u),E=B.length,j=I.length),S=E,w=(_=I.slice(0,E)).length;w<E;)_[w++]=0;(C=B.slice()).unshift(0),A=B[0],B[1]>=u/2&&++A;do{m=0,(l=t(B,_,E,w))<0?(N=_[0],E!=w&&(N=N*u+(_[1]||0)),(m=N/A|0)>1?(m>=u&&(m=u-1),1==(l=t(v=e(B,m,u),_,g=v.length,w=_.length))&&(m--,n(v,E<g?C:B,g,u))):(0==m&&(l=m=1),v=B.slice()),(g=v.length)<w&&v.unshift(0),n(_,v,w,u),-1==l&&(l=t(B,_,E,w=_.length))<1&&(m++,n(_,E<w?C:B,w,u)),w=_.length):0===l&&(m++,_=[0]),D[f++]=m,l&&_[0]?_[w++]=I[S]||0:(_=[I[S]],w=1)}while((S++<j||void 0!==_[0])&&M--);y=void 0!==_[0]}D[0]||D.shift()}if(1==h)x.e=d,r=y;else{for(f=1,m=D[0];m>=10;m/=10)f++;x.e=f+d*h-1,P(x,c?o+x.e+1:o,s,y)}return x}}();function P(e,t,n,r){var i,a,o,s,c,u,l,f,p,h=e.constructor;e:if(null!=t){if(!(f=e.d))return e;for(i=1,s=f[0];s>=10;s/=10)i++;if((a=t-i)<0)a+=7,o=t,c=(l=f[p=0])/m(10,i-o-1)%10|0;else if((p=Math.ceil((a+1)/7))>=(s=f.length)){if(!r)break e;for(;s++<=p;)f.push(0);l=c=0,i=1,o=(a%=7)-7+1}else{for(l=s=f[p],i=1;s>=10;s/=10)i++;c=(o=(a%=7)-7+i)<0?0:l/m(10,i-o-1)%10|0}if(r=r||t<0||void 0!==f[p+1]||(o<0?l:l%m(10,i-o-1)),u=n<4?(c||r)&&(0==n||n==(e.s<0?3:2)):c>5||5==c&&(4==n||r||6==n&&(a>0?o>0?l/m(10,i-o):0:f[p-1])%10&1||n==(e.s<0?8:7)),t<1||!f[0])return f.length=0,u?(t-=e.e+1,f[0]=m(10,(7-t%7)%7),e.e=-t||0):f[0]=e.e=0,e;if(0==a?(f.length=p,s=1,p--):(f.length=p+1,s=m(10,7-a),f[p]=o>0?(l/m(10,i-o)%m(10,o)|0)*s:0),u)for(;;){if(0==p){for(a=1,o=f[0];o>=10;o/=10)a++;for(o=f[0]+=s,s=1;o>=10;o/=10)s++;a!=s&&(e.e++,f[0]==b&&(f[0]=1));break}if(f[p]+=s,f[p]!=b)break;f[p--]=0,s=1}for(a=f.length;0===f[--a];)f.pop()}return d&&(e.e>h.maxE?(e.d=null,e.e=NaN):e.e<h.minE&&(e.e=0,e.d=[0])),e}function j(e,t,n){if(!e.isFinite())return F(e);var r,i=e.e,a=w(e.d),o=a.length;return t?(n&&(r=n-o)>0?a=a.charAt(0)+\".\"+a.slice(1)+k(r):o>1&&(a=a.charAt(0)+\".\"+a.slice(1)),a=a+(e.e<0?\"e\":\"e+\")+e.e):i<0?(a=\"0.\"+k(-i-1)+a,n&&(r=n-o)>0&&(a+=k(r))):i>=o?(a+=k(i+1-o),n&&(r=n-i-1)>0&&(a=a+\".\"+k(r))):((r=i+1)<o&&(a=a.slice(0,r)+\".\"+a.slice(r)),n&&(r=n-o)>0&&(i+1===o&&(a+=\".\"),a+=k(r))),a}function A(e,t){var n=e[0];for(t*=7;n>=10;n/=10)t++;return t}function E(e,t,n){if(t>x)throw d=!0,n&&(e.precision=n),Error(\"[DecimalError] Precision limit exceeded\");return P(new e(c),t,1,!0)}function C(e,t,n){if(t>D)throw Error(\"[DecimalError] Precision limit exceeded\");return P(new e(u),t,n,!0)}function T(e){var t=e.length-1,n=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function k(e){for(var t=\"\";e--;)t+=\"0\";return t}function I(e,t,n,r){var i,a=new e(1),o=Math.ceil(r/7+4);for(d=!1;;){if(n%2&&G((a=a.times(t)).d,o)&&(i=!0),0===(n=p(n/2))){n=a.d.length-1,i&&0===a.d[n]&&++a.d[n];break}G((t=t.times(t)).d,o)}return d=!0,a}function B(e){return 1&e.d[e.d.length-1]}function z(e,t,n){for(var r,i=new e(t[0]),a=0;++a<t.length;){if(!(r=new e(t[a])).s){i=r;break}i[n](r)&&(i=r)}return i}function R(e,t){var n,r,i,a,o,s,c,u=0,l=0,f=0,p=e.constructor,h=p.rounding,y=p.precision;if(!e.d||!e.d[0]||e.e>17)return new p(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(d=!1,c=y):c=t,s=new p(.03125);e.e>-2;)e=e.times(s),f+=5;for(c+=r=Math.log(m(2,f))/Math.LN10*2+5|0,n=a=o=new p(1),p.precision=c;;){if(a=P(a.times(e),c,1),n=n.times(++l),w((s=o.plus(S(a,n,c,1))).d).slice(0,c)===w(o.d).slice(0,c)){for(i=f;i--;)o=P(o.times(o),c,1);if(null!=t)return p.precision=y,o;if(!(u<3&&M(o.d,c-r,h,u)))return P(o,p.precision=y,h,d=!0);p.precision=c+=10,n=a=s=new p(1),l=0,u++}o=s}}function q(e,t){var n,r,i,a,o,s,c,u,l,f,p,m=1,h=e,y=h.d,v=h.constructor,g=v.rounding,b=v.precision;if(h.s<0||!y||!y[0]||!h.e&&1==y[0]&&1==y.length)return new v(y&&!y[0]?-1/0:1!=h.s?NaN:y?0:h);if(null==t?(d=!1,l=b):l=t,v.precision=l+=10,r=(n=w(y)).charAt(0),!(Math.abs(a=h.e)<15e14))return u=E(v,l+2,b).times(a+\"\"),h=q(new v(r+\".\"+n.slice(1)),l-10).plus(u),v.precision=b,null==t?P(h,b,g,d=!0):h;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=w((h=h.times(e)).d)).charAt(0),m++;for(a=h.e,r>1?(h=new v(\"0.\"+n),a++):h=new v(r+\".\"+n.slice(1)),f=h,c=o=h=S(h.minus(1),h.plus(1),l,1),p=P(h.times(h),l,1),i=3;;){if(o=P(o.times(p),l,1),w((u=c.plus(S(o,new v(i),l,1))).d).slice(0,l)===w(c.d).slice(0,l)){if(c=c.times(2),0!==a&&(c=c.plus(E(v,l+2,b).times(a+\"\"))),c=S(c,new v(m),l,1),null!=t)return v.precision=b,c;if(!M(c.d,l-10,g,s))return P(c,v.precision=b,g,d=!0);v.precision=l+=10,u=o=h=S(f.minus(1),f.plus(1),l,1),p=P(h.times(h),l,1),i=s=1}c=u,i+=2}}function F(e){return String(e.s*e.s/0)}function U(e,t){var n,r,i;for((n=t.indexOf(\".\"))>-1&&(t=t.replace(\".\",\"\")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(i=t.length;48===t.charCodeAt(i-1);--i);if(t=t.slice(r,i)){if(i-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%7,n<0&&(r+=7),r<i){for(r&&e.d.push(+t.slice(0,r)),i-=7;r<i;)e.d.push(+t.slice(r,r+=7));r=7-(t=t.slice(r)).length}else r-=i;for(;r--;)t+=\"0\";e.d.push(+t),d&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function L(e,t){var r,i,a,o,s,c,u,l,p;if(\"Infinity\"===t||\"NaN\"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(y.test(t))r=16,t=t.toLowerCase();else if(h.test(t))r=2;else{if(!v.test(t))throw Error(f+t);r=8}for((o=t.search(/p/i))>0?(u=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),s=(o=t.indexOf(\".\"))>=0,i=e.constructor,s&&(o=(c=(t=t.replace(\".\",\"\")).length)-o,a=I(i,new i(r),o,2*o)),o=p=(l=O(t,r,b)).length-1;0===l[o];--o)l.pop();return o<0?new i(0*e.s):(e.e=A(l,p),e.d=l,d=!1,s&&(e=S(e,a,4*c)),u&&(e=e.times(Math.abs(u)<54?m(2,u):n.pow(2,u))),d=!0,e)}function H(e,t,n,r,i){var a,o,s,c,u=e.precision,l=Math.ceil(u/7);for(d=!1,c=n.times(n),s=new e(r);;){if(o=S(s.times(c),new e(t++*t++),u,1),s=i?r.plus(o):r.minus(o),r=S(o.times(c),new e(t++*t++),u,1),void 0!==(o=s.plus(r)).d[l]){for(a=l;o.d[a]===s.d[a]&&a--;);if(-1==a)break}a=s,s=r,r=o,o=a}return d=!0,o.d.length=l+1,o}function Z(e,t){for(var n=e;--t;)n*=e;return n}function V(e,t){var n,r=t.s<0,i=C(e,e.precision,1),o=i.times(.5);if((t=t.abs()).lte(o))return a=r?4:1,t;if((n=t.divToInt(i)).isZero())a=r?3:2;else{if((t=t.minus(n.times(i))).lte(o))return a=B(n)?r?2:3:r?4:1,t;a=B(n)?r?1:4:r?3:2}return t.minus(i).abs()}function W(e,t,n,i){var a,o,c,u,l,d,f,p,m,h=e.constructor,y=void 0!==n;if(y?(N(n,1,1e9),void 0===i?i=h.rounding:N(i,0,8)):(n=h.precision,i=h.rounding),e.isFinite()){for(y?(a=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):a=t,(c=(f=j(e)).indexOf(\".\"))>=0&&(f=f.replace(\".\",\"\"),(m=new h(1)).e=f.length-c,m.d=O(j(m),10,a),m.e=m.d.length),o=l=(p=O(f,10,a)).length;0==p[--l];)p.pop();if(p[0]){if(c<0?o--:((e=new h(e)).d=p,e.e=o,p=(e=S(e,m,n,i,0,a)).d,o=e.e,d=r),c=p[n],u=a/2,d=d||void 0!==p[n+1],d=i<4?(void 0!==c||d)&&(0===i||i===(e.s<0?3:2)):c>u||c===u&&(4===i||d||6===i&&1&p[n-1]||i===(e.s<0?8:7)),p.length=n,d)for(;++p[--n]>a-1;)p[n]=0,n||(++o,p.unshift(1));for(l=p.length;!p[l-1];--l);for(c=0,f=\"\";c<l;c++)f+=s.charAt(p[c]);if(y){if(l>1)if(16==t||8==t){for(c=16==t?4:3,--l;l%c;l++)f+=\"0\";for(l=(p=O(f,a,t)).length;!p[l-1];--l);for(c=1,f=\"1.\";c<l;c++)f+=s.charAt(p[c])}else f=f.charAt(0)+\".\"+f.slice(1);f=f+(o<0?\"p\":\"p+\")+o}else if(o<0){for(;++o;)f=\"0\"+f;f=\"0.\"+f}else if(++o>l)for(o-=l;o--;)f+=\"0\";else o<l&&(f=f.slice(0,o)+\".\"+f.slice(o))}else f=y?\"0p+0\":\"0\";f=(16==t?\"0x\":2==t?\"0b\":8==t?\"0o\":\"\")+f}else f=F(e);return e.s<0?\"-\"+f:f}function G(e,t){if(e.length>t)return e.length=t,!0}function $(e){return new this(e).abs()}function Q(e){return new this(e).acos()}function X(e){return new this(e).acosh()}function Y(e,t){return new this(e).plus(t)}function J(e){return new this(e).asin()}function K(e){return new this(e).asinh()}function ee(e){return new this(e).atan()}function te(e){return new this(e).atanh()}function ne(e,t){e=new this(e),t=new this(t);var n,r=this.precision,i=this.rounding,a=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?C(this,r,i):new this(0)).s=e.s:!e.d||t.isZero()?(n=C(this,a,1).times(.5)).s=e.s:t.s<0?(this.precision=a,this.rounding=1,n=this.atan(S(e,t,a,1)),t=C(this,a,1),this.precision=r,this.rounding=i,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(S(e,t,a,1)):(n=C(this,a,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function re(e){return new this(e).cbrt()}function ie(e){return P(e=new this(e),e.e+1,2)}function ae(e){if(!e||\"object\"!=typeof e)throw Error(\"[DecimalError] Object expected\");var t,n,r,i=!0===e.defaults,a=[\"precision\",1,1e9,\"rounding\",0,8,\"toExpNeg\",-o,0,\"toExpPos\",0,o,\"maxE\",0,o,\"minE\",-o,0,\"modulo\",0,9];for(t=0;t<a.length;t+=3)if(n=a[t],i&&(this[n]=l[n]),void 0!==(r=e[n])){if(!(p(r)===r&&r>=a[t+1]&&r<=a[t+2]))throw Error(f+n+\": \"+r);this[n]=r}if(n=\"crypto\",i&&(this[n]=l[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(f+n+\": \"+r);if(r){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(\"[DecimalError] crypto unavailable\");this[n]=!0}else this[n]=!1}return this}function oe(e){return new this(e).cos()}function se(e){return new this(e).cosh()}function ce(e,t){return new this(e).div(t)}function ue(e){return new this(e).exp()}function le(e){return P(e=new this(e),e.e+1,3)}function de(){var e,t,n=new this(0);for(d=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return d=!0,new this(1/0);n=t}return d=!0,n.sqrt()}function fe(e){return e instanceof n||e&&\"[object Decimal]\"===e.name||!1}function pe(e){return new this(e).ln()}function me(e,t){return new this(e).log(t)}function he(e){return new this(e).log(2)}function ye(e){return new this(e).log(10)}function ve(){return z(this,arguments,\"lt\")}function ge(){return z(this,arguments,\"gt\")}function be(e,t){return new this(e).mod(t)}function xe(e,t){return new this(e).mul(t)}function De(e,t){return new this(e).pow(t)}function _e(e){var t,n,r,i,a=0,o=new this(1),s=[];if(void 0===e?e=this.precision:N(e,1,1e9),r=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));a<r;)(i=t[a])>=429e7?t[a]=crypto.getRandomValues(new Uint32Array(1))[0]:s[a++]=i%1e7;else{if(!crypto.randomBytes)throw Error(\"[DecimalError] crypto unavailable\");for(t=crypto.randomBytes(r*=4);a<r;)(i=t[a]+(t[a+1]<<8)+(t[a+2]<<16)+((127&t[a+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,a):(s.push(i%1e7),a+=4);a=r/4}else for(;a<r;)s[a++]=1e7*Math.random()|0;for(e%=7,(r=s[--a])&&e&&(i=m(10,7-e),s[a]=(r/i|0)*i);0===s[a];a--)s.pop();if(a<0)n=0,s=[0];else{for(n=-1;0===s[0];n-=7)s.shift();for(r=1,i=s[0];i>=10;i/=10)r++;r<7&&(n-=7-r)}return o.e=n,o.d=s,o}function we(e){return P(e=new this(e),e.e+1,this.rounding)}function Ne(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function Me(e){return new this(e).sin()}function Oe(e){return new this(e).sinh()}function Se(e){return new this(e).sqrt()}function Pe(e,t){return new this(e).sub(t)}function je(e){return new this(e).tan()}function Ae(e){return new this(e).tanh()}function Ee(e){return P(e=new this(e),e.e+1,1)}(n=function e(t){var n,r,i;function a(e){var t,n,r,i=this;if(!(i instanceof a))return new a(e);if(i.constructor=a,e instanceof a)return i.s=e.s,void(d?!e.d||e.e>a.maxE?(i.e=NaN,i.d=null):e.e<a.minE?(i.e=0,i.d=[0]):(i.e=e.e,i.d=e.d.slice()):(i.e=e.e,i.d=e.d?e.d.slice():e.d));if(\"number\"===(r=typeof e)){if(0===e)return i.s=1/e<0?-1:1,i.e=0,void(i.d=[0]);if(e<0?(e=-e,i.s=-1):i.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(d?t>a.maxE?(i.e=NaN,i.d=null):t<a.minE?(i.e=0,i.d=[0]):(i.e=t,i.d=[e]):(i.e=t,i.d=[e]))}return 0*e!=0?(e||(i.s=NaN),i.e=NaN,void(i.d=null)):U(i,e.toString())}if(\"string\"!==r)throw Error(f+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),i.s=-1):(43===n&&(e=e.slice(1)),i.s=1),g.test(e)?U(i,e):L(i,e)}if(a.prototype=_,a.ROUND_UP=0,a.ROUND_DOWN=1,a.ROUND_CEIL=2,a.ROUND_FLOOR=3,a.ROUND_HALF_UP=4,a.ROUND_HALF_DOWN=5,a.ROUND_HALF_EVEN=6,a.ROUND_HALF_CEIL=7,a.ROUND_HALF_FLOOR=8,a.EUCLID=9,a.config=a.set=ae,a.clone=e,a.isDecimal=fe,a.abs=$,a.acos=Q,a.acosh=X,a.add=Y,a.asin=J,a.asinh=K,a.atan=ee,a.atanh=te,a.atan2=ne,a.cbrt=re,a.ceil=ie,a.cos=oe,a.cosh=se,a.div=ce,a.exp=ue,a.floor=le,a.hypot=de,a.ln=pe,a.log=me,a.log10=ye,a.log2=he,a.max=ve,a.min=ge,a.mod=be,a.mul=xe,a.pow=De,a.random=_e,a.round=we,a.sign=Ne,a.sin=Me,a.sinh=Oe,a.sqrt=Se,a.sub=Pe,a.tan=je,a.tanh=Ae,a.trunc=Ee,void 0===t&&(t={}),t&&!0!==t.defaults)for(i=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],n=0;n<i.length;)t.hasOwnProperty(r=i[n++])||(t[r]=this[r]);return a.config(t),a}(l)).default=n.Decimal=n,c=new n(c),u=new n(u),t.exports?(\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator&&(_[Symbol.for(\"nodejs.util.inspect.custom\")]=_.toString,_[Symbol.toStringTag]=\"Decimal\"),t.exports=n):(e||(e=\"undefined\"!=typeof self&&self&&self.self==self?self:window),i=e.Decimal,n.noConflict=function(){return e.Decimal=i,n},e.Decimal=n)}(e)})),b=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBigNumberClass=void 0;var n,r=(n=g)&&n.__esModule?n:{default:n};var i=[\"?on\",\"config\"],a=(0,h.factory)(\"BigNumber\",i,(function(e){var t=e.on,n=e.config,i=r.default.clone({precision:n.precision,modulo:9});return i.prototype.type=\"BigNumber\",i.prototype.isBigNumber=!0,i.prototype.toJSON=function(){return{mathjs:\"BigNumber\",value:this.toString()}},i.fromJSON=function(e){return new i(e.value)},t&&t(\"config\",(function(e,t){e.precision!==t.precision&&i.config({precision:e.precision})})),i}),{isClass:!0});t.createBigNumberClass=a})),x=t((function(e,t){\n/**\n * @license Complex.js v2.0.11 11/02/2016\n *\n * Copyright (c) 2016, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n!function(n){var r=function(e){return.5*(Math.exp(e)+Math.exp(-e))},i=function(e){return.5*(Math.exp(e)-Math.exp(-e))},a=function(){throw SyntaxError(\"Invalid Param\")};function o(e,t){var n=Math.abs(e),r=Math.abs(t);return 0===e?Math.log(r):0===t?Math.log(n):n<3e3&&r<3e3?.5*Math.log(e*e+t*t):Math.log(e/Math.cos(Math.atan2(t,e)))}function s(e,t){if(!(this instanceof s))return new s(e,t);var n=function(e,t){var n={re:0,im:0};if(null==e)n.re=n.im=0;else if(void 0!==t)n.re=e,n.im=t;else switch(typeof e){case\"object\":if(\"im\"in e&&\"re\"in e)n.re=e.re,n.im=e.im;else if(\"abs\"in e&&\"arg\"in e){if(!Number.isFinite(e.abs)&&Number.isFinite(e.arg))return s.INFINITY;n.re=e.abs*Math.cos(e.arg),n.im=e.abs*Math.sin(e.arg)}else if(\"r\"in e&&\"phi\"in e){if(!Number.isFinite(e.r)&&Number.isFinite(e.phi))return s.INFINITY;n.re=e.r*Math.cos(e.phi),n.im=e.r*Math.sin(e.phi)}else 2===e.length?(n.re=e[0],n.im=e[1]):a();break;case\"string\":n.im=n.re=0;var r=e.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g),i=1,o=0;null===r&&a();for(var c=0;c<r.length;c++){var u=r[c];\" \"===u||\"\\t\"===u||\"\\n\"===u||(\"+\"===u?i++:\"-\"===u?o++:\"i\"===u||\"I\"===u?(i+o===0&&a(),\" \"===r[c+1]||isNaN(r[c+1])?n.im+=parseFloat((o%2?\"-\":\"\")+\"1\"):(n.im+=parseFloat((o%2?\"-\":\"\")+r[c+1]),c++),i=o=0):((i+o===0||isNaN(u))&&a(),\"i\"===r[c+1]||\"I\"===r[c+1]?(n.im+=parseFloat((o%2?\"-\":\"\")+u),c++):n.re+=parseFloat((o%2?\"-\":\"\")+u),i=o=0))}i+o>0&&a();break;case\"number\":n.im=0,n.re=e;break;default:a()}return n}(e,t);this.re=n.re,this.im=n.im}s.prototype={re:0,im:0,sign:function(){var e=this.abs();return new s(this.re/e,this.im/e)},add:function(e,t){var n=new s(e,t);return this.isInfinite()&&n.isInfinite()?s.NAN:this.isInfinite()||n.isInfinite()?s.INFINITY:new s(this.re+n.re,this.im+n.im)},sub:function(e,t){var n=new s(e,t);return this.isInfinite()&&n.isInfinite()?s.NAN:this.isInfinite()||n.isInfinite()?s.INFINITY:new s(this.re-n.re,this.im-n.im)},mul:function(e,t){var n=new s(e,t);return this.isInfinite()&&n.isZero()||this.isZero()&&n.isInfinite()?s.NAN:this.isInfinite()||n.isInfinite()?s.INFINITY:0===n.im&&0===this.im?new s(this.re*n.re,0):new s(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(e,t){var n=new s(e,t);if(this.isZero()&&n.isZero()||this.isInfinite()&&n.isInfinite())return s.NAN;if(this.isInfinite()||n.isZero())return s.INFINITY;if(this.isZero()||n.isInfinite())return s.ZERO;e=this.re,t=this.im;var r,i,a=n.re,o=n.im;return 0===o?new s(e/a,t/a):Math.abs(a)<Math.abs(o)?new s((e*(i=a/o)+t)/(r=a*i+o),(t*i-e)/r):new s((e+t*(i=o/a))/(r=o*i+a),(t-e*i)/r)},pow:function(e,t){var n=new s(e,t);if(e=this.re,t=this.im,n.isZero())return s.ONE;if(0===n.im){if(0===t&&e>=0)return new s(Math.pow(e,n.re),0);if(0===e)switch((n.re%4+4)%4){case 0:return new s(Math.pow(t,n.re),0);case 1:return new s(0,Math.pow(t,n.re));case 2:return new s(-Math.pow(t,n.re),0);case 3:return new s(0,-Math.pow(t,n.re))}}if(0===e&&0===t&&n.re>0&&n.im>=0)return s.ZERO;var r=Math.atan2(t,e),i=o(e,t);return e=Math.exp(n.re*i-n.im*r),t=n.im*i+n.re*r,new s(e*Math.cos(t),e*Math.sin(t))},sqrt:function(){var e,t,n=this.re,r=this.im,i=this.abs();if(n>=0){if(0===r)return new s(Math.sqrt(n),0);e=.5*Math.sqrt(2*(i+n))}else e=Math.abs(r)/Math.sqrt(2*(i-n));return t=n<=0?.5*Math.sqrt(2*(i-n)):Math.abs(r)/Math.sqrt(2*(i+n)),new s(e,r<0?-t:t)},exp:function(){var e=Math.exp(this.re);return this.im,new s(e*Math.cos(this.im),e*Math.sin(this.im))},expm1:function(){var e=this.re,t=this.im;return new s(Math.expm1(e)*Math.cos(t)+function(e){var t=Math.PI/4;if(e<-t||e>t)return Math.cos(e)-1;var n=e*e;return n*(n*(1/24+n*(-1/720+n*(1/40320+n*(-1/3628800+n*(1/4790014600+n*(-1/87178291200+n*(1/20922789888e3)))))))-.5)}(t),Math.exp(e)*Math.sin(t))},log:function(){var e=this.re,t=this.im;return new s(o(e,t),Math.atan2(t,e))},abs:function(){return e=this.re,t=this.im,n=Math.abs(e),r=Math.abs(t),n<3e3&&r<3e3?Math.sqrt(n*n+r*r):(n<r?(n=r,r=e/t):r=t/e,n*Math.sqrt(1+r*r));var e,t,n,r},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var e=this.re,t=this.im;return new s(Math.sin(e)*r(t),Math.cos(e)*i(t))},cos:function(){var e=this.re,t=this.im;return new s(Math.cos(e)*r(t),-Math.sin(e)*i(t))},tan:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)+r(t);return new s(Math.sin(e)/n,i(t)/n)},cot:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)-r(t);return new s(-Math.sin(e)/n,i(t)/n)},sec:function(){var e=this.re,t=this.im,n=.5*r(2*t)+.5*Math.cos(2*e);return new s(Math.cos(e)*r(t)/n,Math.sin(e)*i(t)/n)},csc:function(){var e=this.re,t=this.im,n=.5*r(2*t)-.5*Math.cos(2*e);return new s(Math.sin(e)*r(t)/n,-Math.cos(e)*i(t)/n)},asin:function(){var e=this.re,t=this.im,n=new s(t*t-e*e+1,-2*e*t).sqrt(),r=new s(n.re-t,n.im+e).log();return new s(r.im,-r.re)},acos:function(){var e=this.re,t=this.im,n=new s(t*t-e*e+1,-2*e*t).sqrt(),r=new s(n.re-t,n.im+e).log();return new s(Math.PI/2-r.im,r.re)},atan:function(){var e=this.re,t=this.im;if(0===e){if(1===t)return new s(0,1/0);if(-1===t)return new s(0,-1/0)}var n=e*e+(1-t)*(1-t),r=new s((1-t*t-e*e)/n,-2*e/n).log();return new s(-.5*r.im,.5*r.re)},acot:function(){var e=this.re,t=this.im;if(0===t)return new s(Math.atan2(1,e),0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).atan():new s(0!==e?e/0:0,0!==t?-t/0:0).atan()},asec:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new s(0,1/0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).acos():new s(0!==e?e/0:0,0!==t?-t/0:0).acos()},acsc:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new s(Math.PI/2,1/0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).asin():new s(0!==e?e/0:0,0!==t?-t/0:0).asin()},sinh:function(){var e=this.re,t=this.im;return new s(i(e)*Math.cos(t),r(e)*Math.sin(t))},cosh:function(){var e=this.re,t=this.im;return new s(r(e)*Math.cos(t),i(e)*Math.sin(t))},tanh:function(){var e=2*this.re,t=2*this.im,n=r(e)+Math.cos(t);return new s(i(e)/n,Math.sin(t)/n)},coth:function(){var e=2*this.re,t=2*this.im,n=r(e)-Math.cos(t);return new s(i(e)/n,-Math.sin(t)/n)},csch:function(){var e=this.re,t=this.im,n=Math.cos(2*t)-r(2*e);return new s(-2*i(e)*Math.cos(t)/n,2*r(e)*Math.sin(t)/n)},sech:function(){var e=this.re,t=this.im,n=Math.cos(2*t)+r(2*e);return new s(2*r(e)*Math.cos(t)/n,-2*i(e)*Math.sin(t)/n)},asinh:function(){var e=this.im;this.im=-this.re,this.re=e;var t=this.asin();return this.re=-this.im,this.im=e,e=t.re,t.re=-t.im,t.im=e,t},acosh:function(){var e=this.acos();if(e.im<=0){var t=e.re;e.re=-e.im,e.im=t}else{t=e.im;e.im=-e.re,e.re=t}return e},atanh:function(){var e=this.re,t=this.im,n=e>1&&0===t,r=1-e,i=1+e,a=r*r+t*t,c=0!==a?new s((i*r-t*t)/a,(t*r+i*t)/a):new s(-1!==e?e/0:0,0!==t?t/0:0),u=c.re;return c.re=o(c.re,c.im)/2,c.im=Math.atan2(c.im,u)/2,n&&(c.im=-c.im),c},acoth:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new s(0,Math.PI/2);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).atanh():new s(0!==e?e/0:0,0!==t?-t/0:0).atanh()},acsch:function(){var e=this.re,t=this.im;if(0===t)return new s(0!==e?Math.log(e+Math.sqrt(e*e+1)):1/0,0);var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).asinh():new s(0!==e?e/0:0,0!==t?-t/0:0).asinh()},asech:function(){var e=this.re,t=this.im;if(this.isZero())return s.INFINITY;var n=e*e+t*t;return 0!==n?new s(e/n,-t/n).acosh():new s(0!==e?e/0:0,0!==t?-t/0:0).acosh()},inverse:function(){if(this.isZero())return s.INFINITY;if(this.isInfinite())return s.ZERO;var e=this.re,t=this.im,n=e*e+t*t;return new s(e/n,-t/n)},conjugate:function(){return new s(this.re,-this.im)},neg:function(){return new s(-this.re,-this.im)},ceil:function(e){return e=Math.pow(10,e||0),new s(Math.ceil(this.re*e)/e,Math.ceil(this.im*e)/e)},floor:function(e){return e=Math.pow(10,e||0),new s(Math.floor(this.re*e)/e,Math.floor(this.im*e)/e)},round:function(e){return e=Math.pow(10,e||0),new s(Math.round(this.re*e)/e,Math.round(this.im*e)/e)},equals:function(e,t){var n=new s(e,t);return Math.abs(n.re-this.re)<=s.EPSILON&&Math.abs(n.im-this.im)<=s.EPSILON},clone:function(){return new s(this.re,this.im)},toString:function(){var e=this.re,t=this.im,n=\"\";return this.isNaN()?\"NaN\":this.isZero()?\"0\":this.isInfinite()?\"Infinity\":(0!==e&&(n+=e),0!==t&&(0!==e?n+=t<0?\" - \":\" + \":t<0&&(n+=\"-\"),1!==(t=Math.abs(t))&&(n+=t),n+=\"i\"),n||\"0\")},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return!(0!==this.re&&-0!==this.re||0!==this.im&&-0!==this.im)},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},s.ZERO=new s(0,0),s.ONE=new s(1,0),s.I=new s(0,1),s.PI=new s(Math.PI,0),s.E=new s(Math.E,0),s.INFINITY=new s(1/0,1/0),s.NAN=new s(NaN,NaN),s.EPSILON=1e-16,Object.defineProperty(t,\"__esModule\",{value:!0}),s.default=s,s.Complex=s,e.exports=s}()})),D=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createComplexClass=void 0;var n,r=(n=x)&&n.__esModule?n:{default:n};function a(e){return(a=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}var o=[],s=(0,h.factory)(\"Complex\",o,(function(){return r.default.prototype.type=\"Complex\",r.default.prototype.isComplex=!0,r.default.prototype.toJSON=function(){return{mathjs:\"Complex\",re:this.re,im:this.im}},r.default.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},r.default.prototype.format=function(e){var t=this.im,n=this.re,r=(0,u.format)(this.re,e),a=(0,u.format)(this.im,e),o=(0,i.isNumber)(e)?e:e?e.precision:null;if(null!==o){var s=Math.pow(10,-o);Math.abs(n/t)<s&&(n=0),Math.abs(t/n)<s&&(t=0)}return 0===t?r:0===n?1===t?\"i\":-1===t?\"-i\":a+\"i\":t<0?-1===t?r+\" - i\":r+\" - \"+a.substring(1)+\"i\":1===t?r+\" + i\":r+\" + \"+a+\"i\"},r.default.fromPolar=function(e){switch(arguments.length){case 1:var t=arguments[0];if(\"object\"===a(t))return(0,r.default)(t);throw new TypeError(\"Input has to be an object with r and phi keys.\");case 2:var n=arguments[0],o=arguments[1];if((0,i.isNumber)(n)){if((0,i.isUnit)(o)&&o.hasBase(\"ANGLE\")&&(o=o.toNumber(\"rad\")),(0,i.isNumber)(o))return new r.default({r:n,phi:o});throw new TypeError(\"Phi is not a number nor an angle unit.\")}throw new TypeError(\"Radius r is not a number.\");default:throw new SyntaxError(\"Wrong number of arguments in function fromPolar\")}},r.default.prototype.valueOf=r.default.prototype.toString,r.default.fromJSON=function(e){return new r.default(e)},r.default.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},r.default}),{isClass:!0});t.createComplexClass=s})),_=t((function(e,t){\n/**\n * @license Fraction.js v4.0.12 09/09/2015\n * http://www.xarg.org/2014/03/rational-numbers-in-javascript/\n *\n * Copyright (c) 2015, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n!function(n){var r={s:1,n:0,d:1};function i(e){function t(){var t=Error.apply(this,arguments);t.name=this.name=e,this.stack=t.stack,this.message=t.message}function n(){}return n.prototype=Error.prototype,t.prototype=new n,t}var a=d.DivisionByZero=i(\"DivisionByZero\"),o=d.InvalidParameter=i(\"InvalidParameter\");function s(e,t){return isNaN(e=parseInt(e,10))&&c(),e*t}function c(){throw new o}var u=function(e,t){var n,i=0,o=1,u=1,l=0,d=0,f=0,p=1,m=1,h=0,y=1,v=1,g=1,b=1e7;if(null==e);else if(void 0!==t)u=(i=e)*(o=t);else switch(typeof e){case\"object\":\"d\"in e&&\"n\"in e?(i=e.n,o=e.d,\"s\"in e&&(i*=e.s)):0 in e?(i=e[0],1 in e&&(o=e[1])):c(),u=i*o;break;case\"number\":if(e<0&&(u=e,e=-e),e%1==0)i=e;else if(e>0){for(e>=1&&(e/=m=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));y<=b&&g<=b;){if(e===(n=(h+v)/(y+g))){y+g<=b?(i=h+v,o=y+g):g>y?(i=v,o=g):(i=h,o=y);break}e>n?(h+=v,y+=g):(v+=h,g+=y),y>b?(i=v,o=g):(i=h,o=y)}i*=m}else(isNaN(e)||isNaN(t))&&(o=i=NaN);break;case\"string\":if(null===(y=e.match(/\\d+|./g))&&c(),\"-\"===y[h]?(u=-1,h++):\"+\"===y[h]&&h++,y.length===h+1?d=s(y[h++],u):\".\"===y[h+1]||\".\"===y[h]?(\".\"!==y[h]&&(l=s(y[h++],u)),(++h+1===y.length||\"(\"===y[h+1]&&\")\"===y[h+3]||\"'\"===y[h+1]&&\"'\"===y[h+3])&&(d=s(y[h],u),p=Math.pow(10,y[h].length),h++),(\"(\"===y[h]&&\")\"===y[h+2]||\"'\"===y[h]&&\"'\"===y[h+2])&&(f=s(y[h+1],u),m=Math.pow(10,y[h+1].length)-1,h+=3)):\"/\"===y[h+1]||\":\"===y[h+1]?(d=s(y[h],u),p=s(y[h+2],1),h+=3):\"/\"===y[h+3]&&\" \"===y[h+1]&&(l=s(y[h],u),d=s(y[h+2],u),p=s(y[h+4],1),h+=5),y.length<=h){u=i=f+(o=p*m)*l+m*d;break}default:c()}if(0===o)throw new a;r.s=u<0?-1:1,r.n=Math.abs(i),r.d=Math.abs(o)};function l(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}function d(e,t){if(!(this instanceof d))return new d(e,t);u(e,t),e=d.REDUCE?l(r.d,r.n):1,this.s=r.s,this.n=r.n/e,this.d=r.d/e}d.REDUCE=1,d.prototype={s:1,n:0,d:1,abs:function(){return new d(this.n,this.d)},neg:function(){return new d(-this.s*this.n,this.d)},add:function(e,t){return u(e,t),new d(this.s*this.n*r.d+r.s*this.d*r.n,this.d*r.d)},sub:function(e,t){return u(e,t),new d(this.s*this.n*r.d-r.s*this.d*r.n,this.d*r.d)},mul:function(e,t){return u(e,t),new d(this.s*r.s*this.n*r.n,this.d*r.d)},div:function(e,t){return u(e,t),new d(this.s*r.s*this.n*r.d,this.d*r.n)},clone:function(){return new d(this)},mod:function(e,t){return isNaN(this.n)||isNaN(this.d)?new d(NaN):void 0===e?new d(this.s*this.n%this.d,1):(u(e,t),0===r.n&&0===this.d&&d(0,0),new d(this.s*(r.d*this.n)%(r.n*this.d),r.d*this.d))},gcd:function(e,t){return u(e,t),new d(l(r.n,this.n)*l(r.d,this.d),r.d*this.d)},lcm:function(e,t){return u(e,t),0===r.n&&0===this.n?new d:new d(r.n*this.n,l(r.n,this.n)*l(r.d,this.d))},ceil:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new d(NaN):new d(Math.ceil(e*this.s*this.n/this.d),e)},floor:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new d(NaN):new d(Math.floor(e*this.s*this.n/this.d),e)},round:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new d(NaN):new d(Math.round(e*this.s*this.n/this.d),e)},inverse:function(){return new d(this.s*this.d,this.n)},pow:function(e){return e<0?new d(Math.pow(this.s*this.d,-e),Math.pow(this.n,-e)):new d(Math.pow(this.s*this.n,e),Math.pow(this.d,e))},equals:function(e,t){return u(e,t),this.s*this.n*r.d==r.s*r.n*this.d},compare:function(e,t){u(e,t);var n=this.s*this.n*r.d-r.s*r.n*this.d;return(0<n)-(n<0)},simplify:function(e){if(isNaN(this.n)||isNaN(this.d))return this;var t=this.abs().toContinued();function n(e){return 1===e.length?new d(e[0]):n(e.slice(1)).inverse().add(e[0])}e=e||.001;for(var r=0;r<t.length;r++){var i=n(t.slice(0,r+1));if(i.sub(this.abs()).abs().valueOf()<e)return i.mul(this.s)}return this},divisible:function(e,t){return u(e,t),!(!(r.n*this.d)||this.n*r.d%(r.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var t,n=\"\",r=this.n,i=this.d;return this.s<0&&(n+=\"-\"),1===i?n+=r:(e&&(t=Math.floor(r/i))>0&&(n+=t,n+=\" \",r%=i),n+=r,n+=\"/\",n+=i),n},toLatex:function(e){var t,n=\"\",r=this.n,i=this.d;return this.s<0&&(n+=\"-\"),1===i?n+=r:(e&&(t=Math.floor(r/i))>0&&(n+=t,r%=i),n+=\"\\\\frac{\",n+=r,n+=\"}{\",n+=i,n+=\"}\"),n},toContinued:function(){var e,t=this.n,n=this.d,r=[];if(isNaN(this.n)||isNaN(this.d))return r;do{r.push(Math.floor(t/n)),e=t%n,t=n,n=e}while(1!==t);return r},toString:function(e){var t,n=this.n,r=this.d;if(isNaN(n)||isNaN(r))return\"NaN\";d.REDUCE||(n/=t=l(n,r),r/=t),e=e||15;var i=function(e,t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var n=10%t,r=1;1!==n;r++)if(n=10*n%t,r>2e3)return 0;return r}(0,r),a=function(e,t,n){for(var r=1,i=function(e,t,n){for(var r=1;t>0;e=e*e%n,t>>=1)1&t&&(r=r*e%n);return r}(10,n,t),a=0;a<300;a++){if(r===i)return a;r=10*r%t,i=10*i%t}return 0}(0,r,i),o=-1===this.s?\"-\":\"\";if(o+=n/r|0,n%=r,(n*=10)&&(o+=\".\"),i){for(var s=a;s--;)o+=n/r|0,n%=r,n*=10;o+=\"(\";for(s=i;s--;)o+=n/r|0,n%=r,n*=10;o+=\")\"}else for(s=e;n&&s--;)o+=n/r|0,n%=r,n*=10;return o}},Object.defineProperty(t,\"__esModule\",{value:!0}),d.default=d,d.Fraction=d,e.exports=d}()})),w=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFractionClass=void 0;var n,r=(n=_)&&n.__esModule?n:{default:n};var i=[],a=(0,h.factory)(\"Fraction\",i,(function(){return r.default.prototype.type=\"Fraction\",r.default.prototype.isFraction=!0,r.default.prototype.toJSON=function(){return{mathjs:\"Fraction\",n:this.s*this.n,d:this.d}},r.default.fromJSON=function(e){return new r.default(e)},r.default}),{isClass:!0});t.createFractionClass=a})),N=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRangeClass=void 0;var n=[],r=(0,h.factory)(\"Range\",n,(function(){function e(t,n,r){if(!(this instanceof e))throw new SyntaxError(\"Constructor must be called with the new operator\");var a=null!=t,o=null!=n,s=null!=r;if(a)if((0,i.isBigNumber)(t))t=t.toNumber();else if(\"number\"!=typeof t)throw new TypeError(\"Parameter start must be a number\");if(o)if((0,i.isBigNumber)(n))n=n.toNumber();else if(\"number\"!=typeof n)throw new TypeError(\"Parameter end must be a number\");if(s)if((0,i.isBigNumber)(r))r=r.toNumber();else if(\"number\"!=typeof r)throw new TypeError(\"Parameter step must be a number\");this.start=a?parseFloat(t):0,this.end=o?parseFloat(n):0,this.step=s?parseFloat(r):1}return e.prototype.type=\"Range\",e.prototype.isRange=!0,e.parse=function(t){if(\"string\"!=typeof t)return null;var n=t.split(\":\").map((function(e){return parseFloat(e)}));if(n.some((function(e){return isNaN(e)})))return null;switch(n.length){case 2:return new e(n[0],n[1]);case 3:return new e(n[0],n[2],n[1]);default:return null}},e.prototype.clone=function(){return new e(this.start,this.end,this.step)},e.prototype.size=function(){var e=0,t=this.start,n=this.step,r=this.end-t;return(0,u.sign)(n)===(0,u.sign)(r)?e=Math.ceil(r/n):0===r&&(e=0),isNaN(e)&&(e=0),[e]},e.prototype.min=function(){var e=this.size()[0];return e>0?this.step>0?this.start:this.start+(e-1)*this.step:void 0},e.prototype.max=function(){var e=this.size()[0];return e>0?this.step>0?this.start+(e-1)*this.step:this.start:void 0},e.prototype.forEach=function(e){var t=this.start,n=this.step,r=this.end,i=0;if(n>0)for(;t<r;)e(t,[i],this),t+=n,i++;else if(n<0)for(;t>r;)e(t,[i],this),t+=n,i++},e.prototype.map=function(e){var t=[];return this.forEach((function(n,r,i){t[r[0]]=e(n,r,i)})),t},e.prototype.toArray=function(){var e=[];return this.forEach((function(t,n){e[n[0]]=t})),e},e.prototype.valueOf=function(){return this.toArray()},e.prototype.format=function(e){var t=(0,u.format)(this.start,e);return 1!==this.step&&(t+=\":\"+(0,u.format)(this.step,e)),t+=\":\"+(0,u.format)(this.end,e)},e.prototype.toString=function(){return this.format()},e.prototype.toJSON=function(){return{mathjs:\"Range\",start:this.start,end:this.end,step:this.step}},e.fromJSON=function(t){return new e(t.start,t.end,t.step)},e}),{isClass:!0});t.createRangeClass=r})),M=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMatrixClass=void 0;var n=[],r=(0,h.factory)(\"Matrix\",n,(function(){function e(){if(!(this instanceof e))throw new SyntaxError(\"Constructor must be called with the new operator\")}return e.prototype.type=\"Matrix\",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error(\"Cannot invoke storage on a Matrix interface\")},e.prototype.datatype=function(){throw new Error(\"Cannot invoke datatype on a Matrix interface\")},e.prototype.create=function(e,t){throw new Error(\"Cannot invoke create on a Matrix interface\")},e.prototype.subset=function(e,t,n){throw new Error(\"Cannot invoke subset on a Matrix interface\")},e.prototype.get=function(e){throw new Error(\"Cannot invoke get on a Matrix interface\")},e.prototype.set=function(e,t,n){throw new Error(\"Cannot invoke set on a Matrix interface\")},e.prototype.resize=function(e,t){throw new Error(\"Cannot invoke resize on a Matrix interface\")},e.prototype.reshape=function(e,t){throw new Error(\"Cannot invoke reshape on a Matrix interface\")},e.prototype.clone=function(){throw new Error(\"Cannot invoke clone on a Matrix interface\")},e.prototype.size=function(){throw new Error(\"Cannot invoke size on a Matrix interface\")},e.prototype.map=function(e,t){throw new Error(\"Cannot invoke map on a Matrix interface\")},e.prototype.forEach=function(e){throw new Error(\"Cannot invoke forEach on a Matrix interface\")},e.prototype.toArray=function(){throw new Error(\"Cannot invoke toArray on a Matrix interface\")},e.prototype.valueOf=function(){throw new Error(\"Cannot invoke valueOf on a Matrix interface\")},e.prototype.format=function(e){throw new Error(\"Cannot invoke format on a Matrix interface\")},e.prototype.toString=function(){throw new Error(\"Cannot invoke toString on a Matrix interface\")},e}),{isClass:!0});t.createMatrixClass=r})),O=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDenseMatrixClass=void 0;var n=[\"Matrix\"],r=(0,h.factory)(\"DenseMatrix\",n,(function(e){var t=e.Matrix;function n(e,t){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(t&&!(0,i.isString)(t))throw new Error(\"Invalid datatype: \"+t);if((0,i.isMatrix)(e))\"DenseMatrix\"===e.type?(this._data=(0,a.clone)(e._data),this._size=(0,a.clone)(e._size),this._datatype=t||e._datatype):(this._data=e.toArray(),this._size=e.size(),this._datatype=t||e._datatype);else if(e&&(0,i.isArray)(e.data)&&(0,i.isArray)(e.size))this._data=e.data,this._size=e.size,(0,m.validate)(this._data,this._size),this._datatype=t||e.datatype;else if((0,i.isArray)(e))this._data=function e(t){for(var n=0,r=t.length;n<r;n++){var a=t[n];(0,i.isArray)(a)?t[n]=e(a):a&&!0===a.isMatrix&&(t[n]=e(a.valueOf()))}return t}(e),this._size=(0,m.arraySize)(this._data),(0,m.validate)(this._data,this._size),this._datatype=t;else{if(e)throw new TypeError(\"Unsupported type of data (\"+(0,i.typeOf)(e)+\")\");this._data=[],this._size=[0],this._datatype=t}}function r(e,t){if(!(0,i.isIndex)(t))throw new TypeError(\"Invalid index\");if(t.isScalar())return e.get(t.min());var r=t.size();if(r.length!==e._size.length)throw new f.DimensionError(r.length,e._size.length);for(var a=t.min(),o=t.max(),s=0,c=e._size.length;s<c;s++)(0,m.validateIndex)(a[s],e._size[s]),(0,m.validateIndex)(o[s],e._size[s]);return new n(function e(t,n,r,i){var a=i===r-1,o=n.dimension(i);return a?o.map((function(e){return(0,m.validateIndex)(e,t.length),t[e]})).valueOf():o.map((function(a){(0,m.validateIndex)(a,t.length);var o=t[a];return e(o,n,r,i+1)})).valueOf()}(e._data,t,r.length,0),e._datatype)}function o(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError(\"Invalid index\");var o,s=t.size(),u=t.isScalar();if((0,i.isMatrix)(n)?(o=n.size(),n=n.valueOf()):o=(0,m.arraySize)(n),u){if(0!==o.length)throw new TypeError(\"Scalar expected\");e.set(t.min(),n,r)}else{if(s.length<e._size.length)throw new f.DimensionError(s.length,e._size.length,\"<\");if(o.length<s.length){for(var l=0,d=0;1===s[l]&&1===o[l];)l++;for(;1===s[l];)d++,l++;n=(0,m.unsqueeze)(n,s.length,d,o)}if(!(0,a.deepStrictEqual)(s,o))throw new f.DimensionError(s,o,\">\");c(e,t.max().map((function(e){return e+1})),r);var p=s.length;!function e(t,n,r,i,a){var o=a===i-1,s=n.dimension(a);o?s.forEach((function(e,n){(0,m.validateIndex)(e),t[e]=r[n[0]]})):s.forEach((function(o,s){(0,m.validateIndex)(o),e(t[o],n,r[s[0]],i,a+1)}))}(e._data,t,n,p,0)}return e}function s(e,t,n){if(0===t.length){for(var r=e._data;(0,i.isArray)(r);)r=r[0];return r}return e._size=t.slice(0),e._data=(0,m.resize)(e._data,e._size,n),e}function c(e,t,n){for(var r=e._size.slice(0),i=!1;r.length<t.length;)r.push(0),i=!0;for(var a=0,o=t.length;a<o;a++)t[a]>r[a]&&(r[a]=t[a],i=!0);i&&s(e,r,n)}return n.prototype=new t,n.prototype.createDenseMatrix=function(e,t){return new n(e,t)},n.prototype.type=\"DenseMatrix\",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return(0,m.getArrayDataType)(this._data,i.typeOf)},n.prototype.storage=function(){return\"dense\"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(e,t){return new n(e,t)},n.prototype.subset=function(e,t,n){switch(arguments.length){case 1:return r(this,e);case 2:case 3:return o(this,e,t,n);default:throw new SyntaxError(\"Wrong number of arguments\")}},n.prototype.get=function(e){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected\");if(e.length!==this._size.length)throw new f.DimensionError(e.length,this._size.length);for(var t=0;t<e.length;t++)(0,m.validateIndex)(e[t],this._size[t]);for(var n=this._data,r=0,a=e.length;r<a;r++){var o=e[r];(0,m.validateIndex)(o,n.length),n=n[o]}return n},n.prototype.set=function(e,t,n){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected\");if(e.length<this._size.length)throw new f.DimensionError(e.length,this._size.length,\"<\");var r,a,o;c(this,e.map((function(e){return e+1})),n);var s=this._data;for(r=0,a=e.length-1;r<a;r++)o=e[r],(0,m.validateIndex)(o,s.length),s=s[o];return o=e[e.length-1],(0,m.validateIndex)(o,s.length),s[o]=t,this},n.prototype.resize=function(e,t,n){if(!(0,i.isCollection)(e))throw new TypeError(\"Array or Matrix expected\");var r=e.valueOf().map((function(e){return Array.isArray(e)&&1===e.length?e[0]:e}));return s(n?this.clone():this,r,t)},n.prototype.reshape=function(e,t){var n=t?this.clone():this;return n._data=(0,m.reshape)(n._data,e),n._size=e.slice(0),n},n.prototype.clone=function(){return new n({data:(0,a.clone)(this._data),size:(0,a.clone)(this._size),datatype:this._datatype})},n.prototype.size=function(){return this._size.slice(0)},n.prototype.map=function(e){var t=this,r=function n(r,a){return(0,i.isArray)(r)?r.map((function(e,t){return n(e,a.concat(t))})):e(r,a,t)}(this._data,[]);return new n(r,void 0!==this._datatype?(0,m.getArrayDataType)(r,i.typeOf):void 0)},n.prototype.forEach=function(e){var t=this;!function n(r,a){(0,i.isArray)(r)?r.forEach((function(e,t){n(e,a.concat(t))})):e(r,a,t)}(this._data,[])},n.prototype.toArray=function(){return(0,a.clone)(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(e){return(0,d.format)(this._data,e)},n.prototype.toString=function(){return(0,d.format)(this._data)},n.prototype.toJSON=function(){return{mathjs:\"DenseMatrix\",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(e){if(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e))throw new TypeError(\"The parameter k must be an integer number\")}else e=0;for(var t=e>0?e:0,r=e<0?-e:0,a=this._size[0],o=this._size[1],s=Math.min(a-r,o-t),c=[],l=0;l<s;l++)c[l]=this._data[l+r][l+t];return new n({data:c,size:[s],datatype:this._datatype})},n.diagonal=function(e,t,r,a){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected, size parameter\");if(2!==e.length)throw new Error(\"Only two dimensions matrix are supported\");if(e=e.map((function(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<1)throw new Error(\"Size values must be positive integers\");return e})),r){if((0,i.isBigNumber)(r)&&(r=r.toNumber()),!(0,i.isNumber)(r)||!(0,u.isInteger)(r))throw new TypeError(\"The parameter k must be an integer number\")}else r=0;var o,s=r>0?r:0,c=r<0?-r:0,l=e[0],d=e[1],f=Math.min(l-c,d-s);if((0,i.isArray)(t)){if(t.length!==f)throw new Error(\"Invalid value array length\");o=function(e){return t[e]}}else if((0,i.isMatrix)(t)){var p=t.size();if(1!==p.length||p[0]!==f)throw new Error(\"Invalid matrix length\");o=function(e){return t.get([e])}}else o=function(){return t};a||(a=(0,i.isBigNumber)(o(0))?o(0).mul(0):0);var h=[];if(e.length>0){h=(0,m.resize)(h,e,a);for(var y=0;y<f;y++)h[y+c][y+s]=o(y)}return new n({data:h,size:[l,d]})},n.fromJSON=function(e){return new n(e)},n.prototype.swapRows=function(e,t){if(!((0,i.isNumber)(e)&&(0,u.isInteger)(e)&&(0,i.isNumber)(t)&&(0,u.isInteger)(t)))throw new Error(\"Row index must be positive integers\");if(2!==this._size.length)throw new Error(\"Only two dimensional matrix is supported\");return(0,m.validateIndex)(e,this._size[0]),(0,m.validateIndex)(t,this._size[0]),n._swapRows(e,t,this._data),this},n._swapRows=function(e,t,n){var r=n[e];n[e]=n[t],n[t]=r},n}),{isClass:!0});t.createDenseMatrixClass=r})),S=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createClone=void 0;var n=[\"typed\"],r=(0,h.factory)(\"clone\",n,(function(e){return(0,e.typed)(\"clone\",{any:a.clone})}));t.createClone=r})),P=t((function(e,t){function n(e,t,r){var i,a,o,s;if(t<=0){if(Array.isArray(e[0])){for(s=function(e){var t,n,r=e.length,i=e[0].length,a=[];for(n=0;n<i;n++){var o=[];for(t=0;t<r;t++)o.push(e[t][n]);a.push(o)}return a}(e),a=[],i=0;i<s.length;i++)a[i]=n(s[i],t-1,r);return a}for(o=e[0],i=1;i<e.length;i++)o=r(o,e[i]);return o}for(a=[],i=0;i<e.length;i++)a[i]=n(e[i],t-1,r);return a}Object.defineProperty(t,\"__esModule\",{value:!0}),t.containsCollections=function(e){for(var t=0;t<e.length;t++)if((0,i.isCollection)(e[t]))return!0;return!1},t.deepForEach=function e(t,n){(0,i.isMatrix)(t)&&(t=t.valueOf());for(var r=0,a=t.length;r<a;r++){var o=t[r];Array.isArray(o)?e(o,n):n(o)}},t.deepMap=function e(t,n,r){return t&&\"function\"==typeof t.map?t.map((function(t){return e(t,n)})):n(t)},t.reduce=function(e,t,r){var a=Array.isArray(e)?(0,m.arraySize)(e):e.size();if(t<0||t>=a.length)throw new p.IndexError(t,a.length);return(0,i.isMatrix)(e)?e.create(n(e.valueOf(),t,r)):n(e,t,r)},t.scatter=function(e,t,n,r,i,a,o,s,c,u,l){var d,f,p,m,h=e._values,y=e._index,v=e._ptr;if(r)for(f=v[t],p=v[t+1],d=f;d<p;d++)m=y[d],n[m]!==a?(n[m]=a,o.push(m),u?(r[m]=c?s(h[d],l):s(l,h[d]),i[m]=a):r[m]=h[d]):(r[m]=c?s(h[d],r[m]):s(r[m],h[d]),i[m]=a);else for(f=v[t],p=v[t+1],d=f;d<p;d++)m=y[d],n[m]!==a?(n[m]=a,o.push(m)):i[m]=a}})),j=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsInteger=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isInteger\",n,(function(e){return(0,e.typed)(\"isInteger\",{number:u.isInteger,BigNumber:function(e){return e.isInt()},Fraction:function(e){return 1===e.d&&isFinite(e.n)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsInteger=r})),A=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.absNumber=i,t.addNumber=a,t.subtractNumber=o,t.multiplyNumber=s,t.divideNumber=c,t.unaryMinusNumber=l,t.unaryPlusNumber=d,t.cbrtNumber=f,t.ceilNumber=p,t.cubeNumber=m,t.expNumber=h,t.expm1Number=y,t.fixNumber=v,t.floorNumber=g,t.gcdNumber=b,t.lcmNumber=x,t.logNumber=D,t.log10Number=_,t.log2Number=w,t.log1pNumber=N,t.modNumber=M,t.nthRootNumber=O,t.signNumber=S,t.sqrtNumber=P,t.squareNumber=j,t.xgcdNumber=A,t.powNumber=E,t.roundNumber=C,t.normNumber=T;var n=\"number\",r=\"number, number\";function i(e){return Math.abs(e)}function a(e,t){return e+t}function o(e,t){return e-t}function s(e,t){return e*t}function c(e,t){return e/t}function l(e){return-e}function d(e){return e}function f(e){return(0,u.cbrt)(e)}function p(e){return Math.ceil(e)}function m(e){return e*e*e}function h(e){return Math.exp(e)}function y(e){return(0,u.expm1)(e)}function v(e){return e>0?Math.floor(e):Math.ceil(e)}function g(e){return Math.floor(e)}function b(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Parameters in function gcd must be integer numbers\");for(var n;0!==t;)n=e%t,e=t,t=n;return e<0?-e:e}function x(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Parameters in function lcm must be integer numbers\");if(0===e||0===t)return 0;for(var n,r=e*t;0!==t;)t=e%(n=t),e=n;return Math.abs(r/e)}function D(e){return Math.log(e)}function _(e){return(0,u.log10)(e)}function w(e){return(0,u.log2)(e)}function N(e){return(0,u.log1p)(e)}function M(e,t){if(t>0)return e-t*Math.floor(e/t);if(0===t)return e;throw new Error(\"Cannot calculate mod for a negative divisor\")}function O(e,t){var n=t<0;if(n&&(t=-t),0===t)throw new Error(\"Root must be non-zero\");if(e<0&&Math.abs(t)%2!=1)throw new Error(\"Root must be odd when a is negative.\");if(0===e)return n?1/0:0;if(!isFinite(e))return n?0:e;var r=Math.pow(Math.abs(e),1/t);return r=e<0?-r:r,n?1/r:r}function S(e){return(0,u.sign)(e)}function P(e){return Math.sqrt(e)}function j(e){return e*e}function A(e,t){var n,r,i,a=0,o=1,s=1,c=0;if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Parameters in function xgcd must be integer numbers\");for(;t;)i=e-(r=Math.floor(e/t))*t,n=a,a=o-r*a,o=n,n=s,s=c-r*s,c=n,e=t,t=i;return e<0?[-e,-o,-c]:[e,e?o:0,c]}function E(e,t){return e*e<1&&t===1/0||e*e>1&&t===-1/0?0:Math.pow(e,t)}function C(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return parseFloat((0,u.toFixed)(e,t))}function T(e){return Math.abs(e)}i.signature=n,a.signature=r,o.signature=r,s.signature=r,c.signature=r,l.signature=n,d.signature=n,f.signature=n,p.signature=n,m.signature=n,h.signature=n,y.signature=n,v.signature=n,g.signature=n,b.signature=r,x.signature=r,D.signature=n,_.signature=n,w.signature=n,N.signature=n,M.signature=r,O.signature=r,S.signature=n,P.signature=n,j.signature=n,A.signature=r,E.signature=r,C.signature=r,T.signature=n})),E=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitAndNumber=r,t.bitNotNumber=i,t.bitOrNumber=a,t.bitXorNumber=o,t.leftShiftNumber=s,t.rightArithShiftNumber=c,t.rightLogShiftNumber=l;var n=\"number, number\";function r(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Integers expected in function bitAnd\");return e&t}function i(e){if(!(0,u.isInteger)(e))throw new Error(\"Integer expected in function bitNot\");return~e}function a(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Integers expected in function bitOr\");return e|t}function o(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Integers expected in function bitXor\");return e^t}function s(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Integers expected in function leftShift\");return e<<t}function c(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Integers expected in function rightArithShift\");return e>>t}function l(e,t){if(!(0,u.isInteger)(e)||!(0,u.isInteger)(t))throw new Error(\"Integers expected in function rightLogShift\");return e>>>t}r.signature=n,i.signature=\"number\",a.signature=n,o.signature=n,s.signature=n,c.signature=n,l.signature=n})),C=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.product=function e(t,n){if(n<t)return 1;if(n===t)return n;var r=n+t>>1;return e(t,r)*e(r+1,n)}})),T=t((function(e,t){function n(e,t){if(!(0,u.isInteger)(e)||e<0)throw new TypeError(\"Positive integer value expected in function combinations\");if(!(0,u.isInteger)(t)||t<0)throw new TypeError(\"Positive integer value expected in function combinations\");if(t>e)throw new TypeError(\"k must be less than or equal to n\");var n=e-t;return t<n?(0,C.product)(n+1,e)/(0,C.product)(1,t):(0,C.product)(t+1,e)/(0,C.product)(1,n)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.combinationsNumber=n,n.signature=\"number, number\"})),k=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.phi=t.e=t.tau=t.pi=void 0;var n=Math.PI;t.pi=n;var r=2*Math.PI;t.tau=r;var i=Math.E;t.e=i;t.phi=1.618033988749895})),I=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.notNumber=r,t.orNumber=i,t.xorNumber=a,t.andNumber=o;var n=\"number, number\";function r(e){return!e}function i(e,t){return!(!e&&!t)}function a(e,t){return!!e!=!!t}function o(e,t){return!(!e||!t)}r.signature=\"number\",i.signature=n,a.signature=n,o.signature=n})),B=Object.freeze({__proto__:null}),z=t((function(e,t){function n(e){var t;if((0,u.isInteger)(e))return e<=0?isFinite(e)?1/0:NaN:e>171?1/0:(0,C.product)(1,e-1);if(e<.5)return Math.PI/(Math.sin(Math.PI*e)*n(1-e));if(e>=171.35)return 1/0;if(e>85){var a=e*e,o=a*e,s=o*e,c=s*e;return Math.sqrt(2*Math.PI/e)*Math.pow(e/Math.E,e)*(1+1/(12*e)+1/(288*a)-139/(51840*o)-571/(2488320*s)+163879/(209018880*c)+5246819/(75246796800*c*e))}--e,t=i[0];for(var l=1;l<i.length;++l)t+=i[l]/(e+l);var d=e+r+.5;return Math.sqrt(2*Math.PI)*Math.pow(d,e+.5)*Math.exp(-d)*t}Object.defineProperty(t,\"__esModule\",{value:!0}),t.gammaNumber=n,t.gammaP=t.gammaG=void 0,n.signature=\"number\";var r=4.7421875;t.gammaG=r;var i=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22];t.gammaP=i})),R=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acosNumber=r,t.acoshNumber=i,t.acotNumber=a,t.acothNumber=o,t.acscNumber=s,t.acschNumber=c,t.asecNumber=l,t.asechNumber=d,t.asinNumber=f,t.asinhNumber=p,t.atanNumber=m,t.atan2Number=h,t.atanhNumber=y,t.cosNumber=v,t.coshNumber=g,t.cotNumber=b,t.cothNumber=x,t.cscNumber=D,t.cschNumber=_,t.secNumber=w,t.sechNumber=N,t.sinNumber=M,t.sinhNumber=O,t.tanNumber=S,t.tanhNumber=P;var n=\"number\";function r(e){return Math.acos(e)}function i(e){return(0,u.acosh)(e)}function a(e){return Math.atan(1/e)}function o(e){return isFinite(e)?(Math.log((e+1)/e)+Math.log(e/(e-1)))/2:0}function s(e){return Math.asin(1/e)}function c(e){var t=1/e;return Math.log(t+Math.sqrt(t*t+1))}function l(e){return Math.acos(1/e)}function d(e){var t=1/e,n=Math.sqrt(t*t-1);return Math.log(n+t)}function f(e){return Math.asin(e)}function p(e){return(0,u.asinh)(e)}function m(e){return Math.atan(e)}function h(e,t){return Math.atan2(e,t)}function y(e){return(0,u.atanh)(e)}function v(e){return Math.cos(e)}function g(e){return(0,u.cosh)(e)}function b(e){return 1/Math.tan(e)}function x(e){var t=Math.exp(2*e);return(t+1)/(t-1)}function D(e){return 1/Math.sin(e)}function _(e){return 0===e?Number.POSITIVE_INFINITY:Math.abs(2/(Math.exp(e)-Math.exp(-e)))*(0,u.sign)(e)}function w(e){return 1/Math.cos(e)}function N(e){return 2/(Math.exp(e)+Math.exp(-e))}function M(e){return Math.sin(e)}function O(e){return(0,u.sinh)(e)}function S(e){return Math.tan(e)}function P(e){return(0,u.tanh)(e)}r.signature=n,i.signature=n,a.signature=n,o.signature=n,s.signature=n,c.signature=n,l.signature=n,d.signature=n,f.signature=n,p.signature=n,m.signature=n,h.signature=\"number, number\",y.signature=n,v.signature=n,g.signature=n,b.signature=n,x.signature=n,D.signature=n,_.signature=n,w.signature=n,N.signature=n,M.signature=n,O.signature=n,S.signature=n,P.signature=n})),q=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isIntegerNumber=r,t.isNegativeNumber=i,t.isPositiveNumber=a,t.isZeroNumber=o,t.isNaNNumber=s;var n=\"number\";function r(e){return(0,u.isInteger)(e)}function i(e){return e<0}function a(e){return e>0}function o(e){return 0===e}function s(e){return Number.isNaN(e)}r.signature=n,i.signature=n,a.signature=n,o.signature=n,s.signature=n})),F=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),Object.keys(A).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===A[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return A[e]}}))})),Object.keys(E).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===E[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return E[e]}}))})),Object.keys(T).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===T[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return T[e]}}))})),Object.keys(k).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===k[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return k[e]}}))})),Object.keys(I).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===I[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return I[e]}}))})),Object.keys(B).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===B[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return B[e]}}))})),Object.keys(z).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===z[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return z[e]}}))})),Object.keys(R).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===R[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return R[e]}}))})),Object.keys(q).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(e in t&&t[e]===q[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return q[e]}}))}))})),U=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsNegative=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isNegative\",n,(function(e){return(0,e.typed)(\"isNegative\",{number:F.isNegativeNumber,BigNumber:function(e){return e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s<0},Unit:function(e){return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsNegative=r})),L=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsNumeric=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isNumeric\",n,(function(e){return(0,e.typed)(\"isNumeric\",{\"number | BigNumber | Fraction | boolean\":function(){return!0},\"Complex | Unit | string | null | undefined | Node\":function(){return!1},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsNumeric=r})),H=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createHasNumericValue=void 0;var n=\"hasNumericValue\",r=[\"typed\",\"isNumeric\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.isNumeric;return t(n,{string:function(e){return e.trim().length>0&&!isNaN(Number(e))},any:function(e){return r(e)}})}));t.createHasNumericValue=i})),Z=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsPositive=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isPositive\",n,(function(e){return(0,e.typed)(\"isPositive\",{number:F.isPositiveNumber,BigNumber:function(e){return!e.isNeg()&&!e.isZero()&&!e.isNaN()},Fraction:function(e){return e.s>0&&e.n>0},Unit:function(e){return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsPositive=r})),V=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsZero=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isZero\",n,(function(e){return(0,e.typed)(\"isZero\",{number:F.isZeroNumber,BigNumber:function(e){return e.isZero()},Complex:function(e){return 0===e.re&&0===e.im},Fraction:function(e){return 1===e.d&&0===e.n},Unit:function(e){return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsZero=r})),W=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsNaN=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isNaN\",n,(function(e){return(0,e.typed)(\"isNaN\",{number:F.isNaNNumber,BigNumber:function(e){return e.isNaN()},Fraction:function(e){return!1},Complex:function(e){return e.isNaN()},Unit:function(e){return Number.isNaN(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,Number.isNaN)}})}));t.createIsNaN=r})),G=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTypeOf=void 0;var n=[\"typed\"],r=(0,h.factory)(\"typeOf\",n,(function(e){return(0,e.typed)(\"typeOf\",{any:i.typeOf})}));t.createTypeOf=r})),$=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nearlyEqual=function(e,t,n){if(null==n)return e.eq(t);if(e.eq(t))return!0;if(e.isNaN()||t.isNaN())return!1;if(e.isFinite()&&t.isFinite()){var r=e.minus(t).abs();if(r.isZero())return!0;var i=e.constructor.max(e.abs(),t.abs());return r.lte(i.times(n))}return!1}})),Q=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.complexEquals=function(e,t,n){return(0,u.nearlyEqual)(e.re,t.re,n)&&(0,u.nearlyEqual)(e.im,t.im,n)}})),X=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createEqualScalarNumber=t.createEqualScalar=void 0;var n=\"equalScalar\",r=[\"typed\",\"config\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config;return t(n,{\"boolean, boolean\":function(e,t){return e===t},\"number, number\":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)},\"BigNumber, BigNumber\":function(e,t){return e.eq(t)||(0,$.nearlyEqual)(e,t,r.epsilon)},\"Fraction, Fraction\":function(e,t){return e.equals(t)},\"Complex, Complex\":function(e,t){return(0,Q.complexEquals)(e,t,r.epsilon)},\"Unit, Unit\":function(e,t){if(!e.equalBase(t))throw new Error(\"Cannot compare units with different base\");return this(e.value,t.value)}})}));t.createEqualScalar=i;var a=(0,h.factory)(n,[\"typed\",\"config\"],(function(e){var t=e.typed,r=e.config;return t(n,{\"number, number\":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createEqualScalarNumber=a})),Y=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSparseMatrixClass=void 0;var n=[\"typed\",\"equalScalar\",\"Matrix\"],r=(0,h.factory)(\"SparseMatrix\",n,(function(e){var t=e.typed,n=e.equalScalar,r=e.Matrix;function o(e,t){if(!(this instanceof o))throw new SyntaxError(\"Constructor must be called with the new operator\");if(t&&!(0,i.isString)(t))throw new Error(\"Invalid datatype: \"+t);if((0,i.isMatrix)(e))!function(e,t,n){\"SparseMatrix\"===t.type?(e._values=t._values?(0,a.clone)(t._values):void 0,e._index=(0,a.clone)(t._index),e._ptr=(0,a.clone)(t._ptr),e._size=(0,a.clone)(t._size),e._datatype=n||t._datatype):s(e,t.valueOf(),n||t._datatype)}(this,e,t);else if(e&&(0,i.isArray)(e.index)&&(0,i.isArray)(e.ptr)&&(0,i.isArray)(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if((0,i.isArray)(e))s(this,e,t);else{if(e)throw new TypeError(\"Unsupported type of data (\"+(0,i.typeOf)(e)+\")\");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}function s(e,r,a){e._values=[],e._index=[],e._ptr=[],e._datatype=a;var o=r.length,s=0,c=n,u=0;if((0,i.isString)(a)&&(c=t.find(n,[a,a])||n,u=t.convert(0,a)),o>0){var l=0;do{e._ptr.push(e._index.length);for(var d=0;d<o;d++){var f=r[d];if((0,i.isArray)(f)){if(0===l&&s<f.length&&(s=f.length),l<f.length){var p=f[l];c(p,u)||(e._values.push(p),e._index.push(d))}}else 0===l&&s<1&&(s=1),c(f,u)||(e._values.push(f),e._index.push(d))}l++}while(l<s)}e._ptr.push(e._index.length),e._size=[o,s]}function c(e,t){if(!(0,i.isIndex)(t))throw new TypeError(\"Invalid index\");if(t.isScalar())return e.get(t.min());var n,r,a,s,c=t.size();if(c.length!==e._size.length)throw new f.DimensionError(c.length,e._size.length);var u=t.min(),l=t.max();for(n=0,r=e._size.length;n<r;n++)(0,m.validateIndex)(u[n],e._size[n]),(0,m.validateIndex)(l[n],e._size[n]);var d=e._values,p=e._index,h=e._ptr,y=t.dimension(0),v=t.dimension(1),g=[],b=[];y.forEach((function(e,t){b[e]=t[0],g[e]=!0}));var x=d?[]:void 0,D=[],_=[];return v.forEach((function(e){for(_.push(D.length),a=h[e],s=h[e+1];a<s;a++)n=p[a],!0===g[n]&&(D.push(b[n]),x&&x.push(d[a]))})),_.push(D.length),new o({values:x,index:D,ptr:_,size:c,datatype:e._datatype})}function l(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError(\"Invalid index\");var o,s=t.size(),c=t.isScalar();if((0,i.isMatrix)(n)?(o=n.size(),n=n.toArray()):o=(0,m.arraySize)(n),c){if(0!==o.length)throw new TypeError(\"Scalar expected\");e.set(t.min(),n,r)}else{if(1!==s.length&&2!==s.length)throw new f.DimensionError(s.length,e._size.length,\"<\");if(o.length<s.length){for(var u=0,l=0;1===s[u]&&1===o[u];)u++;for(;1===s[u];)l++,u++;n=(0,m.unsqueeze)(n,s.length,l,o)}if(!(0,a.deepStrictEqual)(s,o))throw new f.DimensionError(s,o,\">\");for(var d=t.min()[0],p=t.min()[1],h=o[0],y=o[1],v=0;v<h;v++)for(var g=0;g<y;g++){var b=n[v][g];e.set([v+d,g+p],b,r)}}return e}function p(e,t,n,r){if(n-t==0)return n;for(var i=t;i<n;i++)if(r[i]===e)return i;return t}function h(e,t,n,r,i,a,o){i.splice(e,0,r),a.splice(e,0,t);for(var s=n+1;s<o.length;s++)o[s]++}function y(e,r,a,o){var s=o||0,c=n,u=0;(0,i.isString)(e._datatype)&&(c=t.find(n,[e._datatype,e._datatype])||n,u=t.convert(0,e._datatype),s=t.convert(s,e._datatype));var l,d,f,p=!c(s,u),m=e._size[0],h=e._size[1];if(a>h){for(d=h;d<a;d++)if(e._ptr[d]=e._values.length,p)for(l=0;l<m;l++)e._values.push(s),e._index.push(l);e._ptr[a]=e._values.length}else a<h&&(e._ptr.splice(a+1,h-a),e._values.splice(e._ptr[a],e._values.length),e._index.splice(e._ptr[a],e._index.length));if(h=a,r>m){if(p){var y=0;for(d=0;d<h;d++){e._ptr[d]=e._ptr[d]+y,f=e._ptr[d+1]+y;var v=0;for(l=m;l<r;l++,v++)e._values.splice(f+v,0,s),e._index.splice(f+v,0,l),y++}e._ptr[h]=e._values.length}}else if(r<m){var g=0;for(d=0;d<h;d++){e._ptr[d]=e._ptr[d]-g;var b=e._ptr[d],x=e._ptr[d+1]-g;for(f=b;f<x;f++)(l=e._index[f])>r-1&&(e._values.splice(f,1),e._index.splice(f,1),g++)}e._ptr[d]=e._values.length}return e._size[0]=r,e._size[1]=a,e}function v(e,t,n,r,i){var o,s,c=r[0],u=r[1],l=[];for(o=0;o<c;o++)for(l[o]=[],s=0;s<u;s++)l[o][s]=0;for(s=0;s<u;s++)for(var d=n[s],f=n[s+1],p=d;p<f;p++)l[o=t[p]][s]=e?i?(0,a.clone)(e[p]):e[p]:1;return l}return o.prototype=new r,o.prototype.createSparseMatrix=function(e,t){return new o(e,t)},o.prototype.type=\"SparseMatrix\",o.prototype.isSparseMatrix=!0,o.prototype.getDataType=function(){return(0,m.getArrayDataType)(this._values,i.typeOf)},o.prototype.storage=function(){return\"sparse\"},o.prototype.datatype=function(){return this._datatype},o.prototype.create=function(e,t){return new o(e,t)},o.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},o.prototype.subset=function(e,t,n){if(!this._values)throw new Error(\"Cannot invoke subset on a Pattern only matrix\");switch(arguments.length){case 1:return c(this,e);case 2:case 3:return l(this,e,t,n);default:throw new SyntaxError(\"Wrong number of arguments\")}},o.prototype.get=function(e){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected\");if(e.length!==this._size.length)throw new f.DimensionError(e.length,this._size.length);if(!this._values)throw new Error(\"Cannot invoke get on a Pattern only matrix\");var t=e[0],n=e[1];(0,m.validateIndex)(t,this._size[0]),(0,m.validateIndex)(n,this._size[1]);var r=p(t,this._ptr[n],this._ptr[n+1],this._index);return r<this._ptr[n+1]&&this._index[r]===t?this._values[r]:0},o.prototype.set=function(e,r,a){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected\");if(e.length!==this._size.length)throw new f.DimensionError(e.length,this._size.length);if(!this._values)throw new Error(\"Cannot invoke set on a Pattern only matrix\");var o=e[0],s=e[1],c=this._size[0],u=this._size[1],l=n,d=0;(0,i.isString)(this._datatype)&&(l=t.find(n,[this._datatype,this._datatype])||n,d=t.convert(0,this._datatype)),(o>c-1||s>u-1)&&(y(this,Math.max(o+1,c),Math.max(s+1,u),a),c=this._size[0],u=this._size[1]),(0,m.validateIndex)(o,c),(0,m.validateIndex)(s,u);var v=p(o,this._ptr[s],this._ptr[s+1],this._index);return v<this._ptr[s+1]&&this._index[v]===o?l(r,d)?function(e,t,n,r,i){n.splice(e,1),r.splice(e,1);for(var a=t+1;a<i.length;a++)i[a]--}(v,s,this._values,this._index,this._ptr):this._values[v]=r:h(v,o,s,r,this._values,this._index,this._ptr),this},o.prototype.resize=function(e,t,n){if(!(0,i.isCollection)(e))throw new TypeError(\"Array or Matrix expected\");var r=e.valueOf().map((function(e){return Array.isArray(e)&&1===e.length?e[0]:e}));if(2!==r.length)throw new Error(\"Only two dimensions matrix are supported\");return r.forEach((function(e){if(!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<0)throw new TypeError(\"Invalid size, must contain positive integers (size: \"+(0,d.format)(r)+\")\")})),y(n?this.clone():this,r[0],r[1],t)},o.prototype.reshape=function(e,t){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected\");if(2!==e.length)throw new Error(\"Sparse matrices can only be reshaped in two dimensions\");if(e.forEach((function(t){if(!(0,i.isNumber)(t)||!(0,u.isInteger)(t)||t<0)throw new TypeError(\"Invalid size, must contain positive integers (size: \"+(0,d.format)(e)+\")\")})),this._size[0]*this._size[1]!=e[0]*e[1])throw new Error(\"Reshaping sparse matrix will result in the wrong number of elements\");var n=t?this.clone():this;if(this._size[0]===e[0]&&this._size[1]===e[1])return n;for(var r=[],a=0;a<n._ptr.length;a++)for(var o=0;o<n._ptr[a+1]-n._ptr[a];o++)r.push(a);for(var s=n._values.slice(),c=n._index.slice(),l=0;l<n._index.length;l++){var f=c[l],m=r[l],y=f*n._size[1]+m;r[l]=y%e[1],c[l]=Math.floor(y/e[1])}n._values.length=0,n._index.length=0,n._ptr.length=e[1]+1,n._size=e.slice();for(var v=0;v<n._ptr.length;v++)n._ptr[v]=0;for(var g=0;g<s.length;g++){var b=c[g],x=r[g],D=s[g];h(p(b,n._ptr[x],n._ptr[x+1],n._index),b,x,D,n._values,n._index,n._ptr)}return n},o.prototype.clone=function(){return new o({values:this._values?(0,a.clone)(this._values):void 0,index:(0,a.clone)(this._index),ptr:(0,a.clone)(this._ptr),size:(0,a.clone)(this._size),datatype:this._datatype})},o.prototype.size=function(){return this._size.slice(0)},o.prototype.map=function(e,r){if(!this._values)throw new Error(\"Cannot invoke map on a Pattern only matrix\");var a=this;return function(e,r,a,s,c,u,l){var d=[],f=[],p=[],m=n,h=0;(0,i.isString)(e._datatype)&&(m=t.find(n,[e._datatype,e._datatype])||n,h=t.convert(0,e._datatype));for(var y=function(e,t,n){e=u(e,t,n),m(e,h)||(d.push(e),f.push(t))},v=s;v<=c;v++){p.push(d.length);var g=e._ptr[v],b=e._ptr[v+1];if(l)for(var x=g;x<b;x++){var D=e._index[x];D>=r&&D<=a&&y(e._values[x],D-r,v-s)}else{for(var _={},w=g;w<b;w++){var N=e._index[w];_[N]=e._values[w]}for(var M=r;M<=a;M++){var O=M in _?_[M]:0;y(O,M-r,v-s)}}}return p.push(d.length),new o({values:d,index:f,ptr:p,size:[a-r+1,c-s+1]})}(this,0,this._size[0]-1,0,this._size[1]-1,(function(t,n,r){return e(t,[n,r],a)}),r)},o.prototype.forEach=function(e,t){if(!this._values)throw new Error(\"Cannot invoke forEach on a Pattern only matrix\");for(var n=this._size[0],r=this._size[1],i=0;i<r;i++){var a=this._ptr[i],o=this._ptr[i+1];if(t)for(var s=a;s<o;s++){var c=this._index[s];e(this._values[s],[c,i],this)}else{for(var u={},l=a;l<o;l++){u[this._index[l]]=this._values[l]}for(var d=0;d<n;d++){e(d in u?u[d]:0,[d,i],this)}}}},o.prototype.toArray=function(){return v(this._values,this._index,this._ptr,this._size,!0)},o.prototype.valueOf=function(){return v(this._values,this._index,this._ptr,this._size,!1)},o.prototype.format=function(e){for(var t=this._size[0],n=this._size[1],r=this.density(),i=\"Sparse Matrix [\"+(0,d.format)(t,e)+\" x \"+(0,d.format)(n,e)+\"] density: \"+(0,d.format)(r,e)+\"\\n\",a=0;a<n;a++)for(var o=this._ptr[a],s=this._ptr[a+1],c=o;c<s;c++){var u=this._index[c];i+=\"\\n    (\"+(0,d.format)(u,e)+\", \"+(0,d.format)(a,e)+\") ==> \"+(this._values?(0,d.format)(this._values[c],e):\"X\")}return i},o.prototype.toString=function(){return(0,d.format)(this.toArray())},o.prototype.toJSON=function(){return{mathjs:\"SparseMatrix\",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},o.prototype.diagonal=function(e){if(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e))throw new TypeError(\"The parameter k must be an integer number\")}else e=0;var t=e>0?e:0,n=e<0?-e:0,r=this._size[0],a=this._size[1],s=Math.min(r-n,a-t),c=[],l=[],d=[];d[0]=0;for(var f=t;f<a&&c.length<s;f++)for(var p=this._ptr[f],m=this._ptr[f+1],h=p;h<m;h++){var y=this._index[h];if(y===f-t+n){c.push(this._values[h]),l[c.length-1]=y-n;break}}return d.push(c.length),new o({values:c,index:l,ptr:d,size:[s,1]})},o.fromJSON=function(e){return new o(e)},o.diagonal=function(e,r,a,s,c){if(!(0,i.isArray)(e))throw new TypeError(\"Array expected, size parameter\");if(2!==e.length)throw new Error(\"Only two dimensions matrix are supported\");if(e=e.map((function(e){if((0,i.isBigNumber)(e)&&(e=e.toNumber()),!(0,i.isNumber)(e)||!(0,u.isInteger)(e)||e<1)throw new Error(\"Size values must be positive integers\");return e})),a){if((0,i.isBigNumber)(a)&&(a=a.toNumber()),!(0,i.isNumber)(a)||!(0,u.isInteger)(a))throw new TypeError(\"The parameter k must be an integer number\")}else a=0;var l=n,d=0;(0,i.isString)(c)&&(l=t.find(n,[c,c])||n,d=t.convert(0,c));var f,p=a>0?a:0,m=a<0?-a:0,h=e[0],y=e[1],v=Math.min(h-m,y-p);if((0,i.isArray)(r)){if(r.length!==v)throw new Error(\"Invalid value array length\");f=function(e){return r[e]}}else if((0,i.isMatrix)(r)){var g=r.size();if(1!==g.length||g[0]!==v)throw new Error(\"Invalid matrix length\");f=function(e){return r.get([e])}}else f=function(){return r};for(var b=[],x=[],D=[],_=0;_<y;_++){D.push(b.length);var w=_-p;if(w>=0&&w<v){var N=f(w);l(N,d)||(x.push(w+m),b.push(N))}}return D.push(b.length),new o({values:b,index:x,ptr:D,size:[h,y]})},o.prototype.swapRows=function(e,t){if(!((0,i.isNumber)(e)&&(0,u.isInteger)(e)&&(0,i.isNumber)(t)&&(0,u.isInteger)(t)))throw new Error(\"Row index must be positive integers\");if(2!==this._size.length)throw new Error(\"Only two dimensional matrix is supported\");return(0,m.validateIndex)(e,this._size[0]),(0,m.validateIndex)(t,this._size[0]),o._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},o._forEachRow=function(e,t,n,r,i){for(var a=r[e],o=r[e+1],s=a;s<o;s++)i(n[s],t[s])},o._swapRows=function(e,t,n,r,i,a){for(var o=0;o<n;o++){var s=a[o],c=a[o+1],u=p(e,s,c,i),l=p(t,s,c,i);if(u<c&&l<c&&i[u]===e&&i[l]===t){if(r){var d=r[u];r[u]=r[l],r[l]=d}}else if(u<c&&i[u]===e&&(l>=c||i[l]!==t)){var f=r?r[u]:void 0;i.splice(l,0,t),r&&r.splice(l,0,f),i.splice(l<=u?u+1:u,1),r&&r.splice(l<=u?u+1:u,1)}else if(l<c&&i[l]===t&&(u>=c||i[u]!==e)){var m=r?r[l]:void 0;i.splice(u,0,e),r&&r.splice(u,0,m),i.splice(u<=l?l+1:l,1),r&&r.splice(u<=l?l+1:l,1)}}},o}),{isClass:!0});t.createSparseMatrixClass=r})),J=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNumber=void 0;var n=[\"typed\"],r=(0,h.factory)(\"number\",n,(function(e){var t=(0,e.typed)(\"number\",{\"\":function(){return 0},number:function(e){return e},string:function(e){if(\"NaN\"===e)return NaN;var t=Number(e);if(isNaN(t))throw new SyntaxError('String \"'+e+'\" is no valid number');if([\"0b\",\"0o\",\"0x\"].includes(e.substring(0,2))){if(t>Math.pow(2,32)-1)throw new SyntaxError('String \"'.concat(e,'\" is out of range'));2147483648&t&&(t=-1*~(t-1))}return t},BigNumber:function(e){return e.toNumber()},Fraction:function(e){return e.valueOf()},Unit:function(e){throw new Error(\"Second argument with valueless unit expected\")},null:function(e){return 0},\"Unit, string | Unit\":function(e,t){return e.toNumber(t)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}});return t.fromJSON=function(e){return parseFloat(e.value)},t}));t.createNumber=r})),K=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createString=void 0;var n=[\"typed\"],r=(0,h.factory)(\"string\",n,(function(e){return(0,e.typed)(\"string\",{\"\":function(){return\"\"},number:u.format,null:function(e){return\"null\"},boolean:function(e){return e+\"\"},string:function(e){return e},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)},any:function(e){return String(e)}})}));t.createString=r})),ee=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBoolean=void 0;var n=[\"typed\"],r=(0,h.factory)(\"boolean\",n,(function(e){return(0,e.typed)(\"boolean\",{\"\":function(){return!1},boolean:function(e){return e},number:function(e){return!!e},null:function(e){return!1},BigNumber:function(e){return!e.isZero()},string:function(e){var t=e.toLowerCase();if(\"true\"===t)return!0;if(\"false\"===t)return!1;var n=Number(e);if(\"\"!==e&&!isNaN(n))return!!n;throw new Error('Cannot convert \"'+e+'\" to a boolean')},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createBoolean=r})),te=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBignumber=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"bignumber\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"bignumber\",{\"\":function(){return new n(0)},number:function(e){return new n(e+\"\")},string:function(e){return new n(e)},BigNumber:function(e){return e},Fraction:function(e){return new n(e.n).div(e.d).times(e.s)},null:function(e){return new n(0)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createBignumber=r})),ne=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createComplex=void 0;var n=[\"typed\",\"Complex\"],r=(0,h.factory)(\"complex\",n,(function(e){var t=e.typed,n=e.Complex;return t(\"complex\",{\"\":function(){return n.ZERO},number:function(e){return new n(e,0)},\"number, number\":function(e,t){return new n(e,t)},\"BigNumber, BigNumber\":function(e,t){return new n(e.toNumber(),t.toNumber())},Fraction:function(e){return new n(e.valueOf(),0)},Complex:function(e){return e.clone()},string:function(e){return n(e)},null:function(e){return n(0)},Object:function(e){if(\"re\"in e&&\"im\"in e)return new n(e.re,e.im);if(\"r\"in e&&\"phi\"in e||\"abs\"in e&&\"arg\"in e)return new n(e);throw new Error(\"Expected object with properties (re and im) or (r and phi) or (abs and arg)\")},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createComplex=r})),re=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFraction=void 0;var n=[\"typed\",\"Fraction\"],r=(0,h.factory)(\"fraction\",n,(function(e){var t=e.typed,n=e.Fraction;return t(\"fraction\",{number:function(e){if(!isFinite(e)||isNaN(e))throw new Error(e+\" cannot be represented as a fraction\");return new n(e)},string:function(e){return new n(e)},\"number, number\":function(e,t){return new n(e,t)},null:function(e){return new n(0)},BigNumber:function(e){return new n(e.toString())},Fraction:function(e){return e},Object:function(e){return new n(e)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createFraction=r})),ie=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMatrix=void 0;var n=[\"typed\",\"Matrix\",\"DenseMatrix\",\"SparseMatrix\"],r=(0,h.factory)(\"matrix\",n,(function(e){var t=e.typed,n=(e.Matrix,e.DenseMatrix),r=e.SparseMatrix;return t(\"matrix\",{\"\":function(){return i([])},string:function(e){return i([],e)},\"string, string\":function(e,t){return i([],e,t)},Array:function(e){return i(e)},Matrix:function(e){return i(e,e.storage())},\"Array | Matrix, string\":i,\"Array | Matrix, string, string\":i});function i(e,t,i){if(\"dense\"===t||\"default\"===t||void 0===t)return new n(e,i);if(\"sparse\"===t)return new r(e,i);throw new TypeError(\"Unknown matrix type \"+JSON.stringify(t)+\".\")}}));t.createMatrix=r})),ae=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSplitUnit=void 0;var n=[\"typed\"],r=(0,h.factory)(\"splitUnit\",n,(function(e){return(0,e.typed)(\"splitUnit\",{\"Unit, Array\":function(e,t){return e.splitUnit(t)}})}));t.createSplitUnit=r})),oe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnaryMinus=void 0;var n=[\"typed\"],r=(0,h.factory)(\"unaryMinus\",n,(function(e){return(0,e.typed)(\"unaryMinus\",{number:F.unaryMinusNumber,Complex:function(e){return e.neg()},BigNumber:function(e){return e.neg()},Fraction:function(e){return e.neg()},Unit:function(e){var t=e.clone();return t.value=this(e.value),t},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createUnaryMinus=r})),se=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnaryPlus=void 0;var n=[\"typed\",\"config\",\"BigNumber\"],r=(0,h.factory)(\"unaryPlus\",n,(function(e){var t=e.typed,n=e.config,r=e.BigNumber;return t(\"unaryPlus\",{number:F.unaryPlusNumber,Complex:function(e){return e},BigNumber:function(e){return e},Fraction:function(e){return e},Unit:function(e){return e.clone()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},\"boolean | string\":function(e){return\"BigNumber\"===n.number?new r(+e):+e}})}));t.createUnaryPlus=r})),ce=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAbs=void 0;var n=[\"typed\"],r=(0,h.factory)(\"abs\",n,(function(e){return(0,e.typed)(\"abs\",{number:F.absNumber,Complex:function(e){return e.abs()},BigNumber:function(e){return e.abs()},Fraction:function(e){return e.abs()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.abs()}})}));t.createAbs=r})),ue=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createApply=void 0;var n=[\"typed\",\"isInteger\"],r=(0,h.factory)(\"apply\",n,(function(e){var t=e.typed,n=e.isInteger;return t(\"apply\",{\"Array | Matrix, number | BigNumber, function\":function(e,t,r){if(!n(t))throw new TypeError(\"Integer number expected for dimension\");var o=Array.isArray(e)?(0,m.arraySize)(e):e.size();if(t<0||t>=o.length)throw new p.IndexError(t,o.length);return(0,i.isMatrix)(e)?e.create(a(e.valueOf(),t,r)):a(e,t,r)}})}));function a(e,t,n){var r,i,o;if(t<=0){if(Array.isArray(e[0])){for(o=function(e){var t,n,r=e.length,i=e[0].length,a=[];for(n=0;n<i;n++){var o=[];for(t=0;t<r;t++)o.push(e[t][n]);a.push(o)}return a}(e),i=[],r=0;r<o.length;r++)i[r]=a(o[r],t-1,n);return i}return n(e)}for(i=[],r=0;r<e.length;r++)i[r]=a(e[r],t-1,n);return i}t.createApply=r})),le=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAddScalar=void 0;var n=[\"typed\"],r=(0,h.factory)(\"addScalar\",n,(function(e){return(0,e.typed)(\"addScalar\",{\"number, number\":F.addNumber,\"Complex, Complex\":function(e,t){return e.add(t)},\"BigNumber, BigNumber\":function(e,t){return e.plus(t)},\"Fraction, Fraction\":function(e,t){return e.add(t)},\"Unit, Unit\":function(e,t){if(null===e.value||void 0===e.value)throw new Error(\"Parameter x contains a unit with undefined value\");if(null===t.value||void 0===t.value)throw new Error(\"Parameter y contains a unit with undefined value\");if(!e.equalBase(t))throw new Error(\"Units do not match\");var n=e.clone();return n.value=this(n.value,t.value),n.fixPrefix=!1,n}})}));t.createAddScalar=r})),de=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCbrt=void 0;var n=[\"config\",\"typed\",\"isNegative\",\"unaryMinus\",\"matrix\",\"Complex\",\"BigNumber\",\"Fraction\"],r=(0,h.factory)(\"cbrt\",n,(function(e){var t=e.config,n=e.typed,r=e.isNegative,a=e.unaryMinus,o=e.matrix,s=e.Complex,c=e.BigNumber,u=e.Fraction;return n(\"cbrt\",{number:F.cbrtNumber,Complex:l,\"Complex, boolean\":l,BigNumber:function(e){return e.cbrt()},Unit:function(e){if(e.value&&(0,i.isComplex)(e.value)){var t=e.clone();return t.value=1,(t=t.pow(1/3)).value=l(e.value),t}var n,o=r(e.value);o&&(e.value=a(e.value)),n=(0,i.isBigNumber)(e.value)?new c(1).div(3):(0,i.isFraction)(e.value)?new u(1,3):1/3;var s=e.pow(n);return o&&(s.value=a(s.value)),s},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}});function l(e,n){var r=e.arg()/3,i=e.abs(),a=new s((0,F.cbrtNumber)(i),0).mul(new s(0,r).exp());if(n){var c=[a,new s((0,F.cbrtNumber)(i),0).mul(new s(0,r+2*Math.PI/3).exp()),new s((0,F.cbrtNumber)(i),0).mul(new s(0,r-2*Math.PI/3).exp())];return\"Array\"===t.matrix?c:o(c)}return a}}));t.createCbrt=r})),fe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm11=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm11\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i,a){var o=e._values,s=e._index,c=e._ptr,u=e._size,l=e._datatype;if(!o)throw new Error(\"Cannot perform operation on Pattern Sparse Matrix and Scalar value\");var d,f=u[0],p=u[1],m=n,h=0,y=i;\"string\"==typeof l&&(d=l,m=t.find(n,[d,d]),h=t.convert(0,d),r=t.convert(r,d),y=t.find(i,[d,d]));for(var v=[],g=[],b=[],x=0;x<p;x++){b[x]=g.length;for(var D=c[x],_=c[x+1],w=D;w<_;w++){var N=s[w],M=a?y(r,o[w]):y(o[w],r);m(M,h)||(g.push(N),v.push(M))}}return b[p]=g.length,e.createSparseMatrix({values:v,index:g,ptr:b,size:[f,p],datatype:d})}}));t.createAlgorithm11=r})),pe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm14=void 0;var n=[\"typed\"],r=(0,h.factory)(\"algorithm14\",n,(function(e){var t=e.typed;return function(e,n,r,i){var o,s=e._data,c=e._size,u=e._datatype,l=r;\"string\"==typeof u&&(o=u,n=t.convert(n,o),l=t.find(r,[o,o]));var d=c.length>0?function e(t,n,r,i,a,o,s){var c=[];if(n===r.length-1)for(var u=0;u<i;u++)c[u]=s?t(o,a[u]):t(a[u],o);else for(var l=0;l<i;l++)c[l]=e(t,n+1,r,r[n+1],a[l],o,s);return c}(l,0,c,c[0],s,n,i):[];return e.createDenseMatrix({data:d,size:(0,a.clone)(c),datatype:o})}}));t.createAlgorithm14=r})),me=t((function(e,t){function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCeil=void 0;var i=[\"typed\",\"config\",\"round\",\"matrix\",\"equalScalar\"],a=(0,h.factory)(\"ceil\",i,(function(e){var t=e.typed,r=e.config,i=e.round,a=e.matrix,o=e.equalScalar,s=(0,fe.createAlgorithm11)({typed:t,equalScalar:o}),c=(0,pe.createAlgorithm14)({typed:t});return t(\"ceil\",{number:function(e){return(0,u.nearlyEqual)(e,i(e),r.epsilon)?i(e):(0,F.ceilNumber)(e)},\"number, number\":function(e,t){if((0,u.nearlyEqual)(e,i(e,t),r.epsilon))return i(e,t);var a=n(\"\".concat(e,\"e\").split(\"e\"),2),o=a[0],s=a[1],c=Math.ceil(Number(\"\".concat(o,\"e\").concat(Number(s)+t))),l=n(\"\".concat(c,\"e\").split(\"e\"),2);return o=l[0],s=l[1],Number(\"\".concat(o,\"e\").concat(Number(s)-t))},Complex:function(e){return e.ceil()},\"Complex, number\":function(e,t){return e.ceil(t)},BigNumber:function(e){return(0,$.nearlyEqual)(e,i(e),r.epsilon)?i(e):e.ceil()},\"BigNumber, BigNumber\":function(e,t){return(0,$.nearlyEqual)(e,i(e,t),r.epsilon)?i(e,t):e.toDecimalPlaces(t.toNumber(),g.Decimal.ROUND_CEIL)},Fraction:function(e){return e.ceil()},\"Fraction, number\":function(e,t){return e.ceil(t)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},\"Array | Matrix, number\":function(e,t){var n=this;return(0,P.deepMap)(e,(function(e){return n(e,t)}),!0)},\"SparseMatrix, number | BigNumber\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return c(e,t,this,!1)},\"number | Complex | BigNumber, Array\":function(e,t){return c(a(t),e,this,!0).valueOf()}})}));t.createCeil=a})),he=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCube=void 0;var n=[\"typed\"],r=(0,h.factory)(\"cube\",n,(function(e){return(0,e.typed)(\"cube\",{number:F.cubeNumber,Complex:function(e){return e.mul(e).mul(e)},BigNumber:function(e){return e.times(e).times(e)},Fraction:function(e){return e.pow(3)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.pow(3)}})}));t.createCube=r})),ye=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createExp=void 0;var n=[\"typed\"],r=(0,h.factory)(\"exp\",n,(function(e){return(0,e.typed)(\"exp\",{number:F.expNumber,Complex:function(e){return e.exp()},BigNumber:function(e){return e.exp()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createExp=r})),ve=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createExpm1=void 0;var n=[\"typed\",\"Complex\"],r=(0,h.factory)(\"expm1\",n,(function(e){var t=e.typed,n=e.Complex;return t(\"expm1\",{number:F.expm1Number,Complex:function(e){var t=Math.exp(e.re);return new n(t*Math.cos(e.im)-1,t*Math.sin(e.im))},BigNumber:function(e){return e.exp().minus(1)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createExpm1=r})),ge=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFix=void 0;var n=[\"typed\",\"Complex\",\"matrix\",\"ceil\",\"floor\"],r=(0,h.factory)(\"fix\",n,(function(e){var t=e.typed,n=e.Complex,r=e.matrix,i=e.ceil,a=e.floor,o=(0,pe.createAlgorithm14)({typed:t});return t(\"fix\",{number:function(e){return e>0?a(e):i(e)},\"number, number | BigNumber\":function(e,t){return e>0?a(e,t):i(e,t)},Complex:function(e){return new n(e.re>0?Math.floor(e.re):Math.ceil(e.re),e.im>0?Math.floor(e.im):Math.ceil(e.im))},\"Complex, number | BigNumber\":function(e,t){return new n(e.re>0?a(e.re,t):i(e.re,t),e.im>0?a(e.im,t):i(e.im,t))},BigNumber:function(e){return e.isNegative()?i(e):a(e)},\"BigNumber, number | BigNumber\":function(e,t){return e.isNegative()?i(e,t):a(e,t)},Fraction:function(e){return e.s<0?e.ceil():e.floor()},\"Fraction, number | BigNumber\":function(e,t){return e.s<0?e.ceil(t):e.floor(t)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},\"Array | Matrix, number | BigNumber\":function(e,t){var n=this;return(0,P.deepMap)(e,(function(e){return n(e,t)}),!0)},\"number | Complex | BigNumber, Array\":function(e,t){return o(r(t),e,this,!0).valueOf()}})}));t.createFix=r})),be=t((function(e,t){function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(\"undefined\"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFloor=void 0;var i=[\"typed\",\"config\",\"round\",\"matrix\",\"equalScalar\"],a=(0,h.factory)(\"floor\",i,(function(e){var t=e.typed,r=e.config,i=e.round,a=e.matrix,o=e.equalScalar,s=(0,fe.createAlgorithm11)({typed:t,equalScalar:o}),c=(0,pe.createAlgorithm14)({typed:t});return t(\"floor\",{number:function(e){return(0,u.nearlyEqual)(e,i(e),r.epsilon)?i(e):Math.floor(e)},\"number, number\":function(e,t){if((0,u.nearlyEqual)(e,i(e,t),r.epsilon))return i(e,t);var a=n(\"\".concat(e,\"e\").split(\"e\"),2),o=a[0],s=a[1],c=Math.floor(Number(\"\".concat(o,\"e\").concat(Number(s)+t))),l=n(\"\".concat(c,\"e\").split(\"e\"),2);return o=l[0],s=l[1],Number(\"\".concat(o,\"e\").concat(Number(s)-t))},Complex:function(e){return e.floor()},\"Complex, number\":function(e,t){return e.floor(t)},BigNumber:function(e){return(0,$.nearlyEqual)(e,i(e),r.epsilon)?i(e):e.floor()},\"BigNumber, BigNumber\":function(e,t){return(0,$.nearlyEqual)(e,i(e,t),r.epsilon)?i(e,t):e.toDecimalPlaces(t.toNumber(),g.Decimal.ROUND_FLOOR)},Fraction:function(e){return e.floor()},\"Fraction, number\":function(e,t){return e.floor(t)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},\"Array | Matrix, number\":function(e,t){var n=this;return(0,P.deepMap)(e,(function(e){return n(e,t)}),!0)},\"SparseMatrix, number | BigNumber\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return c(e,t,this,!1)},\"number | Complex | BigNumber, Array\":function(e,t){return c(a(t),e,this,!0).valueOf()}})}));t.createFloor=a})),xe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm01=void 0;var n=[\"typed\"],r=(0,h.factory)(\"algorithm01\",n,(function(e){var t=e.typed;return function(e,n,r,i){var a=e._data,o=e._size,s=e._datatype,c=n._values,u=n._index,l=n._ptr,d=n._size,p=n._datatype;if(o.length!==d.length)throw new f.DimensionError(o.length,d.length);if(o[0]!==d[0]||o[1]!==d[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+o+\") must match Matrix B (\"+d+\")\");if(!c)throw new Error(\"Cannot perform operation on Dense Matrix and Pattern Sparse Matrix\");var m,h,y=o[0],v=o[1],g=\"string\"==typeof s&&s===p?s:void 0,b=g?t.find(r,[g,g]):r,x=[];for(m=0;m<y;m++)x[m]=[];var D=[],_=[];for(h=0;h<v;h++){for(var w=h+1,N=l[h],M=l[h+1],O=N;O<M;O++)D[m=u[O]]=i?b(c[O],a[m][h]):b(a[m][h],c[O]),_[m]=w;for(m=0;m<y;m++)_[m]===w?x[m][h]=D[m]:x[m][h]=a[m][h]}return e.createDenseMatrix({data:x,size:[y,v],datatype:g})}}));t.createAlgorithm01=r})),De=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm04=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm04\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+c+\") must match Matrix B (\"+m+\")\");var y,v=c[0],g=c[1],b=n,x=0,D=i;\"string\"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));var _,w,N,M,O,S=a&&l?[]:void 0,P=[],j=[],A=a&&l?[]:void 0,E=a&&l?[]:void 0,C=[],T=[];for(w=0;w<g;w++){j[w]=P.length;var k=w+1;for(M=s[w],O=s[w+1],N=M;N<O;N++)_=o[N],P.push(_),C[_]=k,A&&(A[_]=a[N]);for(M=p[w],O=p[w+1],N=M;N<O;N++)if(C[_=d[N]]===k){if(A){var I=D(A[_],l[N]);b(I,x)?C[_]=null:A[_]=I}}else P.push(_),T[_]=k,E&&(E[_]=l[N]);if(A&&E)for(N=j[w];N<P.length;)C[_=P[N]]===k?(S[N]=A[_],N++):T[_]===k?(S[N]=E[_],N++):P.splice(N,1)}return j[g]=P.length,e.createSparseMatrix({values:S,index:P,ptr:j,size:[v,g],datatype:y})}}));t.createAlgorithm04=r})),_e=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm10=void 0;var n=[\"typed\",\"DenseMatrix\"],r=(0,h.factory)(\"algorithm10\",n,(function(e){var t=e.typed,n=e.DenseMatrix;return function(e,r,i,a){var o=e._values,s=e._index,c=e._ptr,u=e._size,l=e._datatype;if(!o)throw new Error(\"Cannot perform operation on Pattern Sparse Matrix and Scalar value\");var d,f=u[0],p=u[1],m=i;\"string\"==typeof l&&(d=l,r=t.convert(r,d),m=t.find(i,[d,d]));for(var h=[],y=[],v=[],g=0;g<p;g++){for(var b=g+1,x=c[g],D=c[g+1],_=x;_<D;_++){var w=s[_];y[w]=o[_],v[w]=b}for(var N=0;N<f;N++)0===g&&(h[N]=[]),v[N]===b?h[N][g]=a?m(r,y[N]):m(y[N],r):h[N][g]=r}return new n({data:h,size:[f,p],datatype:d})}}));t.createAlgorithm10=r})),we=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm13=void 0;var n=[\"typed\"],r=(0,h.factory)(\"algorithm13\",n,(function(e){var t=e.typed;return function(e,n,r){var i,a=e._data,o=e._size,s=e._datatype,c=n._data,u=n._size,l=n._datatype,d=[];if(o.length!==u.length)throw new f.DimensionError(o.length,u.length);for(var p=0;p<o.length;p++){if(o[p]!==u[p])throw new RangeError(\"Dimension mismatch. Matrix A (\"+o+\") must match Matrix B (\"+u+\")\");d[p]=o[p]}var m=r;\"string\"==typeof s&&s===l&&(i=s,m=t.find(r,[i,i]));var h=d.length>0?function e(t,n,r,i,a,o){var s=[];if(n===r.length-1)for(var c=0;c<i;c++)s[c]=t(a[c],o[c]);else for(var u=0;u<i;u++)s[u]=e(t,n+1,r,r[n+1],a[u],o[u]);return s}(m,0,d,d[0],a,c):[];return e.createDenseMatrix({data:h,size:d,datatype:i})}}));t.createAlgorithm13=r})),Ne=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createGcd=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\",\"DenseMatrix\"],r=(0,h.factory)(\"gcd\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.BigNumber,a=e.DenseMatrix,o=(0,xe.createAlgorithm01)({typed:t}),s=(0,De.createAlgorithm04)({typed:t,equalScalar:r}),c=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:a}),u=(0,we.createAlgorithm13)({typed:t}),l=(0,pe.createAlgorithm14)({typed:t});return t(\"gcd\",{\"number, number\":F.gcdNumber,\"BigNumber, BigNumber\":function(e,t){if(!e.isInt()||!t.isInt())throw new Error(\"Parameters in function gcd must be integer numbers\");var n=new i(0);for(;!t.isZero();){var r=e.mod(t);e=t,t=r}return e.lt(n)?e.neg():e},\"Fraction, Fraction\":function(e,t){return e.gcd(t)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return u(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return l(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){return c(t,e,this,!0)},\"number | BigNumber, DenseMatrix\":function(e,t){return l(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return l(n(e),t,this,!1).valueOf()},\"number | BigNumber, Array\":function(e,t){return l(n(t),e,this,!0).valueOf()},\"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber\":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}})}));t.createGcd=r})),Me=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm02=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm02\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i,a){var o=e._data,s=e._size,c=e._datatype,u=r._values,l=r._index,d=r._ptr,p=r._size,m=r._datatype;if(s.length!==p.length)throw new f.DimensionError(s.length,p.length);if(s[0]!==p[0]||s[1]!==p[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+s+\") must match Matrix B (\"+p+\")\");if(!u)throw new Error(\"Cannot perform operation on Dense Matrix and Pattern Sparse Matrix\");var h,y=s[0],v=s[1],g=n,b=0,x=i;\"string\"==typeof c&&c===m&&(h=c,g=t.find(n,[h,h]),b=t.convert(0,h),x=t.find(i,[h,h]));for(var D=[],_=[],w=[],N=0;N<v;N++){w[N]=_.length;for(var M=d[N],O=d[N+1],S=M;S<O;S++){var P=l[S],j=a?x(u[S],o[P][N]):x(o[P][N],u[S]);g(j,b)||(_.push(P),D.push(j))}}return w[v]=_.length,r.createSparseMatrix({values:D,index:_,ptr:w,size:[y,v],datatype:h})}}));t.createAlgorithm02=r})),Oe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm06=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm06\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._size,s=e._datatype,c=r._values,u=r._size,l=r._datatype;if(o.length!==u.length)throw new f.DimensionError(o.length,u.length);if(o[0]!==u[0]||o[1]!==u[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+o+\") must match Matrix B (\"+u+\")\");var d,p=o[0],m=o[1],h=n,y=0,v=i;\"string\"==typeof s&&s===l&&(d=s,h=t.find(n,[d,d]),y=t.convert(0,d),v=t.find(i,[d,d]));for(var g=a&&c?[]:void 0,b=[],x=[],D=g?[]:void 0,_=[],w=[],N=0;N<m;N++){x[N]=b.length;var M=N+1;if((0,P.scatter)(e,N,_,D,w,M,b,v),(0,P.scatter)(r,N,_,D,w,M,b,v),D)for(var O=x[N];O<b.length;){var S=b[O];if(w[S]===M){var j=D[S];h(j,y)?b.splice(O,1):(g.push(j),O++)}else b.splice(O,1)}else for(var A=x[N];A<b.length;){w[b[A]]!==M?b.splice(A,1):A++}}return x[m]=b.length,e.createSparseMatrix({values:g,index:b,ptr:x,size:[p,m],datatype:d})}}));t.createAlgorithm06=r})),Se=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLcm=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\"],r=(0,h.factory)(\"lcm\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),a=(0,Oe.createAlgorithm06)({typed:t,equalScalar:r}),o=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t(\"lcm\",{\"number, number\":F.lcmNumber,\"BigNumber, BigNumber\":function(e,t){if(!e.isInt()||!t.isInt())throw new Error(\"Parameters in function lcm must be integer numbers\");if(e.isZero())return e;if(t.isZero())return t;var n=e.times(t);for(;!t.isZero();){var r=t;t=e.mod(r),e=r}return n.div(e).abs()},\"Fraction, Fraction\":function(e,t){return e.lcm(t)},\"SparseMatrix, SparseMatrix\":function(e,t){return a(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return i(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return i(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return s(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return c(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){return o(t,e,this,!0)},\"number | BigNumber, DenseMatrix\":function(e,t){return c(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return c(n(e),t,this,!1).valueOf()},\"number | BigNumber, Array\":function(e,t){return c(n(t),e,this,!0).valueOf()},\"Array | Matrix | number | BigNumber, Array | Matrix | number | BigNumber, ...Array | Matrix | number | BigNumber\":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}})}));t.createLcm=r})),Pe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLog10=void 0;var n=[\"typed\",\"config\",\"Complex\"],r=(0,h.factory)(\"log10\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t(\"log10\",{number:function(e){return e>=0||n.predictable?(0,F.log10Number)(e):new r(e,0).log().div(Math.LN10)},Complex:function(e){return new r(e).log().div(Math.LN10)},BigNumber:function(e){return!e.isNegative()||n.predictable?e.log():new r(e.toNumber(),0).log().div(Math.LN10)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createLog10=r})),je=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLog2=void 0;var n=[\"typed\",\"config\",\"Complex\"],r=(0,h.factory)(\"log2\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t(\"log2\",{number:function(e){return e>=0||n.predictable?(0,F.log2Number)(e):i(new r(e,0))},Complex:i,BigNumber:function(e){return!e.isNegative()||n.predictable?e.log(2):i(new r(e.toNumber(),0))},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}});function i(e){var t=Math.sqrt(e.re*e.re+e.im*e.im);return new r(Math.log2?Math.log2(t):Math.log(t)/Math.LN2,Math.atan2(e.im,e.re)/Math.LN2)}}));t.createLog2=r})),Ae=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm03=void 0;var n=[\"typed\"],r=(0,h.factory)(\"algorithm03\",n,(function(e){var t=e.typed;return function(e,n,r,i){var a=e._data,o=e._size,s=e._datatype,c=n._values,u=n._index,l=n._ptr,d=n._size,p=n._datatype;if(o.length!==d.length)throw new f.DimensionError(o.length,d.length);if(o[0]!==d[0]||o[1]!==d[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+o+\") must match Matrix B (\"+d+\")\");if(!c)throw new Error(\"Cannot perform operation on Dense Matrix and Pattern Sparse Matrix\");var m,h=o[0],y=o[1],v=0,g=r;\"string\"==typeof s&&s===p&&(m=s,v=t.convert(0,m),g=t.find(r,[m,m]));for(var b=[],x=0;x<h;x++)b[x]=[];for(var D=[],_=[],w=0;w<y;w++){for(var N=w+1,M=l[w],O=l[w+1],S=M;S<O;S++){var P=u[S];D[P]=i?g(c[S],a[P][w]):g(a[P][w],c[S]),_[P]=N}for(var j=0;j<h;j++)_[j]===N?b[j][w]=D[j]:b[j][w]=i?g(v,a[j][w]):g(a[j][w],v)}return e.createDenseMatrix({data:b,size:[h,y],datatype:m})}}));t.createAlgorithm03=r})),Ee=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm05=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm05\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+c+\") must match Matrix B (\"+m+\")\");var y,v=c[0],g=c[1],b=n,x=0,D=i;\"string\"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));var _,w,N,M,O=a&&l?[]:void 0,S=[],P=[],j=O?[]:void 0,A=O?[]:void 0,E=[],C=[];for(w=0;w<g;w++){P[w]=S.length;var T=w+1;for(N=s[w],M=s[w+1];N<M;N++)_=o[N],S.push(_),E[_]=T,j&&(j[_]=a[N]);for(N=p[w],M=p[w+1];N<M;N++)E[_=d[N]]!==T&&S.push(_),C[_]=T,A&&(A[_]=l[N]);if(O)for(N=P[w];N<S.length;){var k=E[_=S[N]],I=C[_];if(k===T||I===T){var B=D(k===T?j[_]:x,I===T?A[_]:x);b(B,x)?S.splice(N,1):(O.push(B),N++)}}}return P[g]=S.length,e.createSparseMatrix({values:O,index:S,ptr:P,size:[v,g],datatype:y})}}));t.createAlgorithm05=r})),Ce=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm12=void 0;var n=[\"typed\",\"DenseMatrix\"],r=(0,h.factory)(\"algorithm12\",n,(function(e){var t=e.typed,n=e.DenseMatrix;return function(e,r,i,a){var o=e._values,s=e._index,c=e._ptr,u=e._size,l=e._datatype;if(!o)throw new Error(\"Cannot perform operation on Pattern Sparse Matrix and Scalar value\");var d,f=u[0],p=u[1],m=i;\"string\"==typeof l&&(d=l,r=t.convert(r,d),m=t.find(i,[d,d]));for(var h=[],y=[],v=[],g=0;g<p;g++){for(var b=g+1,x=c[g],D=c[g+1],_=x;_<D;_++){var w=s[_];y[w]=o[_],v[w]=b}for(var N=0;N<f;N++)0===g&&(h[N]=[]),v[N]===b?h[N][g]=a?m(r,y[N]):m(y[N],r):h[N][g]=a?m(r,0):m(0,r)}return new n({data:h,size:[f,p],datatype:d})}}));t.createAlgorithm12=r})),Te=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMod=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"mod\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,Ee.createAlgorithm05)({typed:t,equalScalar:r}),c=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),u=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(\"mod\",{\"number, number\":F.modNumber,\"BigNumber, BigNumber\":function(e,t){if(t.isNeg())throw new Error(\"Cannot calculate mod for a negative divisor\");return t.isZero()?e:e.mod(t)},\"Fraction, Fraction\":function(e,t){if(t.compare(0)<0)throw new Error(\"Cannot calculate mod for a negative divisor\");return e.compare(0)>=0?e.mod(t):e.mod(t).add(t).mod(t)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return a(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return d(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return u(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, any\":function(e,t){return d(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return d(n(t),e,this,!0).valueOf()}})}));t.createMod=r})),ke=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMultiplyScalar=void 0;var n=[\"typed\"],r=(0,h.factory)(\"multiplyScalar\",n,(function(e){return(0,e.typed)(\"multiplyScalar\",{\"number, number\":F.multiplyNumber,\"Complex, Complex\":function(e,t){return e.mul(t)},\"BigNumber, BigNumber\":function(e,t){return e.times(t)},\"Fraction, Fraction\":function(e,t){return e.mul(t)},\"number | Fraction | BigNumber | Complex, Unit\":function(e,t){var n=t.clone();return n.value=null===n.value?n._normalize(e):this(n.value,e),n},\"Unit, number | Fraction | BigNumber | Complex\":function(e,t){var n=e.clone();return n.value=null===n.value?n._normalize(t):this(n.value,t),n},\"Unit, Unit\":function(e,t){return e.multiply(t)}})}));t.createMultiplyScalar=r})),Ie=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMultiply=void 0;var n=[\"typed\",\"matrix\",\"addScalar\",\"multiplyScalar\",\"equalScalar\",\"dot\"],r=(0,h.factory)(\"multiply\",n,(function(e){var t=e.typed,n=e.matrix,r=e.addScalar,o=e.multiplyScalar,s=e.equalScalar,c=e.dot,u=(0,fe.createAlgorithm11)({typed:t,equalScalar:s}),l=(0,pe.createAlgorithm14)({typed:t});function d(e,t){switch(e.length){case 1:switch(t.length){case 1:if(e[0]!==t[0])throw new RangeError(\"Dimension mismatch in multiplication. Vectors must have the same length\");break;case 2:if(e[0]!==t[0])throw new RangeError(\"Dimension mismatch in multiplication. Vector length (\"+e[0]+\") must match Matrix rows (\"+t[0]+\")\");break;default:throw new Error(\"Can only multiply a 1 or 2 dimensional matrix (Matrix B has \"+t.length+\" dimensions)\")}break;case 2:switch(t.length){case 1:if(e[1]!==t[0])throw new RangeError(\"Dimension mismatch in multiplication. Matrix columns (\"+e[1]+\") must match Vector length (\"+t[0]+\")\");break;case 2:if(e[1]!==t[0])throw new RangeError(\"Dimension mismatch in multiplication. Matrix A columns (\"+e[1]+\") must match Matrix B rows (\"+t[0]+\")\");break;default:throw new Error(\"Can only multiply a 1 or 2 dimensional matrix (Matrix B has \"+t.length+\" dimensions)\")}break;default:throw new Error(\"Can only multiply a 1 or 2 dimensional matrix (Matrix A has \"+e.length+\" dimensions)\")}}function f(e,n){if(\"dense\"!==n.storage())throw new Error(\"Support for SparseMatrix not implemented\");return function(e,n){var i,a=e._data,s=e._size,c=e._datatype,u=n._data,l=n._size,d=n._datatype,f=s[0],p=l[1],m=r,h=o;c&&d&&c===d&&\"string\"==typeof c&&(i=c,m=t.find(r,[i,i]),h=t.find(o,[i,i]));for(var y=[],v=0;v<p;v++){for(var g=h(a[0],u[0][v]),b=1;b<f;b++)g=m(g,h(a[b],u[b][v]));y[v]=g}return e.createDenseMatrix({data:y,size:[p],datatype:i})}(e,n)}var p=t(\"_multiplyMatrixVector\",{\"DenseMatrix, any\":function(e,n){var i,a=e._data,s=e._size,c=e._datatype,u=n._data,l=n._datatype,d=s[0],f=s[1],p=r,m=o;c&&l&&c===l&&\"string\"==typeof c&&(i=c,p=t.find(r,[i,i]),m=t.find(o,[i,i]));for(var h=[],y=0;y<d;y++){for(var v=a[y],g=m(v[0],u[0]),b=1;b<f;b++)g=p(g,m(v[b],u[b]));h[y]=g}return e.createDenseMatrix({data:h,size:[d],datatype:i})},\"SparseMatrix, any\":function(e,n){var i=e._values,a=e._index,c=e._ptr,u=e._datatype;if(!i)throw new Error(\"Cannot multiply Pattern only Matrix times Dense Matrix\");var l,d=n._data,f=n._datatype,p=e._size[0],m=n._size[0],h=[],y=[],v=[],g=r,b=o,x=s,D=0;u&&f&&u===f&&\"string\"==typeof u&&(l=u,g=t.find(r,[l,l]),b=t.find(o,[l,l]),x=t.find(s,[l,l]),D=t.convert(0,l));var _=[],w=[];v[0]=0;for(var N=0;N<m;N++){var M=d[N];if(!x(M,D))for(var O=c[N],S=c[N+1],P=O;P<S;P++){var j=a[P];w[j]?_[j]=g(_[j],b(M,i[P])):(w[j]=!0,y.push(j),_[j]=b(M,i[P]))}}for(var A=y.length,E=0;E<A;E++){var C=y[E];h[E]=_[C]}return v[1]=y.length,e.createSparseMatrix({values:h,index:y,ptr:v,size:[p,1],datatype:l})}}),h=t(\"_multiplyMatrixMatrix\",{\"DenseMatrix, DenseMatrix\":function(e,n){var i,a=e._data,s=e._size,c=e._datatype,u=n._data,l=n._size,d=n._datatype,f=s[0],p=s[1],m=l[1],h=r,y=o;c&&d&&c===d&&\"string\"==typeof c&&(i=c,h=t.find(r,[i,i]),y=t.find(o,[i,i]));for(var v=[],g=0;g<f;g++){var b=a[g];v[g]=[];for(var x=0;x<m;x++){for(var D=y(b[0],u[0][x]),_=1;_<p;_++)D=h(D,y(b[_],u[_][x]));v[g][x]=D}}return e.createDenseMatrix({data:v,size:[f,m],datatype:i})},\"DenseMatrix, SparseMatrix\":function(e,n){var i=e._data,a=e._size,c=e._datatype,u=n._values,l=n._index,d=n._ptr,f=n._size,p=n._datatype;if(!u)throw new Error(\"Cannot multiply Dense Matrix times Pattern only Matrix\");var m,h=a[0],y=f[1],v=r,g=o,b=s,x=0;c&&p&&c===p&&\"string\"==typeof c&&(m=c,v=t.find(r,[m,m]),g=t.find(o,[m,m]),b=t.find(s,[m,m]),x=t.convert(0,m));for(var D=[],_=[],w=[],N=n.createSparseMatrix({values:D,index:_,ptr:w,size:[h,y],datatype:m}),M=0;M<y;M++){w[M]=_.length;var O=d[M],S=d[M+1];if(S>O)for(var P=0,j=0;j<h;j++){for(var A=j+1,E=void 0,C=O;C<S;C++){var T=l[C];P!==A?(E=g(i[j][T],u[C]),P=A):E=v(E,g(i[j][T],u[C]))}P!==A||b(E,x)||(_.push(j),D.push(E))}}return w[y]=_.length,N},\"SparseMatrix, DenseMatrix\":function(e,n){var i=e._values,a=e._index,c=e._ptr,u=e._datatype;if(!i)throw new Error(\"Cannot multiply Pattern only Matrix times Dense Matrix\");var l,d=n._data,f=n._datatype,p=e._size[0],m=n._size[0],h=n._size[1],y=r,v=o,g=s,b=0;u&&f&&u===f&&\"string\"==typeof u&&(l=u,y=t.find(r,[l,l]),v=t.find(o,[l,l]),g=t.find(s,[l,l]),b=t.convert(0,l));for(var x=[],D=[],_=[],w=e.createSparseMatrix({values:x,index:D,ptr:_,size:[p,h],datatype:l}),N=[],M=[],O=0;O<h;O++){_[O]=D.length;for(var S=O+1,P=0;P<m;P++){var j=d[P][O];if(!g(j,b))for(var A=c[P],E=c[P+1],C=A;C<E;C++){var T=a[C];M[T]!==S?(M[T]=S,D.push(T),N[T]=v(j,i[C])):N[T]=y(N[T],v(j,i[C]))}}for(var k=_[O],I=D.length,B=k;B<I;B++){var z=D[B];x[B]=N[z]}}return _[h]=D.length,w},\"SparseMatrix, SparseMatrix\":function(e,n){var i,a=e._values,s=e._index,c=e._ptr,u=e._datatype,l=n._values,d=n._index,f=n._ptr,p=n._datatype,m=e._size[0],h=n._size[1],y=a&&l,v=r,g=o;u&&p&&u===p&&\"string\"==typeof u&&(i=u,v=t.find(r,[i,i]),g=t.find(o,[i,i]));for(var b,x,D,_,w,N,M,O,S=y?[]:void 0,P=[],j=[],A=e.createSparseMatrix({values:S,index:P,ptr:j,size:[m,h],datatype:i}),E=y?[]:void 0,C=[],T=0;T<h;T++){j[T]=P.length;var k=T+1;for(w=f[T],N=f[T+1],_=w;_<N;_++)if(O=d[_],y)for(x=c[O],D=c[O+1],b=x;b<D;b++)M=s[b],C[M]!==k?(C[M]=k,P.push(M),E[M]=g(l[_],a[b])):E[M]=v(E[M],g(l[_],a[b]));else for(x=c[O],D=c[O+1],b=x;b<D;b++)M=s[b],C[M]!==k&&(C[M]=k,P.push(M));if(y)for(var I=j[T],B=P.length,z=I;z<B;z++){var R=P[z];S[z]=E[R]}}return j[h]=P.length,A}});return t(\"multiply\",(0,a.extend)({\"Array, Array\":function(e,t){d((0,m.arraySize)(e),(0,m.arraySize)(t));var r=this(n(e),n(t));return(0,i.isMatrix)(r)?r.valueOf():r},\"Matrix, Matrix\":function(e,t){var n=e.size(),r=t.size();return d(n,r),1===n.length?1===r.length?function(e,t,n){if(0===n)throw new Error(\"Cannot multiply two empty vectors\");return c(e,t)}(e,t,n[0]):f(e,t):1===r.length?p(e,t):h(e,t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"Array, Matrix\":function(e,t){return this(n(e,t.storage()),t)},\"SparseMatrix, any\":function(e,t){return u(e,t,o,!1)},\"DenseMatrix, any\":function(e,t){return l(e,t,o,!1)},\"any, SparseMatrix\":function(e,t){return u(t,e,o,!0)},\"any, DenseMatrix\":function(e,t){return l(t,e,o,!0)},\"Array, any\":function(e,t){return l(n(e),t,o,!1).valueOf()},\"any, Array\":function(e,t){return l(n(t),e,o,!0).valueOf()},\"any, any\":o,\"any, any, ...any\":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}},o.signatures))}));t.createMultiply=r})),Be=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNthRootNumber=t.createNthRoot=void 0;var n=\"nthRoot\",r=[\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=e.equalScalar,a=e.BigNumber,o=(0,xe.createAlgorithm01)({typed:t}),s=(0,Me.createAlgorithm02)({typed:t,equalScalar:i}),c=(0,Oe.createAlgorithm06)({typed:t,equalScalar:i}),u=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t}),f=\"Complex number not supported in function nthRoot. Use nthRoots instead.\";return t(n,{number:function(e){return(0,F.nthRootNumber)(e,2)},\"number, number\":F.nthRootNumber,BigNumber:function(e){return p(e,new a(2))},Complex:function(e){throw new Error(f)},\"Complex, number\":function(e,t){throw new Error(f)},\"BigNumber, BigNumber\":p,\"Array | Matrix\":function(e){return this(e,2)},\"SparseMatrix, SparseMatrix\":function(e,t){if(1===t.density())return c(e,t,this);throw new Error(\"Root must be non-zero\")},\"SparseMatrix, DenseMatrix\":function(e,t){return s(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){if(1===t.density())return o(e,t,this,!1);throw new Error(\"Root must be non-zero\")},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,this)},\"Array, Array\":function(e,t){return this(r(e),r(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(r(e),t)},\"Matrix, Array\":function(e,t){return this(e,r(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return u(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return d(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){if(1===t.density())return u(t,e,this,!0);throw new Error(\"Root must be non-zero\")},\"number | BigNumber, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return this(r(e),t).valueOf()},\"number | BigNumber, Array\":function(e,t){return this(e,r(t)).valueOf()}});function p(e,t){var n=a.precision,r=a.clone({precision:n+2}),i=new a(0),o=new r(1),s=t.isNegative();if(s&&(t=t.neg()),t.isZero())throw new Error(\"Root must be non-zero\");if(e.isNegative()&&!t.abs().mod(2).equals(1))throw new Error(\"Root must be odd when a is negative.\");if(e.isZero())return s?new r(1/0):0;if(!e.isFinite())return s?i:e;var c=e.abs().pow(o.div(t));return c=e.isNeg()?c.neg():c,new a((s?o.div(c):c).toPrecision(n))}}));t.createNthRoot=i;var a=(0,h.factory)(n,[\"typed\"],(function(e){return(0,e.typed)(n,{number:F.nthRootNumber,\"number, number\":F.nthRootNumber})}));t.createNthRootNumber=a})),ze=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSign=void 0;var n=[\"typed\",\"BigNumber\",\"Fraction\",\"complex\"],r=(0,h.factory)(\"sign\",n,(function(e){var t=e.typed,n=e.BigNumber,r=e.complex,i=e.Fraction;return t(\"sign\",{number:F.signNumber,Complex:function(e){return 0===e.im?r((0,F.signNumber)(e.re)):e.sign()},BigNumber:function(e){return new n(e.cmp(0))},Fraction:function(e){return new i(e.s,1)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return this(e.value)}})}));t.createSign=r})),Re=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSqrt=void 0;var n=[\"config\",\"typed\",\"Complex\"],r=(0,h.factory)(\"sqrt\",n,(function(e){var t=e.config,n=e.typed,r=e.Complex;return n(\"sqrt\",{number:i,Complex:function(e){return e.sqrt()},BigNumber:function(e){return!e.isNegative()||t.predictable?e.sqrt():i(e.toNumber())},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.pow(.5)}});function i(e){return isNaN(e)?NaN:e>=0||t.predictable?Math.sqrt(e):new r(e,0).sqrt()}}));t.createSqrt=r})),qe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSquare=void 0;var n=[\"typed\"],r=(0,h.factory)(\"square\",n,(function(e){return(0,e.typed)(\"square\",{number:F.squareNumber,Complex:function(e){return e.mul(e)},BigNumber:function(e){return e.times(e)},Fraction:function(e){return e.mul(e)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},Unit:function(e){return e.pow(2)}})}));t.createSquare=r})),Fe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSubtract=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"addScalar\",\"unaryMinus\",\"DenseMatrix\"],r=(0,h.factory)(\"subtract\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,a=e.addScalar,o=e.unaryMinus,s=e.DenseMatrix,c=(0,xe.createAlgorithm01)({typed:t}),u=(0,Ae.createAlgorithm03)({typed:t}),l=(0,Ee.createAlgorithm05)({typed:t,equalScalar:r}),d=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:s}),f=(0,we.createAlgorithm13)({typed:t}),p=(0,pe.createAlgorithm14)({typed:t});return t(\"subtract\",{\"number, number\":function(e,t){return e-t},\"Complex, Complex\":function(e,t){return e.sub(t)},\"BigNumber, BigNumber\":function(e,t){return e.minus(t)},\"Fraction, Fraction\":function(e,t){return e.sub(t)},\"Unit, Unit\":function(e,t){if(null===e.value)throw new Error(\"Parameter x contains a unit with undefined value\");if(null===t.value)throw new Error(\"Parameter y contains a unit with undefined value\");if(!e.equalBase(t))throw new Error(\"Units do not match\");var n=e.clone();return n.value=this(n.value,t.value),n.fixPrefix=!1,n},\"SparseMatrix, SparseMatrix\":function(e,t){return i(e,t),l(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return i(e,t),u(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return i(e,t),c(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return i(e,t),f(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return d(e,o(t),a)},\"DenseMatrix, any\":function(e,t){return p(e,t,this)},\"any, SparseMatrix\":function(e,t){return d(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return p(t,e,this,!0)},\"Array, any\":function(e,t){return p(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return p(n(t),e,this,!0).valueOf()}})}));function i(e,t){var n=e.size(),r=t.size();if(n.length!==r.length)throw new f.DimensionError(n.length,r.length)}t.createSubtract=r})),Ue=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createXgcd=void 0;var n=[\"typed\",\"config\",\"matrix\",\"BigNumber\"],r=(0,h.factory)(\"xgcd\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,i=e.BigNumber;return t(\"xgcd\",{\"number, number\":function(e,t){var i=(0,F.xgcdNumber)(e,t);return\"Array\"===n.matrix?i:r(i)},\"BigNumber, BigNumber\":function(e,t){var a,o,s,c,u=new i(0),l=new i(1),d=u,f=l,p=l,m=u;if(!e.isInt()||!t.isInt())throw new Error(\"Parameters in function xgcd must be integer numbers\");for(;!t.isZero();)o=e.div(t).floor(),s=e.mod(t),a=d,d=f.minus(o.times(d)),f=a,a=p,p=m.minus(o.times(p)),m=a,e=t,t=s;c=e.lt(u)?[e.neg(),f.neg(),m.neg()]:[e,e.isZero()?0:f,m];return\"Array\"===n.matrix?c:r(c)}})}));t.createXgcd=r})),Le=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm09=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm09\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+c+\") must match Matrix B (\"+m+\")\");var y,v=c[0],g=c[1],b=n,x=0,D=i;\"string\"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));var _,w,N,M,O,S=a&&l?[]:void 0,P=[],j=[],A=S?[]:void 0,E=[];for(w=0;w<g;w++){j[w]=P.length;var C=w+1;if(A)for(M=p[w],O=p[w+1],N=M;N<O;N++)E[_=d[N]]=C,A[_]=l[N];for(M=s[w],O=s[w+1],N=M;N<O;N++)if(_=o[N],A){var T=E[_]===C?A[_]:x,k=D(a[N],T);b(k,x)||(P.push(_),S.push(k))}else P.push(_)}return j[g]=P.length,e.createSparseMatrix({values:S,index:P,ptr:j,size:[v,g],datatype:y})}}));t.createAlgorithm09=r})),He=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDotMultiply=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"multiplyScalar\"],r=(0,h.factory)(\"dotMultiply\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.multiplyScalar,a=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),o=(0,Le.createAlgorithm09)({typed:t,equalScalar:r}),s=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t(\"dotMultiply\",{\"any, any\":i,\"SparseMatrix, SparseMatrix\":function(e,t){return o(e,t,i,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return a(t,e,i,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return a(e,t,i,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return c(e,t,i)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return s(e,t,i,!1)},\"DenseMatrix, any\":function(e,t){return u(e,t,i,!1)},\"any, SparseMatrix\":function(e,t){return s(t,e,i,!0)},\"any, DenseMatrix\":function(e,t){return u(t,e,i,!0)},\"Array, any\":function(e,t){return u(n(e),t,i,!1).valueOf()},\"any, Array\":function(e,t){return u(n(t),e,i,!0).valueOf()}})}));t.createDotMultiply=r})),Ze=t((function(e,t){function n(e){if(e.isFinite()&&!e.isInteger())throw new Error(\"Integer expected in function bitNot\");var t=e.constructor,n=t.precision;t.config({precision:1e9});var r=e.plus(new t(1));return r.s=-r.s||null,t.config({precision:n}),r}function r(e,t,r){var a,o,s,c,u,l=e.constructor,d=+(e.s<0),f=+(t.s<0);if(d){a=i(n(e));for(var p=0;p<a.length;++p)a[p]^=1}else a=i(e);if(f){o=i(n(t));for(var m=0;m<o.length;++m)o[m]^=1}else o=i(t);a.length<=o.length?(s=a,c=o,u=d):(s=o,c=a,u=f);var h=s.length,y=c.length,v=1^r(d,f),g=new l(1^v),b=new l(1),x=new l(2),D=l.precision;for(l.config({precision:1e9});h>0;)r(s[--h],c[--y])===v&&(g=g.plus(b)),b=b.times(x);for(;y>0;)r(u,c[--y])===v&&(g=g.plus(b)),b=b.times(x);return l.config({precision:D}),0===v&&(g.s=-g.s),g}function i(e){for(var t=e.d,n=t[0]+\"\",r=1;r<t.length;++r){for(var i=t[r]+\"\",a=7-i.length;a--;)i=\"0\"+i;n+=i}for(var o=n.length;\"0\"===n.charAt(o);)o--;var s=e.e,c=n.slice(0,o+1||1),u=c.length;if(s>0)if(++s>u)for(s-=u;s--;)c+=\"0\";else s<u&&(c=c.slice(0,s)+\".\"+c.slice(s));for(var l=[0],d=0;d<c.length;){for(var f=l.length;f--;)l[f]*=10;l[0]+=parseInt(c.charAt(d++));for(var p=0;p<l.length;++p)l[p]>1&&(null!==l[p+1]&&void 0!==l[p+1]||(l[p+1]=0),l[p+1]+=l[p]>>1,l[p]&=1)}return l.reverse()}Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitAndBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error(\"Integers expected in function bitAnd\");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);if(e.isZero()||t.eq(-1)||e.eq(t))return e;if(t.isZero()||e.eq(-1))return t;if(!e.isFinite()||!t.isFinite()){if(!e.isFinite()&&!t.isFinite())return e.isNegative()===t.isNegative()?e:new n(0);if(!e.isFinite())return t.isNegative()?e:e.isNegative()?new n(0):t;if(!t.isFinite())return e.isNegative()?t:t.isNegative()?new n(0):e}return r(e,t,(function(e,t){return e&t}))},t.bitNotBigNumber=n,t.bitOrBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error(\"Integers expected in function bitOr\");var n=e.constructor;if(e.isNaN()||t.isNaN())return new n(NaN);var i=new n(-1);if(e.isZero()||t.eq(i)||e.eq(t))return t;if(t.isZero()||e.eq(i))return e;if(!e.isFinite()||!t.isFinite())return!e.isFinite()&&!e.isNegative()&&t.isNegative()||e.isNegative()&&!t.isNegative()&&!t.isFinite()?i:e.isNegative()&&t.isNegative()?e.isFinite()?e:t:e.isFinite()?t:e;return r(e,t,(function(e,t){return e|t}))},t.bitwise=r,t.bitXor=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error(\"Integers expected in function bitXor\");var i=e.constructor;if(e.isNaN()||t.isNaN())return new i(NaN);if(e.isZero())return t;if(t.isZero())return e;if(e.eq(t))return new i(0);var a=new i(-1);if(e.eq(a))return n(t);if(t.eq(a))return n(e);if(!e.isFinite()||!t.isFinite())return e.isFinite()||t.isFinite()?new i(e.isNegative()===t.isNegative()?1/0:-1/0):a;return r(e,t,(function(e,t){return e^t}))},t.leftShiftBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error(\"Integers expected in function leftShift\");var n=e.constructor;if(e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero())return new n(NaN);if(e.isZero()||t.isZero())return e;if(!e.isFinite()&&!t.isFinite())return new n(NaN);if(t.lt(55))return e.times(Math.pow(2,t.toNumber())+\"\");return e.times(new n(2).pow(t))},t.rightArithShiftBigNumber=function(e,t){if(e.isFinite()&&!e.isInteger()||t.isFinite()&&!t.isInteger())throw new Error(\"Integers expected in function rightArithShift\");var n=e.constructor;if(e.isNaN()||t.isNaN()||t.isNegative()&&!t.isZero())return new n(NaN);if(e.isZero()||t.isZero())return e;if(!t.isFinite())return e.isNegative()?new n(-1):e.isFinite()?new n(0):new n(NaN);if(t.lt(55))return e.div(Math.pow(2,t.toNumber())+\"\").floor();return e.div(new n(2).pow(t)).floor()}})),Ve=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBitAnd=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\"],r=(0,h.factory)(\"bitAnd\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),a=(0,Oe.createAlgorithm06)({typed:t,equalScalar:r}),o=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t(\"bitAnd\",{\"number, number\":F.bitAndNumber,\"BigNumber, BigNumber\":Ze.bitAndBigNumber,\"SparseMatrix, SparseMatrix\":function(e,t){return a(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return i(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return i(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return s(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return o(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return c(t,e,this,!0)},\"Array, any\":function(e,t){return c(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));t.createBitAnd=r})),We=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBitNot=void 0;var n=[\"typed\"],r=(0,h.factory)(\"bitNot\",n,(function(e){return(0,e.typed)(\"bitNot\",{number:F.bitNotNumber,BigNumber:Ze.bitNotBigNumber,\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createBitNot=r})),Ge=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBitOr=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"bitOr\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,xe.createAlgorithm01)({typed:t}),o=(0,De.createAlgorithm04)({typed:t,equalScalar:r}),s=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t(\"bitOr\",{\"number, number\":F.bitOrNumber,\"BigNumber, BigNumber\":Ze.bitOrBigNumber,\"SparseMatrix, SparseMatrix\":function(e,t){return o(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return a(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return a(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return c(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return u(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return s(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return u(t,e,this,!0)},\"Array, any\":function(e,t){return u(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return u(n(t),e,this,!0).valueOf()}})}));t.createBitOr=r})),$e=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm07=void 0;var n=[\"typed\",\"DenseMatrix\"],r=(0,h.factory)(\"algorithm07\",n,(function(e){var t=e.typed,n=e.DenseMatrix;return function(e,i,a){var o=e._size,s=e._datatype,c=i._size,u=i._datatype;if(o.length!==c.length)throw new f.DimensionError(o.length,c.length);if(o[0]!==c[0]||o[1]!==c[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+o+\") must match Matrix B (\"+c+\")\");var l,d,p,m=o[0],h=o[1],y=0,v=a;\"string\"==typeof s&&s===u&&(l=s,y=t.convert(0,l),v=t.find(a,[l,l]));var g=[];for(d=0;d<m;d++)g[d]=[];var b=[],x=[],D=[],_=[];for(p=0;p<h;p++){var w=p+1;for(r(e,p,D,b,w),r(i,p,_,x,w),d=0;d<m;d++){var N=D[d]===w?b[d]:y,M=_[d]===w?x[d]:y;g[d][p]=v(N,M)}}return new n({data:g,size:[m,h],datatype:l})};function r(e,t,n,r,i){for(var a=e._values,o=e._index,s=e._ptr,c=s[t],u=s[t+1];c<u;c++){var l=o[c];n[l]=i,r[l]=a[c]}}}));t.createAlgorithm07=r})),Qe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBitXor=void 0;var n=[\"typed\",\"matrix\",\"DenseMatrix\"],r=(0,h.factory)(\"bitXor\",n,(function(e){var t=e.typed,n=e.matrix,r=e.DenseMatrix,i=(0,Ae.createAlgorithm03)({typed:t}),a=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:r}),o=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t(\"bitXor\",{\"number, number\":F.bitXorNumber,\"BigNumber, BigNumber\":Ze.bitXor,\"SparseMatrix, SparseMatrix\":function(e,t){return a(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return i(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return i(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return s(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return o(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return c(t,e,this,!0)},\"Array, any\":function(e,t){return c(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));t.createBitXor=r})),Xe=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createArg=void 0;var n=[\"typed\"],r=(0,h.factory)(\"arg\",n,(function(e){return(0,e.typed)(\"arg\",{number:function(e){return Math.atan2(0,e)},BigNumber:function(e){return e.constructor.atan2(0,e)},Complex:function(e){return e.arg()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createArg=r})),Ye=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createConj=void 0;var n=[\"typed\"],r=(0,h.factory)(\"conj\",n,(function(e){return(0,e.typed)(\"conj\",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.conjugate()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createConj=r})),Je=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIm=void 0;var n=[\"typed\"],r=(0,h.factory)(\"im\",n,(function(e){return(0,e.typed)(\"im\",{number:function(e){return 0},BigNumber:function(e){return e.mul(0)},Complex:function(e){return e.im},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIm=r})),Ke=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRe=void 0;var n=[\"typed\"],r=(0,h.factory)(\"re\",n,(function(e){return(0,e.typed)(\"re\",{number:function(e){return e},BigNumber:function(e){return e},Complex:function(e){return e.re},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createRe=r})),et=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNot=void 0;var n=[\"typed\"],r=(0,h.factory)(\"not\",n,(function(e){return(0,e.typed)(\"not\",{number:F.notNumber,Complex:function(e){return 0===e.re&&0===e.im},BigNumber:function(e){return e.isZero()||e.isNaN()},Unit:function(e){return null===e.value||this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createNot=r})),tt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createOr=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"or\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,Ae.createAlgorithm03)({typed:t}),o=(0,Ee.createAlgorithm05)({typed:t,equalScalar:r}),s=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t(\"or\",{\"number, number\":F.orNumber,\"Complex, Complex\":function(e,t){return 0!==e.re||0!==e.im||0!==t.re||0!==t.im},\"BigNumber, BigNumber\":function(e,t){return!e.isZero()&&!e.isNaN()||!t.isZero()&&!t.isNaN()},\"Unit, Unit\":function(e,t){return this(e.value||0,t.value||0)},\"SparseMatrix, SparseMatrix\":function(e,t){return o(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return a(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return a(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return c(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return u(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return s(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return u(t,e,this,!0)},\"Array, any\":function(e,t){return u(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return u(n(t),e,this,!0).valueOf()}})}));t.createOr=r})),nt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createXor=void 0;var n=[\"typed\",\"matrix\",\"DenseMatrix\"],r=(0,h.factory)(\"xor\",n,(function(e){var t=e.typed,n=e.matrix,r=e.DenseMatrix,i=(0,Ae.createAlgorithm03)({typed:t}),a=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:r}),o=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:r}),s=(0,we.createAlgorithm13)({typed:t}),c=(0,pe.createAlgorithm14)({typed:t});return t(\"xor\",{\"number, number\":F.xorNumber,\"Complex, Complex\":function(e,t){return(0!==e.re||0!==e.im)!=(0!==t.re||0!==t.im)},\"BigNumber, BigNumber\":function(e,t){return(!e.isZero()&&!e.isNaN())!=(!t.isZero()&&!t.isNaN())},\"Unit, Unit\":function(e,t){return this(e.value||0,t.value||0)},\"SparseMatrix, SparseMatrix\":function(e,t){return a(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return i(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return i(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return s(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return o(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return c(t,e,this,!0)},\"Array, any\":function(e,t){return c(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return c(n(t),e,this,!0).valueOf()}})}));t.createXor=r})),rt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createConcat=void 0;var n=[\"typed\",\"matrix\",\"isInteger\"],r=(0,h.factory)(\"concat\",n,(function(e){var t=e.typed,n=e.matrix,r=e.isInteger;return t(\"concat\",{\"...Array | Matrix | number | BigNumber\":function(e){var t,s,c=e.length,u=-1,l=!1,d=[];for(t=0;t<c;t++){var h=e[t];if((0,i.isMatrix)(h)&&(l=!0),(0,i.isNumber)(h)||(0,i.isBigNumber)(h)){if(t!==c-1)throw new Error(\"Dimension must be specified as last argument\");if(s=u,u=h.valueOf(),!r(u))throw new TypeError(\"Integer number expected for dimension\");if(u<0||t>0&&u>s)throw new p.IndexError(u,s+1)}else{var y=(0,a.clone)(h).valueOf(),v=(0,m.arraySize)(y);if(d[t]=y,s=u,u=v.length-1,t>0&&u!==s)throw new f.DimensionError(s+1,u+1)}}if(0===d.length)throw new SyntaxError(\"At least one matrix expected\");for(var g=d.shift();d.length;)g=o(g,d.shift(),u,0);return l?n(g):g},\"...string\":function(e){return e.join(\"\")}})}));function o(e,t,n,r){if(r<n){if(e.length!==t.length)throw new f.DimensionError(e.length,t.length);for(var i=[],a=0;a<e.length;a++)i[a]=o(e[a],t[a],n,r+1);return i}return e.concat(t)}t.createConcat=r})),it=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createColumn=void 0;var n=[\"typed\",\"Index\",\"matrix\",\"range\"],r=(0,h.factory)(\"column\",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,i=e.range;return t(\"column\",{\"Matrix, number\":o,\"Array, number\":function(e,t){return o(r((0,a.clone)(e)),t).valueOf()}});function o(e,t){if(2!==e.size().length)throw new Error(\"Only two dimensional matrix is supported\");(0,m.validateIndex)(t,e.size()[1]);var r=i(0,e.size()[0]),a=new n(r,t);return e.subset(a)}}));t.createColumn=r})),at=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCross=void 0;var n=[\"typed\",\"matrix\",\"subtract\",\"multiply\"],r=(0,h.factory)(\"cross\",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,i=e.multiply;return t(\"cross\",{\"Matrix, Matrix\":function(e,t){return n(a(e.toArray(),t.toArray()))},\"Matrix, Array\":function(e,t){return n(a(e.toArray(),t))},\"Array, Matrix\":function(e,t){return n(a(e,t.toArray()))},\"Array, Array\":a});function a(e,t){var n=Math.max((0,m.arraySize)(e).length,(0,m.arraySize)(t).length);e=(0,m.squeeze)(e),t=(0,m.squeeze)(t);var a=(0,m.arraySize)(e),o=(0,m.arraySize)(t);if(1!==a.length||1!==o.length||3!==a[0]||3!==o[0])throw new RangeError(\"Vectors with length 3 expected (Size A = [\"+a.join(\", \")+\"], B = [\"+o.join(\", \")+\"])\");var s=[r(i(e[1],t[2]),i(e[2],t[1])),r(i(e[2],t[0]),i(e[0],t[2])),r(i(e[0],t[1]),i(e[1],t[0]))];return n>1?[s]:s}}));t.createCross=r})),ot=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDiag=void 0;var n=[\"typed\",\"matrix\",\"DenseMatrix\",\"SparseMatrix\"],r=(0,h.factory)(\"diag\",n,(function(e){var t=e.typed,n=e.matrix,r=e.DenseMatrix,a=e.SparseMatrix;return t(\"diag\",{Array:function(e){return o(e,0,(0,m.arraySize)(e),null)},\"Array, number\":function(e,t){return o(e,t,(0,m.arraySize)(e),null)},\"Array, BigNumber\":function(e,t){return o(e,t.toNumber(),(0,m.arraySize)(e),null)},\"Array, string\":function(e,t){return o(e,0,(0,m.arraySize)(e),t)},\"Array, number, string\":function(e,t,n){return o(e,t,(0,m.arraySize)(e),n)},\"Array, BigNumber, string\":function(e,t,n){return o(e,t.toNumber(),(0,m.arraySize)(e),n)},Matrix:function(e){return o(e,0,e.size(),e.storage())},\"Matrix, number\":function(e,t){return o(e,t,e.size(),e.storage())},\"Matrix, BigNumber\":function(e,t){return o(e,t.toNumber(),e.size(),e.storage())},\"Matrix, string\":function(e,t){return o(e,0,e.size(),t)},\"Matrix, number, string\":function(e,t,n){return o(e,t,e.size(),n)},\"Matrix, BigNumber, string\":function(e,t,n){return o(e,t.toNumber(),e.size(),n)}});function o(e,t,o,s){if(!(0,u.isInteger)(t))throw new TypeError(\"Second parameter in function diag must be an integer\");var c=t>0?t:0,l=t<0?-t:0;switch(o.length){case 1:return function(e,t,n,i,o,s){var c=[i+o,i+s];if(n&&\"sparse\"!==n&&\"dense\"!==n)throw new TypeError(\"Unknown matrix type \".concat(n,'\"'));var u=\"sparse\"===n?a.diagonal(c,e,t):r.diagonal(c,e,t);return null!==n?u:u.valueOf()}(e,t,s,o[0],l,c);case 2:return function(e,t,r,a,o,s){if((0,i.isMatrix)(e)){var c=e.diagonal(t);return null!==r?r!==c.storage()?n(c,r):c:c.valueOf()}for(var u=Math.min(a[0]-o,a[1]-s),l=[],d=0;d<u;d++)l[d]=e[d+o][d+s];return null!==r?n(l):l}(e,t,s,o,l,c)}throw new RangeError(\"Matrix for function diag must be 2 dimensional\")}}));t.createDiag=r})),st=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.memoize=function(e,t){return function r(){\"object\"!==n(r.cache)&&(r.cache={});for(var i=[],a=0;a<arguments.length;a++)i[a]=arguments[a];var o=t?t(i):JSON.stringify(i);return o in r.cache||(r.cache[o]=e.apply(e,i)),r.cache[o]}},t.memoizeCompare=function(e,t){var n=function n(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];for(var a=0;a<n.cache.length;a++){var o=n.cache[a];if(t(r,o.args))return o.res}var s=e.apply(e,r);return n.cache.unshift({args:r,res:s}),s};return n.cache=[],n},t.maxArgumentCount=function(e){return Object.keys(e.signatures||{}).reduce((function(e,t){var n=(t.match(/,/g)||[]).length+1;return Math.max(e,n)}),-1)}})),ct=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFilter=void 0;var n=[\"typed\"],r=(0,h.factory)(\"filter\",n,(function(e){return(0,e.typed)(\"filter\",{\"Array, function\":i,\"Matrix, function\":function(e,t){return e.create(i(e.toArray(),t))},\"Array, RegExp\":m.filterRegExp,\"Matrix, RegExp\":function(e,t){return e.create((0,m.filterRegExp)(e.toArray(),t))}})}));function i(e,t){var n=(0,st.maxArgumentCount)(t);return(0,m.filter)(e,(function(e,r,i){return 1===n?t(e):2===n?t(e,[r]):t(e,[r],i)}))}t.createFilter=r})),ut=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFlatten=void 0;var n=[\"typed\",\"matrix\"],r=(0,h.factory)(\"flatten\",n,(function(e){var t=e.typed,n=e.matrix;return t(\"flatten\",{Array:function(e){return(0,m.flatten)((0,a.clone)(e))},Matrix:function(e){var t=(0,m.flatten)((0,a.clone)(e.toArray()));return n(t)}})}));t.createFlatten=r})),lt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createForEach=void 0;var n=[\"typed\"],r=(0,h.factory)(\"forEach\",n,(function(e){return(0,e.typed)(\"forEach\",{\"Array, function\":i,\"Matrix, function\":function(e,t){return e.forEach(t)}})}));function i(e,t){var n=(0,st.maxArgumentCount)(t);!function r(i,a){Array.isArray(i)?(0,m.forEach)(i,(function(e,t){r(e,a.concat(t))})):1===n?t(i):2===n?t(i,a):t(i,a,e)}(e,[])}t.createForEach=r})),dt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createGetMatrixDataType=void 0;var n=\"getMatrixDataType\",r=[\"typed\"],a=(0,h.factory)(n,r,(function(e){return(0,e.typed)(n,{Array:function(e){return(0,m.getArrayDataType)(e,i.typeOf)},Matrix:function(e){return e.getDataType()}})}));t.createGetMatrixDataType=a})),ft=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIdentity=void 0;var n=[\"typed\",\"config\",\"matrix\",\"BigNumber\",\"DenseMatrix\",\"SparseMatrix\"],r=(0,h.factory)(\"identity\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,a=e.BigNumber,o=e.DenseMatrix,s=e.SparseMatrix;return t(\"identity\",{\"\":function(){return\"Matrix\"===n.matrix?r([]):[]},string:function(e){return r(e)},\"number | BigNumber\":function(e){return l(e,e,\"Matrix\"===n.matrix?\"dense\":void 0)},\"number | BigNumber, string\":function(e,t){return l(e,e,t)},\"number | BigNumber, number | BigNumber\":function(e,t){return l(e,t,\"Matrix\"===n.matrix?\"dense\":void 0)},\"number | BigNumber, number | BigNumber, string\":function(e,t,n){return l(e,t,n)},Array:function(e){return c(e)},\"Array, string\":function(e,t){return c(e,t)},Matrix:function(e){return c(e.valueOf(),e.storage())},\"Matrix, string\":function(e,t){return c(e.valueOf(),t)}});function c(e,t){switch(e.length){case 0:return t?r(t):[];case 1:return l(e[0],e[0],t);case 2:return l(e[0],e[1],t);default:throw new Error(\"Vector containing two values expected\")}}function l(e,t,n){var r=(0,i.isBigNumber)(e)||(0,i.isBigNumber)(t)?a:null;if((0,i.isBigNumber)(e)&&(e=e.toNumber()),(0,i.isBigNumber)(t)&&(t=t.toNumber()),!(0,u.isInteger)(e)||e<1)throw new Error(\"Parameters in function identity must be positive integers\");if(!(0,u.isInteger)(t)||t<1)throw new Error(\"Parameters in function identity must be positive integers\");var c=r?new a(1):1,l=r?new r(0):0,d=[e,t];if(n){if(\"sparse\"===n)return s.diagonal(d,c,0,l);if(\"dense\"===n)return o.diagonal(d,c,0,l);throw new TypeError('Unknown matrix type \"'.concat(n,'\"'))}for(var f=(0,m.resize)([],d,l),p=e<t?e:t,h=0;h<p;h++)f[h][h]=c;return f}}));t.createIdentity=r})),pt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createKron=void 0;var n=[\"typed\",\"matrix\",\"multiplyScalar\"],r=(0,h.factory)(\"kron\",n,(function(e){var t=e.typed,n=e.matrix,r=e.multiplyScalar;return t(\"kron\",{\"Matrix, Matrix\":function(e,t){return n(i(e.toArray(),t.toArray()))},\"Matrix, Array\":function(e,t){return n(i(e.toArray(),t))},\"Array, Matrix\":function(e,t){return n(i(e,t.toArray()))},\"Array, Array\":i});function i(e,t){if(1===(0,m.arraySize)(e).length&&(e=[e]),1===(0,m.arraySize)(t).length&&(t=[t]),(0,m.arraySize)(e).length>2||(0,m.arraySize)(t).length>2)throw new RangeError(\"Vectors with dimensions greater then 2 are not supported expected (Size x = \"+JSON.stringify(e.length)+\", y = \"+JSON.stringify(t.length)+\")\");var n=[],i=[];return e.map((function(e){return t.map((function(t){return i=[],n.push(i),e.map((function(e){return t.map((function(t){return i.push(r(e,t))}))}))}))}))&&n}}));t.createKron=r})),mt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMap=void 0;var n=[\"typed\"],r=(0,h.factory)(\"map\",n,(function(e){return(0,e.typed)(\"map\",{\"Array, function\":i,\"Matrix, function\":function(e,t){return e.map(t)}})}));function i(e,t){var n=(0,st.maxArgumentCount)(t);return function r(i,a){return Array.isArray(i)?i.map((function(e,t){return r(e,a.concat(t))})):1===n?t(i):2===n?t(i,a):t(i,a,e)}(e,[])}t.createMap=r})),ht=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDiff=void 0;var n=[\"typed\",\"matrix\",\"subtract\",\"number\"],r=(0,h.factory)(\"diff\",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,a=e.number;return t(\"diff\",{\"Array | Matrix\":function(e){return(0,i.isMatrix)(e)?n(s(e.toArray())):s(e)},\"Array | Matrix, number\":function(e,t){if(!(0,u.isInteger)(t))throw new RangeError(\"Dimension must be a whole number\");return(0,i.isMatrix)(e)?n(o(e.toArray(),t)):o(e,t)},\"Array | Matrix, BigNumber\":function(e,t){return this(e,a(t))}});function o(e,t){if((0,i.isMatrix)(e)&&(e=e.toArray()),!Array.isArray(e))throw RangeError(\"Array/Matrix does not have that many dimensions\");if(t>0){var n=[];return e.forEach((function(e){n.push(o(e,t-1))})),n}if(0===t)return s(e);throw RangeError(\"Cannot have negative dimension\")}function s(e){var t=[],n=e.length;if(n<2)return e;for(var r=1;r<n;r++)t.push(c(e[r-1],e[r]));return t}function c(e,t){(0,i.isMatrix)(e)&&(e=e.toArray()),(0,i.isMatrix)(t)&&(t=t.toArray());var n=Array.isArray(e),a=Array.isArray(t);if(n&&a)return function(e,t){if(e.length!==t.length)throw RangeError(\"Not all sub-arrays have the same length\");for(var n=[],r=e.length,i=0;i<r;i++)n.push(c(e[i],t[i]));return n}(e,t);if(!n&&!a)return r(t,e);throw TypeError(\"Cannot calculate difference between 1 array and 1 non-array\")}}));t.createDiff=r})),yt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createOnes=void 0;var n=[\"typed\",\"config\",\"matrix\",\"BigNumber\"],r=(0,h.factory)(\"ones\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,a=e.BigNumber;return t(\"ones\",{\"\":function(){return\"Array\"===n.matrix?o([]):o([],\"default\")},\"...number | BigNumber | string\":function(e){if(\"string\"==typeof e[e.length-1]){var t=e.pop();return o(e,t)}return\"Array\"===n.matrix?o(e):o(e,\"default\")},Array:o,Matrix:function(e){var t=e.storage();return o(e.valueOf(),t)},\"Array | Matrix, string\":function(e,t){return o(e.valueOf(),t)}});function o(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){(0,i.isBigNumber)(e)&&(t=!0,r[n]=e.toNumber())})),t}(e)?new a(1):1;if(function(e){e.forEach((function(e){if(\"number\"!=typeof e||!(0,u.isInteger)(e)||e<0)throw new Error(\"Parameters in function ones must be positive integers\")}))}(e),t){var o=r(t);return e.length>0?o.resize(e,n):o}var s=[];return e.length>0?(0,m.resize)(s,e,n):s}}));t.createOnes=r})),vt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.noBignumber=function(){throw new Error('No \"bignumber\" implementation available')},t.noFraction=function(){throw new Error('No \"fraction\" implementation available')},t.noMatrix=function(){throw new Error('No \"matrix\" implementation available')},t.noIndex=function(){throw new Error('No \"index\" implementation available')},t.noSubset=function(){throw new Error('No \"matrix\" implementation available')}})),gt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRange=void 0;var n=[\"typed\",\"config\",\"?matrix\",\"?bignumber\",\"smaller\",\"smallerEq\",\"larger\",\"largerEq\"],r=(0,h.factory)(\"range\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,i=e.bignumber,a=e.smaller,o=e.smallerEq,s=e.larger,c=e.largerEq;return t(\"range\",{string:l,\"string, boolean\":l,\"number, number\":function(e,t){return u(d(e,t,1))},\"number, number, number\":function(e,t,n){return u(d(e,t,n))},\"number, number, boolean\":function(e,t,n){return u(n?f(e,t,1):d(e,t,1))},\"number, number, number, boolean\":function(e,t,n,r){return u(r?f(e,t,n):d(e,t,n))},\"BigNumber, BigNumber\":function(e,t){return u(p(e,t,new(0,e.constructor)(1)))},\"BigNumber, BigNumber, BigNumber\":function(e,t,n){return u(p(e,t,n))},\"BigNumber, BigNumber, boolean\":function(e,t,n){var r=e.constructor;return u(n?m(e,t,new r(1)):p(e,t,new r(1)))},\"BigNumber, BigNumber, BigNumber, boolean\":function(e,t,n,r){return u(r?m(e,t,n):p(e,t,n))}});function u(e){return\"Matrix\"===n.matrix?r?r(e):(0,vt.noMatrix)():e}function l(e,t){var r=function(e){var t=e.split(\":\").map((function(e){return Number(e)}));if(t.some((function(e){return isNaN(e)})))return null;switch(t.length){case 2:return{start:t[0],end:t[1],step:1};case 3:return{start:t[0],end:t[2],step:t[1]};default:return null}}(e);if(!r)throw new SyntaxError('String \"'+e+'\" is no valid range');return\"BigNumber\"===n.number?(void 0===i&&(0,vt.noBignumber)(),u((t?m:p)(i(r.start),i(r.end),i(r.step)))):u((t?f:d)(r.start,r.end,r.step))}function d(e,t,n){var r=[],i=e;if(n>0)for(;a(i,t);)r.push(i),i+=n;else if(n<0)for(;s(i,t);)r.push(i),i+=n;return r}function f(e,t,n){var r=[],i=e;if(n>0)for(;o(i,t);)r.push(i),i+=n;else if(n<0)for(;c(i,t);)r.push(i),i+=n;return r}function p(e,t,n){var r=i(0),o=[],c=e;if(n.gt(r))for(;a(c,t);)o.push(c),c=c.plus(n);else if(n.lt(r))for(;s(c,t);)o.push(c),c=c.plus(n);return o}function m(e,t,n){var r=i(0),a=[],s=e;if(n.gt(r))for(;o(s,t);)a.push(s),s=s.plus(n);else if(n.lt(r))for(;c(s,t);)a.push(s),s=s.plus(n);return a}}));t.createRange=r})),bt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createReshape=void 0;var n=[\"typed\",\"isInteger\",\"matrix\"],r=(0,h.factory)(\"reshape\",n,(function(e){var t=e.typed,n=e.isInteger,r=e.matrix;return t(\"reshape\",{\"Matrix, Array\":function(e,t){return e.reshape?e.reshape(t):r((0,m.reshape)(e.valueOf(),t))},\"Array, Array\":function(e,t){return t.forEach((function(e){if(!n(e))throw new TypeError(\"Invalid size for dimension: \"+e)})),(0,m.reshape)(e,t)}})}));t.createReshape=r})),xt=t((function(e,t){function n(e,t,r,i){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");this.fn=e,this.count=t,this.min=r,this.max=i,this.message=\"Wrong number of arguments in function \"+e+\" (\"+t+\" provided, \"+r+(null!=i?\"-\"+i:\"\")+\" expected)\",this.stack=(new Error).stack}Object.defineProperty(t,\"__esModule\",{value:!0}),t.ArgumentsError=n,n.prototype=new Error,n.prototype.constructor=Error,n.prototype.name=\"ArgumentsError\",n.prototype.isArgumentsError=!0})),Dt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createResize=void 0;var n=[\"config\",\"matrix\"],r=(0,h.factory)(\"resize\",n,(function(e){var t=e.config,n=e.matrix;return function(e,o,s){if(2!==arguments.length&&3!==arguments.length)throw new xt.ArgumentsError(\"resize\",arguments.length,2,3);if((0,i.isMatrix)(o)&&(o=o.valueOf()),(0,i.isBigNumber)(o[0])&&(o=o.map((function(e){return(0,i.isBigNumber)(e)?e.toNumber():e}))),(0,i.isMatrix)(e))return e.resize(o,s,!0);if(\"string\"==typeof e)return r(e,o,s);var c=!Array.isArray(e)&&\"Array\"!==t.matrix;if(0===o.length){for(;Array.isArray(e);)e=e[0];return(0,a.clone)(e)}Array.isArray(e)||(e=[e]),e=(0,a.clone)(e);var u=(0,m.resize)(e,o,s);return c?n(u):u};function r(e,t,n){if(void 0!==n){if(\"string\"!=typeof n||1!==n.length)throw new TypeError(\"Single character expected as defaultValue\")}else n=\" \";if(1!==t.length)throw new f.DimensionError(t.length,1);var r=t[0];if(\"number\"!=typeof r||!(0,u.isInteger)(r))throw new TypeError(\"Invalid size, must contain positive integers (size: \"+(0,d.format)(t)+\")\");if(e.length>r)return e.substring(0,r);if(e.length<r){for(var i=e,a=0,o=r-e.length;a<o;a++)i+=n;return i}return e}}));t.createResize=r})),_t=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRotate=void 0;var n=[\"typed\",\"multiply\",\"rotationMatrix\"],r=(0,h.factory)(\"rotate\",n,(function(e){var t=e.typed,n=e.multiply,r=e.rotationMatrix;return t(\"rotate\",{\"Array , number | BigNumber | Complex | Unit\":function(e,t){return i(e,2),n(r(t),e).toArray()},\"Matrix , number | BigNumber | Complex | Unit\":function(e,t){return i(e,2),n(r(t),e)},\"Array, number | BigNumber | Complex | Unit, Array | Matrix\":function(e,t,a){return i(e,3),n(r(t,a),e)},\"Matrix, number | BigNumber | Complex | Unit, Array | Matrix\":function(e,t,a){return i(e,3),n(r(t,a),e)}});function i(e,t){var n=Array.isArray(e)?(0,m.arraySize)(e):e.size();if(n.length>2)throw new RangeError(\"Vector must be of dimensions 1x\".concat(t));if(2===n.length&&1!==n[1])throw new RangeError(\"Vector must be of dimensions 1x\".concat(t));if(n[0]!==t)throw new RangeError(\"Vector must be of dimensions 1x\".concat(t))}}));t.createRotate=r})),wt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRotationMatrix=void 0;var n=\"rotationMatrix\",r=[\"typed\",\"config\",\"multiplyScalar\",\"addScalar\",\"unaryMinus\",\"norm\",\"matrix\",\"BigNumber\",\"DenseMatrix\",\"SparseMatrix\",\"cos\",\"sin\"],a=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,a=e.multiplyScalar,o=e.addScalar,s=e.unaryMinus,c=e.norm,u=e.BigNumber,l=e.matrix,d=e.DenseMatrix,f=e.SparseMatrix,p=e.cos,m=e.sin;return t(n,{\"\":function(){return\"Matrix\"===r.matrix?l([]):[]},string:function(e){return l(e)},\"number | BigNumber | Complex | Unit\":function(e){return h(e,\"Matrix\"===r.matrix?\"dense\":void 0)},\"number | BigNumber | Complex | Unit, string\":function(e,t){return h(e,t)},\"number | BigNumber | Complex | Unit, Array\":function(e,t){var n=l(t);return y(n),b(e,n,void 0)},\"number | BigNumber | Complex | Unit, Matrix\":function(e,t){y(t);var n=t.storage()||(\"Matrix\"===r.matrix?\"dense\":void 0);return b(e,t,n)},\"number | BigNumber | Complex | Unit, Array, string\":function(e,t,n){var r=l(t);return y(r),b(e,r,n)},\"number | BigNumber | Complex | Unit, Matrix, string\":function(e,t,n){return y(t),b(e,t,n)}});function h(e,t){var n=(0,i.isBigNumber)(e)?new u(-1):-1,r=p(e),o=m(e);return g([[r,a(n,o)],[o,r]],t)}function y(e){var t=e.size();if(t.length<1||3!==t[0])throw new RangeError(\"Vector must be of dimensions 1x3\")}function v(e){return e.reduce((function(e,t){return a(e,t)}))}function g(e,t){if(t){if(\"sparse\"===t)return new f(e);if(\"dense\"===t)return new d(e);throw new TypeError('Unknown matrix type \"'.concat(t,'\"'))}return e}function b(e,t,n){var r=c(t);if(0===r)throw new RangeError(\"Rotation around zero vector\");var a=(0,i.isBigNumber)(e)?u:null,l=a?new a(1):1,d=a?new a(-1):-1,f=a?new a(t.get([0])/r):t.get([0])/r,h=a?new a(t.get([1])/r):t.get([1])/r,y=a?new a(t.get([2])/r):t.get([2])/r,b=p(e),x=o(l,s(b)),D=m(e);return g([[o(b,v([f,f,x])),o(v([f,h,x]),v([d,y,D])),o(v([f,y,x]),v([h,D]))],[o(v([f,h,x]),v([y,D])),o(b,v([h,h,x])),o(v([h,y,x]),v([d,f,D]))],[o(v([f,y,x]),v([d,h,D])),o(v([h,y,x]),v([f,D])),o(b,v([y,y,x]))]],n)}}));t.createRotationMatrix=a})),Nt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRow=void 0;var n=[\"typed\",\"Index\",\"matrix\",\"range\"],r=(0,h.factory)(\"row\",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,i=e.range;return t(\"row\",{\"Matrix, number\":o,\"Array, number\":function(e,t){return o(r((0,a.clone)(e)),t).valueOf()}});function o(e,t){if(2!==e.size().length)throw new Error(\"Only two dimensional matrix is supported\");(0,m.validateIndex)(t,e.size()[0]);var r=i(0,e.size()[1]),a=new n(t,r);return e.subset(a)}}));t.createRow=r})),Mt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSize=void 0;var n=[\"typed\",\"config\",\"?matrix\"],r=(0,h.factory)(\"size\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix;return t(\"size\",{Matrix:function(e){return e.create(e.size())},Array:m.arraySize,string:function(e){return\"Array\"===n.matrix?[e.length]:r([e.length])},\"number | Complex | BigNumber | Unit | boolean | null\":function(e){return\"Array\"===n.matrix?[]:r?r([]):(0,vt.noMatrix)()}})}));t.createSize=r})),Ot=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSqueeze=void 0;var n=[\"typed\",\"matrix\"],r=(0,h.factory)(\"squeeze\",n,(function(e){var t=e.typed,n=e.matrix;return t(\"squeeze\",{Array:function(e){return(0,m.squeeze)((0,a.clone)(e))},Matrix:function(e){var t=(0,m.squeeze)(e.toArray());return Array.isArray(t)?n(t):t},any:function(e){return(0,a.clone)(e)}})}));t.createSqueeze=r})),St=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(e,t){return!(!e||\"object\"!==n(e))&&(!!(0,a.hasOwnProperty)(s,t)||!(t in Object.prototype)&&!(t in Function.prototype))}function i(e,t){return null!=e&&\"function\"==typeof e[t]&&(!((0,a.hasOwnProperty)(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e))&&(!!(0,a.hasOwnProperty)(c,t)||!(t in Object.prototype)&&!(t in Function.prototype)))}function o(e){return\"object\"===n(e)&&e&&e.constructor===Object}Object.defineProperty(t,\"__esModule\",{value:!0}),t.getSafeProperty=function(e,t){if(o(e)&&r(e,t))return e[t];if(\"function\"==typeof e[t]&&i(e,t))throw new Error('Cannot access method \"'+t+'\" as a property');throw new Error('No access to property \"'+t+'\"')},t.setSafeProperty=function(e,t,n){if(o(e)&&r(e,t))return e[t]=n,n;throw new Error('No access to property \"'+t+'\"')},t.isSafeProperty=r,t.validateSafeMethod=function(e,t){if(!i(e,t))throw new Error('No access to method \"'+t+'\"')},t.isSafeMethod=i,t.isPlainObject=o;var s={length:!0,name:!0},c={toString:!0,valueOf:!0,toLocaleString:!0}})),Pt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSubset=void 0;var n=[\"typed\",\"matrix\"],r=(0,h.factory)(\"subset\",n,(function(e){var t=e.typed,n=e.matrix;return t(\"subset\",{\"Array, Index\":function(e,t){var r=n(e).subset(t);return t.isScalar()?r:r.valueOf()},\"Matrix, Index\":function(e,t){return e.subset(t)},\"Object, Index\":c,\"string, Index\":o,\"Array, Index, any\":function(e,t,r){return n((0,a.clone)(e)).subset(t,r,void 0).valueOf()},\"Array, Index, any, any\":function(e,t,r,i){return n((0,a.clone)(e)).subset(t,r,i).valueOf()},\"Matrix, Index, any\":function(e,t,n){return e.clone().subset(t,n)},\"Matrix, Index, any, any\":function(e,t,n,r){return e.clone().subset(t,n,r)},\"string, Index, string\":s,\"string, Index, string, string\":s,\"Object, Index, any\":u})}));function o(e,t){if(!(0,i.isIndex)(t))throw new TypeError(\"Index expected\");if(1!==t.size().length)throw new f.DimensionError(t.size().length,1);var n=e.length;(0,m.validateIndex)(t.min()[0],n),(0,m.validateIndex)(t.max()[0],n);var r=t.dimension(0),a=\"\";return r.forEach((function(t){a+=e.charAt(t)})),a}function s(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError(\"Index expected\");if(1!==t.size().length)throw new f.DimensionError(t.size().length,1);if(void 0!==r){if(\"string\"!=typeof r||1!==r.length)throw new TypeError(\"Single character expected as defaultValue\")}else r=\" \";var i=t.dimension(0);if(i.size()[0]!==n.length)throw new f.DimensionError(i.size()[0],n.length);var a=e.length;(0,m.validateIndex)(t.min()[0]),(0,m.validateIndex)(t.max()[0]);for(var o=[],s=0;s<a;s++)o[s]=e.charAt(s);if(i.forEach((function(e,t){o[e]=n.charAt(t[0])})),o.length>a)for(var c=a-1,u=o.length;c<u;c++)o[c]||(o[c]=r);return o.join(\"\")}function c(e,t){if(1!==t.size().length)throw new f.DimensionError(t.size(),1);var n=t.dimension(0);if(\"string\"!=typeof n)throw new TypeError(\"String expected as index to retrieve an object property\");return(0,St.getSafeProperty)(e,n)}function u(e,t,n){if(1!==t.size().length)throw new f.DimensionError(t.size(),1);var r=t.dimension(0);if(\"string\"!=typeof r)throw new TypeError(\"String expected as index to retrieve an object property\");var i=(0,a.clone)(e);return(0,St.setSafeProperty)(i,r,n),i}t.createSubset=r})),jt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTranspose=void 0;var n=[\"typed\",\"matrix\"],r=(0,h.factory)(\"transpose\",n,(function(e){var t=e.typed,n=e.matrix;return t(\"transpose\",{Array:function(e){return this(n(e)).valueOf()},Matrix:function(e){var t,n=e.size();switch(n.length){case 1:t=e.clone();break;case 2:var r=n[0],i=n[1];if(0===i)throw new RangeError(\"Cannot transpose a 2D matrix with no columns (size: \"+(0,d.format)(n)+\")\");switch(e.storage()){case\"dense\":t=function(e,t,n){for(var r,i=e._data,o=[],s=0;s<n;s++){r=o[s]=[];for(var c=0;c<t;c++)r[c]=(0,a.clone)(i[c][s])}return e.createDenseMatrix({data:o,size:[n,t],datatype:e._datatype})}(e,r,i);break;case\"sparse\":t=function(e,t,n){for(var r,i,o,s=e._values,c=e._index,u=e._ptr,l=s?[]:void 0,d=[],f=[],p=[],m=0;m<t;m++)p[m]=0;for(r=0,i=c.length;r<i;r++)p[c[r]]++;for(var h=0,y=0;y<t;y++)f.push(h),h+=p[y],p[y]=f[y];for(f.push(h),o=0;o<n;o++)for(var v=u[o],g=u[o+1],b=v;b<g;b++){var x=p[c[b]]++;d[x]=o,s&&(l[x]=(0,a.clone)(s[b]))}return e.createSparseMatrix({values:l,index:d,ptr:f,size:[n,t],datatype:e._datatype})}(e,r,i)}break;default:throw new RangeError(\"Matrix must be a vector or two dimensional (size: \"+(0,d.format)(this._size)+\")\")}return t},any:function(e){return(0,a.clone)(e)}})}));t.createTranspose=r})),At=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCtranspose=void 0;var n=[\"typed\",\"transpose\",\"conj\"],r=(0,h.factory)(\"ctranspose\",n,(function(e){var t=e.typed,n=e.transpose,r=e.conj;return t(\"ctranspose\",{any:function(e){return r(n(e))}})}));t.createCtranspose=r})),Et=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createZeros=void 0;var n=[\"typed\",\"config\",\"matrix\",\"BigNumber\"],r=(0,h.factory)(\"zeros\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,a=e.BigNumber;return t(\"zeros\",{\"\":function(){return\"Array\"===n.matrix?o([]):o([],\"default\")},\"...number | BigNumber | string\":function(e){if(\"string\"==typeof e[e.length-1]){var t=e.pop();return o(e,t)}return\"Array\"===n.matrix?o(e):o(e,\"default\")},Array:o,Matrix:function(e){var t=e.storage();return o(e.valueOf(),t)},\"Array | Matrix, string\":function(e,t){return o(e.valueOf(),t)}});function o(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){(0,i.isBigNumber)(e)&&(t=!0,r[n]=e.toNumber())})),t}(e)?new a(0):0;if(function(e){e.forEach((function(e){if(\"number\"!=typeof e||!(0,u.isInteger)(e)||e<0)throw new Error(\"Parameters in function zeros must be positive integers\")}))}(e),t){var o=r(t);return e.length>0?o.resize(e,n):o}var s=[];return e.length>0?(0,m.resize)(s,e,n):s}}));t.createZeros=r})),Ct=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createErf=void 0;var n=[\"typed\"],r=(0,h.factory)(\"erf\",n,(function(e){return(0,e.typed)(\"name\",{number:function(e){var t=Math.abs(e);return t>=c?(0,u.sign)(e):t<=i?(0,u.sign)(e)*function(e){var t,n=e*e,r=o[0][4]*n,i=n;for(t=0;t<3;t+=1)r=(r+o[0][t])*n,i=(i+s[0][t])*n;return e*(r+o[0][3])/(i+s[0][3])}(t):t<=4?(0,u.sign)(e)*(1-function(e){var t,n=o[1][8]*e,r=e;for(t=0;t<7;t+=1)n=(n+o[1][t])*e,r=(r+s[1][t])*e;var i=(n+o[1][7])/(r+s[1][7]),a=parseInt(16*e)/16,c=(e-a)*(e+a);return Math.exp(-a*a)*Math.exp(-c)*i}(t)):(0,u.sign)(e)*(1-function(e){var t,n=1/(e*e),r=o[2][5]*n,i=n;for(t=0;t<4;t+=1)r=(r+o[2][t])*n,i=(i+s[2][t])*n;var c=n*(r+o[2][4])/(i+s[2][4]);c=(a-c)/e,n=parseInt(16*e)/16;var u=(e-n)*(e+n);return Math.exp(-n*n)*Math.exp(-u)*c}(t))},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createErf=r;var i=.46875,a=.5641895835477563,o=[[3.1611237438705655,113.86415415105016,377.485237685302,3209.3775891384694,.18577770618460315],[.5641884969886701,8.883149794388377,66.11919063714163,298.6351381974001,881.952221241769,1712.0476126340707,2051.0783778260716,1230.3393547979972,2.1531153547440383e-8],[.30532663496123236,.36034489994980445,.12578172611122926,.016083785148742275,.0006587491615298378,.016315387137302097]],s=[[23.601290952344122,244.02463793444417,1282.6165260773723,2844.236833439171],[15.744926110709835,117.6939508913125,537.1811018620099,1621.3895745666903,3290.7992357334597,4362.619090143247,3439.3676741437216,1230.3393548037495],[2.568520192289822,1.8729528499234604,.5279051029514285,.06051834131244132,.0023352049762686918]],c=Math.pow(2,53)})),Tt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMode=void 0;var n=[\"typed\",\"isNaN\",\"isNumeric\"],r=(0,h.factory)(\"mode\",n,(function(e){var t=e.typed,n=e.isNaN,r=e.isNumeric;return t(\"mode\",{\"Array | Matrix\":i,\"...\":function(e){return i(e)}});function i(e){if(0===(e=(0,m.flatten)(e.valueOf())).length)throw new Error(\"Cannot calculate mode of an empty array\");for(var t={},i=[],a=0,o=0;o<e.length;o++){var s=e[o];if(r(s)&&n(s))throw new Error(\"Cannot calculate mode of an array containing NaN values\");s in t||(t[s]=0),t[s]++,t[s]===a?i.push(s):t[s]>a&&(a=t[s],i=[s])}return i}}));t.createMode=r})),kt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.improveErrorMessage=function(e,t,n){var r;if(-1!==String(e).indexOf(\"Unexpected type\"))return r=arguments.length>2?\" (type: \"+(0,i.typeOf)(n)+\", value: \"+JSON.stringify(n)+\")\":\" (type: \"+e.data.actual+\")\",new TypeError(\"Cannot calculate \"+t+\", unexpected type of argument\"+r);if(-1!==String(e).indexOf(\"complex numbers\"))return r=arguments.length>2?\" (type: \"+(0,i.typeOf)(n)+\", value: \"+JSON.stringify(n)+\")\":\"\",new TypeError(\"Cannot calculate \"+t+\", no ordering relation is defined for complex numbers\"+r);return e}})),It=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createProd=void 0;var n=[\"typed\",\"config\",\"multiplyScalar\",\"numeric\"],r=(0,h.factory)(\"prod\",n,(function(e){var t=e.typed,n=e.config,r=e.multiplyScalar,i=e.numeric;return t(\"prod\",{\"Array | Matrix\":a,\"Array | Matrix, number | BigNumber\":function(e,t){throw new Error(\"prod(A, dim) is not yet supported\")},\"...\":function(e){return a(e)}});function a(e){var t;if((0,P.deepForEach)(e,(function(e){try{t=void 0===t?e:r(t,e)}catch(t){throw(0,kt.improveErrorMessage)(t,\"prod\",e)}})),\"string\"==typeof t&&(t=i(t,n.number)),void 0===t)throw new Error(\"Cannot calculate prod of an empty array\");return t}}));t.createProd=r})),Bt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFormat=void 0;var n=[\"typed\"],r=(0,h.factory)(\"format\",n,(function(e){return(0,e.typed)(\"format\",{any:d.format,\"any, Object | function | number\":d.format})}));t.createFormat=r})),zt=t((function(e,t){function n(e){var t={2:\"0b\",8:\"0o\",16:\"0x\"}[e];return function(n){if(n>Math.pow(2,31)-1||n<-Math.pow(2,31))throw new Error(\"Value must be in range [-2^31, 2^31-1]\");if(!(0,u.isInteger)(n))throw new Error(\"Value must be an integer\");return n<0&&(n+=Math.pow(2,32)),\"\".concat(t).concat(n.toString(e))}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBaseFormatterFactory=function(e,t){return(0,h.factory)(e,r,(function(r){return(0,r.typed)(e,{number:n(t)})}))};var r=[\"typed\"]})),Rt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBin=void 0;var n=(0,zt.createBaseFormatterFactory)(\"bin\",2);t.createBin=n})),qt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createOct=void 0;var n=(0,zt.createBaseFormatterFactory)(\"oct\",8);t.createOct=n})),Ft=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createHex=void 0;var n=(0,zt.createBaseFormatterFactory)(\"hex\",16);t.createHex=n})),Ut=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPrint=void 0;var n=[\"typed\"],r=(0,h.factory)(\"print\",n,(function(e){return(0,e.typed)(\"print\",{\"string, Object | Array\":a,\"string, Object | Array, number | Object\":a})}));function a(e,t,n){return e.replace(/\\$([\\w.]+)/g,(function(e,r){for(var a=r.split(\".\"),o=t[a.shift()];a.length&&void 0!==o;){var s=a.shift();o=s?o[s]:o+\".\"}return void 0!==o?(0,i.isString)(o)?o:(0,d.format)(o,n):e}))}t.createPrint=r})),Lt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTo=void 0;var n=[\"typed\",\"matrix\"],r=(0,h.factory)(\"to\",n,(function(e){var t=e.typed,n=e.matrix,r=(0,we.createAlgorithm13)({typed:t}),i=(0,pe.createAlgorithm14)({typed:t});return t(\"to\",{\"Unit, Unit | string\":function(e,t){return e.to(t)},\"Matrix, Matrix\":function(e,t){return r(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"Matrix, any\":function(e,t){return i(e,t,this,!1)},\"any, Matrix\":function(e,t){return i(t,e,this,!0)},\"Array, any\":function(e,t){return i(n(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return i(n(t),e,this,!0).valueOf()}})}));t.createTo=r})),Ht=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIsPrime=void 0;var n=[\"typed\"],r=(0,h.factory)(\"isPrime\",n,(function(e){return(0,e.typed)(\"isPrime\",{number:function(e){if(0*e!=0)return!1;if(e<=3)return e>1;if(e%2==0||e%3==0)return!1;for(var t=5;t*t<=e;t+=6)if(e%t==0||e%(t+2)==0)return!1;return!0},BigNumber:function(e){if(0*e.toNumber()!=0)return!1;if(e.lte(3))return e.gt(1);if(e.mod(2).eq(0)||e.mod(3).eq(0))return!1;for(var t=5;e.gte(t*t);t+=6)if(e.mod(t).eq(0)||e.mod(t+2).eq(0))return!1;return!0},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createIsPrime=r})),Zt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNumeric=void 0;var n=[\"number\",\"?bignumber\",\"?fraction\"],r=(0,h.factory)(\"numeric\",n,(function(e){var t=e.number,n=e.bignumber,r=e.fraction,a={string:!0,number:!0,BigNumber:!0,Fraction:!0},o={number:function(e){return t(e)},BigNumber:n?function(e){return n(e)}:vt.noBignumber,Fraction:r?function(e){return r(e)}:vt.noFraction};return function(e,t){var n=(0,i.typeOf)(e);if(!(n in a))throw new TypeError(\"Cannot convert \"+e+' of type \"'+n+'\"; valid input types are '+Object.keys(a).join(\", \"));if(!(t in o))throw new TypeError(\"Cannot convert \"+e+' to type \"'+t+'\"; valid output types are '+Object.keys(o).join(\", \"));return t===n?e:o[t](e)}}));t.createNumeric=r})),Vt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDivideScalar=void 0;var n=[\"typed\",\"numeric\"],r=(0,h.factory)(\"divideScalar\",n,(function(e){var t=e.typed,n=e.numeric;return t(\"divideScalar\",{\"number, number\":function(e,t){return e/t},\"Complex, Complex\":function(e,t){return e.div(t)},\"BigNumber, BigNumber\":function(e,t){return e.div(t)},\"Fraction, Fraction\":function(e,t){return e.div(t)},\"Unit, number | Fraction | BigNumber\":function(e,t){var r=e.clone(),a=n(1,(0,i.typeOf)(t));return r.value=this(null===r.value?r._normalize(a):r.value,t),r},\"number | Fraction | BigNumber, Unit\":function(e,t){var r=t.clone();r=r.pow(-1);var a=n(1,(0,i.typeOf)(e));return r.value=this(e,null===t.value?t._normalize(a):t.value),r},\"Unit, Unit\":function(e,t){return e.divide(t)}})}));t.createDivideScalar=r})),Wt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPow=void 0;var n=[\"typed\",\"config\",\"identity\",\"multiply\",\"matrix\",\"fraction\",\"number\",\"Complex\"],r=(0,h.factory)(\"pow\",n,(function(e){var t=e.typed,n=e.config,r=e.identity,i=e.multiply,a=e.matrix,o=e.number,s=e.fraction,c=e.Complex;return t(\"pow\",{\"number, number\":l,\"Complex, Complex\":function(e,t){return e.pow(t)},\"BigNumber, BigNumber\":function(e,t){return t.isInteger()||e>=0||n.predictable?e.pow(t):new c(e.toNumber(),0).pow(t.toNumber(),0)},\"Fraction, Fraction\":function(e,t){if(1!==t.d){if(n.predictable)throw new Error(\"Function pow does not support non-integer exponents for fractions.\");return l(e.valueOf(),t.valueOf())}return e.pow(t)},\"Array, number\":d,\"Array, BigNumber\":function(e,t){return d(e,t.toNumber())},\"Matrix, number\":f,\"Matrix, BigNumber\":function(e,t){return f(e,t.toNumber())},\"Unit, number | BigNumber\":function(e,t){return e.pow(t)}});function l(e,t){if(n.predictable&&!(0,u.isInteger)(t)&&e<0)try{var r=s(t),i=o(r);if((t===i||Math.abs((t-i)/t)<1e-14)&&r.d%2==1)return(r.n%2==0?1:-1)*Math.pow(-e,t)}catch(e){}return n.predictable&&(e<-1&&t===1/0||e>-1&&e<0&&t===-1/0)?NaN:(0,u.isInteger)(t)||e>=0||n.predictable?(0,F.powNumber)(e,t):e*e<1&&t===1/0||e*e>1&&t===-1/0?0:new c(e,0).pow(t,0)}function d(e,t){if(!(0,u.isInteger)(t)||t<0)throw new TypeError(\"For A^b, b must be a positive integer (value is \"+t+\")\");var n=(0,m.arraySize)(e);if(2!==n.length)throw new Error(\"For A^b, A must be 2 dimensional (A has \"+n.length+\" dimensions)\");if(n[0]!==n[1])throw new Error(\"For A^b, A must be square (size is \"+n[0]+\"x\"+n[1]+\")\");for(var a=r(n[0]).valueOf(),o=e;t>=1;)1==(1&t)&&(a=i(o,a)),t>>=1,o=i(o,o);return a}function f(e,t){return a(d(e.valueOf(),t))}}));t.createPow=r})),Gt=t((function(e,t){function n(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function r(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRoundNumber=t.createRound=void 0;var a=\"Number of decimals in function round must be an integer\",o=[\"typed\",\"matrix\",\"equalScalar\",\"zeros\",\"BigNumber\",\"DenseMatrix\"],s=(0,h.factory)(\"round\",o,(function(e){var t=e.typed,n=e.matrix,i=e.equalScalar,o=e.zeros,s=e.BigNumber,u=e.DenseMatrix,l=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),d=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:u}),f=(0,pe.createAlgorithm14)({typed:t});return t(\"round\",r(r({},c),{},{Complex:function(e){return e.round()},\"Complex, number\":function(e,t){if(t%1)throw new TypeError(a);return e.round(t)},\"Complex, BigNumber\":function(e,t){if(!t.isInteger())throw new TypeError(a);var n=t.toNumber();return e.round(n)},\"number, BigNumber\":function(e,t){if(!t.isInteger())throw new TypeError(a);return new s(e).toDecimalPlaces(t.toNumber())},BigNumber:function(e){return e.toDecimalPlaces(0)},\"BigNumber, BigNumber\":function(e,t){if(!t.isInteger())throw new TypeError(a);return e.toDecimalPlaces(t.toNumber())},Fraction:function(e){return e.round()},\"Fraction, number\":function(e,t){if(t%1)throw new TypeError(a);return e.round(t)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)},\"SparseMatrix, number | BigNumber\":function(e,t){return l(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return f(e,t,this,!1)},\"number | Complex | BigNumber, SparseMatrix\":function(e,t){return i(e,0)?o(t.size(),t.storage()):d(t,e,this,!0)},\"number | Complex | BigNumber, DenseMatrix\":function(e,t){return i(e,0)?o(t.size(),t.storage()):f(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return f(n(e),t,this,!1).valueOf()},\"number | Complex | BigNumber, Array\":function(e,t){return f(n(t),e,this,!0).valueOf()}}))}));t.createRound=s;var c={number:F.roundNumber,\"number, number\":function(e,t){if(!(0,u.isInteger)(t))throw new TypeError(a);if(t<0||t>15)throw new Error(\"Number of decimals in function round must be in te range of 0-15\");return(0,F.roundNumber)(e,t)}},l=(0,h.factory)(\"round\",[\"typed\"],(function(e){return(0,e.typed)(\"round\",c)}));t.createRoundNumber=l})),$t=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLog=void 0;var n=[\"config\",\"typed\",\"divideScalar\",\"Complex\"],r=(0,h.factory)(\"log\",n,(function(e){var t=e.typed,n=e.config,r=e.divideScalar,i=e.Complex;return t(\"log\",{number:function(e){return e>=0||n.predictable?(0,F.logNumber)(e):new i(e,0).log()},Complex:function(e){return e.log()},BigNumber:function(e){return!e.isNegative()||n.predictable?e.ln():new i(e.toNumber(),0).log()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)},\"any, any\":function(e,t){return r(this(e),this(t))}})}));t.createLog=r})),Qt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLog1p=void 0;var n=[\"typed\",\"config\",\"divideScalar\",\"log\",\"Complex\"],r=(0,h.factory)(\"log1p\",n,(function(e){var t=e.typed,n=e.config,r=e.divideScalar,i=e.log,a=e.Complex;return t(\"log1p\",{number:function(e){return e>=-1||n.predictable?(0,u.log1p)(e):o(new a(e,0))},Complex:o,BigNumber:function(e){var t=e.plus(1);return!t.isNegative()||n.predictable?t.ln():o(new a(e.toNumber(),0))},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)},\"any, any\":function(e,t){return r(this(e),i(t))}});function o(e){var t=e.re+1;return new a(Math.log(Math.sqrt(t*t+e.im*e.im)),Math.atan2(e.im,t))}}));t.createLog1p=r})),Xt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNthRoots=void 0;var n=[\"config\",\"typed\",\"divideScalar\",\"Complex\"],r=(0,h.factory)(\"nthRoots\",n,(function(e){var t=e.typed,n=(e.config,e.divideScalar,e.Complex),r=[function(e){return new n(e,0)},function(e){return new n(0,e)},function(e){return new n(-e,0)},function(e){return new n(0,-e)}];function i(e,t){if(t<0)throw new Error(\"Root must be greater than zero\");if(0===t)throw new Error(\"Root must be non-zero\");if(t%1!=0)throw new Error(\"Root must be an integer\");if(0===e||0===e.abs())return[new n(0,0)];var i,a=\"number\"==typeof e;(a||0===e.re||0===e.im)&&(i=a?2*+(e<0):0===e.im?2*+(e.re<0):2*+(e.im<0)+1);for(var o=e.arg(),s=e.abs(),c=[],u=Math.pow(s,1/t),l=0;l<t;l++){var d=(i+4*l)/t;d!==Math.round(d)?c.push(new n({r:u,phi:(o+2*Math.PI*l)/t})):c.push(r[d%4](u))}return c}return t(\"nthRoots\",{Complex:function(e){return i(e,2)},\"Complex, number\":i})}));t.createNthRoots=r})),Yt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDotPow=void 0;var n=[\"typed\",\"equalScalar\",\"matrix\",\"pow\",\"DenseMatrix\"],r=(0,h.factory)(\"dotPow\",n,(function(e){var t=e.typed,n=e.equalScalar,r=e.matrix,i=e.pow,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,fe.createAlgorithm11)({typed:t,equalScalar:n}),u=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(\"dotPow\",{\"any, any\":i,\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,i,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,i,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,i,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,i)},\"Array, Array\":function(e,t){return this(r(e),r(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(r(e),t)},\"Matrix, Array\":function(e,t){return this(e,r(t))},\"SparseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return d(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return u(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, any\":function(e,t){return d(r(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return d(r(t),e,this,!0).valueOf()}})}));t.createDotPow=r})),Jt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDotDivide=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"divideScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"dotDivide\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.divideScalar,a=e.DenseMatrix,o=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),s=(0,Ae.createAlgorithm03)({typed:t}),c=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),u=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),l=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),d=(0,we.createAlgorithm13)({typed:t}),f=(0,pe.createAlgorithm14)({typed:t});return t(\"dotDivide\",{\"any, any\":i,\"SparseMatrix, SparseMatrix\":function(e,t){return c(e,t,i,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,i,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return s(e,t,i,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return d(e,t,i)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return u(e,t,i,!1)},\"DenseMatrix, any\":function(e,t){return f(e,t,i,!1)},\"any, SparseMatrix\":function(e,t){return l(t,e,i,!0)},\"any, DenseMatrix\":function(e,t){return f(t,e,i,!0)},\"Array, any\":function(e,t){return f(n(e),t,i,!1).valueOf()},\"any, Array\":function(e,t){return f(n(t),e,i,!0).valueOf()}})}));t.createDotDivide=r})),Kt=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSolveValidation=function(e){var t=e.DenseMatrix;return function(e,n,r){var a=e.size();if(2!==a.length)throw new RangeError(\"Matrix must be two dimensional (size: \"+(0,d.format)(a)+\")\");var o=a[0];if(o!==a[1])throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(a)+\")\");var s=[];if((0,i.isMatrix)(n)){var c=n.size(),u=n._data;if(1===c.length){if(c[0]!==o)throw new RangeError(\"Dimension mismatch. Matrix columns must match vector length.\");for(var l=0;l<o;l++)s[l]=[u[l]];return new t({data:s,size:[o,1],datatype:n._datatype})}if(2===c.length){if(c[0]!==o||1!==c[1])throw new RangeError(\"Dimension mismatch. Matrix columns must match vector length.\");if((0,i.isDenseMatrix)(n)){if(r){s=[];for(var f=0;f<o;f++)s[f]=[u[f][0]];return new t({data:s,size:[o,1],datatype:n._datatype})}return n}if((0,i.isSparseMatrix)(n)){for(var p=0;p<o;p++)s[p]=[0];for(var h=n._values,y=n._index,v=n._ptr,g=v[1],b=v[0];b<g;b++){s[y[b]][0]=h[b]}return new t({data:s,size:[o,1],datatype:n._datatype})}}throw new RangeError(\"Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.\")}if((0,i.isArray)(n)){var x=(0,m.arraySize)(n);if(1===x.length){if(x[0]!==o)throw new RangeError(\"Dimension mismatch. Matrix columns must match vector length.\");for(var D=0;D<o;D++)s[D]=[n[D]];return new t({data:s,size:[o,1]})}if(2===x.length){if(x[0]!==o||1!==x[1])throw new RangeError(\"Dimension mismatch. Matrix columns must match vector length.\");for(var _=0;_<o;_++)s[_]=[n[_][0]];return new t({data:s,size:[o,1]})}throw new RangeError(\"Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.\")}}}})),en=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLsolve=void 0;var n=[\"typed\",\"matrix\",\"divideScalar\",\"multiplyScalar\",\"subtract\",\"equalScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"lsolve\",n,(function(e){var t=e.typed,n=e.matrix,r=e.divideScalar,i=e.multiplyScalar,a=e.subtract,o=e.equalScalar,s=e.DenseMatrix,c=(0,Kt.createSolveValidation)({DenseMatrix:s});return t(\"lsolve\",{\"SparseMatrix, Array | Matrix\":function(e,t){return function(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=e._values,f=e._index,p=e._ptr,m=[],h=0;h<l;h++){var y=n[h][0]||0;if(o(y,0))m[h]=[0];else{for(var v=0,g=[],b=[],x=p[h],D=p[h+1],_=x;_<D;_++){var w=f[_];w===h?v=d[_]:w>h&&(g.push(d[_]),b.push(w))}if(o(v,0))throw new Error(\"Linear system cannot be solved since matrix is singular\");for(var N=r(y,v),M=0,O=b.length;M<O;M++){var S=b[M];n[S]=[a(n[S][0]||0,i(N,g[M]))]}m[h]=[N]}}return new s({data:m,size:[u,1]})}(e,t)},\"DenseMatrix, Array | Matrix\":function(e,t){return u(e,t)},\"Array, Array | Matrix\":function(e,t){return u(n(e),t).valueOf()}});function u(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=[],f=e._data,p=0;p<l;p++){var m=n[p][0]||0,h=void 0;if(o(m,0))h=0;else{var y=f[p][p];if(o(y,0))throw new Error(\"Linear system cannot be solved since matrix is singular\");h=r(m,y);for(var v=p+1;v<u;v++)n[v]=[a(n[v][0]||0,i(h,f[v][p]))]}d[p]=[h]}return new s({data:d,size:[u,1]})}}));t.createLsolve=r})),tn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUsolve=void 0;var n=[\"typed\",\"matrix\",\"divideScalar\",\"multiplyScalar\",\"subtract\",\"equalScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"usolve\",n,(function(e){var t=e.typed,n=e.matrix,r=e.divideScalar,i=e.multiplyScalar,a=e.subtract,o=e.equalScalar,s=e.DenseMatrix,c=(0,Kt.createSolveValidation)({DenseMatrix:s});return t(\"usolve\",{\"SparseMatrix, Array | Matrix\":function(e,t){return function(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=e._values,f=e._index,p=e._ptr,m=[],h=l-1;h>=0;h--){var y=n[h][0]||0;if(o(y,0))m[h]=[0];else{for(var v=0,g=[],b=[],x=p[h],D=p[h+1]-1;D>=x;D--){var _=f[D];_===h?v=d[D]:_<h&&(g.push(d[D]),b.push(_))}if(o(v,0))throw new Error(\"Linear system cannot be solved since matrix is singular\");for(var w=r(y,v),N=0,M=b.length;N<M;N++){var O=b[N];n[O]=[a(n[O][0],i(w,g[N]))]}m[h]=[w]}}return new s({data:m,size:[u,1]})}(e,t)},\"DenseMatrix, Array | Matrix\":function(e,t){return u(e,t)},\"Array, Array | Matrix\":function(e,t){return u(n(e),t).valueOf()}});function u(e,t){for(var n=(t=c(e,t,!0))._data,u=e._size[0],l=e._size[1],d=[],f=e._data,p=l-1;p>=0;p--){var m=n[p][0]||0,h=void 0;if(o(m,0))h=0;else{var y=f[p][p];if(o(y,0))throw new Error(\"Linear system cannot be solved since matrix is singular\");h=r(m,y);for(var v=p-1;v>=0;v--)n[v]=[a(n[v][0]||0,i(h,f[v][p]))]}d[p]=[h]}return new s({data:d,size:[u,1]})}}));t.createUsolve=r})),nn=t((function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLsolveAll=void 0;var i=[\"typed\",\"matrix\",\"divideScalar\",\"multiplyScalar\",\"subtract\",\"equalScalar\",\"DenseMatrix\"],a=(0,h.factory)(\"lsolveAll\",i,(function(e){var t=e.typed,r=e.matrix,i=e.divideScalar,a=e.multiplyScalar,o=e.subtract,s=e.equalScalar,c=e.DenseMatrix,u=(0,Kt.createSolveValidation)({DenseMatrix:c});return t(\"lsolveAll\",{\"SparseMatrix, Array | Matrix\":function(e,t){return function(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._size[0],d=e._size[1],f=e._values,p=e._index,m=e._ptr,h=0;h<d;h++)for(var y=r.length,v=0;v<y;v++){for(var g=r[v],b=[],x=[],D=m[h],_=m[h+1],w=0,N=D;N<_;N++){var M=p[N];M===h?w=f[N]:M>h&&(b.push(f[N]),x.push(M))}if(s(w,0))if(s(g[h],0)){if(0===v){var O=n(g);O[h]=1;for(var S=0,P=x.length;S<P;S++){var j=x[S];O[j]=o(O[j],b[S])}r.push(O)}}else{if(0===v)return[];r.splice(v,1),v-=1,y-=1}else{g[h]=i(g[h],w);for(var A=0,E=x.length;A<E;A++){var C=x[A];g[C]=o(g[C],a(g[h],b[A]))}}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[l,1]})}))}(e,t)},\"DenseMatrix, Array | Matrix\":function(e,t){return l(e,t)},\"Array, Array | Matrix\":function(e,t){return l(r(e),t).map((function(e){return e.valueOf()}))}});function l(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._data,d=e._size[0],f=e._size[1],p=0;p<f;p++)for(var m=r.length,h=0;h<m;h++){var y=r[h];if(s(l[p][p],0))if(s(y[p],0)){if(0===h){var v=n(y);v[p]=1;for(var g=p+1;g<f;g++)v[g]=o(v[g],l[g][p]);r.push(v)}}else{if(0===h)return[];r.splice(h,1),h-=1,m-=1}else{y[p]=i(y[p],l[p][p]);for(var b=p+1;b<f;b++)y[b]=o(y[b],a(y[p],l[b][p]))}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[d,1]})}))}}));t.createLsolveAll=a})),rn=t((function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUsolveAll=void 0;var i=[\"typed\",\"matrix\",\"divideScalar\",\"multiplyScalar\",\"subtract\",\"equalScalar\",\"DenseMatrix\"],a=(0,h.factory)(\"usolveAll\",i,(function(e){var t=e.typed,r=e.matrix,i=e.divideScalar,a=e.multiplyScalar,o=e.subtract,s=e.equalScalar,c=e.DenseMatrix,u=(0,Kt.createSolveValidation)({DenseMatrix:c});return t(\"usolveAll\",{\"SparseMatrix, Array | Matrix\":function(e,t){return function(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._size[0],d=e._size[1],f=e._values,p=e._index,m=e._ptr,h=d-1;h>=0;h--)for(var y=r.length,v=0;v<y;v++){for(var g=r[v],b=[],x=[],D=m[h],_=m[h+1],w=0,N=_-1;N>=D;N--){var M=p[N];M===h?w=f[N]:M<h&&(b.push(f[N]),x.push(M))}if(s(w,0))if(s(g[h],0)){if(0===v){var O=n(g);O[h]=1;for(var S=0,P=x.length;S<P;S++){var j=x[S];O[j]=o(O[j],b[S])}r.push(O)}}else{if(0===v)return[];r.splice(v,1),v-=1,y-=1}else{g[h]=i(g[h],w);for(var A=0,E=x.length;A<E;A++){var C=x[A];g[C]=o(g[C],a(g[h],b[A]))}}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[l,1]})}))}(e,t)},\"DenseMatrix, Array | Matrix\":function(e,t){return l(e,t)},\"Array, Array | Matrix\":function(e,t){return l(r(e),t).map((function(e){return e.valueOf()}))}});function l(e,t){for(var r=[u(e,t,!0)._data.map((function(e){return e[0]}))],l=e._data,d=e._size[0],f=e._size[1]-1;f>=0;f--)for(var p=r.length,m=0;m<p;m++){var h=r[m];if(s(l[f][f],0))if(s(h[f],0)){if(0===m){var y=n(h);y[f]=1;for(var v=f-1;v>=0;v--)y[v]=o(y[v],l[v][f]);r.push(y)}}else{if(0===m)return[];r.splice(m,1),m-=1,p-=1}else{h[f]=i(h[f],l[f][f]);for(var g=f-1;g>=0;g--)h[g]=o(h[g],a(h[f],l[g][f]))}}return r.map((function(e){return new c({data:e.map((function(e){return[e]})),size:[d,1]})}))}}));t.createUsolveAll=a})),an=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAlgorithm08=void 0;var n=[\"typed\",\"equalScalar\"],r=(0,h.factory)(\"algorithm08\",n,(function(e){var t=e.typed,n=e.equalScalar;return function(e,r,i){var a=e._values,o=e._index,s=e._ptr,c=e._size,u=e._datatype,l=r._values,d=r._index,p=r._ptr,m=r._size,h=r._datatype;if(c.length!==m.length)throw new f.DimensionError(c.length,m.length);if(c[0]!==m[0]||c[1]!==m[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+c+\") must match Matrix B (\"+m+\")\");if(!a||!l)throw new Error(\"Cannot perform operation on Pattern Sparse Matrices\");var y,v=c[0],g=c[1],b=n,x=0,D=i;\"string\"==typeof u&&u===h&&(y=u,b=t.find(n,[y,y]),x=t.convert(0,y),D=t.find(i,[y,y]));for(var _,w,N,M,O=[],S=[],P=[],j=[],A=[],E=0;E<g;E++){P[E]=S.length;var C=E+1;for(w=s[E],N=s[E+1],_=w;_<N;_++)A[M=o[_]]=C,j[M]=a[_],S.push(M);for(w=p[E],N=p[E+1],_=w;_<N;_++)A[M=d[_]]===C&&(j[M]=D(j[M],l[_]));for(_=P[E];_<S.length;){var T=j[M=S[_]];b(T,x)?S.splice(_,1):(O.push(T),_++)}}return P[g]=S.length,e.createSparseMatrix({values:O,index:S,ptr:P,size:[v,g],datatype:y})}}));t.createAlgorithm08=r})),on=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLeftShift=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"zeros\",\"DenseMatrix\"],r=(0,h.factory)(\"leftShift\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.zeros,a=e.DenseMatrix,o=(0,xe.createAlgorithm01)({typed:t}),s=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),c=(0,an.createAlgorithm08)({typed:t,equalScalar:r}),u=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:a}),l=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),d=(0,we.createAlgorithm13)({typed:t}),f=(0,pe.createAlgorithm14)({typed:t});return t(\"leftShift\",{\"number, number\":F.leftShiftNumber,\"BigNumber, BigNumber\":Ze.leftShiftBigNumber,\"SparseMatrix, SparseMatrix\":function(e,t){return c(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return s(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return d(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return r(t,0)?e.clone():l(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return r(t,0)?e.clone():f(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){return r(e,0)?i(t.size(),t.storage()):u(t,e,this,!0)},\"number | BigNumber, DenseMatrix\":function(e,t){return r(e,0)?i(t.size(),t.storage()):f(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return this(n(e),t).valueOf()},\"number | BigNumber, Array\":function(e,t){return this(e,n(t)).valueOf()}})}));t.createLeftShift=r})),sn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRightArithShift=void 0;var n=\"rightArithShift\",r=[\"typed\",\"matrix\",\"equalScalar\",\"zeros\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=e.equalScalar,a=e.zeros,o=e.DenseMatrix,s=(0,xe.createAlgorithm01)({typed:t}),c=(0,Me.createAlgorithm02)({typed:t,equalScalar:i}),u=(0,an.createAlgorithm08)({typed:t,equalScalar:i}),l=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:o}),d=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),f=(0,we.createAlgorithm13)({typed:t}),p=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"number, number\":F.rightArithShiftNumber,\"BigNumber, BigNumber\":Ze.rightArithShiftBigNumber,\"SparseMatrix, SparseMatrix\":function(e,t){return u(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return c(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return f(e,t,this)},\"Array, Array\":function(e,t){return this(r(e),r(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(r(e),t)},\"Matrix, Array\":function(e,t){return this(e,r(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return i(t,0)?e.clone():d(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return i(t,0)?e.clone():p(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){return i(e,0)?a(t.size(),t.storage()):l(t,e,this,!0)},\"number | BigNumber, DenseMatrix\":function(e,t){return i(e,0)?a(t.size(),t.storage()):p(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return this(r(e),t).valueOf()},\"number | BigNumber, Array\":function(e,t){return this(e,r(t)).valueOf()}})}));t.createRightArithShift=i})),cn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRightLogShift=void 0;var n=\"rightLogShift\",r=[\"typed\",\"matrix\",\"equalScalar\",\"zeros\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=e.equalScalar,a=e.zeros,o=e.DenseMatrix,s=(0,xe.createAlgorithm01)({typed:t}),c=(0,Me.createAlgorithm02)({typed:t,equalScalar:i}),u=(0,an.createAlgorithm08)({typed:t,equalScalar:i}),l=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:o}),d=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),f=(0,we.createAlgorithm13)({typed:t}),p=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"number, number\":F.rightLogShiftNumber,\"SparseMatrix, SparseMatrix\":function(e,t){return u(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return c(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return f(e,t,this)},\"Array, Array\":function(e,t){return this(r(e),r(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(r(e),t)},\"Matrix, Array\":function(e,t){return this(e,r(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return i(t,0)?e.clone():d(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return i(t,0)?e.clone():p(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){return i(e,0)?a(t.size(),t.storage()):l(t,e,this,!0)},\"number | BigNumber, DenseMatrix\":function(e,t){return i(e,0)?a(t.size(),t.storage()):p(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return this(r(e),t).valueOf()},\"number | BigNumber, Array\":function(e,t){return this(e,r(t)).valueOf()}})}));t.createRightLogShift=i})),un=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAnd=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"zeros\",\"not\"],r=(0,h.factory)(\"and\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.zeros,a=e.not,o=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),s=(0,Oe.createAlgorithm06)({typed:t,equalScalar:r}),c=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),u=(0,we.createAlgorithm13)({typed:t}),l=(0,pe.createAlgorithm14)({typed:t});return t(\"and\",{\"number, number\":F.andNumber,\"Complex, Complex\":function(e,t){return!(0===e.re&&0===e.im||0===t.re&&0===t.im)},\"BigNumber, BigNumber\":function(e,t){return!(e.isZero()||t.isZero()||e.isNaN()||t.isNaN())},\"Unit, Unit\":function(e,t){return this(e.value||0,t.value||0)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return u(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return a(t)?i(e.size(),e.storage()):c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return a(t)?i(e.size(),e.storage()):l(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return a(e)?i(e.size(),e.storage()):c(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return a(e)?i(e.size(),e.storage()):l(t,e,this,!0)},\"Array, any\":function(e,t){return this(n(e),t).valueOf()},\"any, Array\":function(e,t){return this(e,n(t)).valueOf()}})}));t.createAnd=r})),ln=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCompareNumber=t.createCompare=void 0;var n=\"compare\",r=[\"typed\",\"config\",\"matrix\",\"equalScalar\",\"BigNumber\",\"Fraction\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.equalScalar,a=e.matrix,o=e.BigNumber,s=e.Fraction,c=e.DenseMatrix,l=(0,Ae.createAlgorithm03)({typed:t}),d=(0,Ee.createAlgorithm05)({typed:t,equalScalar:i}),f=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:c}),p=(0,we.createAlgorithm13)({typed:t}),m=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"boolean, boolean\":function(e,t){return e===t?0:e>t?1:-1},\"number, number\":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)?0:e>t?1:-1},\"BigNumber, BigNumber\":function(e,t){return(0,$.nearlyEqual)(e,t,r.epsilon)?new o(0):new o(e.cmp(t))},\"Fraction, Fraction\":function(e,t){return new s(e.compare(t))},\"Complex, Complex\":function(){throw new TypeError(\"No ordering relation is defined for complex numbers\")},\"Unit, Unit\":function(e,t){if(!e.equalBase(t))throw new Error(\"Cannot compare units with different base\");return this(e.value,t.value)},\"SparseMatrix, SparseMatrix\":function(e,t){return d(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return l(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return l(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return p(e,t,this)},\"Array, Array\":function(e,t){return this(a(e),a(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(a(e),t)},\"Matrix, Array\":function(e,t){return this(e,a(t))},\"SparseMatrix, any\":function(e,t){return f(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return m(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return f(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return m(t,e,this,!0)},\"Array, any\":function(e,t){return m(a(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return m(a(t),e,this,!0).valueOf()}})}));t.createCompare=i;var a=(0,h.factory)(n,[\"typed\",\"config\"],(function(e){var t=e.typed,r=e.config;return t(n,{\"number, number\":function(e,t){return(0,u.nearlyEqual)(e,t,r.epsilon)?0:e>t?1:-1}})}));t.createCompareNumber=a})),dn=function e(t,n){var r,i,a=/(^([+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,o=/(^[ ]*|[ ]*$)/g,s=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,c=/^0x[0-9a-f]+$/i,u=/^0/,l=function(t){return e.insensitive&&(\"\"+t).toLowerCase()||\"\"+t},d=l(t).replace(o,\"\")||\"\",f=l(n).replace(o,\"\")||\"\",p=d.replace(a,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=f.replace(a,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),h=parseInt(d.match(c),16)||1!==p.length&&d.match(s)&&Date.parse(d),y=parseInt(f.match(c),16)||h&&f.match(s)&&Date.parse(f)||null;if(y){if(h<y)return-1;if(h>y)return 1}for(var v=0,g=Math.max(p.length,m.length);v<g;v++){if(r=!(p[v]||\"\").match(u)&&parseFloat(p[v])||p[v]||0,i=!(m[v]||\"\").match(u)&&parseFloat(m[v])||m[v]||0,isNaN(r)!==isNaN(i))return isNaN(r)?1:-1;if(typeof r!=typeof i&&(r+=\"\",i+=\"\"),r<i)return-1;if(r>i)return 1}return 0},fn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCompareNatural=void 0;var n,r=(n=dn)&&n.__esModule?n:{default:n};var a=\"compareNatural\",o=[\"typed\",\"compare\"],s=(0,h.factory)(a,o,(function(e){var t=e.typed,n=e.compare,o=n.signatures[\"boolean,boolean\"];return t(a,{\"any, any\":function(e,t){var a,c=(0,i.typeOf)(e),u=(0,i.typeOf)(t);if(!(\"number\"!==c&&\"BigNumber\"!==c&&\"Fraction\"!==c||\"number\"!==u&&\"BigNumber\"!==u&&\"Fraction\"!==u))return\"0\"!==(a=n(e,t)).toString()?a>0?1:-1:(0,r.default)(c,u);if(\"Array\"===c||\"Matrix\"===c||\"Array\"===u||\"Matrix\"===u)return 0!==(a=function e(t,n,r){if((0,i.isSparseMatrix)(n)&&(0,i.isSparseMatrix)(r))return s(t,n.toJSON().values,r.toJSON().values);if((0,i.isSparseMatrix)(n))return e(t,n.toArray(),r);if((0,i.isSparseMatrix)(r))return e(t,n,r.toArray());if((0,i.isDenseMatrix)(n))return e(t,n.toJSON().data,r);if((0,i.isDenseMatrix)(r))return e(t,n,r.toJSON().data);if(!Array.isArray(n))return e(t,[n],r);if(!Array.isArray(r))return e(t,n,[r]);return s(t,n,r)}(this,e,t))?a:(0,r.default)(c,u);if(c!==u)return(0,r.default)(c,u);if(\"Complex\"===c)return function(e,t){if(e.re>t.re)return 1;if(e.re<t.re)return-1;if(e.im>t.im)return 1;if(e.im<t.im)return-1;return 0}(e,t);if(\"Unit\"===c)return e.equalBase(t)?this(e.value,t.value):s(this,e.formatUnits(),t.formatUnits());if(\"boolean\"===c)return o(e,t);if(\"string\"===c)return(0,r.default)(e,t);if(\"Object\"===c)return function(e,t,n){var i=Object.keys(t),a=Object.keys(n);i.sort(r.default),a.sort(r.default);var o=s(e,i,a);if(0!==o)return o;for(var c=0;c<i.length;c++){var u=e(t[i[c]],n[a[c]]);if(0!==u)return u}return 0}(this,e,t);if(\"null\"===c)return 0;if(\"undefined\"===c)return 0;throw new TypeError('Unsupported type of value \"'+c+'\"')}});function s(e,t,n){for(var r=0,i=Math.min(t.length,n.length);r<i;r++){var a=e(t[r],n[r]);if(0!==a)return a}return t.length>n.length?1:t.length<n.length?-1:0}}));t.createCompareNatural=s})),pn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCompareTextNumber=t.createCompareText=void 0;var n=\"compareText\",r=[\"typed\",\"matrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.matrix,i=(0,we.createAlgorithm13)({typed:t}),a=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"any, any\":d.compareText,\"DenseMatrix, DenseMatrix\":function(e,t){return i(e,t,d.compareText)},\"Array, Array\":function(e,t){return this(r(e),r(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(r(e),t)},\"Matrix, Array\":function(e,t){return this(e,r(t))},\"DenseMatrix, any\":function(e,t){return a(e,t,d.compareText,!1)},\"any, DenseMatrix\":function(e,t){return a(t,e,d.compareText,!0)},\"Array, any\":function(e,t){return a(r(e),t,d.compareText,!1).valueOf()},\"any, Array\":function(e,t){return a(r(t),e,d.compareText,!0).valueOf()}})}));t.createCompareText=i;var a=(0,h.factory)(n,[\"typed\"],(function(e){return(0,e.typed)(n,{\"any, any\":d.compareText})}));t.createCompareTextNumber=a})),mn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createEqualNumber=t.createEqual=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\"],r=(0,h.factory)(\"equal\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.DenseMatrix,a=(0,Ae.createAlgorithm03)({typed:t}),o=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:i}),s=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t(\"equal\",{\"any, any\":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:r(e,t)},\"SparseMatrix, SparseMatrix\":function(e,t){return o(e,t,r)},\"SparseMatrix, DenseMatrix\":function(e,t){return a(t,e,r,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return a(e,t,r,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return c(e,t,r)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, any\":function(e,t){return s(e,t,r,!1)},\"DenseMatrix, any\":function(e,t){return u(e,t,r,!1)},\"any, SparseMatrix\":function(e,t){return s(t,e,r,!0)},\"any, DenseMatrix\":function(e,t){return u(t,e,r,!0)},\"Array, any\":function(e,t){return u(n(e),t,r,!1).valueOf()},\"any, Array\":function(e,t){return u(n(t),e,r,!0).valueOf()}})}));t.createEqual=r;var i=(0,h.factory)(\"equal\",[\"typed\",\"equalScalar\"],(function(e){var t=e.typed,n=e.equalScalar;return t(\"equal\",{\"any, any\":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:n(e,t)}})}));t.createEqualNumber=i})),hn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createEqualText=void 0;var n=[\"typed\",\"compareText\",\"isZero\"],r=(0,h.factory)(\"equalText\",n,(function(e){var t=e.typed,n=e.compareText,r=e.isZero;return t(\"equalText\",{\"any, any\":function(e,t){return r(n(e,t))}})}));t.createEqualText=r})),yn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSmallerNumber=t.createSmaller=void 0;var n=\"smaller\",r=[\"typed\",\"config\",\"matrix\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"boolean, boolean\":function(e,t){return e<t},\"number, number\":function(e,t){return e<t&&!(0,u.nearlyEqual)(e,t,r.epsilon)},\"BigNumber, BigNumber\":function(e,t){return e.lt(t)&&!(0,$.nearlyEqual)(e,t,r.epsilon)},\"Fraction, Fraction\":function(e,t){return-1===e.compare(t)},\"Complex, Complex\":function(e,t){throw new TypeError(\"No ordering relation is defined for complex numbers\")},\"Unit, Unit\":function(e,t){if(!e.equalBase(t))throw new Error(\"Cannot compare units with different base\");return this(e.value,t.value)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,this)},\"Array, Array\":function(e,t){return this(i(e),i(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(i(e),t)},\"Matrix, Array\":function(e,t){return this(e,i(t))},\"SparseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return d(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return c(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, any\":function(e,t){return d(i(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createSmaller=i;var a=(0,h.factory)(n,[\"typed\",\"config\"],(function(e){var t=e.typed,r=e.config;return t(n,{\"number, number\":function(e,t){return e<t&&!(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createSmallerNumber=a})),vn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSmallerEqNumber=t.createSmallerEq=void 0;var n=\"smallerEq\",r=[\"typed\",\"config\",\"matrix\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"boolean, boolean\":function(e,t){return e<=t},\"number, number\":function(e,t){return e<=t||(0,u.nearlyEqual)(e,t,r.epsilon)},\"BigNumber, BigNumber\":function(e,t){return e.lte(t)||(0,$.nearlyEqual)(e,t,r.epsilon)},\"Fraction, Fraction\":function(e,t){return 1!==e.compare(t)},\"Complex, Complex\":function(){throw new TypeError(\"No ordering relation is defined for complex numbers\")},\"Unit, Unit\":function(e,t){if(!e.equalBase(t))throw new Error(\"Cannot compare units with different base\");return this(e.value,t.value)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,this)},\"Array, Array\":function(e,t){return this(i(e),i(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(i(e),t)},\"Matrix, Array\":function(e,t){return this(e,i(t))},\"SparseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return d(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return c(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, any\":function(e,t){return d(i(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createSmallerEq=i;var a=(0,h.factory)(n,[\"typed\",\"config\"],(function(e){var t=e.typed,r=e.config;return t(n,{\"number, number\":function(e,t){return e<=t||(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createSmallerEqNumber=a})),gn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLargerNumber=t.createLarger=void 0;var n=\"larger\",r=[\"typed\",\"config\",\"matrix\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"boolean, boolean\":function(e,t){return e>t},\"number, number\":function(e,t){return e>t&&!(0,u.nearlyEqual)(e,t,r.epsilon)},\"BigNumber, BigNumber\":function(e,t){return e.gt(t)&&!(0,$.nearlyEqual)(e,t,r.epsilon)},\"Fraction, Fraction\":function(e,t){return 1===e.compare(t)},\"Complex, Complex\":function(){throw new TypeError(\"No ordering relation is defined for complex numbers\")},\"Unit, Unit\":function(e,t){if(!e.equalBase(t))throw new Error(\"Cannot compare units with different base\");return this(e.value,t.value)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,this)},\"Array, Array\":function(e,t){return this(i(e),i(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(i(e),t)},\"Matrix, Array\":function(e,t){return this(e,i(t))},\"SparseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return d(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return c(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, any\":function(e,t){return d(i(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createLarger=i;var a=(0,h.factory)(n,[\"typed\",\"config\"],(function(e){var t=e.typed,r=e.config;return t(n,{\"number, number\":function(e,t){return e>t&&!(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createLargerNumber=a})),bn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLargerEqNumber=t.createLargerEq=void 0;var n=\"largerEq\",r=[\"typed\",\"config\",\"matrix\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,i=e.matrix,a=e.DenseMatrix,o=(0,Ae.createAlgorithm03)({typed:t}),s=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:a}),c=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(n,{\"boolean, boolean\":function(e,t){return e>=t},\"number, number\":function(e,t){return e>=t||(0,u.nearlyEqual)(e,t,r.epsilon)},\"BigNumber, BigNumber\":function(e,t){return e.gte(t)||(0,$.nearlyEqual)(e,t,r.epsilon)},\"Fraction, Fraction\":function(e,t){return-1!==e.compare(t)},\"Complex, Complex\":function(){throw new TypeError(\"No ordering relation is defined for complex numbers\")},\"Unit, Unit\":function(e,t){if(!e.equalBase(t))throw new Error(\"Cannot compare units with different base\");return this(e.value,t.value)},\"SparseMatrix, SparseMatrix\":function(e,t){return s(e,t,this)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return o(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,this)},\"Array, Array\":function(e,t){return this(i(e),i(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(i(e),t)},\"Matrix, Array\":function(e,t){return this(e,i(t))},\"SparseMatrix, any\":function(e,t){return c(e,t,this,!1)},\"DenseMatrix, any\":function(e,t){return d(e,t,this,!1)},\"any, SparseMatrix\":function(e,t){return c(t,e,this,!0)},\"any, DenseMatrix\":function(e,t){return d(t,e,this,!0)},\"Array, any\":function(e,t){return d(i(e),t,this,!1).valueOf()},\"any, Array\":function(e,t){return d(i(t),e,this,!0).valueOf()}})}));t.createLargerEq=i;var a=(0,h.factory)(n,[\"typed\",\"config\"],(function(e){var t=e.typed,r=e.config;return t(n,{\"number, number\":function(e,t){return e>=t||(0,u.nearlyEqual)(e,t,r.epsilon)}})}));t.createLargerEqNumber=a})),xn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDeepEqual=void 0;var n=[\"typed\",\"equal\"],r=(0,h.factory)(\"deepEqual\",n,(function(e){var t=e.typed,n=e.equal;return t(\"deepEqual\",{\"any, any\":function(e,t){return function e(t,r){if(Array.isArray(t)){if(Array.isArray(r)){var i=t.length;if(i!==r.length)return!1;for(var a=0;a<i;a++)if(!e(t[a],r[a]))return!1;return!0}return!1}return!Array.isArray(r)&&n(t,r)}(e.valueOf(),t.valueOf())}})}));t.createDeepEqual=r})),Dn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnequalNumber=t.createUnequal=void 0;var n=[\"typed\",\"config\",\"equalScalar\",\"matrix\",\"DenseMatrix\"],r=(0,h.factory)(\"unequal\",n,(function(e){var t=e.typed,n=(e.config,e.equalScalar),r=e.matrix,i=e.DenseMatrix,a=(0,Ae.createAlgorithm03)({typed:t}),o=(0,$e.createAlgorithm07)({typed:t,DenseMatrix:i}),s=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:i}),c=(0,we.createAlgorithm13)({typed:t}),u=(0,pe.createAlgorithm14)({typed:t});return t(\"unequal\",{\"any, any\":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:l(e,t)},\"SparseMatrix, SparseMatrix\":function(e,t){return o(e,t,l)},\"SparseMatrix, DenseMatrix\":function(e,t){return a(t,e,l,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return a(e,t,l,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return c(e,t,l)},\"Array, Array\":function(e,t){return this(r(e),r(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(r(e),t)},\"Matrix, Array\":function(e,t){return this(e,r(t))},\"SparseMatrix, any\":function(e,t){return s(e,t,l,!1)},\"DenseMatrix, any\":function(e,t){return u(e,t,l,!1)},\"any, SparseMatrix\":function(e,t){return s(t,e,l,!0)},\"any, DenseMatrix\":function(e,t){return u(t,e,l,!0)},\"Array, any\":function(e,t){return u(r(e),t,l,!1).valueOf()},\"any, Array\":function(e,t){return u(r(t),e,l,!0).valueOf()}});function l(e,t){return!n(e,t)}}));t.createUnequal=r;var i=(0,h.factory)(\"unequal\",[\"typed\",\"equalScalar\"],(function(e){var t=e.typed,n=e.equalScalar;return t(\"unequal\",{\"any, any\":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:!n(e,t)}})}));t.createUnequalNumber=i})),_n=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPartitionSelect=void 0;var n=\"partitionSelect\",r=[\"typed\",\"isNumeric\",\"isNaN\",\"compare\"],a=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.isNumeric,a=e.isNaN,o=e.compare,s=o,c=function(e,t){return-o(e,t)};return t(n,{\"Array | Matrix, number\":function(e,t){return l(e,t,s)},\"Array | Matrix, number, string\":function(e,t,n){if(\"asc\"===n)return l(e,t,s);if(\"desc\"===n)return l(e,t,c);throw new Error('Compare string must be \"asc\" or \"desc\"')},\"Array | Matrix, number, function\":l});function l(e,t,n){if(!(0,u.isInteger)(t)||t<0)throw new Error(\"k must be a non-negative integer\");if((0,i.isMatrix)(e)){if(e.size().length>1)throw new Error(\"Only one dimensional matrices supported\");return d(e.valueOf(),t,n)}if(Array.isArray(e))return d(e,t,n)}function d(e,t,n){if(t>=e.length)throw new Error(\"k out of bounds\");for(var i=0;i<e.length;i++)if(r(e[i])&&a(e[i]))return e[i];for(var o=0,s=e.length-1;o<s;){for(var c=o,u=s,l=e[Math.floor(Math.random()*(s-o+1))+o];c<u;)if(n(e[c],l)>=0){var d=e[u];e[u]=e[c],e[c]=d,--u}else++c;n(e[c],l)>0&&--c,t<=c?s=c:o=c+1}return e[t]}}));t.createPartitionSelect=a})),wn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSort=void 0;var n=[\"typed\",\"matrix\",\"compare\",\"compareNatural\"],r=(0,h.factory)(\"sort\",n,(function(e){var t=e.typed,n=e.matrix,r=e.compare,i=e.compareNatural,a=r,o=function(e,t){return-r(e,t)};return t(\"sort\",{Array:function(e){return c(e),e.sort(a)},Matrix:function(e){return u(e),n(e.toArray().sort(a),e.storage())},\"Array, function\":function(e,t){return c(e),e.sort(t)},\"Matrix, function\":function(e,t){return u(e),n(e.toArray().sort(t),e.storage())},\"Array, string\":function(e,t){return c(e),e.sort(s(t))},\"Matrix, string\":function(e,t){return u(e),n(e.toArray().sort(s(t)),e.storage())}});function s(e){if(\"asc\"===e)return a;if(\"desc\"===e)return o;if(\"natural\"===e)return i;throw new Error('String \"asc\", \"desc\", or \"natural\" expected')}function c(e){if(1!==(0,m.arraySize)(e).length)throw new Error(\"One dimensional array expected\")}function u(e){if(1!==e.size().length)throw new Error(\"One dimensional matrix expected\")}}));t.createSort=r})),Nn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMax=void 0;var n=[\"typed\",\"config\",\"numeric\",\"larger\"],r=(0,h.factory)(\"max\",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,i=e.larger;return t(\"max\",{\"Array | Matrix\":o,\"Array | Matrix, number | BigNumber\":function(e,t){return(0,P.reduce)(e,t.valueOf(),a)},\"...\":function(e){if((0,P.containsCollections)(e))throw new TypeError(\"Scalar values expected in function max\");return o(e)}});function a(e,t){try{return i(e,t)?e:t}catch(e){throw(0,kt.improveErrorMessage)(e,\"max\",t)}}function o(e){var t;if((0,P.deepForEach)(e,(function(e){try{isNaN(e)&&\"number\"==typeof e?t=NaN:(void 0===t||i(e,t))&&(t=e)}catch(t){throw(0,kt.improveErrorMessage)(t,\"max\",e)}})),void 0===t)throw new Error(\"Cannot calculate max of an empty array\");return\"string\"==typeof t&&(t=r(t,n.number)),t}}));t.createMax=r})),Mn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMin=void 0;var n=[\"typed\",\"config\",\"numeric\",\"smaller\"],r=(0,h.factory)(\"min\",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,i=e.smaller;return t(\"min\",{\"Array | Matrix\":o,\"Array | Matrix, number | BigNumber\":function(e,t){return(0,P.reduce)(e,t.valueOf(),a)},\"...\":function(e){if((0,P.containsCollections)(e))throw new TypeError(\"Scalar values expected in function min\");return o(e)}});function a(e,t){try{return i(e,t)?e:t}catch(e){throw(0,kt.improveErrorMessage)(e,\"min\",t)}}function o(e){var t;if((0,P.deepForEach)(e,(function(e){try{isNaN(e)&&\"number\"==typeof e?t=NaN:(void 0===t||i(e,t))&&(t=e)}catch(t){throw(0,kt.improveErrorMessage)(t,\"min\",e)}})),void 0===t)throw new Error(\"Cannot calculate min of an empty array\");return\"string\"==typeof t&&(t=r(t,n.number)),t}}));t.createMin=r})),On=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createImmutableDenseMatrixClass=void 0;var n=[\"smaller\",\"DenseMatrix\"],r=(0,h.factory)(\"ImmutableDenseMatrix\",n,(function(e){var t=e.smaller,n=e.DenseMatrix;function r(e,t){if(!(this instanceof r))throw new SyntaxError(\"Constructor must be called with the new operator\");if(t&&!(0,i.isString)(t))throw new Error(\"Invalid datatype: \"+t);if((0,i.isMatrix)(e)||(0,i.isArray)(e)){var a=new n(e,t);this._data=a._data,this._size=a._size,this._datatype=a._datatype,this._min=null,this._max=null}else if(e&&(0,i.isArray)(e.data)&&(0,i.isArray)(e.size))this._data=e.data,this._size=e.size,this._datatype=e.datatype,this._min=void 0!==e.min?e.min:null,this._max=void 0!==e.max?e.max:null;else{if(e)throw new TypeError(\"Unsupported type of data (\"+(0,i.typeOf)(e)+\")\");this._data=[],this._size=[0],this._datatype=t,this._min=null,this._max=null}}return r.prototype=new n,r.prototype.type=\"ImmutableDenseMatrix\",r.prototype.isImmutableDenseMatrix=!0,r.prototype.subset=function(e){switch(arguments.length){case 1:var t=n.prototype.subset.call(this,e);return(0,i.isMatrix)(t)?new r({data:t._data,size:t._size,datatype:t._datatype}):t;case 2:case 3:throw new Error(\"Cannot invoke set subset on an Immutable Matrix instance\");default:throw new SyntaxError(\"Wrong number of arguments\")}},r.prototype.set=function(){throw new Error(\"Cannot invoke set on an Immutable Matrix instance\")},r.prototype.resize=function(){throw new Error(\"Cannot invoke resize on an Immutable Matrix instance\")},r.prototype.reshape=function(){throw new Error(\"Cannot invoke reshape on an Immutable Matrix instance\")},r.prototype.clone=function(){return new r({data:(0,a.clone)(this._data),size:(0,a.clone)(this._size),datatype:this._datatype})},r.prototype.toJSON=function(){return{mathjs:\"ImmutableDenseMatrix\",data:this._data,size:this._size,datatype:this._datatype}},r.fromJSON=function(e){return new r(e)},r.prototype.swapRows=function(){throw new Error(\"Cannot invoke swapRows on an Immutable Matrix instance\")},r.prototype.min=function(){if(null===this._min){var e=null;this.forEach((function(n){(null===e||t(n,e))&&(e=n)})),this._min=null!==e?e:void 0}return this._min},r.prototype.max=function(){if(null===this._max){var e=null;this.forEach((function(n){(null===e||t(e,n))&&(e=n)})),this._max=null!==e?e:void 0}return this._max},r}),{isClass:!0});t.createImmutableDenseMatrixClass=r})),Sn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIndexClass=void 0;var n=[\"ImmutableDenseMatrix\"],r=(0,h.factory)(\"Index\",n,(function(e){var t=e.ImmutableDenseMatrix;function n(e){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");this._dimensions=[],this._isScalar=!0;for(var t=0,a=arguments.length;t<a;t++){var o=arguments[t];if((0,i.isRange)(o))this._dimensions.push(o),this._isScalar=!1;else if(Array.isArray(o)||(0,i.isMatrix)(o)){var s=r(o.valueOf());this._dimensions.push(s);var c=s.size();1===c.length&&1===c[0]||(this._isScalar=!1)}else if(\"number\"==typeof o)this._dimensions.push(r([o]));else{if(\"string\"!=typeof o)throw new TypeError(\"Dimension must be an Array, Matrix, number, string, or Range\");this._dimensions.push(o)}}}function r(e){for(var n=0,r=e.length;n<r;n++)if(\"number\"!=typeof e[n]||!(0,u.isInteger)(e[n]))throw new TypeError(\"Index parameters must be positive integer numbers\");return new t(e)}return n.prototype.type=\"Index\",n.prototype.isIndex=!0,n.prototype.clone=function(){var e=new n;return e._dimensions=(0,a.clone)(this._dimensions),e._isScalar=this._isScalar,e},n.create=function(e){var t=new n;return n.apply(t,e),t},n.prototype.size=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]=\"string\"==typeof r?1:r.size()[0]}return e},n.prototype.max=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]=\"string\"==typeof r?r:r.max()}return e},n.prototype.min=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e[t]=\"string\"==typeof r?r:r.min()}return e},n.prototype.forEach=function(e){for(var t=0,n=this._dimensions.length;t<n;t++)e(this._dimensions[t],t,this)},n.prototype.dimension=function(e){return this._dimensions[e]||null},n.prototype.isObjectProperty=function(){return 1===this._dimensions.length&&\"string\"==typeof this._dimensions[0]},n.prototype.getObjectProperty=function(){return this.isObjectProperty()?this._dimensions[0]:null},n.prototype.isScalar=function(){return this._isScalar},n.prototype.toArray=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];e.push(\"string\"==typeof r?r:r.toArray())}return e},n.prototype.valueOf=n.prototype.toArray,n.prototype.toString=function(){for(var e=[],t=0,n=this._dimensions.length;t<n;t++){var r=this._dimensions[t];\"string\"==typeof r?e.push(JSON.stringify(r)):e.push(r.toString())}return\"[\"+e.join(\", \")+\"]\"},n.prototype.toJSON=function(){return{mathjs:\"Index\",dimensions:this._dimensions}},n.fromJSON=function(e){return n.create(e.dimensions)},n}),{isClass:!0});t.createIndexClass=r})),Pn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFibonacciHeapClass=void 0;var n=[\"smaller\",\"larger\"],r=(0,h.factory)(\"FibonacciHeap\",n,(function(e){var t=e.smaller,n=e.larger,r=1/Math.log((1+Math.sqrt(5))/2);function i(){if(!(this instanceof i))throw new SyntaxError(\"Constructor must be called with the new operator\");this._minimum=null,this._size=0}function a(e,t,n){t.left.right=t.right,t.right.left=t.left,n.degree--,n.child===t&&(n.child=t.right),0===n.degree&&(n.child=null),t.left=e,t.right=e.right,e.right=t,t.right.left=t,t.parent=null,t.mark=!1}i.prototype.type=\"FibonacciHeap\",i.prototype.isFibonacciHeap=!0,i.prototype.insert=function(e,n){var r={key:e,value:n,degree:0};if(this._minimum){var i=this._minimum;r.left=i,r.right=i.right,i.right=r,r.right.left=r,t(e,i.key)&&(this._minimum=r)}else r.left=r,r.right=r,this._minimum=r;return this._size++,r},i.prototype.size=function(){return this._size},i.prototype.clear=function(){this._minimum=null,this._size=0},i.prototype.isEmpty=function(){return 0===this._size},i.prototype.extractMinimum=function(){var e=this._minimum;if(null===e)return e;for(var i=this._minimum,a=e.degree,s=e.child;a>0;){var c=s.right;s.left.right=s.right,s.right.left=s.left,s.left=i,s.right=i.right,i.right=s,s.right.left=s,s.parent=null,s=c,a--}return e.left.right=e.right,e.right.left=e.left,i=e===e.right?null:function(e,i){var a,s=Math.floor(Math.log(i)*r)+1,c=new Array(s),u=0,l=e;if(l)for(u++,l=l.right;l!==e;)u++,l=l.right;for(;u>0;){for(var d=l.degree,f=l.right;a=c[d];){if(n(l.key,a.key)){var p=a;a=l,l=p}o(a,l),c[d]=null,d++}c[d]=l,l=f,u--}e=null;for(var m=0;m<s;m++)(a=c[m])&&(e?(a.left.right=a.right,a.right.left=a.left,a.left=e,a.right=e.right,e.right=a,a.right.left=a,t(a.key,e.key)&&(e=a)):e=a);return e}(i=e.right,this._size),this._size--,this._minimum=i,e},i.prototype.remove=function(e){this._minimum=function(e,n,r){n.key=r;var i=n.parent;i&&t(n.key,i.key)&&(a(e,n,i),function e(t,n){var r=n.parent;if(!r)return;n.mark?(a(t,n,r),e(r)):n.mark=!0}(e,i));t(n.key,e.key)&&(e=n);return e}(this._minimum,e,-1),this.extractMinimum()};var o=function(e,t){e.left.right=e.right,e.right.left=e.left,e.parent=t,t.child?(e.left=t.child,e.right=t.child.right,t.child.right=e,e.right.left=e):(t.child=e,e.right=e,e.left=e),t.degree++,e.mark=!1};return i}),{isClass:!0});t.createFibonacciHeapClass=r})),jn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSpaClass=void 0;var n=[\"addScalar\",\"equalScalar\",\"FibonacciHeap\"],r=(0,h.factory)(\"Spa\",n,(function(e){var t=e.addScalar,n=e.equalScalar,r=e.FibonacciHeap;function i(){if(!(this instanceof i))throw new SyntaxError(\"Constructor must be called with the new operator\");this._values=[],this._heap=new r}return i.prototype.type=\"Spa\",i.prototype.isSpa=!0,i.prototype.set=function(e,t){if(this._values[e])this._values[e].value=t;else{var n=this._heap.insert(e,t);this._values[e]=n}},i.prototype.get=function(e){var t=this._values[e];return t?t.value:0},i.prototype.accumulate=function(e,n){var r=this._values[e];r?r.value=t(r.value,n):(r=this._heap.insert(e,n),this._values[e]=r)},i.prototype.forEach=function(e,t,r){var i=this._heap,a=this._values,o=[],s=i.extractMinimum();for(s&&o.push(s);s&&s.key<=t;)s.key>=e&&(n(s.value,0)||r(s.key,s.value,this)),(s=i.extractMinimum())&&o.push(s);for(var c=0;c<o.length;c++){var u=o[c];a[(s=i.insert(u.key,u.value)).key]=s}},i.prototype.swap=function(e,t){var n=this._values[e],r=this._values[t];if(!n&&r)n=this._heap.insert(e,r.value),this._heap.remove(r),this._values[e]=n,this._values[t]=void 0;else if(n&&!r)r=this._heap.insert(t,n.value),this._heap.remove(n),this._values[t]=r,this._values[e]=void 0;else if(n&&r){var i=n.value;n.value=r.value,r.value=i}},i}),{isClass:!0});t.createSpaClass=r})),An=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBigNumberTau=t.createBigNumberPi=t.createBigNumberPhi=t.createBigNumberE=void 0;var n=(0,st.memoize)((function(e){return new e(1).exp()}),o);t.createBigNumberE=n;var r=(0,st.memoize)((function(e){return new e(1).plus(new e(5).sqrt()).div(2)}),o);t.createBigNumberPhi=r;var i=(0,st.memoize)((function(e){return e.acos(-1)}),o);t.createBigNumberPi=i;var a=(0,st.memoize)((function(e){return i(e).times(2)}),o);function o(e){return e[0].precision}t.createBigNumberTau=a})),En=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnitClass=void 0;var u=[\"?on\",\"config\",\"addScalar\",\"subtract\",\"multiplyScalar\",\"divideScalar\",\"pow\",\"abs\",\"fix\",\"round\",\"equal\",\"isNumeric\",\"format\",\"number\",\"Complex\",\"BigNumber\",\"Fraction\"],l=(0,h.factory)(\"Unit\",u,(function(e){var t,o,c,u=e.on,l=e.config,f=e.addScalar,p=e.subtract,m=e.multiplyScalar,h=e.divideScalar,y=e.pow,v=e.abs,g=e.fix,b=e.round,x=e.equal,D=e.isNumeric,_=e.format,w=e.number,N=e.Complex,M=e.BigNumber,O=e.Fraction,S=w;function P(e,t){if(!(this instanceof P))throw new Error(\"Constructor must be called with the new operator\");if(null!=e&&!D(e)&&!(0,i.isComplex)(e))throw new TypeError(\"First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined\");if(void 0!==t&&(\"string\"!=typeof t||\"\"===t))throw new TypeError(\"Second parameter in Unit constructor must be a string\");if(void 0!==t){var n=P.parse(t);this.units=n.units,this.dimensions=n.dimensions}else{this.units=[{unit:L,prefix:R.NONE,power:0}],this.dimensions=[];for(var r=0;r<q.length;r++)this.dimensions[r]=0}this.value=null!=e?this._normalize(e):null,this.fixPrefix=!1,this.skipAutomaticSimplification=!0}function j(){for(;\" \"===c||\"\\t\"===c;)E()}function A(e){return e>=\"0\"&&e<=\"9\"}function E(){o++,c=t.charAt(o)}function C(e){o=e,c=t.charAt(o)}function T(){var e=\"\",t=o;if(\"+\"===c?E():\"-\"===c&&(e+=c,E()),!function(e){return e>=\"0\"&&e<=\"9\"||\".\"===e}(c))return C(t),null;if(\".\"===c){if(e+=c,E(),!A(c))return C(t),null}else{for(;A(c);)e+=c,E();\".\"===c&&(e+=c,E())}for(;A(c);)e+=c,E();if(\"E\"===c||\"e\"===c){var n=\"\",r=o;if(n+=c,E(),\"+\"!==c&&\"-\"!==c||(n+=c,E()),!A(c))return C(r),e;for(e+=n;A(c);)e+=c,E()}return e}function k(){for(var e=\"\";A(c)||P.isValidAlpha(c);)e+=c,E();var t=e.charAt(0);return P.isValidAlpha(t)?e:null}function I(e){return c===e?(E(),e):null}function B(e){if((0,a.hasOwnProperty)(H,e)){var t=H[e];return{unit:t,prefix:t.prefixes[\"\"]}}for(var n in H)if((0,a.hasOwnProperty)(H,n)&&(0,d.endsWith)(e,n)){var r=H[n],i=e.length-n.length,o=e.substring(0,i),s=(0,a.hasOwnProperty)(r.prefixes,o)?r.prefixes[o]:void 0;if(void 0!==s)return{unit:r,prefix:s}}return null}function z(e){return e.equalBase(F.NONE)&&null!==e.value&&!l.predictable?e.value:e}P.prototype.type=\"Unit\",P.prototype.isUnit=!0,P.parse=function(e,n){if(n=n||{},o=-1,c=\"\",\"string\"!=typeof(t=e))throw new TypeError(\"Invalid argument in Unit.parse, string expected\");var r=new P;r.units=[];var i=1,a=!1;E(),j();var s=T(),u=null;if(s){if(\"BigNumber\"===l.number)u=new M(s);else if(\"Fraction\"===l.number)try{u=new O(s)}catch(e){u=parseFloat(s)}else u=parseFloat(s);j(),I(\"*\")?(i=1,a=!0):I(\"/\")&&(i=-1,a=!0)}for(var d=[],f=1;;){for(j();\"(\"===c;)d.push(i),f*=i,i=1,E(),j();var p=void 0;if(!c)break;var m=c;if(null===(p=k()))throw new SyntaxError('Unexpected \"'+m+'\" in \"'+t+'\" at index '+o.toString());var h=B(p);if(null===h)throw new SyntaxError('Unit \"'+p+'\" not found.');var y=i*f;if(j(),I(\"^\")){j();var v=T();if(null===v)throw new SyntaxError('In \"'+e+'\", \"^\" must be followed by a floating-point number');y*=v}r.units.push({unit:h.unit,prefix:h.prefix,power:y});for(var g=0;g<q.length;g++)r.dimensions[g]+=(h.unit.dimensions[g]||0)*y;for(j();\")\"===c;){if(0===d.length)throw new SyntaxError('Unmatched \")\" in \"'+t+'\" at index '+o.toString());f/=d.pop(),E(),j()}if(a=!1,I(\"*\")?(i=1,a=!0):I(\"/\")?(i=-1,a=!0):i=1,h.unit.base){var b=h.unit.base.key;W.auto[b]={unit:h.unit,prefix:h.prefix}}}if(j(),c)throw new SyntaxError('Could not parse: \"'+e+'\"');if(a)throw new SyntaxError('Trailing characters: \"'+e+'\"');if(0!==d.length)throw new SyntaxError('Unmatched \"(\" in \"'+t+'\"');if(0===r.units.length&&!n.allowNoUnits)throw new SyntaxError('\"'+e+'\" contains no units');return r.value=void 0!==u?r._normalize(u):null,r},P.prototype.clone=function(){var e=new P;e.fixPrefix=this.fixPrefix,e.skipAutomaticSimplification=this.skipAutomaticSimplification,e.value=(0,a.clone)(this.value),e.dimensions=this.dimensions.slice(0),e.units=[];for(var t=0;t<this.units.length;t++)for(var n in e.units[t]={},this.units[t])(0,a.hasOwnProperty)(this.units[t],n)&&(e.units[t][n]=this.units[t][n]);return e},P.prototype._isDerived=function(){return 0!==this.units.length&&(this.units.length>1||Math.abs(this.units[0].power-1)>1e-15)},P.prototype._normalize=function(e){var t,n,r,a,o;if(null==e||0===this.units.length)return e;if(this._isDerived()){var s=e;o=P._getNumberConverter((0,i.typeOf)(e));for(var c=0;c<this.units.length;c++)t=o(this.units[c].unit.value),a=o(this.units[c].prefix.value),r=o(this.units[c].power),s=m(s,y(m(t,a),r));return s}return t=(o=P._getNumberConverter((0,i.typeOf)(e)))(this.units[0].unit.value),n=o(this.units[0].unit.offset),a=o(this.units[0].prefix.value),m(f(e,n),m(t,a))},P.prototype._denormalize=function(e,t){var n,r,a,o,s;if(null==e||0===this.units.length)return e;if(this._isDerived()){var c=e;s=P._getNumberConverter((0,i.typeOf)(e));for(var u=0;u<this.units.length;u++)n=s(this.units[u].unit.value),o=s(this.units[u].prefix.value),a=s(this.units[u].power),c=h(c,y(m(n,o),a));return c}return n=(s=P._getNumberConverter((0,i.typeOf)(e)))(this.units[0].unit.value),o=s(this.units[0].prefix.value),r=s(this.units[0].unit.offset),p(h(h(e,n),null==t?o:t),r)},P.isValuelessUnit=function(e){return null!==B(e)},P.prototype.hasBase=function(e){if(\"string\"==typeof e&&(e=F[e]),!e)return!1;for(var t=0;t<q.length;t++)if(Math.abs((this.dimensions[t]||0)-(e.dimensions[t]||0))>1e-12)return!1;return!0},P.prototype.equalBase=function(e){for(var t=0;t<q.length;t++)if(Math.abs((this.dimensions[t]||0)-(e.dimensions[t]||0))>1e-12)return!1;return!0},P.prototype.equals=function(e){return this.equalBase(e)&&x(this.value,e.value)},P.prototype.multiply=function(e){for(var t=this.clone(),n=0;n<q.length;n++)t.dimensions[n]=(this.dimensions[n]||0)+(e.dimensions[n]||0);for(var r=0;r<e.units.length;r++){var i=s({},e.units[r]);t.units.push(i)}if(null!==this.value||null!==e.value){var a=null===this.value?this._normalize(1):this.value,o=null===e.value?e._normalize(1):e.value;t.value=m(a,o)}else t.value=null;return t.skipAutomaticSimplification=!1,z(t)},P.prototype.divide=function(e){for(var t=this.clone(),n=0;n<q.length;n++)t.dimensions[n]=(this.dimensions[n]||0)-(e.dimensions[n]||0);for(var r=0;r<e.units.length;r++){var i=s(s({},e.units[r]),{},{power:-e.units[r].power});t.units.push(i)}if(null!==this.value||null!==e.value){var a=null===this.value?this._normalize(1):this.value,o=null===e.value?e._normalize(1):e.value;t.value=h(a,o)}else t.value=null;return t.skipAutomaticSimplification=!1,z(t)},P.prototype.pow=function(e){for(var t=this.clone(),n=0;n<q.length;n++)t.dimensions[n]=(this.dimensions[n]||0)*e;for(var r=0;r<t.units.length;r++)t.units[r].power*=e;return null!==t.value?t.value=y(t.value,e):t.value=null,t.skipAutomaticSimplification=!1,z(t)},P.prototype.abs=function(){var e=this.clone();for(var t in e.value=null!==e.value?v(e.value):null,e.units)\"VA\"!==e.units[t].unit.name&&\"VAR\"!==e.units[t].unit.name||(e.units[t].unit=H.W);return e},P.prototype.to=function(e){var t,n=null===this.value?this._normalize(1):this.value;if(\"string\"==typeof e){if(t=P.parse(e),!this.equalBase(t))throw new Error(\"Units do not match ('\".concat(t.toString(),\"' != '\").concat(this.toString(),\"')\"));if(null!==t.value)throw new Error(\"Cannot convert to a unit with a value\");return t.value=(0,a.clone)(n),t.fixPrefix=!0,t.skipAutomaticSimplification=!0,t}if((0,i.isUnit)(e)){if(!this.equalBase(e))throw new Error(\"Units do not match ('\".concat(e.toString(),\"' != '\").concat(this.toString(),\"')\"));if(null!==e.value)throw new Error(\"Cannot convert to a unit with a value\");return(t=e.clone()).value=(0,a.clone)(n),t.fixPrefix=!0,t.skipAutomaticSimplification=!0,t}throw new Error(\"String or Unit expected as parameter\")},P.prototype.toNumber=function(e){return S(this.toNumeric(e))},P.prototype.toNumeric=function(e){var t;return(t=e?this.to(e):this.clone())._isDerived()||0===t.units.length?t._denormalize(t.value):t._denormalize(t.value,t.units[0].prefix.value)},P.prototype.toString=function(){return this.format()},P.prototype.toJSON=function(){return{mathjs:\"Unit\",value:this._denormalize(this.value),unit:this.formatUnits(),fixPrefix:this.fixPrefix}},P.fromJSON=function(e){var t=new P(e.value,e.unit);return t.fixPrefix=e.fixPrefix||!1,t},P.prototype.valueOf=P.prototype.toString,P.prototype.simplify=function(){var e,t,n=this.clone(),r=[];for(var i in G)if((0,a.hasOwnProperty)(G,i)&&n.hasBase(F[i])){e=i;break}if(\"NONE\"===e)n.units=[];else if(e&&(0,a.hasOwnProperty)(G,e)&&(t=G[e]),t)n.units=[{unit:t.unit,prefix:t.prefix,power:1}];else{for(var o=!1,s=0;s<q.length;s++){var c=q[s];Math.abs(n.dimensions[s]||0)>1e-12&&((0,a.hasOwnProperty)(G,c)?r.push({unit:G[c].unit,prefix:G[c].prefix,power:n.dimensions[s]||0}):o=!0)}r.length<n.units.length&&!o&&(n.units=r)}return n},P.prototype.toSI=function(){for(var e=this.clone(),t=[],n=0;n<q.length;n++){var r=q[n];if(Math.abs(e.dimensions[n]||0)>1e-12){if(!(0,a.hasOwnProperty)(W.si,r))throw new Error(\"Cannot express custom unit \"+r+\" in SI units\");t.push({unit:W.si[r].unit,prefix:W.si[r].prefix,power:e.dimensions[n]||0})}}return e.units=t,e.fixPrefix=!0,e.skipAutomaticSimplification=!0,e},P.prototype.formatUnits=function(){for(var e=\"\",t=\"\",n=0,r=0,i=0;i<this.units.length;i++)this.units[i].power>0?(n++,e+=\" \"+this.units[i].prefix.name+this.units[i].unit.name,Math.abs(this.units[i].power-1)>1e-15&&(e+=\"^\"+this.units[i].power)):this.units[i].power<0&&r++;if(r>0)for(var a=0;a<this.units.length;a++)this.units[a].power<0&&(n>0?(t+=\" \"+this.units[a].prefix.name+this.units[a].unit.name,Math.abs(this.units[a].power+1)>1e-15&&(t+=\"^\"+-this.units[a].power)):(t+=\" \"+this.units[a].prefix.name+this.units[a].unit.name,t+=\"^\"+this.units[a].power));e=e.substr(1),t=t.substr(1),n>1&&r>0&&(e=\"(\"+e+\")\"),r>1&&n>0&&(t=\"(\"+t+\")\");var o=e;return n>0&&r>0&&(o+=\" / \"),o+=t},P.prototype.format=function(e){var t=this.skipAutomaticSimplification||null===this.value?this.clone():this.simplify(),n=!1;for(var r in void 0!==t.value&&null!==t.value&&(0,i.isComplex)(t.value)&&(n=Math.abs(t.value.re)<1e-14),t.units)(0,a.hasOwnProperty)(t.units,r)&&t.units[r].unit&&(\"VA\"===t.units[r].unit.name&&n?t.units[r].unit=H.VAR:\"VAR\"!==t.units[r].unit.name||n||(t.units[r].unit=H.VA));1!==t.units.length||t.fixPrefix||Math.abs(t.units[0].power-Math.round(t.units[0].power))<1e-14&&(t.units[0].prefix=t._bestPrefix());var o=t._denormalize(t.value),s=null!==t.value?_(o,e||{}):\"\",c=t.formatUnits();return t.value&&(0,i.isComplex)(t.value)&&(s=\"(\"+s+\")\"),c.length>0&&s.length>0&&(s+=\" \"),s+=c},P.prototype._bestPrefix=function(){if(1!==this.units.length)throw new Error(\"Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!\");if(Math.abs(this.units[0].power-Math.round(this.units[0].power))>=1e-14)throw new Error(\"Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!\");var e=null!==this.value?v(this.value):0,t=v(this.units[0].unit.value),n=this.units[0].prefix;if(0===e)return n;var r=this.units[0].power,i=Math.log(e/Math.pow(n.value*t,r))/Math.LN10-1.2;if(i>-2.200001&&i<1.800001)return n;i=Math.abs(i);var o=this.units[0].unit.prefixes;for(var s in o)if((0,a.hasOwnProperty)(o,s)){var c=o[s];if(c.scientific){var u=Math.abs(Math.log(e/Math.pow(c.value*t,r))/Math.LN10-1.2);(u<i||u===i&&c.name.length<n.name.length)&&(n=c,i=u)}}return n},P.prototype.splitUnit=function(e){for(var t=this.clone(),n=[],r=0;r<e.length&&(t=t.to(e[r]),r!==e.length-1);r++){var i=t.toNumeric(),a=b(i),o=new P(x(a,i)?a:g(t.toNumeric()),e[r].toString());n.push(o),t=p(t,o)}for(var s=0,c=0;c<n.length;c++)s=f(s,n[c].value);return x(s,this.value)&&(t.value=0),n.push(t),n};var R={NONE:{\"\":{name:\"\",value:1,scientific:!0}},SHORT:{\"\":{name:\"\",value:1,scientific:!0},da:{name:\"da\",value:10,scientific:!1},h:{name:\"h\",value:100,scientific:!1},k:{name:\"k\",value:1e3,scientific:!0},M:{name:\"M\",value:1e6,scientific:!0},G:{name:\"G\",value:1e9,scientific:!0},T:{name:\"T\",value:1e12,scientific:!0},P:{name:\"P\",value:1e15,scientific:!0},E:{name:\"E\",value:1e18,scientific:!0},Z:{name:\"Z\",value:1e21,scientific:!0},Y:{name:\"Y\",value:1e24,scientific:!0},d:{name:\"d\",value:.1,scientific:!1},c:{name:\"c\",value:.01,scientific:!1},m:{name:\"m\",value:.001,scientific:!0},u:{name:\"u\",value:1e-6,scientific:!0},n:{name:\"n\",value:1e-9,scientific:!0},p:{name:\"p\",value:1e-12,scientific:!0},f:{name:\"f\",value:1e-15,scientific:!0},a:{name:\"a\",value:1e-18,scientific:!0},z:{name:\"z\",value:1e-21,scientific:!0},y:{name:\"y\",value:1e-24,scientific:!0}},LONG:{\"\":{name:\"\",value:1,scientific:!0},deca:{name:\"deca\",value:10,scientific:!1},hecto:{name:\"hecto\",value:100,scientific:!1},kilo:{name:\"kilo\",value:1e3,scientific:!0},mega:{name:\"mega\",value:1e6,scientific:!0},giga:{name:\"giga\",value:1e9,scientific:!0},tera:{name:\"tera\",value:1e12,scientific:!0},peta:{name:\"peta\",value:1e15,scientific:!0},exa:{name:\"exa\",value:1e18,scientific:!0},zetta:{name:\"zetta\",value:1e21,scientific:!0},yotta:{name:\"yotta\",value:1e24,scientific:!0},deci:{name:\"deci\",value:.1,scientific:!1},centi:{name:\"centi\",value:.01,scientific:!1},milli:{name:\"milli\",value:.001,scientific:!0},micro:{name:\"micro\",value:1e-6,scientific:!0},nano:{name:\"nano\",value:1e-9,scientific:!0},pico:{name:\"pico\",value:1e-12,scientific:!0},femto:{name:\"femto\",value:1e-15,scientific:!0},atto:{name:\"atto\",value:1e-18,scientific:!0},zepto:{name:\"zepto\",value:1e-21,scientific:!0},yocto:{name:\"yocto\",value:1e-24,scientific:!0}},SQUARED:{\"\":{name:\"\",value:1,scientific:!0},da:{name:\"da\",value:100,scientific:!1},h:{name:\"h\",value:1e4,scientific:!1},k:{name:\"k\",value:1e6,scientific:!0},M:{name:\"M\",value:1e12,scientific:!0},G:{name:\"G\",value:1e18,scientific:!0},T:{name:\"T\",value:1e24,scientific:!0},P:{name:\"P\",value:1e30,scientific:!0},E:{name:\"E\",value:1e36,scientific:!0},Z:{name:\"Z\",value:1e42,scientific:!0},Y:{name:\"Y\",value:1e48,scientific:!0},d:{name:\"d\",value:.01,scientific:!1},c:{name:\"c\",value:1e-4,scientific:!1},m:{name:\"m\",value:1e-6,scientific:!0},u:{name:\"u\",value:1e-12,scientific:!0},n:{name:\"n\",value:1e-18,scientific:!0},p:{name:\"p\",value:1e-24,scientific:!0},f:{name:\"f\",value:1e-30,scientific:!0},a:{name:\"a\",value:1e-36,scientific:!0},z:{name:\"z\",value:1e-42,scientific:!0},y:{name:\"y\",value:1e-48,scientific:!0}},CUBIC:{\"\":{name:\"\",value:1,scientific:!0},da:{name:\"da\",value:1e3,scientific:!1},h:{name:\"h\",value:1e6,scientific:!1},k:{name:\"k\",value:1e9,scientific:!0},M:{name:\"M\",value:1e18,scientific:!0},G:{name:\"G\",value:1e27,scientific:!0},T:{name:\"T\",value:1e36,scientific:!0},P:{name:\"P\",value:1e45,scientific:!0},E:{name:\"E\",value:1e54,scientific:!0},Z:{name:\"Z\",value:1e63,scientific:!0},Y:{name:\"Y\",value:1e72,scientific:!0},d:{name:\"d\",value:.001,scientific:!1},c:{name:\"c\",value:1e-6,scientific:!1},m:{name:\"m\",value:1e-9,scientific:!0},u:{name:\"u\",value:1e-18,scientific:!0},n:{name:\"n\",value:1e-27,scientific:!0},p:{name:\"p\",value:1e-36,scientific:!0},f:{name:\"f\",value:1e-45,scientific:!0},a:{name:\"a\",value:1e-54,scientific:!0},z:{name:\"z\",value:1e-63,scientific:!0},y:{name:\"y\",value:1e-72,scientific:!0}},BINARY_SHORT_SI:{\"\":{name:\"\",value:1,scientific:!0},k:{name:\"k\",value:1e3,scientific:!0},M:{name:\"M\",value:1e6,scientific:!0},G:{name:\"G\",value:1e9,scientific:!0},T:{name:\"T\",value:1e12,scientific:!0},P:{name:\"P\",value:1e15,scientific:!0},E:{name:\"E\",value:1e18,scientific:!0},Z:{name:\"Z\",value:1e21,scientific:!0},Y:{name:\"Y\",value:1e24,scientific:!0}},BINARY_SHORT_IEC:{\"\":{name:\"\",value:1,scientific:!0},Ki:{name:\"Ki\",value:1024,scientific:!0},Mi:{name:\"Mi\",value:Math.pow(1024,2),scientific:!0},Gi:{name:\"Gi\",value:Math.pow(1024,3),scientific:!0},Ti:{name:\"Ti\",value:Math.pow(1024,4),scientific:!0},Pi:{name:\"Pi\",value:Math.pow(1024,5),scientific:!0},Ei:{name:\"Ei\",value:Math.pow(1024,6),scientific:!0},Zi:{name:\"Zi\",value:Math.pow(1024,7),scientific:!0},Yi:{name:\"Yi\",value:Math.pow(1024,8),scientific:!0}},BINARY_LONG_SI:{\"\":{name:\"\",value:1,scientific:!0},kilo:{name:\"kilo\",value:1e3,scientific:!0},mega:{name:\"mega\",value:1e6,scientific:!0},giga:{name:\"giga\",value:1e9,scientific:!0},tera:{name:\"tera\",value:1e12,scientific:!0},peta:{name:\"peta\",value:1e15,scientific:!0},exa:{name:\"exa\",value:1e18,scientific:!0},zetta:{name:\"zetta\",value:1e21,scientific:!0},yotta:{name:\"yotta\",value:1e24,scientific:!0}},BINARY_LONG_IEC:{\"\":{name:\"\",value:1,scientific:!0},kibi:{name:\"kibi\",value:1024,scientific:!0},mebi:{name:\"mebi\",value:Math.pow(1024,2),scientific:!0},gibi:{name:\"gibi\",value:Math.pow(1024,3),scientific:!0},tebi:{name:\"tebi\",value:Math.pow(1024,4),scientific:!0},pebi:{name:\"pebi\",value:Math.pow(1024,5),scientific:!0},exi:{name:\"exi\",value:Math.pow(1024,6),scientific:!0},zebi:{name:\"zebi\",value:Math.pow(1024,7),scientific:!0},yobi:{name:\"yobi\",value:Math.pow(1024,8),scientific:!0}},BTU:{\"\":{name:\"\",value:1,scientific:!0},MM:{name:\"MM\",value:1e6,scientific:!0}}};R.SHORTLONG=r({},R.SHORT,R.LONG),R.BINARY_SHORT=r({},R.BINARY_SHORT_SI,R.BINARY_SHORT_IEC),R.BINARY_LONG=r({},R.BINARY_LONG_SI,R.BINARY_LONG_IEC);var q=[\"MASS\",\"LENGTH\",\"TIME\",\"CURRENT\",\"TEMPERATURE\",\"LUMINOUS_INTENSITY\",\"AMOUNT_OF_SUBSTANCE\",\"ANGLE\",\"BIT\"],F={NONE:{dimensions:[0,0,0,0,0,0,0,0,0]},MASS:{dimensions:[1,0,0,0,0,0,0,0,0]},LENGTH:{dimensions:[0,1,0,0,0,0,0,0,0]},TIME:{dimensions:[0,0,1,0,0,0,0,0,0]},CURRENT:{dimensions:[0,0,0,1,0,0,0,0,0]},TEMPERATURE:{dimensions:[0,0,0,0,1,0,0,0,0]},LUMINOUS_INTENSITY:{dimensions:[0,0,0,0,0,1,0,0,0]},AMOUNT_OF_SUBSTANCE:{dimensions:[0,0,0,0,0,0,1,0,0]},FORCE:{dimensions:[1,1,-2,0,0,0,0,0,0]},SURFACE:{dimensions:[0,2,0,0,0,0,0,0,0]},VOLUME:{dimensions:[0,3,0,0,0,0,0,0,0]},ENERGY:{dimensions:[1,2,-2,0,0,0,0,0,0]},POWER:{dimensions:[1,2,-3,0,0,0,0,0,0]},PRESSURE:{dimensions:[1,-1,-2,0,0,0,0,0,0]},ELECTRIC_CHARGE:{dimensions:[0,0,1,1,0,0,0,0,0]},ELECTRIC_CAPACITANCE:{dimensions:[-1,-2,4,2,0,0,0,0,0]},ELECTRIC_POTENTIAL:{dimensions:[1,2,-3,-1,0,0,0,0,0]},ELECTRIC_RESISTANCE:{dimensions:[1,2,-3,-2,0,0,0,0,0]},ELECTRIC_INDUCTANCE:{dimensions:[1,2,-2,-2,0,0,0,0,0]},ELECTRIC_CONDUCTANCE:{dimensions:[-1,-2,3,2,0,0,0,0,0]},MAGNETIC_FLUX:{dimensions:[1,2,-2,-1,0,0,0,0,0]},MAGNETIC_FLUX_DENSITY:{dimensions:[1,0,-2,-1,0,0,0,0,0]},FREQUENCY:{dimensions:[0,0,-1,0,0,0,0,0,0]},ANGLE:{dimensions:[0,0,0,0,0,0,0,1,0]},BIT:{dimensions:[0,0,0,0,0,0,0,0,1]}};for(var U in F)(0,a.hasOwnProperty)(F,U)&&(F[U].key=U);var L={name:\"\",base:{},value:1,offset:0,dimensions:q.map((function(e){return 0}))},H={meter:{name:\"meter\",base:F.LENGTH,prefixes:R.LONG,value:1,offset:0},inch:{name:\"inch\",base:F.LENGTH,prefixes:R.NONE,value:.0254,offset:0},foot:{name:\"foot\",base:F.LENGTH,prefixes:R.NONE,value:.3048,offset:0},yard:{name:\"yard\",base:F.LENGTH,prefixes:R.NONE,value:.9144,offset:0},mile:{name:\"mile\",base:F.LENGTH,prefixes:R.NONE,value:1609.344,offset:0},link:{name:\"link\",base:F.LENGTH,prefixes:R.NONE,value:.201168,offset:0},rod:{name:\"rod\",base:F.LENGTH,prefixes:R.NONE,value:5.0292,offset:0},chain:{name:\"chain\",base:F.LENGTH,prefixes:R.NONE,value:20.1168,offset:0},angstrom:{name:\"angstrom\",base:F.LENGTH,prefixes:R.NONE,value:1e-10,offset:0},m:{name:\"m\",base:F.LENGTH,prefixes:R.SHORT,value:1,offset:0},in:{name:\"in\",base:F.LENGTH,prefixes:R.NONE,value:.0254,offset:0},ft:{name:\"ft\",base:F.LENGTH,prefixes:R.NONE,value:.3048,offset:0},yd:{name:\"yd\",base:F.LENGTH,prefixes:R.NONE,value:.9144,offset:0},mi:{name:\"mi\",base:F.LENGTH,prefixes:R.NONE,value:1609.344,offset:0},li:{name:\"li\",base:F.LENGTH,prefixes:R.NONE,value:.201168,offset:0},rd:{name:\"rd\",base:F.LENGTH,prefixes:R.NONE,value:5.02921,offset:0},ch:{name:\"ch\",base:F.LENGTH,prefixes:R.NONE,value:20.1168,offset:0},mil:{name:\"mil\",base:F.LENGTH,prefixes:R.NONE,value:254e-7,offset:0},m2:{name:\"m2\",base:F.SURFACE,prefixes:R.SQUARED,value:1,offset:0},sqin:{name:\"sqin\",base:F.SURFACE,prefixes:R.NONE,value:64516e-8,offset:0},sqft:{name:\"sqft\",base:F.SURFACE,prefixes:R.NONE,value:.09290304,offset:0},sqyd:{name:\"sqyd\",base:F.SURFACE,prefixes:R.NONE,value:.83612736,offset:0},sqmi:{name:\"sqmi\",base:F.SURFACE,prefixes:R.NONE,value:2589988.110336,offset:0},sqrd:{name:\"sqrd\",base:F.SURFACE,prefixes:R.NONE,value:25.29295,offset:0},sqch:{name:\"sqch\",base:F.SURFACE,prefixes:R.NONE,value:404.6873,offset:0},sqmil:{name:\"sqmil\",base:F.SURFACE,prefixes:R.NONE,value:6.4516e-10,offset:0},acre:{name:\"acre\",base:F.SURFACE,prefixes:R.NONE,value:4046.86,offset:0},hectare:{name:\"hectare\",base:F.SURFACE,prefixes:R.NONE,value:1e4,offset:0},m3:{name:\"m3\",base:F.VOLUME,prefixes:R.CUBIC,value:1,offset:0},L:{name:\"L\",base:F.VOLUME,prefixes:R.SHORT,value:.001,offset:0},l:{name:\"l\",base:F.VOLUME,prefixes:R.SHORT,value:.001,offset:0},litre:{name:\"litre\",base:F.VOLUME,prefixes:R.LONG,value:.001,offset:0},cuin:{name:\"cuin\",base:F.VOLUME,prefixes:R.NONE,value:16387064e-12,offset:0},cuft:{name:\"cuft\",base:F.VOLUME,prefixes:R.NONE,value:.028316846592,offset:0},cuyd:{name:\"cuyd\",base:F.VOLUME,prefixes:R.NONE,value:.764554857984,offset:0},teaspoon:{name:\"teaspoon\",base:F.VOLUME,prefixes:R.NONE,value:5e-6,offset:0},tablespoon:{name:\"tablespoon\",base:F.VOLUME,prefixes:R.NONE,value:15e-6,offset:0},drop:{name:\"drop\",base:F.VOLUME,prefixes:R.NONE,value:5e-8,offset:0},gtt:{name:\"gtt\",base:F.VOLUME,prefixes:R.NONE,value:5e-8,offset:0},minim:{name:\"minim\",base:F.VOLUME,prefixes:R.NONE,value:6.161152e-8,offset:0},fluiddram:{name:\"fluiddram\",base:F.VOLUME,prefixes:R.NONE,value:36966911e-13,offset:0},fluidounce:{name:\"fluidounce\",base:F.VOLUME,prefixes:R.NONE,value:2957353e-11,offset:0},gill:{name:\"gill\",base:F.VOLUME,prefixes:R.NONE,value:.0001182941,offset:0},cc:{name:\"cc\",base:F.VOLUME,prefixes:R.NONE,value:1e-6,offset:0},cup:{name:\"cup\",base:F.VOLUME,prefixes:R.NONE,value:.0002365882,offset:0},pint:{name:\"pint\",base:F.VOLUME,prefixes:R.NONE,value:.0004731765,offset:0},quart:{name:\"quart\",base:F.VOLUME,prefixes:R.NONE,value:.0009463529,offset:0},gallon:{name:\"gallon\",base:F.VOLUME,prefixes:R.NONE,value:.003785412,offset:0},beerbarrel:{name:\"beerbarrel\",base:F.VOLUME,prefixes:R.NONE,value:.1173478,offset:0},oilbarrel:{name:\"oilbarrel\",base:F.VOLUME,prefixes:R.NONE,value:.1589873,offset:0},hogshead:{name:\"hogshead\",base:F.VOLUME,prefixes:R.NONE,value:.238481,offset:0},fldr:{name:\"fldr\",base:F.VOLUME,prefixes:R.NONE,value:36966911e-13,offset:0},floz:{name:\"floz\",base:F.VOLUME,prefixes:R.NONE,value:2957353e-11,offset:0},gi:{name:\"gi\",base:F.VOLUME,prefixes:R.NONE,value:.0001182941,offset:0},cp:{name:\"cp\",base:F.VOLUME,prefixes:R.NONE,value:.0002365882,offset:0},pt:{name:\"pt\",base:F.VOLUME,prefixes:R.NONE,value:.0004731765,offset:0},qt:{name:\"qt\",base:F.VOLUME,prefixes:R.NONE,value:.0009463529,offset:0},gal:{name:\"gal\",base:F.VOLUME,prefixes:R.NONE,value:.003785412,offset:0},bbl:{name:\"bbl\",base:F.VOLUME,prefixes:R.NONE,value:.1173478,offset:0},obl:{name:\"obl\",base:F.VOLUME,prefixes:R.NONE,value:.1589873,offset:0},g:{name:\"g\",base:F.MASS,prefixes:R.SHORT,value:.001,offset:0},gram:{name:\"gram\",base:F.MASS,prefixes:R.LONG,value:.001,offset:0},ton:{name:\"ton\",base:F.MASS,prefixes:R.SHORT,value:907.18474,offset:0},t:{name:\"t\",base:F.MASS,prefixes:R.SHORT,value:1e3,offset:0},tonne:{name:\"tonne\",base:F.MASS,prefixes:R.LONG,value:1e3,offset:0},grain:{name:\"grain\",base:F.MASS,prefixes:R.NONE,value:6479891e-11,offset:0},dram:{name:\"dram\",base:F.MASS,prefixes:R.NONE,value:.0017718451953125,offset:0},ounce:{name:\"ounce\",base:F.MASS,prefixes:R.NONE,value:.028349523125,offset:0},poundmass:{name:\"poundmass\",base:F.MASS,prefixes:R.NONE,value:.45359237,offset:0},hundredweight:{name:\"hundredweight\",base:F.MASS,prefixes:R.NONE,value:45.359237,offset:0},stick:{name:\"stick\",base:F.MASS,prefixes:R.NONE,value:.115,offset:0},stone:{name:\"stone\",base:F.MASS,prefixes:R.NONE,value:6.35029318,offset:0},gr:{name:\"gr\",base:F.MASS,prefixes:R.NONE,value:6479891e-11,offset:0},dr:{name:\"dr\",base:F.MASS,prefixes:R.NONE,value:.0017718451953125,offset:0},oz:{name:\"oz\",base:F.MASS,prefixes:R.NONE,value:.028349523125,offset:0},lbm:{name:\"lbm\",base:F.MASS,prefixes:R.NONE,value:.45359237,offset:0},cwt:{name:\"cwt\",base:F.MASS,prefixes:R.NONE,value:45.359237,offset:0},s:{name:\"s\",base:F.TIME,prefixes:R.SHORT,value:1,offset:0},min:{name:\"min\",base:F.TIME,prefixes:R.NONE,value:60,offset:0},h:{name:\"h\",base:F.TIME,prefixes:R.NONE,value:3600,offset:0},second:{name:\"second\",base:F.TIME,prefixes:R.LONG,value:1,offset:0},sec:{name:\"sec\",base:F.TIME,prefixes:R.LONG,value:1,offset:0},minute:{name:\"minute\",base:F.TIME,prefixes:R.NONE,value:60,offset:0},hour:{name:\"hour\",base:F.TIME,prefixes:R.NONE,value:3600,offset:0},day:{name:\"day\",base:F.TIME,prefixes:R.NONE,value:86400,offset:0},week:{name:\"week\",base:F.TIME,prefixes:R.NONE,value:604800,offset:0},month:{name:\"month\",base:F.TIME,prefixes:R.NONE,value:2629800,offset:0},year:{name:\"year\",base:F.TIME,prefixes:R.NONE,value:31557600,offset:0},decade:{name:\"decade\",base:F.TIME,prefixes:R.NONE,value:315576e3,offset:0},century:{name:\"century\",base:F.TIME,prefixes:R.NONE,value:315576e4,offset:0},millennium:{name:\"millennium\",base:F.TIME,prefixes:R.NONE,value:315576e5,offset:0},hertz:{name:\"Hertz\",base:F.FREQUENCY,prefixes:R.LONG,value:1,offset:0,reciprocal:!0},Hz:{name:\"Hz\",base:F.FREQUENCY,prefixes:R.SHORT,value:1,offset:0,reciprocal:!0},rad:{name:\"rad\",base:F.ANGLE,prefixes:R.SHORT,value:1,offset:0},radian:{name:\"radian\",base:F.ANGLE,prefixes:R.LONG,value:1,offset:0},deg:{name:\"deg\",base:F.ANGLE,prefixes:R.SHORT,value:null,offset:0},degree:{name:\"degree\",base:F.ANGLE,prefixes:R.LONG,value:null,offset:0},grad:{name:\"grad\",base:F.ANGLE,prefixes:R.SHORT,value:null,offset:0},gradian:{name:\"gradian\",base:F.ANGLE,prefixes:R.LONG,value:null,offset:0},cycle:{name:\"cycle\",base:F.ANGLE,prefixes:R.NONE,value:null,offset:0},arcsec:{name:\"arcsec\",base:F.ANGLE,prefixes:R.NONE,value:null,offset:0},arcmin:{name:\"arcmin\",base:F.ANGLE,prefixes:R.NONE,value:null,offset:0},A:{name:\"A\",base:F.CURRENT,prefixes:R.SHORT,value:1,offset:0},ampere:{name:\"ampere\",base:F.CURRENT,prefixes:R.LONG,value:1,offset:0},K:{name:\"K\",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:0},degC:{name:\"degC\",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:273.15},degF:{name:\"degF\",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:459.67},degR:{name:\"degR\",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:0},kelvin:{name:\"kelvin\",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:0},celsius:{name:\"celsius\",base:F.TEMPERATURE,prefixes:R.NONE,value:1,offset:273.15},fahrenheit:{name:\"fahrenheit\",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:459.67},rankine:{name:\"rankine\",base:F.TEMPERATURE,prefixes:R.NONE,value:1/1.8,offset:0},mol:{name:\"mol\",base:F.AMOUNT_OF_SUBSTANCE,prefixes:R.SHORT,value:1,offset:0},mole:{name:\"mole\",base:F.AMOUNT_OF_SUBSTANCE,prefixes:R.LONG,value:1,offset:0},cd:{name:\"cd\",base:F.LUMINOUS_INTENSITY,prefixes:R.SHORT,value:1,offset:0},candela:{name:\"candela\",base:F.LUMINOUS_INTENSITY,prefixes:R.LONG,value:1,offset:0},N:{name:\"N\",base:F.FORCE,prefixes:R.SHORT,value:1,offset:0},newton:{name:\"newton\",base:F.FORCE,prefixes:R.LONG,value:1,offset:0},dyn:{name:\"dyn\",base:F.FORCE,prefixes:R.SHORT,value:1e-5,offset:0},dyne:{name:\"dyne\",base:F.FORCE,prefixes:R.LONG,value:1e-5,offset:0},lbf:{name:\"lbf\",base:F.FORCE,prefixes:R.NONE,value:4.4482216152605,offset:0},poundforce:{name:\"poundforce\",base:F.FORCE,prefixes:R.NONE,value:4.4482216152605,offset:0},kip:{name:\"kip\",base:F.FORCE,prefixes:R.LONG,value:4448.2216,offset:0},J:{name:\"J\",base:F.ENERGY,prefixes:R.SHORT,value:1,offset:0},joule:{name:\"joule\",base:F.ENERGY,prefixes:R.SHORT,value:1,offset:0},erg:{name:\"erg\",base:F.ENERGY,prefixes:R.NONE,value:1e-7,offset:0},Wh:{name:\"Wh\",base:F.ENERGY,prefixes:R.SHORT,value:3600,offset:0},BTU:{name:\"BTU\",base:F.ENERGY,prefixes:R.BTU,value:1055.05585262,offset:0},eV:{name:\"eV\",base:F.ENERGY,prefixes:R.SHORT,value:1602176565e-28,offset:0},electronvolt:{name:\"electronvolt\",base:F.ENERGY,prefixes:R.LONG,value:1602176565e-28,offset:0},W:{name:\"W\",base:F.POWER,prefixes:R.SHORT,value:1,offset:0},watt:{name:\"watt\",base:F.POWER,prefixes:R.LONG,value:1,offset:0},hp:{name:\"hp\",base:F.POWER,prefixes:R.NONE,value:745.6998715386,offset:0},VAR:{name:\"VAR\",base:F.POWER,prefixes:R.SHORT,value:N.I,offset:0},VA:{name:\"VA\",base:F.POWER,prefixes:R.SHORT,value:1,offset:0},Pa:{name:\"Pa\",base:F.PRESSURE,prefixes:R.SHORT,value:1,offset:0},psi:{name:\"psi\",base:F.PRESSURE,prefixes:R.NONE,value:6894.75729276459,offset:0},atm:{name:\"atm\",base:F.PRESSURE,prefixes:R.NONE,value:101325,offset:0},bar:{name:\"bar\",base:F.PRESSURE,prefixes:R.SHORTLONG,value:1e5,offset:0},torr:{name:\"torr\",base:F.PRESSURE,prefixes:R.NONE,value:133.322,offset:0},mmHg:{name:\"mmHg\",base:F.PRESSURE,prefixes:R.NONE,value:133.322,offset:0},mmH2O:{name:\"mmH2O\",base:F.PRESSURE,prefixes:R.NONE,value:9.80665,offset:0},cmH2O:{name:\"cmH2O\",base:F.PRESSURE,prefixes:R.NONE,value:98.0665,offset:0},coulomb:{name:\"coulomb\",base:F.ELECTRIC_CHARGE,prefixes:R.LONG,value:1,offset:0},C:{name:\"C\",base:F.ELECTRIC_CHARGE,prefixes:R.SHORT,value:1,offset:0},farad:{name:\"farad\",base:F.ELECTRIC_CAPACITANCE,prefixes:R.LONG,value:1,offset:0},F:{name:\"F\",base:F.ELECTRIC_CAPACITANCE,prefixes:R.SHORT,value:1,offset:0},volt:{name:\"volt\",base:F.ELECTRIC_POTENTIAL,prefixes:R.LONG,value:1,offset:0},V:{name:\"V\",base:F.ELECTRIC_POTENTIAL,prefixes:R.SHORT,value:1,offset:0},ohm:{name:\"ohm\",base:F.ELECTRIC_RESISTANCE,prefixes:R.SHORTLONG,value:1,offset:0},henry:{name:\"henry\",base:F.ELECTRIC_INDUCTANCE,prefixes:R.LONG,value:1,offset:0},H:{name:\"H\",base:F.ELECTRIC_INDUCTANCE,prefixes:R.SHORT,value:1,offset:0},siemens:{name:\"siemens\",base:F.ELECTRIC_CONDUCTANCE,prefixes:R.LONG,value:1,offset:0},S:{name:\"S\",base:F.ELECTRIC_CONDUCTANCE,prefixes:R.SHORT,value:1,offset:0},weber:{name:\"weber\",base:F.MAGNETIC_FLUX,prefixes:R.LONG,value:1,offset:0},Wb:{name:\"Wb\",base:F.MAGNETIC_FLUX,prefixes:R.SHORT,value:1,offset:0},tesla:{name:\"tesla\",base:F.MAGNETIC_FLUX_DENSITY,prefixes:R.LONG,value:1,offset:0},T:{name:\"T\",base:F.MAGNETIC_FLUX_DENSITY,prefixes:R.SHORT,value:1,offset:0},b:{name:\"b\",base:F.BIT,prefixes:R.BINARY_SHORT,value:1,offset:0},bits:{name:\"bits\",base:F.BIT,prefixes:R.BINARY_LONG,value:1,offset:0},B:{name:\"B\",base:F.BIT,prefixes:R.BINARY_SHORT,value:8,offset:0},bytes:{name:\"bytes\",base:F.BIT,prefixes:R.BINARY_LONG,value:8,offset:0}},Z={meters:\"meter\",inches:\"inch\",feet:\"foot\",yards:\"yard\",miles:\"mile\",links:\"link\",rods:\"rod\",chains:\"chain\",angstroms:\"angstrom\",lt:\"l\",litres:\"litre\",liter:\"litre\",liters:\"litre\",teaspoons:\"teaspoon\",tablespoons:\"tablespoon\",minims:\"minim\",fluiddrams:\"fluiddram\",fluidounces:\"fluidounce\",gills:\"gill\",cups:\"cup\",pints:\"pint\",quarts:\"quart\",gallons:\"gallon\",beerbarrels:\"beerbarrel\",oilbarrels:\"oilbarrel\",hogsheads:\"hogshead\",gtts:\"gtt\",grams:\"gram\",tons:\"ton\",tonnes:\"tonne\",grains:\"grain\",drams:\"dram\",ounces:\"ounce\",poundmasses:\"poundmass\",hundredweights:\"hundredweight\",sticks:\"stick\",lb:\"lbm\",lbs:\"lbm\",kips:\"kip\",acres:\"acre\",hectares:\"hectare\",sqfeet:\"sqft\",sqyard:\"sqyd\",sqmile:\"sqmi\",sqmiles:\"sqmi\",mmhg:\"mmHg\",mmh2o:\"mmH2O\",cmh2o:\"cmH2O\",seconds:\"second\",secs:\"second\",minutes:\"minute\",mins:\"minute\",hours:\"hour\",hr:\"hour\",hrs:\"hour\",days:\"day\",weeks:\"week\",months:\"month\",years:\"year\",decades:\"decade\",centuries:\"century\",millennia:\"millennium\",hertz:\"hertz\",radians:\"radian\",degrees:\"degree\",gradians:\"gradian\",cycles:\"cycle\",arcsecond:\"arcsec\",arcseconds:\"arcsec\",arcminute:\"arcmin\",arcminutes:\"arcmin\",BTUs:\"BTU\",watts:\"watt\",joules:\"joule\",amperes:\"ampere\",coulombs:\"coulomb\",volts:\"volt\",ohms:\"ohm\",farads:\"farad\",webers:\"weber\",teslas:\"tesla\",electronvolts:\"electronvolt\",moles:\"mole\",bit:\"bits\",byte:\"bytes\"};function V(e){if(\"BigNumber\"===e.number){var t=(0,An.createBigNumberPi)(M);H.rad.value=new M(1),H.deg.value=t.div(180),H.grad.value=t.div(200),H.cycle.value=t.times(2),H.arcsec.value=t.div(648e3),H.arcmin.value=t.div(10800)}else H.rad.value=1,H.deg.value=Math.PI/180,H.grad.value=Math.PI/200,H.cycle.value=2*Math.PI,H.arcsec.value=Math.PI/648e3,H.arcmin.value=Math.PI/10800;H.radian.value=H.rad.value,H.degree.value=H.deg.value,H.gradian.value=H.grad.value}V(l),u&&u(\"config\",(function(e,t){e.number!==t.number&&V(e)}));var W={si:{NONE:{unit:L,prefix:R.NONE[\"\"]},LENGTH:{unit:H.m,prefix:R.SHORT[\"\"]},MASS:{unit:H.g,prefix:R.SHORT.k},TIME:{unit:H.s,prefix:R.SHORT[\"\"]},CURRENT:{unit:H.A,prefix:R.SHORT[\"\"]},TEMPERATURE:{unit:H.K,prefix:R.SHORT[\"\"]},LUMINOUS_INTENSITY:{unit:H.cd,prefix:R.SHORT[\"\"]},AMOUNT_OF_SUBSTANCE:{unit:H.mol,prefix:R.SHORT[\"\"]},ANGLE:{unit:H.rad,prefix:R.SHORT[\"\"]},BIT:{unit:H.bits,prefix:R.SHORT[\"\"]},FORCE:{unit:H.N,prefix:R.SHORT[\"\"]},ENERGY:{unit:H.J,prefix:R.SHORT[\"\"]},POWER:{unit:H.W,prefix:R.SHORT[\"\"]},PRESSURE:{unit:H.Pa,prefix:R.SHORT[\"\"]},ELECTRIC_CHARGE:{unit:H.C,prefix:R.SHORT[\"\"]},ELECTRIC_CAPACITANCE:{unit:H.F,prefix:R.SHORT[\"\"]},ELECTRIC_POTENTIAL:{unit:H.V,prefix:R.SHORT[\"\"]},ELECTRIC_RESISTANCE:{unit:H.ohm,prefix:R.SHORT[\"\"]},ELECTRIC_INDUCTANCE:{unit:H.H,prefix:R.SHORT[\"\"]},ELECTRIC_CONDUCTANCE:{unit:H.S,prefix:R.SHORT[\"\"]},MAGNETIC_FLUX:{unit:H.Wb,prefix:R.SHORT[\"\"]},MAGNETIC_FLUX_DENSITY:{unit:H.T,prefix:R.SHORT[\"\"]},FREQUENCY:{unit:H.Hz,prefix:R.SHORT[\"\"]}}};W.cgs=JSON.parse(JSON.stringify(W.si)),W.cgs.LENGTH={unit:H.m,prefix:R.SHORT.c},W.cgs.MASS={unit:H.g,prefix:R.SHORT[\"\"]},W.cgs.FORCE={unit:H.dyn,prefix:R.SHORT[\"\"]},W.cgs.ENERGY={unit:H.erg,prefix:R.NONE[\"\"]},W.us=JSON.parse(JSON.stringify(W.si)),W.us.LENGTH={unit:H.ft,prefix:R.NONE[\"\"]},W.us.MASS={unit:H.lbm,prefix:R.NONE[\"\"]},W.us.TEMPERATURE={unit:H.degF,prefix:R.NONE[\"\"]},W.us.FORCE={unit:H.lbf,prefix:R.NONE[\"\"]},W.us.ENERGY={unit:H.BTU,prefix:R.BTU[\"\"]},W.us.POWER={unit:H.hp,prefix:R.NONE[\"\"]},W.us.PRESSURE={unit:H.psi,prefix:R.NONE[\"\"]},W.auto=JSON.parse(JSON.stringify(W.si));var G=W.auto;for(var $ in P.setUnitSystem=function(e){if(!(0,a.hasOwnProperty)(W,e))throw new Error(\"Unit system \"+e+\" does not exist. Choices are: \"+Object.keys(W).join(\", \"));G=W[e]},P.getUnitSystem=function(){for(var e in W)if((0,a.hasOwnProperty)(W,e)&&W[e]===G)return e},P.typeConverters={BigNumber:function(e){return new M(e+\"\")},Fraction:function(e){return new O(e)},Complex:function(e){return e},number:function(e){return e}},P._getNumberConverter=function(e){if(!P.typeConverters[e])throw new TypeError('Unsupported type \"'+e+'\"');return P.typeConverters[e]},H)if((0,a.hasOwnProperty)(H,$)){var Q=H[$];Q.dimensions=Q.base.dimensions}for(var X in Z)if((0,a.hasOwnProperty)(Z,X)){var Y=H[Z[X]],J={};for(var K in Y)(0,a.hasOwnProperty)(Y,K)&&(J[K]=Y[K]);J.name=X,H[X]=J}return P.isValidAlpha=function(e){return/^[a-zA-Z]$/.test(e)},P.createUnit=function(e,t){if(\"object\"!==n(e))throw new TypeError(\"createUnit expects first parameter to be of type 'Object'\");if(t&&t.override)for(var r in e)if((0,a.hasOwnProperty)(e,r)&&P.deleteUnit(r),e[r].aliases)for(var i=0;i<e[r].aliases.length;i++)P.deleteUnit(e[r].aliases[i]);var o;for(var s in e)(0,a.hasOwnProperty)(e,s)&&(o=P.createUnitSingle(s,e[s]));return o},P.createUnitSingle=function(e,t,r){if(null==t&&(t={}),\"string\"!=typeof e)throw new TypeError(\"createUnitSingle expects first parameter to be of type 'string'\");if((0,a.hasOwnProperty)(H,e))throw new Error('Cannot create unit \"'+e+'\": a unit with that name already exists');!function(e){for(var t=0;t<e.length;t++){if(c=e.charAt(t),0===t&&!P.isValidAlpha(c))throw new Error('Invalid unit name (must begin with alpha character): \"'+e+'\"');if(t>0&&!P.isValidAlpha(c)&&!A(c))throw new Error('Invalid unit name (only alphanumeric characters are allowed): \"'+e+'\"')}}(e);var i,o,s,u=null,l=[],d=0;if(t&&\"Unit\"===t.type)u=t.clone();else if(\"string\"==typeof t)\"\"!==t&&(i=t);else{if(\"object\"!==n(t))throw new TypeError('Cannot create unit \"'+e+'\" from \"'+t.toString()+'\": expecting \"string\" or \"Unit\" or \"Object\"');i=t.definition,o=t.prefixes,d=t.offset,s=t.baseName,t.aliases&&(l=t.aliases.valueOf())}if(l)for(var f=0;f<l.length;f++)if((0,a.hasOwnProperty)(H,l[f]))throw new Error('Cannot create alias \"'+l[f]+'\": a unit with that name already exists');if(i&&\"string\"==typeof i&&!u)try{u=P.parse(i,{allowNoUnits:!0})}catch(t){throw t.message='Could not create unit \"'+e+'\" from \"'+i+'\": '+t.message,t}else i&&\"Unit\"===i.type&&(u=i.clone());l=l||[],d=d||0,o=o&&o.toUpperCase&&R[o.toUpperCase()]||R.NONE;var p={};if(u){p={name:e,value:u.value,dimensions:u.dimensions.slice(0),prefixes:o,offset:d};var m=!1;for(var h in F)if((0,a.hasOwnProperty)(F,h)){for(var y=!0,v=0;v<q.length;v++)if(Math.abs((p.dimensions[v]||0)-(F[h].dimensions[v]||0))>1e-12){y=!1;break}if(y){m=!0,p.base=F[h];break}}if(!m){s=s||e+\"_STUFF\";var g={dimensions:u.dimensions.slice(0)};g.key=s,F[s]=g,G[s]={unit:p,prefix:R.NONE[\"\"]},p.base=F[s]}}else{if(s=s||e+\"_STUFF\",q.indexOf(s)>=0)throw new Error('Cannot create new base unit \"'+e+'\": a base unit with that name already exists (and cannot be overridden)');for(var b in q.push(s),F)(0,a.hasOwnProperty)(F,b)&&(F[b].dimensions[q.length-1]=0);for(var x={dimensions:[]},D=0;D<q.length;D++)x.dimensions[D]=0;x.dimensions[q.length-1]=1,x.key=s,F[s]=x,p={name:e,value:1,dimensions:F[s].dimensions.slice(0),prefixes:o,offset:d,base:F[s]},G[s]={unit:p,prefix:R.NONE[\"\"]}}P.UNITS[e]=p;for(var _=0;_<l.length;_++){var w=l[_],N={};for(var M in p)(0,a.hasOwnProperty)(p,M)&&(N[M]=p[M]);N.name=w,P.UNITS[w]=N}return new P(null,e)},P.deleteUnit=function(e){delete P.UNITS[e]},P.PREFIXES=R,P.BASE_DIMENSIONS=q,P.BASE_UNITS=F,P.UNIT_SYSTEMS=W,P.UNITS=H,P}),{isClass:!0});t.createUnitClass=l})),Cn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnitFunction=void 0;var n=[\"typed\",\"Unit\"],r=(0,h.factory)(\"unit\",n,(function(e){var t=e.typed,n=e.Unit;return t(\"unit\",{Unit:function(e){return e.clone()},string:function(e){return n.isValuelessUnit(e)?new n(null,e):n.parse(e,{allowNoUnits:!0})},\"number | BigNumber | Fraction | Complex, string\":function(e,t){return new n(e,t)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createUnitFunction=r})),Tn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSparse=void 0;var n=[\"typed\",\"SparseMatrix\"],r=(0,h.factory)(\"sparse\",n,(function(e){var t=e.typed,n=e.SparseMatrix;return t(\"sparse\",{\"\":function(){return new n([])},string:function(e){return new n([],e)},\"Array | Matrix\":function(e){return new n(e)},\"Array | Matrix, string\":function(e,t){return new n(e,t)}})}));t.createSparse=r})),kn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCreateUnit=void 0;var n=[\"typed\",\"Unit\"],r=(0,h.factory)(\"createUnit\",n,(function(e){var t=e.typed,n=e.Unit;return t(\"createUnit\",{\"Object, Object\":function(e,t){return n.createUnit(e,t)},Object:function(e){return n.createUnit(e,{})},\"string, Unit | string | Object, Object\":function(e,t,r){var i={};return i[e]=t,n.createUnit(i,r)},\"string, Unit | string | Object\":function(e,t){var r={};return r[e]=t,n.createUnit(r,{})},string:function(e){var t={};return t[e]={},n.createUnit(t,{})}})}));t.createCreateUnit=r})),In=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAcos=void 0;var n=[\"typed\",\"config\",\"Complex\"],r=(0,h.factory)(\"acos\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t(\"acos\",{number:function(e){return e>=-1&&e<=1||n.predictable?Math.acos(e):new r(e,0).acos()},Complex:function(e){return e.acos()},BigNumber:function(e){return e.acos()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcos=r})),Bn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAcosh=void 0;var n=[\"typed\",\"config\",\"Complex\"],r=(0,h.factory)(\"acosh\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t(\"acosh\",{number:function(e){return e>=1||n.predictable?(0,F.acoshNumber)(e):e<=-1?new r(Math.log(Math.sqrt(e*e-1)-e),Math.PI):new r(e,0).acosh()},Complex:function(e){return e.acosh()},BigNumber:function(e){return e.acosh()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcosh=r})),zn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAcot=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"acot\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"acot\",{number:F.acotNumber,Complex:function(e){return e.acot()},BigNumber:function(e){return new n(1).div(e).atan()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcot=r})),Rn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAcoth=void 0;var n=[\"typed\",\"config\",\"Complex\",\"BigNumber\"],r=(0,h.factory)(\"acoth\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t(\"acoth\",{number:function(e){return e>=1||e<=-1||n.predictable?(0,F.acothNumber)(e):new r(e,0).acoth()},Complex:function(e){return e.acoth()},BigNumber:function(e){return new i(1).div(e).atanh()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcoth=r})),qn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAcsc=void 0;var n=[\"typed\",\"config\",\"Complex\",\"BigNumber\"],r=(0,h.factory)(\"acsc\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t(\"acsc\",{number:function(e){return e<=-1||e>=1||n.predictable?(0,F.acscNumber)(e):new r(e,0).acsc()},Complex:function(e){return e.acsc()},BigNumber:function(e){return new i(1).div(e).asin()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcsc=r})),Fn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAcsch=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"acsch\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"acsch\",{number:F.acschNumber,Complex:function(e){return e.acsch()},BigNumber:function(e){return new n(1).div(e).asinh()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAcsch=r})),Un=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAsec=void 0;var n=[\"typed\",\"config\",\"Complex\",\"BigNumber\"],r=(0,h.factory)(\"asec\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t(\"asec\",{number:function(e){return e<=-1||e>=1||n.predictable?(0,F.asecNumber)(e):new r(e,0).asec()},Complex:function(e){return e.asec()},BigNumber:function(e){return new i(1).div(e).acos()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAsec=r})),Ln=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAsech=void 0;var n=[\"typed\",\"config\",\"Complex\",\"BigNumber\"],r=(0,h.factory)(\"asech\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex,i=e.BigNumber;return t(\"asech\",{number:function(e){if(e<=1&&e>=-1||n.predictable){var t=1/e;if(t>0||n.predictable)return(0,F.asechNumber)(e);var i=Math.sqrt(t*t-1);return new r(Math.log(i-t),Math.PI)}return new r(e,0).asech()},Complex:function(e){return e.asech()},BigNumber:function(e){return new i(1).div(e).acosh()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createAsech=r})),Hn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAsin=void 0;var n=[\"typed\",\"config\",\"Complex\"],r=(0,h.factory)(\"asin\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t(\"asin\",{number:function(e){return e>=-1&&e<=1||n.predictable?Math.asin(e):new r(e,0).asin()},Complex:function(e){return e.asin()},BigNumber:function(e){return e.asin()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAsin=r})),Zn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAsinh=void 0;var n=[\"typed\"],r=(0,h.factory)(\"asinh\",n,(function(e){return(0,e.typed)(\"asinh\",{number:F.asinhNumber,Complex:function(e){return e.asinh()},BigNumber:function(e){return e.asinh()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAsinh=r})),Vn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAtan=void 0;var n=[\"typed\"],r=(0,h.factory)(\"atan\",n,(function(e){return(0,e.typed)(\"atan\",{number:function(e){return Math.atan(e)},Complex:function(e){return e.atan()},BigNumber:function(e){return e.atan()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAtan=r})),Wn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAtan2=void 0;var n=[\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\",\"DenseMatrix\"],r=(0,h.factory)(\"atan2\",n,(function(e){var t=e.typed,n=e.matrix,r=e.equalScalar,i=e.BigNumber,a=e.DenseMatrix,o=(0,Me.createAlgorithm02)({typed:t,equalScalar:r}),s=(0,Ae.createAlgorithm03)({typed:t}),c=(0,Le.createAlgorithm09)({typed:t,equalScalar:r}),u=(0,fe.createAlgorithm11)({typed:t,equalScalar:r}),l=(0,Ce.createAlgorithm12)({typed:t,DenseMatrix:a}),d=(0,we.createAlgorithm13)({typed:t}),f=(0,pe.createAlgorithm14)({typed:t});return t(\"atan2\",{\"number, number\":Math.atan2,\"BigNumber, BigNumber\":function(e,t){return i.atan2(e,t)},\"SparseMatrix, SparseMatrix\":function(e,t){return c(e,t,this,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return o(t,e,this,!0)},\"DenseMatrix, SparseMatrix\":function(e,t){return s(e,t,this,!1)},\"DenseMatrix, DenseMatrix\":function(e,t){return d(e,t,this)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"SparseMatrix, number | BigNumber\":function(e,t){return u(e,t,this,!1)},\"DenseMatrix, number | BigNumber\":function(e,t){return f(e,t,this,!1)},\"number | BigNumber, SparseMatrix\":function(e,t){return l(t,e,this,!0)},\"number | BigNumber, DenseMatrix\":function(e,t){return f(t,e,this,!0)},\"Array, number | BigNumber\":function(e,t){return f(n(e),t,this,!1).valueOf()},\"number | BigNumber, Array\":function(e,t){return f(n(t),e,this,!0).valueOf()}})}));t.createAtan2=r})),Gn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAtanh=void 0;var n=[\"typed\",\"config\",\"Complex\"],r=(0,h.factory)(\"atanh\",n,(function(e){var t=e.typed,n=e.config,r=e.Complex;return t(\"atanh\",{number:function(e){return e<=1&&e>=-1||n.predictable?(0,F.atanhNumber)(e):new r(e,0).atanh()},Complex:function(e){return e.atanh()},BigNumber:function(e){return e.atanh()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createAtanh=r})),$n=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCos=void 0;var n=[\"typed\"],r=(0,h.factory)(\"cos\",n,(function(e){return(0,e.typed)(\"cos\",{number:Math.cos,Complex:function(e){return e.cos()},BigNumber:function(e){return e.cos()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function cos is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createCos=r})),Qn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCosh=void 0;var n=[\"typed\"],r=(0,h.factory)(\"cosh\",n,(function(e){return(0,e.typed)(\"cosh\",{number:u.cosh,Complex:function(e){return e.cosh()},BigNumber:function(e){return e.cosh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function cosh is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createCosh=r})),Xn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCot=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"cot\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"cot\",{number:F.cotNumber,Complex:function(e){return e.cot()},BigNumber:function(e){return new n(1).div(e.tan())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function cot is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createCot=r})),Yn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCoth=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"coth\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"coth\",{number:F.cothNumber,Complex:function(e){return e.coth()},BigNumber:function(e){return new n(1).div(e.tanh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function coth is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createCoth=r})),Jn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsc=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"csc\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"csc\",{number:F.cscNumber,Complex:function(e){return e.csc()},BigNumber:function(e){return new n(1).div(e.sin())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function csc is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createCsc=r})),Kn=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsch=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"csch\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"csch\",{number:F.cschNumber,Complex:function(e){return e.csch()},BigNumber:function(e){return new n(1).div(e.sinh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function csch is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createCsch=r})),er=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSec=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"sec\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"sec\",{number:F.secNumber,Complex:function(e){return e.sec()},BigNumber:function(e){return new n(1).div(e.cos())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function sec is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createSec=r})),tr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSech=void 0;var n=[\"typed\",\"BigNumber\"],r=(0,h.factory)(\"sech\",n,(function(e){var t=e.typed,n=e.BigNumber;return t(\"sech\",{number:F.sechNumber,Complex:function(e){return e.sech()},BigNumber:function(e){return new n(1).div(e.cosh())},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function sech is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createSech=r})),nr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSin=void 0;var n=[\"typed\"],r=(0,h.factory)(\"sin\",n,(function(e){return(0,e.typed)(\"sin\",{number:Math.sin,Complex:function(e){return e.sin()},BigNumber:function(e){return e.sin()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function sin is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createSin=r})),rr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSinh=void 0;var n=[\"typed\"],r=(0,h.factory)(\"sinh\",n,(function(e){return(0,e.typed)(\"sinh\",{number:F.sinhNumber,Complex:function(e){return e.sinh()},BigNumber:function(e){return e.sinh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function sinh is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createSinh=r})),ir=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTan=void 0;var n=[\"typed\"],r=(0,h.factory)(\"tan\",n,(function(e){return(0,e.typed)(\"tan\",{number:Math.tan,Complex:function(e){return e.tan()},BigNumber:function(e){return e.tan()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function tan is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createTan=r})),ar=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTanh=void 0;var n=[\"typed\"],r=(0,h.factory)(\"tanh\",n,(function(e){return(0,e.typed)(\"tanh\",{number:u.tanh,Complex:function(e){return e.tanh()},BigNumber:function(e){return e.tanh()},Unit:function(e){if(!e.hasBase(e.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function tanh is no angle\");return this(e.value)},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this,!0)}})}));t.createTanh=r})),or=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetCartesian=void 0;var n=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\",\"DenseMatrix\"],r=(0,h.factory)(\"setCartesian\",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index,o=e.DenseMatrix;return t(\"setCartesian\",{\"Array | Matrix, Array | Matrix\":function(e,t){var s=[];if(0!==r(n(e),new a(0))&&0!==r(n(t),new a(0))){var c=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i),u=(0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(i);s=[];for(var l=0;l<c.length;l++)for(var d=0;d<u.length;d++)s.push([c[l],u[d]])}return Array.isArray(e)&&Array.isArray(t)?s:new o(s)}})}));t.createSetCartesian=r})),sr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetDifference=void 0;var n=\"setDifference\",r=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\",\"DenseMatrix\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.size,i=e.subset,a=e.compareNatural,o=e.Index,s=e.DenseMatrix;return t(n,{\"Array | Matrix, Array | Matrix\":function(e,t){var n;if(0===i(r(e),new o(0)))n=[];else{if(0===i(r(t),new o(0)))return(0,m.flatten)(e.toArray());var c,u=(0,m.identify)((0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(a)),l=(0,m.identify)((0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(a));n=[];for(var d=0;d<u.length;d++){c=!1;for(var f=0;f<l.length;f++)if(0===a(u[d].value,l[f].value)&&u[d].identifier===l[f].identifier){c=!0;break}c||n.push(u[d])}}return Array.isArray(e)&&Array.isArray(t)?(0,m.generalize)(n):new s((0,m.generalize)(n))}})}));t.createSetDifference=i})),cr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetDistinct=void 0;var n=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\",\"DenseMatrix\"],r=(0,h.factory)(\"setDistinct\",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index,o=e.DenseMatrix;return t(\"setDistinct\",{\"Array | Matrix\":function(e){var t;if(0===r(n(e),new a(0)))t=[];else{var s=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i);(t=[]).push(s[0]);for(var c=1;c<s.length;c++)0!==i(s[c],s[c-1])&&t.push(s[c])}return Array.isArray(e)?t:new o(t)}})}));t.createSetDistinct=r})),ur=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetIntersect=void 0;var n=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\",\"DenseMatrix\"],r=(0,h.factory)(\"setIntersect\",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index,o=e.DenseMatrix;return t(\"setIntersect\",{\"Array | Matrix, Array | Matrix\":function(e,t){var s;if(0===r(n(e),new a(0))||0===r(n(t),new a(0)))s=[];else{var c=(0,m.identify)((0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i)),u=(0,m.identify)((0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(i));s=[];for(var l=0;l<c.length;l++)for(var d=0;d<u.length;d++)if(0===i(c[l].value,u[d].value)&&c[l].identifier===u[d].identifier){s.push(c[l]);break}}return Array.isArray(e)&&Array.isArray(t)?(0,m.generalize)(s):new o((0,m.generalize)(s))}})}));t.createSetIntersect=r})),lr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetIsSubset=void 0;var n=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\"],r=(0,h.factory)(\"setIsSubset\",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index;return t(\"setIsSubset\",{\"Array | Matrix, Array | Matrix\":function(e,t){if(0===r(n(e),new a(0)))return!0;if(0===r(n(t),new a(0)))return!1;for(var o,s=(0,m.identify)((0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i)),c=(0,m.identify)((0,m.flatten)(Array.isArray(t)?t:t.toArray()).sort(i)),u=0;u<s.length;u++){o=!1;for(var l=0;l<c.length;l++)if(0===i(s[u].value,c[l].value)&&s[u].identifier===c[l].identifier){o=!0;break}if(!1===o)return!1}return!0}})}));t.createSetIsSubset=r})),dr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetMultiplicity=void 0;var n=\"setMultiplicity\",r=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.size,i=e.subset,a=e.compareNatural,o=e.Index;return t(n,{\"number | BigNumber | Fraction | Complex, Array | Matrix\":function(e,t){if(0===i(r(t),new o(0)))return 0;for(var n=(0,m.flatten)(Array.isArray(t)?t:t.toArray()),s=0,c=0;c<n.length;c++)0===a(n[c],e)&&s++;return s}})}));t.createSetMultiplicity=i})),fr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetPowerset=void 0;var n=[\"typed\",\"size\",\"subset\",\"compareNatural\",\"Index\"],r=(0,h.factory)(\"setPowerset\",n,(function(e){var t=e.typed,n=e.size,r=e.subset,i=e.compareNatural,a=e.Index;return t(\"setPowerset\",{\"Array | Matrix\":function(e){if(0===r(n(e),new a(0)))return[];for(var t=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(i),s=[],c=0;c.toString(2).length<=t.length;)s.push(o(t,c.toString(2).split(\"\").reverse())),c++;return function(e){for(var t=[],n=e.length-1;n>0;n--)for(var r=0;r<n;r++)e[r].length>e[r+1].length&&(t=e[r],e[r]=e[r+1],e[r+1]=t);return e}(s)}});function o(e,t){for(var n=[],r=0;r<t.length;r++)\"1\"===t[r]&&n.push(e[r]);return n}}));t.createSetPowerset=r})),pr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetSize=void 0;var n=[\"typed\",\"compareNatural\"],r=(0,h.factory)(\"setSize\",n,(function(e){var t=e.typed,n=e.compareNatural;return t(\"setSize\",{\"Array | Matrix\":function(e){return Array.isArray(e)?(0,m.flatten)(e).length:(0,m.flatten)(e.toArray()).length},\"Array | Matrix, boolean\":function(e,t){if(!1===t||0===e.length)return Array.isArray(e)?(0,m.flatten)(e).length:(0,m.flatten)(e.toArray()).length;for(var r=(0,m.flatten)(Array.isArray(e)?e:e.toArray()).sort(n),i=1,a=1;a<r.length;a++)0!==n(r[a],r[a-1])&&i++;return i}})}));t.createSetSize=r})),mr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetSymDifference=void 0;var n=\"setSymDifference\",r=[\"typed\",\"size\",\"concat\",\"subset\",\"setDifference\",\"Index\"],i=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.size,i=e.concat,a=e.subset,o=e.setDifference,s=e.Index;return t(n,{\"Array | Matrix, Array | Matrix\":function(e,t){if(0===a(r(e),new s(0)))return(0,m.flatten)(t);if(0===a(r(t),new s(0)))return(0,m.flatten)(e);var n=(0,m.flatten)(e),c=(0,m.flatten)(t);return i(o(n,c),o(c,n))}})}));t.createSetSymDifference=i})),hr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSetUnion=void 0;var n=[\"typed\",\"size\",\"concat\",\"subset\",\"setIntersect\",\"setSymDifference\",\"Index\"],r=(0,h.factory)(\"setUnion\",n,(function(e){var t=e.typed,n=e.size,r=e.concat,i=e.subset,a=e.setIntersect,o=e.setSymDifference,s=e.Index;return t(\"setUnion\",{\"Array | Matrix, Array | Matrix\":function(e,t){if(0===i(n(e),new s(0)))return(0,m.flatten)(t);if(0===i(n(t),new s(0)))return(0,m.flatten)(e);var c=(0,m.flatten)(e),u=(0,m.flatten)(t);return r(o(c,u),a(c,u))}})}));t.createSetUnion=r})),yr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAdd=void 0;var n=[\"typed\",\"matrix\",\"addScalar\",\"equalScalar\",\"DenseMatrix\",\"SparseMatrix\"],r=(0,h.factory)(\"add\",n,(function(e){var t=e.typed,n=e.matrix,r=e.addScalar,i=e.equalScalar,o=e.DenseMatrix,s=(e.SparseMatrix,(0,xe.createAlgorithm01)({typed:t})),c=(0,De.createAlgorithm04)({typed:t,equalScalar:i}),u=(0,_e.createAlgorithm10)({typed:t,DenseMatrix:o}),l=(0,we.createAlgorithm13)({typed:t}),d=(0,pe.createAlgorithm14)({typed:t});return t(\"add\",(0,a.extend)({\"DenseMatrix, DenseMatrix\":function(e,t){return l(e,t,r)},\"DenseMatrix, SparseMatrix\":function(e,t){return s(e,t,r,!1)},\"SparseMatrix, DenseMatrix\":function(e,t){return s(t,e,r,!0)},\"SparseMatrix, SparseMatrix\":function(e,t){return c(e,t,r)},\"Array, Array\":function(e,t){return this(n(e),n(t)).valueOf()},\"Array, Matrix\":function(e,t){return this(n(e),t)},\"Matrix, Array\":function(e,t){return this(e,n(t))},\"DenseMatrix, any\":function(e,t){return d(e,t,r,!1)},\"SparseMatrix, any\":function(e,t){return u(e,t,r,!1)},\"any, DenseMatrix\":function(e,t){return d(t,e,r,!0)},\"any, SparseMatrix\":function(e,t){return u(t,e,r,!0)},\"Array, any\":function(e,t){return d(n(e),t,r,!1).valueOf()},\"any, Array\":function(e,t){return d(n(t),e,r,!0).valueOf()},\"any, any\":r,\"any, any, ...any\":function(e,t,n){for(var r=this(e,t),i=0;i<n.length;i++)r=this(r,n[i]);return r}},r.signatures))}));t.createAdd=r})),vr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createHypot=void 0;var n=[\"typed\",\"abs\",\"addScalar\",\"divideScalar\",\"multiplyScalar\",\"sqrt\",\"smaller\",\"isPositive\"],r=(0,h.factory)(\"hypot\",n,(function(e){var t=e.typed,n=e.abs,r=e.addScalar,i=e.divideScalar,a=e.multiplyScalar,o=e.sqrt,s=e.smaller,c=e.isPositive;return t(\"hypot\",{\"... number | BigNumber\":function(e){for(var t=0,u=0,l=0;l<e.length;l++){var d=n(e[l]);s(u,d)?(t=a(t,a(i(u,d),i(u,d))),t=r(t,1),u=d):t=r(t,c(d)?a(i(d,u),i(d,u)):d)}return a(u,o(t))},Array:function(e){return this.apply(this,(0,m.flatten)(e))},Matrix:function(e){return this.apply(this,(0,m.flatten)(e.toArray()))}})}));t.createHypot=r})),gr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNorm=void 0;var n=[\"typed\",\"abs\",\"add\",\"pow\",\"conj\",\"sqrt\",\"multiply\",\"equalScalar\",\"larger\",\"smaller\",\"matrix\",\"ctranspose\",\"eigs\"],r=(0,h.factory)(\"norm\",n,(function(e){var t=e.typed,n=e.abs,r=e.add,i=e.pow,a=e.conj,o=e.sqrt,s=e.multiply,c=e.equalScalar,u=e.larger,l=e.smaller,d=e.matrix,f=e.ctranspose,p=e.eigs;return t(\"norm\",{number:Math.abs,Complex:function(e){return e.abs()},BigNumber:function(e){return e.abs()},boolean:function(e){return Math.abs(e)},Array:function(e){return y(d(e),2)},Matrix:function(e){return y(e,2)},\"number | Complex | BigNumber | boolean, number | BigNumber | string\":function(e){return this(e)},\"Array, number | BigNumber | string\":function(e,t){return y(d(e),t)},\"Matrix, number | BigNumber | string\":function(e,t){return y(e,t)}});function m(e,t){if(t===Number.POSITIVE_INFINITY||\"inf\"===t)return function(e){var t=0;return e.forEach((function(e){var r=n(e);u(r,t)&&(t=r)}),!0),t}(e);if(t===Number.NEGATIVE_INFINITY||\"-inf\"===t)return function(e){var t;return e.forEach((function(e){var r=n(e);t&&!l(r,t)||(t=r)}),!0),t||0}(e);if(\"fro\"===t)return y(e,2);if(\"number\"==typeof t&&!isNaN(t)){if(!c(t,0)){var a=0;return e.forEach((function(e){a=r(i(n(e),t),a)}),!0),i(a,1/t)}return Number.POSITIVE_INFINITY}throw new Error(\"Unsupported parameter value\")}function h(e,t){if(1===t)return function(e){var t=[],i=0;return e.forEach((function(e,a){var o=a[1],s=r(t[o]||0,n(e));u(s,i)&&(i=s),t[o]=s}),!0),i}(e);if(t===Number.POSITIVE_INFINITY||\"inf\"===t)return function(e){var t=[],i=0;return e.forEach((function(e,a){var o=a[0],s=r(t[o]||0,n(e));u(s,i)&&(i=s),t[o]=s}),!0),i}(e);if(\"fro\"===t)return function(e){var t=0;return e.forEach((function(e,n){t=r(t,s(e,a(e)))})),n(o(t))}(e);if(2===t)return function(e){var t=e.size();if(t[0]!==t[1])throw new RangeError(\"Invalid matrix dimensions\");var r=f(e),i=s(r,e),a=p(i).values,c=a.get([a.size()[0]-1]);return n(o(c))}(e);throw new Error(\"Unsupported parameter value \"+t)}function y(e,t){var n=e.size();if(1===n.length)return m(e,t);if(2===n.length){if(n[0]&&n[1])return h(e,t);throw new RangeError(\"Invalid matrix dimensions\")}}}));t.createNorm=r})),br=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDot=void 0;var n=[\"typed\",\"addScalar\",\"multiplyScalar\",\"conj\",\"size\"],r=(0,h.factory)(\"dot\",n,(function(e){var t=e.typed,n=e.addScalar,r=e.multiplyScalar,a=e.conj,o=e.size;return t(\"dot\",{\"Array | DenseMatrix, Array | DenseMatrix\":function(e,o){var u=s(e,o),l=(0,i.isMatrix)(e)?e._data:e,d=(0,i.isMatrix)(e)?e._datatype:void 0,f=(0,i.isMatrix)(o)?o._data:o,p=(0,i.isMatrix)(o)?o._datatype:void 0,m=2===c(e).length,h=2===c(o).length,y=n,v=r;if(d&&p&&d===p&&\"string\"==typeof d){var g=d;y=t.find(n,[g,g]),v=t.find(r,[g,g])}if(!m&&!h){for(var b=v(a(l[0]),f[0]),x=1;x<u;x++)b=y(b,v(a(l[x]),f[x]));return b}if(!m&&h){for(var D=v(a(l[0]),f[0][0]),_=1;_<u;_++)D=y(D,v(a(l[_]),f[_][0]));return D}if(m&&!h){for(var w=v(a(l[0][0]),f[0]),N=1;N<u;N++)w=y(w,v(a(l[N][0]),f[N]));return w}if(m&&h){for(var M=v(a(l[0][0]),f[0][0]),O=1;O<u;O++)M=y(M,v(a(l[O][0]),f[O][0]));return M}},\"SparseMatrix, SparseMatrix\":function(e,t){s(e,t);var i=e._index,a=e._values,o=t._index,c=t._values,u=0,l=n,d=r,f=0,p=0;for(;f<i.length&&p<o.length;){var m=i[f],h=o[p];m<h?f++:m>h?p++:m===h&&(u=l(u,d(a[f],c[p])),f++,p++)}return u}});function s(e,t){var n,r,i=c(e),a=c(t);if(1===i.length)n=i[0];else{if(2!==i.length||1!==i[1])throw new RangeError(\"Expected a column vector, instead got a matrix of size (\"+i.join(\", \")+\")\");n=i[0]}if(1===a.length)r=a[0];else{if(2!==a.length||1!==a[1])throw new RangeError(\"Expected a column vector, instead got a matrix of size (\"+a.join(\", \")+\")\");r=a[0]}if(n!==r)throw new RangeError(\"Vectors must have equal length (\"+n+\" != \"+r+\")\");if(0===n)throw new RangeError(\"Cannot calculate the dot product of empty vectors\");return n}function c(e){return(0,i.isMatrix)(e)?e.size():o(e)}}));t.createDot=r})),xr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createTrace=void 0;var n=[\"typed\",\"matrix\",\"add\"],r=(0,h.factory)(\"trace\",n,(function(e){var t=e.typed,n=e.matrix,r=e.add;return t(\"trace\",{Array:function(e){return i(n(e))},SparseMatrix:function(e){var t=e._values,n=e._index,i=e._ptr,a=e._size,o=a[0],s=a[1];if(o===s){var c=0;if(t.length>0)for(var u=0;u<s;u++)for(var l=i[u],f=i[u+1],p=l;p<f;p++){var m=n[p];if(m===u){c=r(c,t[p]);break}if(m>u)break}return c}throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(a)+\")\")},DenseMatrix:i,any:a.clone});function i(e){var t=e._size,n=e._data;switch(t.length){case 1:if(1===t[0])return(0,a.clone)(n[0]);throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");case 2:var i=t[0];if(i===t[1]){for(var o=0,s=0;s<i;s++)o=r(o,n[s][s]);return o}throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");default:throw new RangeError(\"Matrix must be two dimensional (size: \"+(0,d.format)(t)+\")\")}}}));t.createTrace=r})),Dr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIndex=void 0;var n=[\"typed\",\"Index\"],r=(0,h.factory)(\"index\",n,(function(e){var t=e.typed,n=e.Index;return t(\"index\",{\"...number | string | BigNumber | Range | Array | Matrix\":function(e){var t=e.map((function(e){return(0,i.isBigNumber)(e)?e.toNumber():Array.isArray(e)||(0,i.isMatrix)(e)?e.map((function(e){return(0,i.isBigNumber)(e)?e.toNumber():e})):e})),r=new n;return n.apply(r,t),r}})}));t.createIndex=r})),_r=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.keywords=void 0;t.keywords={end:!0}})),wr=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createNode=void 0;var r=[\"mathWithTransform\"],o=(0,h.factory)(\"Node\",r,(function(e){var t=e.mathWithTransform;function r(){if(!(this instanceof r))throw new SyntaxError(\"Constructor must be called with the new operator\")}return r.prototype.evaluate=function(e){return this.compile().evaluate(e)},r.prototype.type=\"Node\",r.prototype.isNode=!0,r.prototype.comment=\"\",r.prototype.compile=function(){var e=this._compile(t,{}),n={};return{evaluate:function(t){var r=t||{};return function(e){for(var t in e)if((0,a.hasOwnProperty)(e,t)&&t in _r.keywords)throw new Error('Scope contains an illegal symbol, \"'+t+'\" is a reserved keyword')}(r),e(r,n,null)}}},r.prototype._compile=function(e,t){throw new Error(\"Method _compile should be implemented by type \"+this.type)},r.prototype.forEach=function(e){throw new Error(\"Cannot run forEach on a Node interface\")},r.prototype.map=function(e){throw new Error(\"Cannot run map on a Node interface\")},r.prototype._ifNode=function(e){if(!(0,i.isNode)(e))throw new TypeError(\"Callback function must return a Node\");return e},r.prototype.traverse=function(e){e(this,null,null),function e(t,n){t.forEach((function(t,r,i){n(t,r,i),e(t,n)}))}(this,e)},r.prototype.transform=function(e){return function t(n,r,i){var a=e(n,r,i);return a!==n?a:n.map(t)}(this,null,null)},r.prototype.filter=function(e){var t=[];return this.traverse((function(n,r,i){e(n,r,i)&&t.push(n)})),t},r.prototype.clone=function(){throw new Error(\"Cannot clone a Node interface\")},r.prototype.cloneDeep=function(){return this.map((function(e){return e.cloneDeep()}))},r.prototype.equals=function(e){return!!e&&(0,a.deepStrictEqual)(this,e)},r.prototype.toString=function(e){var t;if(e&&\"object\"===n(e))switch(n(e.handler)){case\"object\":case\"undefined\":break;case\"function\":t=e.handler(this,e);break;default:throw new TypeError(\"Object or function expected as callback\")}return void 0!==t?t:this._toString(e)},r.prototype.toJSON=function(){throw new Error(\"Cannot serialize object: toJSON not implemented by \"+this.type)},r.prototype.toHTML=function(e){var t;if(e&&\"object\"===n(e))switch(n(e.handler)){case\"object\":case\"undefined\":break;case\"function\":t=e.handler(this,e);break;default:throw new TypeError(\"Object or function expected as callback\")}return void 0!==t?t:this.toHTML(e)},r.prototype._toString=function(){throw new Error(\"_toString not implemented for \"+this.type)},r.prototype.toTex=function(e){var t;if(e&&\"object\"===n(e))switch(n(e.handler)){case\"object\":case\"undefined\":break;case\"function\":t=e.handler(this,e);break;default:throw new TypeError(\"Object or function expected as callback\")}return void 0!==t?t:this._toTex(e)},r.prototype._toTex=function(e){throw new Error(\"_toTex not implemented for \"+this.type)},r.prototype.getIdentifier=function(){return this.type},r.prototype.getContent=function(){return this},r}),{isClass:!0,isNode:!0});t.createNode=o})),Nr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.errorTransform=function(e){if(e&&e.isIndexError)return new p.IndexError(e.index+1,e.min+1,void 0!==e.max?e.max+1:void 0);return e}})),Mr=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.accessFactory=function(e){var t=e.subset;return function(e,r){try{if(Array.isArray(e))return t(e,r);if(e&&\"function\"==typeof e.subset)return e.subset(r);if(\"string\"==typeof e)return t(e,r);if(\"object\"===n(e)){if(!r.isObjectProperty())throw new TypeError(\"Cannot apply a numeric index as object property\");return(0,St.getSafeProperty)(e,r.getObjectProperty())}throw new TypeError(\"Cannot apply index: unsupported type of object\")}catch(e){throw(0,Nr.errorTransform)(e)}}}})),Or=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAccessorNode=void 0;var n=[\"subset\",\"Node\"],r=(0,h.factory)(\"AccessorNode\",n,(function(e){var t=e.subset,n=e.Node,r=(0,Mr.accessFactory)({subset:t});function a(e,t){if(!(this instanceof a))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!(0,i.isNode)(e))throw new TypeError('Node expected for parameter \"object\"');if(!(0,i.isIndexNode)(t))throw new TypeError('IndexNode expected for parameter \"index\"');this.object=e||null,this.index=t,Object.defineProperty(this,\"name\",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():\"\":this.object.name||\"\"}.bind(this),set:function(){throw new Error(\"Cannot assign a new name, name is read-only\")}})}function o(e){return!((0,i.isAccessorNode)(e)||(0,i.isArrayNode)(e)||(0,i.isConstantNode)(e)||(0,i.isFunctionNode)(e)||(0,i.isObjectNode)(e)||(0,i.isParenthesisNode)(e)||(0,i.isSymbolNode)(e))}return a.prototype=new n,a.prototype.type=\"AccessorNode\",a.prototype.isAccessorNode=!0,a.prototype._compile=function(e,t){var n=this.object._compile(e,t),i=this.index._compile(e,t);if(this.index.isObjectProperty()){var a=this.index.getObjectProperty();return function(e,t,r){return(0,St.getSafeProperty)(n(e,t,r),a)}}return function(e,t,a){var o=n(e,t,a),s=i(e,t,o);return r(o,s)}},a.prototype.forEach=function(e){e(this.object,\"object\",this),e(this.index,\"index\",this)},a.prototype.map=function(e){return new a(this._ifNode(e(this.object,\"object\",this)),this._ifNode(e(this.index,\"index\",this)))},a.prototype.clone=function(){return new a(this.object,this.index)},a.prototype._toString=function(e){var t=this.object.toString(e);return o(this.object)&&(t=\"(\"+t+\")\"),t+this.index.toString(e)},a.prototype.toHTML=function(e){var t=this.object.toHTML(e);return o(this.object)&&(t='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+t+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),t+this.index.toHTML(e)},a.prototype._toTex=function(e){var t=this.object.toTex(e);return o(this.object)&&(t=\"\\\\left(' + object + '\\\\right)\"),t+this.index.toTex(e)},a.prototype.toJSON=function(){return{mathjs:\"AccessorNode\",object:this.object,index:this.index}},a.fromJSON=function(e){return new a(e.object,e.index)},a}),{isClass:!0,isNode:!0});t.createAccessorNode=r})),Sr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createArrayNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"ArrayNode\",n,(function(e){var t=e.Node;function n(e){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(this.items=e||[],!Array.isArray(this.items)||!this.items.every(i.isNode))throw new TypeError(\"Array containing Nodes expected\")}return n.prototype=new t,n.prototype.type=\"ArrayNode\",n.prototype.isArrayNode=!0,n.prototype._compile=function(e,t){var n=(0,m.map)(this.items,(function(n){return n._compile(e,t)}));if(\"Array\"!==e.config.matrix){var r=e.matrix;return function(e,t,i){return r((0,m.map)(n,(function(n){return n(e,t,i)})))}}return function(e,t,r){return(0,m.map)(n,(function(n){return n(e,t,r)}))}},n.prototype.forEach=function(e){for(var t=0;t<this.items.length;t++){e(this.items[t],\"items[\"+t+\"]\",this)}},n.prototype.map=function(e){for(var t=[],r=0;r<this.items.length;r++)t[r]=this._ifNode(e(this.items[r],\"items[\"+r+\"]\",this));return new n(t)},n.prototype.clone=function(){return new n(this.items.slice(0))},n.prototype._toString=function(e){return\"[\"+this.items.map((function(t){return t.toString(e)})).join(\", \")+\"]\"},n.prototype.toJSON=function(){return{mathjs:\"ArrayNode\",items:this.items}},n.fromJSON=function(e){return new n(e.items)},n.prototype.toHTML=function(e){return'<span class=\"math-parenthesis math-square-parenthesis\">[</span>'+this.items.map((function(t){return t.toHTML(e)})).join('<span class=\"math-separator\">,</span>')+'<span class=\"math-parenthesis math-square-parenthesis\">]</span>'},n.prototype._toTex=function(e){var t=\"\\\\begin{bmatrix}\";return this.items.forEach((function(n){n.items?t+=n.items.map((function(t){return t.toTex(e)})).join(\"&\"):t+=n.toTex(e),t+=\"\\\\\\\\\"})),t+=\"\\\\end{bmatrix}\"},n}),{isClass:!0,isNode:!0});t.createArrayNode=r})),Pr=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.assignFactory=function(e){var t=e.subset,r=e.matrix;return function(e,i,a){try{if(Array.isArray(e))return r(e).subset(i,a).valueOf();if(e&&\"function\"==typeof e.subset)return e.subset(i,a);if(\"string\"==typeof e)return t(e,i,a);if(\"object\"===n(e)){if(!i.isObjectProperty())throw TypeError(\"Cannot apply a numeric index as object property\");return(0,St.setSafeProperty)(e,i.getObjectProperty(),a),e}throw new TypeError(\"Cannot apply index: unsupported type of object\")}catch(e){throw(0,Nr.errorTransform)(e)}}}})),jr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getPrecedence=r,t.getAssociativity=function(e,t){var i=e;\"keep\"!==t&&(i=e.getContent());var o=i.getIdentifier(),s=r(i,t);if(null===s)return null;var c=n[s][o];if((0,a.hasOwnProperty)(c,\"associativity\")){if(\"left\"===c.associativity)return\"left\";if(\"right\"===c.associativity)return\"right\";throw Error(\"'\"+o+\"' has the invalid associativity '\"+c.associativity+\"'.\")}return null},t.isAssociativeWith=function(e,t,i){var o=\"keep\"!==i?e.getContent():e,s=\"keep\"!==i?e.getContent():t,c=o.getIdentifier(),u=s.getIdentifier(),l=r(o,i);if(null===l)return null;var d=n[l][c];if((0,a.hasOwnProperty)(d,\"associativeWith\")&&d.associativeWith instanceof Array){for(var f=0;f<d.associativeWith.length;f++)if(d.associativeWith[f]===u)return!0;return!1}return null},t.properties=void 0;var n=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{\"OperatorNode:or\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:xor\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:and\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:bitOr\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:bitXor\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:bitAnd\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:equal\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:unequal\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:smaller\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:larger\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:smallerEq\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:largerEq\":{associativity:\"left\",associativeWith:[]},RelationalNode:{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:leftShift\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:rightArithShift\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:rightLogShift\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:to\":{associativity:\"left\",associativeWith:[]}},{RangeNode:{}},{\"OperatorNode:add\":{associativity:\"left\",associativeWith:[\"OperatorNode:add\",\"OperatorNode:subtract\"]},\"OperatorNode:subtract\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:multiply\":{associativity:\"left\",associativeWith:[\"OperatorNode:multiply\",\"OperatorNode:divide\",\"Operator:dotMultiply\",\"Operator:dotDivide\"]},\"OperatorNode:divide\":{associativity:\"left\",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},\"OperatorNode:dotMultiply\":{associativity:\"left\",associativeWith:[\"OperatorNode:multiply\",\"OperatorNode:divide\",\"OperatorNode:dotMultiply\",\"OperatorNode:doDivide\"]},\"OperatorNode:dotDivide\":{associativity:\"left\",associativeWith:[]},\"OperatorNode:mod\":{associativity:\"left\",associativeWith:[]}},{\"OperatorNode:unaryPlus\":{associativity:\"right\"},\"OperatorNode:unaryMinus\":{associativity:\"right\"},\"OperatorNode:bitNot\":{associativity:\"right\"},\"OperatorNode:not\":{associativity:\"right\"}},{\"OperatorNode:pow\":{associativity:\"right\",associativeWith:[],latexRightParens:!1},\"OperatorNode:dotPow\":{associativity:\"right\",associativeWith:[]}},{\"OperatorNode:factorial\":{associativity:\"left\"}},{\"OperatorNode:transpose\":{associativity:\"left\"}}];function r(e,t){var r=e;\"keep\"!==t&&(r=e.getContent());for(var i=r.getIdentifier(),a=0;a<n.length;a++)if(i in n[a])return a;return null}t.properties=n})),Ar=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createAssignmentNode=void 0;var n=[\"subset\",\"?matrix\",\"Node\"],r=(0,h.factory)(\"AssignmentNode\",n,(function(e){var t=e.subset,n=e.matrix,r=e.Node,a=(0,Mr.accessFactory)({subset:t}),o=(0,Pr.assignFactory)({subset:t,matrix:n});function s(e,t,n){if(!(this instanceof s))throw new SyntaxError(\"Constructor must be called with the new operator\");if(this.object=e,this.index=n?t:null,this.value=n||t,!(0,i.isSymbolNode)(e)&&!(0,i.isAccessorNode)(e))throw new TypeError('SymbolNode or AccessorNode expected as \"object\"');if((0,i.isSymbolNode)(e)&&\"end\"===e.name)throw new Error('Cannot assign to symbol \"end\"');if(this.index&&!(0,i.isIndexNode)(this.index))throw new TypeError('IndexNode expected as \"index\"');if(!(0,i.isNode)(this.value))throw new TypeError('Node expected as \"value\"');Object.defineProperty(this,\"name\",{get:function(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():\"\":this.object.name||\"\"}.bind(this),set:function(){throw new Error(\"Cannot assign a new name, name is read-only\")}})}function c(e,t){t||(t=\"keep\");var n=(0,jr.getPrecedence)(e,t),r=(0,jr.getPrecedence)(e.value,t);return\"all\"===t||null!==r&&r<=n}return s.prototype=new r,s.prototype.type=\"AssignmentNode\",s.prototype.isAssignmentNode=!0,s.prototype._compile=function(e,t){var n=this.object._compile(e,t),r=this.index?this.index._compile(e,t):null,s=this.value._compile(e,t),c=this.object.name;if(this.index){if(this.index.isObjectProperty()){var u=this.index.getObjectProperty();return function(e,t,r){var i=n(e,t,r),a=s(e,t,r);return(0,St.setSafeProperty)(i,u,a)}}if((0,i.isSymbolNode)(this.object))return function(e,t,i){var a=n(e,t,i),u=s(e,t,i),l=r(e,t,a);return(0,St.setSafeProperty)(e,c,o(a,l,u)),u};var l=this.object.object._compile(e,t);if(this.object.index.isObjectProperty()){var d=this.object.index.getObjectProperty();return function(e,t,n){var i=l(e,t,n),a=(0,St.getSafeProperty)(i,d),c=r(e,t,a),u=s(e,t,n);return(0,St.setSafeProperty)(i,d,o(a,c,u)),u}}var f=this.object.index._compile(e,t);return function(e,t,n){var i=l(e,t,n),c=f(e,t,i),u=a(i,c),d=r(e,t,u),p=s(e,t,n);return o(i,c,o(u,d,p)),p}}if(!(0,i.isSymbolNode)(this.object))throw new TypeError(\"SymbolNode expected as object\");return function(e,t,n){return(0,St.setSafeProperty)(e,c,s(e,t,n))}},s.prototype.forEach=function(e){e(this.object,\"object\",this),this.index&&e(this.index,\"index\",this),e(this.value,\"value\",this)},s.prototype.map=function(e){return new s(this._ifNode(e(this.object,\"object\",this)),this.index?this._ifNode(e(this.index,\"index\",this)):null,this._ifNode(e(this.value,\"value\",this)))},s.prototype.clone=function(){return new s(this.object,this.index,this.value)},s.prototype._toString=function(e){var t=this.object.toString(e),n=this.index?this.index.toString(e):\"\",r=this.value.toString(e);return c(this,e&&e.parenthesis)&&(r=\"(\"+r+\")\"),t+n+\" = \"+r},s.prototype.toJSON=function(){return{mathjs:\"AssignmentNode\",object:this.object,index:this.index,value:this.value}},s.fromJSON=function(e){return new s(e.object,e.index,e.value)},s.prototype.toHTML=function(e){var t=this.object.toHTML(e),n=this.index?this.index.toHTML(e):\"\",r=this.value.toHTML(e);return c(this,e&&e.parenthesis)&&(r='<span class=\"math-paranthesis math-round-parenthesis\">(</span>'+r+'<span class=\"math-paranthesis math-round-parenthesis\">)</span>'),t+n+'<span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>'+r},s.prototype._toTex=function(e){var t=this.object.toTex(e),n=this.index?this.index.toTex(e):\"\",r=this.value.toTex(e);return c(this,e&&e.parenthesis)&&(r=\"\\\\left(\".concat(r,\"\\\\right)\")),t+n+\":=\"+r},s}),{isClass:!0,isNode:!0});t.createAssignmentNode=r})),Er=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBlockNode=void 0;var n=[\"ResultSet\",\"Node\"],r=(0,h.factory)(\"BlockNode\",n,(function(e){var t=e.ResultSet,n=e.Node;function r(e){if(!(this instanceof r))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!Array.isArray(e))throw new Error(\"Array expected\");this.blocks=e.map((function(e){var t=e&&e.node,n=!e||void 0===e.visible||e.visible;if(!(0,i.isNode)(t))throw new TypeError('Property \"node\" must be a Node');if(\"boolean\"!=typeof n)throw new TypeError('Property \"visible\" must be a boolean');return{node:t,visible:n}}))}return r.prototype=new n,r.prototype.type=\"BlockNode\",r.prototype.isBlockNode=!0,r.prototype._compile=function(e,n){var r=(0,m.map)(this.blocks,(function(t){return{evaluate:t.node._compile(e,n),visible:t.visible}}));return function(e,n,i){var a=[];return(0,m.forEach)(r,(function(t){var r=t.evaluate(e,n,i);t.visible&&a.push(r)})),new t(a)}},r.prototype.forEach=function(e){for(var t=0;t<this.blocks.length;t++)e(this.blocks[t].node,\"blocks[\"+t+\"].node\",this)},r.prototype.map=function(e){for(var t=[],n=0;n<this.blocks.length;n++){var i=this.blocks[n],a=this._ifNode(e(i.node,\"blocks[\"+n+\"].node\",this));t[n]={node:a,visible:i.visible}}return new r(t)},r.prototype.clone=function(){return new r(this.blocks.map((function(e){return{node:e.node,visible:e.visible}})))},r.prototype._toString=function(e){return this.blocks.map((function(t){return t.node.toString(e)+(t.visible?\"\":\";\")})).join(\"\\n\")},r.prototype.toJSON=function(){return{mathjs:\"BlockNode\",blocks:this.blocks}},r.fromJSON=function(e){return new r(e.blocks)},r.prototype.toHTML=function(e){return this.blocks.map((function(t){return t.node.toHTML(e)+(t.visible?\"\":'<span class=\"math-separator\">;</span>')})).join('<span class=\"math-separator\"><br /></span>')},r.prototype._toTex=function(e){return this.blocks.map((function(t){return t.node.toTex(e)+(t.visible?\"\":\";\")})).join(\"\\\\;\\\\;\\n\")},r}),{isClass:!0,isNode:!0});t.createBlockNode=r})),Cr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createConditionalNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"ConditionalNode\",n,(function(e){var t=e.Node;function n(e,t,r){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!(0,i.isNode)(e))throw new TypeError(\"Parameter condition must be a Node\");if(!(0,i.isNode)(t))throw new TypeError(\"Parameter trueExpr must be a Node\");if(!(0,i.isNode)(r))throw new TypeError(\"Parameter falseExpr must be a Node\");this.condition=e,this.trueExpr=t,this.falseExpr=r}return n.prototype=new t,n.prototype.type=\"ConditionalNode\",n.prototype.isConditionalNode=!0,n.prototype._compile=function(e,t){var n=this.condition._compile(e,t),r=this.trueExpr._compile(e,t),a=this.falseExpr._compile(e,t);return function(e,t,o){return function(e){if(\"number\"==typeof e||\"boolean\"==typeof e||\"string\"==typeof e)return!!e;if(e){if((0,i.isBigNumber)(e))return!e.isZero();if((0,i.isComplex)(e))return!(!e.re&&!e.im);if((0,i.isUnit)(e))return!!e.value}if(null==e)return!1;throw new TypeError('Unsupported type of condition \"'+(0,i.typeOf)(e)+'\"')}(n(e,t,o))?r(e,t,o):a(e,t,o)}},n.prototype.forEach=function(e){e(this.condition,\"condition\",this),e(this.trueExpr,\"trueExpr\",this),e(this.falseExpr,\"falseExpr\",this)},n.prototype.map=function(e){return new n(this._ifNode(e(this.condition,\"condition\",this)),this._ifNode(e(this.trueExpr,\"trueExpr\",this)),this._ifNode(e(this.falseExpr,\"falseExpr\",this)))},n.prototype.clone=function(){return new n(this.condition,this.trueExpr,this.falseExpr)},n.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=(0,jr.getPrecedence)(this,t),r=this.condition.toString(e),i=(0,jr.getPrecedence)(this.condition,t);(\"all\"===t||\"OperatorNode\"===this.condition.type||null!==i&&i<=n)&&(r=\"(\"+r+\")\");var a=this.trueExpr.toString(e),o=(0,jr.getPrecedence)(this.trueExpr,t);(\"all\"===t||\"OperatorNode\"===this.trueExpr.type||null!==o&&o<=n)&&(a=\"(\"+a+\")\");var s=this.falseExpr.toString(e),c=(0,jr.getPrecedence)(this.falseExpr,t);return(\"all\"===t||\"OperatorNode\"===this.falseExpr.type||null!==c&&c<=n)&&(s=\"(\"+s+\")\"),r+\" ? \"+a+\" : \"+s},n.prototype.toJSON=function(){return{mathjs:\"ConditionalNode\",condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}},n.fromJSON=function(e){return new n(e.condition,e.trueExpr,e.falseExpr)},n.prototype.toHTML=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=(0,jr.getPrecedence)(this,t),r=this.condition.toHTML(e),i=(0,jr.getPrecedence)(this.condition,t);(\"all\"===t||\"OperatorNode\"===this.condition.type||null!==i&&i<=n)&&(r='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+r+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>');var a=this.trueExpr.toHTML(e),o=(0,jr.getPrecedence)(this.trueExpr,t);(\"all\"===t||\"OperatorNode\"===this.trueExpr.type||null!==o&&o<=n)&&(a='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+a+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>');var s=this.falseExpr.toHTML(e),c=(0,jr.getPrecedence)(this.falseExpr,t);return(\"all\"===t||\"OperatorNode\"===this.falseExpr.type||null!==c&&c<=n)&&(s='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+s+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),r+'<span class=\"math-operator math-conditional-operator\">?</span>'+a+'<span class=\"math-operator math-conditional-operator\">:</span>'+s},n.prototype._toTex=function(e){return\"\\\\begin{cases} {\"+this.trueExpr.toTex(e)+\"}, &\\\\quad{\\\\text{if }\\\\;\"+this.condition.toTex(e)+\"}\\\\\\\\{\"+this.falseExpr.toTex(e)+\"}, &\\\\quad{\\\\text{otherwise}}\\\\end{cases}\"},n}),{isClass:!0,isNode:!0});t.createConditionalNode=r})),Tr=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},kr={\"{\":\"\\\\{\",\"}\":\"\\\\}\",\"\\\\\":\"\\\\textbackslash{}\",\"#\":\"\\\\#\",$:\"\\\\$\",\"%\":\"\\\\%\",\"&\":\"\\\\&\",\"^\":\"\\\\textasciicircum{}\",_:\"\\\\_\",\"~\":\"\\\\textasciitilde{}\"},Ir={\"–\":\"\\\\--\",\"—\":\"\\\\---\",\" \":\"~\",\"\\t\":\"\\\\qquad{}\",\"\\r\\n\":\"\\\\newline{}\",\"\\n\":\"\\\\newline{}\"},Br=function(e,t){return Tr({},e,t)},zr=function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.preserveFormatting,r=void 0!==n&&n,i=t.escapeMapFn,a=void 0===i?Br:i,o=String(e),s=\"\",c=a(Tr({},kr),r?Tr({},Ir):{}),u=Object.keys(c),l=function(){var e=!1;u.forEach((function(t,n){e||o.length>=t.length&&o.slice(0,t.length)===t&&(s+=c[u[n]],o=o.slice(t.length,o.length),e=!0)})),e||(s+=o.slice(0,1),o=o.slice(1,o.length))};o;)l();return s},Rr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.escapeLatex=u,t.toSymbol=function(e,t){if(t=void 0!==t&&t)return(0,a.hasOwnProperty)(c,e)?c[e]:\"\\\\mathrm{\"+u(e)+\"}\";if((0,a.hasOwnProperty)(i,e))return i[e];return u(e)},t.defaultTemplate=t.latexFunctions=t.latexOperators=t.latexSymbols=void 0;var n,r=(n=zr)&&n.__esModule?n:{default:n};var i={Alpha:\"A\",alpha:\"\\\\alpha\",Beta:\"B\",beta:\"\\\\beta\",Gamma:\"\\\\Gamma\",gamma:\"\\\\gamma\",Delta:\"\\\\Delta\",delta:\"\\\\delta\",Epsilon:\"E\",epsilon:\"\\\\epsilon\",varepsilon:\"\\\\varepsilon\",Zeta:\"Z\",zeta:\"\\\\zeta\",Eta:\"H\",eta:\"\\\\eta\",Theta:\"\\\\Theta\",theta:\"\\\\theta\",vartheta:\"\\\\vartheta\",Iota:\"I\",iota:\"\\\\iota\",Kappa:\"K\",kappa:\"\\\\kappa\",varkappa:\"\\\\varkappa\",Lambda:\"\\\\Lambda\",lambda:\"\\\\lambda\",Mu:\"M\",mu:\"\\\\mu\",Nu:\"N\",nu:\"\\\\nu\",Xi:\"\\\\Xi\",xi:\"\\\\xi\",Omicron:\"O\",omicron:\"o\",Pi:\"\\\\Pi\",pi:\"\\\\pi\",varpi:\"\\\\varpi\",Rho:\"P\",rho:\"\\\\rho\",varrho:\"\\\\varrho\",Sigma:\"\\\\Sigma\",sigma:\"\\\\sigma\",varsigma:\"\\\\varsigma\",Tau:\"T\",tau:\"\\\\tau\",Upsilon:\"\\\\Upsilon\",upsilon:\"\\\\upsilon\",Phi:\"\\\\Phi\",phi:\"\\\\phi\",varphi:\"\\\\varphi\",Chi:\"X\",chi:\"\\\\chi\",Psi:\"\\\\Psi\",psi:\"\\\\psi\",Omega:\"\\\\Omega\",omega:\"\\\\omega\",true:\"\\\\mathrm{True}\",false:\"\\\\mathrm{False}\",i:\"i\",inf:\"\\\\infty\",Inf:\"\\\\infty\",infinity:\"\\\\infty\",Infinity:\"\\\\infty\",oo:\"\\\\infty\",lim:\"\\\\lim\",undefined:\"\\\\mathbf{?}\"};t.latexSymbols=i;var o={transpose:\"^\\\\top\",ctranspose:\"^H\",factorial:\"!\",pow:\"^\",dotPow:\".^\\\\wedge\",unaryPlus:\"+\",unaryMinus:\"-\",bitNot:\"\\\\~\",not:\"\\\\neg\",multiply:\"\\\\cdot\",divide:\"\\\\frac\",dotMultiply:\".\\\\cdot\",dotDivide:\".:\",mod:\"\\\\mod\",add:\"+\",subtract:\"-\",to:\"\\\\rightarrow\",leftShift:\"<<\",rightArithShift:\">>\",rightLogShift:\">>>\",equal:\"=\",unequal:\"\\\\neq\",smaller:\"<\",larger:\">\",smallerEq:\"\\\\leq\",largerEq:\"\\\\geq\",bitAnd:\"\\\\&\",bitXor:\"\\\\underline{|}\",bitOr:\"|\",and:\"\\\\wedge\",xor:\"\\\\veebar\",or:\"\\\\vee\"};t.latexOperators=o;var s={abs:{1:\"\\\\left|${args[0]}\\\\right|\"},add:{2:\"\\\\left(${args[0]}\".concat(o.add,\"${args[1]}\\\\right)\")},cbrt:{1:\"\\\\sqrt[3]{${args[0]}}\"},ceil:{1:\"\\\\left\\\\lceil${args[0]}\\\\right\\\\rceil\"},cube:{1:\"\\\\left(${args[0]}\\\\right)^3\"},divide:{2:\"\\\\frac{${args[0]}}{${args[1]}}\"},dotDivide:{2:\"\\\\left(${args[0]}\".concat(o.dotDivide,\"${args[1]}\\\\right)\")},dotMultiply:{2:\"\\\\left(${args[0]}\".concat(o.dotMultiply,\"${args[1]}\\\\right)\")},dotPow:{2:\"\\\\left(${args[0]}\".concat(o.dotPow,\"${args[1]}\\\\right)\")},exp:{1:\"\\\\exp\\\\left(${args[0]}\\\\right)\"},expm1:\"\\\\left(e\".concat(o.pow,\"{${args[0]}}-1\\\\right)\"),fix:{1:\"\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)\"},floor:{1:\"\\\\left\\\\lfloor${args[0]}\\\\right\\\\rfloor\"},gcd:\"\\\\gcd\\\\left(${args}\\\\right)\",hypot:\"\\\\hypot\\\\left(${args}\\\\right)\",log:{1:\"\\\\ln\\\\left(${args[0]}\\\\right)\",2:\"\\\\log_{${args[1]}}\\\\left(${args[0]}\\\\right)\"},log10:{1:\"\\\\log_{10}\\\\left(${args[0]}\\\\right)\"},log1p:{1:\"\\\\ln\\\\left(${args[0]}+1\\\\right)\",2:\"\\\\log_{${args[1]}}\\\\left(${args[0]}+1\\\\right)\"},log2:\"\\\\log_{2}\\\\left(${args[0]}\\\\right)\",mod:{2:\"\\\\left(${args[0]}\".concat(o.mod,\"${args[1]}\\\\right)\")},multiply:{2:\"\\\\left(${args[0]}\".concat(o.multiply,\"${args[1]}\\\\right)\")},norm:{1:\"\\\\left\\\\|${args[0]}\\\\right\\\\|\",2:void 0},nthRoot:{2:\"\\\\sqrt[${args[1]}]{${args[0]}}\"},nthRoots:{2:\"\\\\{y : $y^{args[1]} = {${args[0]}}\\\\}\"},pow:{2:\"\\\\left(${args[0]}\\\\right)\".concat(o.pow,\"{${args[1]}}\")},round:{1:\"\\\\left\\\\lfloor${args[0]}\\\\right\\\\rceil\",2:void 0},sign:{1:\"\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)\"},sqrt:{1:\"\\\\sqrt{${args[0]}}\"},square:{1:\"\\\\left(${args[0]}\\\\right)^2\"},subtract:{2:\"\\\\left(${args[0]}\".concat(o.subtract,\"${args[1]}\\\\right)\")},unaryMinus:{1:\"\".concat(o.unaryMinus,\"\\\\left(${args[0]}\\\\right)\")},unaryPlus:{1:\"\".concat(o.unaryPlus,\"\\\\left(${args[0]}\\\\right)\")},bitAnd:{2:\"\\\\left(${args[0]}\".concat(o.bitAnd,\"${args[1]}\\\\right)\")},bitNot:{1:o.bitNot+\"\\\\left(${args[0]}\\\\right)\"},bitOr:{2:\"\\\\left(${args[0]}\".concat(o.bitOr,\"${args[1]}\\\\right)\")},bitXor:{2:\"\\\\left(${args[0]}\".concat(o.bitXor,\"${args[1]}\\\\right)\")},leftShift:{2:\"\\\\left(${args[0]}\".concat(o.leftShift,\"${args[1]}\\\\right)\")},rightArithShift:{2:\"\\\\left(${args[0]}\".concat(o.rightArithShift,\"${args[1]}\\\\right)\")},rightLogShift:{2:\"\\\\left(${args[0]}\".concat(o.rightLogShift,\"${args[1]}\\\\right)\")},bellNumbers:{1:\"\\\\mathrm{B}_{${args[0]}}\"},catalan:{1:\"\\\\mathrm{C}_{${args[0]}}\"},stirlingS2:{2:\"\\\\mathrm{S}\\\\left(${args}\\\\right)\"},arg:{1:\"\\\\arg\\\\left(${args[0]}\\\\right)\"},conj:{1:\"\\\\left(${args[0]}\\\\right)^*\"},im:{1:\"\\\\Im\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace\"},re:{1:\"\\\\Re\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace\"},and:{2:\"\\\\left(${args[0]}\".concat(o.and,\"${args[1]}\\\\right)\")},not:{1:o.not+\"\\\\left(${args[0]}\\\\right)\"},or:{2:\"\\\\left(${args[0]}\".concat(o.or,\"${args[1]}\\\\right)\")},xor:{2:\"\\\\left(${args[0]}\".concat(o.xor,\"${args[1]}\\\\right)\")},cross:{2:\"\\\\left(${args[0]}\\\\right)\\\\times\\\\left(${args[1]}\\\\right)\"},ctranspose:{1:\"\\\\left(${args[0]}\\\\right)\".concat(o.ctranspose)},det:{1:\"\\\\det\\\\left(${args[0]}\\\\right)\"},dot:{2:\"\\\\left(${args[0]}\\\\cdot${args[1]}\\\\right)\"},expm:{1:\"\\\\exp\\\\left(${args[0]}\\\\right)\"},inv:{1:\"\\\\left(${args[0]}\\\\right)^{-1}\"},sqrtm:{1:\"{${args[0]}}\".concat(o.pow,\"{\\\\frac{1}{2}}\")},trace:{1:\"\\\\mathrm{tr}\\\\left(${args[0]}\\\\right)\"},transpose:{1:\"\\\\left(${args[0]}\\\\right)\".concat(o.transpose)},combinations:{2:\"\\\\binom{${args[0]}}{${args[1]}}\"},combinationsWithRep:{2:\"\\\\left(\\\\!\\\\!{\\\\binom{${args[0]}}{${args[1]}}}\\\\!\\\\!\\\\right)\"},factorial:{1:\"\\\\left(${args[0]}\\\\right)\".concat(o.factorial)},gamma:{1:\"\\\\Gamma\\\\left(${args[0]}\\\\right)\"},equal:{2:\"\\\\left(${args[0]}\".concat(o.equal,\"${args[1]}\\\\right)\")},larger:{2:\"\\\\left(${args[0]}\".concat(o.larger,\"${args[1]}\\\\right)\")},largerEq:{2:\"\\\\left(${args[0]}\".concat(o.largerEq,\"${args[1]}\\\\right)\")},smaller:{2:\"\\\\left(${args[0]}\".concat(o.smaller,\"${args[1]}\\\\right)\")},smallerEq:{2:\"\\\\left(${args[0]}\".concat(o.smallerEq,\"${args[1]}\\\\right)\")},unequal:{2:\"\\\\left(${args[0]}\".concat(o.unequal,\"${args[1]}\\\\right)\")},erf:{1:\"erf\\\\left(${args[0]}\\\\right)\"},max:\"\\\\max\\\\left(${args}\\\\right)\",min:\"\\\\min\\\\left(${args}\\\\right)\",variance:\"\\\\mathrm{Var}\\\\left(${args}\\\\right)\",acos:{1:\"\\\\cos^{-1}\\\\left(${args[0]}\\\\right)\"},acosh:{1:\"\\\\cosh^{-1}\\\\left(${args[0]}\\\\right)\"},acot:{1:\"\\\\cot^{-1}\\\\left(${args[0]}\\\\right)\"},acoth:{1:\"\\\\coth^{-1}\\\\left(${args[0]}\\\\right)\"},acsc:{1:\"\\\\csc^{-1}\\\\left(${args[0]}\\\\right)\"},acsch:{1:\"\\\\mathrm{csch}^{-1}\\\\left(${args[0]}\\\\right)\"},asec:{1:\"\\\\sec^{-1}\\\\left(${args[0]}\\\\right)\"},asech:{1:\"\\\\mathrm{sech}^{-1}\\\\left(${args[0]}\\\\right)\"},asin:{1:\"\\\\sin^{-1}\\\\left(${args[0]}\\\\right)\"},asinh:{1:\"\\\\sinh^{-1}\\\\left(${args[0]}\\\\right)\"},atan:{1:\"\\\\tan^{-1}\\\\left(${args[0]}\\\\right)\"},atan2:{2:\"\\\\mathrm{atan2}\\\\left(${args}\\\\right)\"},atanh:{1:\"\\\\tanh^{-1}\\\\left(${args[0]}\\\\right)\"},cos:{1:\"\\\\cos\\\\left(${args[0]}\\\\right)\"},cosh:{1:\"\\\\cosh\\\\left(${args[0]}\\\\right)\"},cot:{1:\"\\\\cot\\\\left(${args[0]}\\\\right)\"},coth:{1:\"\\\\coth\\\\left(${args[0]}\\\\right)\"},csc:{1:\"\\\\csc\\\\left(${args[0]}\\\\right)\"},csch:{1:\"\\\\mathrm{csch}\\\\left(${args[0]}\\\\right)\"},sec:{1:\"\\\\sec\\\\left(${args[0]}\\\\right)\"},sech:{1:\"\\\\mathrm{sech}\\\\left(${args[0]}\\\\right)\"},sin:{1:\"\\\\sin\\\\left(${args[0]}\\\\right)\"},sinh:{1:\"\\\\sinh\\\\left(${args[0]}\\\\right)\"},tan:{1:\"\\\\tan\\\\left(${args[0]}\\\\right)\"},tanh:{1:\"\\\\tanh\\\\left(${args[0]}\\\\right)\"},to:{2:\"\\\\left(${args[0]}\".concat(o.to,\"${args[1]}\\\\right)\")},numeric:function(e,t){return e.args[0].toTex()},number:{0:\"0\",1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)\"},string:{0:'\\\\mathtt{\"\"}',1:\"\\\\mathrm{string}\\\\left(${args[0]}\\\\right)\"},bignumber:{0:\"0\",1:\"\\\\left(${args[0]}\\\\right)\"},complex:{0:\"0\",1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(\\\\left(${args[0]}\\\\right)+\".concat(i.i,\"\\\\cdot\\\\left(${args[1]}\\\\right)\\\\right)\")},matrix:{0:\"\\\\begin{bmatrix}\\\\end{bmatrix}\",1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(${args[0]}\\\\right)\"},sparse:{0:\"\\\\begin{bsparse}\\\\end{bsparse}\",1:\"\\\\left(${args[0]}\\\\right)\"},unit:{1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)\"}};t.latexFunctions=s;t.defaultTemplate=\"\\\\mathrm{${name}}\\\\left(${args}\\\\right)\";var c={deg:\"^\\\\circ\"};function u(e){return(0,r.default)(e,{preserveFormatting:!0})}})),qr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createConstantNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"ConstantNode\",n,(function(e){var t=e.Node;function n(e){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");this.value=e}return n.prototype=new t,n.prototype.type=\"ConstantNode\",n.prototype.isConstantNode=!0,n.prototype._compile=function(e,t){var n=this.value;return function(){return n}},n.prototype.forEach=function(e){},n.prototype.map=function(e){return this.clone()},n.prototype.clone=function(){return new n(this.value)},n.prototype._toString=function(e){return(0,d.format)(this.value,e)},n.prototype.toHTML=function(e){var t=this._toString(e);switch((0,i.typeOf)(this.value)){case\"number\":case\"BigNumber\":case\"Fraction\":return'<span class=\"math-number\">'+t+\"</span>\";case\"string\":return'<span class=\"math-string\">'+t+\"</span>\";case\"boolean\":return'<span class=\"math-boolean\">'+t+\"</span>\";case\"null\":return'<span class=\"math-null-symbol\">'+t+\"</span>\";case\"undefined\":return'<span class=\"math-undefined\">'+t+\"</span>\";default:return'<span class=\"math-symbol\">'+t+\"</span>\"}},n.prototype.toJSON=function(){return{mathjs:\"ConstantNode\",value:this.value}},n.fromJSON=function(e){return new n(e.value)},n.prototype._toTex=function(e){var t=this._toString(e);switch((0,i.typeOf)(this.value)){case\"string\":return\"\\\\mathtt{\"+(0,Rr.escapeLatex)(t)+\"}\";case\"number\":case\"BigNumber\":if(!isFinite(this.value))return this.value.valueOf()<0?\"-\\\\infty\":\"\\\\infty\";var n=t.toLowerCase().indexOf(\"e\");return-1!==n?t.substring(0,n)+\"\\\\cdot10^{\"+t.substring(n+1)+\"}\":t;case\"Fraction\":return this.value.toLatex();default:return t}},n}),{isClass:!0,isNode:!0});t.createConstantNode=r})),Fr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFunctionAssignmentNode=void 0;var n=[\"typed\",\"Node\"],r=(0,h.factory)(\"FunctionAssignmentNode\",n,(function(e){var t=e.typed,n=e.Node;function r(e,t,n){if(!(this instanceof r))throw new SyntaxError(\"Constructor must be called with the new operator\");if(\"string\"!=typeof e)throw new TypeError('String expected for parameter \"name\"');if(!Array.isArray(t))throw new TypeError('Array containing strings or objects expected for parameter \"params\"');if(!(0,i.isNode)(n))throw new TypeError('Node expected for parameter \"expr\"');if(e in _r.keywords)throw new Error('Illegal function name, \"'+e+'\" is a reserved keyword');this.name=e,this.params=t.map((function(e){return e&&e.name||e})),this.types=t.map((function(e){return e&&e.type||\"any\"})),this.expr=n}function a(e,t){var n=(0,jr.getPrecedence)(e,t),r=(0,jr.getPrecedence)(e.expr,t);return\"all\"===t||null!==r&&r<=n}return r.prototype=new n,r.prototype.type=\"FunctionAssignmentNode\",r.prototype.isFunctionAssignmentNode=!0,r.prototype._compile=function(e,n){var r=Object.create(n);(0,m.forEach)(this.params,(function(e){r[e]=!0}));var i=this.expr._compile(e,r),a=this.name,o=this.params,s=(0,m.join)(this.types,\",\"),c=a+\"(\"+(0,m.join)(this.params,\", \")+\")\";return function(e,n,r){var u={};u[s]=function(){for(var t=Object.create(n),a=0;a<o.length;a++)t[o[a]]=arguments[a];return i(e,t,r)};var l=t(a,u);return l.syntax=c,(0,St.setSafeProperty)(e,a,l),l}},r.prototype.forEach=function(e){e(this.expr,\"expr\",this)},r.prototype.map=function(e){var t=this._ifNode(e(this.expr,\"expr\",this));return new r(this.name,this.params.slice(0),t)},r.prototype.clone=function(){return new r(this.name,this.params.slice(0),this.expr)},r.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=this.expr.toString(e);return a(this,t)&&(n=\"(\"+n+\")\"),this.name+\"(\"+this.params.join(\", \")+\") = \"+n},r.prototype.toJSON=function(){var e=this.types;return{mathjs:\"FunctionAssignmentNode\",name:this.name,params:this.params.map((function(t,n){return{name:t,type:e[n]}})),expr:this.expr}},r.fromJSON=function(e){return new r(e.name,e.params,e.expr)},r.prototype.toHTML=function(e){for(var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=[],r=0;r<this.params.length;r++)n.push('<span class=\"math-symbol math-parameter\">'+(0,d.escape)(this.params[r])+\"</span>\");var i=this.expr.toHTML(e);return a(this,t)&&(i='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+i+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),'<span class=\"math-function\">'+(0,d.escape)(this.name)+'</span><span class=\"math-parenthesis math-round-parenthesis\">(</span>'+n.join('<span class=\"math-separator\">,</span>')+'<span class=\"math-parenthesis math-round-parenthesis\">)</span><span class=\"math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator\">=</span>'+i},r.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=this.expr.toTex(e);return a(this,t)&&(n=\"\\\\left(\".concat(n,\"\\\\right)\")),\"\\\\mathrm{\"+this.name+\"}\\\\left(\"+this.params.map(Rr.toSymbol).join(\",\")+\"\\\\right):=\"+n},r}),{isClass:!0,isNode:!0});t.createFunctionAssignmentNode=r})),Ur=t((function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIndexNode=void 0;var a=[\"Range\",\"Node\",\"size\"],o=(0,h.factory)(\"IndexNode\",a,(function(e){var t=e.Range,r=e.Node,a=e.size;function o(e,t){if(!(this instanceof o))throw new SyntaxError(\"Constructor must be called with the new operator\");if(this.dimensions=e,this.dotNotation=t||!1,!Array.isArray(e)||!e.every(i.isNode))throw new TypeError('Array containing Nodes expected for parameter \"dimensions\"');if(this.dotNotation&&!this.isObjectProperty())throw new Error(\"dotNotation only applicable for object properties\")}function s(e,n,r){return new t((0,i.isBigNumber)(e)?e.toNumber():e,(0,i.isBigNumber)(n)?n.toNumber():n,(0,i.isBigNumber)(r)?r.toNumber():r)}return o.prototype=new r,o.prototype.type=\"IndexNode\",o.prototype.isIndexNode=!0,o.prototype._compile=function(e,t){var r=(0,m.map)(this.dimensions,(function(n,r){if((0,i.isRangeNode)(n)){if(n.needsEnd()){var o=Object.create(t);o.end=!0;var c=n.start._compile(e,o),u=n.end._compile(e,o),l=n.step?n.step._compile(e,o):function(){return 1};return function(e,t,n){var i=a(n).valueOf(),o=Object.create(t);return o.end=i[r],s(c(e,o,n),u(e,o,n),l(e,o,n))}}var d=n.start._compile(e,t),f=n.end._compile(e,t),p=n.step?n.step._compile(e,t):function(){return 1};return function(e,t,n){return s(d(e,t,n),f(e,t,n),p(e,t,n))}}if((0,i.isSymbolNode)(n)&&\"end\"===n.name){var m=Object.create(t);m.end=!0;var h=n._compile(e,m);return function(e,t,n){var i=a(n).valueOf(),o=Object.create(t);return o.end=i[r],h(e,o,n)}}var y=n._compile(e,t);return function(e,t,n){return y(e,t,n)}})),o=(0,St.getSafeProperty)(e,\"index\");return function(e,t,i){var a=(0,m.map)(r,(function(n){return n(e,t,i)}));return o.apply(void 0,n(a))}},o.prototype.forEach=function(e){for(var t=0;t<this.dimensions.length;t++)e(this.dimensions[t],\"dimensions[\"+t+\"]\",this)},o.prototype.map=function(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this._ifNode(e(this.dimensions[n],\"dimensions[\"+n+\"]\",this));return new o(t,this.dotNotation)},o.prototype.clone=function(){return new o(this.dimensions.slice(0),this.dotNotation)},o.prototype.isObjectProperty=function(){return 1===this.dimensions.length&&(0,i.isConstantNode)(this.dimensions[0])&&\"string\"==typeof this.dimensions[0].value},o.prototype.getObjectProperty=function(){return this.isObjectProperty()?this.dimensions[0].value:null},o.prototype._toString=function(e){return this.dotNotation?\".\"+this.getObjectProperty():\"[\"+this.dimensions.join(\", \")+\"]\"},o.prototype.toJSON=function(){return{mathjs:\"IndexNode\",dimensions:this.dimensions,dotNotation:this.dotNotation}},o.fromJSON=function(e){return new o(e.dimensions,e.dotNotation)},o.prototype.toHTML=function(e){for(var t=[],n=0;n<this.dimensions.length;n++)t[n]=this.dimensions[n].toHTML();return this.dotNotation?'<span class=\"math-operator math-accessor-operator\">.</span><span class=\"math-symbol math-property\">'+(0,d.escape)(this.getObjectProperty())+\"</span>\":'<span class=\"math-parenthesis math-square-parenthesis\">[</span>'+t.join('<span class=\"math-separator\">,</span>')+'<span class=\"math-parenthesis math-square-parenthesis\">]</span>'},o.prototype._toTex=function(e){var t=this.dimensions.map((function(t){return t.toTex(e)}));return this.dotNotation?\".\"+this.getObjectProperty():\"_{\"+t.join(\",\")+\"}\"},o}),{isClass:!0,isNode:!0});t.createIndexNode=o})),Lr=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createObjectNode=void 0;var r=[\"Node\"],o=(0,h.factory)(\"ObjectNode\",r,(function(e){var t=e.Node;function r(e){if(!(this instanceof r))throw new SyntaxError(\"Constructor must be called with the new operator\");if(this.properties=e||{},e&&(\"object\"!==n(e)||!Object.keys(e).every((function(t){return(0,i.isNode)(e[t])}))))throw new TypeError(\"Object containing Nodes expected\")}return r.prototype=new t,r.prototype.type=\"ObjectNode\",r.prototype.isObjectNode=!0,r.prototype._compile=function(e,t){var n={};for(var r in this.properties)if((0,a.hasOwnProperty)(this.properties,r)){var i=(0,d.stringify)(r),o=JSON.parse(i);if(!(0,St.isSafeProperty)(this.properties,o))throw new Error('No access to property \"'+o+'\"');n[o]=this.properties[r]._compile(e,t)}return function(e,t,r){var i={};for(var o in n)(0,a.hasOwnProperty)(n,o)&&(i[o]=n[o](e,t,r));return i}},r.prototype.forEach=function(e){for(var t in this.properties)(0,a.hasOwnProperty)(this.properties,t)&&e(this.properties[t],\"properties[\"+(0,d.stringify)(t)+\"]\",this)},r.prototype.map=function(e){var t={};for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&(t[n]=this._ifNode(e(this.properties[n],\"properties[\"+(0,d.stringify)(n)+\"]\",this)));return new r(t)},r.prototype.clone=function(){var e={};for(var t in this.properties)(0,a.hasOwnProperty)(this.properties,t)&&(e[t]=this.properties[t]);return new r(e)},r.prototype._toString=function(e){var t=[];for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&t.push((0,d.stringify)(n)+\": \"+this.properties[n].toString(e));return\"{\"+t.join(\", \")+\"}\"},r.prototype.toJSON=function(){return{mathjs:\"ObjectNode\",properties:this.properties}},r.fromJSON=function(e){return new r(e.properties)},r.prototype.toHTML=function(e){var t=[];for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&t.push('<span class=\"math-symbol math-property\">'+(0,d.escape)(n)+'</span><span class=\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\">:</span>'+this.properties[n].toHTML(e));return'<span class=\"math-parenthesis math-curly-parenthesis\">{</span>'+t.join('<span class=\"math-separator\">,</span>')+'<span class=\"math-parenthesis math-curly-parenthesis\">}</span>'},r.prototype._toTex=function(e){var t=[];for(var n in this.properties)(0,a.hasOwnProperty)(this.properties,n)&&t.push(\"\\\\mathbf{\"+n+\":} & \"+this.properties[n].toTex(e)+\"\\\\\\\\\");return\"\\\\left\\\\{\\\\begin{array}{ll}\".concat(t.join(\"\\n\"),\"\\\\end{array}\\\\right\\\\}\")},r}),{isClass:!0,isNode:!0});t.createObjectNode=o})),Hr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createOperatorNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"OperatorNode\",n,(function(e){var t=e.Node;function n(e,t,r,a){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(\"string\"!=typeof e)throw new TypeError('string expected for parameter \"op\"');if(\"string\"!=typeof t)throw new TypeError('string expected for parameter \"fn\"');if(!Array.isArray(r)||!r.every(i.isNode))throw new TypeError('Array containing Nodes expected for parameter \"args\"');this.implicit=!0===a,this.op=e,this.fn=t,this.args=r||[]}function r(e,t,n,r,i){var a,o=(0,jr.getPrecedence)(e,t),s=(0,jr.getAssociativity)(e,t);if(\"all\"===t||r.length>2&&\"OperatorNode:add\"!==e.getIdentifier()&&\"OperatorNode:multiply\"!==e.getIdentifier())return r.map((function(e){switch(e.getContent().type){case\"ArrayNode\":case\"ConstantNode\":case\"SymbolNode\":case\"ParenthesisNode\":return!1;default:return!0}}));switch(r.length){case 0:a=[];break;case 1:var c=(0,jr.getPrecedence)(r[0],t);if(i&&null!==c){var u,l;if(\"keep\"===t?(u=r[0].getIdentifier(),l=e.getIdentifier()):(u=r[0].getContent().getIdentifier(),l=e.getContent().getIdentifier()),!1===jr.properties[o][l].latexLeftParens){a=[!1];break}if(!1===jr.properties[c][u].latexParens){a=[!1];break}}if(null===c){a=[!1];break}if(c<=o){a=[!0];break}a=[!1];break;case 2:var d,f,p=(0,jr.getPrecedence)(r[0],t),m=(0,jr.isAssociativeWith)(e,r[0],t);d=null!==p&&(p===o&&\"right\"===s&&!m||p<o);var h,y,v,g=(0,jr.getPrecedence)(r[1],t),b=(0,jr.isAssociativeWith)(e,r[1],t);if(f=null!==g&&(g===o&&\"left\"===s&&!b||g<o),i)\"keep\"===t?(h=e.getIdentifier(),y=e.args[0].getIdentifier(),v=e.args[1].getIdentifier()):(h=e.getContent().getIdentifier(),y=e.args[0].getContent().getIdentifier(),v=e.args[1].getContent().getIdentifier()),null!==p&&(!1===jr.properties[o][h].latexLeftParens&&(d=!1),!1===jr.properties[p][y].latexParens&&(d=!1)),null!==g&&(!1===jr.properties[o][h].latexRightParens&&(f=!1),!1===jr.properties[g][v].latexParens&&(f=!1));a=[d,f];break;default:\"OperatorNode:add\"!==e.getIdentifier()&&\"OperatorNode:multiply\"!==e.getIdentifier()||(a=r.map((function(n){var r=(0,jr.getPrecedence)(n,t),i=(0,jr.isAssociativeWith)(e,n,t),a=(0,jr.getAssociativity)(n,t);return null!==r&&(o===r&&s===a&&!i||r<o)})))}return r.length>=2&&\"OperatorNode:multiply\"===e.getIdentifier()&&e.implicit&&\"auto\"===t&&\"hide\"===n&&(a=r.map((function(e,t){var n=\"ParenthesisNode\"===e.getIdentifier();return!(!a[t]&&!n)}))),a}return n.prototype=new t,n.prototype.type=\"OperatorNode\",n.prototype.isOperatorNode=!0,n.prototype._compile=function(e,t){if(\"string\"!=typeof this.fn||!(0,St.isSafeMethod)(e,this.fn))throw e[this.fn]?new Error('No access to function \"'+this.fn+'\"'):new Error(\"Function \"+this.fn+' missing in provided namespace \"math\"');var n=(0,St.getSafeProperty)(e,this.fn),r=(0,m.map)(this.args,(function(n){return n._compile(e,t)}));if(1===r.length){var i=r[0];return function(e,t,r){return n(i(e,t,r))}}if(2===r.length){var a=r[0],o=r[1];return function(e,t,r){return n(a(e,t,r),o(e,t,r))}}return function(e,t,i){return n.apply(null,(0,m.map)(r,(function(n){return n(e,t,i)})))}},n.prototype.forEach=function(e){for(var t=0;t<this.args.length;t++)e(this.args[t],\"args[\"+t+\"]\",this)},n.prototype.map=function(e){for(var t=[],r=0;r<this.args.length;r++)t[r]=this._ifNode(e(this.args[r],\"args[\"+r+\"]\",this));return new n(this.op,this.fn,t,this.implicit)},n.prototype.clone=function(){return new n(this.op,this.fn,this.args.slice(0),this.implicit)},n.prototype.isUnary=function(){return 1===this.args.length},n.prototype.isBinary=function(){return 2===this.args.length},n.prototype._toString=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=e&&e.implicit?e.implicit:\"hide\",i=this.args,a=r(this,t,n,i,!1);if(1===i.length){var o=(0,jr.getAssociativity)(this,t),s=i[0].toString(e);a[0]&&(s=\"(\"+s+\")\");var c=/[a-zA-Z]+/.test(this.op);return\"right\"===o?this.op+(c?\" \":\"\")+s:\"left\"===o?s+(c?\" \":\"\")+this.op:s+this.op}if(2===i.length){var u=i[0].toString(e),l=i[1].toString(e);return a[0]&&(u=\"(\"+u+\")\"),a[1]&&(l=\"(\"+l+\")\"),this.implicit&&\"OperatorNode:multiply\"===this.getIdentifier()&&\"hide\"===n?u+\" \"+l:u+\" \"+this.op+\" \"+l}if(i.length>2&&(\"OperatorNode:add\"===this.getIdentifier()||\"OperatorNode:multiply\"===this.getIdentifier())){var d=i.map((function(t,n){return t=t.toString(e),a[n]&&(t=\"(\"+t+\")\"),t}));return this.implicit&&\"OperatorNode:multiply\"===this.getIdentifier()&&\"hide\"===n?d.join(\" \"):d.join(\" \"+this.op+\" \")}return this.fn+\"(\"+this.args.join(\", \")+\")\"},n.prototype.toJSON=function(){return{mathjs:\"OperatorNode\",op:this.op,fn:this.fn,args:this.args,implicit:this.implicit}},n.fromJSON=function(e){return new n(e.op,e.fn,e.args,e.implicit)},n.prototype.toHTML=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=e&&e.implicit?e.implicit:\"hide\",i=this.args,a=r(this,t,n,i,!1);if(1===i.length){var o=(0,jr.getAssociativity)(this,t),s=i[0].toHTML(e);return a[0]&&(s='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+s+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),\"right\"===o?'<span class=\"math-operator math-unary-operator math-lefthand-unary-operator\">'+(0,d.escape)(this.op)+\"</span>\"+s:s+'<span class=\"math-operator math-unary-operator math-righthand-unary-operator\">'+(0,d.escape)(this.op)+\"</span>\"}if(2===i.length){var c=i[0].toHTML(e),u=i[1].toHTML(e);return a[0]&&(c='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+c+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),a[1]&&(u='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+u+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),this.implicit&&\"OperatorNode:multiply\"===this.getIdentifier()&&\"hide\"===n?c+'<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>'+u:c+'<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">'+(0,d.escape)(this.op)+\"</span>\"+u}var l=i.map((function(t,n){return t=t.toHTML(e),a[n]&&(t='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+t+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),t}));return i.length>2&&(\"OperatorNode:add\"===this.getIdentifier()||\"OperatorNode:multiply\"===this.getIdentifier())?this.implicit&&\"OperatorNode:multiply\"===this.getIdentifier()&&\"hide\"===n?l.join('<span class=\"math-operator math-binary-operator math-implicit-binary-operator\"></span>'):l.join('<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">'+(0,d.escape)(this.op)+\"</span>\"):'<span class=\"math-function\">'+(0,d.escape)(this.fn)+'</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>'+l.join('<span class=\"math-separator\">,</span>')+'<span class=\"math-paranthesis math-round-parenthesis\">)</span>'},n.prototype._toTex=function(e){var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=e&&e.implicit?e.implicit:\"hide\",i=this.args,a=r(this,t,n,i,!0),o=Rr.latexOperators[this.fn];if(o=void 0===o?this.op:o,1===i.length){var s=(0,jr.getAssociativity)(this,t),c=i[0].toTex(e);return a[0]&&(c=\"\\\\left(\".concat(c,\"\\\\right)\")),\"right\"===s?o+c:c+o}if(2===i.length){var u=i[0],l=u.toTex(e);a[0]&&(l=\"\\\\left(\".concat(l,\"\\\\right)\"));var d,f=i[1].toTex(e);switch(a[1]&&(f=\"\\\\left(\".concat(f,\"\\\\right)\")),d=\"keep\"===t?u.getIdentifier():u.getContent().getIdentifier(),this.getIdentifier()){case\"OperatorNode:divide\":return o+\"{\"+l+\"}{\"+f+\"}\";case\"OperatorNode:pow\":switch(l=\"{\"+l+\"}\",f=\"{\"+f+\"}\",d){case\"ConditionalNode\":case\"OperatorNode:divide\":l=\"\\\\left(\".concat(l,\"\\\\right)\")}break;case\"OperatorNode:multiply\":if(this.implicit&&\"hide\"===n)return l+\"~\"+f}return l+o+f}if(i.length>2&&(\"OperatorNode:add\"===this.getIdentifier()||\"OperatorNode:multiply\"===this.getIdentifier())){var p=i.map((function(t,n){return t=t.toTex(e),a[n]&&(t=\"\\\\left(\".concat(t,\"\\\\right)\")),t}));return\"OperatorNode:multiply\"===this.getIdentifier()&&this.implicit?p.join(\"~\"):p.join(o)}return\"\\\\mathrm{\"+this.fn+\"}\\\\left(\"+i.map((function(t){return t.toTex(e)})).join(\",\")+\"\\\\right)\"},n.prototype.getIdentifier=function(){return this.type+\":\"+this.fn},n}),{isClass:!0,isNode:!0});t.createOperatorNode=r})),Zr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createParenthesisNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"ParenthesisNode\",n,(function(e){var t=e.Node;function n(e){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!(0,i.isNode)(e))throw new TypeError('Node expected for parameter \"content\"');this.content=e}return n.prototype=new t,n.prototype.type=\"ParenthesisNode\",n.prototype.isParenthesisNode=!0,n.prototype._compile=function(e,t){return this.content._compile(e,t)},n.prototype.getContent=function(){return this.content.getContent()},n.prototype.forEach=function(e){e(this.content,\"content\",this)},n.prototype.map=function(e){return new n(e(this.content,\"content\",this))},n.prototype.clone=function(){return new n(this.content)},n.prototype._toString=function(e){return!e||e&&!e.parenthesis||e&&\"keep\"===e.parenthesis?\"(\"+this.content.toString(e)+\")\":this.content.toString(e)},n.prototype.toJSON=function(){return{mathjs:\"ParenthesisNode\",content:this.content}},n.fromJSON=function(e){return new n(e.content)},n.prototype.toHTML=function(e){return!e||e&&!e.parenthesis||e&&\"keep\"===e.parenthesis?'<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+this.content.toHTML(e)+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>':this.content.toHTML(e)},n.prototype._toTex=function(e){return!e||e&&!e.parenthesis||e&&\"keep\"===e.parenthesis?\"\\\\left(\".concat(this.content.toTex(e),\"\\\\right)\"):this.content.toTex(e)},n}),{isClass:!0,isNode:!0});t.createParenthesisNode=r})),Vr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRangeNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"RangeNode\",n,(function(e){var t=e.Node;function n(e,t,r){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!(0,i.isNode)(e))throw new TypeError(\"Node expected\");if(!(0,i.isNode)(t))throw new TypeError(\"Node expected\");if(r&&!(0,i.isNode)(r))throw new TypeError(\"Node expected\");if(arguments.length>3)throw new Error(\"Too many arguments\");this.start=e,this.end=t,this.step=r||null}function r(e,t){var n=(0,jr.getPrecedence)(e,t),r={},i=(0,jr.getPrecedence)(e.start,t);if(r.start=null!==i&&i<=n||\"all\"===t,e.step){var a=(0,jr.getPrecedence)(e.step,t);r.step=null!==a&&a<=n||\"all\"===t}var o=(0,jr.getPrecedence)(e.end,t);return r.end=null!==o&&o<=n||\"all\"===t,r}return n.prototype=new t,n.prototype.type=\"RangeNode\",n.prototype.isRangeNode=!0,n.prototype.needsEnd=function(){return this.filter((function(e){return(0,i.isSymbolNode)(e)&&\"end\"===e.name})).length>0},n.prototype._compile=function(e,t){var n=e.range,r=this.start._compile(e,t),i=this.end._compile(e,t);if(this.step){var a=this.step._compile(e,t);return function(e,t,o){return n(r(e,t,o),i(e,t,o),a(e,t,o))}}return function(e,t,a){return n(r(e,t,a),i(e,t,a))}},n.prototype.forEach=function(e){e(this.start,\"start\",this),e(this.end,\"end\",this),this.step&&e(this.step,\"step\",this)},n.prototype.map=function(e){return new n(this._ifNode(e(this.start,\"start\",this)),this._ifNode(e(this.end,\"end\",this)),this.step&&this._ifNode(e(this.step,\"step\",this)))},n.prototype.clone=function(){return new n(this.start,this.end,this.step&&this.step)},n.prototype._toString=function(e){var t,n=r(this,e&&e.parenthesis?e.parenthesis:\"keep\"),i=this.start.toString(e);if(n.start&&(i=\"(\"+i+\")\"),t=i,this.step){var a=this.step.toString(e);n.step&&(a=\"(\"+a+\")\"),t+=\":\"+a}var o=this.end.toString(e);return n.end&&(o=\"(\"+o+\")\"),t+=\":\"+o},n.prototype.toJSON=function(){return{mathjs:\"RangeNode\",start:this.start,end:this.end,step:this.step}},n.fromJSON=function(e){return new n(e.start,e.end,e.step)},n.prototype.toHTML=function(e){var t,n=r(this,e&&e.parenthesis?e.parenthesis:\"keep\"),i=this.start.toHTML(e);if(n.start&&(i='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+i+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),t=i,this.step){var a=this.step.toHTML(e);n.step&&(a='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+a+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),t+='<span class=\"math-operator math-range-operator\">:</span>'+a}var o=this.end.toHTML(e);return n.end&&(o='<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+o+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>'),t+='<span class=\"math-operator math-range-operator\">:</span>'+o},n.prototype._toTex=function(e){var t=r(this,e&&e.parenthesis?e.parenthesis:\"keep\"),n=this.start.toTex(e);if(t.start&&(n=\"\\\\left(\".concat(n,\"\\\\right)\")),this.step){var i=this.step.toTex(e);t.step&&(i=\"\\\\left(\".concat(i,\"\\\\right)\")),n+=\":\"+i}var a=this.end.toTex(e);return t.end&&(a=\"\\\\left(\".concat(a,\"\\\\right)\")),n+=\":\"+a},n}),{isClass:!0,isNode:!0});t.createRangeNode=r})),Wr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRelationalNode=void 0;var n=[\"Node\"],r=(0,h.factory)(\"RelationalNode\",n,(function(e){var t=e.Node;function n(e,t){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!Array.isArray(e))throw new TypeError(\"Parameter conditionals must be an array\");if(!Array.isArray(t))throw new TypeError(\"Parameter params must be an array\");if(e.length!==t.length-1)throw new TypeError(\"Parameter params must contain exactly one more element than parameter conditionals\");this.conditionals=e,this.params=t}return n.prototype=new t,n.prototype.type=\"RelationalNode\",n.prototype.isRelationalNode=!0,n.prototype._compile=function(e,t){var n=this,r=this.params.map((function(n){return n._compile(e,t)}));return function(t,i,a){for(var o,s=r[0](t,i,a),c=0;c<n.conditionals.length;c++){if(o=s,s=r[c+1](t,i,a),!(0,St.getSafeProperty)(e,n.conditionals[c])(o,s))return!1}return!0}},n.prototype.forEach=function(e){var t=this;this.params.forEach((function(n,r){return e(n,\"params[\"+r+\"]\",t)}),this)},n.prototype.map=function(e){var t=this;return new n(this.conditionals.slice(),this.params.map((function(n,r){return t._ifNode(e(n,\"params[\"+r+\"]\",t))}),this))},n.prototype.clone=function(){return new n(this.conditionals,this.params)},n.prototype._toString=function(e){for(var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=(0,jr.getPrecedence)(this,t),r=this.params.map((function(r,i){var a=(0,jr.getPrecedence)(r,t);return\"all\"===t||null!==a&&a<=n?\"(\"+r.toString(e)+\")\":r.toString(e)})),i={equal:\"==\",unequal:\"!=\",smaller:\"<\",larger:\">\",smallerEq:\"<=\",largerEq:\">=\"},a=r[0],o=0;o<this.conditionals.length;o++)a+=\" \"+i[this.conditionals[o]]+\" \"+r[o+1];return a},n.prototype.toJSON=function(){return{mathjs:\"RelationalNode\",conditionals:this.conditionals,params:this.params}},n.fromJSON=function(e){return new n(e.conditionals,e.params)},n.prototype.toHTML=function(e){for(var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=(0,jr.getPrecedence)(this,t),r=this.params.map((function(r,i){var a=(0,jr.getPrecedence)(r,t);return\"all\"===t||null!==a&&a<=n?'<span class=\"math-parenthesis math-round-parenthesis\">(</span>'+r.toHTML(e)+'<span class=\"math-parenthesis math-round-parenthesis\">)</span>':r.toHTML(e)})),i={equal:\"==\",unequal:\"!=\",smaller:\"<\",larger:\">\",smallerEq:\"<=\",largerEq:\">=\"},a=r[0],o=0;o<this.conditionals.length;o++)a+='<span class=\"math-operator math-binary-operator math-explicit-binary-operator\">'+(0,d.escape)(i[this.conditionals[o]])+\"</span>\"+r[o+1];return a},n.prototype._toTex=function(e){for(var t=e&&e.parenthesis?e.parenthesis:\"keep\",n=(0,jr.getPrecedence)(this,t),r=this.params.map((function(r,i){var a=(0,jr.getPrecedence)(r,t);return\"all\"===t||null!==a&&a<=n?\"\\\\left(\"+r.toTex(e)+\"\\right)\":r.toTex(e)})),i=r[0],a=0;a<this.conditionals.length;a++)i+=Rr.latexOperators[this.conditionals[a]]+r[a+1];return i},n}),{isClass:!0,isNode:!0});t.createRelationalNode=r})),Gr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSymbolNode=void 0;var n=[\"math\",\"?Unit\",\"Node\"],r=(0,h.factory)(\"SymbolNode\",n,(function(e){var t=e.math,n=e.Unit,r=e.Node;function i(e){return!!n&&n.isValuelessUnit(e)}function a(e){if(!(this instanceof a))throw new SyntaxError(\"Constructor must be called with the new operator\");if(\"string\"!=typeof e)throw new TypeError('String expected for parameter \"name\"');this.name=e}return a.prototype=new r,a.prototype.type=\"SymbolNode\",a.prototype.isSymbolNode=!0,a.prototype._compile=function(e,t){var r=this.name;if(!0===t[r])return function(e,t,n){return t[r]};if(r in e)return function(t,n,i){return r in t?(0,St.getSafeProperty)(t,r):(0,St.getSafeProperty)(e,r)};var a=i(r);return function(e,t,i){return r in e?(0,St.getSafeProperty)(e,r):a?new n(null,r):function(e){throw new Error(\"Undefined symbol \"+e)}(r)}},a.prototype.forEach=function(e){},a.prototype.map=function(e){return this.clone()},a.prototype.clone=function(){return new a(this.name)},a.prototype._toString=function(e){return this.name},a.prototype.toHTML=function(e){var t=(0,d.escape)(this.name);return\"true\"===t||\"false\"===t?'<span class=\"math-symbol math-boolean\">'+t+\"</span>\":\"i\"===t?'<span class=\"math-symbol math-imaginary-symbol\">'+t+\"</span>\":\"Infinity\"===t?'<span class=\"math-symbol math-infinity-symbol\">'+t+\"</span>\":\"NaN\"===t?'<span class=\"math-symbol math-nan-symbol\">'+t+\"</span>\":\"null\"===t?'<span class=\"math-symbol math-null-symbol\">'+t+\"</span>\":\"undefined\"===t?'<span class=\"math-symbol math-undefined-symbol\">'+t+\"</span>\":'<span class=\"math-symbol\">'+t+\"</span>\"},a.prototype.toJSON=function(){return{mathjs:\"SymbolNode\",name:this.name}},a.fromJSON=function(e){return new a(e.name)},a.prototype._toTex=function(e){var n=!1;void 0===t[this.name]&&i(this.name)&&(n=!0);var r=(0,Rr.toSymbol)(this.name,n);return\"\\\\\"===r[0]?r:\" \"+r},a}),{isClass:!0,isNode:!0});t.createSymbolNode=r})),$r=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFunctionNode=void 0;var o=[\"math\",\"Node\",\"SymbolNode\"],s=(0,h.factory)(\"FunctionNode\",o,(function(e){var t=e.math,o=e.Node,s=e.SymbolNode;function c(e,t){if(!(this instanceof c))throw new SyntaxError(\"Constructor must be called with the new operator\");if(\"string\"==typeof e&&(e=new s(e)),!(0,i.isNode)(e))throw new TypeError('Node expected as parameter \"fn\"');if(!Array.isArray(t)||!t.every(i.isNode))throw new TypeError('Array containing Nodes expected for parameter \"args\"');this.fn=e,this.args=t||[],Object.defineProperty(this,\"name\",{get:function(){return this.fn.name||\"\"}.bind(this),set:function(){throw new Error(\"Cannot assign a new name, name is read-only\")}})}c.prototype=new o,c.prototype.type=\"FunctionNode\",c.prototype.isFunctionNode=!0,c.prototype._compile=function(e,t){if(!(this instanceof c))throw new TypeError(\"No valid FunctionNode\");var n=(0,m.map)(this.args,(function(n){return n._compile(e,t)}));if((0,i.isSymbolNode)(this.fn)){var a=this.fn.name,o=a in e?(0,St.getSafeProperty)(e,a):void 0;if(\"function\"==typeof o&&!0===o.rawArgs){var s=this.args;return function(t,n,i){return(a in t?(0,St.getSafeProperty)(t,a):o)(s,e,r({},t,n))}}if(1===n.length){var u=n[0];return function(e,t,n){return(a in e?(0,St.getSafeProperty)(e,a):o)(u(e,t,n))}}if(2===n.length){var l=n[0],d=n[1];return function(e,t,n){return(a in e?(0,St.getSafeProperty)(e,a):o)(l(e,t,n),d(e,t,n))}}return function(e,t,r){return(a in e?(0,St.getSafeProperty)(e,a):o).apply(null,(0,m.map)(n,(function(n){return n(e,t,r)})))}}if((0,i.isAccessorNode)(this.fn)&&(0,i.isIndexNode)(this.fn.index)&&this.fn.index.isObjectProperty()){var f=this.fn.object._compile(e,t),p=this.fn.index.getObjectProperty(),h=this.args;return function(t,i,a){var o=f(t,i,a);return(0,St.validateSafeMethod)(o,p),o[p]&&o[p].rawArgs?o[p](h,e,r({},t,i)):o[p].apply(o,(0,m.map)(n,(function(e){return e(t,i,a)})))}}var y=this.fn._compile(e,t),v=this.args;return function(t,i,a){var o=y(t,i,a);return o&&o.rawArgs?o(v,e,r({},t,i)):o.apply(o,(0,m.map)(n,(function(e){return e(t,i,a)})))}},c.prototype.forEach=function(e){e(this.fn,\"fn\",this);for(var t=0;t<this.args.length;t++)e(this.args[t],\"args[\"+t+\"]\",this)},c.prototype.map=function(e){for(var t=this._ifNode(e(this.fn,\"fn\",this)),n=[],r=0;r<this.args.length;r++)n[r]=this._ifNode(e(this.args[r],\"args[\"+r+\"]\",this));return new c(t,n)},c.prototype.clone=function(){return new c(this.fn,this.args.slice(0))};var u=c.prototype.toString;function l(e,t,r){for(var a,o=\"\",s=/\\$(?:\\{([a-z_][a-z_0-9]*)(?:\\[([0-9]+)\\])?\\}|\\$)/gi,c=0;null!==(a=s.exec(e));)if(o+=e.substring(c,a.index),c=a.index,\"$$\"===a[0])o+=\"$\",c++;else{c+=a[0].length;var u=t[a[1]];if(!u)throw new ReferenceError(\"Template: Property \"+a[1]+\" does not exist.\");if(void 0===a[2])switch(n(u)){case\"string\":o+=u;break;case\"object\":if((0,i.isNode)(u))o+=u.toTex(r);else{if(!Array.isArray(u))throw new TypeError(\"Template: \"+a[1]+\" has to be a Node, String or array of Nodes\");o+=u.map((function(e,t){if((0,i.isNode)(e))return e.toTex(r);throw new TypeError(\"Template: \"+a[1]+\"[\"+t+\"] is not a Node.\")})).join(\",\")}break;default:throw new TypeError(\"Template: \"+a[1]+\" has to be a Node, String or array of Nodes\")}else{if(!(0,i.isNode)(u[a[2]]&&u[a[2]]))throw new TypeError(\"Template: \"+a[1]+\"[\"+a[2]+\"] is not a Node.\");o+=u[a[2]].toTex(r)}}return o+=e.slice(c)}c.prototype.toString=function(e){var t,r=this.fn.toString(e);return e&&\"object\"===n(e.handler)&&(0,a.hasOwnProperty)(e.handler,r)&&(t=e.handler[r](this,e)),void 0!==t?t:u.call(this,e)},c.prototype._toString=function(e){var t=this.args.map((function(t){return t.toString(e)}));return((0,i.isFunctionAssignmentNode)(this.fn)?\"(\"+this.fn.toString(e)+\")\":this.fn.toString(e))+\"(\"+t.join(\", \")+\")\"},c.prototype.toJSON=function(){return{mathjs:\"FunctionNode\",fn:this.fn,args:this.args}},c.fromJSON=function(e){return new c(e.fn,e.args)},c.prototype.toHTML=function(e){var t=this.args.map((function(t){return t.toHTML(e)}));return'<span class=\"math-function\">'+(0,d.escape)(this.fn)+'</span><span class=\"math-paranthesis math-round-parenthesis\">(</span>'+t.join('<span class=\"math-separator\">,</span>')+'<span class=\"math-paranthesis math-round-parenthesis\">)</span>'};var f=c.prototype.toTex;return c.prototype.toTex=function(e){var t;return e&&\"object\"===n(e.handler)&&(0,a.hasOwnProperty)(e.handler,this.name)&&(t=e.handler[this.name](this,e)),void 0!==t?t:f.call(this,e)},c.prototype._toTex=function(e){var r,i,a=this.args.map((function(t){return t.toTex(e)}));switch(Rr.latexFunctions[this.name]&&(r=Rr.latexFunctions[this.name]),!t[this.name]||\"function\"!=typeof t[this.name].toTex&&\"object\"!==n(t[this.name].toTex)&&\"string\"!=typeof t[this.name].toTex||(r=t[this.name].toTex),n(r)){case\"function\":i=r(this,e);break;case\"string\":i=l(r,this,e);break;case\"object\":switch(n(r[a.length])){case\"function\":i=r[a.length](this,e);break;case\"string\":i=l(r[a.length],this,e)}}return void 0!==i?i:l(Rr.defaultTemplate,this,e)},c.prototype.getIdentifier=function(){return this.type+\":\"+this.name},c}),{isClass:!0,isNode:!0});t.createFunctionNode=s})),Qr=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createParse=void 0;var r=[\"typed\",\"numeric\",\"config\",\"AccessorNode\",\"ArrayNode\",\"AssignmentNode\",\"BlockNode\",\"ConditionalNode\",\"ConstantNode\",\"FunctionAssignmentNode\",\"FunctionNode\",\"IndexNode\",\"ObjectNode\",\"OperatorNode\",\"ParenthesisNode\",\"RangeNode\",\"RelationalNode\",\"SymbolNode\"],o=(0,h.factory)(\"parse\",r,(function(e){var t=e.typed,r=e.numeric,o=e.config,s=e.AccessorNode,c=e.ArrayNode,u=e.AssignmentNode,l=e.BlockNode,d=e.ConditionalNode,f=e.ConstantNode,p=e.FunctionAssignmentNode,m=e.FunctionNode,h=e.IndexNode,y=e.ObjectNode,v=e.OperatorNode,g=e.ParenthesisNode,b=e.RangeNode,x=e.RelationalNode,D=e.SymbolNode,_=t(\"parse\",{string:function(e){return H(e,{})},\"Array | Matrix\":function(e){return w(e,{})},\"string, Object\":function(e,t){return H(e,void 0!==t.nodes?t.nodes:{})},\"Array | Matrix, Object\":w});function w(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=void 0!==t.nodes?t.nodes:{};return(0,P.deepMap)(e,(function(e){if(\"string\"!=typeof e)throw new TypeError(\"String expected\");return H(e,n)}))}var N=0,M=1,O=2,S=3,j=4,A={\",\":!0,\"(\":!0,\")\":!0,\"[\":!0,\"]\":!0,\"{\":!0,\"}\":!0,'\"':!0,\"'\":!0,\";\":!0,\"+\":!0,\"-\":!0,\"*\":!0,\".*\":!0,\"/\":!0,\"./\":!0,\"%\":!0,\"^\":!0,\".^\":!0,\"~\":!0,\"!\":!0,\"&\":!0,\"|\":!0,\"^|\":!0,\"=\":!0,\":\":!0,\"?\":!0,\"==\":!0,\"!=\":!0,\"<\":!0,\">\":!0,\"<=\":!0,\">=\":!0,\"<<\":!0,\">>\":!0,\">>>\":!0},E={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},C={true:!0,false:!1,null:null,undefined:void 0},T=[\"NaN\",\"Infinity\"];function k(e,t){return e.expression.substr(e.index,t)}function I(e){return k(e,1)}function B(e){e.index++}function z(e){return e.expression.charAt(e.index-1)}function R(e){return e.expression.charAt(e.index+1)}function q(e){for(e.tokenType=N,e.token=\"\",e.comment=\"\";_.isWhitespace(I(e),e.nestingLevel);)B(e);if(\"#\"===I(e))for(;\"\\n\"!==I(e)&&\"\"!==I(e);)e.comment+=I(e),B(e);if(\"\"!==I(e)){if(\"\\n\"===I(e)&&!e.nestingLevel)return e.tokenType=M,e.token=I(e),void B(e);var t=I(e),n=k(e,2),r=k(e,3);if(3===r.length&&A[r])return e.tokenType=M,e.token=r,B(e),B(e),void B(e);if(2===n.length&&A[n])return e.tokenType=M,e.token=n,B(e),void B(e);if(A[t])return e.tokenType=M,e.token=t,void B(e);if(_.isDigitDot(t)){e.tokenType=O;var i=k(e,2);if(\"0b\"===i||\"0o\"===i||\"0x\"===i){for(e.token+=I(e),B(e),e.token+=I(e),B(e);_.isHexDigit(I(e));)e.token+=I(e),B(e);return}if(\".\"===I(e))e.token+=I(e),B(e),_.isDigit(I(e))||(e.tokenType=M);else{for(;_.isDigit(I(e));)e.token+=I(e),B(e);_.isDecimalMark(I(e),R(e))&&(e.token+=I(e),B(e))}for(;_.isDigit(I(e));)e.token+=I(e),B(e);if(\"E\"===I(e)||\"e\"===I(e))if(_.isDigit(R(e))||\"-\"===R(e)||\"+\"===R(e)){if(e.token+=I(e),B(e),\"+\"!==I(e)&&\"-\"!==I(e)||(e.token+=I(e),B(e)),!_.isDigit(I(e)))throw le(e,'Digit expected, got \"'+I(e)+'\"');for(;_.isDigit(I(e));)e.token+=I(e),B(e);if(_.isDecimalMark(I(e),R(e)))throw le(e,'Digit expected, got \"'+I(e)+'\"')}else if(\".\"===R(e))throw B(e),le(e,'Digit expected, got \"'+I(e)+'\"')}else{if(!_.isAlpha(I(e),z(e),R(e))){for(e.tokenType=j;\"\"!==I(e);)e.token+=I(e),B(e);throw le(e,'Syntax error in part \"'+e.token+'\"')}for(;_.isAlpha(I(e),z(e),R(e))||_.isDigit(I(e));)e.token+=I(e),B(e);(0,a.hasOwnProperty)(E,e.token)?e.tokenType=M:e.tokenType=S}}else e.tokenType=M}function F(e){do{q(e)}while(\"\\n\"===e.token)}function U(e){e.nestingLevel++}function L(e){e.nestingLevel--}function H(e,t){var r={extraNodes:{},expression:\"\",comment:\"\",index:0,token:\"\",tokenType:N,nestingLevel:0,conditionalLevel:null};n(r,{expression:e,extraNodes:t}),q(r);var i=function(e){var t,n,r=[];\"\"!==e.token&&\"\\n\"!==e.token&&\";\"!==e.token&&((t=Z(e)).comment=e.comment);for(;\"\\n\"===e.token||\";\"===e.token;)0===r.length&&t&&(n=\";\"!==e.token,r.push({node:t,visible:n})),q(e),\"\\n\"!==e.token&&\";\"!==e.token&&\"\"!==e.token&&((t=Z(e)).comment=e.comment,n=\";\"!==e.token,r.push({node:t,visible:n}));return r.length>0?new l(r):(t||((t=new f(void 0)).comment=e.comment),t)}(r);if(\"\"!==r.token)throw r.tokenType===M?de(r,\"Unexpected operator \"+r.token):le(r,'Unexpected part \"'+r.token+'\"');return i}function Z(e){var t,n,r,a,o=function(e){var t=function(e){var t=V(e);for(;\"or\"===e.token;)F(e),t=new v(\"or\",\"or\",[t,V(e)]);return t}(e);for(;\"?\"===e.token;){var n=e.conditionalLevel;e.conditionalLevel=e.nestingLevel,F(e);var r=t,i=Z(e);if(\":\"!==e.token)throw le(e,\"False part of conditional expression expected\");e.conditionalLevel=null,F(e);var a=Z(e);t=new d(r,i,a),e.conditionalLevel=n}return t}(e);if(\"=\"===e.token){if((0,i.isSymbolNode)(o))return t=o.name,F(e),r=Z(e),new u(new D(t),r);if((0,i.isAccessorNode)(o))return F(e),r=Z(e),new u(o.object,o.index,r);if((0,i.isFunctionNode)(o)&&(0,i.isSymbolNode)(o.fn)&&(a=!0,n=[],t=o.name,o.args.forEach((function(e,t){(0,i.isSymbolNode)(e)?n[t]=e.name:a=!1})),a))return F(e),r=Z(e),new p(t,n,r);throw le(e,\"Invalid left hand side of assignment operator =\")}return o}function V(e){for(var t=W(e);\"xor\"===e.token;)F(e),t=new v(\"xor\",\"xor\",[t,W(e)]);return t}function W(e){for(var t=G(e);\"and\"===e.token;)F(e),t=new v(\"and\",\"and\",[t,G(e)]);return t}function G(e){for(var t=$(e);\"|\"===e.token;)F(e),t=new v(\"|\",\"bitOr\",[t,$(e)]);return t}function $(e){for(var t=Q(e);\"^|\"===e.token;)F(e),t=new v(\"^|\",\"bitXor\",[t,Q(e)]);return t}function Q(e){for(var t=X(e);\"&\"===e.token;)F(e),t=new v(\"&\",\"bitAnd\",[t,X(e)]);return t}function X(e){for(var t=[Y(e)],n=[],r={\"==\":\"equal\",\"!=\":\"unequal\",\"<\":\"smaller\",\">\":\"larger\",\"<=\":\"smallerEq\",\">=\":\"largerEq\"};(0,a.hasOwnProperty)(r,e.token);){var i={name:e.token,fn:r[e.token]};n.push(i),F(e),t.push(Y(e))}return 1===t.length?t[0]:2===t.length?new v(n[0].name,n[0].fn,t):new x(n.map((function(e){return e.fn})),t)}function Y(e){var t,n,r,i;t=J(e);for(var o={\"<<\":\"leftShift\",\">>\":\"rightArithShift\",\">>>\":\"rightLogShift\"};(0,a.hasOwnProperty)(o,e.token);)r=o[n=e.token],F(e),i=[t,J(e)],t=new v(n,r,i);return t}function J(e){var t,n,r,i;t=K(e);for(var o={to:\"to\",in:\"to\"};(0,a.hasOwnProperty)(o,e.token);)r=o[n=e.token],F(e),\"in\"===n&&\"\"===e.token?t=new v(\"*\",\"multiply\",[t,new D(\"in\")],!0):(i=[t,K(e)],t=new v(n,r,i));return t}function K(e){var t,n=[];if(t=\":\"===e.token?new f(1):ee(e),\":\"===e.token&&e.conditionalLevel!==e.nestingLevel){for(n.push(t);\":\"===e.token&&n.length<3;)F(e),\")\"===e.token||\"]\"===e.token||\",\"===e.token||\"\"===e.token?n.push(new D(\"end\")):n.push(ee(e));t=3===n.length?new b(n[0],n[2],n[1]):new b(n[0],n[1])}return t}function ee(e){var t,n,r,i;t=te(e);for(var o={\"+\":\"add\",\"-\":\"subtract\"};(0,a.hasOwnProperty)(o,e.token);)r=o[n=e.token],F(e),i=[t,te(e)],t=new v(n,r,i);return t}function te(e){var t,n,r,i;n=t=ne(e);for(var o={\"*\":\"multiply\",\".*\":\"dotMultiply\",\"/\":\"divide\",\"./\":\"dotDivide\",\"%\":\"mod\",mod:\"mod\"};(0,a.hasOwnProperty)(o,e.token);)i=o[r=e.token],F(e),n=ne(e),t=new v(r,i,[t,n]);return t}function ne(e){var t,n;for(n=t=re(e);e.tokenType===S||\"in\"===e.token&&(0,i.isConstantNode)(t)||!(e.tokenType!==O||(0,i.isConstantNode)(n)||(0,i.isOperatorNode)(n)&&\"!\"!==n.op)||\"(\"===e.token;)n=re(e),t=new v(\"*\",\"multiply\",[t,n],!0);return t}function re(e){for(var t=ie(e),r=t,a=[];\"/\"===e.token&&(0,i.isConstantNode)(r);){if(a.push(n({},e)),F(e),e.tokenType!==O){n(e,a.pop());break}if(a.push(n({},e)),F(e),e.tokenType!==S&&\"(\"!==e.token){a.pop(),n(e,a.pop());break}n(e,a.pop()),a.pop(),r=ie(e),t=new v(\"/\",\"divide\",[t,r])}return t}function ie(e){var t,n,i,s={\"-\":\"unaryMinus\",\"+\":\"unaryPlus\",\"~\":\"bitNot\",not:\"not\"};return(0,a.hasOwnProperty)(s,e.token)?(i=s[e.token],t=e.token,F(e),n=[ie(e)],new v(t,i,n)):function(e){var t,n,i,s;t=function(e){var t,n,i;t=function(e){var t=[];if(e.tokenType===S&&(0,a.hasOwnProperty)(e.extraNodes,e.token)){var n=e.extraNodes[e.token];if(q(e),\"(\"===e.token){if(t=[],U(e),q(e),\")\"!==e.token)for(t.push(Z(e));\",\"===e.token;)q(e),t.push(Z(e));if(\")\"!==e.token)throw le(e,\"Parenthesis ) expected\");L(e),q(e)}return new n(t)}return function(e){var t,n;if(e.tokenType===S||e.tokenType===M&&e.token in E)return n=e.token,q(e),t=(0,a.hasOwnProperty)(C,n)?new f(C[n]):-1!==T.indexOf(n)?new f(r(n,\"number\")):new D(n),t=ae(e,t);return function(e){var t,n;if('\"'===e.token)return n=oe(e),t=new f(n),t=ae(e,t);return function(e){var t,n;if(\"'\"===e.token)return n=se(e),t=new f(n),t=ae(e,t);return function(e){var t,n,i,a;if(\"[\"===e.token){if(U(e),q(e),\"]\"!==e.token){var s=ce(e);if(\";\"===e.token){for(i=1,n=[s];\";\"===e.token;)q(e),n[i]=ce(e),i++;if(\"]\"!==e.token)throw le(e,\"End of matrix ] expected\");L(e),q(e),a=n[0].items.length;for(var u=1;u<i;u++)if(n[u].items.length!==a)throw de(e,\"Column dimensions mismatch (\"+n[u].items.length+\" !== \"+a+\")\");t=new c(n)}else{if(\"]\"!==e.token)throw le(e,\"End of matrix ] expected\");L(e),q(e),t=s}}else L(e),q(e),t=new c([]);return ae(e,t)}return function(e){if(\"{\"===e.token){var t;U(e);var n={};do{if(q(e),\"}\"!==e.token){if('\"'===e.token)t=oe(e);else if(\"'\"===e.token)t=se(e);else{if(!(e.tokenType===S||e.tokenType===M&&e.token in E))throw le(e,\"Symbol or string expected as object key\");t=e.token,q(e)}if(\":\"!==e.token)throw le(e,\"Colon : expected after object key\");q(e),n[t]=Z(e)}}while(\",\"===e.token);if(\"}\"!==e.token)throw le(e,\"Comma , or bracket } expected after object value\");L(e),q(e);var i=new y(n);return i=ae(e,i)}return function(e){var t;if(e.tokenType===O)return t=e.token,q(e),new f(r(t,o.number));return function(e){var t;if(\"(\"===e.token){if(U(e),q(e),t=Z(e),\")\"!==e.token)throw le(e,\"Parenthesis ) expected\");return L(e),q(e),t=new g(t),t=ae(e,t)}return function(e){throw\"\"===e.token?le(e,\"Unexpected end of expression\"):le(e,\"Value expected\")}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e);var s={\"!\":\"factorial\",\"'\":\"ctranspose\"};for(;(0,a.hasOwnProperty)(s,e.token);)n=e.token,i=s[n],q(e),t=new v(n,i,[t]),t=ae(e,t);return t}(e),(\"^\"===e.token||\".^\"===e.token)&&(n=e.token,i=\"^\"===n?\"pow\":\"dotPow\",F(e),s=[t,ie(e)],t=new v(n,i,s));return t}(e)}function ae(e,t,n){for(var r;!(\"(\"!==e.token&&\"[\"!==e.token&&\".\"!==e.token||n&&-1===n.indexOf(e.token));)if(r=[],\"(\"===e.token){if(!(0,i.isSymbolNode)(t)&&!(0,i.isAccessorNode)(t))return t;if(U(e),q(e),\")\"!==e.token)for(r.push(Z(e));\",\"===e.token;)q(e),r.push(Z(e));if(\")\"!==e.token)throw le(e,\"Parenthesis ) expected\");L(e),q(e),t=new m(t,r)}else if(\"[\"===e.token){if(U(e),q(e),\"]\"!==e.token)for(r.push(Z(e));\",\"===e.token;)q(e),r.push(Z(e));if(\"]\"!==e.token)throw le(e,\"Parenthesis ] expected\");L(e),q(e),t=new s(t,new h(r))}else{if(q(e),e.tokenType!==S)throw le(e,\"Property name expected after dot\");r.push(new f(e.token)),q(e);t=new s(t,new h(r,!0))}return t}function oe(e){for(var t=\"\";\"\"!==I(e)&&'\"'!==I(e);)\"\\\\\"===I(e)&&(t+=I(e),B(e)),t+=I(e),B(e);if(q(e),'\"'!==e.token)throw le(e,'End of string \" expected');return q(e),JSON.parse('\"'+t+'\"')}function se(e){for(var t=\"\";\"\"!==I(e)&&\"'\"!==I(e);)\"\\\\\"===I(e)&&(t+=I(e),B(e)),t+=I(e),B(e);if(q(e),\"'\"!==e.token)throw le(e,\"End of string ' expected\");return q(e),JSON.parse('\"'+t+'\"')}function ce(e){for(var t=[Z(e)],n=1;\",\"===e.token;)q(e),t[n]=Z(e),n++;return new c(t)}function ue(e){return e.index-e.token.length+1}function le(e,t){var n=ue(e),r=new SyntaxError(t+\" (char \"+n+\")\");return r.char=n,r}function de(e,t){var n=ue(e),r=new SyntaxError(t+\" (char \"+n+\")\");return r.char=n,r}return _.isAlpha=function(e,t,n){return _.isValidLatinOrGreek(e)||_.isValidMathSymbol(e,n)||_.isValidMathSymbol(t,e)},_.isValidLatinOrGreek=function(e){return/^[a-zA-Z_$\\u00C0-\\u02AF\\u0370-\\u03FF\\u2100-\\u214F]$/.test(e)},_.isValidMathSymbol=function(e,t){return/^[\\uD835]$/.test(e)&&/^[\\uDC00-\\uDFFF]$/.test(t)&&/^[^\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDFCC\\uDFCD]$/.test(t)},_.isWhitespace=function(e,t){return\" \"===e||\"\\t\"===e||\"\\n\"===e&&t>0},_.isDecimalMark=function(e,t){return\".\"===e&&\"/\"!==t&&\"*\"!==t&&\"^\"!==t},_.isDigitDot=function(e){return e>=\"0\"&&e<=\"9\"||\".\"===e},_.isDigit=function(e){return e>=\"0\"&&e<=\"9\"},_.isHexDigit=function(e){return e>=\"0\"&&e<=\"9\"||e>=\"a\"&&e<=\"f\"||e>=\"A\"&&e<=\"F\"},_}));t.createParse=o})),Xr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCompile=void 0;var n=[\"typed\",\"parse\"],r=(0,h.factory)(\"compile\",n,(function(e){var t=e.typed,n=e.parse;return t(\"compile\",{string:function(e){return n(e).compile()},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,(function(e){return n(e).compile()}))}})}));t.createCompile=r})),Yr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createEvaluate=void 0;var n=[\"typed\",\"parse\"],r=(0,h.factory)(\"evaluate\",n,(function(e){var t=e.typed,n=e.parse;return t(\"evaluate\",{string:function(e){return n(e).compile().evaluate({})},\"string, Object\":function(e,t){return n(e).compile().evaluate(t)},\"Array | Matrix\":function(e){var t={};return(0,P.deepMap)(e,(function(e){return n(e).compile().evaluate(t)}))},\"Array | Matrix, Object\":function(e,t){return(0,P.deepMap)(e,(function(e){return n(e).compile().evaluate(t)}))}})}));t.createEvaluate=r})),Jr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createParserClass=void 0;var n=[\"parse\"],r=(0,h.factory)(\"Parser\",n,(function(e){var t=e.parse;function n(){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");this.scope={}}return n.prototype.type=\"Parser\",n.prototype.isParser=!0,n.prototype.evaluate=function(e){return t(e).compile().evaluate(this.scope)},n.prototype.get=function(e){return e in this.scope?(0,St.getSafeProperty)(this.scope,e):void 0},n.prototype.getAll=function(){return(0,a.extend)({},this.scope)},n.prototype.set=function(e,t){return(0,St.setSafeProperty)(this.scope,e,t)},n.prototype.remove=function(e){delete this.scope[e]},n.prototype.clear=function(){for(var e in this.scope)(0,a.hasOwnProperty)(this.scope,e)&&delete this.scope[e]},n}),{isClass:!0});t.createParserClass=r})),Kr=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createParser=void 0;var n=[\"typed\",\"Parser\"],r=(0,h.factory)(\"parser\",n,(function(e){var t=e.typed,n=e.Parser;return t(\"parser\",{\"\":function(){return new n}})}));t.createParser=r})),ei=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLup=void 0;var n=[\"typed\",\"matrix\",\"abs\",\"addScalar\",\"divideScalar\",\"multiplyScalar\",\"subtract\",\"larger\",\"equalScalar\",\"unaryMinus\",\"DenseMatrix\",\"SparseMatrix\",\"Spa\"],r=(0,h.factory)(\"lup\",n,(function(e){var t=e.typed,n=e.matrix,r=e.abs,i=e.addScalar,o=e.divideScalar,s=e.multiplyScalar,c=e.subtract,u=e.larger,l=e.equalScalar,d=e.unaryMinus,f=e.DenseMatrix,p=e.SparseMatrix,m=e.Spa;return t(\"lup\",{DenseMatrix:function(e){return h(e)},SparseMatrix:function(e){return y(e)},Array:function(e){var t=h(n(e));return{L:t.L.valueOf(),U:t.U.valueOf(),p:t.p}}});function h(e){var t,n,d,p=e._size[0],m=e._size[1],h=Math.min(p,m),y=(0,a.clone)(e._data),v=[],g=[p,h],b=[],x=[h,m],D=[];for(t=0;t<p;t++)D[t]=t;for(n=0;n<m;n++){if(n>0)for(t=0;t<p;t++){var _=Math.min(t,n),w=0;for(d=0;d<_;d++)w=i(w,s(y[t][d],y[d][n]));y[t][n]=c(y[t][n],w)}var N=n,M=0,O=0;for(t=n;t<p;t++){var S=y[t][n],P=r(S);u(P,M)&&(N=t,M=P,O=S)}if(n!==N&&(D[n]=[D[N],D[N]=D[n]][0],f._swapRows(n,N,y)),n<p)for(t=n+1;t<p;t++){var j=y[t][n];l(j,0)||(y[t][n]=o(y[t][n],O))}}for(n=0;n<m;n++)for(t=0;t<p;t++)0===n&&(t<m&&(b[t]=[]),v[t]=[]),t<n?(t<m&&(b[t][n]=y[t][n]),n<p&&(v[t][n]=0)):t!==n?(t<m&&(b[t][n]=0),n<p&&(v[t][n]=y[t][n])):(t<m&&(b[t][n]=y[t][n]),n<p&&(v[t][n]=1));var A=new f({data:v,size:g}),E=new f({data:b,size:x}),C=[];for(t=0,h=D.length;t<h;t++)C[D[t]]=t;return{L:A,U:E,p:C,toString:function(){return\"L: \"+this.L.toString()+\"\\nU: \"+this.U.toString()+\"\\nP: \"+this.p}}}function y(e){var t,n,i,a=e._size[0],c=e._size[1],f=Math.min(a,c),h=e._values,y=e._index,v=e._ptr,g=[],b=[],x=[],D=[a,f],_=[],w=[],N=[],M=[f,c],O=[],S=[];for(t=0;t<a;t++)O[t]=t,S[t]=t;var P=function(){var e=new m;n<a&&(x.push(g.length),g.push(1),b.push(n)),N.push(_.length);var c=v[n],f=v[n+1];for(i=c;i<f;i++)t=y[i],e.set(O[t],h[i]);n>0&&e.forEach(0,n-1,(function(t,n){p._forEachRow(t,g,b,x,(function(r,i){r>t&&e.accumulate(r,d(s(i,n)))}))}));var P,j,A,E,C=n,T=e.get(n),k=r(T);e.forEach(n+1,a-1,(function(e,t){var n=r(t);u(n,k)&&(C=e,k=n,T=t)})),n!==C&&(p._swapRows(n,C,D[1],g,b,x),p._swapRows(n,C,M[1],_,w,N),e.swap(n,C),j=C,A=S[P=n],E=S[j],O[A]=j,O[E]=P,S[P]=E,S[j]=A),e.forEach(0,a-1,(function(e,t){e<=n?(_.push(t),w.push(e)):(t=o(t,T),l(t,0)||(g.push(t),b.push(e)))}))};for(n=0;n<c;n++)P();return N.push(_.length),x.push(g.length),{L:new p({values:g,index:b,ptr:x,size:D}),U:new p({values:_,index:w,ptr:N,size:M}),p:O,toString:function(){return\"L: \"+this.L.toString()+\"\\nU: \"+this.U.toString()+\"\\nP: \"+this.p}}}}));t.createLup=r})),ti=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createQr=void 0;var r=[\"typed\",\"matrix\",\"zeros\",\"identity\",\"isZero\",\"equal\",\"sign\",\"sqrt\",\"conj\",\"unaryMinus\",\"addScalar\",\"divideScalar\",\"multiplyScalar\",\"subtract\",\"complex\"],i=(0,h.factory)(\"qr\",r,(function(e){var t=e.typed,r=e.matrix,i=e.zeros,a=e.identity,o=e.isZero,s=e.equal,c=e.sign,u=e.sqrt,l=e.conj,d=e.unaryMinus,f=e.addScalar,p=e.divideScalar,m=e.multiplyScalar,h=e.subtract,y=e.complex;return n(t(\"qr\",{DenseMatrix:function(e){return g(e)},SparseMatrix:function(e){return function(e){throw new Error(\"qr not implemented for sparse matrices yet\")}()},Array:function(e){var t=g(r(e));return{Q:t.Q.valueOf(),R:t.R.valueOf()}}}),{_denseQRimpl:v});function v(e){var t,n,r,y=e._size[0],v=e._size[1],g=a([y],\"dense\"),b=g._data,x=e.clone(),D=x._data,_=i([y],\"\");for(r=0;r<Math.min(v,y);++r){var w=D[r][r],N=d(s(w,0)?1:c(w)),M=l(N),O=0;for(t=r;t<y;t++)O=f(O,m(D[t][r],l(D[t][r])));var S=m(N,u(O));if(!o(S)){var P=h(w,S);for(_[r]=1,t=r+1;t<y;t++)_[t]=p(D[t][r],P);var j=d(l(p(P,S))),A=void 0;for(n=r;n<v;n++){for(A=0,t=r;t<y;t++)A=f(A,m(l(_[t]),D[t][n]));for(A=m(A,j),t=r;t<y;t++)D[t][n]=m(h(D[t][n],m(_[t],A)),M)}for(t=0;t<y;t++){for(A=0,n=r;n<y;n++)A=f(A,m(b[t][n],_[n]));for(A=m(A,j),n=r;n<y;++n)b[t][n]=p(h(b[t][n],m(A,l(_[n]))),M)}}}return{Q:g,R:x,toString:function(){return\"Q: \"+this.Q.toString()+\"\\nR: \"+this.R.toString()}}}function g(e){var t=v(e),n=t.R._data;if(e._data.length>0)for(var r=\"Complex\"===n[0][0].type?y(0):0,i=0;i<n.length;++i)for(var a=0;a<i&&a<(n[0]||[]).length;++a)n[i][a]=r;return t}}));t.createQr=i})),ni=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csPermute=function(e,t,n,r){for(var i=e._values,a=e._index,o=e._ptr,s=e._size,c=e._datatype,u=s[0],l=s[1],d=r&&e._values?[]:null,f=[],p=[],m=0,h=0;h<l;h++){p[h]=m;for(var y=n?n[h]:h,v=o[y],g=o[y+1],b=v;b<g;b++){var x=t?t[a[b]]:a[b];f[m]=x,d&&(d[m]=i[b]),m++}}return p[l]=m,e.createSparseMatrix({values:d,index:f,ptr:p,size:[u,l],datatype:c})}})),ri=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csTdfs=function(e,t,n,r,i,a,o){var s=0;n[o]=e;for(;s>=0;){var c=n[o+s],u=n[r+c];-1===u?(s--,a[t++]=c):(n[r+c]=n[i+u],++s,n[o+s]=u)}return t}})),ii=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csPost=function(e,t){if(!e)return null;var n,r=0,i=[],a=[],o=t,s=2*t;for(n=0;n<t;n++)a[0+n]=-1;for(n=t-1;n>=0;n--)-1!==e[n]&&(a[o+n]=a[0+e[n]],a[0+e[n]]=n);for(n=0;n<t;n++)-1===e[n]&&(r=(0,ri.csTdfs)(n,r,a,0,o,i,s));return i}})),ai=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csEtree=function(e,t){if(!e)return null;var n,r,i=e._index,a=e._ptr,o=e._size,s=o[0],c=o[1],u=[],l=[],d=c;if(t)for(n=0;n<s;n++)l[d+n]=-1;for(var f=0;f<c;f++){u[f]=-1,l[0+f]=-1;for(var p=a[f],m=a[f+1],h=p;h<m;h++){var y=i[h];for(n=t?l[d+y]:y;-1!==n&&n<f;n=r)r=l[0+n],l[0+n]=f,-1===r&&(u[n]=f);t&&(l[d+y]=f)}}return u}})),oi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csFkeep=function(e,t,n){for(var r=e._values,i=e._index,a=e._ptr,o=e._size[1],s=0,c=0;c<o;c++){var u=a[c];for(a[c]=s;u<a[c+1];u++)t(i[u],c,r?r[u]:1,n)&&(i[s]=i[u],r&&(r[s]=r[u]),s++)}a[o]=s,i.splice(s,i.length-s),r&&r.splice(s,r.length-s);return s}})),si=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csFlip=function(e){return-e-2}})),ci=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsAmd=void 0;var n=[\"add\",\"multiply\",\"transpose\"],r=(0,h.factory)(\"csAmd\",n,(function(e){var t=e.add,n=e.multiply,r=e.transpose;return function(e,o){if(!o||e<=0||e>3)return null;var s=o._size,c=s[0],u=s[1],l=0,d=Math.max(16,10*Math.sqrt(u)),f=function(e,i,a,o,s){var c=r(i);if(1===e&&o===a)return t(i,c);if(2===e){for(var u=c._index,l=c._ptr,d=0,f=0;f<a;f++){var p=l[f];if(l[f]=d,!(l[f+1]-p>s))for(var m=l[f+1];p<m;p++)u[d++]=u[p]}return l[a]=d,i=r(c),n(c,i)}return n(c,i)}(e,o,c,u,d=Math.min(u-2,d));(0,oi.csFkeep)(f,a,null);for(var p,m,h,y,v,g,b,x,D,_,w,N,M,O,S,P,j=f._index,A=f._ptr,E=A[u],C=[],T=[],k=u+1,I=2*(u+1),B=3*(u+1),z=4*(u+1),R=5*(u+1),q=6*(u+1),F=7*(u+1),U=C,L=function(e,t,n,r,a,o,s,c,u,l,d,f){for(var p=0;p<e;p++)n[r+p]=t[p+1]-t[p];n[r+e]=0;for(var m=0;m<=e;m++)n[a+m]=-1,o[m]=-1,n[s+m]=-1,n[c+m]=-1,n[u+m]=1,n[l+m]=1,n[d+m]=0,n[f+m]=n[r+m];var h=i(0,0,n,l,e);return n[d+e]=-2,t[e]=-1,n[l+e]=0,h}(u,A,T,0,B,U,I,F,k,q,z,R),H=function(e,t,n,r,i,a,o,s,c,u,l){for(var d=0,f=0;f<e;f++){var p=n[r+f];if(0===p)n[i+f]=-2,d++,t[f]=-1,n[a+f]=0;else if(p>o)n[s+f]=0,n[i+f]=-1,d++,t[f]=(0,si.csFlip)(e),n[s+e]++;else{var m=n[c+p];-1!==m&&(u[m]=f),n[l+f]=n[c+p],n[c+p]=f}}return d}(u,A,T,R,z,q,d,k,B,U,I),Z=0;H<u;){for(h=-1;Z<u&&-1===(h=T[B+Z]);Z++);-1!==T[I+h]&&(U[T[I+h]]=-1),T[B+Z]=T[I+h];var V=T[z+h],W=T[k+h];H+=W;var G=0;T[k+h]=-W;var $=A[h],Q=0===V?$:E,X=Q;for(y=1;y<=V+1;y++){for(y>V?(g=h,b=$,x=T[0+h]-V):(b=A[g=j[$++]],x=T[0+g]),v=1;v<=x;v++)(D=T[k+(p=j[b++])])<=0||(G+=D,T[k+p]=-D,j[X++]=p,-1!==T[I+p]&&(U[T[I+p]]=U[p]),-1!==U[p]?T[I+U[p]]=T[I+p]:T[B+T[R+p]]=T[I+p]);g!==h&&(A[g]=(0,si.csFlip)(h),T[q+g]=0)}for(0!==V&&(E=X),T[R+h]=G,A[h]=Q,T[0+h]=X-Q,T[z+h]=-2,L=i(L,l,T,q,u),_=Q;_<X;_++)if(!((w=T[z+(p=j[_])])<=0)){var Y=L-(D=-T[k+p]);for($=A[p],N=A[p]+w-1;$<=N;$++)T[q+(g=j[$])]>=L?T[q+g]-=D:0!==T[q+g]&&(T[q+g]=T[R+g]+Y)}for(_=Q;_<X;_++){for(M=(N=A[p=j[_]])+T[z+p]-1,O=N,S=0,P=0,$=N;$<=M;$++)if(0!==T[q+(g=j[$])]){var J=T[q+g]-L;J>0?(P+=J,j[O++]=g,S+=g):(A[g]=(0,si.csFlip)(h),T[q+g]=0)}T[z+p]=O-N+1;var K=O,ee=N+T[0+p];for($=M+1;$<ee;$++){var te=T[k+(m=j[$])];te<=0||(P+=te,j[O++]=m,S+=m)}0===P?(A[p]=(0,si.csFlip)(h),G-=D=-T[k+p],W+=D,H+=D,T[k+p]=0,T[z+p]=-1):(T[R+p]=Math.min(T[R+p],P),j[O]=j[K],j[K]=j[N],j[N]=h,T[0+p]=O-N+1,S=(S<0?-S:S)%u,T[I+p]=T[F+S],T[F+S]=p,U[p]=S)}for(T[R+h]=G,L=i(L+(l=Math.max(l,G)),l,T,q,u),_=Q;_<X;_++)if(!(T[k+(p=j[_])]>=0))for(p=T[F+(S=U[p])],T[F+S]=-1;-1!==p&&-1!==T[I+p];p=T[I+p],L++){for(x=T[0+p],w=T[z+p],$=A[p]+1;$<=A[p]+x-1;$++)T[q+j[$]]=L;var ne=p;for(m=T[I+p];-1!==m;){var re=T[0+m]===x&&T[z+m]===w;for($=A[m]+1;re&&$<=A[m]+x-1;$++)T[q+j[$]]!==L&&(re=0);re?(A[m]=(0,si.csFlip)(p),T[k+p]+=T[k+m],T[k+m]=0,T[z+m]=-1,m=T[I+m],T[I+ne]=m):(ne=m,m=T[I+m])}}for($=Q,_=Q;_<X;_++)(D=-T[k+(p=j[_])])<=0||(T[k+p]=D,P=T[R+p]+G-D,-1!==T[B+(P=Math.min(P,u-H-D))]&&(U[T[B+P]]=p),T[I+p]=T[B+P],U[p]=-1,T[B+P]=p,Z=Math.min(Z,P),T[R+p]=P,j[$++]=p);T[k+h]=W,0==(T[0+h]=$-Q)&&(A[h]=-1,T[q+h]=0),0!==V&&(E=$)}for(p=0;p<u;p++)A[p]=(0,si.csFlip)(A[p]);for(m=0;m<=u;m++)T[B+m]=-1;for(m=u;m>=0;m--)T[k+m]>0||(T[I+m]=T[B+A[m]],T[B+A[m]]=m);for(g=u;g>=0;g--)T[k+g]<=0||-1!==A[g]&&(T[I+g]=T[B+A[g]],T[B+A[g]]=g);for(h=0,p=0;p<=u;p++)-1===A[p]&&(h=(0,ri.csTdfs)(p,h,T,B,I,C,q));return C.splice(C.length-1,1),C};function i(e,t,n,r,i){if(e<2||e+t<0){for(var a=0;a<i;a++)0!==n[r+a]&&(n[r+a]=1);e=2}return e}function a(e,t){return e!==t}}));t.createCsAmd=r})),ui=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csLeaf=function(e,t,n,r,i,a,o){var s,c,u,l=0;if(e<=t||n[r+t]<=n[i+e])return-1;n[i+e]=n[r+t];var d=n[a+e];if(n[a+e]=t,-1===d)l=1,u=e;else{for(l=2,u=d;u!==n[o+u];u=n[o+u]);for(s=d;s!==u;s=c)c=n[o+s],n[o+s]=u}return{jleaf:l,q:u}}})),li=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsCounts=void 0;var n=[\"transpose\"],r=(0,h.factory)(\"csCounts\",n,(function(e){var t=e.transpose;return function(e,n,r,i){if(!e||!n||!r)return null;var a,o,s,c,u,l,d,f=e._size,p=f[0],m=f[1],h=4*m+(i?m+p+1:0),y=[],v=m,g=2*m,b=3*m,x=4*m,D=5*m+1;for(s=0;s<h;s++)y[s]=-1;var _=[],w=t(e),N=w._index,M=w._ptr;for(s=0;s<m;s++)for(_[o=r[s]]=-1===y[b+o]?1:0;-1!==o&&-1===y[b+o];o=n[o])y[b+o]=s;if(i){for(s=0;s<m;s++)y[r[s]]=s;for(a=0;a<p;a++){for(s=m,l=M[a],d=M[a+1],u=l;u<d;u++)s=Math.min(s,y[N[u]]);y[D+a]=y[x+s],y[x+s]=a}}for(a=0;a<m;a++)y[0+a]=a;for(s=0;s<m;s++){for(-1!==n[o=r[s]]&&_[n[o]]--,c=i?y[x+s]:o;-1!==c;c=i?y[D+c]:-1)for(u=M[c];u<M[c+1];u++){a=N[u];var O=(0,ui.csLeaf)(a,o,y,b,v,g,0);O.jleaf>=1&&_[o]++,2===O.jleaf&&_[O.q]--}-1!==n[o]&&(y[0+o]=n[o])}for(o=0;o<m;o++)-1!==n[o]&&(_[n[o]]+=_[o]);return _}}));t.createCsCounts=r})),di=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsSqr=void 0;var n=[\"add\",\"multiply\",\"transpose\"],r=(0,h.factory)(\"csSqr\",n,(function(e){var t=e.add,n=e.multiply,r=e.transpose,i=(0,ci.createCsAmd)({add:t,multiply:n,transpose:r}),a=(0,li.createCsCounts)({transpose:r});return function(e,t,n){var r,o=t._ptr,s=t._size[1],c={};if(c.q=i(e,t),e&&!c.q)return null;if(n){var u=e?(0,ni.csPermute)(t,null,c.q,0):t;c.parent=(0,ai.csEtree)(u,1);var l=(0,ii.csPost)(c.parent,s);if(c.cp=a(u,c.parent,l,1),u&&c.parent&&c.cp&&function(e,t){var n=e._ptr,r=e._index,i=e._size,a=i[0],o=i[1];t.pinv=[],t.leftmost=[];var s,c,u,l,d,f=t.parent,p=t.pinv,m=t.leftmost,h=[],y=a,v=a+o,g=a+2*o;for(c=0;c<o;c++)h[y+c]=-1,h[v+c]=-1,h[g+c]=0;for(s=0;s<a;s++)m[s]=-1;for(c=o-1;c>=0;c--)for(l=n[c],d=n[c+1],u=l;u<d;u++)m[r[u]]=c;for(s=a-1;s>=0;s--)p[s]=-1,-1!==(c=m[s])&&(0==h[g+c]++&&(h[v+c]=s),h[0+s]=h[y+c],h[y+c]=s);for(t.lnz=0,t.m2=a,c=0;c<o;c++)if(s=h[y+c],t.lnz++,s<0&&(s=t.m2++),p[s]=c,!(--g[c]<=0)){t.lnz+=h[g+c];var b=f[c];-1!==b&&(0===h[g+b]&&(h[v+b]=h[v+c]),h[0+h[v+c]]=h[y+b],h[y+b]=h[0+s],h[g+b]+=h[g+c])}for(s=0;s<a;s++)p[s]<0&&(p[s]=c++);return!0}(u,c))for(c.unz=0,r=0;r<s;r++)c.unz+=c.cp[r]}else c.unz=4*o[s]+s,c.lnz=c.unz;return c}}));t.createCsSqr=r})),fi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csMarked=function(e,t){return e[t]<0}})),pi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csMark=function(e,t){e[t]=(0,si.csFlip)(e[t])}})),mi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csUnflip=function(e){return e<0?(0,si.csFlip)(e):e}})),hi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csDfs=function(e,t,n,r,i){var a,o,s,c=t._index,u=t._ptr,l=t._size[1],d=0;r[0]=e;for(;d>=0;){e=r[d];var f=i?i[e]:e;(0,fi.csMarked)(u,e)||((0,pi.csMark)(u,e),r[l+d]=f<0?0:(0,mi.csUnflip)(u[f]));var p=1;for(o=r[l+d],s=f<0?0:(0,mi.csUnflip)(u[f+1]);o<s;o++)if(a=c[o],!(0,fi.csMarked)(u,a)){r[l+d]=o,r[++d]=a,p=0;break}p&&(d--,r[--n]=e)}return n}})),yi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csReach=function(e,t,n,r,i){var a,o,s,c=e._ptr,u=e._size,l=t._index,d=t._ptr,f=u[1],p=f;for(o=d[n],s=d[n+1],a=o;a<s;a++){var m=l[a];(0,fi.csMarked)(c,m)||(p=(0,hi.csDfs)(m,e,p,r,i))}for(a=p;a<f;a++)(0,pi.csMark)(c,r[a]);return p}})),vi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsSpsolve=void 0;var n=[\"divideScalar\",\"multiply\",\"subtract\"],r=(0,h.factory)(\"csSpsolve\",n,(function(e){var t=e.divideScalar,n=e.multiply,r=e.subtract;return function(e,i,a,o,s,c,u){var l,d,f,p,m=e._values,h=e._index,y=e._ptr,v=e._size[1],g=i._values,b=i._index,x=i._ptr,D=(0,yi.csReach)(e,i,a,o,c);for(l=D;l<v;l++)s[o[l]]=0;for(d=x[a],f=x[a+1],l=d;l<f;l++)s[b[l]]=g[l];for(var _=D;_<v;_++){var w=o[_],N=c?c[w]:w;if(!(N<0))for(d=y[N],f=y[N+1],s[w]=t(s[w],m[u?d:f-1]),l=u?d+1:d,p=u?f:f-1;l<p;l++){var M=h[l];s[M]=r(s[M],n(m[l],s[w]))}}return D}}));t.createCsSpsolve=r})),gi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCsLu=void 0;var n=[\"abs\",\"divideScalar\",\"multiply\",\"subtract\",\"larger\",\"largerEq\",\"SparseMatrix\"],r=(0,h.factory)(\"csLu\",n,(function(e){var t=e.abs,n=e.divideScalar,r=e.multiply,i=e.subtract,a=e.larger,o=e.largerEq,s=e.SparseMatrix,c=(0,vi.createCsSpsolve)({divideScalar:n,multiply:r,subtract:i});return function(e,i,u){if(!e)return null;var l,d=e._size[1],f=100,p=100;i&&(l=i.q,f=i.lnz||f,p=i.unz||p);var m,h,y=[],v=[],g=[],b=new s({values:y,index:v,ptr:g,size:[d,d]}),x=[],D=[],_=[],w=new s({values:x,index:D,ptr:_,size:[d,d]}),N=[],M=[],O=[];for(m=0;m<d;m++)M[m]=0,N[m]=-1,g[m+1]=0;f=0,p=0;for(var S=0;S<d;S++){g[S]=f,_[S]=p;var P=l?l[S]:S,j=c(b,e,P,O,M,N,1),A=-1,E=-1;for(h=j;h<d;h++)if(N[m=O[h]]<0){var C=t(M[m]);a(C,E)&&(E=C,A=m)}else D[p]=N[m],x[p++]=M[m];if(-1===A||E<=0)return null;N[P]<0&&o(t(M[P]),r(E,u))&&(A=P);var T=M[A];for(D[p]=S,x[p++]=T,N[A]=S,v[f]=A,y[f++]=1,h=j;h<d;h++)N[m=O[h]]<0&&(v[f]=m,y[f++]=n(M[m],T)),M[m]=0}for(g[d]=f,_[d]=p,h=0;h<f;h++)v[h]=N[v[h]];return y.splice(f,y.length-f),v.splice(f,v.length-f),x.splice(p,x.length-p),D.splice(p,D.length-p),{L:b,U:w,pinv:N}}}));t.createCsLu=r})),bi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSlu=void 0;var n=[\"typed\",\"abs\",\"add\",\"multiply\",\"transpose\",\"divideScalar\",\"subtract\",\"larger\",\"largerEq\",\"SparseMatrix\"],r=(0,h.factory)(\"slu\",n,(function(e){var t=e.typed,n=e.abs,r=e.add,i=e.multiply,a=e.transpose,o=e.divideScalar,s=e.subtract,c=e.larger,l=e.largerEq,d=e.SparseMatrix,f=(0,di.createCsSqr)({add:r,multiply:i,transpose:a}),p=(0,gi.createCsLu)({abs:n,divideScalar:o,multiply:i,subtract:s,larger:c,largerEq:l,SparseMatrix:d});return t(\"slu\",{\"SparseMatrix, number, number\":function(e,t,n){if(!(0,u.isInteger)(t)||t<0||t>3)throw new Error(\"Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]\");if(n<0||n>1)throw new Error(\"Partial pivoting threshold must be a number from 0 to 1\");var r=f(t,e,!1),i=p(e,r,n);return{L:i.L,U:i.U,p:i.pinv,q:r.q,toString:function(){return\"L: \"+this.L.toString()+\"\\nU: \"+this.U.toString()+\"\\np: \"+this.p.toString()+(this.q?\"\\nq: \"+this.q.toString():\"\")+\"\\n\"}}}})}));t.createSlu=r})),xi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.csIpvec=function(e,t){var n,r=t.length,i=[];if(e)for(n=0;n<r;n++)i[e[n]]=t[n];else for(n=0;n<r;n++)i[n]=t[n];return i}})),Di=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createLusolve=void 0;var n=[\"typed\",\"matrix\",\"lup\",\"slu\",\"usolve\",\"lsolve\",\"DenseMatrix\"],r=(0,h.factory)(\"lusolve\",n,(function(e){var t=e.typed,n=e.matrix,r=e.lup,a=e.slu,o=e.usolve,s=e.lsolve,c=e.DenseMatrix,u=(0,Kt.createSolveValidation)({DenseMatrix:c});return t(\"lusolve\",{\"Array, Array | Matrix\":function(e,t){e=n(e);var i=r(e);return d(i.L,i.U,i.p,null,t).valueOf()},\"DenseMatrix, Array | Matrix\":function(e,t){var n=r(e);return d(n.L,n.U,n.p,null,t)},\"SparseMatrix, Array | Matrix\":function(e,t){var n=r(e);return d(n.L,n.U,n.p,null,t)},\"SparseMatrix, Array | Matrix, number, number\":function(e,t,n,r){var i=a(e,n,r);return d(i.L,i.U,i.p,i.q,t)},\"Object, Array | Matrix\":function(e,t){return d(e.L,e.U,e.p,e.q,t)}});function l(e){if((0,i.isMatrix)(e))return e;if((0,i.isArray)(e))return n(e);throw new TypeError(\"Invalid Matrix LU decomposition\")}function d(e,t,n,r,i){e=l(e),t=l(t),n&&((i=u(e,i,!0))._data=(0,xi.csIpvec)(n,i._data));var a=s(e,i),c=o(t,a);return r&&(c._data=(0,xi.csIpvec)(r,c._data)),c}}));t.createLusolve=r})),_i=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createHelpClass=void 0;var n=[\"parse\"],r=(0,h.factory)(\"Help\",n,(function(e){var t=e.parse;function n(e){if(!(this instanceof n))throw new SyntaxError(\"Constructor must be called with the new operator\");if(!e)throw new Error('Argument \"doc\" missing');this.doc=e}return n.prototype.type=\"Help\",n.prototype.isHelp=!0,n.prototype.toString=function(){var e=this.doc||{},n=\"\\n\";if(e.name&&(n+=\"Name: \"+e.name+\"\\n\\n\"),e.category&&(n+=\"Category: \"+e.category+\"\\n\\n\"),e.description&&(n+=\"Description:\\n    \"+e.description+\"\\n\\n\"),e.syntax&&(n+=\"Syntax:\\n    \"+e.syntax.join(\"\\n    \")+\"\\n\\n\"),e.examples){n+=\"Examples:\\n\";for(var r={},a=0;a<e.examples.length;a++){var o=e.examples[a];n+=\"    \"+o+\"\\n\";var s=void 0;try{s=t(o).compile().evaluate(r)}catch(e){s=e}void 0===s||(0,i.isHelp)(s)||(n+=\"        \"+(0,d.format)(s,{precision:14})+\"\\n\")}n+=\"\\n\"}return e.seealso&&e.seealso.length&&(n+=\"See also: \"+e.seealso.join(\", \")+\"\\n\"),n},n.prototype.toJSON=function(){var e=(0,a.clone)(this.doc);return e.mathjs=\"Help\",e},n.fromJSON=function(e){var t={};return Object.keys(e).filter((function(e){return\"mathjs\"!==e})).forEach((function(n){t[n]=e[n]})),new n(t)},n.prototype.valueOf=n.prototype.toString,n}),{isClass:!0});t.createHelpClass=r})),wi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createChainClass=void 0;var n=[\"?on\",\"math\"],r=(0,h.factory)(\"Chain\",n,(function(e){var t=e.on,n=e.math;function r(e){if(!(this instanceof r))throw new SyntaxError(\"Constructor must be called with the new operator\");(0,i.isChain)(e)?this.value=e.value:this.value=e}function o(e,t){(0,a.lazy)(r.prototype,e,(function(){var e=t();if(\"function\"==typeof e)return s(e)}))}function s(e){return function(){for(var t=[this.value],n=0;n<arguments.length;n++)t[n+1]=arguments[n];return new r(e.apply(e,t))}}r.prototype.type=\"Chain\",r.prototype.isChain=!0,r.prototype.done=function(){return this.value},r.prototype.valueOf=function(){return this.value},r.prototype.toString=function(){return(0,d.format)(this.value)},r.prototype.toJSON=function(){return{mathjs:\"Chain\",value:this.value}},r.fromJSON=function(e){return new r(e.value)},r.createProxy=function(e,t){if(\"string\"==typeof e)!function(e,t){\"function\"==typeof t&&(r.prototype[e]=s(t))}(e,t);else{var n=function(t){(0,a.hasOwnProperty)(e,t)&&void 0===c[t]&&o(t,(function(){return e[t]}))};for(var i in e)n(i)}};var c={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};return r.createProxy(n),t&&t(\"import\",(function(e,t,n){n||o(e,t)})),r}),{isClass:!0});t.createChainClass=r})),Ni=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bignumberDocs=void 0;t.bignumberDocs={name:\"bignumber\",category:\"Construction\",syntax:[\"bignumber(x)\"],description:\"Create a big number from a number or string.\",examples:[\"0.1 + 0.2\",\"bignumber(0.1) + bignumber(0.2)\",'bignumber(\"7.2\")','bignumber(\"7.2e500\")',\"bignumber([0.1, 0.2, 0.3])\"],seealso:[\"boolean\",\"complex\",\"fraction\",\"index\",\"matrix\",\"string\",\"unit\"]}})),Mi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.typeOfDocs=void 0;t.typeOfDocs={name:\"typeOf\",category:\"Utils\",syntax:[\"typeOf(x)\"],description:\"Get the type of a variable.\",examples:[\"typeOf(3.5)\",\"typeOf(2 - 4i)\",\"typeOf(45 deg)\",'typeOf(\"hello world\")'],seealso:[\"getMatrixDataType\"]}})),Oi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isZeroDocs=void 0;t.isZeroDocs={name:\"isZero\",category:\"Utils\",syntax:[\"isZero(x)\"],description:\"Test whether a value is zero.\",examples:[\"isZero(2)\",\"isZero(0)\",\"isZero(-4)\",\"isZero([3, 0, -2, 0])\"],seealso:[\"isInteger\",\"isNumeric\",\"isNegative\",\"isPositive\"]}})),Si=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isPrimeDocs=void 0;t.isPrimeDocs={name:\"isPrime\",category:\"Utils\",syntax:[\"isPrime(x)\"],description:\"Test whether a value is prime: has no divisors other than itself and one.\",examples:[\"isPrime(3)\",\"isPrime(-2)\",\"isPrime([2, 17, 100])\"],seealso:[\"isInteger\",\"isNumeric\",\"isNegative\",\"isZero\"]}})),Pi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isPositiveDocs=void 0;t.isPositiveDocs={name:\"isPositive\",category:\"Utils\",syntax:[\"isPositive(x)\"],description:\"Test whether a value is positive: larger than zero.\",examples:[\"isPositive(2)\",\"isPositive(0)\",\"isPositive(-4)\",\"isPositive([3, 0.5, -2])\"],seealso:[\"isInteger\",\"isNumeric\",\"isNegative\",\"isZero\"]}})),ji=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNumericDocs=void 0;t.isNumericDocs={name:\"isNumeric\",category:\"Utils\",syntax:[\"isNumeric(x)\"],description:\"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.\",examples:[\"isNumeric(2)\",'isNumeric(\"2\")','hasNumericValue(\"2\")',\"isNumeric(0)\",\"isNumeric(bignumber(500))\",\"isNumeric(fraction(0.125))\",\"isNumeric(2 + 3i)\",'isNumeric([2.3, \"foo\", false])'],seealso:[\"isInteger\",\"isZero\",\"isNegative\",\"isPositive\",\"isNaN\",\"hasNumericValue\"]}})),Ai=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hasNumericValueDocs=void 0;t.hasNumericValueDocs={name:\"hasNumericValue\",category:\"Utils\",syntax:[\"hasNumericValue(x)\"],description:\"Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.\",examples:[\"hasNumericValue(2)\",'hasNumericValue(\"2\")','isNumeric(\"2\")',\"hasNumericValue(0)\",\"hasNumericValue(bignumber(500))\",\"hasNumericValue(fraction(0.125))\",\"hasNumericValue(2 + 3i)\",'hasNumericValue([2.3, \"foo\", false])'],seealso:[\"isInteger\",\"isZero\",\"isNegative\",\"isPositive\",\"isNaN\",\"isNumeric\"]}})),Ei=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNegativeDocs=void 0;t.isNegativeDocs={name:\"isNegative\",category:\"Utils\",syntax:[\"isNegative(x)\"],description:\"Test whether a value is negative: smaller than zero.\",examples:[\"isNegative(2)\",\"isNegative(0)\",\"isNegative(-4)\",\"isNegative([3, 0.5, -2])\"],seealso:[\"isInteger\",\"isNumeric\",\"isPositive\",\"isZero\"]}})),Ci=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isIntegerDocs=void 0;t.isIntegerDocs={name:\"isInteger\",category:\"Utils\",syntax:[\"isInteger(x)\"],description:\"Test whether a value is an integer number.\",examples:[\"isInteger(2)\",\"isInteger(3.5)\",\"isInteger([3, 0.5, -2])\"],seealso:[\"isNegative\",\"isNumeric\",\"isPositive\",\"isZero\"]}})),Ti=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNaNDocs=void 0;t.isNaNDocs={name:\"isNaN\",category:\"Utils\",syntax:[\"isNaN(x)\"],description:\"Test whether a value is NaN (not a number)\",examples:[\"isNaN(2)\",\"isNaN(0 / 0)\",\"isNaN(NaN)\",\"isNaN(Infinity)\"],seealso:[\"isNegative\",\"isNumeric\",\"isPositive\",\"isZero\"]}})),ki=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.formatDocs=void 0;t.formatDocs={name:\"format\",category:\"Utils\",syntax:[\"format(value)\",\"format(value, precision)\"],description:\"Format a value of any type as string.\",examples:[\"format(2.3)\",\"format(3 - 4i)\",\"format([])\",\"format(pi, 3)\"],seealso:[\"print\"]}})),Ii=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.binDocs=void 0;t.binDocs={name:\"bin\",category:\"Utils\",syntax:[\"bin(value)\"],description:\"Format a number as binary\",examples:[\"bin(2)\"],seealso:[\"oct\",\"hex\"]}})),Bi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.octDocs=void 0;t.octDocs={name:\"oct\",category:\"Utils\",syntax:[\"oct(value)\"],description:\"Format a number as octal\",examples:[\"oct(56)\"],seealso:[\"bin\",\"hex\"]}})),zi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hexDocs=void 0;t.hexDocs={name:\"hex\",category:\"Utils\",syntax:[\"hex(value)\"],description:\"Format a number as hexadecimal\",examples:[\"hex(240)\"],seealso:[\"bin\",\"oct\"]}})),Ri=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cloneDocs=void 0;t.cloneDocs={name:\"clone\",category:\"Utils\",syntax:[\"clone(x)\"],description:\"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices\",examples:[\"clone(3.5)\",\"clone(2 - 4i)\",\"clone(45 deg)\",\"clone([1, 2; 3, 4])\",'clone(\"hello world\")'],seealso:[]}})),qi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.toDocs=void 0;t.toDocs={name:\"to\",category:\"Units\",syntax:[\"x to unit\",\"to(x, unit)\"],description:\"Change the unit of a value.\",examples:[\"5 inch to cm\",\"3.2kg to g\",\"16 bytes in bits\"],seealso:[]}})),Fi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.tanhDocs=void 0;t.tanhDocs={name:\"tanh\",category:\"Trigonometry\",syntax:[\"tanh(x)\"],description:\"Compute the hyperbolic tangent of x in radians.\",examples:[\"tanh(0.5)\",\"sinh(0.5) / cosh(0.5)\"],seealso:[\"sinh\",\"cosh\"]}})),Ui=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.tanDocs=void 0;t.tanDocs={name:\"tan\",category:\"Trigonometry\",syntax:[\"tan(x)\"],description:\"Compute the tangent of x in radians.\",examples:[\"tan(0.5)\",\"sin(0.5) / cos(0.5)\",\"tan(pi / 4)\",\"tan(45 deg)\"],seealso:[\"atan\",\"sin\",\"cos\"]}})),Li=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sinhDocs=void 0;t.sinhDocs={name:\"sinh\",category:\"Trigonometry\",syntax:[\"sinh(x)\"],description:\"Compute the hyperbolic sine of x in radians.\",examples:[\"sinh(0.5)\"],seealso:[\"cosh\",\"tanh\"]}})),Hi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sechDocs=void 0;t.sechDocs={name:\"sech\",category:\"Trigonometry\",syntax:[\"sech(x)\"],description:\"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)\",examples:[\"sech(2)\",\"1 / cosh(2)\"],seealso:[\"coth\",\"csch\",\"cosh\"]}})),Zi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.secDocs=void 0;t.secDocs={name:\"sec\",category:\"Trigonometry\",syntax:[\"sec(x)\"],description:\"Compute the secant of x in radians. Defined as 1/cos(x)\",examples:[\"sec(2)\",\"1 / cos(2)\"],seealso:[\"cot\",\"csc\",\"cos\"]}})),Vi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cschDocs=void 0;t.cschDocs={name:\"csch\",category:\"Trigonometry\",syntax:[\"csch(x)\"],description:\"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)\",examples:[\"csch(2)\",\"1 / sinh(2)\"],seealso:[\"sech\",\"coth\",\"sinh\"]}})),Wi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cscDocs=void 0;t.cscDocs={name:\"csc\",category:\"Trigonometry\",syntax:[\"csc(x)\"],description:\"Compute the cosecant of x in radians. Defined as 1/sin(x)\",examples:[\"csc(2)\",\"1 / sin(2)\"],seealso:[\"sec\",\"cot\",\"sin\"]}})),Gi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cothDocs=void 0;t.cothDocs={name:\"coth\",category:\"Trigonometry\",syntax:[\"coth(x)\"],description:\"Compute the hyperbolic cotangent of x in radians.\",examples:[\"coth(2)\",\"1 / tanh(2)\"],seealso:[\"sech\",\"csch\",\"tanh\"]}})),$i=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cotDocs=void 0;t.cotDocs={name:\"cot\",category:\"Trigonometry\",syntax:[\"cot(x)\"],description:\"Compute the cotangent of x in radians. Defined as 1/tan(x)\",examples:[\"cot(2)\",\"1 / tan(2)\"],seealso:[\"sec\",\"csc\",\"tan\"]}})),Qi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.coshDocs=void 0;t.coshDocs={name:\"cosh\",category:\"Trigonometry\",syntax:[\"cosh(x)\"],description:\"Compute the hyperbolic cosine of x in radians.\",examples:[\"cosh(0.5)\"],seealso:[\"sinh\",\"tanh\",\"coth\"]}})),Xi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cosDocs=void 0;t.cosDocs={name:\"cos\",category:\"Trigonometry\",syntax:[\"cos(x)\"],description:\"Compute the cosine of x in radians.\",examples:[\"cos(2)\",\"cos(pi / 4) ^ 2\",\"cos(180 deg)\",\"cos(60 deg)\",\"sin(0.2)^2 + cos(0.2)^2\"],seealso:[\"acos\",\"sin\",\"tan\"]}})),Yi=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atan2Docs=void 0;t.atan2Docs={name:\"atan2\",category:\"Trigonometry\",syntax:[\"atan2(y, x)\"],description:\"Computes the principal value of the arc tangent of y/x in radians.\",examples:[\"atan2(2, 2) / pi\",\"angle = 60 deg in rad\",\"x = cos(angle)\",\"y = sin(angle)\",\"atan2(y, x)\"],seealso:[\"sin\",\"cos\",\"tan\"]}})),Ji=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atanhDocs=void 0;t.atanhDocs={name:\"atanh\",category:\"Trigonometry\",syntax:[\"atanh(x)\"],description:\"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.\",examples:[\"atanh(0.5)\"],seealso:[\"acosh\",\"asinh\"]}})),Ki=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atanDocs=void 0;t.atanDocs={name:\"atan\",category:\"Trigonometry\",syntax:[\"atan(x)\"],description:\"Compute the inverse tangent of a value in radians.\",examples:[\"atan(0.5)\",\"atan(tan(0.5))\"],seealso:[\"tan\",\"acos\",\"asin\"]}})),ea=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asinhDocs=void 0;t.asinhDocs={name:\"asinh\",category:\"Trigonometry\",syntax:[\"asinh(x)\"],description:\"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.\",examples:[\"asinh(0.5)\"],seealso:[\"acosh\",\"atanh\"]}})),ta=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asinDocs=void 0;t.asinDocs={name:\"asin\",category:\"Trigonometry\",syntax:[\"asin(x)\"],description:\"Compute the inverse sine of a value in radians.\",examples:[\"asin(0.5)\",\"asin(sin(0.5))\"],seealso:[\"sin\",\"acos\",\"atan\"]}})),na=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asechDocs=void 0;t.asechDocs={name:\"asech\",category:\"Trigonometry\",syntax:[\"asech(x)\"],description:\"Calculate the inverse secant of a value.\",examples:[\"asech(0.5)\"],seealso:[\"acsch\",\"acoth\"]}})),ra=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asecDocs=void 0;t.asecDocs={name:\"asec\",category:\"Trigonometry\",syntax:[\"asec(x)\"],description:\"Calculate the inverse secant of a value.\",examples:[\"asec(0.5)\",\"asec(sec(0.5))\",\"asec(2)\"],seealso:[\"acos\",\"acot\",\"acsc\"]}})),ia=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acschDocs=void 0;t.acschDocs={name:\"acsch\",category:\"Trigonometry\",syntax:[\"acsch(x)\"],description:\"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.\",examples:[\"acsch(0.5)\"],seealso:[\"asech\",\"acoth\"]}})),aa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acscDocs=void 0;t.acscDocs={name:\"acsc\",category:\"Trigonometry\",syntax:[\"acsc(x)\"],description:\"Calculate the inverse cotangent of a value.\",examples:[\"acsc(2)\",\"acsc(csc(0.5))\",\"acsc(0.5)\"],seealso:[\"csc\",\"asin\",\"asec\"]}})),oa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acothDocs=void 0;t.acothDocs={name:\"acoth\",category:\"Trigonometry\",syntax:[\"acoth(x)\"],description:\"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.\",examples:[\"acoth(2)\",\"acoth(0.5)\"],seealso:[\"acsch\",\"asech\"]}})),sa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acotDocs=void 0;t.acotDocs={name:\"acot\",category:\"Trigonometry\",syntax:[\"acot(x)\"],description:\"Calculate the inverse cotangent of a value.\",examples:[\"acot(0.5)\",\"acot(cot(0.5))\",\"acot(2)\"],seealso:[\"cot\",\"atan\"]}})),ca=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acoshDocs=void 0;t.acoshDocs={name:\"acosh\",category:\"Trigonometry\",syntax:[\"acosh(x)\"],description:\"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.\",examples:[\"acosh(1.5)\"],seealso:[\"cosh\",\"asinh\",\"atanh\"]}})),ua=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acosDocs=void 0;t.acosDocs={name:\"acos\",category:\"Trigonometry\",syntax:[\"acos(x)\"],description:\"Compute the inverse cosine of a value in radians.\",examples:[\"acos(0.5)\",\"acos(cos(2.3))\"],seealso:[\"cos\",\"atan\",\"asin\"]}})),la=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sumDocs=void 0;t.sumDocs={name:\"sum\",category:\"Statistics\",syntax:[\"sum(a, b, c, ...)\",\"sum(A)\"],description:\"Compute the sum of all values.\",examples:[\"sum(2, 3, 4, 1)\",\"sum([2, 3, 4, 1])\",\"sum([2, 5; 4, 3])\"],seealso:[\"max\",\"mean\",\"median\",\"min\",\"prod\",\"std\",\"sum\",\"variance\"]}})),da=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stdDocs=void 0;t.stdDocs={name:\"std\",category:\"Statistics\",syntax:[\"std(a, b, c, ...)\",\"std(A)\",\"std(A, normalization)\"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be \"unbiased\" (default), \"uncorrected\", or \"biased\".',examples:[\"std(2, 4, 6)\",\"std([2, 4, 6, 8])\",'std([2, 4, 6, 8], \"uncorrected\")','std([2, 4, 6, 8], \"biased\")',\"std([1, 2, 3; 4, 5, 6])\"],seealso:[\"max\",\"mean\",\"min\",\"median\",\"prod\",\"sum\",\"variance\"]}})),fa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.quantileSeqDocs=void 0;t.quantileSeqDocs={name:\"quantileSeq\",category:\"Statistics\",syntax:[\"quantileSeq(A, prob[, sorted])\",\"quantileSeq(A, [prob1, prob2, ...][, sorted])\",\"quantileSeq(A, N[, sorted])\"],description:\"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \\n\\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.\",examples:[\"quantileSeq([3, -1, 5, 7], 0.5)\",\"quantileSeq([3, -1, 5, 7], [1/3, 2/3])\",\"quantileSeq([3, -1, 5, 7], 2)\",\"quantileSeq([-1, 3, 5, 7], 0.5, true)\"],seealso:[\"mean\",\"median\",\"min\",\"max\",\"prod\",\"std\",\"sum\",\"variance\"]}})),pa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.prodDocs=void 0;t.prodDocs={name:\"prod\",category:\"Statistics\",syntax:[\"prod(a, b, c, ...)\",\"prod(A)\"],description:\"Compute the product of all values.\",examples:[\"prod(2, 3, 4)\",\"prod([2, 3, 4])\",\"prod([2, 5; 4, 3])\"],seealso:[\"max\",\"mean\",\"min\",\"median\",\"min\",\"std\",\"sum\",\"variance\"]}})),ma=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.modeDocs=void 0;t.modeDocs={name:\"mode\",category:\"Statistics\",syntax:[\"mode(a, b, c, ...)\",\"mode(A)\",\"mode(A, a, b, B, c, ...)\"],description:\"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.\",examples:[\"mode(2, 1, 4, 3, 1)\",\"mode([1, 2.7, 3.2, 4, 2.7])\",\"mode(1, 4, 6, 1, 6)\"],seealso:[\"max\",\"mean\",\"min\",\"median\",\"prod\",\"std\",\"sum\",\"variance\"]}})),ha=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.minDocs=void 0;t.minDocs={name:\"min\",category:\"Statistics\",syntax:[\"min(a, b, c, ...)\",\"min(A)\",\"min(A, dim)\"],description:\"Compute the minimum value of a list of values.\",examples:[\"min(2, 3, 4, 1)\",\"min([2, 3, 4, 1])\",\"min([2, 5; 4, 3])\",\"min([2, 5; 4, 3], 1)\",\"min([2, 5; 4, 3], 2)\",\"min(2.7, 7.1, -4.5, 2.0, 4.1)\",\"max(2.7, 7.1, -4.5, 2.0, 4.1)\"],seealso:[\"max\",\"mean\",\"median\",\"prod\",\"std\",\"sum\",\"variance\"]}})),ya=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.medianDocs=void 0;t.medianDocs={name:\"median\",category:\"Statistics\",syntax:[\"median(a, b, c, ...)\",\"median(A)\"],description:\"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.\",examples:[\"median(5, 2, 7)\",\"median([3, -1, 5, 7])\"],seealso:[\"max\",\"mean\",\"min\",\"prod\",\"std\",\"sum\",\"variance\",\"quantileSeq\"]}})),va=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.meanDocs=void 0;t.meanDocs={name:\"mean\",category:\"Statistics\",syntax:[\"mean(a, b, c, ...)\",\"mean(A)\",\"mean(A, dim)\"],description:\"Compute the arithmetic mean of a list of values.\",examples:[\"mean(2, 3, 4, 1)\",\"mean([2, 3, 4, 1])\",\"mean([2, 5; 4, 3])\",\"mean([2, 5; 4, 3], 1)\",\"mean([2, 5; 4, 3], 2)\",\"mean([1.0, 2.7, 3.2, 4.0])\"],seealso:[\"max\",\"median\",\"min\",\"prod\",\"std\",\"sum\",\"variance\"]}})),ga=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.maxDocs=void 0;t.maxDocs={name:\"max\",category:\"Statistics\",syntax:[\"max(a, b, c, ...)\",\"max(A)\",\"max(A, dim)\"],description:\"Compute the maximum value of a list of values.\",examples:[\"max(2, 3, 4, 1)\",\"max([2, 3, 4, 1])\",\"max([2, 5; 4, 3])\",\"max([2, 5; 4, 3], 1)\",\"max([2, 5; 4, 3], 2)\",\"max(2.7, 7.1, -4.5, 2.0, 4.1)\",\"min(2.7, 7.1, -4.5, 2.0, 4.1)\"],seealso:[\"mean\",\"median\",\"min\",\"prod\",\"std\",\"sum\",\"variance\"]}})),ba=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.madDocs=void 0;t.madDocs={name:\"mad\",category:\"Statistics\",syntax:[\"mad(a, b, c, ...)\",\"mad(A)\"],description:\"Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.\",examples:[\"mad(10, 20, 30)\",\"mad([1, 2, 3])\"],seealso:[\"mean\",\"median\",\"std\",\"abs\"]}})),xa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.erfDocs=void 0;t.erfDocs={name:\"erf\",category:\"Special\",syntax:[\"erf(x)\"],description:\"Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x\",examples:[\"erf(0.2)\",\"erf(-0.5)\",\"erf(4)\"],seealso:[]}})),Da=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setUnionDocs=void 0;t.setUnionDocs={name:\"setUnion\",category:\"Set\",syntax:[\"setUnion(set1, set2)\"],description:\"Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.\",examples:[\"setUnion([1, 2, 3, 4], [3, 4, 5, 6])\",\"setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])\"],seealso:[\"setIntersect\",\"setDifference\"]}})),_a=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setSymDifferenceDocs=void 0;t.setSymDifferenceDocs={name:\"setSymDifference\",category:\"Set\",syntax:[\"setSymDifference(set1, set2)\"],description:\"Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.\",examples:[\"setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])\",\"setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])\"],seealso:[\"setUnion\",\"setIntersect\",\"setDifference\"]}})),wa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setSizeDocs=void 0;t.setSizeDocs={name:\"setSize\",category:\"Set\",syntax:[\"setSize(set)\",\"setSize(set, unique)\"],description:'Count the number of elements of a (multi)set. When the second parameter \"unique\" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',examples:[\"setSize([1, 2, 2, 4])\",\"setSize([1, 2, 2, 4], true)\"],seealso:[\"setUnion\",\"setIntersect\",\"setDifference\"]}})),Na=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setPowersetDocs=void 0;t.setPowersetDocs={name:\"setPowerset\",category:\"Set\",syntax:[\"setPowerset(set)\"],description:\"Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.\",examples:[\"setPowerset([1, 2, 3])\"],seealso:[\"setCartesian\"]}})),Ma=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setMultiplicityDocs=void 0;t.setMultiplicityDocs={name:\"setMultiplicity\",category:\"Set\",syntax:[\"setMultiplicity(element, set)\"],description:\"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.\",examples:[\"setMultiplicity(1, [1, 2, 2, 4])\",\"setMultiplicity(2, [1, 2, 2, 4])\"],seealso:[\"setDistinct\",\"setSize\"]}})),Oa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setIsSubsetDocs=void 0;t.setIsSubsetDocs={name:\"setIsSubset\",category:\"Set\",syntax:[\"setIsSubset(set1, set2)\"],description:\"Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.\",examples:[\"setIsSubset([1, 2], [3, 4, 5, 6])\",\"setIsSubset([3, 4], [3, 4, 5, 6])\"],seealso:[\"setUnion\",\"setIntersect\",\"setDifference\"]}})),Sa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setIntersectDocs=void 0;t.setIntersectDocs={name:\"setIntersect\",category:\"Set\",syntax:[\"setIntersect(set1, set2)\"],description:\"Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.\",examples:[\"setIntersect([1, 2, 3, 4], [3, 4, 5, 6])\",\"setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])\"],seealso:[\"setUnion\",\"setDifference\"]}})),Pa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setDistinctDocs=void 0;t.setDistinctDocs={name:\"setDistinct\",category:\"Set\",syntax:[\"setDistinct(set)\"],description:\"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.\",examples:[\"setDistinct([1, 1, 1, 2, 2, 3])\"],seealso:[\"setMultiplicity\"]}})),ja=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setDifferenceDocs=void 0;t.setDifferenceDocs={name:\"setDifference\",category:\"Set\",syntax:[\"setDifference(set1, set2)\"],description:\"Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.\",examples:[\"setDifference([1, 2, 3, 4], [3, 4, 5, 6])\",\"setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])\"],seealso:[\"setUnion\",\"setIntersect\",\"setSymDifference\"]}})),Aa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setCartesianDocs=void 0;t.setCartesianDocs={name:\"setCartesian\",category:\"Set\",syntax:[\"setCartesian(set1, set2)\"],description:\"Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.\",examples:[\"setCartesian([1, 2], [3, 4])\"],seealso:[\"setUnion\",\"setIntersect\",\"setDifference\",\"setPowerset\"]}})),Ea=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unequalDocs=void 0;t.unequalDocs={name:\"unequal\",category:\"Relational\",syntax:[\"x != y\",\"unequal(x, y)\"],description:\"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.\",examples:[\"2+2 != 3\",\"2+2 != 4\",\"a = 3.2\",\"b = 6-2.8\",\"a != b\",\"50cm != 0.5m\",\"5 cm != 2 inch\"],seealso:[\"equal\",\"smaller\",\"larger\",\"smallerEq\",\"largerEq\",\"compare\",\"deepEqual\"]}})),Ca=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.smallerEqDocs=void 0;t.smallerEqDocs={name:\"smallerEq\",category:\"Relational\",syntax:[\"x <= y\",\"smallerEq(x, y)\"],description:\"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.\",examples:[\"2 <= 1+1\",\"2 < 1+1\",\"a = 3.2\",\"b = 6-2.8\",\"(a <= b)\"],seealso:[\"equal\",\"unequal\",\"larger\",\"smaller\",\"largerEq\",\"compare\"]}})),Ta=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.smallerDocs=void 0;t.smallerDocs={name:\"smaller\",category:\"Relational\",syntax:[\"x < y\",\"smaller(x, y)\"],description:\"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.\",examples:[\"2 < 3\",\"5 < 2*2\",\"a = 3.3\",\"b = 6-2.8\",\"(a < b)\",\"5 cm < 2 inch\"],seealso:[\"equal\",\"unequal\",\"larger\",\"smallerEq\",\"largerEq\",\"compare\"]}})),ka=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.largerEqDocs=void 0;t.largerEqDocs={name:\"largerEq\",category:\"Relational\",syntax:[\"x >= y\",\"largerEq(x, y)\"],description:\"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.\",examples:[\"2 >= 1+1\",\"2 > 1+1\",\"a = 3.2\",\"b = 6-2.8\",\"(a >= b)\"],seealso:[\"equal\",\"unequal\",\"smallerEq\",\"smaller\",\"compare\"]}})),Ia=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.largerDocs=void 0;t.largerDocs={name:\"larger\",category:\"Relational\",syntax:[\"x > y\",\"larger(x, y)\"],description:\"Check if value x is larger than y. Returns true if x is larger than y, and false if not.\",examples:[\"2 > 3\",\"5 > 2*2\",\"a = 3.3\",\"b = 6-2.8\",\"(a > b)\",\"(b < a)\",\"5 cm > 2 inch\"],seealso:[\"equal\",\"unequal\",\"smaller\",\"smallerEq\",\"largerEq\",\"compare\"]}})),Ba=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.equalTextDocs=void 0;t.equalTextDocs={name:\"equalText\",category:\"Relational\",syntax:[\"equalText(x, y)\"],description:\"Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.\",examples:['equalText(\"Hello\", \"Hello\")','equalText(\"a\", \"A\")','equal(\"2e3\", \"2000\")','equalText(\"2e3\", \"2000\")','equalText(\"B\", [\"A\", \"B\", \"C\"])'],seealso:[\"compare\",\"compareNatural\",\"compareText\",\"equal\"]}})),za=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.equalDocs=void 0;t.equalDocs={name:\"equal\",category:\"Relational\",syntax:[\"x == y\",\"equal(x, y)\"],description:\"Check equality of two values. Returns true if the values are equal, and false if not.\",examples:[\"2+2 == 3\",\"2+2 == 4\",\"a = 3.2\",\"b = 6-2.8\",\"a == b\",\"50cm == 0.5m\"],seealso:[\"unequal\",\"smaller\",\"larger\",\"smallerEq\",\"largerEq\",\"compare\",\"deepEqual\",\"equalText\"]}})),Ra=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.deepEqualDocs=void 0;t.deepEqualDocs={name:\"deepEqual\",category:\"Relational\",syntax:[\"deepEqual(x, y)\"],description:\"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.\",examples:[\"deepEqual([1,3,4], [1,3,4])\",\"deepEqual([1,3,4], [1,3])\"],seealso:[\"equal\",\"unequal\",\"smaller\",\"larger\",\"smallerEq\",\"largerEq\",\"compare\"]}})),qa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compareTextDocs=void 0;t.compareTextDocs={name:\"compareText\",category:\"Relational\",syntax:[\"compareText(x, y)\"],description:\"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.\",examples:['compareText(\"B\", \"A\")','compareText(\"A\", \"B\")','compareText(\"A\", \"A\")','compareText(\"2\", \"10\")','compare(\"2\", \"10\")',\"compare(2, 10)\",'compareNatural(\"2\", \"10\")','compareText(\"B\", [\"A\", \"B\", \"C\"])'],seealso:[\"compare\",\"compareNatural\"]}})),Fa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compareNaturalDocs=void 0;t.compareNaturalDocs={name:\"compareNatural\",category:\"Relational\",syntax:[\"compareNatural(x, y)\"],description:\"Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.\",examples:[\"compareNatural(2, 3)\",\"compareNatural(3, 2)\",\"compareNatural(2, 2)\",\"compareNatural(5cm, 40mm)\",'compareNatural(\"2\", \"10\")',\"compareNatural(2 + 3i, 2 + 4i)\",\"compareNatural([1, 2, 4], [1, 2, 3])\",\"compareNatural([1, 5], [1, 2, 3])\",\"compareNatural([1, 2], [1, 2])\",\"compareNatural({a: 2}, {a: 4})\"],seealso:[\"equal\",\"unequal\",\"smaller\",\"smallerEq\",\"largerEq\",\"compare\",\"compareText\"]}})),Ua=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compareDocs=void 0;t.compareDocs={name:\"compare\",category:\"Relational\",syntax:[\"compare(x, y)\"],description:\"Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.\",examples:[\"compare(2, 3)\",\"compare(3, 2)\",\"compare(2, 2)\",\"compare(5cm, 40mm)\",\"compare(2, [1, 2, 3])\"],seealso:[\"equal\",\"unequal\",\"smaller\",\"smallerEq\",\"largerEq\",\"compareNatural\",\"compareText\"]}})),La=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomIntDocs=void 0;t.randomIntDocs={name:\"randomInt\",category:\"Probability\",syntax:[\"randomInt(max)\",\"randomInt(min, max)\",\"randomInt(size)\",\"randomInt(size, max)\",\"randomInt(size, min, max)\"],description:\"Return a random integer number\",examples:[\"randomInt(10, 20)\",\"randomInt([2, 3], 10)\"],seealso:[\"pickRandom\",\"random\"]}})),Ha=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomDocs=void 0;t.randomDocs={name:\"random\",category:\"Probability\",syntax:[\"random()\",\"random(max)\",\"random(min, max)\",\"random(size)\",\"random(size, max)\",\"random(size, min, max)\"],description:\"Return a random number.\",examples:[\"random()\",\"random(10, 20)\",\"random([2, 3])\"],seealso:[\"pickRandom\",\"randomInt\"]}})),Za=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.pickRandomDocs=void 0;t.pickRandomDocs={name:\"pickRandom\",category:\"Probability\",syntax:[\"pickRandom(array)\",\"pickRandom(array, number)\",\"pickRandom(array, weights)\",\"pickRandom(array, number, weights)\",\"pickRandom(array, weights, number)\"],description:\"Pick a random entry from a given array.\",examples:[\"pickRandom(0:10)\",\"pickRandom([1, 3, 1, 6])\",\"pickRandom([1, 3, 1, 6], 2)\",\"pickRandom([1, 3, 1, 6], [2, 3, 2, 1])\",\"pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])\",\"pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)\"],seealso:[\"random\",\"randomInt\"]}})),Va=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.permutationsDocs=void 0;t.permutationsDocs={name:\"permutations\",category:\"Probability\",syntax:[\"permutations(n)\",\"permutations(n, k)\"],description:\"Compute the number of permutations of n items taken k at a time\",examples:[\"permutations(5)\",\"permutations(5, 3)\"],seealso:[\"combinations\",\"combinationsWithRep\",\"factorial\"]}})),Wa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.multinomialDocs=void 0;t.multinomialDocs={name:\"multinomial\",category:\"Probability\",syntax:[\"multinomial(A)\"],description:\"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.\",examples:[\"multinomial([1, 2, 1])\"],seealso:[\"combinations\",\"factorial\"]}})),Ga=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.kldivergenceDocs=void 0;t.kldivergenceDocs={name:\"kldivergence\",category:\"Probability\",syntax:[\"kldivergence(x, y)\"],description:\"Calculate the Kullback-Leibler (KL) divergence  between two distributions.\",examples:[\"kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])\"],seealso:[]}})),$a=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gammaDocs=void 0;t.gammaDocs={name:\"gamma\",category:\"Probability\",syntax:[\"gamma(n)\"],description:\"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.\",examples:[\"gamma(4)\",\"3!\",\"gamma(1/2)\",\"sqrt(pi)\"],seealso:[\"factorial\"]}})),Qa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.factorialDocs=void 0;t.factorialDocs={name:\"factorial\",category:\"Probability\",syntax:[\"n!\",\"factorial(n)\"],description:\"Compute the factorial of a value\",examples:[\"5!\",\"5 * 4 * 3 * 2 * 1\",\"3!\"],seealso:[\"combinations\",\"combinationsWithRep\",\"permutations\",\"gamma\"]}})),Xa=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.combinationsDocs=void 0;t.combinationsDocs={name:\"combinations\",category:\"Probability\",syntax:[\"combinations(n, k)\"],description:\"Compute the number of combinations of n items taken k at a time\",examples:[\"combinations(7, 5)\"],seealso:[\"combinationsWithRep\",\"permutations\",\"factorial\"]}})),Ya=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.combinationsWithRepDocs=void 0;t.combinationsWithRepDocs={name:\"combinationsWithRep\",category:\"Probability\",syntax:[\"combinationsWithRep(n, k)\"],description:\"Compute the number of combinations of n items taken k at a time with replacements.\",examples:[\"combinationsWithRep(7, 5)\"],seealso:[\"combinations\",\"permutations\",\"factorial\"]}})),Ja=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.zerosDocs=void 0;t.zerosDocs={name:\"zeros\",category:\"Matrix\",syntax:[\"zeros(m)\",\"zeros(m, n)\",\"zeros(m, n, p, ...)\",\"zeros([m])\",\"zeros([m, n])\",\"zeros([m, n, p, ...])\"],description:\"Create a matrix containing zeros.\",examples:[\"zeros(3)\",\"zeros(3, 5)\",\"a = [1, 2, 3; 4, 5, 6]\",\"zeros(size(a))\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\"]}})),Ka=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.transposeDocs=void 0;t.transposeDocs={name:\"transpose\",category:\"Matrix\",syntax:[\"x'\",\"transpose(x)\"],description:\"Transpose a matrix\",examples:[\"a = [1, 2, 3; 4, 5, 6]\",\"a'\",\"transpose(a)\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"zeros\"]}})),eo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.traceDocs=void 0;t.traceDocs={name:\"trace\",category:\"Matrix\",syntax:[\"trace(A)\"],description:\"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.\",examples:[\"A = [1, 2, 3; -1, 2, 3; 2, 0, 3]\",\"trace(A)\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"transpose\",\"zeros\"]}})),to=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.subsetDocs=void 0;t.subsetDocs={name:\"subset\",category:\"Matrix\",syntax:[\"value(index)\",\"value(index) = replacement\",\"subset(value, [index])\",\"subset(value, [index], replacement)\"],description:\"Get or set a subset of a matrix or string. Indexes are one-based. Both the ranges lower-bound and upper-bound are included.\",examples:[\"d = [1, 2; 3, 4]\",\"e = []\",\"e[1, 1:2] = [5, 6]\",\"e[2, :] = [7, 8]\",\"f = d * e\",\"f[2, 1]\",\"f[:, 1]\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"trace\",\"transpose\",\"zeros\"]}})),no=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.squeezeDocs=void 0;t.squeezeDocs={name:\"squeeze\",category:\"Matrix\",syntax:[\"squeeze(x)\"],description:\"Remove inner and outer singleton dimensions from a matrix.\",examples:[\"a = zeros(3,2,1)\",\"size(squeeze(a))\",\"b = zeros(1,1,3)\",\"size(squeeze(b))\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),ro=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sortDocs=void 0;t.sortDocs={name:\"sort\",category:\"Matrix\",syntax:[\"sort(x)\",\"sort(x, compare)\"],description:'Sort the items in a matrix. Compare can be a string \"asc\", \"desc\", \"natural\", or a custom sort function.',examples:[\"sort([5, 10, 1])\",'sort([\"C\", \"B\", \"A\", \"D\"])',\"sortByLength(a, b) = size(a)[1] - size(b)[1]\",'sort([\"Langdon\", \"Tom\", \"Sara\"], sortByLength)','sort([\"10\", \"1\", \"2\"], \"natural\")'],seealso:[\"map\",\"filter\",\"forEach\"]}})),io=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sizeDocs=void 0;t.sizeDocs={name:\"size\",category:\"Matrix\",syntax:[\"size(x)\"],description:\"Calculate the size of a matrix.\",examples:[\"size(2.3)\",'size(\"hello world\")',\"a = [1, 2; 3, 4; 5, 6]\",\"size(a)\",\"size(1:6)\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),ao=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.diffDocs=void 0;t.diffDocs={name:\"diff\",category:\"Matrix\",syntax:[\"diff(arr)\",\"diff(arr, dim)\"],description:[\"Create a new matrix or array with the difference of the passed matrix or array.\",\"Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference\",\"If no dimension parameter is passed it is assumed as dimension 0\",\"Dimension is zero-based in javascript and one-based in the parser\",\"Arrays must be 'rectangular' meaning arrays like [1, 2]\",\"If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays\"],examples:[\"diff([1, 2, 4, 7, 0])\",\"diff([1, 2, 4, 7, 0], 0)\",\"diff(matrix([1, 2, 4, 7, 0]))\",\"diff([[1, 2], [3, 4]])\",\"diff([[1, 2], [3, 4]], 0)\",\"diff([[1, 2], [3, 4]], 1)\",\"diff([[1, 2], [3, 4]], bignumber(1))\",\"diff(matrix([[1, 2], [3, 4]]), 1)\",\"diff([[1, 2], matrix([3, 4])], 1)\"],seealso:[\"subtract\",\"partitionSelect\"]}})),oo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.reshapeDocs=void 0;t.reshapeDocs={name:\"reshape\",category:\"Matrix\",syntax:[\"reshape(x, sizes)\"],description:\"Reshape a multi dimensional array to fit the specified dimensions.\",examples:[\"reshape([1, 2, 3, 4, 5, 6], [2, 3])\",\"reshape([[1, 2], [3, 4]], [1, 4])\",\"reshape([[1, 2], [3, 4]], [4])\"],seealso:[\"size\",\"squeeze\",\"resize\"]}})),so=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.resizeDocs=void 0;t.resizeDocs={name:\"resize\",category:\"Matrix\",syntax:[\"resize(x, size)\",\"resize(x, size, defaultValue)\"],description:\"Resize a matrix.\",examples:[\"resize([1,2,3,4,5], [3])\",\"resize([1,2,3], [5])\",\"resize([1,2,3], [5], -1)\",\"resize(2, [2, 3])\",'resize(\"hello\", [8], \"!\")'],seealso:[\"size\",\"subset\",\"squeeze\",\"reshape\"]}})),co=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rangeDocs=void 0;t.rangeDocs={name:\"range\",category:\"Type\",syntax:[\"start:end\",\"start:step:end\",\"range(start, end)\",\"range(start, end, step)\",\"range(string)\"],description:\"Create a range. Lower bound of the range is included, upper bound is excluded.\",examples:[\"1:5\",\"3:-1:-3\",\"range(3, 7)\",\"range(0, 12, 2)\",'range(\"4:10\")',\"a = [1, 2, 3, 4; 5, 6, 7, 8]\",\"a[1:2, 1:2]\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),uo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.partitionSelectDocs=void 0;t.partitionSelectDocs={name:\"partitionSelect\",category:\"Matrix\",syntax:[\"partitionSelect(x, k)\",\"partitionSelect(x, k, compare)\"],description:\"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.\",examples:[\"partitionSelect([5, 10, 1], 2)\",'partitionSelect([\"C\", \"B\", \"A\", \"D\"], 1)'],seealso:[\"sort\"]}})),lo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.onesDocs=void 0;t.onesDocs={name:\"ones\",category:\"Matrix\",syntax:[\"ones(m)\",\"ones(m, n)\",\"ones(m, n, p, ...)\",\"ones([m])\",\"ones([m, n])\",\"ones([m, n, p, ...])\"],description:\"Create a matrix containing ones.\",examples:[\"ones(3)\",\"ones(3, 5)\",\"ones([2,3]) * 4.5\",\"a = [1, 2, 3; 4, 5, 6]\",\"ones(size(a))\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),fo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.mapDocs=void 0;t.mapDocs={name:\"map\",category:\"Matrix\",syntax:[\"map(x, callback)\"],description:\"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.\",examples:[\"map([1, 2, 3], square)\"],seealso:[\"filter\",\"forEach\"]}})),po=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.kronDocs=void 0;t.kronDocs={name:\"kron\",category:\"Matrix\",syntax:[\"kron(x, y)\"],description:\"Calculates the kronecker product of 2 matrices or vectors.\",examples:[\"kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])\",\"kron([1,1], [2,3,4])\"],seealso:[\"multiply\",\"dot\",\"cross\"]}})),mo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.invDocs=void 0;t.invDocs={name:\"inv\",category:\"Matrix\",syntax:[\"inv(x)\"],description:\"Calculate the inverse of a matrix\",examples:[\"inv([1, 2; 3, 4])\",\"inv(4)\",\"1 / 4\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),ho=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.forEachDocs=void 0;t.forEachDocs={name:\"forEach\",category:\"Matrix\",syntax:[\"forEach(x, callback)\"],description:\"Iterates over all elements of a matrix/array, and executes the given callback function.\",examples:[\"forEach([1, 2, 3], function(val) { console.log(val) })\"],seealso:[\"map\",\"sort\",\"filter\"]}})),yo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.flattenDocs=void 0;t.flattenDocs={name:\"flatten\",category:\"Matrix\",syntax:[\"flatten(x)\"],description:\"Flatten a multi dimensional matrix into a single dimensional matrix.\",examples:[\"a = [1, 2, 3; 4, 5, 6]\",\"size(a)\",\"b = flatten(a)\",\"size(b)\"],seealso:[\"concat\",\"resize\",\"size\",\"squeeze\"]}})),vo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.filterDocs=void 0;t.filterDocs={name:\"filter\",category:\"Matrix\",syntax:[\"filter(x, test)\"],description:\"Filter items in a matrix.\",examples:[\"isPositive(x) = x > 0\",\"filter([6, -2, -1, 4, 3], isPositive)\",\"filter([6, -2, 0, 1, 0], x != 0)\"],seealso:[\"sort\",\"map\",\"forEach\"]}})),go=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.identityDocs=void 0;t.identityDocs={name:\"identity\",category:\"Matrix\",syntax:[\"identity(n)\",\"identity(m, n)\",\"identity([m, n])\"],description:\"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.\",examples:[\"identity(3)\",\"identity(3, 5)\",\"a = [1, 2, 3; 4, 5, 6]\",\"identity(size(a))\"],seealso:[\"concat\",\"det\",\"diag\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),bo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getMatrixDataTypeDocs=void 0;t.getMatrixDataTypeDocs={name:\"getMatrixDataType\",category:\"Matrix\",syntax:[\"getMatrixDataType(x)\"],description:'Find the data type of all elements in a matrix or array, for example \"number\" if all items are a number and \"Complex\" if all values are complex numbers. If a matrix contains more than one data type, it will return \"mixed\".',examples:[\"getMatrixDataType([1, 2, 3])\",\"getMatrixDataType([[5 cm], [2 inch]])\",'getMatrixDataType([1, \"text\"])',\"getMatrixDataType([1, bignumber(4)])\"],seealso:[\"matrix\",\"sparse\",\"typeOf\"]}})),xo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotDocs=void 0;t.dotDocs={name:\"dot\",category:\"Matrix\",syntax:[\"dot(A, B)\",\"A * B\"],description:\"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn\",examples:[\"dot([2, 4, 1], [2, 2, 3])\",\"[2, 4, 1] * [2, 2, 3]\"],seealso:[\"multiply\",\"cross\"]}})),Do=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.diagDocs=void 0;t.diagDocs={name:\"diag\",category:\"Matrix\",syntax:[\"diag(x)\",\"diag(x, k)\"],description:\"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.\",examples:[\"diag(1:3)\",\"diag(1:3, 1)\",\"a = [1, 2, 3; 4, 5, 6; 7, 8, 9]\",\"diag(a)\"],seealso:[\"concat\",\"det\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),_o=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.detDocs=void 0;t.detDocs={name:\"det\",category:\"Matrix\",syntax:[\"det(x)\"],description:\"Calculate the determinant of a matrix\",examples:[\"det([1, 2; 3, 4])\",\"det([-2, 2, 3; -1, 1, 3; 2, 0, -1])\"],seealso:[\"concat\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),wo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ctransposeDocs=void 0;t.ctransposeDocs={name:\"ctranspose\",category:\"Matrix\",syntax:[\"x'\",\"ctranspose(x)\"],description:\"Complex Conjugate and Transpose a matrix\",examples:[\"a = [1, 2, 3; 4, 5, 6]\",\"a'\",\"ctranspose(a)\"],seealso:[\"concat\",\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"zeros\"]}})),No=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.crossDocs=void 0;t.crossDocs={name:\"cross\",category:\"Matrix\",syntax:[\"cross(A, B)\"],description:\"Calculate the cross product for two vectors in three dimensional space.\",examples:[\"cross([1, 1, 0],  [0, 1, 1])\",\"cross([3, -3, 1], [4, 9, 2])\",\"cross([2, 3, 4],  [5, 6, 7])\"],seealso:[\"multiply\",\"dot\"]}})),Mo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.concatDocs=void 0;t.concatDocs={name:\"concat\",category:\"Matrix\",syntax:[\"concat(A, B, C, ...)\",\"concat(A, B, C, ..., dim)\"],description:\"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.\",examples:[\"A = [1, 2; 5, 6]\",\"B = [3, 4; 7, 8]\",\"concat(A, B)\",\"concat(A, B, 1)\",\"concat(A, B, 2)\"],seealso:[\"det\",\"diag\",\"identity\",\"inv\",\"ones\",\"range\",\"size\",\"squeeze\",\"subset\",\"trace\",\"transpose\",\"zeros\"]}})),Oo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.xorDocs=void 0;t.xorDocs={name:\"xor\",category:\"Logical\",syntax:[\"x xor y\",\"xor(x, y)\"],description:\"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.\",examples:[\"true xor false\",\"false xor false\",\"true xor true\",\"0 xor 4\"],seealso:[\"not\",\"and\",\"or\"]}})),So=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.orDocs=void 0;t.orDocs={name:\"or\",category:\"Logical\",syntax:[\"x or y\",\"or(x, y)\"],description:\"Logical or. Test if at least one value is defined with a nonzero/nonempty value.\",examples:[\"true or false\",\"false or false\",\"0 or 4\"],seealso:[\"not\",\"and\",\"xor\"]}})),Po=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.notDocs=void 0;t.notDocs={name:\"not\",category:\"Logical\",syntax:[\"not x\",\"not(x)\"],description:\"Logical not. Flips the boolean value of given argument.\",examples:[\"not true\",\"not false\",\"not 2\",\"not 0\"],seealso:[\"and\",\"or\",\"xor\"]}})),jo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.andDocs=void 0;t.andDocs={name:\"and\",category:\"Logical\",syntax:[\"x and y\",\"and(x, y)\"],description:\"Logical and. Test whether two values are both defined with a nonzero/nonempty value.\",examples:[\"true and false\",\"true and true\",\"2 and 4\"],seealso:[\"not\",\"or\",\"xor\"]}})),Ao=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.intersectDocs=void 0;t.intersectDocs={name:\"intersect\",category:\"Geometry\",syntax:[\"intersect(expr1, expr2, expr3, expr4)\",\"intersect(expr1, expr2, expr3)\"],description:\"Computes the intersection point of lines and/or planes.\",examples:[\"intersect([0, 0], [10, 10], [10, 0], [0, 10])\",\"intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])\"],seealso:[]}})),Eo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.distanceDocs=void 0;t.distanceDocs={name:\"distance\",category:\"Geometry\",syntax:[\"distance([x1, y1], [x2, y2])\",\"distance([[x1, y1], [x2, y2]])\"],description:\"Calculates the Euclidean distance between two points.\",examples:[\"distance([0,0], [4,4])\",\"distance([[0,0], [4,4]])\"],seealso:[]}})),Co=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.helpDocs=void 0;t.helpDocs={name:\"help\",category:\"Expression\",syntax:[\"help(object)\",\"help(string)\"],description:\"Display documentation on a function or data type.\",examples:[\"help(sqrt)\",'help(\"complex\")'],seealso:[]}})),To=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.evaluateDocs=void 0;t.evaluateDocs={name:\"evaluate\",category:\"Expression\",syntax:[\"evaluate(expression)\",\"evaluate([expr1, expr2, expr3, ...])\"],description:\"Evaluate an expression or an array with expressions.\",examples:['evaluate(\"2 + 3\")','evaluate(\"sqrt(\" + 4 + \")\")'],seealso:[]}})),ko=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.imDocs=void 0;t.imDocs={name:\"im\",category:\"Complex\",syntax:[\"im(x)\"],description:\"Get the imaginary part of a complex number.\",examples:[\"im(2 + 3i)\",\"re(2 + 3i)\",\"im(-5.2i)\",\"im(2.4)\"],seealso:[\"re\",\"conj\",\"abs\",\"arg\"]}})),Io=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.reDocs=void 0;t.reDocs={name:\"re\",category:\"Complex\",syntax:[\"re(x)\"],description:\"Get the real part of a complex number.\",examples:[\"re(2 + 3i)\",\"im(2 + 3i)\",\"re(-5.2i)\",\"re(2.4)\"],seealso:[\"im\",\"conj\",\"abs\",\"arg\"]}})),Bo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.conjDocs=void 0;t.conjDocs={name:\"conj\",category:\"Complex\",syntax:[\"conj(x)\"],description:\"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.\",examples:[\"conj(2 + 3i)\",\"conj(2 - 3i)\",\"conj(-5.2i)\"],seealso:[\"re\",\"im\",\"abs\",\"arg\"]}})),zo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.argDocs=void 0;t.argDocs={name:\"arg\",category:\"Complex\",syntax:[\"arg(x)\"],description:\"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).\",examples:[\"arg(2 + 2i)\",\"atan2(3, 2)\",\"arg(2 + 3i)\"],seealso:[\"re\",\"im\",\"conj\",\"abs\"]}})),Ro=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.typedDocs=void 0;t.typedDocs={name:\"typed\",category:\"Core\",syntax:[\"typed(signatures)\",\"typed(name, signatures)\"],description:\"Create a typed function.\",examples:['double = typed({ \"number, number\": f(x)=x+x })',\"double(2)\",'double(\"hello\")'],seealso:[]}})),qo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.importDocs=void 0;t.importDocs={name:\"import\",category:\"Core\",syntax:[\"import(functions)\",\"import(functions, options)\"],description:\"Import functions or constants from an object.\",examples:[\"import({myFn: f(x)=x^2, myConstant: 32 })\",\"myFn(2)\",\"myConstant\"],seealso:[]}})),Fo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.configDocs=void 0;t.configDocs={name:\"config\",category:\"Core\",syntax:[\"config()\",\"config(options)\"],description:\"Get configuration or change configuration.\",examples:[\"config()\",\"1/3 + 1/4\",'config({number: \"Fraction\"})',\"1/3 + 1/4\"],seealso:[]}})),Uo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stirlingS2Docs=void 0;t.stirlingS2Docs={name:\"stirlingS2\",category:\"Combinatorics\",syntax:[\"stirlingS2(n, k)\"],description:\"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.\",examples:[\"stirlingS2(5, 3)\"],seealso:[\"bellNumbers\"]}})),Lo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compositionDocs=void 0;t.compositionDocs={name:\"composition\",category:\"Combinatorics\",syntax:[\"composition(n, k)\"],description:\"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.\",examples:[\"composition(5, 3)\"],seealso:[\"combinations\"]}})),Ho=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.catalanDocs=void 0;t.catalanDocs={name:\"catalan\",category:\"Combinatorics\",syntax:[\"catalan(n)\"],description:\"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.\",examples:[\"catalan(3)\",\"catalan(8)\"],seealso:[\"bellNumbers\"]}})),Zo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bellNumbersDocs=void 0;t.bellNumbersDocs={name:\"bellNumbers\",category:\"Combinatorics\",syntax:[\"bellNumbers(n)\"],description:\"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.\",examples:[\"bellNumbers(3)\",\"bellNumbers(8)\"],seealso:[\"stirlingS2\"]}})),Vo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rightLogShiftDocs=void 0;t.rightLogShiftDocs={name:\"rightLogShift\",category:\"Bitwise\",syntax:[\"x >>> y\",\"rightLogShift(x, y)\"],description:\"Bitwise right logical shift of a value x by y number of bits.\",examples:[\"8 >>> 1\",\"4 << 1\",\"-12 >>> 2\"],seealso:[\"bitAnd\",\"bitNot\",\"bitOr\",\"bitXor\",\"leftShift\",\"rightArithShift\"]}})),Wo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rightArithShiftDocs=void 0;t.rightArithShiftDocs={name:\"rightArithShift\",category:\"Bitwise\",syntax:[\"x >> y\",\"rightArithShift(x, y)\"],description:\"Bitwise right arithmetic shift of a value x by y number of bits.\",examples:[\"8 >> 1\",\"4 << 1\",\"-12 >> 2\"],seealso:[\"bitAnd\",\"bitNot\",\"bitOr\",\"bitXor\",\"leftShift\",\"rightLogShift\"]}})),Go=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.leftShiftDocs=void 0;t.leftShiftDocs={name:\"leftShift\",category:\"Bitwise\",syntax:[\"x << y\",\"leftShift(x, y)\"],description:\"Bitwise left logical shift of a value x by y number of bits.\",examples:[\"4 << 1\",\"8 >> 1\"],seealso:[\"bitAnd\",\"bitNot\",\"bitOr\",\"bitXor\",\"rightArithShift\",\"rightLogShift\"]}})),$o=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitXorDocs=void 0;t.bitXorDocs={name:\"bitXor\",category:\"Bitwise\",syntax:[\"bitXor(x, y)\"],description:\"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.\",examples:[\"bitOr(1, 2)\",\"bitXor([2, 3, 4], 4)\"],seealso:[\"bitAnd\",\"bitNot\",\"bitOr\",\"leftShift\",\"rightArithShift\",\"rightLogShift\"]}})),Qo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitOrDocs=void 0;t.bitOrDocs={name:\"bitOr\",category:\"Bitwise\",syntax:[\"x | y\",\"bitOr(x, y)\"],description:\"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.\",examples:[\"5 | 3\",\"bitOr([1, 2, 3], 4)\"],seealso:[\"bitAnd\",\"bitNot\",\"bitXor\",\"leftShift\",\"rightArithShift\",\"rightLogShift\"]}})),Xo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitNotDocs=void 0;t.bitNotDocs={name:\"bitNot\",category:\"Bitwise\",syntax:[\"~x\",\"bitNot(x)\"],description:\"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.\",examples:[\"~1\",\"~2\",\"bitNot([2, -3, 4])\"],seealso:[\"bitAnd\",\"bitOr\",\"bitXor\",\"leftShift\",\"rightArithShift\",\"rightLogShift\"]}})),Yo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitAndDocs=void 0;t.bitAndDocs={name:\"bitAnd\",category:\"Bitwise\",syntax:[\"x & y\",\"bitAnd(x, y)\"],description:\"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0\",examples:[\"5 & 3\",\"bitAnd(53, 131)\",\"[1, 12, 31] & 42\"],seealso:[\"bitNot\",\"bitOr\",\"bitXor\",\"leftShift\",\"rightArithShift\",\"rightLogShift\"]}})),Jo=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.xgcdDocs=void 0;t.xgcdDocs={name:\"xgcd\",category:\"Arithmetic\",syntax:[\"xgcd(a, b)\"],description:\"Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.\",examples:[\"xgcd(8, 12)\",\"gcd(8, 12)\",\"xgcd(36163, 21199)\"],seealso:[\"gcd\",\"lcm\"]}})),Ko=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unaryPlusDocs=void 0;t.unaryPlusDocs={name:\"unaryPlus\",category:\"Operators\",syntax:[\"+x\",\"unaryPlus(x)\"],description:\"Converts booleans and strings to numbers.\",examples:[\"+true\",'+\"2\"'],seealso:[\"add\",\"subtract\",\"unaryMinus\"]}})),es=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unaryMinusDocs=void 0;t.unaryMinusDocs={name:\"unaryMinus\",category:\"Operators\",syntax:[\"-x\",\"unaryMinus(x)\"],description:\"Inverse the sign of a value. Converts booleans and strings to numbers.\",examples:[\"-4.5\",\"-(-5.6)\",'-\"22\"'],seealso:[\"add\",\"subtract\",\"unaryPlus\"]}})),ts=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.squareDocs=void 0;t.squareDocs={name:\"square\",category:\"Arithmetic\",syntax:[\"square(x)\"],description:\"Compute the square of a value. The square of x is x * x.\",examples:[\"square(3)\",\"sqrt(9)\",\"3^2\",\"3 * 3\"],seealso:[\"multiply\",\"pow\",\"sqrt\",\"cube\"]}})),ns=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sqrtmDocs=void 0;t.sqrtmDocs={name:\"sqrtm\",category:\"Arithmetic\",syntax:[\"sqrtm(x)\"],description:\"Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.\",examples:[\"sqrtm([[1, 2], [3, 4]])\"],seealso:[\"sqrt\",\"abs\",\"square\",\"multiply\"]}})),rs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sqrtDocs=void 0;t.sqrtDocs={name:\"sqrt\",category:\"Arithmetic\",syntax:[\"sqrt(x)\"],description:\"Compute the square root value. If x = y * y, then y is the square root of x.\",examples:[\"sqrt(25)\",\"5 * 5\",\"sqrt(-1)\"],seealso:[\"square\",\"sqrtm\",\"multiply\",\"nthRoot\",\"nthRoots\",\"pow\"]}})),is=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.signDocs=void 0;t.signDocs={name:\"sign\",category:\"Arithmetic\",syntax:[\"sign(x)\"],description:\"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.\",examples:[\"sign(3.5)\",\"sign(-4.2)\",\"sign(0)\"],seealso:[\"abs\"]}})),as=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.roundDocs=void 0;t.roundDocs={name:\"round\",category:\"Arithmetic\",syntax:[\"round(x)\",\"round(x, n)\"],description:\"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.\",examples:[\"round(3.2)\",\"round(3.8)\",\"round(-4.2)\",\"round(-4.8)\",\"round(pi, 3)\",\"round(123.45678, 2)\"],seealso:[\"ceil\",\"floor\",\"fix\"]}})),os=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.powDocs=void 0;t.powDocs={name:\"pow\",category:\"Operators\",syntax:[\"x ^ y\",\"pow(x, y)\"],description:\"Calculates the power of x to y, x^y.\",examples:[\"2^3\",\"2*2*2\",\"1 + e ^ (pi * i)\"],seealso:[\"multiply\",\"nthRoot\",\"nthRoots\",\"sqrt\"]}})),ss=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nthRootsDocs=void 0;t.nthRootsDocs={name:\"nthRoots\",category:\"Arithmetic\",syntax:[\"nthRoots(A)\",\"nthRoots(A, root)\"],description:'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation \"x^root = A\". This function returns an array of complex values.',examples:[\"nthRoots(1)\",\"nthRoots(1, 3)\"],seealso:[\"sqrt\",\"pow\",\"nthRoot\"]}})),cs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nthRootDocs=void 0;t.nthRootDocs={name:\"nthRoot\",category:\"Arithmetic\",syntax:[\"nthRoot(a)\",\"nthRoot(a, root)\"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation \"x^root = A\".',examples:[\"4 ^ 3\",\"nthRoot(64, 3)\",\"nthRoot(9, 2)\",\"sqrt(9)\"],seealso:[\"nthRoots\",\"pow\",\"sqrt\"]}})),us=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.normDocs=void 0;t.normDocs={name:\"norm\",category:\"Arithmetic\",syntax:[\"norm(x)\",\"norm(x, p)\"],description:\"Calculate the norm of a number, vector or matrix.\",examples:[\"abs(-3.5)\",\"norm(-3.5)\",\"norm(3 - 4i)\",\"norm([1, 2, -3], Infinity)\",\"norm([1, 2, -3], -Infinity)\",\"norm([3, 4], 2)\",\"norm([[1, 2], [3, 4]], 1)\",'norm([[1, 2], [3, 4]], \"inf\")','norm([[1, 2], [3, 4]], \"fro\")']}})),ls=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.multiplyDocs=void 0;t.multiplyDocs={name:\"multiply\",category:\"Operators\",syntax:[\"x * y\",\"multiply(x, y)\"],description:\"multiply two values.\",examples:[\"a = 2.1 * 3.4\",\"a / 3.4\",\"2 * 3 + 4\",\"2 * (3 + 4)\",\"3 * 2.1 km\"],seealso:[\"divide\"]}})),ds=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.modDocs=void 0;t.modDocs={name:\"mod\",category:\"Operators\",syntax:[\"x % y\",\"x mod y\",\"mod(x, y)\"],description:\"Calculates the modulus, the remainder of an integer division.\",examples:[\"7 % 3\",\"11 % 2\",\"10 mod 4\",\"isOdd(x) = x % 2\",\"isOdd(2)\",\"isOdd(3)\"],seealso:[\"divide\"]}})),fs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.log10Docs=void 0;t.log10Docs={name:\"log10\",category:\"Arithmetic\",syntax:[\"log10(x)\"],description:\"Compute the 10-base logarithm of a value.\",examples:[\"log10(0.00001)\",\"log10(10000)\",\"10 ^ 4\",\"log(10000) / log(10)\",\"log(10000, 10)\"],seealso:[\"exp\",\"log\"]}})),ps=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.log1pDocs=void 0;t.log1pDocs={name:\"log1p\",category:\"Arithmetic\",syntax:[\"log1p(x)\",\"log1p(x, base)\"],description:\"Calculate the logarithm of a `value+1`\",examples:[\"log1p(2.5)\",\"exp(log1p(1.4))\",\"pow(10, 4)\",\"log1p(9999, 10)\",\"log1p(9999) / log(10)\"],seealso:[\"exp\",\"log\",\"log2\",\"log10\"]}})),ms=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.log2Docs=void 0;t.log2Docs={name:\"log2\",category:\"Arithmetic\",syntax:[\"log2(x)\"],description:\"Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.\",examples:[\"log2(0.03125)\",\"log2(16)\",\"log2(16) / log2(2)\",\"pow(2, 4)\"],seealso:[\"exp\",\"log1p\",\"log\",\"log10\"]}})),hs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.logDocs=void 0;t.logDocs={name:\"log\",category:\"Arithmetic\",syntax:[\"log(x)\",\"log(x, base)\"],description:\"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).\",examples:[\"log(3.5)\",\"a = log(2.4)\",\"exp(a)\",\"10 ^ 4\",\"log(10000, 10)\",\"log(10000) / log(10)\",\"b = log(1024, 2)\",\"2 ^ b\"],seealso:[\"exp\",\"log1p\",\"log2\",\"log10\"]}})),ys=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lcmDocs=void 0;t.lcmDocs={name:\"lcm\",category:\"Arithmetic\",syntax:[\"lcm(x, y)\"],description:\"Compute the least common multiple.\",examples:[\"lcm(4, 6)\",\"lcm(6, 21)\",\"lcm(6, 21, 5)\"],seealso:[\"gcd\"]}})),vs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hypotDocs=void 0;t.hypotDocs={name:\"hypot\",category:\"Arithmetic\",syntax:[\"hypot(a, b, c, ...)\",\"hypot([a, b, c, ...])\"],description:\"Calculate the hypotenusa of a list with values. \",examples:[\"hypot(3, 4)\",\"sqrt(3^2 + 4^2)\",\"hypot(-2)\",\"hypot([3, 4, 5])\"],seealso:[\"abs\",\"norm\"]}})),gs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gcdDocs=void 0;t.gcdDocs={name:\"gcd\",category:\"Arithmetic\",syntax:[\"gcd(a, b)\",\"gcd(a, b, c, ...)\"],description:\"Compute the greatest common divisor.\",examples:[\"gcd(8, 12)\",\"gcd(-4, 6)\",\"gcd(25, 15, -10)\"],seealso:[\"lcm\",\"xgcd\"]}})),bs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.floorDocs=void 0;t.floorDocs={name:\"floor\",category:\"Arithmetic\",syntax:[\"floor(x)\"],description:\"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.\",examples:[\"floor(3.2)\",\"floor(3.8)\",\"floor(-4.2)\"],seealso:[\"ceil\",\"fix\",\"round\"]}})),xs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.fixDocs=void 0;t.fixDocs={name:\"fix\",category:\"Arithmetic\",syntax:[\"fix(x)\"],description:\"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.\",examples:[\"fix(3.2)\",\"fix(3.8)\",\"fix(-4.2)\",\"fix(-4.8)\"],seealso:[\"ceil\",\"floor\",\"round\"]}})),Ds=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.expm1Docs=void 0;t.expm1Docs={name:\"expm1\",category:\"Arithmetic\",syntax:[\"expm1(x)\"],description:\"Calculate the value of subtracting 1 from the exponential value.\",examples:[\"expm1(2)\",\"pow(e, 2) - 1\",\"log(expm1(2) + 1)\"],seealso:[\"exp\",\"pow\",\"log\"]}})),_s=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.expmDocs=void 0;t.expmDocs={name:\"expm\",category:\"Arithmetic\",syntax:[\"exp(x)\"],description:\"Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.\",examples:[\"expm([[0,2],[0,0]])\"],seealso:[\"exp\"]}})),ws=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.eigsDocs=void 0;t.eigsDocs={name:\"eigs\",category:\"Matrix\",syntax:[\"eigs(x)\"],description:\"Calculate the eigenvalues and eigenvectors of a real symmetric matrix\",examples:[\"eigs([[5, 2.3], [2.3, 1]])\"],seealso:[\"inv\"]}})),Ns=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.expDocs=void 0;t.expDocs={name:\"exp\",category:\"Arithmetic\",syntax:[\"exp(x)\"],description:\"Calculate the exponent of a value.\",examples:[\"exp(1.3)\",\"e ^ 1.3\",\"log(exp(1.3))\",\"x = 2.4\",\"(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula\"],seealso:[\"expm\",\"expm1\",\"pow\",\"log\"]}})),Ms=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotMultiplyDocs=void 0;t.dotMultiplyDocs={name:\"dotMultiply\",category:\"Operators\",syntax:[\"x .* y\",\"dotMultiply(x, y)\"],description:\"Multiply two values element wise.\",examples:[\"a = [1, 2, 3; 4, 5, 6]\",\"b = [2, 1, 1; 3, 2, 5]\",\"a .* b\"],seealso:[\"multiply\",\"divide\",\"dotDivide\"]}})),Os=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotDivideDocs=void 0;t.dotDivideDocs={name:\"dotDivide\",category:\"Operators\",syntax:[\"x ./ y\",\"dotDivide(x, y)\"],description:\"Divide two values element wise.\",examples:[\"a = [1, 2, 3; 4, 5, 6]\",\"b = [2, 1, 1; 3, 2, 5]\",\"a ./ b\"],seealso:[\"multiply\",\"dotMultiply\",\"divide\"]}})),Ss=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.divideDocs=void 0;t.divideDocs={name:\"divide\",category:\"Operators\",syntax:[\"x / y\",\"divide(x, y)\"],description:\"Divide two values.\",examples:[\"a = 2 / 3\",\"a * 3\",\"4.5 / 2\",\"3 + 4 / 2\",\"(3 + 4) / 2\",\"18 km / 4.5\"],seealso:[\"multiply\"]}})),Ps=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cubeDocs=void 0;t.cubeDocs={name:\"cube\",category:\"Arithmetic\",syntax:[\"cube(x)\"],description:\"Compute the cube of a value. The cube of x is x * x * x.\",examples:[\"cube(2)\",\"2^3\",\"2 * 2 * 2\"],seealso:[\"multiply\",\"square\",\"pow\"]}})),js=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ceilDocs=void 0;t.ceilDocs={name:\"ceil\",category:\"Arithmetic\",syntax:[\"ceil(x)\"],description:\"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.\",examples:[\"ceil(3.2)\",\"ceil(3.8)\",\"ceil(-4.2)\"],seealso:[\"floor\",\"fix\",\"round\"]}})),As=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cbrtDocs=void 0;t.cbrtDocs={name:\"cbrt\",category:\"Arithmetic\",syntax:[\"cbrt(x)\",\"cbrt(x, allRoots)\"],description:\"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned\",examples:[\"cbrt(64)\",\"cube(4)\",\"cbrt(-8)\",\"cbrt(2 + 3i)\",\"cbrt(8i)\",\"cbrt(8i, true)\",\"cbrt(27 m^3)\"],seealso:[\"square\",\"sqrt\",\"cube\",\"multiply\"]}})),Es=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.addDocs=void 0;t.addDocs={name:\"add\",category:\"Operators\",syntax:[\"x + y\",\"add(x, y)\"],description:\"Add two values.\",examples:[\"a = 2.1 + 3.6\",\"a - 3.6\",\"3 + 2i\",\"3 cm + 2 inch\",'\"2.3\" + \"4\"'],seealso:[\"subtract\"]}})),Cs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.absDocs=void 0;t.absDocs={name:\"abs\",category:\"Arithmetic\",syntax:[\"abs(x)\"],description:\"Compute the absolute value.\",examples:[\"abs(3.5)\",\"abs(-4.2)\"],seealso:[\"sign\"]}})),Ts=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.qrDocs=void 0;t.qrDocs={name:\"qr\",category:\"Algebra\",syntax:[\"qr(A)\"],description:\"Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.\",examples:[\"qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])\"],seealso:[\"lup\",\"slu\",\"matrix\"]}})),ks=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.usolveDocs=void 0;t.usolveDocs={name:\"usolve\",category:\"Algebra\",syntax:[\"x=usolve(U, b)\"],description:\"Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.\",examples:[\"x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])\"],seealso:[\"usolveAll\",\"lup\",\"lusolve\",\"lsolve\",\"matrix\",\"sparse\"]}})),Is=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.usolveAllDocs=void 0;t.usolveAllDocs={name:\"usolveAll\",category:\"Algebra\",syntax:[\"x=usolve(U, b)\"],description:\"Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.\",examples:[\"x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])\"],seealso:[\"usolve\",\"lup\",\"lusolve\",\"lsolve\",\"matrix\",\"sparse\"]}})),Bs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sluDocs=void 0;t.sluDocs={name:\"slu\",category:\"Algebra\",syntax:[\"slu(A, order, threshold)\"],description:\"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U\",examples:[\"slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)\"],seealso:[\"lusolve\",\"lsolve\",\"usolve\",\"matrix\",\"sparse\",\"lup\",\"qr\"]}})),zs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rationalizeDocs=void 0;t.rationalizeDocs={name:\"rationalize\",category:\"Algebra\",syntax:[\"rationalize(expr)\",\"rationalize(expr, scope)\",\"rationalize(expr, scope, detailed)\"],description:\"Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.\",examples:['rationalize(\"2x/y - y/(x+1)\")','rationalize(\"2x/y - y/(x+1)\", true)'],seealso:[\"simplify\"]}})),Rs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.simplifyDocs=void 0;t.simplifyDocs={name:\"simplify\",category:\"Algebra\",syntax:[\"simplify(expr)\",\"simplify(expr, rules)\"],description:\"Simplify an expression tree.\",examples:['simplify(\"3 + 2 / 4\")','simplify(\"2x + x\")','f = parse(\"x * (x + 2 + x)\")',\"simplified = simplify(f)\",\"simplified.evaluate({x: 2})\"],seealso:[\"derivative\",\"parse\",\"evaluate\"]}})),qs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lupDocs=void 0;t.lupDocs={name:\"lup\",category:\"Algebra\",syntax:[\"lup(m)\"],description:\"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U\",examples:[\"lup([[2, 1], [1, 4]])\",\"lup(matrix([[2, 1], [1, 4]]))\",\"lup(sparse([[2, 1], [1, 4]]))\"],seealso:[\"lusolve\",\"lsolve\",\"usolve\",\"matrix\",\"sparse\",\"slu\",\"qr\"]}})),Fs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lsolveDocs=void 0;t.lsolveDocs={name:\"lsolve\",category:\"Algebra\",syntax:[\"x=lsolve(L, b)\"],description:\"Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.\",examples:[\"a = [-2, 3; 2, 1]\",\"b = [11, 9]\",\"x = lsolve(a, b)\"],seealso:[\"lsolveAll\",\"lup\",\"lusolve\",\"usolve\",\"matrix\",\"sparse\"]}})),Us=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lsolveAllDocs=void 0;t.lsolveAllDocs={name:\"lsolveAll\",category:\"Algebra\",syntax:[\"x=lsolveAll(L, b)\"],description:\"Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.\",examples:[\"a = [-2, 3; 2, 1]\",\"b = [11, 9]\",\"x = lsolve(a, b)\"],seealso:[\"lsolve\",\"lup\",\"lusolve\",\"usolve\",\"matrix\",\"sparse\"]}})),Ls=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.derivativeDocs=void 0;t.derivativeDocs={name:\"derivative\",category:\"Algebra\",syntax:[\"derivative(expr, variable)\",\"derivative(expr, variable, {simplify: boolean})\"],description:\"Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.\",examples:['derivative(\"2x^3\", \"x\")','derivative(\"2x^3\", \"x\", {simplify: false})','derivative(\"2x^2 + 3x + 4\", \"x\")','derivative(\"sin(2x)\", \"x\")','f = parse(\"x^2 + x\")','x = parse(\"x\")',\"df = derivative(f, x)\",\"df.evaluate({x: 3})\"],seealso:[\"simplify\",\"parse\",\"evaluate\"]}})),Hs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.versionDocs=void 0;t.versionDocs={name:\"version\",category:\"Constants\",syntax:[\"version\"],description:\"A string with the version number of math.js\",examples:[\"version\"],seealso:[]}})),Zs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.trueDocs=void 0;t.trueDocs={name:\"true\",category:\"Constants\",syntax:[\"true\"],description:\"Boolean value true\",examples:[\"true\"],seealso:[\"false\"]}})),Vs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.tauDocs=void 0;t.tauDocs={name:\"tau\",category:\"Constants\",syntax:[\"tau\"],description:\"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.\",examples:[\"tau\",\"2 * pi\"],seealso:[\"pi\"]}})),Ws=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SQRT2Docs=void 0;t.SQRT2Docs={name:\"SQRT2\",category:\"Constants\",syntax:[\"SQRT2\"],description:\"Returns the square root of 2, approximately equal to 1.414\",examples:[\"SQRT2\",\"sqrt(2)\"],seealso:[]}})),Gs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SQRT12Docs=void 0;t.SQRT12Docs={name:\"SQRT1_2\",category:\"Constants\",syntax:[\"SQRT1_2\"],description:\"Returns the square root of 1/2, approximately equal to 0.707\",examples:[\"SQRT1_2\",\"sqrt(1/2)\"],seealso:[]}})),$s=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.phiDocs=void 0;t.phiDocs={name:\"phi\",category:\"Constants\",syntax:[\"phi\"],description:\"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...\",examples:[\"phi\"],seealso:[]}})),Qs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.piDocs=void 0;t.piDocs={name:\"pi\",category:\"Constants\",syntax:[\"pi\"],description:\"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159\",examples:[\"pi\",\"sin(pi/2)\"],seealso:[\"tau\"]}})),Xs=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nullDocs=void 0;t.nullDocs={name:\"null\",category:\"Constants\",syntax:[\"null\"],description:\"Value null\",examples:[\"null\"],seealso:[\"true\",\"false\"]}})),Ys=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.NaNDocs=void 0;t.NaNDocs={name:\"NaN\",category:\"Constants\",syntax:[\"NaN\"],description:\"Not a number\",examples:[\"NaN\",\"0 / 0\"],seealso:[]}})),Js=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LOG10EDocs=void 0;t.LOG10EDocs={name:\"LOG10E\",category:\"Constants\",syntax:[\"LOG10E\"],description:\"Returns the base-10 logarithm of E, approximately equal to 0.434\",examples:[\"LOG10E\",\"log(e, 10)\"],seealso:[]}})),Ks=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LOG2EDocs=void 0;t.LOG2EDocs={name:\"LOG2E\",category:\"Constants\",syntax:[\"LOG2E\"],description:\"Returns the base-2 logarithm of E, approximately equal to 1.442\",examples:[\"LOG2E\",\"log(e, 2)\"],seealso:[]}})),ec=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LN10Docs=void 0;t.LN10Docs={name:\"LN10\",category:\"Constants\",syntax:[\"LN10\"],description:\"Returns the natural logarithm of 10, approximately equal to 2.302\",examples:[\"LN10\",\"log(10)\"],seealso:[]}})),tc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LN2Docs=void 0;t.LN2Docs={name:\"LN2\",category:\"Constants\",syntax:[\"LN2\"],description:\"Returns the natural logarithm of 2, approximately equal to 0.693\",examples:[\"LN2\",\"log(2)\"],seealso:[]}})),nc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.InfinityDocs=void 0;t.InfinityDocs={name:\"Infinity\",category:\"Constants\",syntax:[\"Infinity\"],description:\"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.\",examples:[\"Infinity\",\"1 / 0\"],seealso:[]}})),rc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.iDocs=void 0;t.iDocs={name:\"i\",category:\"Constants\",syntax:[\"i\"],description:\"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.\",examples:[\"i\",\"i * i\",\"sqrt(-1)\"],seealso:[]}})),ic=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.falseDocs=void 0;t.falseDocs={name:\"false\",category:\"Constants\",syntax:[\"false\"],description:\"Boolean value false\",examples:[\"false\"],seealso:[\"true\"]}})),ac=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.eDocs=void 0;t.eDocs={name:\"e\",category:\"Constants\",syntax:[\"e\"],description:\"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828\",examples:[\"e\",\"e ^ 2\",\"exp(2)\",\"log(e)\"],seealso:[\"exp\"]}})),oc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unitDocs=void 0;t.unitDocs={name:\"unit\",category:\"Construction\",syntax:[\"value unit\",\"unit(value, unit)\",\"unit(string)\"],description:\"Create a unit.\",examples:[\"5.5 mm\",\"3 inch\",'unit(7.1, \"kilogram\")','unit(\"23 deg\")'],seealso:[\"bignumber\",\"boolean\",\"complex\",\"index\",\"matrix\",\"number\",\"string\"]}})),sc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringDocs=void 0;t.stringDocs={name:\"string\",category:\"Construction\",syntax:['\"text\"',\"string(x)\"],description:\"Create a string or convert a value to a string\",examples:['\"Hello World!\"',\"string(4.2)\",\"string(3 + 2i)\"],seealso:[\"bignumber\",\"boolean\",\"complex\",\"index\",\"matrix\",\"number\",\"unit\"]}})),cc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.splitUnitDocs=void 0;t.splitUnitDocs={name:\"splitUnit\",category:\"Construction\",syntax:[\"splitUnit(unit: Unit, parts: Unit[])\"],description:\"Split a unit in an array of units whose sum is equal to the original unit.\",examples:['splitUnit(1 m, [\"feet\", \"inch\"])'],seealso:[\"unit\",\"createUnit\"]}})),uc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sparseDocs=void 0;t.sparseDocs={name:\"sparse\",category:\"Construction\",syntax:[\"sparse()\",\"sparse([a1, b1, ...; a1, b2, ...])\",'sparse([a1, b1, ...; a1, b2, ...], \"number\")'],description:\"Create a sparse matrix.\",examples:[\"sparse()\",\"sparse([3, 4; 5, 6])\",'sparse([3, 0; 5, 0], \"number\")'],seealso:[\"bignumber\",\"boolean\",\"complex\",\"index\",\"number\",\"string\",\"unit\",\"matrix\"]}})),lc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.numberDocs=void 0;t.numberDocs={name:\"number\",category:\"Construction\",syntax:[\"x\",\"number(x)\",\"number(unit, valuelessUnit)\"],description:\"Create a number or convert a string or boolean into a number.\",examples:[\"2\",\"2e3\",\"4.05\",\"number(2)\",'number(\"7.2\")',\"number(true)\",\"number([true, false, true, true])\",'number(unit(\"52cm\"), \"m\")'],seealso:[\"bignumber\",\"boolean\",\"complex\",\"fraction\",\"index\",\"matrix\",\"string\",\"unit\"]}})),dc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.matrixDocs=void 0;t.matrixDocs={name:\"matrix\",category:\"Construction\",syntax:[\"[]\",\"[a1, b1, ...; a2, b2, ...]\",\"matrix()\",'matrix(\"dense\")',\"matrix([...])\"],description:\"Create a matrix.\",examples:[\"[]\",\"[1, 2, 3]\",\"[1, 2, 3; 4, 5, 6]\",\"matrix()\",\"matrix([3, 4])\",'matrix([3, 4; 5, 6], \"sparse\")','matrix([3, 4; 5, 6], \"sparse\", \"number\")'],seealso:[\"bignumber\",\"boolean\",\"complex\",\"index\",\"number\",\"string\",\"unit\",\"sparse\"]}})),fc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.indexDocs=void 0;t.indexDocs={name:\"index\",category:\"Construction\",syntax:[\"[start]\",\"[start:end]\",\"[start:step:end]\",\"[start1, start 2, ...]\",\"[start1:end1, start2:end2, ...]\",\"[start1:step1:end1, start2:step2:end2, ...]\"],description:\"Create an index to get or replace a subset of a matrix\",examples:[\"[]\",\"[1, 2, 3]\",\"A = [1, 2, 3; 4, 5, 6]\",\"A[1, :]\",\"A[1, 2] = 50\",\"A[0:2, 0:2] = ones(2, 2)\"],seealso:[\"bignumber\",\"boolean\",\"complex\",\"matrix,\",\"number\",\"range\",\"string\",\"unit\"]}})),pc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.fractionDocs=void 0;t.fractionDocs={name:\"fraction\",category:\"Construction\",syntax:[\"fraction(num)\",\"fraction(num,den)\"],description:\"Create a fraction from a number or from a numerator and denominator.\",examples:[\"fraction(0.125)\",\"fraction(1, 3) + fraction(2, 5)\"],seealso:[\"bignumber\",\"boolean\",\"complex\",\"index\",\"matrix\",\"string\",\"unit\"]}})),mc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnitDocs=void 0;t.createUnitDocs={name:\"createUnit\",category:\"Construction\",syntax:[\"createUnit(definitions)\",\"createUnit(name, definition)\"],description:\"Create a user-defined unit and register it with the Unit type.\",examples:['createUnit(\"foo\")','createUnit(\"knot\", {definition: \"0.514444444 m/s\", aliases: [\"knots\", \"kt\", \"kts\"]})','createUnit(\"mph\", \"1 mile/hour\")'],seealso:[\"unit\",\"splitUnit\"]}})),hc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.complexDocs=void 0;t.complexDocs={name:\"complex\",category:\"Construction\",syntax:[\"complex()\",\"complex(re, im)\",\"complex(string)\"],description:\"Create a complex number.\",examples:[\"complex()\",\"complex(2, 3)\",'complex(\"7 - 2i\")'],seealso:[\"bignumber\",\"boolean\",\"index\",\"matrix\",\"number\",\"string\",\"unit\"]}})),yc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.booleanDocs=void 0;t.booleanDocs={name:\"boolean\",category:\"Construction\",syntax:[\"x\",\"boolean(x)\"],description:\"Convert a string or number into a boolean.\",examples:[\"boolean(0)\",\"boolean(1)\",\"boolean(3)\",'boolean(\"true\")','boolean(\"false\")',\"boolean([1, 0, 1, 1])\"],seealso:[\"bignumber\",\"complex\",\"index\",\"matrix\",\"number\",\"string\",\"unit\"]}})),vc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotPowDocs=void 0;t.dotPowDocs={name:\"dotPow\",category:\"Operators\",syntax:[\"x .^ y\",\"dotPow(x, y)\"],description:\"Calculates the power of x to y element wise.\",examples:[\"a = [1, 2, 3; 4, 5, 6]\",\"a .^ 2\"],seealso:[\"pow\"]}})),gc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lusolveDocs=void 0;t.lusolveDocs={name:\"lusolve\",category:\"Algebra\",syntax:[\"x=lusolve(A, b)\",\"x=lusolve(lu, b)\"],description:\"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.\",examples:[\"a = [-2, 3; 2, 1]\",\"b = [11, 9]\",\"x = lusolve(a, b)\"],seealso:[\"lup\",\"slu\",\"lsolve\",\"usolve\",\"matrix\",\"sparse\"]}})),bc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.subtractDocs=void 0;t.subtractDocs={name:\"subtract\",category:\"Operators\",syntax:[\"x - y\",\"subtract(x, y)\"],description:\"subtract two values.\",examples:[\"a = 5.3 - 2\",\"a + 2\",\"2/3 - 1/6\",\"2 * 3 - 3\",\"2.1 km - 500m\"],seealso:[\"add\"]}})),xc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.varianceDocs=void 0;t.varianceDocs={name:\"variance\",category:\"Statistics\",syntax:[\"variance(a, b, c, ...)\",\"variance(A)\",\"variance(A, normalization)\"],description:'Compute the variance of all values. Optional parameter normalization can be \"unbiased\" (default), \"uncorrected\", or \"biased\".',examples:[\"variance(2, 4, 6)\",\"variance([2, 4, 6, 8])\",'variance([2, 4, 6, 8], \"uncorrected\")','variance([2, 4, 6, 8], \"biased\")',\"variance([1, 2, 3; 4, 5, 6])\"],seealso:[\"max\",\"mean\",\"min\",\"median\",\"min\",\"prod\",\"std\",\"sum\"]}})),Dc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sinDocs=void 0;t.sinDocs={name:\"sin\",category:\"Trigonometry\",syntax:[\"sin(x)\"],description:\"Compute the sine of x in radians.\",examples:[\"sin(2)\",\"sin(pi / 4) ^ 2\",\"sin(90 deg)\",\"sin(30 deg)\",\"sin(0.2)^2 + cos(0.2)^2\"],seealso:[\"asin\",\"cos\",\"tan\"]}})),_c=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.numericDocs=void 0;t.numericDocs={name:\"numeric\",category:\"Utils\",syntax:[\"numeric(x)\"],description:\"Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.\",examples:['numeric(\"4\")','numeric(\"4\", \"number\")','numeric(\"4\", \"BigNumber\")','numeric(\"4\", \"Fraction)','numeric(4, \"Fraction\")','numeric(fraction(2, 5), \"number)'],seealso:[\"number\",\"fraction\",\"bignumber\",\"string\",\"format\"]}})),wc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.columnDocs=void 0;t.columnDocs={name:\"column\",category:\"Matrix\",syntax:[\"column(x, index)\"],description:\"Return a column from a matrix or array.\",examples:[\"A = [[1, 2], [3, 4]]\",\"column(A, 1)\",\"column(A, 2)\"],seealso:[\"row\"]}})),Nc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rowDocs=void 0;t.rowDocs={name:\"row\",category:\"Matrix\",syntax:[\"row(x, index)\"],description:\"Return a row from a matrix or array.\",examples:[\"A = [[1, 2], [3, 4]]\",\"row(A, 1)\",\"row(A, 2)\"],seealso:[\"column\"]}})),Mc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rotationMatrixDocs=void 0;t.rotationMatrixDocs={name:\"rotationMatrix\",category:\"Matrix\",syntax:[\"rotationMatrix(theta)\",\"rotationMatrix(theta, v)\",\"rotationMatrix(theta, v, format)\"],description:\"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.\",examples:[\"rotationMatrix(pi / 2)\",'rotationMatrix(unit(\"45deg\"), [0, 0, 1])','rotationMatrix(1, matrix([0, 0, 1]), \"sparse\")'],seealso:[\"cos\",\"sin\"]}})),Oc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rotateDocs=void 0;t.rotateDocs={name:\"rotate\",category:\"Matrix\",syntax:[\"rotate(w, theta)\",\"rotate(w, theta, v)\"],description:\"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.\",examples:[\"rotate([1, 0], math.pi / 2)\",'rotate(matrix([1, 0]), unit(\"35deg\"))','rotate([1, 0, 0], unit(\"90deg\"), [0, 0, 1])','rotate(matrix([1, 0, 0]), unit(\"90deg\"), matrix([0, 0, 1]))'],seealso:[\"matrix\",\"rotationMatrix\"]}})),Sc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.embeddedDocs=void 0;var n={bignumber:Ni.bignumberDocs,boolean:yc.booleanDocs,complex:hc.complexDocs,createUnit:mc.createUnitDocs,fraction:pc.fractionDocs,index:fc.indexDocs,matrix:dc.matrixDocs,number:lc.numberDocs,sparse:uc.sparseDocs,splitUnit:cc.splitUnitDocs,string:sc.stringDocs,unit:oc.unitDocs,e:ac.eDocs,E:ac.eDocs,false:ic.falseDocs,i:rc.iDocs,Infinity:nc.InfinityDocs,LN2:tc.LN2Docs,LN10:ec.LN10Docs,LOG2E:Ks.LOG2EDocs,LOG10E:Js.LOG10EDocs,NaN:Ys.NaNDocs,null:Xs.nullDocs,pi:Qs.piDocs,PI:Qs.piDocs,phi:$s.phiDocs,SQRT1_2:Gs.SQRT12Docs,SQRT2:Ws.SQRT2Docs,tau:Vs.tauDocs,true:Zs.trueDocs,version:Hs.versionDocs,speedOfLight:{description:\"Speed of light in vacuum\",examples:[\"speedOfLight\"]},gravitationConstant:{description:\"Newtonian constant of gravitation\",examples:[\"gravitationConstant\"]},planckConstant:{description:\"Planck constant\",examples:[\"planckConstant\"]},reducedPlanckConstant:{description:\"Reduced Planck constant\",examples:[\"reducedPlanckConstant\"]},magneticConstant:{description:\"Magnetic constant (vacuum permeability)\",examples:[\"magneticConstant\"]},electricConstant:{description:\"Electric constant (vacuum permeability)\",examples:[\"electricConstant\"]},vacuumImpedance:{description:\"Characteristic impedance of vacuum\",examples:[\"vacuumImpedance\"]},coulomb:{description:\"Coulomb's constant\",examples:[\"coulomb\"]},elementaryCharge:{description:\"Elementary charge\",examples:[\"elementaryCharge\"]},bohrMagneton:{description:\"Borh magneton\",examples:[\"bohrMagneton\"]},conductanceQuantum:{description:\"Conductance quantum\",examples:[\"conductanceQuantum\"]},inverseConductanceQuantum:{description:\"Inverse conductance quantum\",examples:[\"inverseConductanceQuantum\"]},magneticFluxQuantum:{description:\"Magnetic flux quantum\",examples:[\"magneticFluxQuantum\"]},nuclearMagneton:{description:\"Nuclear magneton\",examples:[\"nuclearMagneton\"]},klitzing:{description:\"Von Klitzing constant\",examples:[\"klitzing\"]},bohrRadius:{description:\"Borh radius\",examples:[\"bohrRadius\"]},classicalElectronRadius:{description:\"Classical electron radius\",examples:[\"classicalElectronRadius\"]},electronMass:{description:\"Electron mass\",examples:[\"electronMass\"]},fermiCoupling:{description:\"Fermi coupling constant\",examples:[\"fermiCoupling\"]},fineStructure:{description:\"Fine-structure constant\",examples:[\"fineStructure\"]},hartreeEnergy:{description:\"Hartree energy\",examples:[\"hartreeEnergy\"]},protonMass:{description:\"Proton mass\",examples:[\"protonMass\"]},deuteronMass:{description:\"Deuteron Mass\",examples:[\"deuteronMass\"]},neutronMass:{description:\"Neutron mass\",examples:[\"neutronMass\"]},quantumOfCirculation:{description:\"Quantum of circulation\",examples:[\"quantumOfCirculation\"]},rydberg:{description:\"Rydberg constant\",examples:[\"rydberg\"]},thomsonCrossSection:{description:\"Thomson cross section\",examples:[\"thomsonCrossSection\"]},weakMixingAngle:{description:\"Weak mixing angle\",examples:[\"weakMixingAngle\"]},efimovFactor:{description:\"Efimov factor\",examples:[\"efimovFactor\"]},atomicMass:{description:\"Atomic mass constant\",examples:[\"atomicMass\"]},avogadro:{description:\"Avogadro's number\",examples:[\"avogadro\"]},boltzmann:{description:\"Boltzmann constant\",examples:[\"boltzmann\"]},faraday:{description:\"Faraday constant\",examples:[\"faraday\"]},firstRadiation:{description:\"First radiation constant\",examples:[\"firstRadiation\"]},loschmidt:{description:\"Loschmidt constant at T=273.15 K and p=101.325 kPa\",examples:[\"loschmidt\"]},gasConstant:{description:\"Gas constant\",examples:[\"gasConstant\"]},molarPlanckConstant:{description:\"Molar Planck constant\",examples:[\"molarPlanckConstant\"]},molarVolume:{description:\"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa\",examples:[\"molarVolume\"]},sackurTetrode:{description:\"Sackur-Tetrode constant at T=1 K and p=101.325 kPa\",examples:[\"sackurTetrode\"]},secondRadiation:{description:\"Second radiation constant\",examples:[\"secondRadiation\"]},stefanBoltzmann:{description:\"Stefan-Boltzmann constant\",examples:[\"stefanBoltzmann\"]},wienDisplacement:{description:\"Wien displacement law constant\",examples:[\"wienDisplacement\"]},molarMass:{description:\"Molar mass constant\",examples:[\"molarMass\"]},molarMassC12:{description:\"Molar mass constant of carbon-12\",examples:[\"molarMassC12\"]},gravity:{description:\"Standard acceleration of gravity (standard acceleration of free-fall on Earth)\",examples:[\"gravity\"]},planckLength:{description:\"Planck length\",examples:[\"planckLength\"]},planckMass:{description:\"Planck mass\",examples:[\"planckMass\"]},planckTime:{description:\"Planck time\",examples:[\"planckTime\"]},planckCharge:{description:\"Planck charge\",examples:[\"planckCharge\"]},planckTemperature:{description:\"Planck temperature\",examples:[\"planckTemperature\"]},derivative:Ls.derivativeDocs,lsolve:Fs.lsolveDocs,lsolveAll:Us.lsolveAllDocs,lup:qs.lupDocs,lusolve:gc.lusolveDocs,simplify:Rs.simplifyDocs,rationalize:zs.rationalizeDocs,slu:Bs.sluDocs,usolve:ks.usolveDocs,usolveAll:Is.usolveAllDocs,qr:Ts.qrDocs,abs:Cs.absDocs,add:Es.addDocs,cbrt:As.cbrtDocs,ceil:js.ceilDocs,cube:Ps.cubeDocs,divide:Ss.divideDocs,dotDivide:Os.dotDivideDocs,dotMultiply:Ms.dotMultiplyDocs,dotPow:vc.dotPowDocs,exp:Ns.expDocs,expm:_s.expmDocs,expm1:Ds.expm1Docs,fix:xs.fixDocs,floor:bs.floorDocs,gcd:gs.gcdDocs,hypot:vs.hypotDocs,lcm:ys.lcmDocs,log:hs.logDocs,log2:ms.log2Docs,log1p:ps.log1pDocs,log10:fs.log10Docs,mod:ds.modDocs,multiply:ls.multiplyDocs,norm:us.normDocs,nthRoot:cs.nthRootDocs,nthRoots:ss.nthRootsDocs,pow:os.powDocs,round:as.roundDocs,sign:is.signDocs,sqrt:rs.sqrtDocs,sqrtm:ns.sqrtmDocs,square:ts.squareDocs,subtract:bc.subtractDocs,unaryMinus:es.unaryMinusDocs,unaryPlus:Ko.unaryPlusDocs,xgcd:Jo.xgcdDocs,bitAnd:Yo.bitAndDocs,bitNot:Xo.bitNotDocs,bitOr:Qo.bitOrDocs,bitXor:$o.bitXorDocs,leftShift:Go.leftShiftDocs,rightArithShift:Wo.rightArithShiftDocs,rightLogShift:Vo.rightLogShiftDocs,bellNumbers:Zo.bellNumbersDocs,catalan:Ho.catalanDocs,composition:Lo.compositionDocs,stirlingS2:Uo.stirlingS2Docs,config:Fo.configDocs,import:qo.importDocs,typed:Ro.typedDocs,arg:zo.argDocs,conj:Bo.conjDocs,re:Io.reDocs,im:ko.imDocs,evaluate:To.evaluateDocs,help:Co.helpDocs,distance:Eo.distanceDocs,intersect:Ao.intersectDocs,and:jo.andDocs,not:Po.notDocs,or:So.orDocs,xor:Oo.xorDocs,concat:Mo.concatDocs,cross:No.crossDocs,column:wc.columnDocs,ctranspose:wo.ctransposeDocs,det:_o.detDocs,diag:Do.diagDocs,diff:ao.diffDocs,dot:xo.dotDocs,getMatrixDataType:bo.getMatrixDataTypeDocs,identity:go.identityDocs,filter:vo.filterDocs,flatten:yo.flattenDocs,forEach:ho.forEachDocs,inv:mo.invDocs,eigs:ws.eigsDocs,kron:po.kronDocs,map:fo.mapDocs,ones:lo.onesDocs,partitionSelect:uo.partitionSelectDocs,range:co.rangeDocs,resize:so.resizeDocs,reshape:oo.reshapeDocs,rotate:Oc.rotateDocs,rotationMatrix:Mc.rotationMatrixDocs,row:Nc.rowDocs,size:io.sizeDocs,sort:ro.sortDocs,squeeze:no.squeezeDocs,subset:to.subsetDocs,trace:eo.traceDocs,transpose:Ka.transposeDocs,zeros:Ja.zerosDocs,combinations:Xa.combinationsDocs,combinationsWithRep:Ya.combinationsWithRepDocs,factorial:Qa.factorialDocs,gamma:$a.gammaDocs,kldivergence:Ga.kldivergenceDocs,multinomial:Wa.multinomialDocs,permutations:Va.permutationsDocs,pickRandom:Za.pickRandomDocs,random:Ha.randomDocs,randomInt:La.randomIntDocs,compare:Ua.compareDocs,compareNatural:Fa.compareNaturalDocs,compareText:qa.compareTextDocs,deepEqual:Ra.deepEqualDocs,equal:za.equalDocs,equalText:Ba.equalTextDocs,larger:Ia.largerDocs,largerEq:ka.largerEqDocs,smaller:Ta.smallerDocs,smallerEq:Ca.smallerEqDocs,unequal:Ea.unequalDocs,setCartesian:Aa.setCartesianDocs,setDifference:ja.setDifferenceDocs,setDistinct:Pa.setDistinctDocs,setIntersect:Sa.setIntersectDocs,setIsSubset:Oa.setIsSubsetDocs,setMultiplicity:Ma.setMultiplicityDocs,setPowerset:Na.setPowersetDocs,setSize:wa.setSizeDocs,setSymDifference:_a.setSymDifferenceDocs,setUnion:Da.setUnionDocs,erf:xa.erfDocs,mad:ba.madDocs,max:ga.maxDocs,mean:va.meanDocs,median:ya.medianDocs,min:ha.minDocs,mode:ma.modeDocs,prod:pa.prodDocs,quantileSeq:fa.quantileSeqDocs,std:da.stdDocs,sum:la.sumDocs,variance:xc.varianceDocs,acos:ua.acosDocs,acosh:ca.acoshDocs,acot:sa.acotDocs,acoth:oa.acothDocs,acsc:aa.acscDocs,acsch:ia.acschDocs,asec:ra.asecDocs,asech:na.asechDocs,asin:ta.asinDocs,asinh:ea.asinhDocs,atan:Ki.atanDocs,atanh:Ji.atanhDocs,atan2:Yi.atan2Docs,cos:Xi.cosDocs,cosh:Qi.coshDocs,cot:$i.cotDocs,coth:Gi.cothDocs,csc:Wi.cscDocs,csch:Vi.cschDocs,sec:Zi.secDocs,sech:Hi.sechDocs,sin:Dc.sinDocs,sinh:Li.sinhDocs,tan:Ui.tanDocs,tanh:Fi.tanhDocs,to:qi.toDocs,clone:Ri.cloneDocs,format:ki.formatDocs,bin:Ii.binDocs,oct:Bi.octDocs,hex:zi.hexDocs,isNaN:Ti.isNaNDocs,isInteger:Ci.isIntegerDocs,isNegative:Ei.isNegativeDocs,isNumeric:ji.isNumericDocs,hasNumericValue:Ai.hasNumericValueDocs,isPositive:Pi.isPositiveDocs,isPrime:Si.isPrimeDocs,isZero:Oi.isZeroDocs,typeOf:Mi.typeOfDocs,numeric:_c.numericDocs};t.embeddedDocs=n})),Pc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createHelp=void 0;var n=[\"typed\",\"mathWithTransform\",\"Help\"],r=(0,h.factory)(\"help\",n,(function(e){var t=e.typed,n=e.mathWithTransform,r=e.Help;return t(\"help\",{any:function(e){var t,i=e;if(\"string\"!=typeof e)for(t in n)if((0,a.hasOwnProperty)(n,t)&&e===n[t]){i=t;break}var o=(0,St.getSafeProperty)(Sc.embeddedDocs,i);if(!o){var s=\"function\"==typeof i?i.name:i;throw new Error('No documentation found on \"'+s+'\"')}return new r(o)}})}));t.createHelp=r})),jc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createChain=void 0;var n=[\"typed\",\"Chain\"],r=(0,h.factory)(\"chain\",n,(function(e){var t=e.typed,n=e.Chain;return t(\"chain\",{\"\":function(){return new n},any:function(e){return new n(e)}})}));t.createChain=r})),Ac=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDet=void 0;var n=[\"typed\",\"matrix\",\"subtract\",\"multiply\",\"unaryMinus\",\"lup\"],r=(0,h.factory)(\"det\",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,o=e.multiply,s=e.unaryMinus,c=e.lup;return t(\"det\",{any:function(e){return(0,a.clone)(e)},\"Array | Matrix\":function(e){var t;switch((t=(0,i.isMatrix)(e)?e.size():Array.isArray(e)?(e=n(e)).size():[]).length){case 0:return(0,a.clone)(e);case 1:if(1===t[0])return(0,a.clone)(e.valueOf()[0]);throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");case 2:var u=t[0];if(u===t[1])return function(e,t,n){if(1===t)return(0,a.clone)(e[0][0]);if(2===t)return r(o(e[0][0],e[1][1]),o(e[1][0],e[0][1]));for(var i=c(e),u=i.U[0][0],l=1;l<t;l++)u=o(u,i.U[l][l]);for(var d=0,f=0,p=[];;){for(;p[f];)f++;if(f>=t)break;for(var m=f,h=0;!p[i.p[m]];)p[i.p[m]]=!0,m=i.p[m],h++;h%2==0&&d++}return d%2==0?u:s(u)}(e.clone().valueOf(),u);throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");default:throw new RangeError(\"Matrix must be two dimensional (size: \"+(0,d.format)(t)+\")\")}}})}));t.createDet=r})),Ec=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createInv=void 0;var n=[\"typed\",\"matrix\",\"divideScalar\",\"addScalar\",\"multiply\",\"unaryMinus\",\"det\",\"identity\",\"abs\"],r=(0,h.factory)(\"inv\",n,(function(e){var t=e.typed,n=e.matrix,r=e.divideScalar,a=e.addScalar,o=e.multiply,s=e.unaryMinus,c=e.det,u=e.identity,l=e.abs;return t(\"inv\",{\"Array | Matrix\":function(e){var t=(0,i.isMatrix)(e)?e.size():(0,m.arraySize)(e);switch(t.length){case 1:if(1===t[0])return(0,i.isMatrix)(e)?n([r(1,e.valueOf()[0])]):[r(1,e[0])];throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");case 2:var a=t[0],o=t[1];if(a===o)return(0,i.isMatrix)(e)?n(f(e.valueOf(),a,o),e.storage()):f(e,a,o);throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");default:throw new RangeError(\"Matrix must be two dimensional (size: \"+(0,d.format)(t)+\")\")}},any:function(e){return r(1,e)}});function f(e,t,n){var i,d,f,p,m;if(1===t){if(0===(p=e[0][0]))throw Error(\"Cannot calculate inverse, determinant is zero\");return[[r(1,p)]]}if(2===t){var h=c(e);if(0===h)throw Error(\"Cannot calculate inverse, determinant is zero\");return[[r(e[1][1],h),r(s(e[0][1]),h)],[r(s(e[1][0]),h),r(e[0][0],h)]]}var y=e.concat();for(i=0;i<t;i++)y[i]=y[i].concat();for(var v=u(t).valueOf(),g=0;g<n;g++){var b=l(y[g][g]),x=g;for(i=g+1;i<t;)l(y[i][g])>b&&(b=l(y[i][g]),x=i),i++;if(0===b)throw Error(\"Cannot calculate inverse, determinant is zero\");(i=x)!==g&&(m=y[g],y[g]=y[i],y[i]=m,m=v[g],v[g]=v[i],v[i]=m);var D=y[g],_=v[g];for(i=0;i<t;i++){var w=y[i],N=v[i];if(i!==g){if(0!==w[g]){for(f=r(s(w[g]),D[g]),d=g;d<n;d++)w[d]=a(w[d],o(f,D[d]));for(d=0;d<n;d++)N[d]=a(N[d],o(f,_[d]))}}else{for(f=D[g],d=g;d<n;d++)w[d]=r(w[d],f);for(d=0;d<n;d++)N[d]=r(N[d],f)}}}return v}}));t.createInv=r})),Cc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createEigs=void 0;var n=[\"config\",\"typed\",\"matrix\",\"addScalar\",\"equal\",\"subtract\",\"abs\",\"atan\",\"cos\",\"sin\",\"multiplyScalar\",\"inv\",\"bignumber\",\"multiply\",\"add\"],r=(0,h.factory)(\"eigs\",n,(function(e){var t=e.config,n=e.typed,r=e.matrix,i=e.addScalar,o=e.subtract,s=e.equal,c=e.abs,u=e.atan,l=e.cos,f=e.sin,p=e.multiplyScalar,m=e.inv,h=e.bignumber,y=e.multiply,v=e.add;return n(\"eigs\",{Array:function(e){var t=r(e),n=t.size();if(2!==n.length||n[0]!==n[1])throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(n)+\")\");var i=g(t,n[0]);return{values:i[0],vectors:i[1]}},Matrix:function(e){var t=e.size();if(2!==t.length||t[0]!==t[1])throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");var n=g(e,t[0]);return{values:r(n[0]),vectors:r(n[1])}}});function g(e,n){var r=e.datatype();if(void 0===r&&(r=e.getDataType()),\"number\"!==r&&\"BigNumber\"!==r&&\"Fraction\"!==r)throw\"mixed\"===r?new TypeError(\"Mixed matrix element type is not supported\"):new TypeError(\"Matrix element type not supported (\"+r+\")\");if(function(e,t){for(var n=0;n<t;n++)for(var r=n;r<t;r++)if(!s(e[n][r],e[r][n]))throw new TypeError(\"Input matrix is not symmetric\")}(e.toArray(),n),\"number\"===r)return b(e.toArray());if(\"Fraction\"===r){for(var i=e.toArray(),o=0;o<n;o++)for(var u=o;u<n;u++)i[o][u]=i[o][u].valueOf(),i[u][o]=i[o][u];return b(e.toArray())}return\"BigNumber\"===r?function(e){for(var n,r=e.length,i=c(t.epsilon/r),o=new Array(r),s=0;s<r;s++)o[s]=j(r,0),o[s][s]=1;var u=S(e);for(;c(u[1])>=c(i);){var l=u[0][0],d=u[0][1];n=D(e[l][l],e[d][d],e[l][d]),e=N(e,n,l,d),o=w(o,n,l,d),u=S(e)}for(var f=j(r,0),p=0;p<r;p++)f[p]=e[p][p];return P((0,a.clone)(f),(0,a.clone)(o))}(e.toArray()):void 0}function b(e){for(var n,r=e.length,i=Math.abs(t.epsilon/r),o=new Array(r),s=0;s<r;s++)o[s]=j(r,0),o[s][s]=1;for(var c=O(e);Math.abs(c[1])>=Math.abs(i);){var u=c[0][0],l=c[0][1];e=M(e,n=x(e[u][u],e[l][l],e[u][l]),u,l),o=_(o,n,u,l),c=O(e)}for(var d=j(r,0),f=0;f<r;f++)d[f]=e[f][f];return P((0,a.clone)(d),(0,a.clone)(o))}function x(e,n,r){var i=n-e;return Math.abs(i)<=t.epsilon?Math.PI/4:.5*Math.atan(2*r/(n-e))}function D(e,n,r){var i=o(n,e);return c(i)<=t.epsilon?h(-1).acos().div(4):p(.5,u(y(2,r,m(i))))}function _(e,t,n,r){for(var i=e.length,a=Math.cos(t),o=Math.sin(t),s=j(i,0),c=j(i,0),u=0;u<i;u++)s[u]=a*e[u][n]-o*e[u][r],c[u]=o*e[u][n]+a*e[u][r];for(var l=0;l<i;l++)e[l][n]=s[l],e[l][r]=c[l];return e}function w(e,t,n,r){for(var a=e.length,s=l(t),c=f(t),u=j(a,h(0)),d=j(a,h(0)),m=0;m<a;m++)u[m]=o(p(s,e[m][n]),p(c,e[m][r])),d[m]=i(p(c,e[m][n]),p(s,e[m][r]));for(var y=0;y<a;y++)e[y][n]=u[y],e[y][r]=d[y];return e}function N(e,t,n,r){for(var a=e.length,s=h(l(t)),c=h(f(t)),u=p(s,s),d=p(c,c),m=j(a,h(0)),g=j(a,h(0)),b=y(h(2),s,c,e[n][r]),x=i(o(p(u,e[n][n]),b),p(d,e[r][r])),D=v(p(d,e[n][n]),b,p(u,e[r][r])),_=0;_<a;_++)m[_]=o(p(s,e[n][_]),p(c,e[r][_])),g[_]=i(p(c,e[n][_]),p(s,e[r][_]));e[n][n]=x,e[r][r]=D,e[n][r]=h(0),e[r][n]=h(0);for(var w=0;w<a;w++)w!==n&&w!==r&&(e[n][w]=m[w],e[w][n]=m[w],e[r][w]=g[w],e[w][r]=g[w]);return e}function M(e,t,n,r){for(var i=e.length,a=Math.cos(t),o=Math.sin(t),s=a*a,c=o*o,u=j(i,0),l=j(i,0),d=s*e[n][n]-2*a*o*e[n][r]+c*e[r][r],f=c*e[n][n]+2*a*o*e[n][r]+s*e[r][r],p=0;p<i;p++)u[p]=a*e[n][p]-o*e[r][p],l[p]=o*e[n][p]+a*e[r][p];e[n][n]=d,e[r][r]=f,e[n][r]=0,e[r][n]=0;for(var m=0;m<i;m++)m!==n&&m!==r&&(e[n][m]=u[m],e[m][n]=u[m],e[r][m]=l[m],e[m][r]=l[m]);return e}function O(e){for(var t=e.length,n=0,r=[0,1],i=0;i<t;i++)for(var a=i+1;a<t;a++)Math.abs(n)<Math.abs(e[i][a])&&(n=Math.abs(e[i][a]),r=[i,a]);return[r,n]}function S(e){for(var t=e.length,n=0,r=[0,1],i=0;i<t;i++)for(var a=i+1;a<t;a++)c(n)<c(e[i][a])&&(n=c(e[i][a]),r=[i,a]);return[r,n]}function P(e,t){for(var n=e.length,r=Array(n),i=Array(n),o=0;o<n;o++)i[o]=Array(n);for(var s=0;s<n;s++){for(var c=0,u=e[0],l=0;l<e.length;l++)e[l]<u&&(u=e[c=l]);r[s]=e.splice(c,1)[0];for(var d=0;d<n;d++)i[d][s]=t[d][c],t[d].splice(c,1)}return[(0,a.clone)(r),(0,a.clone)(i)]}function j(e,t){for(var n=new Array(e),r=0;r<e;r++)n[r]=t;return n}}));t.createEigs=r})),Tc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createExpm=void 0;var n=[\"typed\",\"abs\",\"add\",\"identity\",\"inv\",\"multiply\"],r=(0,h.factory)(\"expm\",n,(function(e){var t=e.typed,n=e.abs,r=e.add,a=e.identity,o=e.inv,s=e.multiply;return t(\"expm\",{Matrix:function(e){var t=e.size();if(2!==t.length||t[0]!==t[1])throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");for(var u=t[0],l=function(e,t){for(var n=0;n<30;n++)for(var r=0;r<=n;r++){var i=n-r;if(c(e,r,i)<t)return{q:r,j:i}}throw new Error(\"Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)\")}(function(e){for(var t=e.size()[0],r=0,i=0;i<t;i++){for(var a=0,o=0;o<t;o++)a+=n(e.get([i,o]));r=Math.max(a,r)}return r}(e),1e-15),f=l.q,p=l.j,m=s(e,Math.pow(2,-p)),h=a(u),y=a(u),v=1,g=m,b=-1,x=1;x<=f;x++)x>1&&(g=s(g,m),b=-b),h=r(h,s(v=v*(f-x+1)/((2*f-x+1)*x),g)),y=r(y,s(v*b,g));for(var D=s(o(y),h),_=0;_<p;_++)D=s(D,D);return(0,i.isSparseMatrix)(e)?e.createSparseMatrix(D):D}});function c(e,t,n){for(var r=1,i=2;i<=t;i++)r*=i;for(var a=r,o=t+1;o<=2*t;o++)a*=o;var s=a*(2*t+1);return 8*Math.pow(e/Math.pow(2,n),2*t)*r*r/(a*s)}}));t.createExpm=r})),kc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSqrtm=void 0;var n=[\"typed\",\"abs\",\"add\",\"multiply\",\"sqrt\",\"subtract\",\"inv\",\"size\",\"max\",\"identity\"],r=(0,h.factory)(\"sqrtm\",n,(function(e){var t=e.typed,n=e.abs,r=e.add,a=e.multiply,o=e.sqrt,s=e.subtract,c=e.inv,u=e.size,l=e.max,f=e.identity;function p(e){var t,i=0,o=e,d=f(u(e));do{var p=o;if(o=a(.5,r(p,c(d))),d=a(.5,r(d,c(p))),(t=l(n(s(o,p))))>1e-6&&++i>1e3)throw new Error(\"computing square root of matrix: iterative method could not converge\")}while(t>1e-6);return o}return t(\"sqrtm\",{\"Array | Matrix\":function(e){var t=(0,i.isMatrix)(e)?e.size():(0,m.arraySize)(e);switch(t.length){case 1:if(1===t[0])return o(e);throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");case 2:if(t[0]===t[1])return p(e);throw new RangeError(\"Matrix must be square (size: \"+(0,d.format)(t)+\")\");default:throw new RangeError(\"Matrix must be at most two dimensional (size: \"+(0,d.format)(t)+\")\")}}})}));t.createSqrtm=r})),Ic=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDivide=void 0;var n=[\"typed\",\"matrix\",\"multiply\",\"equalScalar\",\"divideScalar\",\"inv\"],r=(0,h.factory)(\"divide\",n,(function(e){var t=e.typed,n=e.matrix,r=e.multiply,i=e.equalScalar,o=e.divideScalar,s=e.inv,c=(0,fe.createAlgorithm11)({typed:t,equalScalar:i}),u=(0,pe.createAlgorithm14)({typed:t});return t(\"divide\",(0,a.extend)({\"Array | Matrix, Array | Matrix\":function(e,t){return r(e,s(t))},\"DenseMatrix, any\":function(e,t){return u(e,t,o,!1)},\"SparseMatrix, any\":function(e,t){return c(e,t,o,!1)},\"Array, any\":function(e,t){return u(n(e),t,o,!1).valueOf()},\"any, Array | Matrix\":function(e,t){return r(e,s(t))}},o.signatures))}));t.createDivide=r})),Bc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDistance=void 0;var n=[\"typed\",\"addScalar\",\"subtract\",\"divideScalar\",\"multiplyScalar\",\"unaryMinus\",\"sqrt\",\"abs\"],r=(0,h.factory)(\"distance\",n,(function(e){var t=e.typed,n=e.addScalar,r=e.subtract,a=e.multiplyScalar,o=e.divideScalar,s=e.unaryMinus,c=e.sqrt,u=e.abs;return t(\"distance\",{\"Array, Array, Array\":function(e,t,n){if(2===e.length&&2===t.length&&2===n.length){if(!d(e))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for first argument\");if(!d(t))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for second argument\");if(!d(n))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for third argument\");var i=o(r(n[1],n[0]),r(t[1],t[0])),c=a(a(i,i),t[0]),u=s(a(i,t[0])),l=e[1];return y(e[0],e[1],c,u,l)}throw new TypeError(\"Invalid Arguments: Try again\")},\"Object, Object, Object\":function(e,t,n){if(2===Object.keys(e).length&&2===Object.keys(t).length&&2===Object.keys(n).length){if(!d(e))throw new TypeError(\"Values of pointX and pointY should be numbers or BigNumbers\");if(!d(t))throw new TypeError(\"Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers\");if(!d(n))throw new TypeError(\"Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers\");if(\"pointX\"in e&&\"pointY\"in e&&\"lineOnePtX\"in t&&\"lineOnePtY\"in t&&\"lineTwoPtX\"in n&&\"lineTwoPtY\"in n){var i=o(r(n.lineTwoPtY,n.lineTwoPtX),r(t.lineOnePtY,t.lineOnePtX)),c=a(a(i,i),t.lineOnePtX),u=s(a(i,t.lineOnePtX)),l=e.pointX;return y(e.pointX,e.pointY,c,u,l)}throw new TypeError(\"Key names do not match\")}throw new TypeError(\"Invalid Arguments: Try again\")},\"Array, Array\":function(e,t){if(2===e.length&&3===t.length){if(!d(e))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for first argument\");if(!f(t))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");return y(e[0],e[1],t[0],t[1],t[2])}if(3===e.length&&6===t.length){if(!f(e))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");if(!m(t))throw new TypeError(\"Array with 6 numbers or BigNumbers expected for second argument\");return v(e[0],e[1],e[2],t[0],t[1],t[2],t[3],t[4],t[5])}if(e.length===t.length&&e.length>0){if(!p(e))throw new TypeError(\"All values of an array should be numbers or BigNumbers\");if(!p(t))throw new TypeError(\"All values of an array should be numbers or BigNumbers\");return g(e,t)}throw new TypeError(\"Invalid Arguments: Try again\")},\"Object, Object\":function(e,t){if(2===Object.keys(e).length&&3===Object.keys(t).length){if(!d(e))throw new TypeError(\"Values of pointX and pointY should be numbers or BigNumbers\");if(!f(t))throw new TypeError(\"Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers\");if(\"pointX\"in e&&\"pointY\"in e&&\"xCoeffLine\"in t&&\"yCoeffLine\"in t&&\"constant\"in t)return y(e.pointX,e.pointY,t.xCoeffLine,t.yCoeffLine,t.constant);throw new TypeError(\"Key names do not match\")}if(3===Object.keys(e).length&&6===Object.keys(t).length){if(!f(e))throw new TypeError(\"Values of pointX, pointY and pointZ should be numbers or BigNumbers\");if(!m(t))throw new TypeError(\"Values of x0, y0, z0, a, b and c should be numbers or BigNumbers\");if(\"pointX\"in e&&\"pointY\"in e&&\"x0\"in t&&\"y0\"in t&&\"z0\"in t&&\"a\"in t&&\"b\"in t&&\"c\"in t)return v(e.pointX,e.pointY,e.pointZ,t.x0,t.y0,t.z0,t.a,t.b,t.c);throw new TypeError(\"Key names do not match\")}if(2===Object.keys(e).length&&2===Object.keys(t).length){if(!d(e))throw new TypeError(\"Values of pointOneX and pointOneY should be numbers or BigNumbers\");if(!d(t))throw new TypeError(\"Values of pointTwoX and pointTwoY should be numbers or BigNumbers\");if(\"pointOneX\"in e&&\"pointOneY\"in e&&\"pointTwoX\"in t&&\"pointTwoY\"in t)return g([e.pointOneX,e.pointOneY],[t.pointTwoX,t.pointTwoY]);throw new TypeError(\"Key names do not match\")}if(3===Object.keys(e).length&&3===Object.keys(t).length){if(!f(e))throw new TypeError(\"Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers\");if(!f(t))throw new TypeError(\"Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers\");if(\"pointOneX\"in e&&\"pointOneY\"in e&&\"pointOneZ\"in e&&\"pointTwoX\"in t&&\"pointTwoY\"in t&&\"pointTwoZ\"in t)return g([e.pointOneX,e.pointOneY,e.pointOneZ],[t.pointTwoX,t.pointTwoY,t.pointTwoZ]);throw new TypeError(\"Key names do not match\")}throw new TypeError(\"Invalid Arguments: Try again\")},Array:function(e){if(!function(e){if(2===e[0].length&&l(e[0][0])&&l(e[0][1])){if(e.some((function(e){return 2!==e.length||!l(e[0])||!l(e[1])})))return!1}else{if(!(3===e[0].length&&l(e[0][0])&&l(e[0][1])&&l(e[0][2])))return!1;if(e.some((function(e){return 3!==e.length||!l(e[0])||!l(e[1])||!l(e[2])})))return!1}return!0}(e))throw new TypeError(\"Incorrect array format entered for pairwise distance calculation\");return function(e){for(var t=[],n=[],r=[],i=0;i<e.length-1;i++)for(var a=i+1;a<e.length;a++)2===e[0].length?(n=[e[i][0],e[i][1]],r=[e[a][0],e[a][1]]):3===e[0].length&&(n=[e[i][0],e[i][1],e[i][2]],r=[e[a][0],e[a][1],e[a][2]]),t.push(g(n,r));return t}(e)}});function l(e){return\"number\"==typeof e||(0,i.isBigNumber)(e)}function d(e){return e.constructor!==Array&&(e=h(e)),l(e[0])&&l(e[1])}function f(e){return e.constructor!==Array&&(e=h(e)),l(e[0])&&l(e[1])&&l(e[2])}function p(e){return Array.isArray(e)||(e=h(e)),e.every(l)}function m(e){return e.constructor!==Array&&(e=h(e)),l(e[0])&&l(e[1])&&l(e[2])&&l(e[3])&&l(e[4])&&l(e[5])}function h(e){for(var t=Object.keys(e),n=[],r=0;r<t.length;r++)n.push(e[t[r]]);return n}function y(e,t,r,i,s){var l=u(n(n(a(r,e),a(i,t)),s)),d=c(n(a(r,r),a(i,i)));return o(l,d)}function v(e,t,i,s,u,l,d,f,p){var m=[r(a(r(u,t),p),a(r(l,i),f)),r(a(r(l,i),d),a(r(s,e),p)),r(a(r(s,e),f),a(r(u,t),d))];m=c(n(n(a(m[0],m[0]),a(m[1],m[1])),a(m[2],m[2])));var h=c(n(n(a(d,d),a(f,f)),a(p,p)));return o(m,h)}function g(e,t){for(var i=e.length,o=0,s=0,u=0;u<i;u++)s=r(e[u],t[u]),o=n(a(s,s),o);return c(o)}}));t.createDistance=r})),zc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIntersect=void 0;var n=[\"typed\",\"config\",\"abs\",\"add\",\"addScalar\",\"matrix\",\"multiply\",\"multiplyScalar\",\"divideScalar\",\"subtract\",\"smaller\",\"equalScalar\"],r=(0,h.factory)(\"intersect\",n,(function(e){var t=e.typed,n=e.config,r=e.abs,a=e.add,o=e.addScalar,s=e.matrix,c=e.multiply,u=e.multiplyScalar,l=e.divideScalar,d=e.subtract,f=e.smaller,p=e.equalScalar;return t(\"intersect\",{\"Array, Array, Array\":function(e,t,n){if(!y(e))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");if(!y(t))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");if(!function(e){return 4===e.length&&m(e[0])&&m(e[1])&&m(e[2])&&m(e[3])}(n))throw new TypeError(\"Array with 4 numbers expected as third argument\");return function(e,t,n,r,i,a,s,c,f,p){var m=u(e,s),h=u(r,s),y=u(t,c),v=u(i,c),g=u(n,f),b=u(a,f),x=l(d(d(d(p,m),y),g),d(d(d(o(o(h,v),b),m),y),g)),D=o(e,u(x,d(r,e))),_=o(t,u(x,d(i,t))),w=o(n,u(x,d(a,n)));return[D,_,w]}(e[0],e[1],e[2],t[0],t[1],t[2],n[0],n[1],n[2],n[3])},\"Array, Array, Array, Array\":function(e,t,i,s){if(2===e.length){if(!h(e))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for first argument\");if(!h(t))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for second argument\");if(!h(i))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for third argument\");if(!h(s))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for fourth argument\");return function(e,t,i,s){var p=e,m=i,h=d(p,t),y=d(m,s),v=d(u(h[0],y[1]),u(y[0],h[1]));if(f(r(v),n.epsilon))return null;var g=u(y[0],p[1]),b=u(y[1],p[0]),x=u(y[0],m[1]),D=u(y[1],m[0]),_=l(o(d(d(g,b),x),D),v);return a(c(h,_),p)}(e,t,i,s)}if(3===e.length){if(!y(e))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");if(!y(t))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");if(!y(i))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for third argument\");if(!y(s))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for fourth argument\");return m=e[0],g=e[1],b=e[2],x=t[0],D=t[1],_=t[2],w=i[0],N=i[1],M=i[2],O=s[0],S=s[1],P=s[2],j=v(m,w,O,w,g,N,S,N,b,M,P,M),A=v(O,w,x,m,S,N,D,g,P,M,_,b),E=v(m,w,x,m,g,N,D,g,b,M,_,b),C=v(O,w,O,w,S,N,S,N,P,M,P,M),T=v(x,m,x,m,D,g,D,g,_,b,_,b),k=l(d(u(j,A),u(E,C)),d(u(T,C),u(A,A))),I=l(o(j,u(k,A)),C),B=o(m,u(k,d(x,m))),z=o(g,u(k,d(D,g))),R=o(b,u(k,d(_,b))),q=o(w,u(I,d(O,w))),F=o(N,u(I,d(S,N))),U=o(M,u(I,d(P,M))),p(B,q)&&p(z,F)&&p(R,U)?[B,z,R]:null}throw new TypeError(\"Arrays with two or thee dimensional points expected\");var m,g,b,x,D,_,w,N,M,O,S,P,j,A,E,C,T,k,I,B,z,R,q,F,U},\"Matrix, Matrix, Matrix\":function(e,t,n){return s(this(e.valueOf(),t.valueOf(),n.valueOf()))},\"Matrix, Matrix, Matrix, Matrix\":function(e,t,n,r){return s(this(e.valueOf(),t.valueOf(),n.valueOf(),r.valueOf()))}});function m(e){return\"number\"==typeof e||(0,i.isBigNumber)(e)}function h(e){return 2===e.length&&m(e[0])&&m(e[1])}function y(e){return 3===e.length&&m(e[0])&&m(e[1])&&m(e[2])}function v(e,t,n,r,i,a,s,c,l,f,p,m){var h=u(d(e,t),d(n,r)),y=u(d(i,a),d(s,c)),v=u(d(l,f),d(p,m));return o(o(h,y),v)}}));t.createIntersect=r})),Rc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSum=void 0;var n=[\"typed\",\"config\",\"add\",\"numeric\"],r=(0,h.factory)(\"sum\",n,(function(e){var t=e.typed,n=e.config,r=e.add,i=e.numeric;return t(\"sum\",{\"Array | Matrix\":a,\"Array | Matrix, number | BigNumber\":function(e,t){try{return(0,P.reduce)(e,t,r)}catch(e){throw(0,kt.improveErrorMessage)(e,\"sum\")}},\"...\":function(e){if((0,P.containsCollections)(e))throw new TypeError(\"Scalar values expected in function sum\");return a(e)}});function a(e){var t;return(0,P.deepForEach)(e,(function(e){try{t=void 0===t?e:r(t,e)}catch(t){throw(0,kt.improveErrorMessage)(t,\"sum\",e)}})),void 0===t&&(t=i(0,n.number)),\"string\"==typeof t&&(t=i(t,n.number)),t}}));t.createSum=r})),qc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMean=void 0;var n=[\"typed\",\"add\",\"divide\"],r=(0,h.factory)(\"mean\",n,(function(e){var t=e.typed,n=e.add,r=e.divide;return t(\"mean\",{\"Array | Matrix\":i,\"Array | Matrix, number | BigNumber\":function(e,t){try{var i=(0,P.reduce)(e,t,n),a=Array.isArray(e)?(0,m.arraySize)(e):e.size();return r(i,a[t])}catch(e){throw(0,kt.improveErrorMessage)(e,\"mean\")}},\"...\":function(e){if((0,P.containsCollections)(e))throw new TypeError(\"Scalar values expected in function mean\");return i(e)}});function i(e){var t,i=0;if((0,P.deepForEach)(e,(function(e){try{t=void 0===t?e:n(t,e),i++}catch(t){throw(0,kt.improveErrorMessage)(t,\"mean\",e)}})),0===i)throw new Error(\"Cannot calculate the mean of an empty array\");return r(t,i)}}));t.createMean=r})),Fc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMedian=void 0;var n=[\"typed\",\"add\",\"divide\",\"compare\",\"partitionSelect\"],r=(0,h.factory)(\"median\",n,(function(e){var t=e.typed,n=e.add,r=e.divide,i=e.compare,a=e.partitionSelect;function o(e){try{var t=(e=(0,m.flatten)(e.valueOf())).length;if(0===t)throw new Error(\"Cannot calculate median of an empty array\");if(t%2==0){for(var n=t/2-1,r=a(e,n+1),o=e[n],u=0;u<n;++u)i(e[u],o)>0&&(o=e[u]);return c(o,r)}var l=a(e,(t-1)/2);return s(l)}catch(e){throw(0,kt.improveErrorMessage)(e,\"median\")}}var s=t({\"number | BigNumber | Complex | Unit\":function(e){return e}}),c=t({\"number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit\":function(e,t){return r(n(e,t),2)}});return t(\"median\",{\"Array | Matrix\":o,\"Array | Matrix, number | BigNumber\":function(e,t){throw new Error(\"median(A, dim) is not yet supported\")},\"...\":function(e){if((0,P.containsCollections)(e))throw new TypeError(\"Scalar values expected in function median\");return o(e)}})}));t.createMedian=r})),Uc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMad=void 0;var n=[\"typed\",\"abs\",\"map\",\"median\",\"subtract\"],r=(0,h.factory)(\"mad\",n,(function(e){var t=e.typed,n=e.abs,r=e.map,i=e.median,a=e.subtract;return t(\"mad\",{\"Array | Matrix\":o,\"...\":function(e){return o(e)}});function o(e){if(0===(e=(0,m.flatten)(e.valueOf())).length)throw new Error(\"Cannot calculate median absolute deviation (mad) of an empty array\");try{var t=i(e);return i(r(e,(function(e){return n(a(e,t))})))}catch(e){throw e instanceof TypeError&&-1!==e.message.indexOf(\"median\")?new TypeError(e.message.replace(\"median\",\"mad\")):(0,kt.improveErrorMessage)(e,\"mad\")}}}));t.createMad=r})),Lc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createVariance=void 0;var n=[\"typed\",\"add\",\"subtract\",\"multiply\",\"divide\",\"apply\",\"isNaN\"],r=(0,h.factory)(\"variance\",n,(function(e){var t=e.typed,n=e.add,r=e.subtract,a=e.multiply,o=e.divide,s=e.apply,c=e.isNaN;return t(\"variance\",{\"Array | Matrix\":function(e){return u(e,\"unbiased\")},\"Array | Matrix, string\":u,\"Array | Matrix, number | BigNumber\":function(e,t){return l(e,t,\"unbiased\")},\"Array | Matrix, number | BigNumber, string\":l,\"...\":function(e){return u(e,\"unbiased\")}});function u(e,t){var s,u=0;if(0===e.length)throw new SyntaxError(\"Function variance requires one or more parameters (0 provided)\");if((0,P.deepForEach)(e,(function(e){try{s=void 0===s?e:n(s,e),u++}catch(t){throw(0,kt.improveErrorMessage)(t,\"variance\",e)}})),0===u)throw new Error(\"Cannot calculate variance of an empty array\");var l=o(s,u);if(s=void 0,(0,P.deepForEach)(e,(function(e){var t=r(e,l);s=void 0===s?a(t,t):n(s,a(t,t))})),c(s))return s;switch(t){case\"uncorrected\":return o(s,u);case\"biased\":return o(s,u+1);case\"unbiased\":var d=(0,i.isBigNumber)(s)?s.mul(0):0;return 1===u?d:o(s,u-1);default:throw new Error('Unknown normalization \"'+t+'\". Choose \"unbiased\" (default), \"uncorrected\", or \"biased\".')}}function l(e,t,n){try{if(0===e.length)throw new SyntaxError(\"Function variance requires one or more parameters (0 provided)\");return s(e,t,(function(e){return u(e,n)}))}catch(e){throw(0,kt.improveErrorMessage)(e,\"variance\")}}}));t.createVariance=r})),Hc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createQuantileSeq=void 0;var n=[\"typed\",\"add\",\"multiply\",\"partitionSelect\",\"compare\"],r=(0,h.factory)(\"quantileSeq\",n,(function(e){var t=e.typed,n=e.add,r=e.multiply,a=e.partitionSelect,o=e.compare;function s(e,t,s){var u=(0,m.flatten)(e),l=u.length;if(0===l)throw new Error(\"Cannot calculate quantile of an empty sequence\");if((0,i.isNumber)(t)){var d=t*(l-1),f=d%1;if(0===f){var p=s?u[d]:a(u,d);return c(p),p}var h,y,v=Math.floor(d);if(s)h=u[v],y=u[v+1];else{y=a(u,v+1),h=u[v];for(var g=0;g<v;++g)o(u[g],h)>0&&(h=u[g])}return c(h),c(y),n(r(h,1-f),r(y,f))}var b=t.times(l-1);if(b.isInteger()){b=b.toNumber();var x=s?u[b]:a(u,b);return c(x),x}var D,_,w=b.floor(),N=b.minus(w),M=w.toNumber();if(s)D=u[M],_=u[M+1];else{_=a(u,M+1),D=u[M];for(var O=0;O<M;++O)o(u[O],D)>0&&(D=u[O])}c(D),c(_);var S=new N.constructor(1);return n(r(D,S.minus(N)),r(_,N))}var c=t({\"number | BigNumber | Unit\":function(e){return e}});return function(e,t,n){var r,a,o;if(arguments.length<2||arguments.length>3)throw new SyntaxError(\"Function quantileSeq requires two or three parameters\");if((0,i.isCollection)(e)){if(\"boolean\"==typeof(n=n||!1)){if(a=e.valueOf(),(0,i.isNumber)(t)){if(t<0)throw new Error(\"N/prob must be non-negative\");if(t<=1)return s(a,t,n);if(t>1){if(!(0,u.isInteger)(t))throw new Error(\"N must be a positive integer\");var c=t+1;r=new Array(t);for(var l=0;l<t;)r[l]=s(a,++l/c,n);return r}}if((0,i.isBigNumber)(t)){var d=t.constructor;if(t.isNegative())throw new Error(\"N/prob must be non-negative\");if(o=new d(1),t.lte(o))return new d(s(a,t,n));if(t.gt(o)){if(!t.isInteger())throw new Error(\"N must be a positive integer\");var f=t.toNumber();if(f>4294967295)throw new Error(\"N must be less than or equal to 2^32-1, as that is the maximum length of an Array\");var p=new d(f+1);r=new Array(f);for(var m=0;m<f;)r[m]=new d(s(a,new d(++m).div(p),n));return r}}if(Array.isArray(t)){r=new Array(t.length);for(var h=0;h<r.length;++h){var y=t[h];if((0,i.isNumber)(y)){if(y<0||y>1)throw new Error(\"Probability must be between 0 and 1, inclusive\")}else{if(!(0,i.isBigNumber)(y))throw new TypeError(\"Unexpected type of argument in function quantileSeq\");if(o=new y.constructor(1),y.isNegative()||y.gt(o))throw new Error(\"Probability must be between 0 and 1, inclusive\")}r[h]=s(a,y,n)}return r}throw new TypeError(\"Unexpected type of argument in function quantileSeq\")}throw new TypeError(\"Unexpected type of argument in function quantileSeq\")}throw new TypeError(\"Unexpected type of argument in function quantileSeq\")}}));t.createQuantileSeq=r})),Zc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createStd=void 0;var n=[\"typed\",\"sqrt\",\"variance\"],r=(0,h.factory)(\"std\",n,(function(e){var t=e.typed,n=e.sqrt,r=e.variance;return t(\"std\",{\"Array | Matrix\":i,\"Array | Matrix, string\":i,\"Array | Matrix, number | BigNumber\":i,\"Array | Matrix, number | BigNumber, string\":i,\"...\":function(e){return i(e)}});function i(e,t){if(0===e.length)throw new SyntaxError(\"Function std requires one or more parameters (0 provided)\");try{return n(r.apply(null,arguments))}catch(e){throw e instanceof TypeError&&-1!==e.message.indexOf(\" variance\")?new TypeError(e.message.replace(\" variance\",\" std\")):e}}}));t.createStd=r})),Vc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCombinations=void 0;var n=[\"typed\"],r=(0,h.factory)(\"combinations\",n,(function(e){return(0,e.typed)(\"combinations\",{\"number, number\":T.combinationsNumber,\"BigNumber, BigNumber\":function(e,t){var n,r,a=e.constructor,o=e.minus(t),s=new a(1);if(!i(e)||!i(t))throw new TypeError(\"Positive integer value expected in function combinations\");if(t.gt(e))throw new TypeError(\"k must be less than n in function combinations\");if(n=s,t.lt(o))for(r=s;r.lte(o);r=r.plus(s))n=n.times(t.plus(r)).dividedBy(r);else for(r=s;r.lte(t);r=r.plus(s))n=n.times(o.plus(r)).dividedBy(r);return n}})}));function i(e){return e.isInteger()&&e.gte(0)}t.createCombinations=r})),Wc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCombinationsWithRep=void 0;var n=\"combinationsWithRep\",r=[\"typed\"],i=(0,h.factory)(n,r,(function(e){return(0,e.typed)(n,{\"number, number\":function(e,t){if(!(0,u.isInteger)(e)||e<0)throw new TypeError(\"Positive integer value expected in function combinationsWithRep\");if(!(0,u.isInteger)(t)||t<0)throw new TypeError(\"Positive integer value expected in function combinationsWithRep\");if(e<1)throw new TypeError(\"k must be less than or equal to n + k - 1\");return t<e-1?(0,C.product)(e,e+t-1)/(0,C.product)(1,t):(0,C.product)(t+1,e+t-1)/(0,C.product)(1,e-1)},\"BigNumber, BigNumber\":function(e,t){var n,r,i=new(0,e.constructor)(1),o=e.minus(i);if(!a(e)||!a(t))throw new TypeError(\"Positive integer value expected in function combinationsWithRep\");if(e.lt(i))throw new TypeError(\"k must be less than or equal to n + k - 1 in function combinationsWithRep\");if(n=i,t.lt(o))for(r=i;r.lte(o);r=r.plus(i))n=n.times(t.plus(r)).dividedBy(r);else for(r=i;r.lte(t);r=r.plus(i))n=n.times(o.plus(r)).dividedBy(r);return n}})}));function a(e){return e.isInteger()&&e.gte(0)}t.createCombinationsWithRep=i})),Gc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createGamma=void 0;var n=[\"typed\",\"config\",\"multiplyScalar\",\"pow\",\"BigNumber\",\"Complex\"],r=(0,h.factory)(\"gamma\",n,(function(e){var t=e.typed,n=e.config,r=e.multiplyScalar,i=e.pow,a=e.BigNumber,o=e.Complex;return t(\"gamma\",{number:F.gammaNumber,Complex:function(e){if(0===e.im)return this(e.re);e=new o(e.re-1,e.im);for(var t=new o(F.gammaP[0],0),n=1;n<F.gammaP.length;++n){var a=e.re+n,s=a*a+e.im*e.im;0!==s?(t.re+=F.gammaP[n]*a/s,t.im+=-F.gammaP[n]*e.im/s):t.re=F.gammaP[n]<0?-1/0:1/0}var c=new o(e.re+F.gammaG+.5,e.im),u=Math.sqrt(2*Math.PI);e.re+=.5;var l=i(c,e);0===l.im?l.re*=u:(0===l.re||(l.re*=u),l.im*=u);var d=Math.exp(-c.re);return c.re=d*Math.cos(-c.im),c.im=d*Math.sin(-c.im),r(r(l,c),t)},BigNumber:function(e){if(e.isInteger())return e.isNegative()||e.isZero()?new a(1/0):function e(t){if(t<8)return new a([1,1,2,6,24,120,720,5040][t]);var r=n.precision+(0|Math.log(t.toNumber())),i=a.clone({precision:r});if(t%2==1)return t.times(e(new a(t-1)));var o=t,s=new i(t),c=t.toNumber();for(;o>2;)c+=o-=2,s=s.times(c);return new a(s.toPrecision(a.precision))}(e.minus(1));if(!e.isFinite())return new a(e.isNegative()?NaN:1/0);throw new Error(\"Integer BigNumber expected\")},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createGamma=r})),$c=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFactorial=void 0;var n=[\"typed\",\"gamma\"],r=(0,h.factory)(\"factorial\",n,(function(e){var t=e.typed,n=e.gamma;return t(\"factorial\",{number:function(e){if(e<0)throw new Error(\"Value must be non-negative\");return n(e+1)},BigNumber:function(e){if(e.isNegative())throw new Error(\"Value must be non-negative\");return n(e.plus(1))},\"Array | Matrix\":function(e){return(0,P.deepMap)(e,this)}})}));t.createFactorial=r})),Qc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createKldivergence=void 0;var n=[\"typed\",\"matrix\",\"divide\",\"sum\",\"multiply\",\"dotDivide\",\"log\",\"isNumeric\"],r=(0,h.factory)(\"kldivergence\",n,(function(e){var t=e.typed,n=e.matrix,r=e.divide,i=e.sum,a=e.multiply,o=e.dotDivide,s=e.log,c=e.isNumeric;return t(\"kldivergence\",{\"Array, Array\":function(e,t){return u(n(e),n(t))},\"Matrix, Array\":function(e,t){return u(e,n(t))},\"Array, Matrix\":function(e,t){return u(n(e),t)},\"Matrix, Matrix\":function(e,t){return u(e,t)}});function u(e,t){var n=t.size().length,u=e.size().length;if(n>1)throw new Error(\"first object must be one dimensional\");if(u>1)throw new Error(\"second object must be one dimensional\");if(n!==u)throw new Error(\"Length of two vectors must be equal\");if(0===i(e))throw new Error(\"Sum of elements in first object must be non zero\");if(0===i(t))throw new Error(\"Sum of elements in second object must be non zero\");var l=r(e,i(e)),d=r(t,i(t)),f=i(a(l,s(o(l,d))));return c(f)?f:Number.NaN}}));t.createKldivergence=r})),Xc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMultinomial=void 0;var n=[\"typed\",\"add\",\"divide\",\"multiply\",\"factorial\",\"isInteger\",\"isPositive\"],r=(0,h.factory)(\"multinomial\",n,(function(e){var t=e.typed,n=e.add,r=e.divide,i=e.multiply,a=e.factorial,o=e.isInteger,s=e.isPositive;return t(\"multinomial\",{\"Array | Matrix\":function(e){var t=0,c=1;return(0,P.deepForEach)(e,(function(e){if(!o(e)||!s(e))throw new TypeError(\"Positive integer value expected in function multinomial\");t=n(t,e),c=i(c,a(e))})),r(a(t),c)}})}));t.createMultinomial=r})),Yc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPermutations=void 0;var n=[\"typed\",\"factorial\"],r=(0,h.factory)(\"permutations\",n,(function(e){return(0,e.typed)(\"permutations\",{\"number | BigNumber\":e.factorial,\"number, number\":function(e,t){if(!(0,u.isInteger)(e)||e<0)throw new TypeError(\"Positive integer value expected in function permutations\");if(!(0,u.isInteger)(t)||t<0)throw new TypeError(\"Positive integer value expected in function permutations\");if(t>e)throw new TypeError(\"second argument k must be less than or equal to first argument n\");return(0,C.product)(e-t+1,e)},\"BigNumber, BigNumber\":function(e,t){var n,r;if(!i(e)||!i(t))throw new TypeError(\"Positive integer value expected in function permutations\");if(t.gt(e))throw new TypeError(\"second argument k must be less than or equal to first argument n\");for(n=e.mul(0).add(1),r=e.minus(t).plus(1);r.lte(e);r=r.plus(1))n=n.times(r);return n}})}));function i(e){return e.isInteger()&&e.gte(0)}t.createPermutations=r})),Jc=t((function(t){var n=[],r=void 0===e?window:e,i=Math.pow(256,6),a=Math.pow(2,52),o=2*a,s=Math.random;function c(e){var t,n=e.length,r=this,i=0,a=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);i<256;)o[i]=i++;for(i=0;i<256;i++)o[i]=o[a=255&a+e[i%n]+(t=o[i])],o[a]=t;(r.g=function(e){for(var t,n=0,i=r.i,a=r.j,o=r.S;e--;)t=o[i=255&i+1],n=256*n+o[255&(o[i]=o[a=255&a+t])+(o[a]=t)];return r.i=i,r.j=a,n})(256)}function u(e,t){var n,r=[],i=(typeof e)[0];if(t&&\"o\"==i)for(n in e)try{r.push(u(e[n],t-1))}catch(e){}return r.length?r:\"s\"==i?e:e+\"\\0\"}function l(e,t){for(var n,r=e+\"\",i=0;i<r.length;)t[255&i]=255&(n^=19*t[255&i])+r.charCodeAt(i++);return f(t)}function d(e){try{return r.crypto.getRandomValues(e=new Uint8Array(256)),f(e)}catch(e){return[+new Date,r,r.navigator&&r.navigator.plugins,r.screen,f(n)]}}function f(e){return String.fromCharCode.apply(0,e)}t.exports=function(e,r){if(r&&!0===r.global)return r.global=!1,Math.random=t.exports(e,r),r.global=!0,Math.random;var s=r&&r.entropy||!1,p=[],m=(l(u(s?[e,f(n)]:0 in arguments?e:d(),3),p),new c(p));return l(f(m.S),n),function(){for(var e=m.g(6),t=i,n=0;e<a;)e=256*(e+n),t*=256,n=m.g(1);for(;e>=o;)e/=2,t/=2,n>>>=1;return(e+n)/t}},t.exports.resetGlobal=function(){Math.random=s},l(Math.random(),n)})),Kc=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRng=function(e){var t;function n(e){t=null===e?i:(0,r.default)(String(e))}function a(){return t()}return n(e),a};var n,r=(n=Jc)&&n.__esModule?n:{default:n};var i=(0,r.default)()})),eu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPickRandom=void 0;var n=[\"typed\",\"config\",\"?on\"],r=(0,h.factory)(\"pickRandom\",n,(function(e){var t=e.typed,n=e.config,r=e.on,a=(0,Kc.createRng)(n.randomSeed);return r&&r(\"config\",(function(e,t){e.randomSeed!==t.randomSeed&&(a=(0,Kc.createRng)(e.randomSeed))})),t({\"Array | Matrix\":function(e){return o(e)},\"Array | Matrix, number\":function(e,t){return o(e,t,void 0)},\"Array | Matrix, Array\":function(e,t){return o(e,void 0,t)},\"Array | Matrix, Array | Matrix, number\":function(e,t,n){return o(e,n,t)},\"Array | Matrix, number, Array | Matrix\":function(e,t,n){return o(e,t,n)}});function o(e,t,n){var r=void 0===t;r&&(t=1),e=(0,m.flatten)(e.valueOf()).valueOf(),n&&(n=n.valueOf());var o=0;if(void 0!==n){if(n.length!==e.length)throw new Error(\"Weights must have the same length as possibles\");for(var s=0,c=n.length;s<c;s++){if(!(0,i.isNumber)(n[s])||n[s]<0)throw new Error(\"Weights must be an array of positive numbers\");o+=n[s]}}var u=e.length;if(0===u)return[];if(t>=u)return t>1?e:e[0];for(var l,d=[];d.length<t;){if(void 0===n)l=e[Math.floor(a()*u)];else for(var f=a()*o,p=0,h=e.length;p<h;p++)if((f-=n[p])<0){l=e[p];break}-1===d.indexOf(l)&&d.push(l)}return r?d[0]:d}}));t.createPickRandom=r})),tu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomMatrix=function e(t,n){var r=[];if((t=t.slice(0)).length>1)for(var i=0,a=t.shift();i<a;i++)r.push(e(t,n));else for(var o=0,s=t.shift();o<s;o++)r.push(n());return r}})),nu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRandomNumber=t.createRandom=void 0;var n=\"random\",r=[\"typed\",\"config\",\"?on\"],a=(0,h.factory)(n,r,(function(e){var t=e.typed,r=e.config,a=e.on,o=(0,Kc.createRng)(r.randomSeed);return a&&a(\"config\",(function(e,t){e.randomSeed!==t.randomSeed&&(o=(0,Kc.createRng)(e.randomSeed))})),t(n,{\"\":function(){return c(0,1)},number:function(e){return c(0,e)},\"number, number\":function(e,t){return c(e,t)},\"Array | Matrix\":function(e){return s(e,0,1)},\"Array | Matrix, number\":function(e,t){return s(e,0,t)},\"Array | Matrix, number, number\":function(e,t,n){return s(e,t,n)}});function s(e,t,n){var r=(0,tu.randomMatrix)(e.valueOf(),(function(){return c(t,n)}));return(0,i.isMatrix)(e)?e.create(r):r}function c(e,t){return e+o()*(t-e)}}));t.createRandom=a;var o=(0,h.factory)(n,[\"typed\",\"config\",\"?on\"],(function(e){var t=e.typed,r=e.config,i=e.on,a=(e.matrix,(0,Kc.createRng)(r.randomSeed));return i&&i(\"config\",(function(e,t){e.randomSeed!==t.randomSeed&&(a=(0,Kc.createRng)(e.randomSeed))})),t(n,{\"\":function(){return o(0,1)},number:function(e){return o(0,e)},\"number, number\":function(e,t){return o(e,t)}});function o(e,t){return e+a()*(t-e)}}));t.createRandomNumber=o})),ru=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRandomInt=void 0;var n=[\"typed\",\"config\",\"?on\"],r=(0,h.factory)(\"randomInt\",n,(function(e){var t=e.typed,n=e.config,r=e.on,a=(0,Kc.createRng)(n.randomSeed);return r&&r(\"config\",(function(e,t){e.randomSeed!==t.randomSeed&&(a=(0,Kc.createRng)(e.randomSeed))})),t(\"randomInt\",{\"\":function(){return s(0,1)},number:function(e){return s(0,e)},\"number, number\":function(e,t){return s(e,t)},\"Array | Matrix\":function(e){return o(e,0,1)},\"Array | Matrix, number\":function(e,t){return o(e,0,t)},\"Array | Matrix, number, number\":function(e,t,n){return o(e,t,n)}});function o(e,t,n){var r=(0,tu.randomMatrix)(e.valueOf(),(function(){return s(t,n)}));return(0,i.isMatrix)(e)?e.create(r):r}function s(e,t){return Math.floor(e+a()*(t-e))}}));t.createRandomInt=r})),iu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createStirlingS2=void 0;var n=[\"typed\",\"addScalar\",\"subtract\",\"multiplyScalar\",\"divideScalar\",\"pow\",\"factorial\",\"combinations\",\"isNegative\",\"isInteger\",\"larger\"],r=(0,h.factory)(\"stirlingS2\",n,(function(e){var t=e.typed,n=e.addScalar,r=e.subtract,i=e.multiplyScalar,a=e.divideScalar,o=e.pow,s=e.factorial,c=e.combinations,u=e.isNegative,l=e.isInteger,d=e.larger;return t(\"stirlingS2\",{\"number | BigNumber, number | BigNumber\":function(e,t){if(!l(e)||u(e)||!l(t)||u(t))throw new TypeError(\"Non-negative integer value expected in function stirlingS2\");if(d(t,e))throw new TypeError(\"k must be less than or equal to n in function stirlingS2\");for(var f=s(t),p=0,m=0;m<=t;m++){var h=o(-1,r(t,m)),y=c(t,m),v=o(m,e);p=n(p,i(i(y,v),h))}return a(p,f)}})}));t.createStirlingS2=r})),au=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createBellNumbers=void 0;var n=[\"typed\",\"addScalar\",\"isNegative\",\"isInteger\",\"stirlingS2\"],r=(0,h.factory)(\"bellNumbers\",n,(function(e){var t=e.typed,n=e.addScalar,r=e.isNegative,i=e.isInteger,a=e.stirlingS2;return t(\"bellNumbers\",{\"number | BigNumber\":function(e){if(!i(e)||r(e))throw new TypeError(\"Non-negative integer value expected in function bellNumbers\");for(var t=0,o=0;o<=e;o++)t=n(t,a(e,o));return t}})}));t.createBellNumbers=r})),ou=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createCatalan=void 0;var n=[\"typed\",\"addScalar\",\"divideScalar\",\"multiplyScalar\",\"combinations\",\"isNegative\",\"isInteger\"],r=(0,h.factory)(\"catalan\",n,(function(e){var t=e.typed,n=e.addScalar,r=e.divideScalar,i=e.multiplyScalar,a=e.combinations,o=e.isNegative,s=e.isInteger;return t(\"catalan\",{\"number | BigNumber\":function(e){if(!s(e)||o(e))throw new TypeError(\"Non-negative integer value expected in function catalan\");return r(a(i(e,2),e),n(e,1))}})}));t.createCatalan=r})),su=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createComposition=void 0;var n=[\"typed\",\"addScalar\",\"combinations\",\"isNegative\",\"isPositive\",\"isInteger\",\"larger\"],r=(0,h.factory)(\"composition\",n,(function(e){var t=e.typed,n=e.addScalar,r=e.combinations,i=e.isPositive,a=(e.isNegative,e.isInteger),o=e.larger;return t(\"composition\",{\"number | BigNumber, number | BigNumber\":function(e,t){if(!(a(e)&&i(e)&&a(t)&&i(t)))throw new TypeError(\"Positive integer value expected in function composition\");if(o(t,e))throw new TypeError(\"k must be less than or equal to n in function composition\");return r(n(e,-1),n(t,-1))}})}));t.createComposition=r})),cu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUtil=void 0;var n=[\"FunctionNode\",\"OperatorNode\",\"SymbolNode\"],r=(0,h.factory)(\"simplifyUtil\",n,(function(e){var t=e.FunctionNode,n=e.OperatorNode,r=e.SymbolNode,o={add:!0,multiply:!0},s={add:!0,multiply:!0};function c(e,t){if(!(0,i.isOperatorNode)(e))return!1;var n=e.fn.toString();return t&&(0,a.hasOwnProperty)(t,n)&&(0,a.hasOwnProperty)(t[n],\"associative\")?t[n].associative:s[n]||!1}function u(e){var t,n=[];return c(e)?(t=e.op,function e(r){for(var a=0;a<r.args.length;a++){var o=r.args[a];(0,i.isOperatorNode)(o)&&t===o.op?e(o):n.push(o)}}(e),n):e.args}function l(e){return(0,i.isOperatorNode)(e)?function(t){try{return new n(e.op,e.fn,t,e.implicit)}catch(e){return console.error(e),[]}}:function(n){return new t(new r(e.name),n)}}return{createMakeNodeFunction:l,isCommutative:function(e,t){if(!(0,i.isOperatorNode)(e))return!0;var n=e.fn.toString();return t&&(0,a.hasOwnProperty)(t,n)&&(0,a.hasOwnProperty)(t[n],\"commutative\")?t[n].commutative:o[n]||!1},isAssociative:c,flatten:function e(t){if(!t.args||0===t.args.length)return t;t.args=u(t);for(var n=0;n<t.args.length;n++)e(t.args[n])},allChildren:u,unflattenr:function e(t){if(t.args&&0!==t.args.length){for(var n=l(t),r=t.args.length,i=0;i<r;i++)e(t.args[i]);if(r>2&&c(t)){for(var a=t.args.pop();t.args.length>0;)a=n([t.args.pop(),a]);t.args=a.args}}},unflattenl:function e(t){if(t.args&&0!==t.args.length){for(var n=l(t),r=t.args.length,i=0;i<r;i++)e(t.args[i]);if(r>2&&c(t)){for(var a=t.args.shift();t.args.length>0;)a=n([a,t.args.shift()]);t.args=a.args}}}}}));t.createUtil=r})),uu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSimplifyCore=void 0;var n=[\"equal\",\"isZero\",\"add\",\"subtract\",\"multiply\",\"divide\",\"pow\",\"ConstantNode\",\"OperatorNode\",\"FunctionNode\",\"ParenthesisNode\"],r=(0,h.factory)(\"simplifyCore\",n,(function(e){var t=e.equal,n=e.isZero,r=e.add,a=e.subtract,o=e.multiply,s=e.divide,c=e.pow,u=e.ConstantNode,l=e.OperatorNode,d=e.FunctionNode,f=e.ParenthesisNode,p=new u(0),m=new u(1);return function e(h){if((0,i.isOperatorNode)(h)&&h.isUnary()){var y=e(h.args[0]);if(\"+\"===h.op)return y;if(\"-\"===h.op){if((0,i.isOperatorNode)(y)){if(y.isUnary()&&\"-\"===y.op)return y.args[0];if(y.isBinary()&&\"subtract\"===y.fn)return new l(\"-\",\"subtract\",[y.args[1],y.args[0]])}return new l(h.op,h.fn,[y])}}else if((0,i.isOperatorNode)(h)&&h.isBinary()){var v=e(h.args[0]),g=e(h.args[1]);if(\"+\"===h.op){if((0,i.isConstantNode)(v)){if(n(v.value))return g;if((0,i.isConstantNode)(g))return new u(r(v.value,g.value))}return(0,i.isConstantNode)(g)&&n(g.value)?v:(0,i.isOperatorNode)(g)&&g.isUnary()&&\"-\"===g.op?new l(\"-\",\"subtract\",[v,g.args[0]]):new l(h.op,h.fn,g?[v,g]:[v])}if(\"-\"===h.op){if((0,i.isConstantNode)(v)&&g){if((0,i.isConstantNode)(g))return new u(a(v.value,g.value));if(n(v.value))return new l(\"-\",\"unaryMinus\",[g])}if(\"subtract\"===h.fn)return(0,i.isConstantNode)(g)&&n(g.value)?v:(0,i.isOperatorNode)(g)&&g.isUnary()&&\"-\"===g.op?e(new l(\"+\",\"add\",[v,g.args[0]])):new l(h.op,h.fn,[v,g])}else{if(\"*\"===h.op){if((0,i.isConstantNode)(v)){if(n(v.value))return p;if(t(v.value,1))return g;if((0,i.isConstantNode)(g))return new u(o(v.value,g.value))}if((0,i.isConstantNode)(g)){if(n(g.value))return p;if(t(g.value,1))return v;if((0,i.isOperatorNode)(v)&&v.isBinary()&&v.op===h.op){var b=v.args[0];if((0,i.isConstantNode)(b)){var x=new u(o(b.value,g.value));return new l(h.op,h.fn,[x,v.args[1]],h.implicit)}}return new l(h.op,h.fn,[g,v],h.implicit)}return new l(h.op,h.fn,[v,g],h.implicit)}if(\"/\"===h.op){if((0,i.isConstantNode)(v)){if(n(v.value))return p;if((0,i.isConstantNode)(g)&&(t(g.value,1)||t(g.value,2)||t(g.value,4)))return new u(s(v.value,g.value))}return new l(h.op,h.fn,[v,g])}if(\"^\"===h.op){if((0,i.isConstantNode)(g)){if(n(g.value))return m;if(t(g.value,1))return v;if((0,i.isConstantNode)(v))return new u(c(v.value,g.value));if((0,i.isOperatorNode)(v)&&v.isBinary()&&\"^\"===v.op){var D=v.args[1];if((0,i.isConstantNode)(D))return new l(h.op,h.fn,[v.args[0],new u(o(D.value,g.value))])}}return new l(h.op,h.fn,[v,g])}}}else{if((0,i.isParenthesisNode)(h)){var _=e(h.content);return(0,i.isParenthesisNode)(_)||(0,i.isSymbolNode)(_)||(0,i.isConstantNode)(_)?_:new f(_)}if((0,i.isFunctionNode)(h)){var w=h.args.map(e).map((function(e){return(0,i.isParenthesisNode)(e)?e.content:e}));return new d(e(h.fn),w)}}return h}}));t.createSimplifyCore=r})),lu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSimplifyConstant=void 0;var n=[\"typed\",\"config\",\"mathWithTransform\",\"?fraction\",\"?bignumber\",\"ConstantNode\",\"OperatorNode\",\"FunctionNode\",\"SymbolNode\"],r=(0,h.factory)(\"simplifyConstant\",n,(function(e){var t=e.typed,n=e.config,r=e.mathWithTransform,a=e.fraction,o=e.bignumber,s=e.ConstantNode,c=e.OperatorNode,u=e.FunctionNode,l=e.SymbolNode,d=(0,cu.createUtil)({FunctionNode:u,OperatorNode:c,SymbolNode:l}),f=d.isCommutative,p=d.isAssociative,m=d.allChildren,h=d.createMakeNodeFunction;function y(e,t,n){try{return b(r[e].apply(null,t),n)}catch(a){return t=t.map((function(e){return(0,i.isFraction)(e)?e.valueOf():e})),b(r[e].apply(null,t),n)}}var v=t({Fraction:function(e){var t,n=e.s*e.n;t=n<0?new c(\"-\",\"unaryMinus\",[new s(-n)]):new s(n);if(1===e.d)return t;return new c(\"/\",\"divide\",[t,new s(e.d)])},number:function(e){return e<0?x(new s(-e)):new s(e)},BigNumber:function(e){return e<0?x(new s(-e)):new s(e)},Complex:function(e){throw new Error(\"Cannot convert Complex number to Node\")}});function g(e,t){if(t&&!1!==t.exactFractions&&isFinite(e)&&a){var n=a(e);if(n.valueOf()===e)return n}return e}var b=t({\"string, Object\":function(e,t){return\"BigNumber\"===n.number?(void 0===o&&(0,vt.noBignumber)(),o(e)):\"Fraction\"===n.number?(void 0===a&&(0,vt.noFraction)(),a(e)):g(parseFloat(e),t)},\"Fraction, Object\":function(e,t){return e},\"BigNumber, Object\":function(e,t){return e},\"number, Object\":function(e,t){return g(e,t)},\"Complex, Object\":function(e,t){return 0!==e.im?e:g(e.re,t)}});function x(e){return new c(\"-\",\"unaryMinus\",[e])}function D(e,t,n,r){return t.reduce((function(t,a){if((0,i.isNode)(t)||(0,i.isNode)(a))(0,i.isNode)(t)?(0,i.isNode)(a)||(a=v(a)):t=v(t);else{try{return y(e,[t,a],r)}catch(e){}t=v(t),a=v(a)}return n([t,a])}))}return function(e,t){var n=function e(t,n){switch(t.type){case\"SymbolNode\":return t;case\"ConstantNode\":return\"number\"!=typeof t.value&&isNaN(t.value)?t:b(t.value,n);case\"FunctionNode\":if(r[t.name]&&r[t.name].rawArgs)return t;if(-1===[\"add\",\"multiply\"].indexOf(t.name)){var a=t.args.map((function(t){return e(t,n)}));if(!a.some(i.isNode))try{return y(t.name,a,n)}catch(e){}return a=a.map((function(e){return(0,i.isNode)(e)?e:v(e)})),new u(t.name,a)}case\"OperatorNode\":var o,s,c=t.fn.toString(),l=h(t);if((0,i.isOperatorNode)(t)&&t.isUnary())o=[e(t.args[0],n)],s=(0,i.isNode)(o[0])?l(o):y(c,o,n);else if(p(t))if(o=(o=m(t)).map((function(t){return e(t,n)})),f(c)){for(var d=[],g=[],x=0;x<o.length;x++)(0,i.isNode)(o[x])?g.push(o[x]):d.push(o[x]);d.length>1?(s=D(c,d,l,n),g.unshift(s),s=D(c,g,l,n)):s=D(c,o,l,n)}else s=D(c,o,l,n);else o=t.args.map((function(t){return e(t,n)})),s=D(c,o,l,n);return s;case\"ParenthesisNode\":return e(t.content,n);case\"AccessorNode\":case\"ArrayNode\":case\"AssignmentNode\":case\"BlockNode\":case\"FunctionAssignmentNode\":case\"IndexNode\":case\"ObjectNode\":case\"RangeNode\":case\"ConditionalNode\":default:throw new Error(\"Unimplemented node type in simplifyConstant: \".concat(t.type))}}(e,t);return(0,i.isNode)(n)?n:v(n)}}));t.createSimplifyConstant=r})),du=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createResolve=void 0;var n=[\"parse\",\"FunctionNode\",\"OperatorNode\",\"ParenthesisNode\"],r=(0,h.factory)(\"resolve\",n,(function(e){var t=e.parse,n=e.FunctionNode,r=e.OperatorNode,a=e.ParenthesisNode;return function e(o,s){if(!s)return o;if((0,i.isSymbolNode)(o)){var c=s[o.name];if((0,i.isNode)(c))return e(c,s);if(\"number\"==typeof c)return t(String(c))}else{if((0,i.isOperatorNode)(o)){var u=o.args.map((function(t){return e(t,s)}));return new r(o.op,o.fn,u,o.implicit)}if((0,i.isParenthesisNode)(o))return new a(e(o.content,s));if((0,i.isFunctionNode)(o)){var l=o.args.map((function(t){return e(t,s)}));return new n(o.name,l)}}return o}}));t.createResolve=r})),fu=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSimplify=void 0;var r=[\"config\",\"typed\",\"parse\",\"add\",\"subtract\",\"multiply\",\"divide\",\"pow\",\"isZero\",\"equal\",\"?fraction\",\"?bignumber\",\"mathWithTransform\",\"ConstantNode\",\"FunctionNode\",\"OperatorNode\",\"ParenthesisNode\",\"SymbolNode\"],o=(0,h.factory)(\"simplify\",r,(function(e){var t=e.config,r=e.typed,o=e.parse,s=e.add,c=e.subtract,u=e.multiply,l=e.divide,d=e.pow,f=e.isZero,p=e.equal,m=e.fraction,h=e.bignumber,y=e.mathWithTransform,v=e.ConstantNode,g=e.FunctionNode,b=e.OperatorNode,x=e.ParenthesisNode,D=e.SymbolNode,_=(0,lu.createSimplifyConstant)({typed:r,config:t,mathWithTransform:y,fraction:m,bignumber:h,ConstantNode:v,OperatorNode:b,FunctionNode:g,SymbolNode:D}),w=(0,uu.createSimplifyCore)({equal:p,isZero:f,add:s,subtract:c,multiply:u,divide:l,pow:d,ConstantNode:v,OperatorNode:b,FunctionNode:g,ParenthesisNode:x}),N=(0,du.createResolve)({parse:o,FunctionNode:g,OperatorNode:b,ParenthesisNode:x}),M=(0,cu.createUtil)({FunctionNode:g,OperatorNode:b,SymbolNode:D}),O=M.isCommutative,S=M.isAssociative,P=M.flatten,j=M.unflattenr,A=M.unflattenl,E=M.createMakeNodeFunction,C=r(\"simplify\",{string:function(e){return this(o(e),this.rules,{},{})},\"string, Object\":function(e,t){return this(o(e),this.rules,t,{})},\"string, Object, Object\":function(e,t,n){return this(o(e),this.rules,t,n)},\"string, Array\":function(e,t){return this(o(e),t,{},{})},\"string, Array, Object\":function(e,t,n){return this(o(e),t,n,{})},\"string, Array, Object, Object\":function(e,t,n,r){return this(o(e),t,n,r)},\"Node, Object\":function(e,t){return this(e,this.rules,t,{})},\"Node, Object, Object\":function(e,t,n){return this(e,this.rules,t,n)},Node:function(e){return this(e,this.rules,{},{})},\"Node, Array\":function(e,t){return this(e,t,{},{})},\"Node, Array, Object\":function(e,t,n){return this(e,t,n,{})},\"Node, Array, Object, Object\":function(e,t,r,i){t=function(e){for(var t=[],r=0;r<e.length;r++){var i=e[r],a=void 0,s=n(i);switch(s){case\"string\":var c=i.split(\"->\");if(2!==c.length)throw SyntaxError(\"Could not parse rule: \"+i);i={l:c[0],r:c[1]};case\"object\":if(a={l:T(o(i.l)),r:T(o(i.r))},i.context&&(a.evaluate=i.context),i.evaluate&&(a.evaluate=o(i.evaluate)),S(a.l)){var u=E(a.l),l=new D(\"_p\"+I++);a.expanded={},a.expanded.l=u([a.l.clone(),l]),P(a.expanded.l),j(a.expanded.l),a.expanded.r=u([a.r,l])}break;case\"function\":a=i;break;default:throw TypeError(\"Unsupported type of rule: \"+s)}t.push(a)}return t}(t);for(var a=N(e,r),s={},c=(a=T(a)).toString({parenthesis:\"all\"});!s[c];){s[c]=!0,I=0;for(var u=0;u<t.length;u++)\"function\"==typeof t[u]?a=t[u](a,i):(P(a),a=B(a,t[u])),A(a);c=a.toString({parenthesis:\"all\"})}return a}});function T(e){return e.transform((function(e,t,n){return(0,i.isParenthesisNode)(e)?T(e.content):e}))}C.simplifyCore=w,C.resolve=N;var k={true:!0,false:!0,e:!0,i:!0,Infinity:!0,LN2:!0,LN10:!0,LOG2E:!0,LOG10E:!0,NaN:!0,phi:!0,pi:!0,SQRT1_2:!0,SQRT2:!0,tau:!0};C.rules=[w,{l:\"log(e)\",r:\"1\"},{l:\"n-n1\",r:\"n+-n1\"},{l:\"-(c*v)\",r:\"(-c) * v\"},{l:\"-v\",r:\"(-1) * v\"},{l:\"n/n1^n2\",r:\"n*n1^-n2\"},{l:\"n/n1\",r:\"n*n1^-1\"},{l:\"(n ^ n1) ^ n2\",r:\"n ^ (n1 * n2)\"},{l:\"n*n\",r:\"n^2\"},{l:\"n * n^n1\",r:\"n^(n1+1)\"},{l:\"n^n1 * n^n2\",r:\"n^(n1+n2)\"},{l:\"n+n\",r:\"2*n\"},{l:\"n+-n\",r:\"0\"},{l:\"n1*n2 + n2\",r:\"(n1+1)*n2\"},{l:\"n1*n3 + n2*n3\",r:\"(n1+n2)*n3\"},{l:\"n1 + -1 * (n2 + n3)\",r:\"n1 + -1 * n2 + -1 * n3\"},_,{l:\"(-n)*n1\",r:\"-(n*n1)\"},{l:\"c+v\",r:\"v+c\",context:{add:{commutative:!1}}},{l:\"v*c\",r:\"c*v\",context:{multiply:{commutative:!1}}},{l:\"n+-n1\",r:\"n-n1\"},{l:\"n*(n1^-1)\",r:\"n/n1\"},{l:\"n*n1^-n2\",r:\"n/n1^n2\"},{l:\"n1^-1\",r:\"1/n1\"},{l:\"n*(n1/n2)\",r:\"(n*n1)/n2\"},{l:\"n-(n1+n2)\",r:\"n-n1-n2\"},{l:\"1*n\",r:\"n\"},{l:\"n1/(n2/n3)\",r:\"(n1*n3)/n2\"}];var I=0;var B=r(\"applyRule\",{\"Node, Object\":function(e,t){var n=e;if(n instanceof b||n instanceof g){if(n.args)for(var r=0;r<n.args.length;r++)n.args[r]=B(n.args[r],t)}else n instanceof x&&n.content&&(n.content=B(n.content,t));var i=t.r,o=q(t.l,n)[0];if(!o&&t.expanded&&(i=t.expanded.r,o=q(t.expanded.l,n)[0]),o){var s=n.implicit;n=i.clone(),s&&\"implicit\"in i&&(n.implicit=!0),n=n.transform((function(e){return e.isSymbolNode&&(0,a.hasOwnProperty)(o.placeholders,e.name)?o.placeholders[e.name].clone():e}))}return n}});function z(e,t){var n={placeholders:{}};if(!e.placeholders&&!t.placeholders)return n;if(!e.placeholders)return t;if(!t.placeholders)return e;for(var r in e.placeholders)if((0,a.hasOwnProperty)(e.placeholders,r)&&(n.placeholders[r]=e.placeholders[r],(0,a.hasOwnProperty)(t.placeholders,r)&&!F(e.placeholders[r],t.placeholders[r])))return null;for(var i in t.placeholders)(0,a.hasOwnProperty)(t.placeholders,i)&&(n.placeholders[i]=t.placeholders[i]);return n}function R(e,t){var n,r=[];if(0===e.length||0===t.length)return r;for(var i=0;i<e.length;i++)for(var a=0;a<t.length;a++)(n=z(e[i],t[a]))&&r.push(n);return r}function q(e,t,n){var r=[{placeholders:{}}];if(e instanceof b&&t instanceof b||e instanceof g&&t instanceof g){if(e instanceof b){if(e.op!==t.op||e.fn!==t.fn)return[]}else if(e instanceof g&&e.name!==t.name)return[];if((1!==t.args.length||1!==e.args.length)&&S(t)&&!n){if(t.args.length>=2&&2===e.args.length){for(var a=function(e,t){var n,r,i=[],a=E(e);if(O(e,t))for(var o=0;o<e.args.length;o++)(r=e.args.slice(0)).splice(o,1),n=1===r.length?r[0]:a(r),i.push(a([e.args[o],n]));else n=1===(r=e.args.slice(1)).length?r[0]:a(r),i.push(a([e.args[0],n]));return i}(t,e.context),o=[],s=0;s<a.length;s++){var c=q(e,a[s],!0);o=o.concat(c)}return o}if(e.args.length>2)throw Error(\"Unexpected non-binary associative function: \"+e.toString());return[]}for(var u=[],l=0;l<e.args.length;l++){var d=q(e.args[l],t.args[l]);if(0===d.length)return[];u.push(d)}r=function(e){if(0===e.length)return e;for(var t=e.reduce(R),n=[],r={},i=0;i<t.length;i++){var a=JSON.stringify(t[i]);r[a]||(r[a]=!0,n.push(t[i]))}return n}(u)}else if(e instanceof D){if(0===e.name.length)throw new Error(\"Symbol in rule has 0 length...!?\");if(k[e.name]){if(e.name!==t.name)return[]}else if(\"n\"===e.name[0]||\"_p\"===e.name.substring(0,2))r[0].placeholders[e.name]=t;else if(\"v\"===e.name[0]){if((0,i.isConstantNode)(t))return[];r[0].placeholders[e.name]=t}else{if(\"c\"!==e.name[0])throw new Error(\"Invalid symbol in rule: \"+e.name);if(!(t instanceof v))return[];r[0].placeholders[e.name]=t}}else{if(!(e instanceof v))return[];if(!p(e.value,t.value))return[]}return r}function F(e,t){if(e instanceof v&&t instanceof v){if(!p(e.value,t.value))return!1}else if(e instanceof D&&t instanceof D){if(e.name!==t.name)return!1}else{if(!(e instanceof b&&t instanceof b||e instanceof g&&t instanceof g))return!1;if(e instanceof b){if(e.op!==t.op||e.fn!==t.fn)return!1}else if(e instanceof g&&e.name!==t.name)return!1;if(e.args.length!==t.args.length)return!1;for(var n=0;n<e.args.length;n++)if(!F(e.args[n],t.args[n]))return!1}return!0}return C}));t.createSimplify=o})),pu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDerivative=void 0;var n=[\"typed\",\"config\",\"parse\",\"simplify\",\"equal\",\"isZero\",\"numeric\",\"ConstantNode\",\"FunctionNode\",\"OperatorNode\",\"ParenthesisNode\",\"SymbolNode\"],r=(0,h.factory)(\"derivative\",n,(function(e){var t=e.typed,n=e.config,r=e.parse,a=e.simplify,o=e.equal,s=e.isZero,c=e.numeric,u=e.ConstantNode,l=e.FunctionNode,d=e.OperatorNode,f=e.ParenthesisNode,p=e.SymbolNode,m=t(\"derivative\",{\"Node, SymbolNode, Object\":function(e,t,n){var r={};y(r,e,t.name);var i=v(e,r);return n.simplify?a(i):i},\"Node, SymbolNode\":function(e,t){return this(e,t,{simplify:!0})},\"string, SymbolNode\":function(e,t){return this(r(e),t)},\"string, SymbolNode, Object\":function(e,t,n){return this(r(e),t,n)},\"string, string\":function(e,t){return this(r(e),r(t))},\"string, string, Object\":function(e,t,n){return this(r(e),r(t),n)},\"Node, string\":function(e,t){return this(e,r(t))},\"Node, string, Object\":function(e,t,n){return this(e,r(t),n)}});m._simplify=!0,m.toTex=function(e){return h.apply(null,e.args)};var h=t(\"_derivTex\",{\"Node, SymbolNode\":function(e,t){return(0,i.isConstantNode)(e)&&\"string\"===(0,i.typeOf)(e.value)?h(r(e.value).toString(),t.toString(),1):h(e.toString(),t.toString(),1)},\"Node, ConstantNode\":function(e,t){if(\"string\"===(0,i.typeOf)(t.value))return h(e,r(t.value));throw new Error(\"The second parameter to 'derivative' is a non-string constant\")},\"Node, SymbolNode, ConstantNode\":function(e,t,n){return h(e.toString(),t.name,n.value)},\"string, string, number\":function(e,t,n){return(1===n?\"{d\\\\over d\"+t+\"}\":\"{d^{\"+n+\"}\\\\over d\"+t+\"^{\"+n+\"}}\")+\"\\\\left[\".concat(e,\"\\\\right]\")}}),y=t(\"constTag\",{\"Object, ConstantNode, string\":function(e,t){return e[t]=!0,!0},\"Object, SymbolNode, string\":function(e,t,n){return t.name!==n&&(e[t]=!0,!0)},\"Object, ParenthesisNode, string\":function(e,t,n){return y(e,t.content,n)},\"Object, FunctionAssignmentNode, string\":function(e,t,n){return-1===t.params.indexOf(n)?(e[t]=!0,!0):y(e,t.expr,n)},\"Object, FunctionNode | OperatorNode, string\":function(e,t,n){if(t.args.length>0){for(var r=y(e,t.args[0],n),i=1;i<t.args.length;++i)r=y(e,t.args[i],n)&&r;if(r)return e[t]=!0,!0}return!1}}),v=t(\"_derivative\",{\"ConstantNode, Object\":function(e){return g(0)},\"SymbolNode, Object\":function(e,t){return void 0!==t[e]?g(0):g(1)},\"ParenthesisNode, Object\":function(e,t){return new f(v(e.content,t))},\"FunctionAssignmentNode, Object\":function(e,t){return void 0!==t[e]?g(0):v(e.expr,t)},\"FunctionNode, Object\":function(e,t){if(1!==e.args.length&&function(e){if((\"log\"===e.name||\"nthRoot\"===e.name||\"pow\"===e.name)&&2===e.args.length)return;for(var t=0;t<e.args.length;++t)e.args[t]=g(0);throw e.compile().evaluate(),new Error(\"Expected TypeError, but none found\")}(e),void 0!==t[e])return g(0);var n,r,i,a,o=e.args[0],s=!1,c=!1;switch(e.name){case\"cbrt\":s=!0,r=new d(\"*\",\"multiply\",[g(3),new d(\"^\",\"pow\",[o,new d(\"/\",\"divide\",[g(2),g(3)])])]);break;case\"sqrt\":case\"nthRoot\":if(1===e.args.length)s=!0,r=new d(\"*\",\"multiply\",[g(2),new l(\"sqrt\",[o])]);else if(2===e.args.length)return t[n=new d(\"/\",\"divide\",[g(1),e.args[1]])]=t[e.args[1]],v(new d(\"^\",\"pow\",[o,n]),t);break;case\"log10\":n=g(10);case\"log\":if(n||1!==e.args.length){if(1===e.args.length&&n||2===e.args.length&&void 0!==t[e.args[1]])r=new d(\"*\",\"multiply\",[o.clone(),new l(\"log\",[n||e.args[1]])]),s=!0;else if(2===e.args.length)return v(new d(\"/\",\"divide\",[new l(\"log\",[o]),new l(\"log\",[e.args[1]])]),t)}else r=o.clone(),s=!0;break;case\"pow\":return t[n]=t[e.args[1]],v(new d(\"^\",\"pow\",[o,e.args[1]]),t);case\"exp\":r=new l(\"exp\",[o.clone()]);break;case\"sin\":r=new l(\"cos\",[o.clone()]);break;case\"cos\":r=new d(\"-\",\"unaryMinus\",[new l(\"sin\",[o.clone()])]);break;case\"tan\":r=new d(\"^\",\"pow\",[new l(\"sec\",[o.clone()]),g(2)]);break;case\"sec\":r=new d(\"*\",\"multiply\",[e,new l(\"tan\",[o.clone()])]);break;case\"csc\":c=!0,r=new d(\"*\",\"multiply\",[e,new l(\"cot\",[o.clone()])]);break;case\"cot\":c=!0,r=new d(\"^\",\"pow\",[new l(\"csc\",[o.clone()]),g(2)]);break;case\"asin\":s=!0,r=new l(\"sqrt\",[new d(\"-\",\"subtract\",[g(1),new d(\"^\",\"pow\",[o.clone(),g(2)])])]);break;case\"acos\":s=!0,c=!0,r=new l(\"sqrt\",[new d(\"-\",\"subtract\",[g(1),new d(\"^\",\"pow\",[o.clone(),g(2)])])]);break;case\"atan\":s=!0,r=new d(\"+\",\"add\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)]);break;case\"asec\":s=!0,r=new d(\"*\",\"multiply\",[new l(\"abs\",[o.clone()]),new l(\"sqrt\",[new d(\"-\",\"subtract\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)])])]);break;case\"acsc\":s=!0,c=!0,r=new d(\"*\",\"multiply\",[new l(\"abs\",[o.clone()]),new l(\"sqrt\",[new d(\"-\",\"subtract\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)])])]);break;case\"acot\":s=!0,c=!0,r=new d(\"+\",\"add\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)]);break;case\"sinh\":r=new l(\"cosh\",[o.clone()]);break;case\"cosh\":r=new l(\"sinh\",[o.clone()]);break;case\"tanh\":r=new d(\"^\",\"pow\",[new l(\"sech\",[o.clone()]),g(2)]);break;case\"sech\":c=!0,r=new d(\"*\",\"multiply\",[e,new l(\"tanh\",[o.clone()])]);break;case\"csch\":c=!0,r=new d(\"*\",\"multiply\",[e,new l(\"coth\",[o.clone()])]);break;case\"coth\":c=!0,r=new d(\"^\",\"pow\",[new l(\"csch\",[o.clone()]),g(2)]);break;case\"asinh\":s=!0,r=new l(\"sqrt\",[new d(\"+\",\"add\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)])]);break;case\"acosh\":s=!0,r=new l(\"sqrt\",[new d(\"-\",\"subtract\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)])]);break;case\"atanh\":s=!0,r=new d(\"-\",\"subtract\",[g(1),new d(\"^\",\"pow\",[o.clone(),g(2)])]);break;case\"asech\":s=!0,c=!0,r=new d(\"*\",\"multiply\",[o.clone(),new l(\"sqrt\",[new d(\"-\",\"subtract\",[g(1),new d(\"^\",\"pow\",[o.clone(),g(2)])])])]);break;case\"acsch\":s=!0,c=!0,r=new d(\"*\",\"multiply\",[new l(\"abs\",[o.clone()]),new l(\"sqrt\",[new d(\"+\",\"add\",[new d(\"^\",\"pow\",[o.clone(),g(2)]),g(1)])])]);break;case\"acoth\":s=!0,c=!0,r=new d(\"-\",\"subtract\",[g(1),new d(\"^\",\"pow\",[o.clone(),g(2)])]);break;case\"abs\":r=new d(\"/\",\"divide\",[new l(new p(\"abs\"),[o.clone()]),o.clone()]);break;case\"gamma\":default:throw new Error('Function \"'+e.name+'\" is not supported by derivative, or a wrong number of arguments is passed')}s?(i=\"/\",a=\"divide\"):(i=\"*\",a=\"multiply\");var u=v(o,t);return c&&(u=new d(\"-\",\"unaryMinus\",[u])),new d(i,a,[u,r])},\"OperatorNode, Object\":function(e,t){if(void 0!==t[e])return g(0);if(\"+\"===e.op)return new d(e.op,e.fn,e.args.map((function(e){return v(e,t)})));if(\"-\"===e.op){if(e.isUnary())return new d(e.op,e.fn,[v(e.args[0],t)]);if(e.isBinary())return new d(e.op,e.fn,[v(e.args[0],t),v(e.args[1],t)])}if(\"*\"===e.op){var n=e.args.filter((function(e){return void 0!==t[e]}));if(n.length>0){var r=e.args.filter((function(e){return void 0===t[e]})),a=1===r.length?r[0]:new d(\"*\",\"multiply\",r),c=n.concat(v(a,t));return new d(\"*\",\"multiply\",c)}return new d(\"+\",\"add\",e.args.map((function(n){return new d(\"*\",\"multiply\",e.args.map((function(e){return e===n?v(e,t):e.clone()})))})))}if(\"/\"===e.op&&e.isBinary()){var u=e.args[0],f=e.args[1];return void 0!==t[f]?new d(\"/\",\"divide\",[v(u,t),f]):void 0!==t[u]?new d(\"*\",\"multiply\",[new d(\"-\",\"unaryMinus\",[u]),new d(\"/\",\"divide\",[v(f,t),new d(\"^\",\"pow\",[f.clone(),g(2)])])]):new d(\"/\",\"divide\",[new d(\"-\",\"subtract\",[new d(\"*\",\"multiply\",[v(u,t),f.clone()]),new d(\"*\",\"multiply\",[u.clone(),v(f,t)])]),new d(\"^\",\"pow\",[f.clone(),g(2)])])}if(\"^\"===e.op&&e.isBinary()){var p=e.args[0],m=e.args[1];if(void 0!==t[p])return(0,i.isConstantNode)(p)&&(s(p.value)||o(p.value,1))?g(0):new d(\"*\",\"multiply\",[e,new d(\"*\",\"multiply\",[new l(\"log\",[p.clone()]),v(m.clone(),t)])]);if(void 0!==t[m]){if((0,i.isConstantNode)(m)){if(s(m.value))return g(0);if(o(m.value,1))return v(p,t)}var h=new d(\"^\",\"pow\",[p.clone(),new d(\"-\",\"subtract\",[m,g(1)])]);return new d(\"*\",\"multiply\",[m.clone(),new d(\"*\",\"multiply\",[v(p,t),h])])}return new d(\"*\",\"multiply\",[new d(\"^\",\"pow\",[p.clone(),m.clone()]),new d(\"+\",\"add\",[new d(\"*\",\"multiply\",[v(p,t),new d(\"/\",\"divide\",[m.clone(),p.clone()])]),new d(\"*\",\"multiply\",[v(m,t),new l(\"log\",[p.clone()])])])])}throw new Error('Operator \"'+e.op+'\" is not supported by derivative, or a wrong number of arguments is passed')}});function g(e,t){return new u(c(e,t||n.number))}return m}));t.createDerivative=r})),mu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRationalize=void 0;var n=[\"config\",\"typed\",\"equal\",\"isZero\",\"add\",\"subtract\",\"multiply\",\"divide\",\"pow\",\"parse\",\"simplify\",\"?bignumber\",\"?fraction\",\"mathWithTransform\",\"ConstantNode\",\"OperatorNode\",\"FunctionNode\",\"SymbolNode\",\"ParenthesisNode\"],r=(0,h.factory)(\"rationalize\",n,(function(e){var t=e.config,n=e.typed,r=e.equal,i=e.isZero,a=e.add,o=e.subtract,s=e.multiply,c=e.divide,l=e.pow,d=e.parse,f=e.simplify,p=e.fraction,m=e.bignumber,h=e.mathWithTransform,y=e.ConstantNode,v=e.OperatorNode,g=e.FunctionNode,b=e.SymbolNode,x=e.ParenthesisNode,D=(0,lu.createSimplifyConstant)({typed:n,config:t,mathWithTransform:h,fraction:p,bignumber:m,ConstantNode:y,OperatorNode:v,FunctionNode:g,SymbolNode:b}),_=(0,uu.createSimplifyCore)({equal:r,isZero:i,add:a,subtract:o,multiply:s,divide:c,pow:l,ConstantNode:y,OperatorNode:v,FunctionNode:g,ParenthesisNode:x});return n(\"rationalize\",{string:function(e){return this(d(e),{},!1)},\"string, boolean\":function(e,t){return this(d(e),{},t)},\"string, Object\":function(e,t){return this(d(e),t,!1)},\"string, Object, boolean\":function(e,t,n){return this(d(e),t,n)},Node:function(e){return this(e,{},!1)},\"Node, boolean\":function(e,t){return this(e,{},t)},\"Node, Object\":function(e,t){return this(e,t,!1)},\"Node, Object, boolean\":function(e,t,n){var r=function(){var e=[_,{l:\"n+n\",r:\"2*n\"},{l:\"n+-n\",r:\"0\"},D,{l:\"n*(n1^-1)\",r:\"n/n1\"},{l:\"n*n1^-n2\",r:\"n/n1^n2\"},{l:\"n1^-1\",r:\"1/n1\"},{l:\"n*(n1/n2)\",r:\"(n*n1)/n2\"},{l:\"1*n\",r:\"n\"}],t=[{l:\"(-n1)/(-n2)\",r:\"n1/n2\"},{l:\"(-n1)*(-n2)\",r:\"n1*n2\"},{l:\"n1--n2\",r:\"n1+n2\"},{l:\"n1-n2\",r:\"n1+(-n2)\"},{l:\"(n1+n2)*n3\",r:\"(n1*n3 + n2*n3)\"},{l:\"n1*(n2+n3)\",r:\"(n1*n2+n1*n3)\"},{l:\"c1*n + c2*n\",r:\"(c1+c2)*n\"},{l:\"c1*n + n\",r:\"(c1+1)*n\"},{l:\"c1*n - c2*n\",r:\"(c1-c2)*n\"},{l:\"c1*n - n\",r:\"(c1-1)*n\"},{l:\"v/c\",r:\"(1/c)*v\"},{l:\"v/-c\",r:\"-(1/c)*v\"},{l:\"-v*-c\",r:\"c*v\"},{l:\"-v*c\",r:\"-c*v\"},{l:\"v*-c\",r:\"-c*v\"},{l:\"v*c\",r:\"c*v\"},{l:\"-(-n1*n2)\",r:\"(n1*n2)\"},{l:\"-(n1*n2)\",r:\"(-n1*n2)\"},{l:\"-(-n1+n2)\",r:\"(n1-n2)\"},{l:\"-(n1+n2)\",r:\"(-n1-n2)\"},{l:\"(n1^n2)^n3\",r:\"(n1^(n2*n3))\"},{l:\"-(-n1/n2)\",r:\"(n1/n2)\"},{l:\"-(n1/n2)\",r:\"(-n1/n2)\"}],n=[{l:\"(n1/(n2/n3))\",r:\"((n1*n3)/n2)\"},{l:\"(n1/n2/n3)\",r:\"(n1/(n2*n3))\"}],r={};return r.firstRules=e.concat(t,n),r.distrDivRules=[{l:\"(n1/n2 + n3/n4)\",r:\"((n1*n4 + n3*n2)/(n2*n4))\"},{l:\"(n1/n2 + n3)\",r:\"((n1 + n3*n2)/n2)\"},{l:\"(n1 + n2/n3)\",r:\"((n1*n3 + n2)/n3)\"}],r.sucDivRules=n,r.firstRulesAgain=e.concat(t),r.finalRules=[_,{l:\"n*-n\",r:\"-n^2\"},{l:\"n*n\",r:\"n^2\"},D,{l:\"n*-n^n1\",r:\"-n^(n1+1)\"},{l:\"n*n^n1\",r:\"n^(n1+1)\"},{l:\"n^n1*-n^n2\",r:\"-n^(n1+n2)\"},{l:\"n^n1*n^n2\",r:\"n^(n1+n2)\"},{l:\"n^n1*-n\",r:\"-n^(n1+1)\"},{l:\"n^n1*n\",r:\"n^(n1+1)\"},{l:\"n^n1/-n\",r:\"-n^(n1-1)\"},{l:\"n^n1/n\",r:\"n^(n1-1)\"},{l:\"n/-n^n1\",r:\"-n^(1-n1)\"},{l:\"n/n^n1\",r:\"n^(1-n1)\"},{l:\"n^n1/-n^n2\",r:\"n^(n1-n2)\"},{l:\"n^n1/n^n2\",r:\"n^(n1-n2)\"},{l:\"n1+(-n2*n3)\",r:\"n1-n2*n3\"},{l:\"v*(-c)\",r:\"-c*v\"},{l:\"n1+-n2\",r:\"n1-n2\"},{l:\"v*c\",r:\"c*v\"},{l:\"(n1^n2)^n3\",r:\"(n1^(n2*n3))\"}],r}(),i=function(e,t,n,r){var i=[],a=f(e,r,t,{exactFractions:!1}),o=\"+-*\"+((n=!!n)?\"/\":\"\");!function e(t){var n=t.type;if(\"FunctionNode\"===n)throw new Error(\"There is an unsolved function call\");if(\"OperatorNode\"===n)if(\"^\"===t.op){if(\"ConstantNode\"!==t.args[1].type||!(0,u.isInteger)(parseFloat(t.args[1].value)))throw new Error(\"There is a non-integer exponent\");e(t.args[0])}else{if(-1===o.indexOf(t.op))throw new Error(\"Operator \"+t.op+\" invalid in polynomial expression\");for(var r=0;r<t.args.length;r++)e(t.args[r])}else if(\"SymbolNode\"===n){var a=t.name;-1===i.indexOf(a)&&i.push(a)}else if(\"ParenthesisNode\"===n)e(t.content);else if(\"ConstantNode\"!==n)throw new Error(\"type \"+n+\" is not allowed in polynomial expression\")}(a);var s={};return s.expression=a,s.variables=i,s}(e,t,!0,r.firstRules),a=i.variables.length;if(e=i.expression,a>=1){var o,s;e=function e(t,n,r){var i=t.type,a=arguments.length>1;if(\"OperatorNode\"===i&&t.isBinary()){var o,s=!1;if(\"^\"===t.op&&(\"ParenthesisNode\"!==t.args[0].type&&\"OperatorNode\"!==t.args[0].type||\"ConstantNode\"!==t.args[1].type||(o=parseFloat(t.args[1].value),s=o>=2&&(0,u.isInteger)(o))),s){if(o>2){var c=t.args[0],l=new v(\"^\",\"pow\",[t.args[0].cloneDeep(),new y(o-1)]);t=new v(\"*\",\"multiply\",[c,l])}else t=new v(\"*\",\"multiply\",[t.args[0],t.args[0].cloneDeep()]);a&&(\"content\"===r?n.content=t:n.args[r]=t)}}if(\"ParenthesisNode\"===i)e(t.content,t,\"content\");else if(\"ConstantNode\"!==i&&\"SymbolNode\"!==i)for(var d=0;d<t.args.length;d++)e(t.args[d],t,d);if(!a)return t}(e);var c,l=!0,d=!1;for(e=f(e,r.firstRules,{},{exactFractions:!1});s=l?r.distrDivRules:r.sucDivRules,l=!l,(c=(e=f(e,s)).toString())!==o;)d=!0,o=c;d&&(e=f(e,r.firstRulesAgain,{},{exactFractions:!1})),e=f(e,r.finalRules,{},{exactFractions:!1})}var p=[],m={};return\"OperatorNode\"===e.type&&e.isBinary()&&\"/\"===e.op?(1===a&&(e.args[0]=w(e.args[0],p),e.args[1]=w(e.args[1])),n&&(m.numerator=e.args[0],m.denominator=e.args[1])):(1===a&&(e=w(e,p)),n&&(m.numerator=e,m.denominator=null)),n?(m.coefficients=p,m.variables=i.variables,m.expression=e,m):e}});function w(e,t){void 0===t&&(t=[]),t[0]=0;var n={cte:1,oper:\"+\",fire:\"\"},r=0,i=\"\";!function e(n,a,o){var s=n.type;if(\"FunctionNode\"===s)throw new Error(\"There is an unsolved function call\");if(\"OperatorNode\"===s){if(-1===\"+-*^\".indexOf(n.op))throw new Error(\"Operator \"+n.op+\" invalid\");if(null!==a){if((\"unaryMinus\"===n.fn||\"pow\"===n.fn)&&\"add\"!==a.fn&&\"subtract\"!==a.fn&&\"multiply\"!==a.fn)throw new Error(\"Invalid \"+n.op+\" placing\");if((\"subtract\"===n.fn||\"add\"===n.fn||\"multiply\"===n.fn)&&\"add\"!==a.fn&&\"subtract\"!==a.fn)throw new Error(\"Invalid \"+n.op+\" placing\");if((\"subtract\"===n.fn||\"add\"===n.fn||\"unaryMinus\"===n.fn)&&0!==o.noFil)throw new Error(\"Invalid \"+n.op+\" placing\")}\"^\"!==n.op&&\"*\"!==n.op||(o.fire=n.op);for(var c=0;c<n.args.length;c++)\"unaryMinus\"===n.fn&&(o.oper=\"-\"),\"+\"!==n.op&&\"subtract\"!==n.fn||(o.fire=\"\",o.cte=1,o.oper=0===c?\"+\":n.op),o.noFil=c,e(n.args[c],n,o)}else if(\"SymbolNode\"===s){if(n.name!==i&&\"\"!==i)throw new Error(\"There is more than one variable\");if(i=n.name,null===a)return void(t[1]=1);if(\"^\"===a.op&&0!==o.noFil)throw new Error(\"In power the variable should be the first parameter\");if(\"*\"===a.op&&1!==o.noFil)throw new Error(\"In multiply the variable should be the second parameter\");\"\"!==o.fire&&\"*\"!==o.fire||(r<1&&(t[1]=0),t[1]+=o.cte*(\"+\"===o.oper?1:-1),r=Math.max(1,r))}else{if(\"ConstantNode\"!==s)throw new Error(\"Type \"+s+\" is not allowed\");var l=parseFloat(n.value);if(null===a)return void(t[0]=l);if(\"^\"===a.op){if(1!==o.noFil)throw new Error(\"Constant cannot be powered\");if(!(0,u.isInteger)(l)||l<=0)throw new Error(\"Non-integer exponent is not allowed\");for(var d=r+1;d<l;d++)t[d]=0;return l>r&&(t[l]=0),t[l]+=o.cte*(\"+\"===o.oper?1:-1),void(r=Math.max(l,r))}o.cte=l,\"\"===o.fire&&(t[0]+=o.cte*(\"+\"===o.oper?1:-1))}}(e,null,n);for(var a,o=!0,s=r=t.length-1;s>=0;s--)if(0!==t[s]){var c=new y(o?t[s]:Math.abs(t[s])),l=t[s]<0?\"-\":\"+\";if(s>0){var d=new b(i);if(s>1){var f=new y(s);d=new v(\"^\",\"pow\",[d,f])}c=-1===t[s]&&o?new v(\"-\",\"unaryMinus\",[d]):1===Math.abs(t[s])?d:new v(\"*\",\"multiply\",[c,d])}a=o?c:\"+\"===l?new v(\"+\",\"add\",[a,c]):new v(\"-\",\"subtract\",[a,c]),o=!1}return o?new y(0):a}}));t.createRationalize=r})),hu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createReviver=void 0;var n=[\"classes\"],r=(0,h.factory)(\"reviver\",n,(function(e){var t=e.classes;return function(e,n){var r=t[n&&n.mathjs];return r&&\"function\"==typeof r.fromJSON?r.fromJSON(n):n}}));t.createReviver=r})),yu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createReplacer=void 0;var n=[],r=(0,h.factory)(\"replacer\",n,(function(){return function(e,t){return\"number\"!=typeof t||isFinite(t)&&!isNaN(t)?t:{mathjs:\"number\",value:String(t)}}}));t.createReplacer=r})),vu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.version=void 0;t.version=\"7.6.0\"})),gu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createVersion=t.createUppercaseE=t.createUppercasePi=t.createI=t.createSQRT2=t.createSQRT1_2=t.createLOG10E=t.createLOG2E=t.createLN10=t.createLN2=t.createPhi=t.createE=t.createTau=t.createPi=t.createNaN=t.createInfinity=t.createNull=t.createFalse=t.createTrue=void 0;var n=(0,h.factory)(\"true\",[],(function(){return!0}));t.createTrue=n;var r=(0,h.factory)(\"false\",[],(function(){return!1}));t.createFalse=r;var i=(0,h.factory)(\"null\",[],(function(){return null}));t.createNull=i;var a=_(\"Infinity\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(1/0):1/0}));t.createInfinity=a;var o=_(\"NaN\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(NaN):NaN}));t.createNaN=o;var s=_(\"pi\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?(0,An.createBigNumberPi)(n):F.pi}));t.createPi=s;var c=_(\"tau\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?(0,An.createBigNumberTau)(n):F.tau}));t.createTau=c;var u=_(\"e\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?(0,An.createBigNumberE)(n):F.e}));t.createE=u;var l=_(\"phi\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?(0,An.createBigNumberPhi)(n):F.phi}));t.createPhi=l;var d=_(\"LN2\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(2).ln():Math.LN2}));t.createLN2=d;var f=_(\"LN10\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(10).ln():Math.LN10}));t.createLN10=f;var p=_(\"LOG2E\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(1).div(new n(2).ln()):Math.LOG2E}));t.createLOG2E=p;var m=_(\"LOG10E\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(1).div(new n(10).ln()):Math.LOG10E}));t.createLOG10E=m;var y=_(\"SQRT1_2\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(\"0.5\").sqrt():Math.SQRT1_2}));t.createSQRT1_2=y;var v=_(\"SQRT2\",[\"config\",\"?BigNumber\"],(function(e){var t=e.config,n=e.BigNumber;return\"BigNumber\"===t.number?new n(2).sqrt():Math.SQRT2}));t.createSQRT2=v;var g=_(\"i\",[\"Complex\"],(function(e){return e.Complex.I}));t.createI=g;var b=(0,h.factory)(\"PI\",[\"pi\"],(function(e){return e.pi}));t.createUppercasePi=b;var x=(0,h.factory)(\"E\",[\"e\"],(function(e){return e.e}));t.createUppercaseE=x;var D=(0,h.factory)(\"version\",[],(function(){return vu.version}));function _(e,t,n){return(0,h.factory)(e,t,n,{recreateOnConfigChange:!0})}t.createVersion=D})),bu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createPlanckTemperature=t.createPlanckCharge=t.createPlanckTime=t.createPlanckMass=t.createPlanckLength=t.createGravity=t.createMolarMassC12=t.createMolarMass=t.createWienDisplacement=t.createStefanBoltzmann=t.createSecondRadiation=t.createSackurTetrode=t.createMolarVolume=t.createMolarPlanckConstant=t.createGasConstant=t.createLoschmidt=t.createFirstRadiation=t.createFaraday=t.createBoltzmann=t.createAvogadro=t.createAtomicMass=t.createEfimovFactor=t.createWeakMixingAngle=t.createThomsonCrossSection=t.createRydberg=t.createQuantumOfCirculation=t.createNeutronMass=t.createDeuteronMass=t.createProtonMass=t.createHartreeEnergy=t.createFineStructure=t.createFermiCoupling=t.createElectronMass=t.createClassicalElectronRadius=t.createBohrRadius=t.createJosephson=t.createKlitzing=t.createNuclearMagneton=t.createMagneticFluxQuantum=t.createInverseConductanceQuantum=t.createConductanceQuantum=t.createBohrMagneton=t.createElementaryCharge=t.createCoulomb=t.createVacuumImpedance=t.createElectricConstant=t.createMagneticConstant=t.createReducedPlanckConstant=t.createPlanckConstant=t.createGravitationConstant=t.createSpeedOfLight=void 0;var n=ee(\"speedOfLight\",\"299792458\",\"m s^-1\");t.createSpeedOfLight=n;var r=ee(\"gravitationConstant\",\"6.67430e-11\",\"m^3 kg^-1 s^-2\");t.createGravitationConstant=r;var i=ee(\"planckConstant\",\"6.62607015e-34\",\"J s\");t.createPlanckConstant=i;var a=ee(\"reducedPlanckConstant\",\"1.0545718176461565e-34\",\"J s\");t.createReducedPlanckConstant=a;var o=ee(\"magneticConstant\",\"1.25663706212e-6\",\"N A^-2\");t.createMagneticConstant=o;var s=ee(\"electricConstant\",\"8.8541878128e-12\",\"F m^-1\");t.createElectricConstant=s;var c=ee(\"vacuumImpedance\",\"376.730313667\",\"ohm\");t.createVacuumImpedance=c;var u=ee(\"coulomb\",\"8.987551792261171e9\",\"N m^2 C^-2\");t.createCoulomb=u;var l=ee(\"elementaryCharge\",\"1.602176634e-19\",\"C\");t.createElementaryCharge=l;var d=ee(\"bohrMagneton\",\"9.2740100783e-24\",\"J T^-1\");t.createBohrMagneton=d;var f=ee(\"conductanceQuantum\",\"7.748091729863649e-5\",\"S\");t.createConductanceQuantum=f;var p=ee(\"inverseConductanceQuantum\",\"12906.403729652257\",\"ohm\");t.createInverseConductanceQuantum=p;var m=ee(\"magneticFluxQuantum\",\"2.0678338484619295e-15\",\"Wb\");t.createMagneticFluxQuantum=m;var y=ee(\"nuclearMagneton\",\"5.0507837461e-27\",\"J T^-1\");t.createNuclearMagneton=y;var v=ee(\"klitzing\",\"25812.807459304513\",\"ohm\");t.createKlitzing=v;var g=ee(\"josephson\",\"4.835978484169836e14 Hz V\",\"Hz V^-1\");t.createJosephson=g;var b=ee(\"bohrRadius\",\"5.29177210903e-11\",\"m\");t.createBohrRadius=b;var x=ee(\"classicalElectronRadius\",\"2.8179403262e-15\",\"m\");t.createClassicalElectronRadius=x;var D=ee(\"electronMass\",\"9.1093837015e-31\",\"kg\");t.createElectronMass=D;var _=ee(\"fermiCoupling\",\"1.1663787e-5\",\"GeV^-2\");t.createFermiCoupling=_;var w=te(\"fineStructure\",.0072973525693);t.createFineStructure=w;var N=ee(\"hartreeEnergy\",\"4.3597447222071e-18\",\"J\");t.createHartreeEnergy=N;var M=ee(\"protonMass\",\"1.67262192369e-27\",\"kg\");t.createProtonMass=M;var O=ee(\"deuteronMass\",\"3.3435830926e-27\",\"kg\");t.createDeuteronMass=O;var S=ee(\"neutronMass\",\"1.6749271613e-27\",\"kg\");t.createNeutronMass=S;var P=ee(\"quantumOfCirculation\",\"3.6369475516e-4\",\"m^2 s^-1\");t.createQuantumOfCirculation=P;var j=ee(\"rydberg\",\"10973731.568160\",\"m^-1\");t.createRydberg=j;var A=ee(\"thomsonCrossSection\",\"6.6524587321e-29\",\"m^2\");t.createThomsonCrossSection=A;var E=te(\"weakMixingAngle\",.2229);t.createWeakMixingAngle=E;var C=te(\"efimovFactor\",22.7);t.createEfimovFactor=C;var T=ee(\"atomicMass\",\"1.66053906660e-27\",\"kg\");t.createAtomicMass=T;var k=ee(\"avogadro\",\"6.02214076e23\",\"mol^-1\");t.createAvogadro=k;var I=ee(\"boltzmann\",\"1.380649e-23\",\"J K^-1\");t.createBoltzmann=I;var B=ee(\"faraday\",\"96485.33212331001\",\"C mol^-1\");t.createFaraday=B;var z=ee(\"firstRadiation\",\"3.7417718521927573e-16\",\"W m^2\");t.createFirstRadiation=z;var R=ee(\"loschmidt\",\"2.686780111798444e25\",\"m^-3\");t.createLoschmidt=R;var q=ee(\"gasConstant\",\"8.31446261815324\",\"J K^-1 mol^-1\");t.createGasConstant=q;var F=ee(\"molarPlanckConstant\",\"3.990312712893431e-10\",\"J s mol^-1\");t.createMolarPlanckConstant=F;var U=ee(\"molarVolume\",\"0.022413969545014137\",\"m^3 mol^-1\");t.createMolarVolume=U;var L=te(\"sackurTetrode\",-1.16487052358);t.createSackurTetrode=L;var H=ee(\"secondRadiation\",\"0.014387768775039337\",\"m K\");t.createSecondRadiation=H;var Z=ee(\"stefanBoltzmann\",\"5.67037441918443e-8\",\"W m^-2 K^-4\");t.createStefanBoltzmann=Z;var V=ee(\"wienDisplacement\",\"2.897771955e-3\",\"m K\");t.createWienDisplacement=V;var W=ee(\"molarMass\",\"0.99999999965e-3\",\"kg mol^-1\");t.createMolarMass=W;var G=ee(\"molarMassC12\",\"11.9999999958e-3\",\"kg mol^-1\");t.createMolarMassC12=G;var $=ee(\"gravity\",\"9.80665\",\"m s^-2\");t.createGravity=$;var Q=ee(\"planckLength\",\"1.616255e-35\",\"m\");t.createPlanckLength=Q;var X=ee(\"planckMass\",\"2.176435e-8\",\"kg\");t.createPlanckMass=X;var Y=ee(\"planckTime\",\"5.391245e-44\",\"s\");t.createPlanckTime=Y;var J=ee(\"planckCharge\",\"1.87554603778e-18\",\"C\");t.createPlanckCharge=J;var K=ee(\"planckTemperature\",\"1.416785e+32\",\"K\");function ee(e,t,n){return(0,h.factory)(e,[\"config\",\"Unit\",\"BigNumber\"],(function(e){var r=e.config,i=e.Unit,a=e.BigNumber,o=new i(\"BigNumber\"===r.number?new a(t):parseFloat(t),n);return o.fixPrefix=!0,o}))}function te(e,t){return(0,h.factory)(e,[\"config\",\"BigNumber\"],(function(e){var n=e.config,r=e.BigNumber;return\"BigNumber\"===n.number?new r(t):t}))}t.createPlanckTemperature=K})),xu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createApplyTransform=void 0;var n=[\"typed\",\"isInteger\"],r=(0,h.factory)(\"apply\",n,(function(e){var t=e.typed,n=e.isInteger,r=(0,ue.createApply)({typed:t,isInteger:n});return t(\"apply\",{\"...any\":function(e){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1));try{return r.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createApplyTransform=r})),Du=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createColumnTransform=void 0;var n=[\"typed\",\"Index\",\"matrix\",\"range\"],r=(0,h.factory)(\"column\",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,a=e.range,o=(0,it.createColumn)({typed:t,Index:n,matrix:r,range:a});return t(\"column\",{\"...any\":function(e){var t=e.length-1,n=e[t];(0,i.isNumber)(n)&&(e[t]=n-1);try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createColumnTransform=r})),_u=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compileInlineExpression=function(e,t,n){var r=e.filter((function(e){return(0,i.isSymbolNode)(e)&&!(e.name in t)&&!(e.name in n)}))[0];if(!r)throw new Error('No undefined variable found in inline expression \"'+e+'\"');var a=r.name,o=Object.create(n),s=e.compile();return function(e){return o[a]=e,s.evaluate(o)}}})),wu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createFilterTransform=void 0;var n=[\"typed\"],r=(0,h.factory)(\"filter\",n,(function(e){var t=e.typed;function n(e,t,n){var a,o;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(o=(0,i.isSymbolNode)(e[1])||(0,i.isFunctionAssignmentNode)(e[1])?e[1].compile().evaluate(n):(0,_u.compileInlineExpression)(e[1],t,n)),r(a,o)}n.rawArgs=!0;var r=t(\"filter\",{\"Array, function\":a,\"Matrix, function\":function(e,t){return e.create(a(e.toArray(),t))},\"Array, RegExp\":m.filterRegExp,\"Matrix, RegExp\":function(e,t){return e.create((0,m.filterRegExp)(e.toArray(),t))}});return n}),{isTransformFunction:!0});function a(e,t){var n=(0,st.maxArgumentCount)(t);return(0,m.filter)(e,(function(e,r,i){return 1===n?t(e):2===n?t(e,[r+1]):t(e,[r+1],i)}))}t.createFilterTransform=r})),Nu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createForEachTransform=void 0;var n=[\"typed\"],r=(0,h.factory)(\"forEach\",n,(function(e){var t=e.typed;function n(e,t,n){var a,o;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(o=(0,i.isSymbolNode)(e[1])||(0,i.isFunctionAssignmentNode)(e[1])?e[1].compile().evaluate(n):(0,_u.compileInlineExpression)(e[1],t,n)),r(a,o)}n.rawArgs=!0;var r=t(\"forEach\",{\"Array | Matrix, function\":function(e,t){var n=(0,st.maxArgumentCount)(t);!function r(i,a){Array.isArray(i)?(0,m.forEach)(i,(function(e,t){r(e,a.concat(t+1))})):1===n?t(i):2===n?t(i,a):t(i,a,e)}(e.valueOf(),[])}});return n}),{isTransformFunction:!0});t.createForEachTransform=r})),Mu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createIndexTransform=void 0;var n=[\"Index\"],r=(0,h.factory)(\"index\",n,(function(e){var t=e.Index;return function(){for(var e=[],n=0,r=arguments.length;n<r;n++){var a=arguments[n];if((0,i.isRange)(a))a.start--,a.end-=a.step>0?0:2;else if(a&&!0===a.isSet)a=a.map((function(e){return e-1}));else if((0,i.isArray)(a)||(0,i.isMatrix)(a))a=a.map((function(e){return e-1}));else if((0,i.isNumber)(a))a--;else if((0,i.isBigNumber)(a))a=a.toNumber()-1;else if(\"string\"!=typeof a)throw new TypeError(\"Dimension must be an Array, Matrix, number, string, or Range\");e[n]=a}var o=new t;return t.apply(o,e),o}}),{isTransformFunction:!0});t.createIndexTransform=r})),Ou=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMapTransform=void 0;var n=[\"typed\"],r=(0,h.factory)(\"map\",n,(function(e){var t=e.typed;function n(e,t,n){var a,o;return e[0]&&(a=e[0].compile().evaluate(n)),e[1]&&(o=(0,i.isSymbolNode)(e[1])||(0,i.isFunctionAssignmentNode)(e[1])?e[1].compile().evaluate(n):(0,_u.compileInlineExpression)(e[1],t,n)),r(a,o)}n.rawArgs=!0;var r=t(\"map\",{\"Array, function\":function(e,t){return a(e,t,e)},\"Matrix, function\":function(e,t){return e.create(a(e.valueOf(),t,e))}});return n}),{isTransformFunction:!0});function a(e,t,n){var r=(0,st.maxArgumentCount)(t);return function e(i,a){return Array.isArray(i)?(0,m.map)(i,(function(t,n){return e(t,a.concat(n+1))})):1===r?t(i):2===r?t(i,a):t(i,a,n)}(e,[])}t.createMapTransform=r})),Su=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMaxTransform=void 0;var n=[\"typed\",\"config\",\"numeric\",\"larger\"],r=(0,h.factory)(\"max\",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,a=e.larger,o=(0,Nn.createMax)({typed:t,config:n,numeric:r,larger:a});return t(\"max\",{\"...any\":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createMaxTransform=r})),Pu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMeanTransform=void 0;var n=[\"typed\",\"add\",\"divide\"],r=(0,h.factory)(\"mean\",n,(function(e){var t=e.typed,n=e.add,r=e.divide,a=(0,qc.createMean)({typed:t,add:n,divide:r});return t(\"mean\",{\"...any\":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return a.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createMeanTransform=r})),ju=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createMinTransform=void 0;var n=[\"typed\",\"config\",\"numeric\",\"smaller\"],r=(0,h.factory)(\"min\",n,(function(e){var t=e.typed,n=e.config,r=e.numeric,a=e.smaller,o=(0,Mn.createMin)({typed:t,config:n,numeric:r,smaller:a});return t(\"min\",{\"...any\":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createMinTransform=r})),Au=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRangeTransform=void 0;var n=[\"typed\",\"config\",\"?matrix\",\"?bignumber\",\"smaller\",\"smallerEq\",\"larger\",\"largerEq\"],r=(0,h.factory)(\"range\",n,(function(e){var t=e.typed,n=e.config,r=e.matrix,i=e.bignumber,a=e.smaller,o=e.smallerEq,s=e.larger,c=e.largerEq,u=(0,gt.createRange)({typed:t,config:n,matrix:r,bignumber:i,smaller:a,smallerEq:o,larger:s,largerEq:c});return t(\"range\",{\"...any\":function(e){return\"boolean\"!=typeof e[e.length-1]&&e.push(!0),u.apply(null,e)}})}),{isTransformFunction:!0});t.createRangeTransform=r})),Eu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createRowTransform=void 0;var n=[\"typed\",\"Index\",\"matrix\",\"range\"],r=(0,h.factory)(\"row\",n,(function(e){var t=e.typed,n=e.Index,r=e.matrix,a=e.range,o=(0,Nt.createRow)({typed:t,Index:n,matrix:r,range:a});return t(\"row\",{\"...any\":function(e){var t=e.length-1,n=e[t];(0,i.isNumber)(n)&&(e[t]=n-1);try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createRowTransform=r})),Cu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSubsetTransform=void 0;var n=[\"typed\",\"matrix\"],r=(0,h.factory)(\"subset\",n,(function(e){var t=e.typed,n=e.matrix,r=(0,Pt.createSubset)({typed:t,matrix:n});return t(\"subset\",{\"...any\":function(e){try{return r.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createSubsetTransform=r})),Tu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createConcatTransform=void 0;var n=[\"typed\",\"matrix\",\"isInteger\"],r=(0,h.factory)(\"concat\",n,(function(e){var t=e.typed,n=e.matrix,r=e.isInteger,a=(0,rt.createConcat)({typed:t,matrix:n,isInteger:r});return t(\"concat\",{\"...any\":function(e){var t=e.length-1,n=e[t];(0,i.isNumber)(n)?e[t]=n-1:(0,i.isBigNumber)(n)&&(e[t]=n.minus(1));try{return a.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createConcatTransform=r})),ku=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createDiffTransform=void 0;var n=[\"typed\",\"matrix\",\"subtract\",\"number\",\"bignumber\"],r=(0,h.factory)(\"diff\",n,(function(e){var t=e.typed,n=e.matrix,r=e.subtract,a=e.number,o=e.bignumber,s=(0,ht.createDiff)({typed:t,matrix:n,subtract:r,number:a,bignumber:o});return t(\"diff\",{\"...any\":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return s.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createDiffTransform=r})),Iu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createStdTransform=void 0;var n=[\"typed\",\"sqrt\",\"variance\"],r=(0,h.factory)(\"std\",n,(function(e){var t=e.typed,n=e.sqrt,r=e.variance,a=(0,Zc.createStd)({typed:t,sqrt:n,variance:r});return t(\"std\",{\"...any\":function(e){if(e.length>=2&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return a.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createStdTransform=r})),Bu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createSumTransform=void 0;var n=[\"typed\",\"config\",\"add\",\"numeric\"],r=(0,h.factory)(\"sum\",n,(function(e){var t=e.typed,n=e.config,r=e.add,a=e.numeric,o=(0,Rc.createSum)({typed:t,config:n,add:r,numeric:a});return t(\"sum\",{\"...any\":function(e){if(2===e.length&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return o.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createSumTransform=r})),zu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createVarianceTransform=void 0;var n=[\"typed\",\"add\",\"subtract\",\"multiply\",\"divide\",\"apply\",\"isNaN\"],r=(0,h.factory)(\"variance\",n,(function(e){var t=e.typed,n=e.add,r=e.subtract,a=e.multiply,o=e.divide,s=e.apply,c=e.isNaN,u=(0,Lc.createVariance)({typed:t,add:n,subtract:r,multiply:a,divide:o,apply:s,isNaN:c});return t(\"variance\",{\"...any\":function(e){if(e.length>=2&&(0,i.isCollection)(e[0])){var t=e[1];(0,i.isNumber)(t)?e[1]=t-1:(0,i.isBigNumber)(t)&&(e[1]=t.minus(1))}try{return u.apply(null,e)}catch(e){throw(0,Nr.errorTransform)(e)}}})}),{isTransformFunction:!0});t.createVarianceTransform=r})),Ru=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"createTyped\",{enumerable:!0,get:function(){return y.createTyped}}),Object.defineProperty(t,\"createResultSet\",{enumerable:!0,get:function(){return v.createResultSet}}),Object.defineProperty(t,\"createBigNumberClass\",{enumerable:!0,get:function(){return b.createBigNumberClass}}),Object.defineProperty(t,\"createComplexClass\",{enumerable:!0,get:function(){return D.createComplexClass}}),Object.defineProperty(t,\"createFractionClass\",{enumerable:!0,get:function(){return w.createFractionClass}}),Object.defineProperty(t,\"createRangeClass\",{enumerable:!0,get:function(){return N.createRangeClass}}),Object.defineProperty(t,\"createMatrixClass\",{enumerable:!0,get:function(){return M.createMatrixClass}}),Object.defineProperty(t,\"createDenseMatrixClass\",{enumerable:!0,get:function(){return O.createDenseMatrixClass}}),Object.defineProperty(t,\"createClone\",{enumerable:!0,get:function(){return S.createClone}}),Object.defineProperty(t,\"createIsInteger\",{enumerable:!0,get:function(){return j.createIsInteger}}),Object.defineProperty(t,\"createIsNegative\",{enumerable:!0,get:function(){return U.createIsNegative}}),Object.defineProperty(t,\"createIsNumeric\",{enumerable:!0,get:function(){return L.createIsNumeric}}),Object.defineProperty(t,\"createHasNumericValue\",{enumerable:!0,get:function(){return H.createHasNumericValue}}),Object.defineProperty(t,\"createIsPositive\",{enumerable:!0,get:function(){return Z.createIsPositive}}),Object.defineProperty(t,\"createIsZero\",{enumerable:!0,get:function(){return V.createIsZero}}),Object.defineProperty(t,\"createIsNaN\",{enumerable:!0,get:function(){return W.createIsNaN}}),Object.defineProperty(t,\"createTypeOf\",{enumerable:!0,get:function(){return G.createTypeOf}}),Object.defineProperty(t,\"createEqualScalar\",{enumerable:!0,get:function(){return X.createEqualScalar}}),Object.defineProperty(t,\"createSparseMatrixClass\",{enumerable:!0,get:function(){return Y.createSparseMatrixClass}}),Object.defineProperty(t,\"createNumber\",{enumerable:!0,get:function(){return J.createNumber}}),Object.defineProperty(t,\"createString\",{enumerable:!0,get:function(){return K.createString}}),Object.defineProperty(t,\"createBoolean\",{enumerable:!0,get:function(){return ee.createBoolean}}),Object.defineProperty(t,\"createBignumber\",{enumerable:!0,get:function(){return te.createBignumber}}),Object.defineProperty(t,\"createComplex\",{enumerable:!0,get:function(){return ne.createComplex}}),Object.defineProperty(t,\"createFraction\",{enumerable:!0,get:function(){return re.createFraction}}),Object.defineProperty(t,\"createMatrix\",{enumerable:!0,get:function(){return ie.createMatrix}}),Object.defineProperty(t,\"createSplitUnit\",{enumerable:!0,get:function(){return ae.createSplitUnit}}),Object.defineProperty(t,\"createUnaryMinus\",{enumerable:!0,get:function(){return oe.createUnaryMinus}}),Object.defineProperty(t,\"createUnaryPlus\",{enumerable:!0,get:function(){return se.createUnaryPlus}}),Object.defineProperty(t,\"createAbs\",{enumerable:!0,get:function(){return ce.createAbs}}),Object.defineProperty(t,\"createApply\",{enumerable:!0,get:function(){return ue.createApply}}),Object.defineProperty(t,\"createAddScalar\",{enumerable:!0,get:function(){return le.createAddScalar}}),Object.defineProperty(t,\"createCbrt\",{enumerable:!0,get:function(){return de.createCbrt}}),Object.defineProperty(t,\"createCeil\",{enumerable:!0,get:function(){return me.createCeil}}),Object.defineProperty(t,\"createCube\",{enumerable:!0,get:function(){return he.createCube}}),Object.defineProperty(t,\"createExp\",{enumerable:!0,get:function(){return ye.createExp}}),Object.defineProperty(t,\"createExpm1\",{enumerable:!0,get:function(){return ve.createExpm1}}),Object.defineProperty(t,\"createFix\",{enumerable:!0,get:function(){return ge.createFix}}),Object.defineProperty(t,\"createFloor\",{enumerable:!0,get:function(){return be.createFloor}}),Object.defineProperty(t,\"createGcd\",{enumerable:!0,get:function(){return Ne.createGcd}}),Object.defineProperty(t,\"createLcm\",{enumerable:!0,get:function(){return Se.createLcm}}),Object.defineProperty(t,\"createLog10\",{enumerable:!0,get:function(){return Pe.createLog10}}),Object.defineProperty(t,\"createLog2\",{enumerable:!0,get:function(){return je.createLog2}}),Object.defineProperty(t,\"createMod\",{enumerable:!0,get:function(){return Te.createMod}}),Object.defineProperty(t,\"createMultiplyScalar\",{enumerable:!0,get:function(){return ke.createMultiplyScalar}}),Object.defineProperty(t,\"createMultiply\",{enumerable:!0,get:function(){return Ie.createMultiply}}),Object.defineProperty(t,\"createNthRoot\",{enumerable:!0,get:function(){return Be.createNthRoot}}),Object.defineProperty(t,\"createSign\",{enumerable:!0,get:function(){return ze.createSign}}),Object.defineProperty(t,\"createSqrt\",{enumerable:!0,get:function(){return Re.createSqrt}}),Object.defineProperty(t,\"createSquare\",{enumerable:!0,get:function(){return qe.createSquare}}),Object.defineProperty(t,\"createSubtract\",{enumerable:!0,get:function(){return Fe.createSubtract}}),Object.defineProperty(t,\"createXgcd\",{enumerable:!0,get:function(){return Ue.createXgcd}}),Object.defineProperty(t,\"createDotMultiply\",{enumerable:!0,get:function(){return He.createDotMultiply}}),Object.defineProperty(t,\"createBitAnd\",{enumerable:!0,get:function(){return Ve.createBitAnd}}),Object.defineProperty(t,\"createBitNot\",{enumerable:!0,get:function(){return We.createBitNot}}),Object.defineProperty(t,\"createBitOr\",{enumerable:!0,get:function(){return Ge.createBitOr}}),Object.defineProperty(t,\"createBitXor\",{enumerable:!0,get:function(){return Qe.createBitXor}}),Object.defineProperty(t,\"createArg\",{enumerable:!0,get:function(){return Xe.createArg}}),Object.defineProperty(t,\"createConj\",{enumerable:!0,get:function(){return Ye.createConj}}),Object.defineProperty(t,\"createIm\",{enumerable:!0,get:function(){return Je.createIm}}),Object.defineProperty(t,\"createRe\",{enumerable:!0,get:function(){return Ke.createRe}}),Object.defineProperty(t,\"createNot\",{enumerable:!0,get:function(){return et.createNot}}),Object.defineProperty(t,\"createOr\",{enumerable:!0,get:function(){return tt.createOr}}),Object.defineProperty(t,\"createXor\",{enumerable:!0,get:function(){return nt.createXor}}),Object.defineProperty(t,\"createConcat\",{enumerable:!0,get:function(){return rt.createConcat}}),Object.defineProperty(t,\"createColumn\",{enumerable:!0,get:function(){return it.createColumn}}),Object.defineProperty(t,\"createCross\",{enumerable:!0,get:function(){return at.createCross}}),Object.defineProperty(t,\"createDiag\",{enumerable:!0,get:function(){return ot.createDiag}}),Object.defineProperty(t,\"createFilter\",{enumerable:!0,get:function(){return ct.createFilter}}),Object.defineProperty(t,\"createFlatten\",{enumerable:!0,get:function(){return ut.createFlatten}}),Object.defineProperty(t,\"createForEach\",{enumerable:!0,get:function(){return lt.createForEach}}),Object.defineProperty(t,\"createGetMatrixDataType\",{enumerable:!0,get:function(){return dt.createGetMatrixDataType}}),Object.defineProperty(t,\"createIdentity\",{enumerable:!0,get:function(){return ft.createIdentity}}),Object.defineProperty(t,\"createKron\",{enumerable:!0,get:function(){return pt.createKron}}),Object.defineProperty(t,\"createMap\",{enumerable:!0,get:function(){return mt.createMap}}),Object.defineProperty(t,\"createDiff\",{enumerable:!0,get:function(){return ht.createDiff}}),Object.defineProperty(t,\"createOnes\",{enumerable:!0,get:function(){return yt.createOnes}}),Object.defineProperty(t,\"createRange\",{enumerable:!0,get:function(){return gt.createRange}}),Object.defineProperty(t,\"createReshape\",{enumerable:!0,get:function(){return bt.createReshape}}),Object.defineProperty(t,\"createResize\",{enumerable:!0,get:function(){return Dt.createResize}}),Object.defineProperty(t,\"createRotate\",{enumerable:!0,get:function(){return _t.createRotate}}),Object.defineProperty(t,\"createRotationMatrix\",{enumerable:!0,get:function(){return wt.createRotationMatrix}}),Object.defineProperty(t,\"createRow\",{enumerable:!0,get:function(){return Nt.createRow}}),Object.defineProperty(t,\"createSize\",{enumerable:!0,get:function(){return Mt.createSize}}),Object.defineProperty(t,\"createSqueeze\",{enumerable:!0,get:function(){return Ot.createSqueeze}}),Object.defineProperty(t,\"createSubset\",{enumerable:!0,get:function(){return Pt.createSubset}}),Object.defineProperty(t,\"createTranspose\",{enumerable:!0,get:function(){return jt.createTranspose}}),Object.defineProperty(t,\"createCtranspose\",{enumerable:!0,get:function(){return At.createCtranspose}}),Object.defineProperty(t,\"createZeros\",{enumerable:!0,get:function(){return Et.createZeros}}),Object.defineProperty(t,\"createErf\",{enumerable:!0,get:function(){return Ct.createErf}}),Object.defineProperty(t,\"createMode\",{enumerable:!0,get:function(){return Tt.createMode}}),Object.defineProperty(t,\"createProd\",{enumerable:!0,get:function(){return It.createProd}}),Object.defineProperty(t,\"createFormat\",{enumerable:!0,get:function(){return Bt.createFormat}}),Object.defineProperty(t,\"createBin\",{enumerable:!0,get:function(){return Rt.createBin}}),Object.defineProperty(t,\"createOct\",{enumerable:!0,get:function(){return qt.createOct}}),Object.defineProperty(t,\"createHex\",{enumerable:!0,get:function(){return Ft.createHex}}),Object.defineProperty(t,\"createPrint\",{enumerable:!0,get:function(){return Ut.createPrint}}),Object.defineProperty(t,\"createTo\",{enumerable:!0,get:function(){return Lt.createTo}}),Object.defineProperty(t,\"createIsPrime\",{enumerable:!0,get:function(){return Ht.createIsPrime}}),Object.defineProperty(t,\"createNumeric\",{enumerable:!0,get:function(){return Zt.createNumeric}}),Object.defineProperty(t,\"createDivideScalar\",{enumerable:!0,get:function(){return Vt.createDivideScalar}}),Object.defineProperty(t,\"createPow\",{enumerable:!0,get:function(){return Wt.createPow}}),Object.defineProperty(t,\"createRound\",{enumerable:!0,get:function(){return Gt.createRound}}),Object.defineProperty(t,\"createLog\",{enumerable:!0,get:function(){return $t.createLog}}),Object.defineProperty(t,\"createLog1p\",{enumerable:!0,get:function(){return Qt.createLog1p}}),Object.defineProperty(t,\"createNthRoots\",{enumerable:!0,get:function(){return Xt.createNthRoots}}),Object.defineProperty(t,\"createDotPow\",{enumerable:!0,get:function(){return Yt.createDotPow}}),Object.defineProperty(t,\"createDotDivide\",{enumerable:!0,get:function(){return Jt.createDotDivide}}),Object.defineProperty(t,\"createLsolve\",{enumerable:!0,get:function(){return en.createLsolve}}),Object.defineProperty(t,\"createUsolve\",{enumerable:!0,get:function(){return tn.createUsolve}}),Object.defineProperty(t,\"createLsolveAll\",{enumerable:!0,get:function(){return nn.createLsolveAll}}),Object.defineProperty(t,\"createUsolveAll\",{enumerable:!0,get:function(){return rn.createUsolveAll}}),Object.defineProperty(t,\"createLeftShift\",{enumerable:!0,get:function(){return on.createLeftShift}}),Object.defineProperty(t,\"createRightArithShift\",{enumerable:!0,get:function(){return sn.createRightArithShift}}),Object.defineProperty(t,\"createRightLogShift\",{enumerable:!0,get:function(){return cn.createRightLogShift}}),Object.defineProperty(t,\"createAnd\",{enumerable:!0,get:function(){return un.createAnd}}),Object.defineProperty(t,\"createCompare\",{enumerable:!0,get:function(){return ln.createCompare}}),Object.defineProperty(t,\"createCompareNatural\",{enumerable:!0,get:function(){return fn.createCompareNatural}}),Object.defineProperty(t,\"createCompareText\",{enumerable:!0,get:function(){return pn.createCompareText}}),Object.defineProperty(t,\"createEqual\",{enumerable:!0,get:function(){return mn.createEqual}}),Object.defineProperty(t,\"createEqualText\",{enumerable:!0,get:function(){return hn.createEqualText}}),Object.defineProperty(t,\"createSmaller\",{enumerable:!0,get:function(){return yn.createSmaller}}),Object.defineProperty(t,\"createSmallerEq\",{enumerable:!0,get:function(){return vn.createSmallerEq}}),Object.defineProperty(t,\"createLarger\",{enumerable:!0,get:function(){return gn.createLarger}}),Object.defineProperty(t,\"createLargerEq\",{enumerable:!0,get:function(){return bn.createLargerEq}}),Object.defineProperty(t,\"createDeepEqual\",{enumerable:!0,get:function(){return xn.createDeepEqual}}),Object.defineProperty(t,\"createUnequal\",{enumerable:!0,get:function(){return Dn.createUnequal}}),Object.defineProperty(t,\"createPartitionSelect\",{enumerable:!0,get:function(){return _n.createPartitionSelect}}),Object.defineProperty(t,\"createSort\",{enumerable:!0,get:function(){return wn.createSort}}),Object.defineProperty(t,\"createMax\",{enumerable:!0,get:function(){return Nn.createMax}}),Object.defineProperty(t,\"createMin\",{enumerable:!0,get:function(){return Mn.createMin}}),Object.defineProperty(t,\"createImmutableDenseMatrixClass\",{enumerable:!0,get:function(){return On.createImmutableDenseMatrixClass}}),Object.defineProperty(t,\"createIndexClass\",{enumerable:!0,get:function(){return Sn.createIndexClass}}),Object.defineProperty(t,\"createFibonacciHeapClass\",{enumerable:!0,get:function(){return Pn.createFibonacciHeapClass}}),Object.defineProperty(t,\"createSpaClass\",{enumerable:!0,get:function(){return jn.createSpaClass}}),Object.defineProperty(t,\"createUnitClass\",{enumerable:!0,get:function(){return En.createUnitClass}}),Object.defineProperty(t,\"createUnitFunction\",{enumerable:!0,get:function(){return Cn.createUnitFunction}}),Object.defineProperty(t,\"createSparse\",{enumerable:!0,get:function(){return Tn.createSparse}}),Object.defineProperty(t,\"createCreateUnit\",{enumerable:!0,get:function(){return kn.createCreateUnit}}),Object.defineProperty(t,\"createAcos\",{enumerable:!0,get:function(){return In.createAcos}}),Object.defineProperty(t,\"createAcosh\",{enumerable:!0,get:function(){return Bn.createAcosh}}),Object.defineProperty(t,\"createAcot\",{enumerable:!0,get:function(){return zn.createAcot}}),Object.defineProperty(t,\"createAcoth\",{enumerable:!0,get:function(){return Rn.createAcoth}}),Object.defineProperty(t,\"createAcsc\",{enumerable:!0,get:function(){return qn.createAcsc}}),Object.defineProperty(t,\"createAcsch\",{enumerable:!0,get:function(){return Fn.createAcsch}}),Object.defineProperty(t,\"createAsec\",{enumerable:!0,get:function(){return Un.createAsec}}),Object.defineProperty(t,\"createAsech\",{enumerable:!0,get:function(){return Ln.createAsech}}),Object.defineProperty(t,\"createAsin\",{enumerable:!0,get:function(){return Hn.createAsin}}),Object.defineProperty(t,\"createAsinh\",{enumerable:!0,get:function(){return Zn.createAsinh}}),Object.defineProperty(t,\"createAtan\",{enumerable:!0,get:function(){return Vn.createAtan}}),Object.defineProperty(t,\"createAtan2\",{enumerable:!0,get:function(){return Wn.createAtan2}}),Object.defineProperty(t,\"createAtanh\",{enumerable:!0,get:function(){return Gn.createAtanh}}),Object.defineProperty(t,\"createCos\",{enumerable:!0,get:function(){return $n.createCos}}),Object.defineProperty(t,\"createCosh\",{enumerable:!0,get:function(){return Qn.createCosh}}),Object.defineProperty(t,\"createCot\",{enumerable:!0,get:function(){return Xn.createCot}}),Object.defineProperty(t,\"createCoth\",{enumerable:!0,get:function(){return Yn.createCoth}}),Object.defineProperty(t,\"createCsc\",{enumerable:!0,get:function(){return Jn.createCsc}}),Object.defineProperty(t,\"createCsch\",{enumerable:!0,get:function(){return Kn.createCsch}}),Object.defineProperty(t,\"createSec\",{enumerable:!0,get:function(){return er.createSec}}),Object.defineProperty(t,\"createSech\",{enumerable:!0,get:function(){return tr.createSech}}),Object.defineProperty(t,\"createSin\",{enumerable:!0,get:function(){return nr.createSin}}),Object.defineProperty(t,\"createSinh\",{enumerable:!0,get:function(){return rr.createSinh}}),Object.defineProperty(t,\"createTan\",{enumerable:!0,get:function(){return ir.createTan}}),Object.defineProperty(t,\"createTanh\",{enumerable:!0,get:function(){return ar.createTanh}}),Object.defineProperty(t,\"createSetCartesian\",{enumerable:!0,get:function(){return or.createSetCartesian}}),Object.defineProperty(t,\"createSetDifference\",{enumerable:!0,get:function(){return sr.createSetDifference}}),Object.defineProperty(t,\"createSetDistinct\",{enumerable:!0,get:function(){return cr.createSetDistinct}}),Object.defineProperty(t,\"createSetIntersect\",{enumerable:!0,get:function(){return ur.createSetIntersect}}),Object.defineProperty(t,\"createSetIsSubset\",{enumerable:!0,get:function(){return lr.createSetIsSubset}}),Object.defineProperty(t,\"createSetMultiplicity\",{enumerable:!0,get:function(){return dr.createSetMultiplicity}}),Object.defineProperty(t,\"createSetPowerset\",{enumerable:!0,get:function(){return fr.createSetPowerset}}),Object.defineProperty(t,\"createSetSize\",{enumerable:!0,get:function(){return pr.createSetSize}}),Object.defineProperty(t,\"createSetSymDifference\",{enumerable:!0,get:function(){return mr.createSetSymDifference}}),Object.defineProperty(t,\"createSetUnion\",{enumerable:!0,get:function(){return hr.createSetUnion}}),Object.defineProperty(t,\"createAdd\",{enumerable:!0,get:function(){return yr.createAdd}}),Object.defineProperty(t,\"createHypot\",{enumerable:!0,get:function(){return vr.createHypot}}),Object.defineProperty(t,\"createNorm\",{enumerable:!0,get:function(){return gr.createNorm}}),Object.defineProperty(t,\"createDot\",{enumerable:!0,get:function(){return br.createDot}}),Object.defineProperty(t,\"createTrace\",{enumerable:!0,get:function(){return xr.createTrace}}),Object.defineProperty(t,\"createIndex\",{enumerable:!0,get:function(){return Dr.createIndex}}),Object.defineProperty(t,\"createNode\",{enumerable:!0,get:function(){return wr.createNode}}),Object.defineProperty(t,\"createAccessorNode\",{enumerable:!0,get:function(){return Or.createAccessorNode}}),Object.defineProperty(t,\"createArrayNode\",{enumerable:!0,get:function(){return Sr.createArrayNode}}),Object.defineProperty(t,\"createAssignmentNode\",{enumerable:!0,get:function(){return Ar.createAssignmentNode}}),Object.defineProperty(t,\"createBlockNode\",{enumerable:!0,get:function(){return Er.createBlockNode}}),Object.defineProperty(t,\"createConditionalNode\",{enumerable:!0,get:function(){return Cr.createConditionalNode}}),Object.defineProperty(t,\"createConstantNode\",{enumerable:!0,get:function(){return qr.createConstantNode}}),Object.defineProperty(t,\"createFunctionAssignmentNode\",{enumerable:!0,get:function(){return Fr.createFunctionAssignmentNode}}),Object.defineProperty(t,\"createIndexNode\",{enumerable:!0,get:function(){return Ur.createIndexNode}}),Object.defineProperty(t,\"createObjectNode\",{enumerable:!0,get:function(){return Lr.createObjectNode}}),Object.defineProperty(t,\"createOperatorNode\",{enumerable:!0,get:function(){return Hr.createOperatorNode}}),Object.defineProperty(t,\"createParenthesisNode\",{enumerable:!0,get:function(){return Zr.createParenthesisNode}}),Object.defineProperty(t,\"createRangeNode\",{enumerable:!0,get:function(){return Vr.createRangeNode}}),Object.defineProperty(t,\"createRelationalNode\",{enumerable:!0,get:function(){return Wr.createRelationalNode}}),Object.defineProperty(t,\"createSymbolNode\",{enumerable:!0,get:function(){return Gr.createSymbolNode}}),Object.defineProperty(t,\"createFunctionNode\",{enumerable:!0,get:function(){return $r.createFunctionNode}}),Object.defineProperty(t,\"createParse\",{enumerable:!0,get:function(){return Qr.createParse}}),Object.defineProperty(t,\"createCompile\",{enumerable:!0,get:function(){return Xr.createCompile}}),Object.defineProperty(t,\"createEvaluate\",{enumerable:!0,get:function(){return Yr.createEvaluate}}),Object.defineProperty(t,\"createParserClass\",{enumerable:!0,get:function(){return Jr.createParserClass}}),Object.defineProperty(t,\"createParser\",{enumerable:!0,get:function(){return Kr.createParser}}),Object.defineProperty(t,\"createLup\",{enumerable:!0,get:function(){return ei.createLup}}),Object.defineProperty(t,\"createQr\",{enumerable:!0,get:function(){return ti.createQr}}),Object.defineProperty(t,\"createSlu\",{enumerable:!0,get:function(){return bi.createSlu}}),Object.defineProperty(t,\"createLusolve\",{enumerable:!0,get:function(){return Di.createLusolve}}),Object.defineProperty(t,\"createHelpClass\",{enumerable:!0,get:function(){return _i.createHelpClass}}),Object.defineProperty(t,\"createChainClass\",{enumerable:!0,get:function(){return wi.createChainClass}}),Object.defineProperty(t,\"createHelp\",{enumerable:!0,get:function(){return Pc.createHelp}}),Object.defineProperty(t,\"createChain\",{enumerable:!0,get:function(){return jc.createChain}}),Object.defineProperty(t,\"createDet\",{enumerable:!0,get:function(){return Ac.createDet}}),Object.defineProperty(t,\"createInv\",{enumerable:!0,get:function(){return Ec.createInv}}),Object.defineProperty(t,\"createEigs\",{enumerable:!0,get:function(){return Cc.createEigs}}),Object.defineProperty(t,\"createExpm\",{enumerable:!0,get:function(){return Tc.createExpm}}),Object.defineProperty(t,\"createSqrtm\",{enumerable:!0,get:function(){return kc.createSqrtm}}),Object.defineProperty(t,\"createDivide\",{enumerable:!0,get:function(){return Ic.createDivide}}),Object.defineProperty(t,\"createDistance\",{enumerable:!0,get:function(){return Bc.createDistance}}),Object.defineProperty(t,\"createIntersect\",{enumerable:!0,get:function(){return zc.createIntersect}}),Object.defineProperty(t,\"createSum\",{enumerable:!0,get:function(){return Rc.createSum}}),Object.defineProperty(t,\"createMean\",{enumerable:!0,get:function(){return qc.createMean}}),Object.defineProperty(t,\"createMedian\",{enumerable:!0,get:function(){return Fc.createMedian}}),Object.defineProperty(t,\"createMad\",{enumerable:!0,get:function(){return Uc.createMad}}),Object.defineProperty(t,\"createVariance\",{enumerable:!0,get:function(){return Lc.createVariance}}),Object.defineProperty(t,\"createQuantileSeq\",{enumerable:!0,get:function(){return Hc.createQuantileSeq}}),Object.defineProperty(t,\"createStd\",{enumerable:!0,get:function(){return Zc.createStd}}),Object.defineProperty(t,\"createCombinations\",{enumerable:!0,get:function(){return Vc.createCombinations}}),Object.defineProperty(t,\"createCombinationsWithRep\",{enumerable:!0,get:function(){return Wc.createCombinationsWithRep}}),Object.defineProperty(t,\"createGamma\",{enumerable:!0,get:function(){return Gc.createGamma}}),Object.defineProperty(t,\"createFactorial\",{enumerable:!0,get:function(){return $c.createFactorial}}),Object.defineProperty(t,\"createKldivergence\",{enumerable:!0,get:function(){return Qc.createKldivergence}}),Object.defineProperty(t,\"createMultinomial\",{enumerable:!0,get:function(){return Xc.createMultinomial}}),Object.defineProperty(t,\"createPermutations\",{enumerable:!0,get:function(){return Yc.createPermutations}}),Object.defineProperty(t,\"createPickRandom\",{enumerable:!0,get:function(){return eu.createPickRandom}}),Object.defineProperty(t,\"createRandom\",{enumerable:!0,get:function(){return nu.createRandom}}),Object.defineProperty(t,\"createRandomInt\",{enumerable:!0,get:function(){return ru.createRandomInt}}),Object.defineProperty(t,\"createStirlingS2\",{enumerable:!0,get:function(){return iu.createStirlingS2}}),Object.defineProperty(t,\"createBellNumbers\",{enumerable:!0,get:function(){return au.createBellNumbers}}),Object.defineProperty(t,\"createCatalan\",{enumerable:!0,get:function(){return ou.createCatalan}}),Object.defineProperty(t,\"createComposition\",{enumerable:!0,get:function(){return su.createComposition}}),Object.defineProperty(t,\"createSimplify\",{enumerable:!0,get:function(){return fu.createSimplify}}),Object.defineProperty(t,\"createDerivative\",{enumerable:!0,get:function(){return pu.createDerivative}}),Object.defineProperty(t,\"createRationalize\",{enumerable:!0,get:function(){return mu.createRationalize}}),Object.defineProperty(t,\"createReviver\",{enumerable:!0,get:function(){return hu.createReviver}}),Object.defineProperty(t,\"createReplacer\",{enumerable:!0,get:function(){return yu.createReplacer}}),Object.defineProperty(t,\"createE\",{enumerable:!0,get:function(){return gu.createE}}),Object.defineProperty(t,\"createUppercaseE\",{enumerable:!0,get:function(){return gu.createUppercaseE}}),Object.defineProperty(t,\"createFalse\",{enumerable:!0,get:function(){return gu.createFalse}}),Object.defineProperty(t,\"createI\",{enumerable:!0,get:function(){return gu.createI}}),Object.defineProperty(t,\"createInfinity\",{enumerable:!0,get:function(){return gu.createInfinity}}),Object.defineProperty(t,\"createLN10\",{enumerable:!0,get:function(){return gu.createLN10}}),Object.defineProperty(t,\"createLN2\",{enumerable:!0,get:function(){return gu.createLN2}}),Object.defineProperty(t,\"createLOG10E\",{enumerable:!0,get:function(){return gu.createLOG10E}}),Object.defineProperty(t,\"createLOG2E\",{enumerable:!0,get:function(){return gu.createLOG2E}}),Object.defineProperty(t,\"createNaN\",{enumerable:!0,get:function(){return gu.createNaN}}),Object.defineProperty(t,\"createNull\",{enumerable:!0,get:function(){return gu.createNull}}),Object.defineProperty(t,\"createPhi\",{enumerable:!0,get:function(){return gu.createPhi}}),Object.defineProperty(t,\"createPi\",{enumerable:!0,get:function(){return gu.createPi}}),Object.defineProperty(t,\"createUppercasePi\",{enumerable:!0,get:function(){return gu.createUppercasePi}}),Object.defineProperty(t,\"createSQRT1_2\",{enumerable:!0,get:function(){return gu.createSQRT1_2}}),Object.defineProperty(t,\"createSQRT2\",{enumerable:!0,get:function(){return gu.createSQRT2}}),Object.defineProperty(t,\"createTau\",{enumerable:!0,get:function(){return gu.createTau}}),Object.defineProperty(t,\"createTrue\",{enumerable:!0,get:function(){return gu.createTrue}}),Object.defineProperty(t,\"createVersion\",{enumerable:!0,get:function(){return gu.createVersion}}),Object.defineProperty(t,\"createAtomicMass\",{enumerable:!0,get:function(){return bu.createAtomicMass}}),Object.defineProperty(t,\"createAvogadro\",{enumerable:!0,get:function(){return bu.createAvogadro}}),Object.defineProperty(t,\"createBohrMagneton\",{enumerable:!0,get:function(){return bu.createBohrMagneton}}),Object.defineProperty(t,\"createBohrRadius\",{enumerable:!0,get:function(){return bu.createBohrRadius}}),Object.defineProperty(t,\"createBoltzmann\",{enumerable:!0,get:function(){return bu.createBoltzmann}}),Object.defineProperty(t,\"createClassicalElectronRadius\",{enumerable:!0,get:function(){return bu.createClassicalElectronRadius}}),Object.defineProperty(t,\"createConductanceQuantum\",{enumerable:!0,get:function(){return bu.createConductanceQuantum}}),Object.defineProperty(t,\"createCoulomb\",{enumerable:!0,get:function(){return bu.createCoulomb}}),Object.defineProperty(t,\"createDeuteronMass\",{enumerable:!0,get:function(){return bu.createDeuteronMass}}),Object.defineProperty(t,\"createEfimovFactor\",{enumerable:!0,get:function(){return bu.createEfimovFactor}}),Object.defineProperty(t,\"createElectricConstant\",{enumerable:!0,get:function(){return bu.createElectricConstant}}),Object.defineProperty(t,\"createElectronMass\",{enumerable:!0,get:function(){return bu.createElectronMass}}),Object.defineProperty(t,\"createElementaryCharge\",{enumerable:!0,get:function(){return bu.createElementaryCharge}}),Object.defineProperty(t,\"createFaraday\",{enumerable:!0,get:function(){return bu.createFaraday}}),Object.defineProperty(t,\"createFermiCoupling\",{enumerable:!0,get:function(){return bu.createFermiCoupling}}),Object.defineProperty(t,\"createFineStructure\",{enumerable:!0,get:function(){return bu.createFineStructure}}),Object.defineProperty(t,\"createFirstRadiation\",{enumerable:!0,get:function(){return bu.createFirstRadiation}}),Object.defineProperty(t,\"createGasConstant\",{enumerable:!0,get:function(){return bu.createGasConstant}}),Object.defineProperty(t,\"createGravitationConstant\",{enumerable:!0,get:function(){return bu.createGravitationConstant}}),Object.defineProperty(t,\"createGravity\",{enumerable:!0,get:function(){return bu.createGravity}}),Object.defineProperty(t,\"createHartreeEnergy\",{enumerable:!0,get:function(){return bu.createHartreeEnergy}}),Object.defineProperty(t,\"createInverseConductanceQuantum\",{enumerable:!0,get:function(){return bu.createInverseConductanceQuantum}}),Object.defineProperty(t,\"createKlitzing\",{enumerable:!0,get:function(){return bu.createKlitzing}}),Object.defineProperty(t,\"createLoschmidt\",{enumerable:!0,get:function(){return bu.createLoschmidt}}),Object.defineProperty(t,\"createMagneticConstant\",{enumerable:!0,get:function(){return bu.createMagneticConstant}}),Object.defineProperty(t,\"createMagneticFluxQuantum\",{enumerable:!0,get:function(){return bu.createMagneticFluxQuantum}}),Object.defineProperty(t,\"createMolarMass\",{enumerable:!0,get:function(){return bu.createMolarMass}}),Object.defineProperty(t,\"createMolarMassC12\",{enumerable:!0,get:function(){return bu.createMolarMassC12}}),Object.defineProperty(t,\"createMolarPlanckConstant\",{enumerable:!0,get:function(){return bu.createMolarPlanckConstant}}),Object.defineProperty(t,\"createMolarVolume\",{enumerable:!0,get:function(){return bu.createMolarVolume}}),Object.defineProperty(t,\"createNeutronMass\",{enumerable:!0,get:function(){return bu.createNeutronMass}}),Object.defineProperty(t,\"createNuclearMagneton\",{enumerable:!0,get:function(){return bu.createNuclearMagneton}}),Object.defineProperty(t,\"createPlanckCharge\",{enumerable:!0,get:function(){return bu.createPlanckCharge}}),Object.defineProperty(t,\"createPlanckConstant\",{enumerable:!0,get:function(){return bu.createPlanckConstant}}),Object.defineProperty(t,\"createPlanckLength\",{enumerable:!0,get:function(){return bu.createPlanckLength}}),Object.defineProperty(t,\"createPlanckMass\",{enumerable:!0,get:function(){return bu.createPlanckMass}}),Object.defineProperty(t,\"createPlanckTemperature\",{enumerable:!0,get:function(){return bu.createPlanckTemperature}}),Object.defineProperty(t,\"createPlanckTime\",{enumerable:!0,get:function(){return bu.createPlanckTime}}),Object.defineProperty(t,\"createProtonMass\",{enumerable:!0,get:function(){return bu.createProtonMass}}),Object.defineProperty(t,\"createQuantumOfCirculation\",{enumerable:!0,get:function(){return bu.createQuantumOfCirculation}}),Object.defineProperty(t,\"createReducedPlanckConstant\",{enumerable:!0,get:function(){return bu.createReducedPlanckConstant}}),Object.defineProperty(t,\"createRydberg\",{enumerable:!0,get:function(){return bu.createRydberg}}),Object.defineProperty(t,\"createSackurTetrode\",{enumerable:!0,get:function(){return bu.createSackurTetrode}}),Object.defineProperty(t,\"createSecondRadiation\",{enumerable:!0,get:function(){return bu.createSecondRadiation}}),Object.defineProperty(t,\"createSpeedOfLight\",{enumerable:!0,get:function(){return bu.createSpeedOfLight}}),Object.defineProperty(t,\"createStefanBoltzmann\",{enumerable:!0,get:function(){return bu.createStefanBoltzmann}}),Object.defineProperty(t,\"createThomsonCrossSection\",{enumerable:!0,get:function(){return bu.createThomsonCrossSection}}),Object.defineProperty(t,\"createVacuumImpedance\",{enumerable:!0,get:function(){return bu.createVacuumImpedance}}),Object.defineProperty(t,\"createWeakMixingAngle\",{enumerable:!0,get:function(){return bu.createWeakMixingAngle}}),Object.defineProperty(t,\"createWienDisplacement\",{enumerable:!0,get:function(){return bu.createWienDisplacement}}),Object.defineProperty(t,\"createApplyTransform\",{enumerable:!0,get:function(){return xu.createApplyTransform}}),Object.defineProperty(t,\"createColumnTransform\",{enumerable:!0,get:function(){return Du.createColumnTransform}}),Object.defineProperty(t,\"createFilterTransform\",{enumerable:!0,get:function(){return wu.createFilterTransform}}),Object.defineProperty(t,\"createForEachTransform\",{enumerable:!0,get:function(){return Nu.createForEachTransform}}),Object.defineProperty(t,\"createIndexTransform\",{enumerable:!0,get:function(){return Mu.createIndexTransform}}),Object.defineProperty(t,\"createMapTransform\",{enumerable:!0,get:function(){return Ou.createMapTransform}}),Object.defineProperty(t,\"createMaxTransform\",{enumerable:!0,get:function(){return Su.createMaxTransform}}),Object.defineProperty(t,\"createMeanTransform\",{enumerable:!0,get:function(){return Pu.createMeanTransform}}),Object.defineProperty(t,\"createMinTransform\",{enumerable:!0,get:function(){return ju.createMinTransform}}),Object.defineProperty(t,\"createRangeTransform\",{enumerable:!0,get:function(){return Au.createRangeTransform}}),Object.defineProperty(t,\"createRowTransform\",{enumerable:!0,get:function(){return Eu.createRowTransform}}),Object.defineProperty(t,\"createSubsetTransform\",{enumerable:!0,get:function(){return Cu.createSubsetTransform}}),Object.defineProperty(t,\"createConcatTransform\",{enumerable:!0,get:function(){return Tu.createConcatTransform}}),Object.defineProperty(t,\"createDiffTransform\",{enumerable:!0,get:function(){return ku.createDiffTransform}}),Object.defineProperty(t,\"createStdTransform\",{enumerable:!0,get:function(){return Iu.createStdTransform}}),Object.defineProperty(t,\"createSumTransform\",{enumerable:!0,get:function(){return Bu.createSumTransform}}),Object.defineProperty(t,\"createVarianceTransform\",{enumerable:!0,get:function(){return zu.createVarianceTransform}})})),qu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.matrix=t.SparseMatrix=t.isNegative=t.SQRT2=t.random=t.combinationsWithRep=t.sin=t.csc=t.cos=t.asinh=t.acsch=t.acosh=t.bin=t.mode=t.getMatrixDataType=t.conj=t.sqrt=t.log2=t.exp=t.addScalar=t.unaryMinus=t.fraction=t.string=t.typeOf=t.hasNumericValue=t.clone=t.LN2=t.randomInt=t.pickRandom=t.combinations=t.tanh=t.sinh=t.sech=t.csch=t.coth=t.cosh=t.atanh=t.atan=t.asin=t.asec=t.acsc=t.acot=t.acos=t.isPrime=t.print=t.oct=t.format=t.erf=t.map=t.forEach=t.filter=t.not=t.im=t.arg=t.bitNot=t.square=t.sign=t.multiplyScalar=t.log10=t.expm1=t.cube=t.apply=t.unaryPlus=t.splitUnit=t.complex=t.boolean=t.number=t.equalScalar=t.isNaN=t.isPositive=t.isNumeric=t.isInteger=t.typed=t.phi=t.DenseMatrix=t.version=t.LOG2E=t._Infinity=t.e=t.Fraction=t.weakMixingAngle=t.sackurTetrode=t.fineStructure=t.efimovFactor=t.tau=t.SQRT1_2=t.pi=t._NaN=t.LOG10E=t.LN10=t.i=t.replacer=t.Matrix=t.BigNumber=t._true=t._null=t._false=t.Range=t.Complex=t.ResultSet=void 0,t.setUnion=t.Spa=t.lsolveAll=t.lsolve=t.nthRoots=t.divideScalar=t.xor=t.setIsSubset=t.deepEqual=t.ctranspose=t.column=t.fix=t.setSymDifference=t.setCartesian=t.max=t.equal=t.prod=t.row=t.range=t.cross=t.subtract=t.ceil=t.permutations=t.factorial=t.sum=t.index=t.setPowerset=t.setDistinct=t.cot=t.min=t.sort=t.smallerEq=t.and=t.numeric=t.transpose=t.kron=t.bitOr=t.lcm=t.bignumber=t.gamma=t.quantileSeq=t.trace=t.setSize=t.setMultiplicity=t.setIntersect=t.setDifference=t.tan=t.asech=t.Index=t.partitionSelect=t.largerEq=t.equalText=t.compareNatural=t.rightArithShift=t.dotPow=t.pow=t.to=t.squeeze=t.resize=t.flatten=t.re=t.dotMultiply=t.multiply=t.floor=t.abs=t.isZero=t.composition=t.dot=t.add=t.sec=t.atan2=t.acoth=t.sparse=t.FibonacciHeap=t.ImmutableDenseMatrix=t.unequal=t.larger=t.smaller=t.compareText=t.compare=t.rightLogShift=t.leftShift=t.round=t.hex=t.zeros=t.subset=t.size=t.reshape=t.ones=t.identity=t.diag=t.concat=t.or=t.bitXor=t.bitAnd=t.xgcd=t.nthRoot=t.mod=t.gcd=t.cbrt=void 0,t.planckConstant=t.gasConstant=t.unit=t.rydberg=t.magneticFluxQuantum=t.coulomb=t.mad=t.rotate=t.thomsonCrossSection=t.planckTime=t.molarVolume=t.inverseConductanceQuantum=t.elementaryCharge=t.bohrRadius=t.median=t.rotationMatrix=t.wienDisplacement=t.speedOfLight=t.quantumOfCirculation=t.planckMass=t.nuclearMagneton=t.molarMassC12=t.loschmidt=t.gravity=t.fermiCoupling=t.electricConstant=t.classicalElectronRadius=t.avogadro=t.multinomial=t.sqrtm=t.lusolve=t.norm=t.usolve=t.vacuumImpedance=t.stefanBoltzmann=t.secondRadiation=t.reducedPlanckConstant=t.protonMass=t.planckTemperature=t.planckLength=t.planckCharge=t.neutronMass=t.molarPlanckConstant=t.molarMass=t.magneticConstant=t.klitzing=t.hartreeEnergy=t.gravitationConstant=t.firstRadiation=t.faraday=t.electronMass=t.deuteronMass=t.conductanceQuantum=t.boltzmann=t.bohrMagneton=t.atomicMass=t.std=t.intersect=t.eigs=t.createUnit=t.Unit=t.log1p=t.bellNumbers=t.kldivergence=t.variance=t.mean=t.divide=t.expm=t.inv=t.qr=t.hypot=t.usolveAll=t.dotDivide=t.log=t.diff=t.catalan=t.stirlingS2=t.distance=t.det=t.slu=t.lup=void 0;var n=(0,Ru.createResultSet)({});t.ResultSet=n;var r=(0,Ru.createComplexClass)({});t.Complex=r;var i=(0,Ru.createRangeClass)({});t.Range=i;var a=(0,Ru.createFalse)({});t._false=a;var o=(0,Ru.createNull)({});t._null=o;var c=(0,Ru.createTrue)({});t._true=c;var u=(0,Ru.createBigNumberClass)({config:s.config});t.BigNumber=u;var l=(0,Ru.createMatrixClass)({});t.Matrix=l;var d=(0,Ru.createReplacer)({});t.replacer=d;var f=(0,Ru.createI)({Complex:r});t.i=f;var p=(0,Ru.createLN10)({BigNumber:u,config:s.config});t.LN10=p;var m=(0,Ru.createLOG10E)({BigNumber:u,config:s.config});t.LOG10E=m;var h=(0,Ru.createNaN)({BigNumber:u,config:s.config});t._NaN=h;var y=(0,Ru.createPi)({BigNumber:u,config:s.config});t.pi=y;var v=(0,Ru.createSQRT1_2)({BigNumber:u,config:s.config});t.SQRT1_2=v;var g=(0,Ru.createTau)({BigNumber:u,config:s.config});t.tau=g;var b=(0,Ru.createEfimovFactor)({BigNumber:u,config:s.config});t.efimovFactor=b;var x=(0,Ru.createFineStructure)({BigNumber:u,config:s.config});t.fineStructure=x;var D=(0,Ru.createSackurTetrode)({BigNumber:u,config:s.config});t.sackurTetrode=D;var _=(0,Ru.createWeakMixingAngle)({BigNumber:u,config:s.config});t.weakMixingAngle=_;var w=(0,Ru.createFractionClass)({});t.Fraction=w;var N=(0,Ru.createE)({BigNumber:u,config:s.config});t.e=N;var M=(0,Ru.createInfinity)({BigNumber:u,config:s.config});t._Infinity=M;var O=(0,Ru.createLOG2E)({BigNumber:u,config:s.config});t.LOG2E=O;var S=(0,Ru.createVersion)({});t.version=S;var P=(0,Ru.createDenseMatrixClass)({Matrix:l});t.DenseMatrix=P;var j=(0,Ru.createPhi)({BigNumber:u,config:s.config});t.phi=j;var A=(0,Ru.createTyped)({BigNumber:u,Complex:r,DenseMatrix:P,Fraction:w});t.typed=A;var E=(0,Ru.createIsInteger)({typed:A});t.isInteger=E;var C=(0,Ru.createIsNumeric)({typed:A});t.isNumeric=C;var T=(0,Ru.createIsPositive)({typed:A});t.isPositive=T;var k=(0,Ru.createIsNaN)({typed:A});t.isNaN=k;var I=(0,Ru.createEqualScalar)({config:s.config,typed:A});t.equalScalar=I;var B=(0,Ru.createNumber)({typed:A});t.number=B;var z=(0,Ru.createBoolean)({typed:A});t.boolean=z;var R=(0,Ru.createComplex)({Complex:r,typed:A});t.complex=R;var q=(0,Ru.createSplitUnit)({typed:A});t.splitUnit=q;var F=(0,Ru.createUnaryPlus)({BigNumber:u,config:s.config,typed:A});t.unaryPlus=F;var U=(0,Ru.createApply)({isInteger:E,typed:A});t.apply=U;var L=(0,Ru.createCube)({typed:A});t.cube=L;var H=(0,Ru.createExpm1)({Complex:r,typed:A});t.expm1=H;var Z=(0,Ru.createLog10)({Complex:r,config:s.config,typed:A});t.log10=Z;var V=(0,Ru.createMultiplyScalar)({typed:A});t.multiplyScalar=V;var W=(0,Ru.createSign)({BigNumber:u,Fraction:w,complex:R,typed:A});t.sign=W;var G=(0,Ru.createSquare)({typed:A});t.square=G;var $=(0,Ru.createBitNot)({typed:A});t.bitNot=$;var Q=(0,Ru.createArg)({typed:A});t.arg=Q;var X=(0,Ru.createIm)({typed:A});t.im=X;var Y=(0,Ru.createNot)({typed:A});t.not=Y;var J=(0,Ru.createFilter)({typed:A});t.filter=J;var K=(0,Ru.createForEach)({typed:A});t.forEach=K;var ee=(0,Ru.createMap)({typed:A});t.map=ee;var te=(0,Ru.createErf)({typed:A});t.erf=te;var ne=(0,Ru.createFormat)({typed:A});t.format=ne;var re=(0,Ru.createOct)({typed:A});t.oct=re;var ie=(0,Ru.createPrint)({typed:A});t.print=ie;var ae=(0,Ru.createIsPrime)({typed:A});t.isPrime=ae;var oe=(0,Ru.createAcos)({Complex:r,config:s.config,typed:A});t.acos=oe;var se=(0,Ru.createAcot)({BigNumber:u,typed:A});t.acot=se;var ce=(0,Ru.createAcsc)({BigNumber:u,Complex:r,config:s.config,typed:A});t.acsc=ce;var ue=(0,Ru.createAsec)({BigNumber:u,Complex:r,config:s.config,typed:A});t.asec=ue;var le=(0,Ru.createAsin)({Complex:r,config:s.config,typed:A});t.asin=le;var de=(0,Ru.createAtan)({typed:A});t.atan=de;var fe=(0,Ru.createAtanh)({Complex:r,config:s.config,typed:A});t.atanh=fe;var pe=(0,Ru.createCosh)({typed:A});t.cosh=pe;var me=(0,Ru.createCoth)({BigNumber:u,typed:A});t.coth=me;var he=(0,Ru.createCsch)({BigNumber:u,typed:A});t.csch=he;var ye=(0,Ru.createSech)({BigNumber:u,typed:A});t.sech=ye;var ve=(0,Ru.createSinh)({typed:A});t.sinh=ve;var ge=(0,Ru.createTanh)({typed:A});t.tanh=ge;var be=(0,Ru.createCombinations)({typed:A});t.combinations=be;var xe=(0,Ru.createPickRandom)({config:s.config,typed:A});t.pickRandom=xe;var De=(0,Ru.createRandomInt)({config:s.config,typed:A});t.randomInt=De;var _e=(0,Ru.createLN2)({BigNumber:u,config:s.config});t.LN2=_e;var we=(0,Ru.createClone)({typed:A});t.clone=we;var Ne=(0,Ru.createHasNumericValue)({isNumeric:C,typed:A});t.hasNumericValue=Ne;var Me=(0,Ru.createTypeOf)({typed:A});t.typeOf=Me;var Oe=(0,Ru.createString)({typed:A});t.string=Oe;var Se=(0,Ru.createFraction)({Fraction:w,typed:A});t.fraction=Se;var Pe=(0,Ru.createUnaryMinus)({typed:A});t.unaryMinus=Pe;var je=(0,Ru.createAddScalar)({typed:A});t.addScalar=je;var Ae=(0,Ru.createExp)({typed:A});t.exp=Ae;var Ee=(0,Ru.createLog2)({Complex:r,config:s.config,typed:A});t.log2=Ee;var Ce=(0,Ru.createSqrt)({Complex:r,config:s.config,typed:A});t.sqrt=Ce;var Te=(0,Ru.createConj)({typed:A});t.conj=Te;var ke=(0,Ru.createGetMatrixDataType)({typed:A});t.getMatrixDataType=ke;var Ie=(0,Ru.createMode)({isNaN:k,isNumeric:C,typed:A});t.mode=Ie;var Be=(0,Ru.createBin)({typed:A});t.bin=Be;var ze=(0,Ru.createAcosh)({Complex:r,config:s.config,typed:A});t.acosh=ze;var Re=(0,Ru.createAcsch)({BigNumber:u,typed:A});t.acsch=Re;var qe=(0,Ru.createAsinh)({typed:A});t.asinh=qe;var Fe=(0,Ru.createCos)({typed:A});t.cos=Fe;var Ue=(0,Ru.createCsc)({BigNumber:u,typed:A});t.csc=Ue;var Le=(0,Ru.createSin)({typed:A});t.sin=Le;var He=(0,Ru.createCombinationsWithRep)({typed:A});t.combinationsWithRep=He;var Ze=(0,Ru.createRandom)({config:s.config,typed:A});t.random=Ze;var Ve=(0,Ru.createSQRT2)({BigNumber:u,config:s.config});t.SQRT2=Ve;var We=(0,Ru.createIsNegative)({typed:A});t.isNegative=We;var Ge=(0,Ru.createSparseMatrixClass)({Matrix:l,equalScalar:I,typed:A});t.SparseMatrix=Ge;var $e=(0,Ru.createMatrix)({DenseMatrix:P,Matrix:l,SparseMatrix:Ge,typed:A});t.matrix=$e;var Qe=(0,Ru.createCbrt)({BigNumber:u,Complex:r,Fraction:w,config:s.config,isNegative:We,matrix:$e,typed:A,unaryMinus:Pe});t.cbrt=Qe;var Xe=(0,Ru.createGcd)({BigNumber:u,DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.gcd=Xe;var Ye=(0,Ru.createMod)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.mod=Ye;var Je=(0,Ru.createNthRoot)({BigNumber:u,equalScalar:I,matrix:$e,typed:A});t.nthRoot=Je;var Ke=(0,Ru.createXgcd)({BigNumber:u,config:s.config,matrix:$e,typed:A});t.xgcd=Ke;var et=(0,Ru.createBitAnd)({equalScalar:I,matrix:$e,typed:A});t.bitAnd=et;var tt=(0,Ru.createBitXor)({DenseMatrix:P,matrix:$e,typed:A});t.bitXor=tt;var nt=(0,Ru.createOr)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.or=nt;var rt=(0,Ru.createConcat)({isInteger:E,matrix:$e,typed:A});t.concat=rt;var it=(0,Ru.createDiag)({DenseMatrix:P,SparseMatrix:Ge,matrix:$e,typed:A});t.diag=it;var at=(0,Ru.createIdentity)({BigNumber:u,DenseMatrix:P,SparseMatrix:Ge,config:s.config,matrix:$e,typed:A});t.identity=at;var ot=(0,Ru.createOnes)({BigNumber:u,config:s.config,matrix:$e,typed:A});t.ones=ot;var st=(0,Ru.createReshape)({isInteger:E,matrix:$e,typed:A});t.reshape=st;var ct=(0,Ru.createSize)({matrix:$e,config:s.config,typed:A});t.size=ct;var ut=(0,Ru.createSubset)({matrix:$e,typed:A});t.subset=ut;var lt=(0,Ru.createZeros)({BigNumber:u,config:s.config,matrix:$e,typed:A});t.zeros=lt;var dt=(0,Ru.createHex)({typed:A});t.hex=dt;var ft=(0,Ru.createRound)({BigNumber:u,DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.round=ft;var pt=(0,Ru.createLeftShift)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.leftShift=pt;var mt=(0,Ru.createRightLogShift)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.rightLogShift=mt;var ht=(0,Ru.createCompare)({BigNumber:u,DenseMatrix:P,Fraction:w,config:s.config,equalScalar:I,matrix:$e,typed:A});t.compare=ht;var yt=(0,Ru.createCompareText)({matrix:$e,typed:A});t.compareText=yt;var vt=(0,Ru.createSmaller)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.smaller=vt;var gt=(0,Ru.createLarger)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.larger=gt;var bt=(0,Ru.createUnequal)({DenseMatrix:P,config:s.config,equalScalar:I,matrix:$e,typed:A});t.unequal=bt;var xt=(0,Ru.createImmutableDenseMatrixClass)({DenseMatrix:P,smaller:vt});t.ImmutableDenseMatrix=xt;var Dt=(0,Ru.createFibonacciHeapClass)({larger:gt,smaller:vt});t.FibonacciHeap=Dt;var _t=(0,Ru.createSparse)({SparseMatrix:Ge,typed:A});t.sparse=_t;var wt=(0,Ru.createAcoth)({BigNumber:u,Complex:r,config:s.config,typed:A});t.acoth=wt;var Nt=(0,Ru.createAtan2)({BigNumber:u,DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.atan2=Nt;var Mt=(0,Ru.createSec)({BigNumber:u,typed:A});t.sec=Mt;var Ot=(0,Ru.createAdd)({DenseMatrix:P,SparseMatrix:Ge,addScalar:je,equalScalar:I,matrix:$e,typed:A});t.add=Ot;var St=(0,Ru.createDot)({addScalar:je,conj:Te,multiplyScalar:V,size:ct,typed:A});t.dot=St;var Pt=(0,Ru.createComposition)({addScalar:je,combinations:be,isInteger:E,isNegative:We,isPositive:T,larger:gt,typed:A});t.composition=Pt;var jt=(0,Ru.createIsZero)({typed:A});t.isZero=jt;var At=(0,Ru.createAbs)({typed:A});t.abs=At;var Et=(0,Ru.createFloor)({config:s.config,equalScalar:I,matrix:$e,round:ft,typed:A});t.floor=Et;var Ct=(0,Ru.createMultiply)({addScalar:je,dot:St,equalScalar:I,matrix:$e,multiplyScalar:V,typed:A});t.multiply=Ct;var Tt=(0,Ru.createDotMultiply)({equalScalar:I,matrix:$e,multiplyScalar:V,typed:A});t.dotMultiply=Tt;var kt=(0,Ru.createRe)({typed:A});t.re=kt;var It=(0,Ru.createFlatten)({matrix:$e,typed:A});t.flatten=It;var Bt=(0,Ru.createResize)({config:s.config,matrix:$e});t.resize=Bt;var zt=(0,Ru.createSqueeze)({matrix:$e,typed:A});t.squeeze=zt;var Rt=(0,Ru.createTo)({matrix:$e,typed:A});t.to=Rt;var qt=(0,Ru.createPow)({Complex:r,config:s.config,fraction:Se,identity:at,matrix:$e,multiply:Ct,number:B,typed:A});t.pow=qt;var Ft=(0,Ru.createDotPow)({DenseMatrix:P,equalScalar:I,matrix:$e,pow:qt,typed:A});t.dotPow=Ft;var Ut=(0,Ru.createRightArithShift)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A,zeros:lt});t.rightArithShift=Ut;var Lt=(0,Ru.createCompareNatural)({compare:ht,typed:A});t.compareNatural=Lt;var Ht=(0,Ru.createEqualText)({compareText:yt,isZero:jt,typed:A});t.equalText=Ht;var Zt=(0,Ru.createLargerEq)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.largerEq=Zt;var Vt=(0,Ru.createPartitionSelect)({compare:ht,isNaN:k,isNumeric:C,typed:A});t.partitionSelect=Vt;var Wt=(0,Ru.createIndexClass)({ImmutableDenseMatrix:xt});t.Index=Wt;var Gt=(0,Ru.createAsech)({BigNumber:u,Complex:r,config:s.config,typed:A});t.asech=Gt;var $t=(0,Ru.createTan)({typed:A});t.tan=$t;var Qt=(0,Ru.createSetDifference)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setDifference=Qt;var Xt=(0,Ru.createSetIntersect)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setIntersect=Xt;var Yt=(0,Ru.createSetMultiplicity)({Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setMultiplicity=Yt;var Jt=(0,Ru.createSetSize)({compareNatural:Lt,typed:A});t.setSize=Jt;var Kt=(0,Ru.createTrace)({add:Ot,matrix:$e,typed:A});t.trace=Kt;var en=(0,Ru.createQuantileSeq)({add:Ot,compare:ht,multiply:Ct,partitionSelect:Vt,typed:A});t.quantileSeq=en;var tn=(0,Ru.createGamma)({BigNumber:u,Complex:r,config:s.config,multiplyScalar:V,pow:qt,typed:A});t.gamma=tn;var nn=(0,Ru.createBignumber)({BigNumber:u,typed:A});t.bignumber=nn;var rn=(0,Ru.createLcm)({equalScalar:I,matrix:$e,typed:A});t.lcm=rn;var an=(0,Ru.createBitOr)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.bitOr=an;var on=(0,Ru.createKron)({matrix:$e,multiplyScalar:V,typed:A});t.kron=on;var sn=(0,Ru.createTranspose)({matrix:$e,typed:A});t.transpose=sn;var cn=(0,Ru.createNumeric)({bignumber:nn,fraction:Se,number:B});t.numeric=cn;var un=(0,Ru.createAnd)({equalScalar:I,matrix:$e,not:Y,typed:A,zeros:lt});t.and=un;var ln=(0,Ru.createSmallerEq)({DenseMatrix:P,config:s.config,matrix:$e,typed:A});t.smallerEq=ln;var dn=(0,Ru.createSort)({compare:ht,compareNatural:Lt,matrix:$e,typed:A});t.sort=dn;var fn=(0,Ru.createMin)({config:s.config,numeric:cn,smaller:vt,typed:A});t.min=fn;var pn=(0,Ru.createCot)({BigNumber:u,typed:A});t.cot=pn;var mn=(0,Ru.createSetDistinct)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setDistinct=mn;var hn=(0,Ru.createSetPowerset)({Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setPowerset=hn;var yn=(0,Ru.createIndex)({Index:Wt,typed:A});t.index=yn;var vn=(0,Ru.createSum)({add:Ot,config:s.config,numeric:cn,typed:A});t.sum=vn;var gn=(0,Ru.createFactorial)({gamma:tn,typed:A});t.factorial=gn;var bn=(0,Ru.createPermutations)({factorial:gn,typed:A});t.permutations=bn;var xn=(0,Ru.createCeil)({config:s.config,equalScalar:I,matrix:$e,round:ft,typed:A});t.ceil=xn;var Dn=(0,Ru.createSubtract)({DenseMatrix:P,addScalar:je,equalScalar:I,matrix:$e,typed:A,unaryMinus:Pe});t.subtract=Dn;var _n=(0,Ru.createCross)({matrix:$e,multiply:Ct,subtract:Dn,typed:A});t.cross=_n;var wn=(0,Ru.createRange)({bignumber:nn,matrix:$e,config:s.config,larger:gt,largerEq:Zt,smaller:vt,smallerEq:ln,typed:A});t.range=wn;var Nn=(0,Ru.createRow)({Index:Wt,matrix:$e,range:wn,typed:A});t.row=Nn;var Mn=(0,Ru.createProd)({config:s.config,multiplyScalar:V,numeric:cn,typed:A});t.prod=Mn;var On=(0,Ru.createEqual)({DenseMatrix:P,equalScalar:I,matrix:$e,typed:A});t.equal=On;var Sn=(0,Ru.createMax)({config:s.config,larger:gt,numeric:cn,typed:A});t.max=Sn;var Pn=(0,Ru.createSetCartesian)({DenseMatrix:P,Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setCartesian=Pn;var jn=(0,Ru.createSetSymDifference)({Index:Wt,concat:rt,setDifference:Qt,size:ct,subset:ut,typed:A});t.setSymDifference=jn;var An=(0,Ru.createFix)({Complex:r,ceil:xn,floor:Et,matrix:$e,typed:A});t.fix=An;var En=(0,Ru.createColumn)({Index:Wt,matrix:$e,range:wn,typed:A});t.column=En;var Cn=(0,Ru.createCtranspose)({conj:Te,transpose:sn,typed:A});t.ctranspose=Cn;var Tn=(0,Ru.createDeepEqual)({equal:On,typed:A});t.deepEqual=Tn;var kn=(0,Ru.createSetIsSubset)({Index:Wt,compareNatural:Lt,size:ct,subset:ut,typed:A});t.setIsSubset=kn;var In=(0,Ru.createXor)({DenseMatrix:P,matrix:$e,typed:A});t.xor=In;var Bn=(0,Ru.createDivideScalar)({numeric:cn,typed:A});t.divideScalar=Bn;var zn=(0,Ru.createNthRoots)({Complex:r,config:s.config,divideScalar:Bn,typed:A});t.nthRoots=zn;var Rn=(0,Ru.createLsolve)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.lsolve=Rn;var qn=(0,Ru.createLsolveAll)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.lsolveAll=qn;var Fn=(0,Ru.createSpaClass)({FibonacciHeap:Dt,addScalar:je,equalScalar:I});t.Spa=Fn;var Un=(0,Ru.createSetUnion)({Index:Wt,concat:rt,setIntersect:Xt,setSymDifference:jn,size:ct,subset:ut,typed:A});t.setUnion=Un;var Ln=(0,Ru.createLup)({DenseMatrix:P,Spa:Fn,SparseMatrix:Ge,abs:At,addScalar:je,divideScalar:Bn,equalScalar:I,larger:gt,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A,unaryMinus:Pe});t.lup=Ln;var Hn=(0,Ru.createSlu)({SparseMatrix:Ge,abs:At,add:Ot,divideScalar:Bn,larger:gt,largerEq:Zt,multiply:Ct,subtract:Dn,transpose:sn,typed:A});t.slu=Hn;var Zn=(0,Ru.createDet)({lup:Ln,matrix:$e,multiply:Ct,subtract:Dn,typed:A,unaryMinus:Pe});t.det=Zn;var Vn=(0,Ru.createDistance)({abs:At,addScalar:je,divideScalar:Bn,multiplyScalar:V,sqrt:Ce,subtract:Dn,typed:A,unaryMinus:Pe});t.distance=Vn;var Wn=(0,Ru.createStirlingS2)({addScalar:je,combinations:be,divideScalar:Bn,factorial:gn,isInteger:E,isNegative:We,larger:gt,multiplyScalar:V,pow:qt,subtract:Dn,typed:A});t.stirlingS2=Wn;var Gn=(0,Ru.createCatalan)({addScalar:je,combinations:be,divideScalar:Bn,isInteger:E,isNegative:We,multiplyScalar:V,typed:A});t.catalan=Gn;var $n=(0,Ru.createDiff)({matrix:$e,number:B,subtract:Dn,typed:A});t.diff=$n;var Qn=(0,Ru.createLog)({Complex:r,config:s.config,divideScalar:Bn,typed:A});t.log=Qn;var Xn=(0,Ru.createDotDivide)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,typed:A});t.dotDivide=Xn;var Yn=(0,Ru.createUsolveAll)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.usolveAll=Yn;var Jn=(0,Ru.createHypot)({abs:At,addScalar:je,divideScalar:Bn,isPositive:T,multiplyScalar:V,smaller:vt,sqrt:Ce,typed:A});t.hypot=Jn;var Kn=(0,Ru.createQr)({addScalar:je,complex:R,conj:Te,divideScalar:Bn,equal:On,identity:at,isZero:jt,matrix:$e,multiplyScalar:V,sign:W,sqrt:Ce,subtract:Dn,typed:A,unaryMinus:Pe,zeros:lt});t.qr=Kn;var er=(0,Ru.createInv)({abs:At,addScalar:je,det:Zn,divideScalar:Bn,identity:at,matrix:$e,multiply:Ct,typed:A,unaryMinus:Pe});t.inv=er;var tr=(0,Ru.createExpm)({abs:At,add:Ot,identity:at,inv:er,multiply:Ct,typed:A});t.expm=tr;var nr=(0,Ru.createDivide)({divideScalar:Bn,equalScalar:I,inv:er,matrix:$e,multiply:Ct,typed:A});t.divide=nr;var rr=(0,Ru.createMean)({add:Ot,divide:nr,typed:A});t.mean=rr;var ir=(0,Ru.createVariance)({add:Ot,apply:U,divide:nr,isNaN:k,multiply:Ct,subtract:Dn,typed:A});t.variance=ir;var ar=(0,Ru.createKldivergence)({divide:nr,dotDivide:Xn,isNumeric:C,log:Qn,matrix:$e,multiply:Ct,sum:vn,typed:A});t.kldivergence=ar;var or=(0,Ru.createBellNumbers)({addScalar:je,isInteger:E,isNegative:We,stirlingS2:Wn,typed:A});t.bellNumbers=or;var sr=(0,Ru.createLog1p)({Complex:r,config:s.config,divideScalar:Bn,log:Qn,typed:A});t.log1p=sr;var cr=(0,Ru.createUnitClass)({BigNumber:u,Complex:r,Fraction:w,abs:At,addScalar:je,config:s.config,divideScalar:Bn,equal:On,fix:An,format:ne,isNumeric:C,multiplyScalar:V,number:B,pow:qt,round:ft,subtract:Dn});t.Unit=cr;var ur=(0,Ru.createCreateUnit)({Unit:cr,typed:A});t.createUnit=ur;var lr=(0,Ru.createEigs)({abs:At,add:Ot,addScalar:je,atan:de,bignumber:nn,config:s.config,cos:Fe,equal:On,inv:er,matrix:$e,multiply:Ct,multiplyScalar:V,sin:Le,subtract:Dn,typed:A});t.eigs=lr;var dr=(0,Ru.createIntersect)({abs:At,add:Ot,addScalar:je,config:s.config,divideScalar:Bn,equalScalar:I,matrix:$e,multiply:Ct,multiplyScalar:V,smaller:vt,subtract:Dn,typed:A});t.intersect=dr;var fr=(0,Ru.createStd)({sqrt:Ce,typed:A,variance:ir});t.std=fr;var pr=(0,Ru.createAtomicMass)({BigNumber:u,Unit:cr,config:s.config});t.atomicMass=pr;var mr=(0,Ru.createBohrMagneton)({BigNumber:u,Unit:cr,config:s.config});t.bohrMagneton=mr;var hr=(0,Ru.createBoltzmann)({BigNumber:u,Unit:cr,config:s.config});t.boltzmann=hr;var yr=(0,Ru.createConductanceQuantum)({BigNumber:u,Unit:cr,config:s.config});t.conductanceQuantum=yr;var vr=(0,Ru.createDeuteronMass)({BigNumber:u,Unit:cr,config:s.config});t.deuteronMass=vr;var gr=(0,Ru.createElectronMass)({BigNumber:u,Unit:cr,config:s.config});t.electronMass=gr;var br=(0,Ru.createFaraday)({BigNumber:u,Unit:cr,config:s.config});t.faraday=br;var xr=(0,Ru.createFirstRadiation)({BigNumber:u,Unit:cr,config:s.config});t.firstRadiation=xr;var Dr=(0,Ru.createGravitationConstant)({BigNumber:u,Unit:cr,config:s.config});t.gravitationConstant=Dr;var _r=(0,Ru.createHartreeEnergy)({BigNumber:u,Unit:cr,config:s.config});t.hartreeEnergy=_r;var wr=(0,Ru.createKlitzing)({BigNumber:u,Unit:cr,config:s.config});t.klitzing=wr;var Nr=(0,Ru.createMagneticConstant)({BigNumber:u,Unit:cr,config:s.config});t.magneticConstant=Nr;var Mr=(0,Ru.createMolarMass)({BigNumber:u,Unit:cr,config:s.config});t.molarMass=Mr;var Or=(0,Ru.createMolarPlanckConstant)({BigNumber:u,Unit:cr,config:s.config});t.molarPlanckConstant=Or;var Sr=(0,Ru.createNeutronMass)({BigNumber:u,Unit:cr,config:s.config});t.neutronMass=Sr;var Pr=(0,Ru.createPlanckCharge)({BigNumber:u,Unit:cr,config:s.config});t.planckCharge=Pr;var jr=(0,Ru.createPlanckLength)({BigNumber:u,Unit:cr,config:s.config});t.planckLength=jr;var Ar=(0,Ru.createPlanckTemperature)({BigNumber:u,Unit:cr,config:s.config});t.planckTemperature=Ar;var Er=(0,Ru.createProtonMass)({BigNumber:u,Unit:cr,config:s.config});t.protonMass=Er;var Cr=(0,Ru.createReducedPlanckConstant)({BigNumber:u,Unit:cr,config:s.config});t.reducedPlanckConstant=Cr;var Tr=(0,Ru.createSecondRadiation)({BigNumber:u,Unit:cr,config:s.config});t.secondRadiation=Tr;var kr=(0,Ru.createStefanBoltzmann)({BigNumber:u,Unit:cr,config:s.config});t.stefanBoltzmann=kr;var Ir=(0,Ru.createVacuumImpedance)({BigNumber:u,Unit:cr,config:s.config});t.vacuumImpedance=Ir;var Br=(0,Ru.createUsolve)({DenseMatrix:P,divideScalar:Bn,equalScalar:I,matrix:$e,multiplyScalar:V,subtract:Dn,typed:A});t.usolve=Br;var zr=(0,Ru.createNorm)({abs:At,add:Ot,conj:Te,ctranspose:Cn,eigs:lr,equalScalar:I,larger:gt,matrix:$e,multiply:Ct,pow:qt,smaller:vt,sqrt:Ce,typed:A});t.norm=zr;var Rr=(0,Ru.createLusolve)({DenseMatrix:P,lsolve:Rn,lup:Ln,matrix:$e,slu:Hn,typed:A,usolve:Br});t.lusolve=Rr;var qr=(0,Ru.createSqrtm)({abs:At,add:Ot,identity:at,inv:er,max:Sn,multiply:Ct,size:ct,sqrt:Ce,subtract:Dn,typed:A});t.sqrtm=qr;var Fr=(0,Ru.createMultinomial)({add:Ot,divide:nr,factorial:gn,isInteger:E,isPositive:T,multiply:Ct,typed:A});t.multinomial=Fr;var Ur=(0,Ru.createAvogadro)({BigNumber:u,Unit:cr,config:s.config});t.avogadro=Ur;var Lr=(0,Ru.createClassicalElectronRadius)({BigNumber:u,Unit:cr,config:s.config});t.classicalElectronRadius=Lr;var Hr=(0,Ru.createElectricConstant)({BigNumber:u,Unit:cr,config:s.config});t.electricConstant=Hr;var Zr=(0,Ru.createFermiCoupling)({BigNumber:u,Unit:cr,config:s.config});t.fermiCoupling=Zr;var Vr=(0,Ru.createGravity)({BigNumber:u,Unit:cr,config:s.config});t.gravity=Vr;var Wr=(0,Ru.createLoschmidt)({BigNumber:u,Unit:cr,config:s.config});t.loschmidt=Wr;var Gr=(0,Ru.createMolarMassC12)({BigNumber:u,Unit:cr,config:s.config});t.molarMassC12=Gr;var $r=(0,Ru.createNuclearMagneton)({BigNumber:u,Unit:cr,config:s.config});t.nuclearMagneton=$r;var Qr=(0,Ru.createPlanckMass)({BigNumber:u,Unit:cr,config:s.config});t.planckMass=Qr;var Xr=(0,Ru.createQuantumOfCirculation)({BigNumber:u,Unit:cr,config:s.config});t.quantumOfCirculation=Xr;var Yr=(0,Ru.createSpeedOfLight)({BigNumber:u,Unit:cr,config:s.config});t.speedOfLight=Yr;var Jr=(0,Ru.createWienDisplacement)({BigNumber:u,Unit:cr,config:s.config});t.wienDisplacement=Jr;var Kr=(0,Ru.createRotationMatrix)({BigNumber:u,DenseMatrix:P,SparseMatrix:Ge,addScalar:je,config:s.config,cos:Fe,matrix:$e,multiplyScalar:V,norm:zr,sin:Le,typed:A,unaryMinus:Pe});t.rotationMatrix=Kr;var ei=(0,Ru.createMedian)({add:Ot,compare:ht,divide:nr,partitionSelect:Vt,typed:A});t.median=ei;var ti=(0,Ru.createBohrRadius)({BigNumber:u,Unit:cr,config:s.config});t.bohrRadius=ti;var ni=(0,Ru.createElementaryCharge)({BigNumber:u,Unit:cr,config:s.config});t.elementaryCharge=ni;var ri=(0,Ru.createInverseConductanceQuantum)({BigNumber:u,Unit:cr,config:s.config});t.inverseConductanceQuantum=ri;var ii=(0,Ru.createMolarVolume)({BigNumber:u,Unit:cr,config:s.config});t.molarVolume=ii;var ai=(0,Ru.createPlanckTime)({BigNumber:u,Unit:cr,config:s.config});t.planckTime=ai;var oi=(0,Ru.createThomsonCrossSection)({BigNumber:u,Unit:cr,config:s.config});t.thomsonCrossSection=oi;var si=(0,Ru.createRotate)({multiply:Ct,rotationMatrix:Kr,typed:A});t.rotate=si;var ci=(0,Ru.createMad)({abs:At,map:ee,median:ei,subtract:Dn,typed:A});t.mad=ci;var ui=(0,Ru.createCoulomb)({BigNumber:u,Unit:cr,config:s.config});t.coulomb=ui;var li=(0,Ru.createMagneticFluxQuantum)({BigNumber:u,Unit:cr,config:s.config});t.magneticFluxQuantum=li;var di=(0,Ru.createRydberg)({BigNumber:u,Unit:cr,config:s.config});t.rydberg=di;var fi=(0,Ru.createUnitFunction)({Unit:cr,typed:A});t.unit=fi;var pi=(0,Ru.createGasConstant)({BigNumber:u,Unit:cr,config:s.config});t.gasConstant=pi;var mi=(0,Ru.createPlanckConstant)({BigNumber:u,Unit:cr,config:s.config});t.planckConstant=mi})),Fu=t((function(e,t){function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"docs\",{enumerable:!0,get:function(){return Sc.embeddedDocs}}),t.derivative=t.parser=t.rationalize=t.simplify=t.compile=t.help=t.Parser=t.Help=t.evaluate=t.parse=t.FunctionNode=t.SymbolNode=t.AssignmentNode=t.IndexNode=t.AccessorNode=t.chain=t.FunctionAssignmentNode=t.RangeNode=t.OperatorNode=t.ConditionalNode=t.reviver=t.Chain=t.RelationalNode=t.ParenthesisNode=t.ObjectNode=t.ConstantNode=t.BlockNode=t.ArrayNode=t.Node=void 0;var r={},i={},a={},o=(0,Ru.createNode)({mathWithTransform:i});t.Node=o;var c=(0,Ru.createArrayNode)({Node:o});t.ArrayNode=c;var u=(0,Ru.createBlockNode)({Node:o,ResultSet:qu.ResultSet});t.BlockNode=u;var l=(0,Ru.createConstantNode)({Node:o});t.ConstantNode=l;var d=(0,Ru.createObjectNode)({Node:o});t.ObjectNode=d;var f=(0,Ru.createParenthesisNode)({Node:o});t.ParenthesisNode=f;var p=(0,Ru.createRelationalNode)({Node:o});t.RelationalNode=p;var m=(0,Ru.createChainClass)({math:r});t.Chain=m;var h=(0,Ru.createReviver)({classes:a});t.reviver=h;var y=(0,Ru.createConditionalNode)({Node:o});t.ConditionalNode=y;var v=(0,Ru.createOperatorNode)({Node:o});t.OperatorNode=v;var g=(0,Ru.createRangeNode)({Node:o});t.RangeNode=g;var b=(0,Ru.createFunctionAssignmentNode)({Node:o,typed:qu.typed});t.FunctionAssignmentNode=b;var x=(0,Ru.createChain)({Chain:m,typed:qu.typed});t.chain=x;var D=(0,Ru.createAccessorNode)({Node:o,subset:qu.subset});t.AccessorNode=D;var _=(0,Ru.createIndexNode)({Node:o,Range:qu.Range,size:qu.size});t.IndexNode=_;var w=(0,Ru.createAssignmentNode)({matrix:qu.matrix,Node:o,subset:qu.subset});t.AssignmentNode=w;var N=(0,Ru.createSymbolNode)({Unit:qu.Unit,Node:o,math:r});t.SymbolNode=N;var M=(0,Ru.createFunctionNode)({Node:o,SymbolNode:N,math:r});t.FunctionNode=M;var O=(0,Ru.createParse)({AccessorNode:D,ArrayNode:c,AssignmentNode:w,BlockNode:u,ConditionalNode:y,ConstantNode:l,FunctionAssignmentNode:b,FunctionNode:M,IndexNode:_,ObjectNode:d,OperatorNode:v,ParenthesisNode:f,RangeNode:g,RelationalNode:p,SymbolNode:N,config:s.config,numeric:qu.numeric,typed:qu.typed});t.parse=O;var S=(0,Ru.createEvaluate)({parse:O,typed:qu.typed});t.evaluate=S;var P=(0,Ru.createHelpClass)({parse:O});t.Help=P;var j=(0,Ru.createParserClass)({parse:O});t.Parser=j;var A=(0,Ru.createHelp)({Help:P,mathWithTransform:i,typed:qu.typed});t.help=A;var E=(0,Ru.createCompile)({parse:O,typed:qu.typed});t.compile=E;var C=(0,Ru.createSimplify)({bignumber:qu.bignumber,fraction:qu.fraction,ConstantNode:l,FunctionNode:M,OperatorNode:v,ParenthesisNode:f,SymbolNode:N,add:qu.add,config:s.config,divide:qu.divide,equal:qu.equal,isZero:qu.isZero,mathWithTransform:i,multiply:qu.multiply,parse:O,pow:qu.pow,subtract:qu.subtract,typed:qu.typed});t.simplify=C;var T=(0,Ru.createRationalize)({bignumber:qu.bignumber,fraction:qu.fraction,ConstantNode:l,FunctionNode:M,OperatorNode:v,ParenthesisNode:f,SymbolNode:N,add:qu.add,config:s.config,divide:qu.divide,equal:qu.equal,isZero:qu.isZero,mathWithTransform:i,multiply:qu.multiply,parse:O,pow:qu.pow,simplify:C,subtract:qu.subtract,typed:qu.typed});t.rationalize=T;var k=(0,Ru.createParser)({Parser:j,typed:qu.typed});t.parser=k;var I=(0,Ru.createDerivative)({ConstantNode:l,FunctionNode:M,OperatorNode:v,ParenthesisNode:f,SymbolNode:N,config:s.config,equal:qu.equal,isZero:qu.isZero,numeric:qu.numeric,parse:O,simplify:C,typed:qu.typed});t.derivative=I,n(r,{reviver:h,false:qu._false,null:qu._null,true:qu._true,replacer:qu.replacer,i:qu.i,LN10:qu.LN10,LOG10E:qu.LOG10E,NaN:qu._NaN,pi:qu.pi,SQRT1_2:qu.SQRT1_2,tau:qu.tau,efimovFactor:qu.efimovFactor,fineStructure:qu.fineStructure,sackurTetrode:qu.sackurTetrode,weakMixingAngle:qu.weakMixingAngle,e:qu.e,Infinity:qu._Infinity,LOG2E:qu.LOG2E,PI:qu.pi,version:qu.version,E:qu.e,phi:qu.phi,typed:qu.typed,isInteger:qu.isInteger,isNumeric:qu.isNumeric,isPositive:qu.isPositive,isNaN:qu.isNaN,equalScalar:qu.equalScalar,number:qu.number,boolean:qu.boolean,complex:qu.complex,splitUnit:qu.splitUnit,unaryPlus:qu.unaryPlus,apply:qu.apply,cube:qu.cube,expm1:qu.expm1,log10:qu.log10,multiplyScalar:qu.multiplyScalar,sign:qu.sign,square:qu.square,bitNot:qu.bitNot,arg:qu.arg,im:qu.im,not:qu.not,filter:qu.filter,forEach:qu.forEach,map:qu.map,erf:qu.erf,format:qu.format,oct:qu.oct,print:qu.print,isPrime:qu.isPrime,acos:qu.acos,acot:qu.acot,acsc:qu.acsc,asec:qu.asec,asin:qu.asin,atan:qu.atan,atanh:qu.atanh,cosh:qu.cosh,coth:qu.coth,csch:qu.csch,sech:qu.sech,sinh:qu.sinh,tanh:qu.tanh,chain:x,combinations:qu.combinations,pickRandom:qu.pickRandom,randomInt:qu.randomInt,LN2:qu.LN2,clone:qu.clone,hasNumericValue:qu.hasNumericValue,typeOf:qu.typeOf,string:qu.string,fraction:qu.fraction,unaryMinus:qu.unaryMinus,addScalar:qu.addScalar,exp:qu.exp,log2:qu.log2,sqrt:qu.sqrt,conj:qu.conj,getMatrixDataType:qu.getMatrixDataType,mode:qu.mode,bin:qu.bin,acosh:qu.acosh,acsch:qu.acsch,asinh:qu.asinh,cos:qu.cos,csc:qu.csc,sin:qu.sin,combinationsWithRep:qu.combinationsWithRep,random:qu.random,SQRT2:qu.SQRT2,isNegative:qu.isNegative,matrix:qu.matrix,cbrt:qu.cbrt,gcd:qu.gcd,mod:qu.mod,nthRoot:qu.nthRoot,xgcd:qu.xgcd,bitAnd:qu.bitAnd,bitXor:qu.bitXor,or:qu.or,concat:qu.concat,diag:qu.diag,identity:qu.identity,ones:qu.ones,reshape:qu.reshape,size:qu.size,subset:qu.subset,zeros:qu.zeros,hex:qu.hex,round:qu.round,leftShift:qu.leftShift,rightLogShift:qu.rightLogShift,compare:qu.compare,compareText:qu.compareText,smaller:qu.smaller,larger:qu.larger,unequal:qu.unequal,sparse:qu.sparse,acoth:qu.acoth,atan2:qu.atan2,sec:qu.sec,add:qu.add,dot:qu.dot,composition:qu.composition,isZero:qu.isZero,abs:qu.abs,floor:qu.floor,multiply:qu.multiply,dotMultiply:qu.dotMultiply,re:qu.re,flatten:qu.flatten,resize:qu.resize,squeeze:qu.squeeze,to:qu.to,pow:qu.pow,dotPow:qu.dotPow,rightArithShift:qu.rightArithShift,compareNatural:qu.compareNatural,equalText:qu.equalText,largerEq:qu.largerEq,partitionSelect:qu.partitionSelect,asech:qu.asech,tan:qu.tan,setDifference:qu.setDifference,setIntersect:qu.setIntersect,setMultiplicity:qu.setMultiplicity,setSize:qu.setSize,trace:qu.trace,quantileSeq:qu.quantileSeq,gamma:qu.gamma,bignumber:qu.bignumber,lcm:qu.lcm,bitOr:qu.bitOr,kron:qu.kron,transpose:qu.transpose,numeric:qu.numeric,and:qu.and,smallerEq:qu.smallerEq,sort:qu.sort,min:qu.min,cot:qu.cot,setDistinct:qu.setDistinct,setPowerset:qu.setPowerset,index:qu.index,sum:qu.sum,factorial:qu.factorial,permutations:qu.permutations,ceil:qu.ceil,subtract:qu.subtract,cross:qu.cross,range:qu.range,row:qu.row,prod:qu.prod,equal:qu.equal,max:qu.max,setCartesian:qu.setCartesian,setSymDifference:qu.setSymDifference,fix:qu.fix,column:qu.column,ctranspose:qu.ctranspose,deepEqual:qu.deepEqual,setIsSubset:qu.setIsSubset,xor:qu.xor,divideScalar:qu.divideScalar,nthRoots:qu.nthRoots,lsolve:qu.lsolve,lsolveAll:qu.lsolveAll,setUnion:qu.setUnion,lup:qu.lup,slu:qu.slu,det:qu.det,distance:qu.distance,stirlingS2:qu.stirlingS2,catalan:qu.catalan,diff:qu.diff,log:qu.log,dotDivide:qu.dotDivide,usolveAll:qu.usolveAll,hypot:qu.hypot,qr:qu.qr,inv:qu.inv,expm:qu.expm,divide:qu.divide,mean:qu.mean,variance:qu.variance,kldivergence:qu.kldivergence,bellNumbers:qu.bellNumbers,log1p:qu.log1p,createUnit:qu.createUnit,eigs:qu.eigs,intersect:qu.intersect,std:qu.std,atomicMass:qu.atomicMass,bohrMagneton:qu.bohrMagneton,boltzmann:qu.boltzmann,conductanceQuantum:qu.conductanceQuantum,deuteronMass:qu.deuteronMass,electronMass:qu.electronMass,faraday:qu.faraday,firstRadiation:qu.firstRadiation,gravitationConstant:qu.gravitationConstant,hartreeEnergy:qu.hartreeEnergy,klitzing:qu.klitzing,magneticConstant:qu.magneticConstant,molarMass:qu.molarMass,molarPlanckConstant:qu.molarPlanckConstant,neutronMass:qu.neutronMass,planckCharge:qu.planckCharge,planckLength:qu.planckLength,planckTemperature:qu.planckTemperature,protonMass:qu.protonMass,reducedPlanckConstant:qu.reducedPlanckConstant,secondRadiation:qu.secondRadiation,stefanBoltzmann:qu.stefanBoltzmann,vacuumImpedance:qu.vacuumImpedance,usolve:qu.usolve,norm:qu.norm,lusolve:qu.lusolve,sqrtm:qu.sqrtm,multinomial:qu.multinomial,avogadro:qu.avogadro,classicalElectronRadius:qu.classicalElectronRadius,electricConstant:qu.electricConstant,fermiCoupling:qu.fermiCoupling,gravity:qu.gravity,loschmidt:qu.loschmidt,molarMassC12:qu.molarMassC12,nuclearMagneton:qu.nuclearMagneton,planckMass:qu.planckMass,quantumOfCirculation:qu.quantumOfCirculation,speedOfLight:qu.speedOfLight,wienDisplacement:qu.wienDisplacement,rotationMatrix:qu.rotationMatrix,median:qu.median,bohrRadius:qu.bohrRadius,elementaryCharge:qu.elementaryCharge,inverseConductanceQuantum:qu.inverseConductanceQuantum,molarVolume:qu.molarVolume,planckTime:qu.planckTime,thomsonCrossSection:qu.thomsonCrossSection,rotate:qu.rotate,parse:O,evaluate:S,mad:qu.mad,coulomb:qu.coulomb,magneticFluxQuantum:qu.magneticFluxQuantum,rydberg:qu.rydberg,unit:qu.unit,help:A,gasConstant:qu.gasConstant,compile:E,simplify:C,rationalize:T,parser:k,planckConstant:qu.planckConstant,derivative:I,config:s.config}),n(i,r,{apply:(0,Ru.createApplyTransform)({isInteger:qu.isInteger,typed:qu.typed}),filter:(0,Ru.createFilterTransform)({typed:qu.typed}),map:(0,Ru.createMapTransform)({typed:qu.typed}),forEach:(0,Ru.createForEachTransform)({typed:qu.typed}),subset:(0,Ru.createSubsetTransform)({matrix:qu.matrix,typed:qu.typed}),index:(0,Ru.createIndexTransform)({Index:qu.Index}),concat:(0,Ru.createConcatTransform)({isInteger:qu.isInteger,matrix:qu.matrix,typed:qu.typed}),max:(0,Ru.createMaxTransform)({config:s.config,larger:qu.larger,numeric:qu.numeric,typed:qu.typed}),min:(0,Ru.createMinTransform)({config:s.config,numeric:qu.numeric,smaller:qu.smaller,typed:qu.typed}),sum:(0,Ru.createSumTransform)({add:qu.add,config:s.config,numeric:qu.numeric,typed:qu.typed}),column:(0,Ru.createColumnTransform)({Index:qu.Index,matrix:qu.matrix,range:qu.range,typed:qu.typed}),range:(0,Ru.createRangeTransform)({bignumber:qu.bignumber,matrix:qu.matrix,config:s.config,larger:qu.larger,largerEq:qu.largerEq,smaller:qu.smaller,smallerEq:qu.smallerEq,typed:qu.typed}),diff:(0,Ru.createDiffTransform)({bignumber:qu.bignumber,matrix:qu.matrix,number:qu.number,subtract:qu.subtract,typed:qu.typed}),row:(0,Ru.createRowTransform)({Index:qu.Index,matrix:qu.matrix,range:qu.range,typed:qu.typed}),mean:(0,Ru.createMeanTransform)({add:qu.add,divide:qu.divide,typed:qu.typed}),variance:(0,Ru.createVarianceTransform)({add:qu.add,apply:qu.apply,divide:qu.divide,isNaN:qu.isNaN,multiply:qu.multiply,subtract:qu.subtract,typed:qu.typed}),std:(0,Ru.createStdTransform)({sqrt:qu.sqrt,typed:qu.typed,variance:qu.variance})}),n(a,{ResultSet:qu.ResultSet,Complex:qu.Complex,Range:qu.Range,Node:o,ArrayNode:c,BlockNode:u,ConstantNode:l,ObjectNode:d,ParenthesisNode:f,RelationalNode:p,Chain:m,BigNumber:qu.BigNumber,Matrix:qu.Matrix,ConditionalNode:y,OperatorNode:v,Fraction:qu.Fraction,RangeNode:g,DenseMatrix:qu.DenseMatrix,FunctionAssignmentNode:b,SparseMatrix:qu.SparseMatrix,ImmutableDenseMatrix:qu.ImmutableDenseMatrix,FibonacciHeap:qu.FibonacciHeap,AccessorNode:D,IndexNode:_,Index:qu.Index,AssignmentNode:w,Spa:qu.Spa,Unit:qu.Unit,SymbolNode:N,FunctionNode:M,Help:P,Parser:j}),m.createProxy(r)})),Uu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"isAccessorNode\",{enumerable:!0,get:function(){return i.isAccessorNode}}),Object.defineProperty(t,\"isArray\",{enumerable:!0,get:function(){return i.isArray}}),Object.defineProperty(t,\"isArrayNode\",{enumerable:!0,get:function(){return i.isArrayNode}}),Object.defineProperty(t,\"isAssignmentNode\",{enumerable:!0,get:function(){return i.isAssignmentNode}}),Object.defineProperty(t,\"isBigNumber\",{enumerable:!0,get:function(){return i.isBigNumber}}),Object.defineProperty(t,\"isBlockNode\",{enumerable:!0,get:function(){return i.isBlockNode}}),Object.defineProperty(t,\"isBoolean\",{enumerable:!0,get:function(){return i.isBoolean}}),Object.defineProperty(t,\"isChain\",{enumerable:!0,get:function(){return i.isChain}}),Object.defineProperty(t,\"isCollection\",{enumerable:!0,get:function(){return i.isCollection}}),Object.defineProperty(t,\"isComplex\",{enumerable:!0,get:function(){return i.isComplex}}),Object.defineProperty(t,\"isConditionalNode\",{enumerable:!0,get:function(){return i.isConditionalNode}}),Object.defineProperty(t,\"isConstantNode\",{enumerable:!0,get:function(){return i.isConstantNode}}),Object.defineProperty(t,\"isDate\",{enumerable:!0,get:function(){return i.isDate}}),Object.defineProperty(t,\"isDenseMatrix\",{enumerable:!0,get:function(){return i.isDenseMatrix}}),Object.defineProperty(t,\"isFraction\",{enumerable:!0,get:function(){return i.isFraction}}),Object.defineProperty(t,\"isFunction\",{enumerable:!0,get:function(){return i.isFunction}}),Object.defineProperty(t,\"isFunctionAssignmentNode\",{enumerable:!0,get:function(){return i.isFunctionAssignmentNode}}),Object.defineProperty(t,\"isFunctionNode\",{enumerable:!0,get:function(){return i.isFunctionNode}}),Object.defineProperty(t,\"isHelp\",{enumerable:!0,get:function(){return i.isHelp}}),Object.defineProperty(t,\"isIndex\",{enumerable:!0,get:function(){return i.isIndex}}),Object.defineProperty(t,\"isIndexNode\",{enumerable:!0,get:function(){return i.isIndexNode}}),Object.defineProperty(t,\"isMatrix\",{enumerable:!0,get:function(){return i.isMatrix}}),Object.defineProperty(t,\"isNode\",{enumerable:!0,get:function(){return i.isNode}}),Object.defineProperty(t,\"isNull\",{enumerable:!0,get:function(){return i.isNull}}),Object.defineProperty(t,\"isNumber\",{enumerable:!0,get:function(){return i.isNumber}}),Object.defineProperty(t,\"isString\",{enumerable:!0,get:function(){return i.isString}}),Object.defineProperty(t,\"isUndefined\",{enumerable:!0,get:function(){return i.isUndefined}}),Object.defineProperty(t,\"isObject\",{enumerable:!0,get:function(){return i.isObject}}),Object.defineProperty(t,\"isObjectNode\",{enumerable:!0,get:function(){return i.isObjectNode}}),Object.defineProperty(t,\"isOperatorNode\",{enumerable:!0,get:function(){return i.isOperatorNode}}),Object.defineProperty(t,\"isParenthesisNode\",{enumerable:!0,get:function(){return i.isParenthesisNode}}),Object.defineProperty(t,\"isRange\",{enumerable:!0,get:function(){return i.isRange}}),Object.defineProperty(t,\"isRangeNode\",{enumerable:!0,get:function(){return i.isRangeNode}}),Object.defineProperty(t,\"isRegExp\",{enumerable:!0,get:function(){return i.isRegExp}}),Object.defineProperty(t,\"isResultSet\",{enumerable:!0,get:function(){return i.isResultSet}}),Object.defineProperty(t,\"isSparseMatrix\",{enumerable:!0,get:function(){return i.isSparseMatrix}}),Object.defineProperty(t,\"isSymbolNode\",{enumerable:!0,get:function(){return i.isSymbolNode}}),Object.defineProperty(t,\"isUnit\",{enumerable:!0,get:function(){return i.isUnit}})})),Lu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.BigNumberDependencies=void 0;var n={createBigNumberClass:Ru.createBigNumberClass};t.BigNumberDependencies=n})),Hu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ComplexDependencies=void 0;var n={createComplexClass:Ru.createComplexClass};t.ComplexDependencies=n})),Zu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.MatrixDependencies=void 0;var n={createMatrixClass:Ru.createMatrixClass};t.MatrixDependencies=n})),Vu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.DenseMatrixDependencies=void 0;var n={MatrixDependencies:Zu.MatrixDependencies,createDenseMatrixClass:Ru.createDenseMatrixClass};t.DenseMatrixDependencies=n})),Wu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.FractionDependencies=void 0;var n={createFractionClass:Ru.createFractionClass};t.FractionDependencies=n})),Gu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.typedDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,FractionDependencies:Wu.FractionDependencies,createTyped:Ru.createTyped};t.typedDependencies=n})),$u=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ResultSetDependencies=void 0;var n={createResultSet:Ru.createResultSet};t.ResultSetDependencies=n})),Qu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.RangeDependencies=void 0;var n={createRangeClass:Ru.createRangeClass};t.RangeDependencies=n})),Xu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cloneDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createClone:Ru.createClone};t.cloneDependencies=n})),Yu=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isIntegerDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsInteger:Ru.createIsInteger};t.isIntegerDependencies=n})),Ju=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNegativeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsNegative:Ru.createIsNegative};t.isNegativeDependencies=n})),Ku=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNumericDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsNumeric:Ru.createIsNumeric};t.isNumericDependencies=n})),el=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hasNumericValueDependencies=void 0;var n={isNumericDependencies:Ku.isNumericDependencies,typedDependencies:Gu.typedDependencies,createHasNumericValue:Ru.createHasNumericValue};t.hasNumericValueDependencies=n})),tl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isPositiveDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsPositive:Ru.createIsPositive};t.isPositiveDependencies=n})),nl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isZeroDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsZero:Ru.createIsZero};t.isZeroDependencies=n})),rl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isNaNDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsNaN:Ru.createIsNaN};t.isNaNDependencies=n})),il=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.typeOfDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createTypeOf:Ru.createTypeOf};t.typeOfDependencies=n})),al=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.equalScalarDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createEqualScalar:Ru.createEqualScalar};t.equalScalarDependencies=n})),ol=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SparseMatrixDependencies=void 0;var n={MatrixDependencies:Zu.MatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,typedDependencies:Gu.typedDependencies,createSparseMatrixClass:Ru.createSparseMatrixClass};t.SparseMatrixDependencies=n})),sl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.numberDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createNumber:Ru.createNumber};t.numberDependencies=n})),cl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stringDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createString:Ru.createString};t.stringDependencies=n})),ul=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.booleanDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createBoolean:Ru.createBoolean};t.booleanDependencies=n})),ll=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bignumberDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createBignumber:Ru.createBignumber};t.bignumberDependencies=n})),dl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.complexDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createComplex:Ru.createComplex};t.complexDependencies=n})),fl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.fractionDependencies=void 0;var n={FractionDependencies:Wu.FractionDependencies,typedDependencies:Gu.typedDependencies,createFraction:Ru.createFraction};t.fractionDependencies=n})),pl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.matrixDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,MatrixDependencies:Zu.MatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,typedDependencies:Gu.typedDependencies,createMatrix:Ru.createMatrix};t.matrixDependencies=n})),ml=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.splitUnitDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSplitUnit:Ru.createSplitUnit};t.splitUnitDependencies=n})),hl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unaryMinusDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createUnaryMinus:Ru.createUnaryMinus};t.unaryMinusDependencies=n})),yl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unaryPlusDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createUnaryPlus:Ru.createUnaryPlus};t.unaryPlusDependencies=n})),vl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.absDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAbs:Ru.createAbs};t.absDependencies=n})),gl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.applyDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,typedDependencies:Gu.typedDependencies,createApply:Ru.createApply};t.applyDependencies=n})),bl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.addScalarDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAddScalar:Ru.createAddScalar};t.addScalarDependencies=n})),xl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cbrtDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,FractionDependencies:Wu.FractionDependencies,isNegativeDependencies:Ju.isNegativeDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createCbrt:Ru.createCbrt};t.cbrtDependencies=n})),Dl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.zerosDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createZeros:Ru.createZeros};t.zerosDependencies=n})),_l=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.roundDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createRound:Ru.createRound};t.roundDependencies=n})),wl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ceilDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,roundDependencies:_l.roundDependencies,typedDependencies:Gu.typedDependencies,createCeil:Ru.createCeil};t.ceilDependencies=n})),Nl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cubeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCube:Ru.createCube};t.cubeDependencies=n})),Ml=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.expDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createExp:Ru.createExp};t.expDependencies=n})),Ol=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.expm1Dependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createExpm1:Ru.createExpm1};t.expm1Dependencies=n})),Sl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.floorDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,roundDependencies:_l.roundDependencies,typedDependencies:Gu.typedDependencies,createFloor:Ru.createFloor};t.floorDependencies=n})),Pl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.fixDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,ceilDependencies:wl.ceilDependencies,floorDependencies:Sl.floorDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createFix:Ru.createFix};t.fixDependencies=n})),jl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gcdDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createGcd:Ru.createGcd};t.gcdDependencies=n})),Al=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lcmDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createLcm:Ru.createLcm};t.lcmDependencies=n})),El=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.log10Dependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createLog10:Ru.createLog10};t.log10Dependencies=n})),Cl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.log2Dependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createLog2:Ru.createLog2};t.log2Dependencies=n})),Tl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.modDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createMod:Ru.createMod};t.modDependencies=n})),kl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.multiplyScalarDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createMultiplyScalar:Ru.createMultiplyScalar};t.multiplyScalarDependencies=n})),Il=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.conjDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createConj:Ru.createConj};t.conjDependencies=n})),Bl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sizeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSize:Ru.createSize};t.sizeDependencies=n})),zl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,conjDependencies:Il.conjDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,sizeDependencies:Bl.sizeDependencies,typedDependencies:Gu.typedDependencies,createDot:Ru.createDot};t.dotDependencies=n})),Rl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.multiplyDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,dotDependencies:zl.dotDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createMultiply:Ru.createMultiply};t.multiplyDependencies=n})),ql=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nthRootDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createNthRoot:Ru.createNthRoot};t.nthRootDependencies=n})),Fl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.signDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,FractionDependencies:Wu.FractionDependencies,complexDependencies:dl.complexDependencies,typedDependencies:Gu.typedDependencies,createSign:Ru.createSign};t.signDependencies=n})),Ul=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sqrtDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createSqrt:Ru.createSqrt};t.sqrtDependencies=n})),Ll=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.squareDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSquare:Ru.createSquare};t.squareDependencies=n})),Hl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.subtractDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,addScalarDependencies:bl.addScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createSubtract:Ru.createSubtract};t.subtractDependencies=n})),Zl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.xgcdDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createXgcd:Ru.createXgcd};t.xgcdDependencies=n})),Vl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotMultiplyDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createDotMultiply:Ru.createDotMultiply};t.dotMultiplyDependencies=n})),Wl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitAndDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createBitAnd:Ru.createBitAnd};t.bitAndDependencies=n})),Gl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitNotDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createBitNot:Ru.createBitNot};t.bitNotDependencies=n})),$l=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitOrDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createBitOr:Ru.createBitOr};t.bitOrDependencies=n})),Ql=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bitXorDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createBitXor:Ru.createBitXor};t.bitXorDependencies=n})),Xl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.argDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createArg:Ru.createArg};t.argDependencies=n})),Yl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.imDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIm:Ru.createIm};t.imDependencies=n})),Jl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.reDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createRe:Ru.createRe};t.reDependencies=n})),Kl=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.notDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createNot:Ru.createNot};t.notDependencies=n})),ed=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.orDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createOr:Ru.createOr};t.orDependencies=n})),td=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.xorDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createXor:Ru.createXor};t.xorDependencies=n})),nd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.concatDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createConcat:Ru.createConcat};t.concatDependencies=n})),rd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.smallerDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSmaller:Ru.createSmaller};t.smallerDependencies=n})),id=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ImmutableDenseMatrixDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,smallerDependencies:rd.smallerDependencies,createImmutableDenseMatrixClass:Ru.createImmutableDenseMatrixClass};t.ImmutableDenseMatrixDependencies=n})),ad=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.IndexDependencies=void 0;var n={ImmutableDenseMatrixDependencies:id.ImmutableDenseMatrixDependencies,createIndexClass:Ru.createIndexClass};t.IndexDependencies=n})),od=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.largerDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createLarger:Ru.createLarger};t.largerDependencies=n})),sd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.largerEqDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createLargerEq:Ru.createLargerEq};t.largerEqDependencies=n})),cd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.smallerEqDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSmallerEq:Ru.createSmallerEq};t.smallerEqDependencies=n})),ud=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rangeDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,matrixDependencies:pl.matrixDependencies,largerDependencies:od.largerDependencies,largerEqDependencies:sd.largerEqDependencies,smallerDependencies:rd.smallerDependencies,smallerEqDependencies:cd.smallerEqDependencies,typedDependencies:Gu.typedDependencies,createRange:Ru.createRange};t.rangeDependencies=n})),ld=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.columnDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createColumn:Ru.createColumn};t.columnDependencies=n})),dd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.crossDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createCross:Ru.createCross};t.crossDependencies=n})),fd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.diagDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createDiag:Ru.createDiag};t.diagDependencies=n})),pd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.filterDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createFilter:Ru.createFilter};t.filterDependencies=n})),md=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.flattenDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createFlatten:Ru.createFlatten};t.flattenDependencies=n})),hd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.forEachDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createForEach:Ru.createForEach};t.forEachDependencies=n})),yd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.getMatrixDataTypeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createGetMatrixDataType:Ru.createGetMatrixDataType};t.getMatrixDataTypeDependencies=n})),vd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.identityDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createIdentity:Ru.createIdentity};t.identityDependencies=n})),gd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.kronDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createKron:Ru.createKron};t.kronDependencies=n})),bd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.mapDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createMap:Ru.createMap};t.mapDependencies=n})),xd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.diffDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,numberDependencies:sl.numberDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createDiff:Ru.createDiff};t.diffDependencies=n})),Dd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.onesDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createOnes:Ru.createOnes};t.onesDependencies=n})),_d=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.reshapeDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createReshape:Ru.createReshape};t.reshapeDependencies=n})),wd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.resizeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,createResize:Ru.createResize};t.resizeDependencies=n})),Nd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cosDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCos:Ru.createCos};t.cosDependencies=n})),Md=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.addDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,addScalarDependencies:bl.addScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createAdd:Ru.createAdd};t.addDependencies=n})),Od=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.transposeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createTranspose:Ru.createTranspose};t.transposeDependencies=n})),Sd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ctransposeDependencies=void 0;var n={conjDependencies:Il.conjDependencies,transposeDependencies:Od.transposeDependencies,typedDependencies:Gu.typedDependencies,createCtranspose:Ru.createCtranspose};t.ctransposeDependencies=n})),Pd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atanDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAtan:Ru.createAtan};t.atanDependencies=n})),jd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.equalDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createEqual:Ru.createEqual};t.equalDependencies=n})),Ad=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.FibonacciHeapDependencies=void 0;var n={largerDependencies:od.largerDependencies,smallerDependencies:rd.smallerDependencies,createFibonacciHeapClass:Ru.createFibonacciHeapClass};t.FibonacciHeapDependencies=n})),Ed=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SpaDependencies=void 0;var n={FibonacciHeapDependencies:Ad.FibonacciHeapDependencies,addScalarDependencies:bl.addScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,createSpaClass:Ru.createSpaClass};t.SpaDependencies=n})),Cd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.numericDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,fractionDependencies:fl.fractionDependencies,numberDependencies:sl.numberDependencies,createNumeric:Ru.createNumeric};t.numericDependencies=n})),Td=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.divideScalarDependencies=void 0;var n={numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createDivideScalar:Ru.createDivideScalar};t.divideScalarDependencies=n})),kd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lupDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,SpaDependencies:Ed.SpaDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,largerDependencies:od.largerDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createLup:Ru.createLup};t.lupDependencies=n})),Id=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.detDependencies=void 0;var n={lupDependencies:kd.lupDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createDet:Ru.createDet};t.detDependencies=n})),Bd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.invDependencies=void 0;var n={absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,detDependencies:Id.detDependencies,divideScalarDependencies:Td.divideScalarDependencies,identityDependencies:vd.identityDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createInv:Ru.createInv};t.invDependencies=n})),zd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sinDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSin:Ru.createSin};t.sinDependencies=n})),Rd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.eigsDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,addScalarDependencies:bl.addScalarDependencies,atanDependencies:Pd.atanDependencies,bignumberDependencies:ll.bignumberDependencies,cosDependencies:Nd.cosDependencies,equalDependencies:jd.equalDependencies,invDependencies:Bd.invDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,sinDependencies:zd.sinDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createEigs:Ru.createEigs};t.eigsDependencies=n})),qd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.powDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,fractionDependencies:fl.fractionDependencies,identityDependencies:vd.identityDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,numberDependencies:sl.numberDependencies,typedDependencies:Gu.typedDependencies,createPow:Ru.createPow};t.powDependencies=n})),Fd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.normDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,conjDependencies:Il.conjDependencies,ctransposeDependencies:Sd.ctransposeDependencies,eigsDependencies:Rd.eigsDependencies,equalScalarDependencies:al.equalScalarDependencies,largerDependencies:od.largerDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,powDependencies:qd.powDependencies,smallerDependencies:rd.smallerDependencies,sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,createNorm:Ru.createNorm};t.normDependencies=n})),Ud=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rotationMatrixDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,SparseMatrixDependencies:ol.SparseMatrixDependencies,addScalarDependencies:bl.addScalarDependencies,cosDependencies:Nd.cosDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,normDependencies:Fd.normDependencies,sinDependencies:zd.sinDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createRotationMatrix:Ru.createRotationMatrix};t.rotationMatrixDependencies=n})),Ld=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rotateDependencies=void 0;var n={multiplyDependencies:Rl.multiplyDependencies,rotationMatrixDependencies:Ud.rotationMatrixDependencies,typedDependencies:Gu.typedDependencies,createRotate:Ru.createRotate};t.rotateDependencies=n})),Hd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rowDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createRow:Ru.createRow};t.rowDependencies=n})),Zd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.squeezeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSqueeze:Ru.createSqueeze};t.squeezeDependencies=n})),Vd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.subsetDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSubset:Ru.createSubset};t.subsetDependencies=n})),Wd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.erfDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createErf:Ru.createErf};t.erfDependencies=n})),Gd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.modeDependencies=void 0;var n={isNaNDependencies:rl.isNaNDependencies,isNumericDependencies:Ku.isNumericDependencies,typedDependencies:Gu.typedDependencies,createMode:Ru.createMode};t.modeDependencies=n})),$d=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.prodDependencies=void 0;var n={multiplyScalarDependencies:kl.multiplyScalarDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createProd:Ru.createProd};t.prodDependencies=n})),Qd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.formatDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createFormat:Ru.createFormat};t.formatDependencies=n})),Xd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.binDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createBin:Ru.createBin};t.binDependencies=n})),Yd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.octDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createOct:Ru.createOct};t.octDependencies=n})),Jd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hexDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createHex:Ru.createHex};t.hexDependencies=n})),Kd=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.printDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createPrint:Ru.createPrint};t.printDependencies=n})),ef=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.toDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createTo:Ru.createTo};t.toDependencies=n})),tf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.isPrimeDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createIsPrime:Ru.createIsPrime};t.isPrimeDependencies=n})),nf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.logDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,divideScalarDependencies:Td.divideScalarDependencies,typedDependencies:Gu.typedDependencies,createLog:Ru.createLog};t.logDependencies=n})),rf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.log1pDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,divideScalarDependencies:Td.divideScalarDependencies,logDependencies:nf.logDependencies,typedDependencies:Gu.typedDependencies,createLog1p:Ru.createLog1p};t.log1pDependencies=n})),af=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nthRootsDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,divideScalarDependencies:Td.divideScalarDependencies,typedDependencies:Gu.typedDependencies,createNthRoots:Ru.createNthRoots};t.nthRootsDependencies=n})),of=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotPowDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,powDependencies:qd.powDependencies,typedDependencies:Gu.typedDependencies,createDotPow:Ru.createDotPow};t.dotPowDependencies=n})),sf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.dotDivideDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createDotDivide:Ru.createDotDivide};t.dotDivideDependencies=n})),cf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lsolveDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createLsolve:Ru.createLsolve};t.lsolveDependencies=n})),uf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.usolveDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createUsolve:Ru.createUsolve};t.usolveDependencies=n})),lf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lsolveAllDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createLsolveAll:Ru.createLsolveAll};t.lsolveAllDependencies=n})),df=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.usolveAllDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createUsolveAll:Ru.createUsolveAll};t.usolveAllDependencies=n})),ff=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.leftShiftDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createLeftShift:Ru.createLeftShift};t.leftShiftDependencies=n})),pf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rightArithShiftDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createRightArithShift:Ru.createRightArithShift};t.rightArithShiftDependencies=n})),mf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rightLogShiftDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createRightLogShift:Ru.createRightLogShift};t.rightLogShiftDependencies=n})),hf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.andDependencies=void 0;var n={equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,notDependencies:Kl.notDependencies,typedDependencies:Gu.typedDependencies,zerosDependencies:Dl.zerosDependencies,createAnd:Ru.createAnd};t.andDependencies=n})),yf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compareDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,FractionDependencies:Wu.FractionDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createCompare:Ru.createCompare};t.compareDependencies=n})),vf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compareNaturalDependencies=void 0;var n={compareDependencies:yf.compareDependencies,typedDependencies:Gu.typedDependencies,createCompareNatural:Ru.createCompareNatural};t.compareNaturalDependencies=n})),gf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compareTextDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createCompareText:Ru.createCompareText};t.compareTextDependencies=n})),bf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.equalTextDependencies=void 0;var n={compareTextDependencies:gf.compareTextDependencies,isZeroDependencies:nl.isZeroDependencies,typedDependencies:Gu.typedDependencies,createEqualText:Ru.createEqualText};t.equalTextDependencies=n})),xf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.deepEqualDependencies=void 0;var n={equalDependencies:jd.equalDependencies,typedDependencies:Gu.typedDependencies,createDeepEqual:Ru.createDeepEqual};t.deepEqualDependencies=n})),Df=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unequalDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createUnequal:Ru.createUnequal};t.unequalDependencies=n})),_f=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.partitionSelectDependencies=void 0;var n={compareDependencies:yf.compareDependencies,isNaNDependencies:rl.isNaNDependencies,isNumericDependencies:Ku.isNumericDependencies,typedDependencies:Gu.typedDependencies,createPartitionSelect:Ru.createPartitionSelect};t.partitionSelectDependencies=n})),wf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sortDependencies=void 0;var n={compareDependencies:yf.compareDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSort:Ru.createSort};t.sortDependencies=n})),Nf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.maxDependencies=void 0;var n={largerDependencies:od.largerDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createMax:Ru.createMax};t.maxDependencies=n})),Mf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.minDependencies=void 0;var n={numericDependencies:Cd.numericDependencies,smallerDependencies:rd.smallerDependencies,typedDependencies:Gu.typedDependencies,createMin:Ru.createMin};t.minDependencies=n})),Of=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.UnitDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,FractionDependencies:Wu.FractionDependencies,absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalDependencies:jd.equalDependencies,fixDependencies:Pl.fixDependencies,formatDependencies:Qd.formatDependencies,isNumericDependencies:Ku.isNumericDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,numberDependencies:sl.numberDependencies,powDependencies:qd.powDependencies,roundDependencies:_l.roundDependencies,subtractDependencies:Hl.subtractDependencies,createUnitClass:Ru.createUnitClass};t.UnitDependencies=n})),Sf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.unitDependencies=void 0;var n={UnitDependencies:Of.UnitDependencies,typedDependencies:Gu.typedDependencies,createUnitFunction:Ru.createUnitFunction};t.unitDependencies=n})),Pf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sparseDependencies=void 0;var n={SparseMatrixDependencies:ol.SparseMatrixDependencies,typedDependencies:Gu.typedDependencies,createSparse:Ru.createSparse};t.sparseDependencies=n})),jf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.createUnitDependencies=void 0;var n={UnitDependencies:Of.UnitDependencies,typedDependencies:Gu.typedDependencies,createCreateUnit:Ru.createCreateUnit};t.createUnitDependencies=n})),Af=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acosDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcos:Ru.createAcos};t.acosDependencies=n})),Ef=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acoshDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcosh:Ru.createAcosh};t.acoshDependencies=n})),Cf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acotDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createAcot:Ru.createAcot};t.acotDependencies=n})),Tf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acothDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcoth:Ru.createAcoth};t.acothDependencies=n})),kf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acscDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAcsc:Ru.createAcsc};t.acscDependencies=n})),If=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.acschDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createAcsch:Ru.createAcsch};t.acschDependencies=n})),Bf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asecDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAsec:Ru.createAsec};t.asecDependencies=n})),zf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asechDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAsech:Ru.createAsech};t.asechDependencies=n})),Rf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asinDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAsin:Ru.createAsin};t.asinDependencies=n})),qf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.asinhDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createAsinh:Ru.createAsinh};t.asinhDependencies=n})),Ff=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atan2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,DenseMatrixDependencies:Vu.DenseMatrixDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createAtan2:Ru.createAtan2};t.atan2Dependencies=n})),Uf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atanhDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,typedDependencies:Gu.typedDependencies,createAtanh:Ru.createAtanh};t.atanhDependencies=n})),Lf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.coshDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCosh:Ru.createCosh};t.coshDependencies=n})),Hf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cotDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCot:Ru.createCot};t.cotDependencies=n})),Zf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cothDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCoth:Ru.createCoth};t.cothDependencies=n})),Vf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cscDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCsc:Ru.createCsc};t.cscDependencies=n})),Wf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.cschDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createCsch:Ru.createCsch};t.cschDependencies=n})),Gf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.secDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createSec:Ru.createSec};t.secDependencies=n})),$f=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sechDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,typedDependencies:Gu.typedDependencies,createSech:Ru.createSech};t.sechDependencies=n})),Qf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sinhDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createSinh:Ru.createSinh};t.sinhDependencies=n})),Xf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.tanDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createTan:Ru.createTan};t.tanDependencies=n})),Yf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.tanhDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createTanh:Ru.createTanh};t.tanhDependencies=n})),Jf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setCartesianDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetCartesian:Ru.createSetCartesian};t.setCartesianDependencies=n})),Kf=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setDifferenceDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetDifference:Ru.createSetDifference};t.setDifferenceDependencies=n})),ep=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setDistinctDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetDistinct:Ru.createSetDistinct};t.setDistinctDependencies=n})),tp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setIntersectDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetIntersect:Ru.createSetIntersect};t.setIntersectDependencies=n})),np=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setIsSubsetDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetIsSubset:Ru.createSetIsSubset};t.setIsSubsetDependencies=n})),rp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setMultiplicityDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetMultiplicity:Ru.createSetMultiplicity};t.setMultiplicityDependencies=n})),ip=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setPowersetDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,compareNaturalDependencies:vf.compareNaturalDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetPowerset:Ru.createSetPowerset};t.setPowersetDependencies=n})),ap=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setSizeDependencies=void 0;var n={compareNaturalDependencies:vf.compareNaturalDependencies,typedDependencies:Gu.typedDependencies,createSetSize:Ru.createSetSize};t.setSizeDependencies=n})),op=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setSymDifferenceDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,concatDependencies:nd.concatDependencies,setDifferenceDependencies:Kf.setDifferenceDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetSymDifference:Ru.createSetSymDifference};t.setSymDifferenceDependencies=n})),sp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.setUnionDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,concatDependencies:nd.concatDependencies,setIntersectDependencies:tp.setIntersectDependencies,setSymDifferenceDependencies:op.setSymDifferenceDependencies,sizeDependencies:Bl.sizeDependencies,subsetDependencies:Vd.subsetDependencies,typedDependencies:Gu.typedDependencies,createSetUnion:Ru.createSetUnion};t.setUnionDependencies=n})),cp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hypotDependencies=void 0;var n={absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,isPositiveDependencies:tl.isPositiveDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,smallerDependencies:rd.smallerDependencies,sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,createHypot:Ru.createHypot};t.hypotDependencies=n})),up=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.traceDependencies=void 0;var n={addDependencies:Md.addDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createTrace:Ru.createTrace};t.traceDependencies=n})),lp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.indexDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,typedDependencies:Gu.typedDependencies,createIndex:Ru.createIndex};t.indexDependencies=n})),dp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.NodeDependencies=void 0;var n={createNode:Ru.createNode};t.NodeDependencies=n})),fp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.AccessorNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,subsetDependencies:Vd.subsetDependencies,createAccessorNode:Ru.createAccessorNode};t.AccessorNodeDependencies=n})),pp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ArrayNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createArrayNode:Ru.createArrayNode};t.ArrayNodeDependencies=n})),mp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.AssignmentNodeDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,NodeDependencies:dp.NodeDependencies,subsetDependencies:Vd.subsetDependencies,createAssignmentNode:Ru.createAssignmentNode};t.AssignmentNodeDependencies=n})),hp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.BlockNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,ResultSetDependencies:$u.ResultSetDependencies,createBlockNode:Ru.createBlockNode};t.BlockNodeDependencies=n})),yp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ConditionalNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createConditionalNode:Ru.createConditionalNode};t.ConditionalNodeDependencies=n})),vp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ConstantNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createConstantNode:Ru.createConstantNode};t.ConstantNodeDependencies=n})),gp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.FunctionAssignmentNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,typedDependencies:Gu.typedDependencies,createFunctionAssignmentNode:Ru.createFunctionAssignmentNode};t.FunctionAssignmentNodeDependencies=n})),bp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.IndexNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,RangeDependencies:Qu.RangeDependencies,sizeDependencies:Bl.sizeDependencies,createIndexNode:Ru.createIndexNode};t.IndexNodeDependencies=n})),xp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ObjectNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createObjectNode:Ru.createObjectNode};t.ObjectNodeDependencies=n})),Dp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.OperatorNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createOperatorNode:Ru.createOperatorNode};t.OperatorNodeDependencies=n})),_p=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ParenthesisNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createParenthesisNode:Ru.createParenthesisNode};t.ParenthesisNodeDependencies=n})),wp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.RangeNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createRangeNode:Ru.createRangeNode};t.RangeNodeDependencies=n})),Np=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.RelationalNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,createRelationalNode:Ru.createRelationalNode};t.RelationalNodeDependencies=n})),Mp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SymbolNodeDependencies=void 0;var n={UnitDependencies:Of.UnitDependencies,NodeDependencies:dp.NodeDependencies,createSymbolNode:Ru.createSymbolNode};t.SymbolNodeDependencies=n})),Op=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.FunctionNodeDependencies=void 0;var n={NodeDependencies:dp.NodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,createFunctionNode:Ru.createFunctionNode};t.FunctionNodeDependencies=n})),Sp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.parseDependencies=void 0;var n={AccessorNodeDependencies:fp.AccessorNodeDependencies,ArrayNodeDependencies:pp.ArrayNodeDependencies,AssignmentNodeDependencies:mp.AssignmentNodeDependencies,BlockNodeDependencies:hp.BlockNodeDependencies,ConditionalNodeDependencies:yp.ConditionalNodeDependencies,ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionAssignmentNodeDependencies:gp.FunctionAssignmentNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,IndexNodeDependencies:bp.IndexNodeDependencies,ObjectNodeDependencies:xp.ObjectNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,RangeNodeDependencies:wp.RangeNodeDependencies,RelationalNodeDependencies:Np.RelationalNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createParse:Ru.createParse};t.parseDependencies=n})),Pp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compileDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,typedDependencies:Gu.typedDependencies,createCompile:Ru.createCompile};t.compileDependencies=n})),jp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.evaluateDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,typedDependencies:Gu.typedDependencies,createEvaluate:Ru.createEvaluate};t.evaluateDependencies=n})),Ap=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ParserDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,createParserClass:Ru.createParserClass};t.ParserDependencies=n})),Ep=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.parserDependencies=void 0;var n={ParserDependencies:Ap.ParserDependencies,typedDependencies:Gu.typedDependencies,createParser:Ru.createParser};t.parserDependencies=n})),Cp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.qrDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,complexDependencies:dl.complexDependencies,conjDependencies:Il.conjDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalDependencies:jd.equalDependencies,identityDependencies:vd.identityDependencies,isZeroDependencies:nl.isZeroDependencies,matrixDependencies:pl.matrixDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,signDependencies:Fl.signDependencies,sqrtDependencies:Ul.sqrtDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,zerosDependencies:Dl.zerosDependencies,createQr:Ru.createQr};t.qrDependencies=n})),Tp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sluDependencies=void 0;var n={SparseMatrixDependencies:ol.SparseMatrixDependencies,absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,divideScalarDependencies:Td.divideScalarDependencies,largerDependencies:od.largerDependencies,largerEqDependencies:sd.largerEqDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,transposeDependencies:Od.transposeDependencies,typedDependencies:Gu.typedDependencies,createSlu:Ru.createSlu};t.sluDependencies=n})),kp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.lusolveDependencies=void 0;var n={DenseMatrixDependencies:Vu.DenseMatrixDependencies,lsolveDependencies:cf.lsolveDependencies,lupDependencies:kd.lupDependencies,matrixDependencies:pl.matrixDependencies,sluDependencies:Tp.sluDependencies,typedDependencies:Gu.typedDependencies,usolveDependencies:uf.usolveDependencies,createLusolve:Ru.createLusolve};t.lusolveDependencies=n})),Ip=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.HelpDependencies=void 0;var n={parseDependencies:Sp.parseDependencies,createHelpClass:Ru.createHelpClass};t.HelpDependencies=n})),Bp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.ChainDependencies=void 0;var n={createChainClass:Ru.createChainClass};t.ChainDependencies=n})),zp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.helpDependencies=void 0;var n={HelpDependencies:Ip.HelpDependencies,typedDependencies:Gu.typedDependencies,createHelp:Ru.createHelp};t.helpDependencies=n})),Rp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.chainDependencies=void 0;var n={ChainDependencies:Bp.ChainDependencies,typedDependencies:Gu.typedDependencies,createChain:Ru.createChain};t.chainDependencies=n})),qp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.expmDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,identityDependencies:vd.identityDependencies,invDependencies:Bd.invDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,createExpm:Ru.createExpm};t.expmDependencies=n})),Fp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sqrtmDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,identityDependencies:vd.identityDependencies,invDependencies:Bd.invDependencies,maxDependencies:Nf.maxDependencies,multiplyDependencies:Rl.multiplyDependencies,sizeDependencies:Bl.sizeDependencies,sqrtDependencies:Ul.sqrtDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createSqrtm:Ru.createSqrtm};t.sqrtmDependencies=n})),Up=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.divideDependencies=void 0;var n={divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,invDependencies:Bd.invDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,createDivide:Ru.createDivide};t.divideDependencies=n})),Lp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.distanceDependencies=void 0;var n={absDependencies:vl.absDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,sqrtDependencies:Ul.sqrtDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,unaryMinusDependencies:hl.unaryMinusDependencies,createDistance:Ru.createDistance};t.distanceDependencies=n})),Hp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.intersectDependencies=void 0;var n={absDependencies:vl.absDependencies,addDependencies:Md.addDependencies,addScalarDependencies:bl.addScalarDependencies,divideScalarDependencies:Td.divideScalarDependencies,equalScalarDependencies:al.equalScalarDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,smallerDependencies:rd.smallerDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createIntersect:Ru.createIntersect};t.intersectDependencies=n})),Zp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sumDependencies=void 0;var n={addDependencies:Md.addDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createSum:Ru.createSum};t.sumDependencies=n})),Vp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.meanDependencies=void 0;var n={addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,typedDependencies:Gu.typedDependencies,createMean:Ru.createMean};t.meanDependencies=n})),Wp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.medianDependencies=void 0;var n={addDependencies:Md.addDependencies,compareDependencies:yf.compareDependencies,divideDependencies:Up.divideDependencies,partitionSelectDependencies:_f.partitionSelectDependencies,typedDependencies:Gu.typedDependencies,createMedian:Ru.createMedian};t.medianDependencies=n})),Gp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.madDependencies=void 0;var n={absDependencies:vl.absDependencies,mapDependencies:bd.mapDependencies,medianDependencies:Wp.medianDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createMad:Ru.createMad};t.madDependencies=n})),$p=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.varianceDependencies=void 0;var n={addDependencies:Md.addDependencies,applyDependencies:gl.applyDependencies,divideDependencies:Up.divideDependencies,isNaNDependencies:rl.isNaNDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createVariance:Ru.createVariance};t.varianceDependencies=n})),Qp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.quantileSeqDependencies=void 0;var n={addDependencies:Md.addDependencies,compareDependencies:yf.compareDependencies,multiplyDependencies:Rl.multiplyDependencies,partitionSelectDependencies:_f.partitionSelectDependencies,typedDependencies:Gu.typedDependencies,createQuantileSeq:Ru.createQuantileSeq};t.quantileSeqDependencies=n})),Xp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stdDependencies=void 0;var n={sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,varianceDependencies:$p.varianceDependencies,createStd:Ru.createStd};t.stdDependencies=n})),Yp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.combinationsDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCombinations:Ru.createCombinations};t.combinationsDependencies=n})),Jp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.combinationsWithRepDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createCombinationsWithRep:Ru.createCombinationsWithRep};t.combinationsWithRepDependencies=n})),Kp=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gammaDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,ComplexDependencies:Hu.ComplexDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,powDependencies:qd.powDependencies,typedDependencies:Gu.typedDependencies,createGamma:Ru.createGamma};t.gammaDependencies=n})),em=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.factorialDependencies=void 0;var n={gammaDependencies:Kp.gammaDependencies,typedDependencies:Gu.typedDependencies,createFactorial:Ru.createFactorial};t.factorialDependencies=n})),tm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.kldivergenceDependencies=void 0;var n={divideDependencies:Up.divideDependencies,dotDivideDependencies:sf.dotDivideDependencies,isNumericDependencies:Ku.isNumericDependencies,logDependencies:nf.logDependencies,matrixDependencies:pl.matrixDependencies,multiplyDependencies:Rl.multiplyDependencies,sumDependencies:Zp.sumDependencies,typedDependencies:Gu.typedDependencies,createKldivergence:Ru.createKldivergence};t.kldivergenceDependencies=n})),nm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.multinomialDependencies=void 0;var n={addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,factorialDependencies:em.factorialDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isPositiveDependencies:tl.isPositiveDependencies,multiplyDependencies:Rl.multiplyDependencies,typedDependencies:Gu.typedDependencies,createMultinomial:Ru.createMultinomial};t.multinomialDependencies=n})),rm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.permutationsDependencies=void 0;var n={factorialDependencies:em.factorialDependencies,typedDependencies:Gu.typedDependencies,createPermutations:Ru.createPermutations};t.permutationsDependencies=n})),im=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.pickRandomDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createPickRandom:Ru.createPickRandom};t.pickRandomDependencies=n})),am=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createRandom:Ru.createRandom};t.randomDependencies=n})),om=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.randomIntDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createRandomInt:Ru.createRandomInt};t.randomIntDependencies=n})),sm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stirlingS2Dependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,combinationsDependencies:Yp.combinationsDependencies,divideScalarDependencies:Td.divideScalarDependencies,factorialDependencies:em.factorialDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,largerDependencies:od.largerDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,powDependencies:qd.powDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createStirlingS2:Ru.createStirlingS2};t.stirlingS2Dependencies=n})),cm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bellNumbersDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,stirlingS2Dependencies:sm.stirlingS2Dependencies,typedDependencies:Gu.typedDependencies,createBellNumbers:Ru.createBellNumbers};t.bellNumbersDependencies=n})),um=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.catalanDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,combinationsDependencies:Yp.combinationsDependencies,divideScalarDependencies:Td.divideScalarDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,multiplyScalarDependencies:kl.multiplyScalarDependencies,typedDependencies:Gu.typedDependencies,createCatalan:Ru.createCatalan};t.catalanDependencies=n})),lm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.compositionDependencies=void 0;var n={addScalarDependencies:bl.addScalarDependencies,combinationsDependencies:Yp.combinationsDependencies,isIntegerDependencies:Yu.isIntegerDependencies,isNegativeDependencies:Ju.isNegativeDependencies,isPositiveDependencies:tl.isPositiveDependencies,largerDependencies:od.largerDependencies,typedDependencies:Gu.typedDependencies,createComposition:Ru.createComposition};t.compositionDependencies=n})),dm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.simplifyDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,fractionDependencies:fl.fractionDependencies,ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,equalDependencies:jd.equalDependencies,isZeroDependencies:nl.isZeroDependencies,multiplyDependencies:Rl.multiplyDependencies,parseDependencies:Sp.parseDependencies,powDependencies:qd.powDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createSimplify:Ru.createSimplify};t.simplifyDependencies=n})),fm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.derivativeDependencies=void 0;var n={ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,equalDependencies:jd.equalDependencies,isZeroDependencies:nl.isZeroDependencies,numericDependencies:Cd.numericDependencies,parseDependencies:Sp.parseDependencies,simplifyDependencies:dm.simplifyDependencies,typedDependencies:Gu.typedDependencies,createDerivative:Ru.createDerivative};t.derivativeDependencies=n})),pm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rationalizeDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,fractionDependencies:fl.fractionDependencies,ConstantNodeDependencies:vp.ConstantNodeDependencies,FunctionNodeDependencies:Op.FunctionNodeDependencies,OperatorNodeDependencies:Dp.OperatorNodeDependencies,ParenthesisNodeDependencies:_p.ParenthesisNodeDependencies,SymbolNodeDependencies:Mp.SymbolNodeDependencies,addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,equalDependencies:jd.equalDependencies,isZeroDependencies:nl.isZeroDependencies,multiplyDependencies:Rl.multiplyDependencies,parseDependencies:Sp.parseDependencies,powDependencies:qd.powDependencies,simplifyDependencies:dm.simplifyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createRationalize:Ru.createRationalize};t.rationalizeDependencies=n})),mm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.reviverDependencies=void 0;var n={createReviver:Ru.createReviver};t.reviverDependencies=n})),hm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.replacerDependencies=void 0;var n={createReplacer:Ru.createReplacer};t.replacerDependencies=n})),ym=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.eDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createE:Ru.createE};t.eDependencies=n})),vm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.EDependencies=void 0;var n={eDependencies:ym.eDependencies,createUppercaseE:Ru.createUppercaseE};t.EDependencies=n})),gm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.falseDependencies=void 0;var n={createFalse:Ru.createFalse};t.falseDependencies=n})),bm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.iDependencies=void 0;var n={ComplexDependencies:Hu.ComplexDependencies,createI:Ru.createI};t.iDependencies=n})),xm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.InfinityDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createInfinity:Ru.createInfinity};t.InfinityDependencies=n})),Dm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LN10Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLN10:Ru.createLN10};t.LN10Dependencies=n})),_m=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LN2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLN2:Ru.createLN2};t.LN2Dependencies=n})),wm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LOG10EDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLOG10E:Ru.createLOG10E};t.LOG10EDependencies=n})),Nm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.LOG2EDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createLOG2E:Ru.createLOG2E};t.LOG2EDependencies=n})),Mm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.NaNDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createNaN:Ru.createNaN};t.NaNDependencies=n})),Om=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nullDependencies=void 0;var n={createNull:Ru.createNull};t.nullDependencies=n})),Sm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.phiDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createPhi:Ru.createPhi};t.phiDependencies=n})),Pm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.piDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createPi:Ru.createPi};t.piDependencies=n})),jm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.PIDependencies=void 0;var n={piDependencies:Pm.piDependencies,createUppercasePi:Ru.createUppercasePi};t.PIDependencies=n})),Am=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SQRT1_2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createSQRT1_2:Ru.createSQRT1_2};t.SQRT1_2Dependencies=n})),Em=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.SQRT2Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createSQRT2:Ru.createSQRT2};t.SQRT2Dependencies=n})),Cm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.tauDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createTau:Ru.createTau};t.tauDependencies=n})),Tm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.trueDependencies=void 0;var n={createTrue:Ru.createTrue};t.trueDependencies=n})),km=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.versionDependencies=void 0;var n={createVersion:Ru.createVersion};t.versionDependencies=n})),Im=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.atomicMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createAtomicMass:Ru.createAtomicMass};t.atomicMassDependencies=n})),Bm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.avogadroDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createAvogadro:Ru.createAvogadro};t.avogadroDependencies=n})),zm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bohrMagnetonDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createBohrMagneton:Ru.createBohrMagneton};t.bohrMagnetonDependencies=n})),Rm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.bohrRadiusDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createBohrRadius:Ru.createBohrRadius};t.bohrRadiusDependencies=n})),qm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.boltzmannDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createBoltzmann:Ru.createBoltzmann};t.boltzmannDependencies=n})),Fm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.classicalElectronRadiusDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createClassicalElectronRadius:Ru.createClassicalElectronRadius};t.classicalElectronRadiusDependencies=n})),Um=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.conductanceQuantumDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createConductanceQuantum:Ru.createConductanceQuantum};t.conductanceQuantumDependencies=n})),Lm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.coulombDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createCoulomb:Ru.createCoulomb};t.coulombDependencies=n})),Hm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.deuteronMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createDeuteronMass:Ru.createDeuteronMass};t.deuteronMassDependencies=n})),Zm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.efimovFactorDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createEfimovFactor:Ru.createEfimovFactor};t.efimovFactorDependencies=n})),Vm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.electricConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createElectricConstant:Ru.createElectricConstant};t.electricConstantDependencies=n})),Wm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.electronMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createElectronMass:Ru.createElectronMass};t.electronMassDependencies=n})),Gm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.elementaryChargeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createElementaryCharge:Ru.createElementaryCharge};t.elementaryChargeDependencies=n})),$m=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.faradayDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createFaraday:Ru.createFaraday};t.faradayDependencies=n})),Qm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.fermiCouplingDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createFermiCoupling:Ru.createFermiCoupling};t.fermiCouplingDependencies=n})),Xm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.fineStructureDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createFineStructure:Ru.createFineStructure};t.fineStructureDependencies=n})),Ym=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.firstRadiationDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createFirstRadiation:Ru.createFirstRadiation};t.firstRadiationDependencies=n})),Jm=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gasConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createGasConstant:Ru.createGasConstant};t.gasConstantDependencies=n})),Km=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gravitationConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createGravitationConstant:Ru.createGravitationConstant};t.gravitationConstantDependencies=n})),eh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.gravityDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createGravity:Ru.createGravity};t.gravityDependencies=n})),th=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.hartreeEnergyDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createHartreeEnergy:Ru.createHartreeEnergy};t.hartreeEnergyDependencies=n})),nh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.inverseConductanceQuantumDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createInverseConductanceQuantum:Ru.createInverseConductanceQuantum};t.inverseConductanceQuantumDependencies=n})),rh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.klitzingDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createKlitzing:Ru.createKlitzing};t.klitzingDependencies=n})),ih=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.loschmidtDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createLoschmidt:Ru.createLoschmidt};t.loschmidtDependencies=n})),ah=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.magneticConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMagneticConstant:Ru.createMagneticConstant};t.magneticConstantDependencies=n})),oh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.magneticFluxQuantumDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMagneticFluxQuantum:Ru.createMagneticFluxQuantum};t.magneticFluxQuantumDependencies=n})),sh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.molarMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarMass:Ru.createMolarMass};t.molarMassDependencies=n})),ch=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.molarMassC12Dependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarMassC12:Ru.createMolarMassC12};t.molarMassC12Dependencies=n})),uh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.molarPlanckConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarPlanckConstant:Ru.createMolarPlanckConstant};t.molarPlanckConstantDependencies=n})),lh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.molarVolumeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createMolarVolume:Ru.createMolarVolume};t.molarVolumeDependencies=n})),dh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.neutronMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createNeutronMass:Ru.createNeutronMass};t.neutronMassDependencies=n})),fh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.nuclearMagnetonDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createNuclearMagneton:Ru.createNuclearMagneton};t.nuclearMagnetonDependencies=n})),ph=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.planckChargeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckCharge:Ru.createPlanckCharge};t.planckChargeDependencies=n})),mh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.planckConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckConstant:Ru.createPlanckConstant};t.planckConstantDependencies=n})),hh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.planckLengthDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckLength:Ru.createPlanckLength};t.planckLengthDependencies=n})),yh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.planckMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckMass:Ru.createPlanckMass};t.planckMassDependencies=n})),vh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.planckTemperatureDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckTemperature:Ru.createPlanckTemperature};t.planckTemperatureDependencies=n})),gh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.planckTimeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createPlanckTime:Ru.createPlanckTime};t.planckTimeDependencies=n})),bh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.protonMassDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createProtonMass:Ru.createProtonMass};t.protonMassDependencies=n})),xh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.quantumOfCirculationDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createQuantumOfCirculation:Ru.createQuantumOfCirculation};t.quantumOfCirculationDependencies=n})),Dh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.reducedPlanckConstantDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createReducedPlanckConstant:Ru.createReducedPlanckConstant};t.reducedPlanckConstantDependencies=n})),_h=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rydbergDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createRydberg:Ru.createRydberg};t.rydbergDependencies=n})),wh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sackurTetrodeDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createSackurTetrode:Ru.createSackurTetrode};t.sackurTetrodeDependencies=n})),Nh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.secondRadiationDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createSecondRadiation:Ru.createSecondRadiation};t.secondRadiationDependencies=n})),Mh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.speedOfLightDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createSpeedOfLight:Ru.createSpeedOfLight};t.speedOfLightDependencies=n})),Oh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stefanBoltzmannDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createStefanBoltzmann:Ru.createStefanBoltzmann};t.stefanBoltzmannDependencies=n})),Sh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.thomsonCrossSectionDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createThomsonCrossSection:Ru.createThomsonCrossSection};t.thomsonCrossSectionDependencies=n})),Ph=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.vacuumImpedanceDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createVacuumImpedance:Ru.createVacuumImpedance};t.vacuumImpedanceDependencies=n})),jh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.weakMixingAngleDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,createWeakMixingAngle:Ru.createWeakMixingAngle};t.weakMixingAngleDependencies=n})),Ah=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.wienDisplacementDependencies=void 0;var n={BigNumberDependencies:Lu.BigNumberDependencies,UnitDependencies:Of.UnitDependencies,createWienDisplacement:Ru.createWienDisplacement};t.wienDisplacementDependencies=n})),Eh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.applyTransformDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,typedDependencies:Gu.typedDependencies,createApplyTransform:Ru.createApplyTransform};t.applyTransformDependencies=n})),Ch=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.columnTransformDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createColumnTransform:Ru.createColumnTransform};t.columnTransformDependencies=n})),Th=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.filterTransformDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createFilterTransform:Ru.createFilterTransform};t.filterTransformDependencies=n})),kh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.forEachTransformDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createForEachTransform:Ru.createForEachTransform};t.forEachTransformDependencies=n})),Ih=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.indexTransformDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,createIndexTransform:Ru.createIndexTransform};t.indexTransformDependencies=n})),Bh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.mapTransformDependencies=void 0;var n={typedDependencies:Gu.typedDependencies,createMapTransform:Ru.createMapTransform};t.mapTransformDependencies=n})),zh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.maxTransformDependencies=void 0;var n={largerDependencies:od.largerDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createMaxTransform:Ru.createMaxTransform};t.maxTransformDependencies=n})),Rh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.meanTransformDependencies=void 0;var n={addDependencies:Md.addDependencies,divideDependencies:Up.divideDependencies,typedDependencies:Gu.typedDependencies,createMeanTransform:Ru.createMeanTransform};t.meanTransformDependencies=n})),qh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.minTransformDependencies=void 0;var n={numericDependencies:Cd.numericDependencies,smallerDependencies:rd.smallerDependencies,typedDependencies:Gu.typedDependencies,createMinTransform:Ru.createMinTransform};t.minTransformDependencies=n})),Fh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rangeTransformDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,matrixDependencies:pl.matrixDependencies,largerDependencies:od.largerDependencies,largerEqDependencies:sd.largerEqDependencies,smallerDependencies:rd.smallerDependencies,smallerEqDependencies:cd.smallerEqDependencies,typedDependencies:Gu.typedDependencies,createRangeTransform:Ru.createRangeTransform};t.rangeTransformDependencies=n})),Uh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.rowTransformDependencies=void 0;var n={IndexDependencies:ad.IndexDependencies,matrixDependencies:pl.matrixDependencies,rangeDependencies:ud.rangeDependencies,typedDependencies:Gu.typedDependencies,createRowTransform:Ru.createRowTransform};t.rowTransformDependencies=n})),Lh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.subsetTransformDependencies=void 0;var n={matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createSubsetTransform:Ru.createSubsetTransform};t.subsetTransformDependencies=n})),Hh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.concatTransformDependencies=void 0;var n={isIntegerDependencies:Yu.isIntegerDependencies,matrixDependencies:pl.matrixDependencies,typedDependencies:Gu.typedDependencies,createConcatTransform:Ru.createConcatTransform};t.concatTransformDependencies=n})),Zh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.diffTransformDependencies=void 0;var n={bignumberDependencies:ll.bignumberDependencies,matrixDependencies:pl.matrixDependencies,numberDependencies:sl.numberDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createDiffTransform:Ru.createDiffTransform};t.diffTransformDependencies=n})),Vh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.stdTransformDependencies=void 0;var n={sqrtDependencies:Ul.sqrtDependencies,typedDependencies:Gu.typedDependencies,varianceDependencies:$p.varianceDependencies,createStdTransform:Ru.createStdTransform};t.stdTransformDependencies=n})),Wh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.sumTransformDependencies=void 0;var n={addDependencies:Md.addDependencies,numericDependencies:Cd.numericDependencies,typedDependencies:Gu.typedDependencies,createSumTransform:Ru.createSumTransform};t.sumTransformDependencies=n})),Gh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.varianceTransformDependencies=void 0;var n={addDependencies:Md.addDependencies,applyDependencies:gl.applyDependencies,divideDependencies:Up.divideDependencies,isNaNDependencies:rl.isNaNDependencies,multiplyDependencies:Rl.multiplyDependencies,subtractDependencies:Hl.subtractDependencies,typedDependencies:Gu.typedDependencies,createVarianceTransform:Ru.createVarianceTransform};t.varianceTransformDependencies=n})),$h=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function r(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}Object.defineProperty(t,\"__esModule\",{value:!0}),t.all=void 0;var i=function(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!==n(e)&&\"function\"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var i={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var s=a?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(i,o,s):i[o]=e[o]}i.default=e,t&&t.set(e,i);return i}(Ru);t.all=i})),Qh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),Object.defineProperty(t,\"typedDependencies\",{enumerable:!0,get:function(){return Gu.typedDependencies}}),Object.defineProperty(t,\"ResultSetDependencies\",{enumerable:!0,get:function(){return $u.ResultSetDependencies}}),Object.defineProperty(t,\"BigNumberDependencies\",{enumerable:!0,get:function(){return Lu.BigNumberDependencies}}),Object.defineProperty(t,\"ComplexDependencies\",{enumerable:!0,get:function(){return Hu.ComplexDependencies}}),Object.defineProperty(t,\"FractionDependencies\",{enumerable:!0,get:function(){return Wu.FractionDependencies}}),Object.defineProperty(t,\"RangeDependencies\",{enumerable:!0,get:function(){return Qu.RangeDependencies}}),Object.defineProperty(t,\"MatrixDependencies\",{enumerable:!0,get:function(){return Zu.MatrixDependencies}}),Object.defineProperty(t,\"DenseMatrixDependencies\",{enumerable:!0,get:function(){return Vu.DenseMatrixDependencies}}),Object.defineProperty(t,\"cloneDependencies\",{enumerable:!0,get:function(){return Xu.cloneDependencies}}),Object.defineProperty(t,\"isIntegerDependencies\",{enumerable:!0,get:function(){return Yu.isIntegerDependencies}}),Object.defineProperty(t,\"isNegativeDependencies\",{enumerable:!0,get:function(){return Ju.isNegativeDependencies}}),Object.defineProperty(t,\"isNumericDependencies\",{enumerable:!0,get:function(){return Ku.isNumericDependencies}}),Object.defineProperty(t,\"hasNumericValueDependencies\",{enumerable:!0,get:function(){return el.hasNumericValueDependencies}}),Object.defineProperty(t,\"isPositiveDependencies\",{enumerable:!0,get:function(){return tl.isPositiveDependencies}}),Object.defineProperty(t,\"isZeroDependencies\",{enumerable:!0,get:function(){return nl.isZeroDependencies}}),Object.defineProperty(t,\"isNaNDependencies\",{enumerable:!0,get:function(){return rl.isNaNDependencies}}),Object.defineProperty(t,\"typeOfDependencies\",{enumerable:!0,get:function(){return il.typeOfDependencies}}),Object.defineProperty(t,\"equalScalarDependencies\",{enumerable:!0,get:function(){return al.equalScalarDependencies}}),Object.defineProperty(t,\"SparseMatrixDependencies\",{enumerable:!0,get:function(){return ol.SparseMatrixDependencies}}),Object.defineProperty(t,\"numberDependencies\",{enumerable:!0,get:function(){return sl.numberDependencies}}),Object.defineProperty(t,\"stringDependencies\",{enumerable:!0,get:function(){return cl.stringDependencies}}),Object.defineProperty(t,\"booleanDependencies\",{enumerable:!0,get:function(){return ul.booleanDependencies}}),Object.defineProperty(t,\"bignumberDependencies\",{enumerable:!0,get:function(){return ll.bignumberDependencies}}),Object.defineProperty(t,\"complexDependencies\",{enumerable:!0,get:function(){return dl.complexDependencies}}),Object.defineProperty(t,\"fractionDependencies\",{enumerable:!0,get:function(){return fl.fractionDependencies}}),Object.defineProperty(t,\"matrixDependencies\",{enumerable:!0,get:function(){return pl.matrixDependencies}}),Object.defineProperty(t,\"splitUnitDependencies\",{enumerable:!0,get:function(){return ml.splitUnitDependencies}}),Object.defineProperty(t,\"unaryMinusDependencies\",{enumerable:!0,get:function(){return hl.unaryMinusDependencies}}),Object.defineProperty(t,\"unaryPlusDependencies\",{enumerable:!0,get:function(){return yl.unaryPlusDependencies}}),Object.defineProperty(t,\"absDependencies\",{enumerable:!0,get:function(){return vl.absDependencies}}),Object.defineProperty(t,\"applyDependencies\",{enumerable:!0,get:function(){return gl.applyDependencies}}),Object.defineProperty(t,\"addScalarDependencies\",{enumerable:!0,get:function(){return bl.addScalarDependencies}}),Object.defineProperty(t,\"cbrtDependencies\",{enumerable:!0,get:function(){return xl.cbrtDependencies}}),Object.defineProperty(t,\"ceilDependencies\",{enumerable:!0,get:function(){return wl.ceilDependencies}}),Object.defineProperty(t,\"cubeDependencies\",{enumerable:!0,get:function(){return Nl.cubeDependencies}}),Object.defineProperty(t,\"expDependencies\",{enumerable:!0,get:function(){return Ml.expDependencies}}),Object.defineProperty(t,\"expm1Dependencies\",{enumerable:!0,get:function(){return Ol.expm1Dependencies}}),Object.defineProperty(t,\"fixDependencies\",{enumerable:!0,get:function(){return Pl.fixDependencies}}),Object.defineProperty(t,\"floorDependencies\",{enumerable:!0,get:function(){return Sl.floorDependencies}}),Object.defineProperty(t,\"gcdDependencies\",{enumerable:!0,get:function(){return jl.gcdDependencies}}),Object.defineProperty(t,\"lcmDependencies\",{enumerable:!0,get:function(){return Al.lcmDependencies}}),Object.defineProperty(t,\"log10Dependencies\",{enumerable:!0,get:function(){return El.log10Dependencies}}),Object.defineProperty(t,\"log2Dependencies\",{enumerable:!0,get:function(){return Cl.log2Dependencies}}),Object.defineProperty(t,\"modDependencies\",{enumerable:!0,get:function(){return Tl.modDependencies}}),Object.defineProperty(t,\"multiplyScalarDependencies\",{enumerable:!0,get:function(){return kl.multiplyScalarDependencies}}),Object.defineProperty(t,\"multiplyDependencies\",{enumerable:!0,get:function(){return Rl.multiplyDependencies}}),Object.defineProperty(t,\"nthRootDependencies\",{enumerable:!0,get:function(){return ql.nthRootDependencies}}),Object.defineProperty(t,\"signDependencies\",{enumerable:!0,get:function(){return Fl.signDependencies}}),Object.defineProperty(t,\"sqrtDependencies\",{enumerable:!0,get:function(){return Ul.sqrtDependencies}}),Object.defineProperty(t,\"squareDependencies\",{enumerable:!0,get:function(){return Ll.squareDependencies}}),Object.defineProperty(t,\"subtractDependencies\",{enumerable:!0,get:function(){return Hl.subtractDependencies}}),Object.defineProperty(t,\"xgcdDependencies\",{enumerable:!0,get:function(){return Zl.xgcdDependencies}}),Object.defineProperty(t,\"dotMultiplyDependencies\",{enumerable:!0,get:function(){return Vl.dotMultiplyDependencies}}),Object.defineProperty(t,\"bitAndDependencies\",{enumerable:!0,get:function(){return Wl.bitAndDependencies}}),Object.defineProperty(t,\"bitNotDependencies\",{enumerable:!0,get:function(){return Gl.bitNotDependencies}}),Object.defineProperty(t,\"bitOrDependencies\",{enumerable:!0,get:function(){return $l.bitOrDependencies}}),Object.defineProperty(t,\"bitXorDependencies\",{enumerable:!0,get:function(){return Ql.bitXorDependencies}}),Object.defineProperty(t,\"argDependencies\",{enumerable:!0,get:function(){return Xl.argDependencies}}),Object.defineProperty(t,\"conjDependencies\",{enumerable:!0,get:function(){return Il.conjDependencies}}),Object.defineProperty(t,\"imDependencies\",{enumerable:!0,get:function(){return Yl.imDependencies}}),Object.defineProperty(t,\"reDependencies\",{enumerable:!0,get:function(){return Jl.reDependencies}}),Object.defineProperty(t,\"notDependencies\",{enumerable:!0,get:function(){return Kl.notDependencies}}),Object.defineProperty(t,\"orDependencies\",{enumerable:!0,get:function(){return ed.orDependencies}}),Object.defineProperty(t,\"xorDependencies\",{enumerable:!0,get:function(){return td.xorDependencies}}),Object.defineProperty(t,\"concatDependencies\",{enumerable:!0,get:function(){return nd.concatDependencies}}),Object.defineProperty(t,\"columnDependencies\",{enumerable:!0,get:function(){return ld.columnDependencies}}),Object.defineProperty(t,\"crossDependencies\",{enumerable:!0,get:function(){return dd.crossDependencies}}),Object.defineProperty(t,\"diagDependencies\",{enumerable:!0,get:function(){return fd.diagDependencies}}),Object.defineProperty(t,\"filterDependencies\",{enumerable:!0,get:function(){return pd.filterDependencies}}),Object.defineProperty(t,\"flattenDependencies\",{enumerable:!0,get:function(){return md.flattenDependencies}}),Object.defineProperty(t,\"forEachDependencies\",{enumerable:!0,get:function(){return hd.forEachDependencies}}),Object.defineProperty(t,\"getMatrixDataTypeDependencies\",{enumerable:!0,get:function(){return yd.getMatrixDataTypeDependencies}}),Object.defineProperty(t,\"identityDependencies\",{enumerable:!0,get:function(){return vd.identityDependencies}}),Object.defineProperty(t,\"kronDependencies\",{enumerable:!0,get:function(){return gd.kronDependencies}}),Object.defineProperty(t,\"mapDependencies\",{enumerable:!0,get:function(){return bd.mapDependencies}}),Object.defineProperty(t,\"diffDependencies\",{enumerable:!0,get:function(){return xd.diffDependencies}}),Object.defineProperty(t,\"onesDependencies\",{enumerable:!0,get:function(){return Dd.onesDependencies}}),Object.defineProperty(t,\"rangeDependencies\",{enumerable:!0,get:function(){return ud.rangeDependencies}}),Object.defineProperty(t,\"reshapeDependencies\",{enumerable:!0,get:function(){return _d.reshapeDependencies}}),Object.defineProperty(t,\"resizeDependencies\",{enumerable:!0,get:function(){return wd.resizeDependencies}}),Object.defineProperty(t,\"rotateDependencies\",{enumerable:!0,get:function(){return Ld.rotateDependencies}}),Object.defineProperty(t,\"rotationMatrixDependencies\",{enumerable:!0,get:function(){return Ud.rotationMatrixDependencies}}),Object.defineProperty(t,\"rowDependencies\",{enumerable:!0,get:function(){return Hd.rowDependencies}}),Object.defineProperty(t,\"sizeDependencies\",{enumerable:!0,get:function(){return Bl.sizeDependencies}}),Object.defineProperty(t,\"squeezeDependencies\",{enumerable:!0,get:function(){return Zd.squeezeDependencies}}),Object.defineProperty(t,\"subsetDependencies\",{enumerable:!0,get:function(){return Vd.subsetDependencies}}),Object.defineProperty(t,\"transposeDependencies\",{enumerable:!0,get:function(){return Od.transposeDependencies}}),Object.defineProperty(t,\"ctransposeDependencies\",{enumerable:!0,get:function(){return Sd.ctransposeDependencies}}),Object.defineProperty(t,\"zerosDependencies\",{enumerable:!0,get:function(){return Dl.zerosDependencies}}),Object.defineProperty(t,\"erfDependencies\",{enumerable:!0,get:function(){return Wd.erfDependencies}}),Object.defineProperty(t,\"modeDependencies\",{enumerable:!0,get:function(){return Gd.modeDependencies}}),Object.defineProperty(t,\"prodDependencies\",{enumerable:!0,get:function(){return $d.prodDependencies}}),Object.defineProperty(t,\"formatDependencies\",{enumerable:!0,get:function(){return Qd.formatDependencies}}),Object.defineProperty(t,\"binDependencies\",{enumerable:!0,get:function(){return Xd.binDependencies}}),Object.defineProperty(t,\"octDependencies\",{enumerable:!0,get:function(){return Yd.octDependencies}}),Object.defineProperty(t,\"hexDependencies\",{enumerable:!0,get:function(){return Jd.hexDependencies}}),Object.defineProperty(t,\"printDependencies\",{enumerable:!0,get:function(){return Kd.printDependencies}}),Object.defineProperty(t,\"toDependencies\",{enumerable:!0,get:function(){return ef.toDependencies}}),Object.defineProperty(t,\"isPrimeDependencies\",{enumerable:!0,get:function(){return tf.isPrimeDependencies}}),Object.defineProperty(t,\"numericDependencies\",{enumerable:!0,get:function(){return Cd.numericDependencies}}),Object.defineProperty(t,\"divideScalarDependencies\",{enumerable:!0,get:function(){return Td.divideScalarDependencies}}),Object.defineProperty(t,\"powDependencies\",{enumerable:!0,get:function(){return qd.powDependencies}}),Object.defineProperty(t,\"roundDependencies\",{enumerable:!0,get:function(){return _l.roundDependencies}}),Object.defineProperty(t,\"logDependencies\",{enumerable:!0,get:function(){return nf.logDependencies}}),Object.defineProperty(t,\"log1pDependencies\",{enumerable:!0,get:function(){return rf.log1pDependencies}}),Object.defineProperty(t,\"nthRootsDependencies\",{enumerable:!0,get:function(){return af.nthRootsDependencies}}),Object.defineProperty(t,\"dotPowDependencies\",{enumerable:!0,get:function(){return of.dotPowDependencies}}),Object.defineProperty(t,\"dotDivideDependencies\",{enumerable:!0,get:function(){return sf.dotDivideDependencies}}),Object.defineProperty(t,\"lsolveDependencies\",{enumerable:!0,get:function(){return cf.lsolveDependencies}}),Object.defineProperty(t,\"usolveDependencies\",{enumerable:!0,get:function(){return uf.usolveDependencies}}),Object.defineProperty(t,\"lsolveAllDependencies\",{enumerable:!0,get:function(){return lf.lsolveAllDependencies}}),Object.defineProperty(t,\"usolveAllDependencies\",{enumerable:!0,get:function(){return df.usolveAllDependencies}}),Object.defineProperty(t,\"leftShiftDependencies\",{enumerable:!0,get:function(){return ff.leftShiftDependencies}}),Object.defineProperty(t,\"rightArithShiftDependencies\",{enumerable:!0,get:function(){return pf.rightArithShiftDependencies}}),Object.defineProperty(t,\"rightLogShiftDependencies\",{enumerable:!0,get:function(){return mf.rightLogShiftDependencies}}),Object.defineProperty(t,\"andDependencies\",{enumerable:!0,get:function(){return hf.andDependencies}}),Object.defineProperty(t,\"compareDependencies\",{enumerable:!0,get:function(){return yf.compareDependencies}}),Object.defineProperty(t,\"compareNaturalDependencies\",{enumerable:!0,get:function(){return vf.compareNaturalDependencies}}),Object.defineProperty(t,\"compareTextDependencies\",{enumerable:!0,get:function(){return gf.compareTextDependencies}}),Object.defineProperty(t,\"equalDependencies\",{enumerable:!0,get:function(){return jd.equalDependencies}}),Object.defineProperty(t,\"equalTextDependencies\",{enumerable:!0,get:function(){return bf.equalTextDependencies}}),Object.defineProperty(t,\"smallerDependencies\",{enumerable:!0,get:function(){return rd.smallerDependencies}}),Object.defineProperty(t,\"smallerEqDependencies\",{enumerable:!0,get:function(){return cd.smallerEqDependencies}}),Object.defineProperty(t,\"largerDependencies\",{enumerable:!0,get:function(){return od.largerDependencies}}),Object.defineProperty(t,\"largerEqDependencies\",{enumerable:!0,get:function(){return sd.largerEqDependencies}}),Object.defineProperty(t,\"deepEqualDependencies\",{enumerable:!0,get:function(){return xf.deepEqualDependencies}}),Object.defineProperty(t,\"unequalDependencies\",{enumerable:!0,get:function(){return Df.unequalDependencies}}),Object.defineProperty(t,\"partitionSelectDependencies\",{enumerable:!0,get:function(){return _f.partitionSelectDependencies}}),Object.defineProperty(t,\"sortDependencies\",{enumerable:!0,get:function(){return wf.sortDependencies}}),Object.defineProperty(t,\"maxDependencies\",{enumerable:!0,get:function(){return Nf.maxDependencies}}),Object.defineProperty(t,\"minDependencies\",{enumerable:!0,get:function(){return Mf.minDependencies}}),Object.defineProperty(t,\"ImmutableDenseMatrixDependencies\",{enumerable:!0,get:function(){return id.ImmutableDenseMatrixDependencies}}),Object.defineProperty(t,\"IndexDependencies\",{enumerable:!0,get:function(){return ad.IndexDependencies}}),Object.defineProperty(t,\"FibonacciHeapDependencies\",{enumerable:!0,get:function(){return Ad.FibonacciHeapDependencies}}),Object.defineProperty(t,\"SpaDependencies\",{enumerable:!0,get:function(){return Ed.SpaDependencies}}),Object.defineProperty(t,\"UnitDependencies\",{enumerable:!0,get:function(){return Of.UnitDependencies}}),Object.defineProperty(t,\"unitDependencies\",{enumerable:!0,get:function(){return Sf.unitDependencies}}),Object.defineProperty(t,\"sparseDependencies\",{enumerable:!0,get:function(){return Pf.sparseDependencies}}),Object.defineProperty(t,\"createUnitDependencies\",{enumerable:!0,get:function(){return jf.createUnitDependencies}}),Object.defineProperty(t,\"acosDependencies\",{enumerable:!0,get:function(){return Af.acosDependencies}}),Object.defineProperty(t,\"acoshDependencies\",{enumerable:!0,get:function(){return Ef.acoshDependencies}}),Object.defineProperty(t,\"acotDependencies\",{enumerable:!0,get:function(){return Cf.acotDependencies}}),Object.defineProperty(t,\"acothDependencies\",{enumerable:!0,get:function(){return Tf.acothDependencies}}),Object.defineProperty(t,\"acscDependencies\",{enumerable:!0,get:function(){return kf.acscDependencies}}),Object.defineProperty(t,\"acschDependencies\",{enumerable:!0,get:function(){return If.acschDependencies}}),Object.defineProperty(t,\"asecDependencies\",{enumerable:!0,get:function(){return Bf.asecDependencies}}),Object.defineProperty(t,\"asechDependencies\",{enumerable:!0,get:function(){return zf.asechDependencies}}),Object.defineProperty(t,\"asinDependencies\",{enumerable:!0,get:function(){return Rf.asinDependencies}}),Object.defineProperty(t,\"asinhDependencies\",{enumerable:!0,get:function(){return qf.asinhDependencies}}),Object.defineProperty(t,\"atanDependencies\",{enumerable:!0,get:function(){return Pd.atanDependencies}}),Object.defineProperty(t,\"atan2Dependencies\",{enumerable:!0,get:function(){return Ff.atan2Dependencies}}),Object.defineProperty(t,\"atanhDependencies\",{enumerable:!0,get:function(){return Uf.atanhDependencies}}),Object.defineProperty(t,\"cosDependencies\",{enumerable:!0,get:function(){return Nd.cosDependencies}}),Object.defineProperty(t,\"coshDependencies\",{enumerable:!0,get:function(){return Lf.coshDependencies}}),Object.defineProperty(t,\"cotDependencies\",{enumerable:!0,get:function(){return Hf.cotDependencies}}),Object.defineProperty(t,\"cothDependencies\",{enumerable:!0,get:function(){return Zf.cothDependencies}}),Object.defineProperty(t,\"cscDependencies\",{enumerable:!0,get:function(){return Vf.cscDependencies}}),Object.defineProperty(t,\"cschDependencies\",{enumerable:!0,get:function(){return Wf.cschDependencies}}),Object.defineProperty(t,\"secDependencies\",{enumerable:!0,get:function(){return Gf.secDependencies}}),Object.defineProperty(t,\"sechDependencies\",{enumerable:!0,get:function(){return $f.sechDependencies}}),Object.defineProperty(t,\"sinDependencies\",{enumerable:!0,get:function(){return zd.sinDependencies}}),Object.defineProperty(t,\"sinhDependencies\",{enumerable:!0,get:function(){return Qf.sinhDependencies}}),Object.defineProperty(t,\"tanDependencies\",{enumerable:!0,get:function(){return Xf.tanDependencies}}),Object.defineProperty(t,\"tanhDependencies\",{enumerable:!0,get:function(){return Yf.tanhDependencies}}),Object.defineProperty(t,\"setCartesianDependencies\",{enumerable:!0,get:function(){return Jf.setCartesianDependencies}}),Object.defineProperty(t,\"setDifferenceDependencies\",{enumerable:!0,get:function(){return Kf.setDifferenceDependencies}}),Object.defineProperty(t,\"setDistinctDependencies\",{enumerable:!0,get:function(){return ep.setDistinctDependencies}}),Object.defineProperty(t,\"setIntersectDependencies\",{enumerable:!0,get:function(){return tp.setIntersectDependencies}}),Object.defineProperty(t,\"setIsSubsetDependencies\",{enumerable:!0,get:function(){return np.setIsSubsetDependencies}}),Object.defineProperty(t,\"setMultiplicityDependencies\",{enumerable:!0,get:function(){return rp.setMultiplicityDependencies}}),Object.defineProperty(t,\"setPowersetDependencies\",{enumerable:!0,get:function(){return ip.setPowersetDependencies}}),Object.defineProperty(t,\"setSizeDependencies\",{enumerable:!0,get:function(){return ap.setSizeDependencies}}),Object.defineProperty(t,\"setSymDifferenceDependencies\",{enumerable:!0,get:function(){return op.setSymDifferenceDependencies}}),Object.defineProperty(t,\"setUnionDependencies\",{enumerable:!0,get:function(){return sp.setUnionDependencies}}),Object.defineProperty(t,\"addDependencies\",{enumerable:!0,get:function(){return Md.addDependencies}}),Object.defineProperty(t,\"hypotDependencies\",{enumerable:!0,get:function(){return cp.hypotDependencies}}),Object.defineProperty(t,\"normDependencies\",{enumerable:!0,get:function(){return Fd.normDependencies}}),Object.defineProperty(t,\"dotDependencies\",{enumerable:!0,get:function(){return zl.dotDependencies}}),Object.defineProperty(t,\"traceDependencies\",{enumerable:!0,get:function(){return up.traceDependencies}}),Object.defineProperty(t,\"indexDependencies\",{enumerable:!0,get:function(){return lp.indexDependencies}}),Object.defineProperty(t,\"NodeDependencies\",{enumerable:!0,get:function(){return dp.NodeDependencies}}),Object.defineProperty(t,\"AccessorNodeDependencies\",{enumerable:!0,get:function(){return fp.AccessorNodeDependencies}}),Object.defineProperty(t,\"ArrayNodeDependencies\",{enumerable:!0,get:function(){return pp.ArrayNodeDependencies}}),Object.defineProperty(t,\"AssignmentNodeDependencies\",{enumerable:!0,get:function(){return mp.AssignmentNodeDependencies}}),Object.defineProperty(t,\"BlockNodeDependencies\",{enumerable:!0,get:function(){return hp.BlockNodeDependencies}}),Object.defineProperty(t,\"ConditionalNodeDependencies\",{enumerable:!0,get:function(){return yp.ConditionalNodeDependencies}}),Object.defineProperty(t,\"ConstantNodeDependencies\",{enumerable:!0,get:function(){return vp.ConstantNodeDependencies}}),Object.defineProperty(t,\"FunctionAssignmentNodeDependencies\",{enumerable:!0,get:function(){return gp.FunctionAssignmentNodeDependencies}}),Object.defineProperty(t,\"IndexNodeDependencies\",{enumerable:!0,get:function(){return bp.IndexNodeDependencies}}),Object.defineProperty(t,\"ObjectNodeDependencies\",{enumerable:!0,get:function(){return xp.ObjectNodeDependencies}}),Object.defineProperty(t,\"OperatorNodeDependencies\",{enumerable:!0,get:function(){return Dp.OperatorNodeDependencies}}),Object.defineProperty(t,\"ParenthesisNodeDependencies\",{enumerable:!0,get:function(){return _p.ParenthesisNodeDependencies}}),Object.defineProperty(t,\"RangeNodeDependencies\",{enumerable:!0,get:function(){return wp.RangeNodeDependencies}}),Object.defineProperty(t,\"RelationalNodeDependencies\",{enumerable:!0,get:function(){return Np.RelationalNodeDependencies}}),Object.defineProperty(t,\"SymbolNodeDependencies\",{enumerable:!0,get:function(){return Mp.SymbolNodeDependencies}}),Object.defineProperty(t,\"FunctionNodeDependencies\",{enumerable:!0,get:function(){return Op.FunctionNodeDependencies}}),Object.defineProperty(t,\"parseDependencies\",{enumerable:!0,get:function(){return Sp.parseDependencies}}),Object.defineProperty(t,\"compileDependencies\",{enumerable:!0,get:function(){return Pp.compileDependencies}}),Object.defineProperty(t,\"evaluateDependencies\",{enumerable:!0,get:function(){return jp.evaluateDependencies}}),Object.defineProperty(t,\"ParserDependencies\",{enumerable:!0,get:function(){return Ap.ParserDependencies}}),Object.defineProperty(t,\"parserDependencies\",{enumerable:!0,get:function(){return Ep.parserDependencies}}),Object.defineProperty(t,\"lupDependencies\",{enumerable:!0,get:function(){return kd.lupDependencies}}),Object.defineProperty(t,\"qrDependencies\",{enumerable:!0,get:function(){return Cp.qrDependencies}}),Object.defineProperty(t,\"sluDependencies\",{enumerable:!0,get:function(){return Tp.sluDependencies}}),Object.defineProperty(t,\"lusolveDependencies\",{enumerable:!0,get:function(){return kp.lusolveDependencies}}),Object.defineProperty(t,\"HelpDependencies\",{enumerable:!0,get:function(){return Ip.HelpDependencies}}),Object.defineProperty(t,\"ChainDependencies\",{enumerable:!0,get:function(){return Bp.ChainDependencies}}),Object.defineProperty(t,\"helpDependencies\",{enumerable:!0,get:function(){return zp.helpDependencies}}),Object.defineProperty(t,\"chainDependencies\",{enumerable:!0,get:function(){return Rp.chainDependencies}}),Object.defineProperty(t,\"detDependencies\",{enumerable:!0,get:function(){return Id.detDependencies}}),Object.defineProperty(t,\"invDependencies\",{enumerable:!0,get:function(){return Bd.invDependencies}}),Object.defineProperty(t,\"eigsDependencies\",{enumerable:!0,get:function(){return Rd.eigsDependencies}}),Object.defineProperty(t,\"expmDependencies\",{enumerable:!0,get:function(){return qp.expmDependencies}}),Object.defineProperty(t,\"sqrtmDependencies\",{enumerable:!0,get:function(){return Fp.sqrtmDependencies}}),Object.defineProperty(t,\"divideDependencies\",{enumerable:!0,get:function(){return Up.divideDependencies}}),Object.defineProperty(t,\"distanceDependencies\",{enumerable:!0,get:function(){return Lp.distanceDependencies}}),Object.defineProperty(t,\"intersectDependencies\",{enumerable:!0,get:function(){return Hp.intersectDependencies}}),Object.defineProperty(t,\"sumDependencies\",{enumerable:!0,get:function(){return Zp.sumDependencies}}),Object.defineProperty(t,\"meanDependencies\",{enumerable:!0,get:function(){return Vp.meanDependencies}}),Object.defineProperty(t,\"medianDependencies\",{enumerable:!0,get:function(){return Wp.medianDependencies}}),Object.defineProperty(t,\"madDependencies\",{enumerable:!0,get:function(){return Gp.madDependencies}}),Object.defineProperty(t,\"varianceDependencies\",{enumerable:!0,get:function(){return $p.varianceDependencies}}),Object.defineProperty(t,\"quantileSeqDependencies\",{enumerable:!0,get:function(){return Qp.quantileSeqDependencies}}),Object.defineProperty(t,\"stdDependencies\",{enumerable:!0,get:function(){return Xp.stdDependencies}}),Object.defineProperty(t,\"combinationsDependencies\",{enumerable:!0,get:function(){return Yp.combinationsDependencies}}),Object.defineProperty(t,\"combinationsWithRepDependencies\",{enumerable:!0,get:function(){return Jp.combinationsWithRepDependencies}}),Object.defineProperty(t,\"gammaDependencies\",{enumerable:!0,get:function(){return Kp.gammaDependencies}}),Object.defineProperty(t,\"factorialDependencies\",{enumerable:!0,get:function(){return em.factorialDependencies}}),Object.defineProperty(t,\"kldivergenceDependencies\",{enumerable:!0,get:function(){return tm.kldivergenceDependencies}}),Object.defineProperty(t,\"multinomialDependencies\",{enumerable:!0,get:function(){return nm.multinomialDependencies}}),Object.defineProperty(t,\"permutationsDependencies\",{enumerable:!0,get:function(){return rm.permutationsDependencies}}),Object.defineProperty(t,\"pickRandomDependencies\",{enumerable:!0,get:function(){return im.pickRandomDependencies}}),Object.defineProperty(t,\"randomDependencies\",{enumerable:!0,get:function(){return am.randomDependencies}}),Object.defineProperty(t,\"randomIntDependencies\",{enumerable:!0,get:function(){return om.randomIntDependencies}}),Object.defineProperty(t,\"stirlingS2Dependencies\",{enumerable:!0,get:function(){return sm.stirlingS2Dependencies}}),Object.defineProperty(t,\"bellNumbersDependencies\",{enumerable:!0,get:function(){return cm.bellNumbersDependencies}}),Object.defineProperty(t,\"catalanDependencies\",{enumerable:!0,get:function(){return um.catalanDependencies}}),Object.defineProperty(t,\"compositionDependencies\",{enumerable:!0,get:function(){return lm.compositionDependencies}}),Object.defineProperty(t,\"simplifyDependencies\",{enumerable:!0,get:function(){return dm.simplifyDependencies}}),Object.defineProperty(t,\"derivativeDependencies\",{enumerable:!0,get:function(){return fm.derivativeDependencies}}),Object.defineProperty(t,\"rationalizeDependencies\",{enumerable:!0,get:function(){return pm.rationalizeDependencies}}),Object.defineProperty(t,\"reviverDependencies\",{enumerable:!0,get:function(){return mm.reviverDependencies}}),Object.defineProperty(t,\"replacerDependencies\",{enumerable:!0,get:function(){return hm.replacerDependencies}}),Object.defineProperty(t,\"eDependencies\",{enumerable:!0,get:function(){return ym.eDependencies}}),Object.defineProperty(t,\"EDependencies\",{enumerable:!0,get:function(){return vm.EDependencies}}),Object.defineProperty(t,\"falseDependencies\",{enumerable:!0,get:function(){return gm.falseDependencies}}),Object.defineProperty(t,\"iDependencies\",{enumerable:!0,get:function(){return bm.iDependencies}}),Object.defineProperty(t,\"InfinityDependencies\",{enumerable:!0,get:function(){return xm.InfinityDependencies}}),Object.defineProperty(t,\"LN10Dependencies\",{enumerable:!0,get:function(){return Dm.LN10Dependencies}}),Object.defineProperty(t,\"LN2Dependencies\",{enumerable:!0,get:function(){return _m.LN2Dependencies}}),Object.defineProperty(t,\"LOG10EDependencies\",{enumerable:!0,get:function(){return wm.LOG10EDependencies}}),Object.defineProperty(t,\"LOG2EDependencies\",{enumerable:!0,get:function(){return Nm.LOG2EDependencies}}),Object.defineProperty(t,\"NaNDependencies\",{enumerable:!0,get:function(){return Mm.NaNDependencies}}),Object.defineProperty(t,\"nullDependencies\",{enumerable:!0,get:function(){return Om.nullDependencies}}),Object.defineProperty(t,\"phiDependencies\",{enumerable:!0,get:function(){return Sm.phiDependencies}}),Object.defineProperty(t,\"piDependencies\",{enumerable:!0,get:function(){return Pm.piDependencies}}),Object.defineProperty(t,\"PIDependencies\",{enumerable:!0,get:function(){return jm.PIDependencies}}),Object.defineProperty(t,\"SQRT1_2Dependencies\",{enumerable:!0,get:function(){return Am.SQRT1_2Dependencies}}),Object.defineProperty(t,\"SQRT2Dependencies\",{enumerable:!0,get:function(){return Em.SQRT2Dependencies}}),Object.defineProperty(t,\"tauDependencies\",{enumerable:!0,get:function(){return Cm.tauDependencies}}),Object.defineProperty(t,\"trueDependencies\",{enumerable:!0,get:function(){return Tm.trueDependencies}}),Object.defineProperty(t,\"versionDependencies\",{enumerable:!0,get:function(){return km.versionDependencies}}),Object.defineProperty(t,\"atomicMassDependencies\",{enumerable:!0,get:function(){return Im.atomicMassDependencies}}),Object.defineProperty(t,\"avogadroDependencies\",{enumerable:!0,get:function(){return Bm.avogadroDependencies}}),Object.defineProperty(t,\"bohrMagnetonDependencies\",{enumerable:!0,get:function(){return zm.bohrMagnetonDependencies}}),Object.defineProperty(t,\"bohrRadiusDependencies\",{enumerable:!0,get:function(){return Rm.bohrRadiusDependencies}}),Object.defineProperty(t,\"boltzmannDependencies\",{enumerable:!0,get:function(){return qm.boltzmannDependencies}}),Object.defineProperty(t,\"classicalElectronRadiusDependencies\",{enumerable:!0,get:function(){return Fm.classicalElectronRadiusDependencies}}),Object.defineProperty(t,\"conductanceQuantumDependencies\",{enumerable:!0,get:function(){return Um.conductanceQuantumDependencies}}),Object.defineProperty(t,\"coulombDependencies\",{enumerable:!0,get:function(){return Lm.coulombDependencies}}),Object.defineProperty(t,\"deuteronMassDependencies\",{enumerable:!0,get:function(){return Hm.deuteronMassDependencies}}),Object.defineProperty(t,\"efimovFactorDependencies\",{enumerable:!0,get:function(){return Zm.efimovFactorDependencies}}),Object.defineProperty(t,\"electricConstantDependencies\",{enumerable:!0,get:function(){return Vm.electricConstantDependencies}}),Object.defineProperty(t,\"electronMassDependencies\",{enumerable:!0,get:function(){return Wm.electronMassDependencies}}),Object.defineProperty(t,\"elementaryChargeDependencies\",{enumerable:!0,get:function(){return Gm.elementaryChargeDependencies}}),Object.defineProperty(t,\"faradayDependencies\",{enumerable:!0,get:function(){return $m.faradayDependencies}}),Object.defineProperty(t,\"fermiCouplingDependencies\",{enumerable:!0,get:function(){return Qm.fermiCouplingDependencies}}),Object.defineProperty(t,\"fineStructureDependencies\",{enumerable:!0,get:function(){return Xm.fineStructureDependencies}}),Object.defineProperty(t,\"firstRadiationDependencies\",{enumerable:!0,get:function(){return Ym.firstRadiationDependencies}}),Object.defineProperty(t,\"gasConstantDependencies\",{enumerable:!0,get:function(){return Jm.gasConstantDependencies}}),Object.defineProperty(t,\"gravitationConstantDependencies\",{enumerable:!0,get:function(){return Km.gravitationConstantDependencies}}),Object.defineProperty(t,\"gravityDependencies\",{enumerable:!0,get:function(){return eh.gravityDependencies}}),Object.defineProperty(t,\"hartreeEnergyDependencies\",{enumerable:!0,get:function(){return th.hartreeEnergyDependencies}}),Object.defineProperty(t,\"inverseConductanceQuantumDependencies\",{enumerable:!0,get:function(){return nh.inverseConductanceQuantumDependencies}}),Object.defineProperty(t,\"klitzingDependencies\",{enumerable:!0,get:function(){return rh.klitzingDependencies}}),Object.defineProperty(t,\"loschmidtDependencies\",{enumerable:!0,get:function(){return ih.loschmidtDependencies}}),Object.defineProperty(t,\"magneticConstantDependencies\",{enumerable:!0,get:function(){return ah.magneticConstantDependencies}}),Object.defineProperty(t,\"magneticFluxQuantumDependencies\",{enumerable:!0,get:function(){return oh.magneticFluxQuantumDependencies}}),Object.defineProperty(t,\"molarMassDependencies\",{enumerable:!0,get:function(){return sh.molarMassDependencies}}),Object.defineProperty(t,\"molarMassC12Dependencies\",{enumerable:!0,get:function(){return ch.molarMassC12Dependencies}}),Object.defineProperty(t,\"molarPlanckConstantDependencies\",{enumerable:!0,get:function(){return uh.molarPlanckConstantDependencies}}),Object.defineProperty(t,\"molarVolumeDependencies\",{enumerable:!0,get:function(){return lh.molarVolumeDependencies}}),Object.defineProperty(t,\"neutronMassDependencies\",{enumerable:!0,get:function(){return dh.neutronMassDependencies}}),Object.defineProperty(t,\"nuclearMagnetonDependencies\",{enumerable:!0,get:function(){return fh.nuclearMagnetonDependencies}}),Object.defineProperty(t,\"planckChargeDependencies\",{enumerable:!0,get:function(){return ph.planckChargeDependencies}}),Object.defineProperty(t,\"planckConstantDependencies\",{enumerable:!0,get:function(){return mh.planckConstantDependencies}}),Object.defineProperty(t,\"planckLengthDependencies\",{enumerable:!0,get:function(){return hh.planckLengthDependencies}}),Object.defineProperty(t,\"planckMassDependencies\",{enumerable:!0,get:function(){return yh.planckMassDependencies}}),Object.defineProperty(t,\"planckTemperatureDependencies\",{enumerable:!0,get:function(){return vh.planckTemperatureDependencies}}),Object.defineProperty(t,\"planckTimeDependencies\",{enumerable:!0,get:function(){return gh.planckTimeDependencies}}),Object.defineProperty(t,\"protonMassDependencies\",{enumerable:!0,get:function(){return bh.protonMassDependencies}}),Object.defineProperty(t,\"quantumOfCirculationDependencies\",{enumerable:!0,get:function(){return xh.quantumOfCirculationDependencies}}),Object.defineProperty(t,\"reducedPlanckConstantDependencies\",{enumerable:!0,get:function(){return Dh.reducedPlanckConstantDependencies}}),Object.defineProperty(t,\"rydbergDependencies\",{enumerable:!0,get:function(){return _h.rydbergDependencies}}),Object.defineProperty(t,\"sackurTetrodeDependencies\",{enumerable:!0,get:function(){return wh.sackurTetrodeDependencies}}),Object.defineProperty(t,\"secondRadiationDependencies\",{enumerable:!0,get:function(){return Nh.secondRadiationDependencies}}),Object.defineProperty(t,\"speedOfLightDependencies\",{enumerable:!0,get:function(){return Mh.speedOfLightDependencies}}),Object.defineProperty(t,\"stefanBoltzmannDependencies\",{enumerable:!0,get:function(){return Oh.stefanBoltzmannDependencies}}),Object.defineProperty(t,\"thomsonCrossSectionDependencies\",{enumerable:!0,get:function(){return Sh.thomsonCrossSectionDependencies}}),Object.defineProperty(t,\"vacuumImpedanceDependencies\",{enumerable:!0,get:function(){return Ph.vacuumImpedanceDependencies}}),Object.defineProperty(t,\"weakMixingAngleDependencies\",{enumerable:!0,get:function(){return jh.weakMixingAngleDependencies}}),Object.defineProperty(t,\"wienDisplacementDependencies\",{enumerable:!0,get:function(){return Ah.wienDisplacementDependencies}}),Object.defineProperty(t,\"applyTransformDependencies\",{enumerable:!0,get:function(){return Eh.applyTransformDependencies}}),Object.defineProperty(t,\"columnTransformDependencies\",{enumerable:!0,get:function(){return Ch.columnTransformDependencies}}),Object.defineProperty(t,\"filterTransformDependencies\",{enumerable:!0,get:function(){return Th.filterTransformDependencies}}),Object.defineProperty(t,\"forEachTransformDependencies\",{enumerable:!0,get:function(){return kh.forEachTransformDependencies}}),Object.defineProperty(t,\"indexTransformDependencies\",{enumerable:!0,get:function(){return Ih.indexTransformDependencies}}),Object.defineProperty(t,\"mapTransformDependencies\",{enumerable:!0,get:function(){return Bh.mapTransformDependencies}}),Object.defineProperty(t,\"maxTransformDependencies\",{enumerable:!0,get:function(){return zh.maxTransformDependencies}}),Object.defineProperty(t,\"meanTransformDependencies\",{enumerable:!0,get:function(){return Rh.meanTransformDependencies}}),Object.defineProperty(t,\"minTransformDependencies\",{enumerable:!0,get:function(){return qh.minTransformDependencies}}),Object.defineProperty(t,\"rangeTransformDependencies\",{enumerable:!0,get:function(){return Fh.rangeTransformDependencies}}),Object.defineProperty(t,\"rowTransformDependencies\",{enumerable:!0,get:function(){return Uh.rowTransformDependencies}}),Object.defineProperty(t,\"subsetTransformDependencies\",{enumerable:!0,get:function(){return Lh.subsetTransformDependencies}}),Object.defineProperty(t,\"concatTransformDependencies\",{enumerable:!0,get:function(){return Hh.concatTransformDependencies}}),Object.defineProperty(t,\"diffTransformDependencies\",{enumerable:!0,get:function(){return Zh.diffTransformDependencies}}),Object.defineProperty(t,\"stdTransformDependencies\",{enumerable:!0,get:function(){return Vh.stdTransformDependencies}}),Object.defineProperty(t,\"sumTransformDependencies\",{enumerable:!0,get:function(){return Wh.sumTransformDependencies}}),Object.defineProperty(t,\"varianceTransformDependencies\",{enumerable:!0,get:function(){return Gh.varianceTransformDependencies}}),Object.defineProperty(t,\"all\",{enumerable:!0,get:function(){return $h.all}})}));function Xh(){}Xh.prototype={on:function(e,t,n){var r=this.e||(this.e={});return(r[e]||(r[e]=[])).push({fn:t,ctx:n}),this},once:function(e,t,n){var r=this;function i(){r.off(e,i),t.apply(n,arguments)}return i._=t,this.on(e,i,n)},emit:function(e){for(var t=[].slice.call(arguments,1),n=((this.e||(this.e={}))[e]||[]).slice(),r=0,i=n.length;r<i;r++)n[r].fn.apply(n[r].ctx,t);return this},off:function(e,t){var n=this.e||(this.e={}),r=n[e],i=[];if(r&&t)for(var a=0,o=r.length;a<o;a++)r[a].fn!==t&&r[a].fn._!==t&&i.push(r[a]);return i.length?n[e]=i:delete n[e],this}};var Yh=Xh,Jh=Xh;Yh.TinyEmitter=Jh;var Kh=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.mixin=function(e){var t=new r.default;return e.on=t.on.bind(t),e.off=t.off.bind(t),e.once=t.once.bind(t),e.emit=t.emit.bind(t),e};var n,r=(n=Yh)&&n.__esModule?n:{default:n}})),ey=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.importFactory=function(e,t,r,o){function s(t,n,i){var a;if(i.wrap&&\"function\"==typeof n&&(n=function(e){var t=function(){for(var t=[],n=0,i=arguments.length;n<i;n++){var a=arguments[n];t[n]=a&&a.valueOf()}return e.apply(r,t)};e.transform&&(t.transform=e.transform);return t}(n)),\"function\"==typeof(a=n)&&\"string\"==typeof a.signature&&(n=e(t,function(e,t,n){t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n;return e}({},n.signature,n))),f(r[t])&&f(n))return n=i.override?e(t,n.signatures):e(r[t],n),r[t]=n,delete o[t],c(t,n),void r.emit(\"import\",t,(function(){return n}));if(void 0===r[t]||i.override)return r[t]=n,delete o[t],c(t,n),void r.emit(\"import\",t,(function(){return n}));if(!i.silent)throw new Error('Cannot import \"'+t+'\": already exists')}function c(e,t){t&&\"function\"==typeof t.transform?(r.expression.transform[e]=t.transform,p(e)&&(r.expression.mathWithTransform[e]=t.transform)):(delete r.expression.transform[e],p(e)&&(r.expression.mathWithTransform[e]=t))}function u(e){delete r.expression.transform[e],p(e)?r.expression.mathWithTransform[e]=r[e]:delete r.expression.mathWithTransform[e]}function l(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.fn;if((0,m.contains)(i,\".\"))throw new Error(\"Factory name should not contain a nested path. Name: \"+JSON.stringify(i));var s=v(t)?r.expression.transform:r,c=i in r.expression.transform,l=(0,a.hasOwnProperty)(s,i)?s[i]:void 0,d=function(){var a={};t.dependencies.map(h.stripOptionalNotation).forEach((function(e){if((0,m.contains)(e,\".\"))throw new Error(\"Factory dependency should not contain a nested path. Name: \"+JSON.stringify(e));\"math\"===e?a.math=r:\"mathWithTransform\"===e?a.mathWithTransform=r.expression.mathWithTransform:\"classes\"===e?a.classes=r:a[e]=r[e]}));var o=t(a);if(o&&\"function\"==typeof o.transform)throw new Error('Transforms cannot be attached to factory functions. Please create a separate function for it with exports.path=\"expression.transform\"');if(void 0===l||n.override)return o;if(f(l)&&f(o))return e(l,o);if(n.silent)return l;throw new Error('Cannot import \"'+i+'\": already exists')};t.meta&&!1===t.meta.lazy?(s[i]=d(),l&&c?u(i):(v(t)||y(t))&&(0,a.lazy)(r.expression.mathWithTransform,i,(function(){return s[i]}))):((0,a.lazy)(s,i,d),l&&c?u(i):(v(t)||y(t))&&(0,a.lazy)(r.expression.mathWithTransform,i,(function(){return s[i]}))),o[i]=t,r.emit(\"import\",i,d)}function d(e){return\"function\"==typeof e||\"number\"==typeof e||\"string\"==typeof e||\"boolean\"==typeof e||null===e||(0,i.isUnit)(e)||(0,i.isComplex)(e)||(0,i.isBigNumber)(e)||(0,i.isFraction)(e)||(0,i.isMatrix)(e)||Array.isArray(e)}function f(e){return\"function\"==typeof e&&\"object\"===n(e.signatures)}function p(e){return!(0,a.hasOwnProperty)(g,e)}function y(e){return!(-1!==e.fn.indexOf(\".\")||(0,a.hasOwnProperty)(g,e.fn)||e.meta&&e.meta.isClass)}function v(e){return void 0!==e&&void 0!==e.meta&&!0===e.meta.isTransformFunction||!1}var g={expression:!0,type:!0,docs:!0,error:!0,json:!0,chain:!0};return function(e,t){var r=arguments.length;if(1!==r&&2!==r)throw new xt.ArgumentsError(\"import\",r,1,2);function i(e,r,o){if(Array.isArray(r))r.forEach((function(t){return i(e,t)}));else if(\"object\"===n(r))for(var s in r)(0,a.hasOwnProperty)(r,s)&&i(e,r[s],s);else if((0,h.isFactory)(r)||void 0!==o){var c=(0,h.isFactory)(r)?v(r)?r.fn+\".transform\":r.fn:o;if((0,a.hasOwnProperty)(e,c)&&e[c]!==r&&!t.silent)throw new Error('Cannot import \"'+c+'\" twice');e[c]=r}else if(!t.silent)throw new TypeError(\"Factory, Object, or Array expected\")}t||(t={});var o={};for(var c in i(o,e),o)if((0,a.hasOwnProperty)(o,c)){var u=o[c];if((0,h.isFactory)(u))l(u,t);else if(d(u))s(c,u,t);else if(!t.silent)throw new TypeError(\"Factory, Object, or Array expected\")}}}})),ty=t((function(e,t){function n(e){return(n=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.create=function e(t,n){var c=u({},r.DEFAULT_CONFIG,n);if(\"function\"!=typeof Object.create)throw new Error(\"ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.\");var l=s.mixin({isNumber:i.isNumber,isComplex:i.isComplex,isBigNumber:i.isBigNumber,isFraction:i.isFraction,isUnit:i.isUnit,isString:i.isString,isArray:i.isArray,isMatrix:i.isMatrix,isCollection:i.isCollection,isDenseMatrix:i.isDenseMatrix,isSparseMatrix:i.isSparseMatrix,isRange:i.isRange,isIndex:i.isIndex,isBoolean:i.isBoolean,isResultSet:i.isResultSet,isHelp:i.isHelp,isFunction:i.isFunction,isDate:i.isDate,isRegExp:i.isRegExp,isObject:i.isObject,isNull:i.isNull,isUndefined:i.isUndefined,isAccessorNode:i.isAccessorNode,isArrayNode:i.isArrayNode,isAssignmentNode:i.isAssignmentNode,isBlockNode:i.isBlockNode,isConditionalNode:i.isConditionalNode,isConstantNode:i.isConstantNode,isFunctionAssignmentNode:i.isFunctionAssignmentNode,isFunctionNode:i.isFunctionNode,isIndexNode:i.isIndexNode,isNode:i.isNode,isObjectNode:i.isObjectNode,isOperatorNode:i.isOperatorNode,isParenthesisNode:i.isParenthesisNode,isRangeNode:i.isRangeNode,isSymbolNode:i.isSymbolNode,isChain:i.isChain});l.config=(0,o.configFactory)(c,l.emit),l.expression={transform:{},mathWithTransform:{config:l.config}};var d=[],m=[];var y={};var v=(0,ey.importFactory)((function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return l.typed.apply(l.typed,t)}),(function e(t){if((0,h.isFactory)(t))return t(l);var n=t[Object.keys(t)[0]];if((0,h.isFactory)(n))return n(l);if(!(0,a.isLegacyFactory)(t))throw console.warn(\"Factory object with properties `type`, `name`, and `factory` expected\",t),new Error(\"Factory object with properties `type`, `name`, and `factory` expected\");var r,i=d.indexOf(t);return-1===i?(r=!0===t.math?t.factory(l.type,c,e,l.typed,l):t.factory(l.type,c,e,l.typed),d.push(t),m.push(r)):r=m[i],r}),l,y);return l.import=v,l.on(\"config\",(function(){(0,a.values)(y).forEach((function(e){e&&e.meta&&e.meta.recreateOnConfigChange&&v(e,{override:!0})}))})),l.create=e.bind(null,t),l.factory=h.factory,l.import((0,a.values)((0,a.deepFlatten)(t))),l.ArgumentsError=xt.ArgumentsError,l.DimensionError=f.DimensionError,l.IndexError=p.IndexError,l};var s=function(e){if(e&&e.__esModule)return e;if(null===e||\"object\"!==n(e)&&\"function\"!=typeof e)return{default:e};var t=c();if(t&&t.has(e))return t.get(e);var r={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=i?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(r,a,o):r[a]=e[a]}r.default=e,t&&t.set(e,r);return r}(Kh);function c(){if(\"function\"!=typeof WeakMap)return null;var e=new WeakMap;return c=function(){return e},e}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}})),ny=t((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n={config:!0,IndexError:!0,DimensionError:!0,ArgumentsError:!0,create:!0,factory:!0};Object.defineProperty(t,\"config\",{enumerable:!0,get:function(){return s.config}}),Object.defineProperty(t,\"IndexError\",{enumerable:!0,get:function(){return p.IndexError}}),Object.defineProperty(t,\"DimensionError\",{enumerable:!0,get:function(){return f.DimensionError}}),Object.defineProperty(t,\"ArgumentsError\",{enumerable:!0,get:function(){return xt.ArgumentsError}}),Object.defineProperty(t,\"create\",{enumerable:!0,get:function(){return ty.create}}),Object.defineProperty(t,\"factory\",{enumerable:!0,get:function(){return h.factory}}),Object.keys(qu).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===qu[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return qu[e]}}))})),Object.keys(Fu).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Fu[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Fu[e]}}))})),Object.keys(Uu).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Uu[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Uu[e]}}))})),Object.keys(Qh).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Qh[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Qh[e]}}))})),Object.keys(Ru).forEach((function(e){\"default\"!==e&&\"__esModule\"!==e&&(Object.prototype.hasOwnProperty.call(n,e)||e in t&&t[e]===Ru[e]||Object.defineProperty(t,e,{enumerable:!0,get:function(){return Ru[e]}}))}))})),ry=t((function(t,n){(function(){var r=\"Expected a function\",i=\"__lodash_placeholder__\",a=[[\"ary\",128],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",32],[\"partialRight\",64],[\"rearg\",256]],o=\"[object Arguments]\",s=\"[object Array]\",c=\"[object Boolean]\",u=\"[object Date]\",l=\"[object Error]\",d=\"[object Function]\",f=\"[object GeneratorFunction]\",p=\"[object Map]\",m=\"[object Number]\",h=\"[object Object]\",y=\"[object RegExp]\",v=\"[object Set]\",g=\"[object String]\",b=\"[object Symbol]\",x=\"[object WeakMap]\",D=\"[object ArrayBuffer]\",_=\"[object DataView]\",w=\"[object Float32Array]\",N=\"[object Float64Array]\",M=\"[object Int8Array]\",O=\"[object Int16Array]\",S=\"[object Int32Array]\",P=\"[object Uint8Array]\",j=\"[object Uint16Array]\",A=\"[object Uint32Array]\",E=/\\b__p \\+= '';/g,C=/\\b(__p \\+=) '' \\+/g,T=/(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g,k=/&(?:amp|lt|gt|quot|#39);/g,I=/[&<>\"']/g,B=RegExp(k.source),z=RegExp(I.source),R=/<%-([\\s\\S]+?)%>/g,q=/<%([\\s\\S]+?)%>/g,F=/<%=([\\s\\S]+?)%>/g,U=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,L=/^\\w*$/,H=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,Z=/[\\\\^$.*+?()[\\]{}|]/g,V=RegExp(Z.source),W=/^\\s+|\\s+$/g,G=/^\\s+/,$=/\\s+$/,Q=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,X=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,Y=/,? & /,J=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,K=/\\\\(\\\\)?/g,ee=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,te=/\\w*$/,ne=/^[-+]0x[0-9a-f]+$/i,re=/^0b[01]+$/i,ie=/^\\[object .+?Constructor\\]$/,ae=/^0o[0-7]+$/i,oe=/^(?:0|[1-9]\\d*)$/,se=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,ce=/($^)/,ue=/['\\n\\r\\u2028\\u2029\\\\]/g,le=\"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe2f\\\\u20d0-\\\\u20ff\",de=\"\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",fe=\"[\\\\ud800-\\\\udfff]\",pe=\"[\"+de+\"]\",me=\"[\"+le+\"]\",he=\"\\\\d+\",ye=\"[\\\\u2700-\\\\u27bf]\",ve=\"[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]\",ge=\"[^\\\\ud800-\\\\udfff\"+de+he+\"\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\",be=\"\\\\ud83c[\\\\udffb-\\\\udfff]\",xe=\"[^\\\\ud800-\\\\udfff]\",De=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",_e=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",we=\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]\",Ne=\"(?:\"+ve+\"|\"+ge+\")\",Me=\"(?:\"+we+\"|\"+ge+\")\",Oe=\"(?:\"+me+\"|\"+be+\")\"+\"?\",Se=\"[\\\\ufe0e\\\\ufe0f]?\"+Oe+(\"(?:\\\\u200d(?:\"+[xe,De,_e].join(\"|\")+\")[\\\\ufe0e\\\\ufe0f]?\"+Oe+\")*\"),Pe=\"(?:\"+[ye,De,_e].join(\"|\")+\")\"+Se,je=\"(?:\"+[xe+me+\"?\",me,De,_e,fe].join(\"|\")+\")\",Ae=RegExp(\"['’]\",\"g\"),Ee=RegExp(me,\"g\"),Ce=RegExp(be+\"(?=\"+be+\")|\"+je+Se,\"g\"),Te=RegExp([we+\"?\"+ve+\"+(?:['’](?:d|ll|m|re|s|t|ve))?(?=\"+[pe,we,\"$\"].join(\"|\")+\")\",Me+\"+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=\"+[pe,we+Ne,\"$\"].join(\"|\")+\")\",we+\"?\"+Ne+\"+(?:['’](?:d|ll|m|re|s|t|ve))?\",we+\"+(?:['’](?:D|LL|M|RE|S|T|VE))?\",\"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\",\"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\",he,Pe].join(\"|\"),\"g\"),ke=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\"+le+\"\\\\ufe0e\\\\ufe0f]\"),Ie=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Be=[\"Array\",\"Buffer\",\"DataView\",\"Date\",\"Error\",\"Float32Array\",\"Float64Array\",\"Function\",\"Int8Array\",\"Int16Array\",\"Int32Array\",\"Map\",\"Math\",\"Object\",\"Promise\",\"RegExp\",\"Set\",\"String\",\"Symbol\",\"TypeError\",\"Uint8Array\",\"Uint8ClampedArray\",\"Uint16Array\",\"Uint32Array\",\"WeakMap\",\"_\",\"clearTimeout\",\"isFinite\",\"parseInt\",\"setTimeout\"],ze=-1,Re={};Re[w]=Re[N]=Re[M]=Re[O]=Re[S]=Re[P]=Re[\"[object Uint8ClampedArray]\"]=Re[j]=Re[A]=!0,Re[o]=Re[s]=Re[D]=Re[c]=Re[_]=Re[u]=Re[l]=Re[d]=Re[p]=Re[m]=Re[h]=Re[y]=Re[v]=Re[g]=Re[x]=!1;var qe={};qe[o]=qe[s]=qe[D]=qe[_]=qe[c]=qe[u]=qe[w]=qe[N]=qe[M]=qe[O]=qe[S]=qe[p]=qe[m]=qe[h]=qe[y]=qe[v]=qe[g]=qe[b]=qe[P]=qe[\"[object Uint8ClampedArray]\"]=qe[j]=qe[A]=!0,qe[l]=qe[d]=qe[x]=!1;var Fe={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Ue=parseFloat,Le=parseInt,He=\"object\"==typeof e&&e&&e.Object===Object&&e,Ze=\"object\"==typeof self&&self&&self.Object===Object&&self,Ve=He||Ze||Function(\"return this\")(),We=n&&!n.nodeType&&n,Ge=We&&t&&!t.nodeType&&t,$e=Ge&&Ge.exports===We,Qe=$e&&He.process,Xe=function(){try{var e=Ge&&Ge.require&&Ge.require(\"util\").types;return e||Qe&&Qe.binding&&Qe.binding(\"util\")}catch(e){}}(),Ye=Xe&&Xe.isArrayBuffer,Je=Xe&&Xe.isDate,Ke=Xe&&Xe.isMap,et=Xe&&Xe.isRegExp,tt=Xe&&Xe.isSet,nt=Xe&&Xe.isTypedArray;function rt(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}function it(e,t,n,r){for(var i=-1,a=null==e?0:e.length;++i<a;){var o=e[i];t(r,o,n(o),e)}return r}function at(e,t){for(var n=-1,r=null==e?0:e.length;++n<r&&!1!==t(e[n],n,e););return e}function ot(e,t){for(var n=null==e?0:e.length;n--&&!1!==t(e[n],n,e););return e}function st(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(!t(e[n],n,e))return!1;return!0}function ct(e,t){for(var n=-1,r=null==e?0:e.length,i=0,a=[];++n<r;){var o=e[n];t(o,n,e)&&(a[i++]=o)}return a}function ut(e,t){return!!(null==e?0:e.length)&&bt(e,t,0)>-1}function lt(e,t,n){for(var r=-1,i=null==e?0:e.length;++r<i;)if(n(t,e[r]))return!0;return!1}function dt(e,t){for(var n=-1,r=null==e?0:e.length,i=Array(r);++n<r;)i[n]=t(e[n],n,e);return i}function ft(e,t){for(var n=-1,r=t.length,i=e.length;++n<r;)e[i+n]=t[n];return e}function pt(e,t,n,r){var i=-1,a=null==e?0:e.length;for(r&&a&&(n=e[++i]);++i<a;)n=t(n,e[i],i,e);return n}function mt(e,t,n,r){var i=null==e?0:e.length;for(r&&i&&(n=e[--i]);i--;)n=t(n,e[i],i,e);return n}function ht(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}var yt=wt(\"length\");function vt(e,t,n){var r;return n(e,(function(e,n,i){if(t(e,n,i))return r=n,!1})),r}function gt(e,t,n,r){for(var i=e.length,a=n+(r?1:-1);r?a--:++a<i;)if(t(e[a],a,e))return a;return-1}function bt(e,t,n){return t==t?function(e,t,n){var r=n-1,i=e.length;for(;++r<i;)if(e[r]===t)return r;return-1}(e,t,n):gt(e,Dt,n)}function xt(e,t,n,r){for(var i=n-1,a=e.length;++i<a;)if(r(e[i],t))return i;return-1}function Dt(e){return e!=e}function _t(e,t){var n=null==e?0:e.length;return n?Ot(e,t)/n:NaN}function wt(e){return function(t){return null==t?void 0:t[e]}}function Nt(e){return function(t){return null==e?void 0:e[t]}}function Mt(e,t,n,r,i){return i(e,(function(e,i,a){n=r?(r=!1,e):t(n,e,i,a)})),n}function Ot(e,t){for(var n,r=-1,i=e.length;++r<i;){var a=t(e[r]);void 0!==a&&(n=void 0===n?a:n+a)}return n}function St(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}function Pt(e){return function(t){return e(t)}}function jt(e,t){return dt(t,(function(t){return e[t]}))}function At(e,t){return e.has(t)}function Et(e,t){for(var n=-1,r=e.length;++n<r&&bt(t,e[n],0)>-1;);return n}function Ct(e,t){for(var n=e.length;n--&&bt(t,e[n],0)>-1;);return n}function Tt(e,t){for(var n=e.length,r=0;n--;)e[n]===t&&++r;return r}var kt=Nt({\"À\":\"A\",\"Á\":\"A\",\"Â\":\"A\",\"Ã\":\"A\",\"Ä\":\"A\",\"Å\":\"A\",\"à\":\"a\",\"á\":\"a\",\"â\":\"a\",\"ã\":\"a\",\"ä\":\"a\",\"å\":\"a\",\"Ç\":\"C\",\"ç\":\"c\",\"Ð\":\"D\",\"ð\":\"d\",\"È\":\"E\",\"É\":\"E\",\"Ê\":\"E\",\"Ë\":\"E\",\"è\":\"e\",\"é\":\"e\",\"ê\":\"e\",\"ë\":\"e\",\"Ì\":\"I\",\"Í\":\"I\",\"Î\":\"I\",\"Ï\":\"I\",\"ì\":\"i\",\"í\":\"i\",\"î\":\"i\",\"ï\":\"i\",\"Ñ\":\"N\",\"ñ\":\"n\",\"Ò\":\"O\",\"Ó\":\"O\",\"Ô\":\"O\",\"Õ\":\"O\",\"Ö\":\"O\",\"Ø\":\"O\",\"ò\":\"o\",\"ó\":\"o\",\"ô\":\"o\",\"õ\":\"o\",\"ö\":\"o\",\"ø\":\"o\",\"Ù\":\"U\",\"Ú\":\"U\",\"Û\":\"U\",\"Ü\":\"U\",\"ù\":\"u\",\"ú\":\"u\",\"û\":\"u\",\"ü\":\"u\",\"Ý\":\"Y\",\"ý\":\"y\",\"ÿ\":\"y\",\"Æ\":\"Ae\",\"æ\":\"ae\",\"Þ\":\"Th\",\"þ\":\"th\",\"ß\":\"ss\",\"Ā\":\"A\",\"Ă\":\"A\",\"Ą\":\"A\",\"ā\":\"a\",\"ă\":\"a\",\"ą\":\"a\",\"Ć\":\"C\",\"Ĉ\":\"C\",\"Ċ\":\"C\",\"Č\":\"C\",\"ć\":\"c\",\"ĉ\":\"c\",\"ċ\":\"c\",\"č\":\"c\",\"Ď\":\"D\",\"Đ\":\"D\",\"ď\":\"d\",\"đ\":\"d\",\"Ē\":\"E\",\"Ĕ\":\"E\",\"Ė\":\"E\",\"Ę\":\"E\",\"Ě\":\"E\",\"ē\":\"e\",\"ĕ\":\"e\",\"ė\":\"e\",\"ę\":\"e\",\"ě\":\"e\",\"Ĝ\":\"G\",\"Ğ\":\"G\",\"Ġ\":\"G\",\"Ģ\":\"G\",\"ĝ\":\"g\",\"ğ\":\"g\",\"ġ\":\"g\",\"ģ\":\"g\",\"Ĥ\":\"H\",\"Ħ\":\"H\",\"ĥ\":\"h\",\"ħ\":\"h\",\"Ĩ\":\"I\",\"Ī\":\"I\",\"Ĭ\":\"I\",\"Į\":\"I\",\"İ\":\"I\",\"ĩ\":\"i\",\"ī\":\"i\",\"ĭ\":\"i\",\"į\":\"i\",\"ı\":\"i\",\"Ĵ\":\"J\",\"ĵ\":\"j\",\"Ķ\":\"K\",\"ķ\":\"k\",\"ĸ\":\"k\",\"Ĺ\":\"L\",\"Ļ\":\"L\",\"Ľ\":\"L\",\"Ŀ\":\"L\",\"Ł\":\"L\",\"ĺ\":\"l\",\"ļ\":\"l\",\"ľ\":\"l\",\"ŀ\":\"l\",\"ł\":\"l\",\"Ń\":\"N\",\"Ņ\":\"N\",\"Ň\":\"N\",\"Ŋ\":\"N\",\"ń\":\"n\",\"ņ\":\"n\",\"ň\":\"n\",\"ŋ\":\"n\",\"Ō\":\"O\",\"Ŏ\":\"O\",\"Ő\":\"O\",\"ō\":\"o\",\"ŏ\":\"o\",\"ő\":\"o\",\"Ŕ\":\"R\",\"Ŗ\":\"R\",\"Ř\":\"R\",\"ŕ\":\"r\",\"ŗ\":\"r\",\"ř\":\"r\",\"Ś\":\"S\",\"Ŝ\":\"S\",\"Ş\":\"S\",\"Š\":\"S\",\"ś\":\"s\",\"ŝ\":\"s\",\"ş\":\"s\",\"š\":\"s\",\"Ţ\":\"T\",\"Ť\":\"T\",\"Ŧ\":\"T\",\"ţ\":\"t\",\"ť\":\"t\",\"ŧ\":\"t\",\"Ũ\":\"U\",\"Ū\":\"U\",\"Ŭ\":\"U\",\"Ů\":\"U\",\"Ű\":\"U\",\"Ų\":\"U\",\"ũ\":\"u\",\"ū\":\"u\",\"ŭ\":\"u\",\"ů\":\"u\",\"ű\":\"u\",\"ų\":\"u\",\"Ŵ\":\"W\",\"ŵ\":\"w\",\"Ŷ\":\"Y\",\"ŷ\":\"y\",\"Ÿ\":\"Y\",\"Ź\":\"Z\",\"Ż\":\"Z\",\"Ž\":\"Z\",\"ź\":\"z\",\"ż\":\"z\",\"ž\":\"z\",\"Ĳ\":\"IJ\",\"ĳ\":\"ij\",\"Œ\":\"Oe\",\"œ\":\"oe\",\"ŉ\":\"'n\",\"ſ\":\"s\"}),It=Nt({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\"});function Bt(e){return\"\\\\\"+Fe[e]}function zt(e){return ke.test(e)}function Rt(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function qt(e,t){return function(n){return e(t(n))}}function Ft(e,t){for(var n=-1,r=e.length,a=0,o=[];++n<r;){var s=e[n];s!==t&&s!==i||(e[n]=i,o[a++]=n)}return o}function Ut(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}function Lt(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=[e,e]})),n}function Ht(e){return zt(e)?function(e){var t=Ce.lastIndex=0;for(;Ce.test(e);)++t;return t}(e):yt(e)}function Zt(e){return zt(e)?function(e){return e.match(Ce)||[]}(e):function(e){return e.split(\"\")}(e)}var Vt=Nt({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\"});var Wt=function e(t){var n,le=(t=null==t?Ve:Wt.defaults(Ve.Object(),t,Wt.pick(Ve,Be))).Array,de=t.Date,fe=t.Error,pe=t.Function,me=t.Math,he=t.Object,ye=t.RegExp,ve=t.String,ge=t.TypeError,be=le.prototype,xe=pe.prototype,De=he.prototype,_e=t[\"__core-js_shared__\"],we=xe.toString,Ne=De.hasOwnProperty,Me=0,Oe=(n=/[^.]+$/.exec(_e&&_e.keys&&_e.keys.IE_PROTO||\"\"))?\"Symbol(src)_1.\"+n:\"\",Se=De.toString,Pe=we.call(he),je=Ve._,Ce=ye(\"^\"+we.call(Ne).replace(Z,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),ke=$e?t.Buffer:void 0,Fe=t.Symbol,He=t.Uint8Array,Ze=ke?ke.allocUnsafe:void 0,We=qt(he.getPrototypeOf,he),Ge=he.create,Qe=De.propertyIsEnumerable,Xe=be.splice,yt=Fe?Fe.isConcatSpreadable:void 0,Nt=Fe?Fe.iterator:void 0,Gt=Fe?Fe.toStringTag:void 0,$t=function(){try{var e=Ki(he,\"defineProperty\");return e({},\"\",{}),e}catch(e){}}(),Qt=t.clearTimeout!==Ve.clearTimeout&&t.clearTimeout,Xt=de&&de.now!==Ve.Date.now&&de.now,Yt=t.setTimeout!==Ve.setTimeout&&t.setTimeout,Jt=me.ceil,Kt=me.floor,en=he.getOwnPropertySymbols,tn=ke?ke.isBuffer:void 0,nn=t.isFinite,rn=be.join,an=qt(he.keys,he),on=me.max,sn=me.min,cn=de.now,un=t.parseInt,ln=me.random,dn=be.reverse,fn=Ki(t,\"DataView\"),pn=Ki(t,\"Map\"),mn=Ki(t,\"Promise\"),hn=Ki(t,\"Set\"),yn=Ki(t,\"WeakMap\"),vn=Ki(he,\"create\"),gn=yn&&new yn,bn={},xn=Oa(fn),Dn=Oa(pn),_n=Oa(mn),wn=Oa(hn),Nn=Oa(yn),Mn=Fe?Fe.prototype:void 0,On=Mn?Mn.valueOf:void 0,Sn=Mn?Mn.toString:void 0;function Pn(e){if(Zo(e)&&!To(e)&&!(e instanceof Cn)){if(e instanceof En)return e;if(Ne.call(e,\"__wrapped__\"))return Sa(e)}return new En(e)}var jn=function(){function e(){}return function(t){if(!Ho(t))return{};if(Ge)return Ge(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();function An(){}function En(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=void 0}function Cn(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Tn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function kn(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function In(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Bn(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new In;++t<n;)this.add(e[t])}function zn(e){var t=this.__data__=new kn(e);this.size=t.size}function Rn(e,t){var n=To(e),r=!n&&Co(e),i=!n&&!r&&zo(e),a=!n&&!r&&!i&&Jo(e),o=n||r||i||a,s=o?St(e.length,ve):[],c=s.length;for(var u in e)!t&&!Ne.call(e,u)||o&&(\"length\"==u||i&&(\"offset\"==u||\"parent\"==u)||a&&(\"buffer\"==u||\"byteLength\"==u||\"byteOffset\"==u)||oa(u,c))||s.push(u);return s}function qn(e){var t=e.length;return t?e[Br(0,t-1)]:void 0}function Fn(e,t){return wa(vi(e),Qn(t,0,e.length))}function Un(e){return wa(vi(e))}function Ln(e,t,n){(void 0!==n&&!jo(e[t],n)||void 0===n&&!(t in e))&&Gn(e,t,n)}function Hn(e,t,n){var r=e[t];Ne.call(e,t)&&jo(r,n)&&(void 0!==n||t in e)||Gn(e,t,n)}function Zn(e,t){for(var n=e.length;n--;)if(jo(e[n][0],t))return n;return-1}function Vn(e,t,n,r){return er(e,(function(e,i,a){t(r,e,n(e),a)})),r}function Wn(e,t){return e&&gi(t,xs(t),e)}function Gn(e,t,n){\"__proto__\"==t&&$t?$t(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}function $n(e,t){for(var n=-1,r=t.length,i=le(r),a=null==e;++n<r;)i[n]=a?void 0:hs(e,t[n]);return i}function Qn(e,t,n){return e==e&&(void 0!==n&&(e=e<=n?e:n),void 0!==t&&(e=e>=t?e:t)),e}function Xn(e,t,n,r,i,a){var s,l=1&t,x=2&t,E=4&t;if(n&&(s=i?n(e,r,i,a):n(e)),void 0!==s)return s;if(!Ho(e))return e;var C=To(e);if(C){if(s=function(e){var t=e.length,n=new e.constructor(t);t&&\"string\"==typeof e[0]&&Ne.call(e,\"index\")&&(n.index=e.index,n.input=e.input);return n}(e),!l)return vi(e,s)}else{var T=na(e),k=T==d||T==f;if(zo(e))return di(e,l);if(T==h||T==o||k&&!i){if(s=x||k?{}:ia(e),!l)return x?function(e,t){return gi(e,ta(e),t)}(e,function(e,t){return e&&gi(t,Ds(t),e)}(s,e)):function(e,t){return gi(e,ea(e),t)}(e,Wn(s,e))}else{if(!qe[T])return i?e:{};s=function(e,t,n){var r=e.constructor;switch(t){case D:return fi(e);case c:case u:return new r(+e);case _:return function(e,t){var n=t?fi(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,n);case w:case N:case M:case O:case S:case P:case\"[object Uint8ClampedArray]\":case j:case A:return pi(e,n);case p:return new r;case m:case g:return new r(e);case y:return function(e){var t=new e.constructor(e.source,te.exec(e));return t.lastIndex=e.lastIndex,t}(e);case v:return new r;case b:return i=e,On?he(On.call(i)):{}}var i}(e,T,l)}}a||(a=new zn);var I=a.get(e);if(I)return I;a.set(e,s),Qo(e)?e.forEach((function(r){s.add(Xn(r,t,n,r,e,a))})):Vo(e)&&e.forEach((function(r,i){s.set(i,Xn(r,t,n,i,e,a))}));var B=C?void 0:(E?x?Wi:Vi:x?Ds:xs)(e);return at(B||e,(function(r,i){B&&(r=e[i=r]),Hn(s,i,Xn(r,t,n,i,e,a))})),s}function Yn(e,t,n){var r=n.length;if(null==e)return!r;for(e=he(e);r--;){var i=n[r],a=t[i],o=e[i];if(void 0===o&&!(i in e)||!a(o))return!1}return!0}function Jn(e,t,n){if(\"function\"!=typeof e)throw new ge(r);return ba((function(){e.apply(void 0,n)}),t)}function Kn(e,t,n,r){var i=-1,a=ut,o=!0,s=e.length,c=[],u=t.length;if(!s)return c;n&&(t=dt(t,Pt(n))),r?(a=lt,o=!1):t.length>=200&&(a=At,o=!1,t=new Bn(t));e:for(;++i<s;){var l=e[i],d=null==n?l:n(l);if(l=r||0!==l?l:0,o&&d==d){for(var f=u;f--;)if(t[f]===d)continue e;c.push(l)}else a(t,d,r)||c.push(l)}return c}Pn.templateSettings={escape:R,evaluate:q,interpolate:F,variable:\"\",imports:{_:Pn}},Pn.prototype=An.prototype,Pn.prototype.constructor=Pn,En.prototype=jn(An.prototype),En.prototype.constructor=En,Cn.prototype=jn(An.prototype),Cn.prototype.constructor=Cn,Tn.prototype.clear=function(){this.__data__=vn?vn(null):{},this.size=0},Tn.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},Tn.prototype.get=function(e){var t=this.__data__;if(vn){var n=t[e];return\"__lodash_hash_undefined__\"===n?void 0:n}return Ne.call(t,e)?t[e]:void 0},Tn.prototype.has=function(e){var t=this.__data__;return vn?void 0!==t[e]:Ne.call(t,e)},Tn.prototype.set=function(e,t){var n=this.__data__;return this.size+=this.has(e)?0:1,n[e]=vn&&void 0===t?\"__lodash_hash_undefined__\":t,this},kn.prototype.clear=function(){this.__data__=[],this.size=0},kn.prototype.delete=function(e){var t=this.__data__,n=Zn(t,e);return!(n<0)&&(n==t.length-1?t.pop():Xe.call(t,n,1),--this.size,!0)},kn.prototype.get=function(e){var t=this.__data__,n=Zn(t,e);return n<0?void 0:t[n][1]},kn.prototype.has=function(e){return Zn(this.__data__,e)>-1},kn.prototype.set=function(e,t){var n=this.__data__,r=Zn(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},In.prototype.clear=function(){this.size=0,this.__data__={hash:new Tn,map:new(pn||kn),string:new Tn}},In.prototype.delete=function(e){var t=Yi(this,e).delete(e);return this.size-=t?1:0,t},In.prototype.get=function(e){return Yi(this,e).get(e)},In.prototype.has=function(e){return Yi(this,e).has(e)},In.prototype.set=function(e,t){var n=Yi(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},Bn.prototype.add=Bn.prototype.push=function(e){return this.__data__.set(e,\"__lodash_hash_undefined__\"),this},Bn.prototype.has=function(e){return this.__data__.has(e)},zn.prototype.clear=function(){this.__data__=new kn,this.size=0},zn.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},zn.prototype.get=function(e){return this.__data__.get(e)},zn.prototype.has=function(e){return this.__data__.has(e)},zn.prototype.set=function(e,t){var n=this.__data__;if(n instanceof kn){var r=n.__data__;if(!pn||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new In(r)}return n.set(e,t),this.size=n.size,this};var er=Di(cr),tr=Di(ur,!0);function nr(e,t){var n=!0;return er(e,(function(e,r,i){return n=!!t(e,r,i)})),n}function rr(e,t,n){for(var r=-1,i=e.length;++r<i;){var a=e[r],o=t(a);if(null!=o&&(void 0===s?o==o&&!Yo(o):n(o,s)))var s=o,c=a}return c}function ir(e,t){var n=[];return er(e,(function(e,r,i){t(e,r,i)&&n.push(e)})),n}function ar(e,t,n,r,i){var a=-1,o=e.length;for(n||(n=aa),i||(i=[]);++a<o;){var s=e[a];t>0&&n(s)?t>1?ar(s,t-1,n,r,i):ft(i,s):r||(i[i.length]=s)}return i}var or=_i(),sr=_i(!0);function cr(e,t){return e&&or(e,t,xs)}function ur(e,t){return e&&sr(e,t,xs)}function lr(e,t){return ct(t,(function(t){return Fo(e[t])}))}function dr(e,t){for(var n=0,r=(t=si(t,e)).length;null!=e&&n<r;)e=e[Ma(t[n++])];return n&&n==r?e:void 0}function fr(e,t,n){var r=t(e);return To(e)?r:ft(r,n(e))}function pr(e){return null==e?void 0===e?\"[object Undefined]\":\"[object Null]\":Gt&&Gt in he(e)?function(e){var t=Ne.call(e,Gt),n=e[Gt];try{e[Gt]=void 0;var r=!0}catch(e){}var i=Se.call(e);r&&(t?e[Gt]=n:delete e[Gt]);return i}(e):function(e){return Se.call(e)}(e)}function mr(e,t){return e>t}function hr(e,t){return null!=e&&Ne.call(e,t)}function yr(e,t){return null!=e&&t in he(e)}function vr(e,t,n){for(var r=n?lt:ut,i=e[0].length,a=e.length,o=a,s=le(a),c=1/0,u=[];o--;){var l=e[o];o&&t&&(l=dt(l,Pt(t))),c=sn(l.length,c),s[o]=!n&&(t||i>=120&&l.length>=120)?new Bn(o&&l):void 0}l=e[0];var d=-1,f=s[0];e:for(;++d<i&&u.length<c;){var p=l[d],m=t?t(p):p;if(p=n||0!==p?p:0,!(f?At(f,m):r(u,m,n))){for(o=a;--o;){var h=s[o];if(!(h?At(h,m):r(e[o],m,n)))continue e}f&&f.push(m),u.push(p)}}return u}function gr(e,t,n){var r=null==(e=ha(e,t=si(t,e)))?e:e[Ma(Ra(t))];return null==r?void 0:rt(r,e,n)}function br(e){return Zo(e)&&pr(e)==o}function xr(e,t,n,r,i){return e===t||(null==e||null==t||!Zo(e)&&!Zo(t)?e!=e&&t!=t:function(e,t,n,r,i,a){var d=To(e),f=To(t),x=d?s:na(e),w=f?s:na(t),N=(x=x==o?h:x)==h,M=(w=w==o?h:w)==h,O=x==w;if(O&&zo(e)){if(!zo(t))return!1;d=!0,N=!1}if(O&&!N)return a||(a=new zn),d||Jo(e)?Hi(e,t,n,r,i,a):function(e,t,n,r,i,a,o){switch(n){case _:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case D:return!(e.byteLength!=t.byteLength||!a(new He(e),new He(t)));case c:case u:case m:return jo(+e,+t);case l:return e.name==t.name&&e.message==t.message;case y:case g:return e==t+\"\";case p:var s=Rt;case v:var d=1&r;if(s||(s=Ut),e.size!=t.size&&!d)return!1;var f=o.get(e);if(f)return f==t;r|=2,o.set(e,t);var h=Hi(s(e),s(t),r,i,a,o);return o.delete(e),h;case b:if(On)return On.call(e)==On.call(t)}return!1}(e,t,x,n,r,i,a);if(!(1&n)){var S=N&&Ne.call(e,\"__wrapped__\"),P=M&&Ne.call(t,\"__wrapped__\");if(S||P){var j=S?e.value():e,A=P?t.value():t;return a||(a=new zn),i(j,A,n,r,a)}}if(!O)return!1;return a||(a=new zn),function(e,t,n,r,i,a){var o=1&n,s=Vi(e),c=s.length,u=Vi(t).length;if(c!=u&&!o)return!1;var l=c;for(;l--;){var d=s[l];if(!(o?d in t:Ne.call(t,d)))return!1}var f=a.get(e),p=a.get(t);if(f&&p)return f==t&&p==e;var m=!0;a.set(e,t),a.set(t,e);var h=o;for(;++l<c;){d=s[l];var y=e[d],v=t[d];if(r)var g=o?r(v,y,d,t,e,a):r(y,v,d,e,t,a);if(!(void 0===g?y===v||i(y,v,n,r,a):g)){m=!1;break}h||(h=\"constructor\"==d)}if(m&&!h){var b=e.constructor,x=t.constructor;b==x||!(\"constructor\"in e)||!(\"constructor\"in t)||\"function\"==typeof b&&b instanceof b&&\"function\"==typeof x&&x instanceof x||(m=!1)}return a.delete(e),a.delete(t),m}(e,t,n,r,i,a)}(e,t,n,r,xr,i))}function Dr(e,t,n,r){var i=n.length,a=i,o=!r;if(null==e)return!a;for(e=he(e);i--;){var s=n[i];if(o&&s[2]?s[1]!==e[s[0]]:!(s[0]in e))return!1}for(;++i<a;){var c=(s=n[i])[0],u=e[c],l=s[1];if(o&&s[2]){if(void 0===u&&!(c in e))return!1}else{var d=new zn;if(r)var f=r(u,l,c,e,t,d);if(!(void 0===f?xr(l,u,3,r,d):f))return!1}}return!0}function _r(e){return!(!Ho(e)||(t=e,Oe&&Oe in t))&&(Fo(e)?Ce:ie).test(Oa(e));var t}function wr(e){return\"function\"==typeof e?e:null==e?Ws:\"object\"==typeof e?To(e)?jr(e[0],e[1]):Pr(e):tc(e)}function Nr(e){if(!da(e))return an(e);var t=[];for(var n in he(e))Ne.call(e,n)&&\"constructor\"!=n&&t.push(n);return t}function Mr(e){if(!Ho(e))return function(e){var t=[];if(null!=e)for(var n in he(e))t.push(n);return t}(e);var t=da(e),n=[];for(var r in e)(\"constructor\"!=r||!t&&Ne.call(e,r))&&n.push(r);return n}function Or(e,t){return e<t}function Sr(e,t){var n=-1,r=Io(e)?le(e.length):[];return er(e,(function(e,i,a){r[++n]=t(e,i,a)})),r}function Pr(e){var t=Ji(e);return 1==t.length&&t[0][2]?pa(t[0][0],t[0][1]):function(n){return n===e||Dr(n,e,t)}}function jr(e,t){return ca(e)&&fa(t)?pa(Ma(e),t):function(n){var r=hs(n,e);return void 0===r&&r===t?ys(n,e):xr(t,r,3)}}function Ar(e,t,n,r,i){e!==t&&or(t,(function(a,o){if(i||(i=new zn),Ho(a))!function(e,t,n,r,i,a,o){var s=va(e,n),c=va(t,n),u=o.get(c);if(u)return void Ln(e,n,u);var l=a?a(s,c,n+\"\",e,t,o):void 0,d=void 0===l;if(d){var f=To(c),p=!f&&zo(c),m=!f&&!p&&Jo(c);l=c,f||p||m?To(s)?l=s:Bo(s)?l=vi(s):p?(d=!1,l=di(c,!0)):m?(d=!1,l=pi(c,!0)):l=[]:Go(c)||Co(c)?(l=s,Co(s)?l=os(s):Ho(s)&&!Fo(s)||(l=ia(c))):d=!1}d&&(o.set(c,l),i(l,c,r,a,o),o.delete(c));Ln(e,n,l)}(e,t,o,n,Ar,r,i);else{var s=r?r(va(e,o),a,o+\"\",e,t,i):void 0;void 0===s&&(s=a),Ln(e,o,s)}}),Ds)}function Er(e,t){var n=e.length;if(n)return oa(t+=t<0?n:0,n)?e[t]:void 0}function Cr(e,t,n){t=t.length?dt(t,(function(e){return To(e)?function(t){return dr(t,1===e.length?e[0]:e)}:e})):[Ws];var r=-1;return t=dt(t,Pt(Xi())),function(e,t){var n=e.length;for(e.sort(t);n--;)e[n]=e[n].value;return e}(Sr(e,(function(e,n,i){return{criteria:dt(t,(function(t){return t(e)})),index:++r,value:e}})),(function(e,t){return function(e,t,n){var r=-1,i=e.criteria,a=t.criteria,o=i.length,s=n.length;for(;++r<o;){var c=mi(i[r],a[r]);if(c){if(r>=s)return c;var u=n[r];return c*(\"desc\"==u?-1:1)}}return e.index-t.index}(e,t,n)}))}function Tr(e,t,n){for(var r=-1,i=t.length,a={};++r<i;){var o=t[r],s=dr(e,o);n(s,o)&&Ur(a,si(o,e),s)}return a}function kr(e,t,n,r){var i=r?xt:bt,a=-1,o=t.length,s=e;for(e===t&&(t=vi(t)),n&&(s=dt(e,Pt(n)));++a<o;)for(var c=0,u=t[a],l=n?n(u):u;(c=i(s,l,c,r))>-1;)s!==e&&Xe.call(s,c,1),Xe.call(e,c,1);return e}function Ir(e,t){for(var n=e?t.length:0,r=n-1;n--;){var i=t[n];if(n==r||i!==a){var a=i;oa(i)?Xe.call(e,i,1):Kr(e,i)}}return e}function Br(e,t){return e+Kt(ln()*(t-e+1))}function zr(e,t){var n=\"\";if(!e||t<1||t>9007199254740991)return n;do{t%2&&(n+=e),(t=Kt(t/2))&&(e+=e)}while(t);return n}function Rr(e,t){return xa(ma(e,t,Ws),e+\"\")}function qr(e){return qn(js(e))}function Fr(e,t){var n=js(e);return wa(n,Qn(t,0,n.length))}function Ur(e,t,n,r){if(!Ho(e))return e;for(var i=-1,a=(t=si(t,e)).length,o=a-1,s=e;null!=s&&++i<a;){var c=Ma(t[i]),u=n;if(\"__proto__\"===c||\"constructor\"===c||\"prototype\"===c)return e;if(i!=o){var l=s[c];void 0===(u=r?r(l,c,s):void 0)&&(u=Ho(l)?l:oa(t[i+1])?[]:{})}Hn(s,c,u),s=s[c]}return e}var Lr=gn?function(e,t){return gn.set(e,t),e}:Ws,Hr=$t?function(e,t){return $t(e,\"toString\",{configurable:!0,enumerable:!1,value:Hs(t),writable:!0})}:Ws;function Zr(e){return wa(js(e))}function Vr(e,t,n){var r=-1,i=e.length;t<0&&(t=-t>i?0:i+t),(n=n>i?i:n)<0&&(n+=i),i=t>n?0:n-t>>>0,t>>>=0;for(var a=le(i);++r<i;)a[r]=e[r+t];return a}function Wr(e,t){var n;return er(e,(function(e,r,i){return!(n=t(e,r,i))})),!!n}function Gr(e,t,n){var r=0,i=null==e?r:e.length;if(\"number\"==typeof t&&t==t&&i<=2147483647){for(;r<i;){var a=r+i>>>1,o=e[a];null!==o&&!Yo(o)&&(n?o<=t:o<t)?r=a+1:i=a}return i}return $r(e,t,Ws,n)}function $r(e,t,n,r){var i=0,a=null==e?0:e.length;if(0===a)return 0;for(var o=(t=n(t))!=t,s=null===t,c=Yo(t),u=void 0===t;i<a;){var l=Kt((i+a)/2),d=n(e[l]),f=void 0!==d,p=null===d,m=d==d,h=Yo(d);if(o)var y=r||m;else y=u?m&&(r||f):s?m&&f&&(r||!p):c?m&&f&&!p&&(r||!h):!p&&!h&&(r?d<=t:d<t);y?i=l+1:a=l}return sn(a,4294967294)}function Qr(e,t){for(var n=-1,r=e.length,i=0,a=[];++n<r;){var o=e[n],s=t?t(o):o;if(!n||!jo(s,c)){var c=s;a[i++]=0===o?0:o}}return a}function Xr(e){return\"number\"==typeof e?e:Yo(e)?NaN:+e}function Yr(e){if(\"string\"==typeof e)return e;if(To(e))return dt(e,Yr)+\"\";if(Yo(e))return Sn?Sn.call(e):\"\";var t=e+\"\";return\"0\"==t&&1/e==-1/0?\"-0\":t}function Jr(e,t,n){var r=-1,i=ut,a=e.length,o=!0,s=[],c=s;if(n)o=!1,i=lt;else if(a>=200){var u=t?null:zi(e);if(u)return Ut(u);o=!1,i=At,c=new Bn}else c=t?[]:s;e:for(;++r<a;){var l=e[r],d=t?t(l):l;if(l=n||0!==l?l:0,o&&d==d){for(var f=c.length;f--;)if(c[f]===d)continue e;t&&c.push(d),s.push(l)}else i(c,d,n)||(c!==s&&c.push(d),s.push(l))}return s}function Kr(e,t){return null==(e=ha(e,t=si(t,e)))||delete e[Ma(Ra(t))]}function ei(e,t,n,r){return Ur(e,t,n(dr(e,t)),r)}function ti(e,t,n,r){for(var i=e.length,a=r?i:-1;(r?a--:++a<i)&&t(e[a],a,e););return n?Vr(e,r?0:a,r?a+1:i):Vr(e,r?a+1:0,r?i:a)}function ni(e,t){var n=e;return n instanceof Cn&&(n=n.value()),pt(t,(function(e,t){return t.func.apply(t.thisArg,ft([e],t.args))}),n)}function ri(e,t,n){var r=e.length;if(r<2)return r?Jr(e[0]):[];for(var i=-1,a=le(r);++i<r;)for(var o=e[i],s=-1;++s<r;)s!=i&&(a[i]=Kn(a[i]||o,e[s],t,n));return Jr(ar(a,1),t,n)}function ii(e,t,n){for(var r=-1,i=e.length,a=t.length,o={};++r<i;){var s=r<a?t[r]:void 0;n(o,e[r],s)}return o}function ai(e){return Bo(e)?e:[]}function oi(e){return\"function\"==typeof e?e:Ws}function si(e,t){return To(e)?e:ca(e,t)?[e]:Na(ss(e))}var ci=Rr;function ui(e,t,n){var r=e.length;return n=void 0===n?r:n,!t&&n>=r?e:Vr(e,t,n)}var li=Qt||function(e){return Ve.clearTimeout(e)};function di(e,t){if(t)return e.slice();var n=e.length,r=Ze?Ze(n):new e.constructor(n);return e.copy(r),r}function fi(e){var t=new e.constructor(e.byteLength);return new He(t).set(new He(e)),t}function pi(e,t){var n=t?fi(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}function mi(e,t){if(e!==t){var n=void 0!==e,r=null===e,i=e==e,a=Yo(e),o=void 0!==t,s=null===t,c=t==t,u=Yo(t);if(!s&&!u&&!a&&e>t||a&&o&&c&&!s&&!u||r&&o&&c||!n&&c||!i)return 1;if(!r&&!a&&!u&&e<t||u&&n&&i&&!r&&!a||s&&n&&i||!o&&i||!c)return-1}return 0}function hi(e,t,n,r){for(var i=-1,a=e.length,o=n.length,s=-1,c=t.length,u=on(a-o,0),l=le(c+u),d=!r;++s<c;)l[s]=t[s];for(;++i<o;)(d||i<a)&&(l[n[i]]=e[i]);for(;u--;)l[s++]=e[i++];return l}function yi(e,t,n,r){for(var i=-1,a=e.length,o=-1,s=n.length,c=-1,u=t.length,l=on(a-s,0),d=le(l+u),f=!r;++i<l;)d[i]=e[i];for(var p=i;++c<u;)d[p+c]=t[c];for(;++o<s;)(f||i<a)&&(d[p+n[o]]=e[i++]);return d}function vi(e,t){var n=-1,r=e.length;for(t||(t=le(r));++n<r;)t[n]=e[n];return t}function gi(e,t,n,r){var i=!n;n||(n={});for(var a=-1,o=t.length;++a<o;){var s=t[a],c=r?r(n[s],e[s],s,n,e):void 0;void 0===c&&(c=e[s]),i?Gn(n,s,c):Hn(n,s,c)}return n}function bi(e,t){return function(n,r){var i=To(n)?it:Vn,a=t?t():{};return i(n,e,Xi(r,2),a)}}function xi(e){return Rr((function(t,n){var r=-1,i=n.length,a=i>1?n[i-1]:void 0,o=i>2?n[2]:void 0;for(a=e.length>3&&\"function\"==typeof a?(i--,a):void 0,o&&sa(n[0],n[1],o)&&(a=i<3?void 0:a,i=1),t=he(t);++r<i;){var s=n[r];s&&e(t,s,r,a)}return t}))}function Di(e,t){return function(n,r){if(null==n)return n;if(!Io(n))return e(n,r);for(var i=n.length,a=t?i:-1,o=he(n);(t?a--:++a<i)&&!1!==r(o[a],a,o););return n}}function _i(e){return function(t,n,r){for(var i=-1,a=he(t),o=r(t),s=o.length;s--;){var c=o[e?s:++i];if(!1===n(a[c],c,a))break}return t}}function wi(e){return function(t){var n=zt(t=ss(t))?Zt(t):void 0,r=n?n[0]:t.charAt(0),i=n?ui(n,1).join(\"\"):t.slice(1);return r[e]()+i}}function Ni(e){return function(t){return pt(Fs(Cs(t).replace(Ae,\"\")),e,\"\")}}function Mi(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var n=jn(e.prototype),r=e.apply(n,t);return Ho(r)?r:n}}function Oi(e){return function(t,n,r){var i=he(t);if(!Io(t)){var a=Xi(n,3);t=xs(t),n=function(e){return a(i[e],e,i)}}var o=e(t,n,r);return o>-1?i[a?t[o]:o]:void 0}}function Si(e){return Zi((function(t){var n=t.length,i=n,a=En.prototype.thru;for(e&&t.reverse();i--;){var o=t[i];if(\"function\"!=typeof o)throw new ge(r);if(a&&!s&&\"wrapper\"==$i(o))var s=new En([],!0)}for(i=s?i:n;++i<n;){var c=$i(o=t[i]),u=\"wrapper\"==c?Gi(o):void 0;s=u&&ua(u[0])&&424==u[1]&&!u[4].length&&1==u[9]?s[$i(u[0])].apply(s,u[3]):1==o.length&&ua(o)?s[c]():s.thru(o)}return function(){var e=arguments,r=e[0];if(s&&1==e.length&&To(r))return s.plant(r).value();for(var i=0,a=n?t[i].apply(this,e):r;++i<n;)a=t[i].call(this,a);return a}}))}function Pi(e,t,n,r,i,a,o,s,c,u){var l=128&t,d=1&t,f=2&t,p=24&t,m=512&t,h=f?void 0:Mi(e);return function y(){for(var v=arguments.length,g=le(v),b=v;b--;)g[b]=arguments[b];if(p)var x=Qi(y),D=Tt(g,x);if(r&&(g=hi(g,r,i,p)),a&&(g=yi(g,a,o,p)),v-=D,p&&v<u){var _=Ft(g,x);return Ii(e,t,Pi,y.placeholder,n,g,_,s,c,u-v)}var w=d?n:this,N=f?w[e]:e;return v=g.length,s?g=ya(g,s):m&&v>1&&g.reverse(),l&&c<v&&(g.length=c),this&&this!==Ve&&this instanceof y&&(N=h||Mi(N)),N.apply(w,g)}}function ji(e,t){return function(n,r){return function(e,t,n,r){return cr(e,(function(e,i,a){t(r,n(e),i,a)})),r}(n,e,t(r),{})}}function Ai(e,t){return function(n,r){var i;if(void 0===n&&void 0===r)return t;if(void 0!==n&&(i=n),void 0!==r){if(void 0===i)return r;\"string\"==typeof n||\"string\"==typeof r?(n=Yr(n),r=Yr(r)):(n=Xr(n),r=Xr(r)),i=e(n,r)}return i}}function Ei(e){return Zi((function(t){return t=dt(t,Pt(Xi())),Rr((function(n){var r=this;return e(t,(function(e){return rt(e,r,n)}))}))}))}function Ci(e,t){var n=(t=void 0===t?\" \":Yr(t)).length;if(n<2)return n?zr(t,e):t;var r=zr(t,Jt(e/Ht(t)));return zt(t)?ui(Zt(r),0,e).join(\"\"):r.slice(0,e)}function Ti(e){return function(t,n,r){return r&&\"number\"!=typeof r&&sa(t,n,r)&&(n=r=void 0),t=ns(t),void 0===n?(n=t,t=0):n=ns(n),function(e,t,n,r){for(var i=-1,a=on(Jt((t-e)/(n||1)),0),o=le(a);a--;)o[r?a:++i]=e,e+=n;return o}(t,n,r=void 0===r?t<n?1:-1:ns(r),e)}}function ki(e){return function(t,n){return\"string\"==typeof t&&\"string\"==typeof n||(t=as(t),n=as(n)),e(t,n)}}function Ii(e,t,n,r,i,a,o,s,c,u){var l=8&t;t|=l?32:64,4&(t&=~(l?64:32))||(t&=-4);var d=[e,t,i,l?a:void 0,l?o:void 0,l?void 0:a,l?void 0:o,s,c,u],f=n.apply(void 0,d);return ua(e)&&ga(f,d),f.placeholder=r,Da(f,e,t)}function Bi(e){var t=me[e];return function(e,n){if(e=as(e),(n=null==n?0:sn(rs(n),292))&&nn(e)){var r=(ss(e)+\"e\").split(\"e\");return+((r=(ss(t(r[0]+\"e\"+(+r[1]+n)))+\"e\").split(\"e\"))[0]+\"e\"+(+r[1]-n))}return t(e)}}var zi=hn&&1/Ut(new hn([,-0]))[1]==1/0?function(e){return new hn(e)}:Ys;function Ri(e){return function(t){var n=na(t);return n==p?Rt(t):n==v?Lt(t):function(e,t){return dt(t,(function(t){return[t,e[t]]}))}(t,e(t))}}function qi(e,t,n,a,o,s,c,u){var l=2&t;if(!l&&\"function\"!=typeof e)throw new ge(r);var d=a?a.length:0;if(d||(t&=-97,a=o=void 0),c=void 0===c?c:on(rs(c),0),u=void 0===u?u:rs(u),d-=o?o.length:0,64&t){var f=a,p=o;a=o=void 0}var m=l?void 0:Gi(e),h=[e,t,n,a,o,f,p,s,c,u];if(m&&function(e,t){var n=e[1],r=t[1],a=n|r,o=a<131,s=128==r&&8==n||128==r&&256==n&&e[7].length<=t[8]||384==r&&t[7].length<=t[8]&&8==n;if(!o&&!s)return e;1&r&&(e[2]=t[2],a|=1&n?0:4);var c=t[3];if(c){var u=e[3];e[3]=u?hi(u,c,t[4]):c,e[4]=u?Ft(e[3],i):t[4]}(c=t[5])&&(u=e[5],e[5]=u?yi(u,c,t[6]):c,e[6]=u?Ft(e[5],i):t[6]);(c=t[7])&&(e[7]=c);128&r&&(e[8]=null==e[8]?t[8]:sn(e[8],t[8]));null==e[9]&&(e[9]=t[9]);e[0]=t[0],e[1]=a}(h,m),e=h[0],t=h[1],n=h[2],a=h[3],o=h[4],!(u=h[9]=void 0===h[9]?l?0:e.length:on(h[9]-d,0))&&24&t&&(t&=-25),t&&1!=t)y=8==t||16==t?function(e,t,n){var r=Mi(e);return function i(){for(var a=arguments.length,o=le(a),s=a,c=Qi(i);s--;)o[s]=arguments[s];var u=a<3&&o[0]!==c&&o[a-1]!==c?[]:Ft(o,c);if((a-=u.length)<n)return Ii(e,t,Pi,i.placeholder,void 0,o,u,void 0,void 0,n-a);var l=this&&this!==Ve&&this instanceof i?r:e;return rt(l,this,o)}}(e,t,u):32!=t&&33!=t||o.length?Pi.apply(void 0,h):function(e,t,n,r){var i=1&t,a=Mi(e);return function t(){for(var o=-1,s=arguments.length,c=-1,u=r.length,l=le(u+s),d=this&&this!==Ve&&this instanceof t?a:e;++c<u;)l[c]=r[c];for(;s--;)l[c++]=arguments[++o];return rt(d,i?n:this,l)}}(e,t,n,a);else var y=function(e,t,n){var r=1&t,i=Mi(e);return function t(){var a=this&&this!==Ve&&this instanceof t?i:e;return a.apply(r?n:this,arguments)}}(e,t,n);return Da((m?Lr:ga)(y,h),e,t)}function Fi(e,t,n,r){return void 0===e||jo(e,De[n])&&!Ne.call(r,n)?t:e}function Ui(e,t,n,r,i,a){return Ho(e)&&Ho(t)&&(a.set(t,e),Ar(e,t,void 0,Ui,a),a.delete(t)),e}function Li(e){return Go(e)?void 0:e}function Hi(e,t,n,r,i,a){var o=1&n,s=e.length,c=t.length;if(s!=c&&!(o&&c>s))return!1;var u=a.get(e),l=a.get(t);if(u&&l)return u==t&&l==e;var d=-1,f=!0,p=2&n?new Bn:void 0;for(a.set(e,t),a.set(t,e);++d<s;){var m=e[d],h=t[d];if(r)var y=o?r(h,m,d,t,e,a):r(m,h,d,e,t,a);if(void 0!==y){if(y)continue;f=!1;break}if(p){if(!ht(t,(function(e,t){if(!At(p,t)&&(m===e||i(m,e,n,r,a)))return p.push(t)}))){f=!1;break}}else if(m!==h&&!i(m,h,n,r,a)){f=!1;break}}return a.delete(e),a.delete(t),f}function Zi(e){return xa(ma(e,void 0,Ta),e+\"\")}function Vi(e){return fr(e,xs,ea)}function Wi(e){return fr(e,Ds,ta)}var Gi=gn?function(e){return gn.get(e)}:Ys;function $i(e){for(var t=e.name+\"\",n=bn[t],r=Ne.call(bn,t)?n.length:0;r--;){var i=n[r],a=i.func;if(null==a||a==e)return i.name}return t}function Qi(e){return(Ne.call(Pn,\"placeholder\")?Pn:e).placeholder}function Xi(){var e=Pn.iteratee||Gs;return e=e===Gs?wr:e,arguments.length?e(arguments[0],arguments[1]):e}function Yi(e,t){var n,r,i=e.__data__;return(\"string\"==(r=typeof(n=t))||\"number\"==r||\"symbol\"==r||\"boolean\"==r?\"__proto__\"!==n:null===n)?i[\"string\"==typeof t?\"string\":\"hash\"]:i.map}function Ji(e){for(var t=xs(e),n=t.length;n--;){var r=t[n],i=e[r];t[n]=[r,i,fa(i)]}return t}function Ki(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return _r(n)?n:void 0}var ea=en?function(e){return null==e?[]:(e=he(e),ct(en(e),(function(t){return Qe.call(e,t)})))}:ic,ta=en?function(e){for(var t=[];e;)ft(t,ea(e)),e=We(e);return t}:ic,na=pr;function ra(e,t,n){for(var r=-1,i=(t=si(t,e)).length,a=!1;++r<i;){var o=Ma(t[r]);if(!(a=null!=e&&n(e,o)))break;e=e[o]}return a||++r!=i?a:!!(i=null==e?0:e.length)&&Lo(i)&&oa(o,i)&&(To(e)||Co(e))}function ia(e){return\"function\"!=typeof e.constructor||da(e)?{}:jn(We(e))}function aa(e){return To(e)||Co(e)||!!(yt&&e&&e[yt])}function oa(e,t){var n=typeof e;return!!(t=null==t?9007199254740991:t)&&(\"number\"==n||\"symbol\"!=n&&oe.test(e))&&e>-1&&e%1==0&&e<t}function sa(e,t,n){if(!Ho(n))return!1;var r=typeof t;return!!(\"number\"==r?Io(n)&&oa(t,n.length):\"string\"==r&&t in n)&&jo(n[t],e)}function ca(e,t){if(To(e))return!1;var n=typeof e;return!(\"number\"!=n&&\"symbol\"!=n&&\"boolean\"!=n&&null!=e&&!Yo(e))||(L.test(e)||!U.test(e)||null!=t&&e in he(t))}function ua(e){var t=$i(e),n=Pn[t];if(\"function\"!=typeof n||!(t in Cn.prototype))return!1;if(e===n)return!0;var r=Gi(n);return!!r&&e===r[0]}(fn&&na(new fn(new ArrayBuffer(1)))!=_||pn&&na(new pn)!=p||mn&&\"[object Promise]\"!=na(mn.resolve())||hn&&na(new hn)!=v||yn&&na(new yn)!=x)&&(na=function(e){var t=pr(e),n=t==h?e.constructor:void 0,r=n?Oa(n):\"\";if(r)switch(r){case xn:return _;case Dn:return p;case _n:return\"[object Promise]\";case wn:return v;case Nn:return x}return t});var la=_e?Fo:ac;function da(e){var t=e&&e.constructor;return e===(\"function\"==typeof t&&t.prototype||De)}function fa(e){return e==e&&!Ho(e)}function pa(e,t){return function(n){return null!=n&&(n[e]===t&&(void 0!==t||e in he(n)))}}function ma(e,t,n){return t=on(void 0===t?e.length-1:t,0),function(){for(var r=arguments,i=-1,a=on(r.length-t,0),o=le(a);++i<a;)o[i]=r[t+i];i=-1;for(var s=le(t+1);++i<t;)s[i]=r[i];return s[t]=n(o),rt(e,this,s)}}function ha(e,t){return t.length<2?e:dr(e,Vr(t,0,-1))}function ya(e,t){for(var n=e.length,r=sn(t.length,n),i=vi(e);r--;){var a=t[r];e[r]=oa(a,n)?i[a]:void 0}return e}function va(e,t){if((\"constructor\"!==t||\"function\"!=typeof e[t])&&\"__proto__\"!=t)return e[t]}var ga=_a(Lr),ba=Yt||function(e,t){return Ve.setTimeout(e,t)},xa=_a(Hr);function Da(e,t,n){var r=t+\"\";return xa(e,function(e,t){var n=t.length;if(!n)return e;var r=n-1;return t[r]=(n>1?\"& \":\"\")+t[r],t=t.join(n>2?\", \":\" \"),e.replace(Q,\"{\\n/* [wrapped with \"+t+\"] */\\n\")}(r,function(e,t){return at(a,(function(n){var r=\"_.\"+n[0];t&n[1]&&!ut(e,r)&&e.push(r)})),e.sort()}(function(e){var t=e.match(X);return t?t[1].split(Y):[]}(r),n)))}function _a(e){var t=0,n=0;return function(){var r=cn(),i=16-(r-n);if(n=r,i>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}function wa(e,t){var n=-1,r=e.length,i=r-1;for(t=void 0===t?r:t;++n<t;){var a=Br(n,i),o=e[a];e[a]=e[n],e[n]=o}return e.length=t,e}var Na=function(e){var t=wo(e,(function(e){return 500===n.size&&n.clear(),e})),n=t.cache;return t}((function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(\"\"),e.replace(H,(function(e,n,r,i){t.push(r?i.replace(K,\"$1\"):n||e)})),t}));function Ma(e){if(\"string\"==typeof e||Yo(e))return e;var t=e+\"\";return\"0\"==t&&1/e==-1/0?\"-0\":t}function Oa(e){if(null!=e){try{return we.call(e)}catch(e){}try{return e+\"\"}catch(e){}}return\"\"}function Sa(e){if(e instanceof Cn)return e.clone();var t=new En(e.__wrapped__,e.__chain__);return t.__actions__=vi(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}var Pa=Rr((function(e,t){return Bo(e)?Kn(e,ar(t,1,Bo,!0)):[]})),ja=Rr((function(e,t){var n=Ra(t);return Bo(n)&&(n=void 0),Bo(e)?Kn(e,ar(t,1,Bo,!0),Xi(n,2)):[]})),Aa=Rr((function(e,t){var n=Ra(t);return Bo(n)&&(n=void 0),Bo(e)?Kn(e,ar(t,1,Bo,!0),void 0,n):[]}));function Ea(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:rs(n);return i<0&&(i=on(r+i,0)),gt(e,Xi(t,3),i)}function Ca(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=r-1;return void 0!==n&&(i=rs(n),i=n<0?on(r+i,0):sn(i,r-1)),gt(e,Xi(t,3),i,!0)}function Ta(e){return(null==e?0:e.length)?ar(e,1):[]}function ka(e){return e&&e.length?e[0]:void 0}var Ia=Rr((function(e){var t=dt(e,ai);return t.length&&t[0]===e[0]?vr(t):[]})),Ba=Rr((function(e){var t=Ra(e),n=dt(e,ai);return t===Ra(n)?t=void 0:n.pop(),n.length&&n[0]===e[0]?vr(n,Xi(t,2)):[]})),za=Rr((function(e){var t=Ra(e),n=dt(e,ai);return(t=\"function\"==typeof t?t:void 0)&&n.pop(),n.length&&n[0]===e[0]?vr(n,void 0,t):[]}));function Ra(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}var qa=Rr(Fa);function Fa(e,t){return e&&e.length&&t&&t.length?kr(e,t):e}var Ua=Zi((function(e,t){var n=null==e?0:e.length,r=$n(e,t);return Ir(e,dt(t,(function(e){return oa(e,n)?+e:e})).sort(mi)),r}));function La(e){return null==e?e:dn.call(e)}var Ha=Rr((function(e){return Jr(ar(e,1,Bo,!0))})),Za=Rr((function(e){var t=Ra(e);return Bo(t)&&(t=void 0),Jr(ar(e,1,Bo,!0),Xi(t,2))})),Va=Rr((function(e){var t=Ra(e);return t=\"function\"==typeof t?t:void 0,Jr(ar(e,1,Bo,!0),void 0,t)}));function Wa(e){if(!e||!e.length)return[];var t=0;return e=ct(e,(function(e){if(Bo(e))return t=on(e.length,t),!0})),St(t,(function(t){return dt(e,wt(t))}))}function Ga(e,t){if(!e||!e.length)return[];var n=Wa(e);return null==t?n:dt(n,(function(e){return rt(t,void 0,e)}))}var $a=Rr((function(e,t){return Bo(e)?Kn(e,t):[]})),Qa=Rr((function(e){return ri(ct(e,Bo))})),Xa=Rr((function(e){var t=Ra(e);return Bo(t)&&(t=void 0),ri(ct(e,Bo),Xi(t,2))})),Ya=Rr((function(e){var t=Ra(e);return t=\"function\"==typeof t?t:void 0,ri(ct(e,Bo),void 0,t)})),Ja=Rr(Wa);var Ka=Rr((function(e){var t=e.length,n=t>1?e[t-1]:void 0;return n=\"function\"==typeof n?(e.pop(),n):void 0,Ga(e,n)}));function eo(e){var t=Pn(e);return t.__chain__=!0,t}function to(e,t){return t(e)}var no=Zi((function(e){var t=e.length,n=t?e[0]:0,r=this.__wrapped__,i=function(t){return $n(t,e)};return!(t>1||this.__actions__.length)&&r instanceof Cn&&oa(n)?((r=r.slice(n,+n+(t?1:0))).__actions__.push({func:to,args:[i],thisArg:void 0}),new En(r,this.__chain__).thru((function(e){return t&&!e.length&&e.push(void 0),e}))):this.thru(i)}));var ro=bi((function(e,t,n){Ne.call(e,n)?++e[n]:Gn(e,n,1)}));var io=Oi(Ea),ao=Oi(Ca);function oo(e,t){return(To(e)?at:er)(e,Xi(t,3))}function so(e,t){return(To(e)?ot:tr)(e,Xi(t,3))}var co=bi((function(e,t,n){Ne.call(e,n)?e[n].push(t):Gn(e,n,[t])}));var uo=Rr((function(e,t,n){var r=-1,i=\"function\"==typeof t,a=Io(e)?le(e.length):[];return er(e,(function(e){a[++r]=i?rt(t,e,n):gr(e,t,n)})),a})),lo=bi((function(e,t,n){Gn(e,n,t)}));function fo(e,t){return(To(e)?dt:Sr)(e,Xi(t,3))}var po=bi((function(e,t,n){e[n?0:1].push(t)}),(function(){return[[],[]]}));var mo=Rr((function(e,t){if(null==e)return[];var n=t.length;return n>1&&sa(e,t[0],t[1])?t=[]:n>2&&sa(t[0],t[1],t[2])&&(t=[t[0]]),Cr(e,ar(t,1),[])})),ho=Xt||function(){return Ve.Date.now()};function yo(e,t,n){return t=n?void 0:t,qi(e,128,void 0,void 0,void 0,void 0,t=e&&null==t?e.length:t)}function vo(e,t){var n;if(\"function\"!=typeof t)throw new ge(r);return e=rs(e),function(){return--e>0&&(n=t.apply(this,arguments)),e<=1&&(t=void 0),n}}var go=Rr((function(e,t,n){var r=1;if(n.length){var i=Ft(n,Qi(go));r|=32}return qi(e,r,t,n,i)})),bo=Rr((function(e,t,n){var r=3;if(n.length){var i=Ft(n,Qi(bo));r|=32}return qi(t,r,e,n,i)}));function xo(e,t,n){var i,a,o,s,c,u,l=0,d=!1,f=!1,p=!0;if(\"function\"!=typeof e)throw new ge(r);function m(t){var n=i,r=a;return i=a=void 0,l=t,s=e.apply(r,n)}function h(e){return l=e,c=ba(v,t),d?m(e):s}function y(e){var n=e-u;return void 0===u||n>=t||n<0||f&&e-l>=o}function v(){var e=ho();if(y(e))return g(e);c=ba(v,function(e){var n=t-(e-u);return f?sn(n,o-(e-l)):n}(e))}function g(e){return c=void 0,p&&i?m(e):(i=a=void 0,s)}function b(){var e=ho(),n=y(e);if(i=arguments,a=this,u=e,n){if(void 0===c)return h(u);if(f)return li(c),c=ba(v,t),m(u)}return void 0===c&&(c=ba(v,t)),s}return t=as(t)||0,Ho(n)&&(d=!!n.leading,o=(f=\"maxWait\"in n)?on(as(n.maxWait)||0,t):o,p=\"trailing\"in n?!!n.trailing:p),b.cancel=function(){void 0!==c&&li(c),l=0,i=u=a=c=void 0},b.flush=function(){return void 0===c?s:g(ho())},b}var Do=Rr((function(e,t){return Jn(e,1,t)})),_o=Rr((function(e,t,n){return Jn(e,as(t)||0,n)}));function wo(e,t){if(\"function\"!=typeof e||null!=t&&\"function\"!=typeof t)throw new ge(r);var n=function(){var r=arguments,i=t?t.apply(this,r):r[0],a=n.cache;if(a.has(i))return a.get(i);var o=e.apply(this,r);return n.cache=a.set(i,o)||a,o};return n.cache=new(wo.Cache||In),n}function No(e){if(\"function\"!=typeof e)throw new ge(r);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}wo.Cache=In;var Mo=ci((function(e,t){var n=(t=1==t.length&&To(t[0])?dt(t[0],Pt(Xi())):dt(ar(t,1),Pt(Xi()))).length;return Rr((function(r){for(var i=-1,a=sn(r.length,n);++i<a;)r[i]=t[i].call(this,r[i]);return rt(e,this,r)}))})),Oo=Rr((function(e,t){return qi(e,32,void 0,t,Ft(t,Qi(Oo)))})),So=Rr((function(e,t){return qi(e,64,void 0,t,Ft(t,Qi(So)))})),Po=Zi((function(e,t){return qi(e,256,void 0,void 0,void 0,t)}));function jo(e,t){return e===t||e!=e&&t!=t}var Ao=ki(mr),Eo=ki((function(e,t){return e>=t})),Co=br(function(){return arguments}())?br:function(e){return Zo(e)&&Ne.call(e,\"callee\")&&!Qe.call(e,\"callee\")},To=le.isArray,ko=Ye?Pt(Ye):function(e){return Zo(e)&&pr(e)==D};function Io(e){return null!=e&&Lo(e.length)&&!Fo(e)}function Bo(e){return Zo(e)&&Io(e)}var zo=tn||ac,Ro=Je?Pt(Je):function(e){return Zo(e)&&pr(e)==u};function qo(e){if(!Zo(e))return!1;var t=pr(e);return t==l||\"[object DOMException]\"==t||\"string\"==typeof e.message&&\"string\"==typeof e.name&&!Go(e)}function Fo(e){if(!Ho(e))return!1;var t=pr(e);return t==d||t==f||\"[object AsyncFunction]\"==t||\"[object Proxy]\"==t}function Uo(e){return\"number\"==typeof e&&e==rs(e)}function Lo(e){return\"number\"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}function Ho(e){var t=typeof e;return null!=e&&(\"object\"==t||\"function\"==t)}function Zo(e){return null!=e&&\"object\"==typeof e}var Vo=Ke?Pt(Ke):function(e){return Zo(e)&&na(e)==p};function Wo(e){return\"number\"==typeof e||Zo(e)&&pr(e)==m}function Go(e){if(!Zo(e)||pr(e)!=h)return!1;var t=We(e);if(null===t)return!0;var n=Ne.call(t,\"constructor\")&&t.constructor;return\"function\"==typeof n&&n instanceof n&&we.call(n)==Pe}var $o=et?Pt(et):function(e){return Zo(e)&&pr(e)==y};var Qo=tt?Pt(tt):function(e){return Zo(e)&&na(e)==v};function Xo(e){return\"string\"==typeof e||!To(e)&&Zo(e)&&pr(e)==g}function Yo(e){return\"symbol\"==typeof e||Zo(e)&&pr(e)==b}var Jo=nt?Pt(nt):function(e){return Zo(e)&&Lo(e.length)&&!!Re[pr(e)]};var Ko=ki(Or),es=ki((function(e,t){return e<=t}));function ts(e){if(!e)return[];if(Io(e))return Xo(e)?Zt(e):vi(e);if(Nt&&e[Nt])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[Nt]());var t=na(e);return(t==p?Rt:t==v?Ut:js)(e)}function ns(e){return e?(e=as(e))===1/0||e===-1/0?17976931348623157e292*(e<0?-1:1):e==e?e:0:0===e?e:0}function rs(e){var t=ns(e),n=t%1;return t==t?n?t-n:t:0}function is(e){return e?Qn(rs(e),0,4294967295):0}function as(e){if(\"number\"==typeof e)return e;if(Yo(e))return NaN;if(Ho(e)){var t=\"function\"==typeof e.valueOf?e.valueOf():e;e=Ho(t)?t+\"\":t}if(\"string\"!=typeof e)return 0===e?e:+e;e=e.replace(W,\"\");var n=re.test(e);return n||ae.test(e)?Le(e.slice(2),n?2:8):ne.test(e)?NaN:+e}function os(e){return gi(e,Ds(e))}function ss(e){return null==e?\"\":Yr(e)}var cs=xi((function(e,t){if(da(t)||Io(t))gi(t,xs(t),e);else for(var n in t)Ne.call(t,n)&&Hn(e,n,t[n])})),us=xi((function(e,t){gi(t,Ds(t),e)})),ls=xi((function(e,t,n,r){gi(t,Ds(t),e,r)})),ds=xi((function(e,t,n,r){gi(t,xs(t),e,r)})),fs=Zi($n);var ps=Rr((function(e,t){e=he(e);var n=-1,r=t.length,i=r>2?t[2]:void 0;for(i&&sa(t[0],t[1],i)&&(r=1);++n<r;)for(var a=t[n],o=Ds(a),s=-1,c=o.length;++s<c;){var u=o[s],l=e[u];(void 0===l||jo(l,De[u])&&!Ne.call(e,u))&&(e[u]=a[u])}return e})),ms=Rr((function(e){return e.push(void 0,Ui),rt(ws,void 0,e)}));function hs(e,t,n){var r=null==e?void 0:dr(e,t);return void 0===r?n:r}function ys(e,t){return null!=e&&ra(e,t,yr)}var vs=ji((function(e,t,n){null!=t&&\"function\"!=typeof t.toString&&(t=Se.call(t)),e[t]=n}),Hs(Ws)),gs=ji((function(e,t,n){null!=t&&\"function\"!=typeof t.toString&&(t=Se.call(t)),Ne.call(e,t)?e[t].push(n):e[t]=[n]}),Xi),bs=Rr(gr);function xs(e){return Io(e)?Rn(e):Nr(e)}function Ds(e){return Io(e)?Rn(e,!0):Mr(e)}var _s=xi((function(e,t,n){Ar(e,t,n)})),ws=xi((function(e,t,n,r){Ar(e,t,n,r)})),Ns=Zi((function(e,t){var n={};if(null==e)return n;var r=!1;t=dt(t,(function(t){return t=si(t,e),r||(r=t.length>1),t})),gi(e,Wi(e),n),r&&(n=Xn(n,7,Li));for(var i=t.length;i--;)Kr(n,t[i]);return n}));var Ms=Zi((function(e,t){return null==e?{}:function(e,t){return Tr(e,t,(function(t,n){return ys(e,n)}))}(e,t)}));function Os(e,t){if(null==e)return{};var n=dt(Wi(e),(function(e){return[e]}));return t=Xi(t),Tr(e,n,(function(e,n){return t(e,n[0])}))}var Ss=Ri(xs),Ps=Ri(Ds);function js(e){return null==e?[]:jt(e,xs(e))}var As=Ni((function(e,t,n){return t=t.toLowerCase(),e+(n?Es(t):t)}));function Es(e){return qs(ss(e).toLowerCase())}function Cs(e){return(e=ss(e))&&e.replace(se,kt).replace(Ee,\"\")}var Ts=Ni((function(e,t,n){return e+(n?\"-\":\"\")+t.toLowerCase()})),ks=Ni((function(e,t,n){return e+(n?\" \":\"\")+t.toLowerCase()})),Is=wi(\"toLowerCase\");var Bs=Ni((function(e,t,n){return e+(n?\"_\":\"\")+t.toLowerCase()}));var zs=Ni((function(e,t,n){return e+(n?\" \":\"\")+qs(t)}));var Rs=Ni((function(e,t,n){return e+(n?\" \":\"\")+t.toUpperCase()})),qs=wi(\"toUpperCase\");function Fs(e,t,n){return e=ss(e),void 0===(t=n?void 0:t)?function(e){return Ie.test(e)}(e)?function(e){return e.match(Te)||[]}(e):function(e){return e.match(J)||[]}(e):e.match(t)||[]}var Us=Rr((function(e,t){try{return rt(e,void 0,t)}catch(e){return qo(e)?e:new fe(e)}})),Ls=Zi((function(e,t){return at(t,(function(t){t=Ma(t),Gn(e,t,go(e[t],e))})),e}));function Hs(e){return function(){return e}}var Zs=Si(),Vs=Si(!0);function Ws(e){return e}function Gs(e){return wr(\"function\"==typeof e?e:Xn(e,1))}var $s=Rr((function(e,t){return function(n){return gr(n,e,t)}})),Qs=Rr((function(e,t){return function(n){return gr(e,n,t)}}));function Xs(e,t,n){var r=xs(t),i=lr(t,r);null!=n||Ho(t)&&(i.length||!r.length)||(n=t,t=e,e=this,i=lr(t,xs(t)));var a=!(Ho(n)&&\"chain\"in n&&!n.chain),o=Fo(e);return at(i,(function(n){var r=t[n];e[n]=r,o&&(e.prototype[n]=function(){var t=this.__chain__;if(a||t){var n=e(this.__wrapped__),i=n.__actions__=vi(this.__actions__);return i.push({func:r,args:arguments,thisArg:e}),n.__chain__=t,n}return r.apply(e,ft([this.value()],arguments))})})),e}function Ys(){}var Js=Ei(dt),Ks=Ei(st),ec=Ei(ht);function tc(e){return ca(e)?wt(Ma(e)):function(e){return function(t){return dr(t,e)}}(e)}var nc=Ti(),rc=Ti(!0);function ic(){return[]}function ac(){return!1}var oc=Ai((function(e,t){return e+t}),0),sc=Bi(\"ceil\"),cc=Ai((function(e,t){return e/t}),1),uc=Bi(\"floor\");var lc,dc=Ai((function(e,t){return e*t}),1),fc=Bi(\"round\"),pc=Ai((function(e,t){return e-t}),0);return Pn.after=function(e,t){if(\"function\"!=typeof t)throw new ge(r);return e=rs(e),function(){if(--e<1)return t.apply(this,arguments)}},Pn.ary=yo,Pn.assign=cs,Pn.assignIn=us,Pn.assignInWith=ls,Pn.assignWith=ds,Pn.at=fs,Pn.before=vo,Pn.bind=go,Pn.bindAll=Ls,Pn.bindKey=bo,Pn.castArray=function(){if(!arguments.length)return[];var e=arguments[0];return To(e)?e:[e]},Pn.chain=eo,Pn.chunk=function(e,t,n){t=(n?sa(e,t,n):void 0===t)?1:on(rs(t),0);var r=null==e?0:e.length;if(!r||t<1)return[];for(var i=0,a=0,o=le(Jt(r/t));i<r;)o[a++]=Vr(e,i,i+=t);return o},Pn.compact=function(e){for(var t=-1,n=null==e?0:e.length,r=0,i=[];++t<n;){var a=e[t];a&&(i[r++]=a)}return i},Pn.concat=function(){var e=arguments.length;if(!e)return[];for(var t=le(e-1),n=arguments[0],r=e;r--;)t[r-1]=arguments[r];return ft(To(n)?vi(n):[n],ar(t,1))},Pn.cond=function(e){var t=null==e?0:e.length,n=Xi();return e=t?dt(e,(function(e){if(\"function\"!=typeof e[1])throw new ge(r);return[n(e[0]),e[1]]})):[],Rr((function(n){for(var r=-1;++r<t;){var i=e[r];if(rt(i[0],this,n))return rt(i[1],this,n)}}))},Pn.conforms=function(e){return function(e){var t=xs(e);return function(n){return Yn(n,e,t)}}(Xn(e,1))},Pn.constant=Hs,Pn.countBy=ro,Pn.create=function(e,t){var n=jn(e);return null==t?n:Wn(n,t)},Pn.curry=function e(t,n,r){var i=qi(t,8,void 0,void 0,void 0,void 0,void 0,n=r?void 0:n);return i.placeholder=e.placeholder,i},Pn.curryRight=function e(t,n,r){var i=qi(t,16,void 0,void 0,void 0,void 0,void 0,n=r?void 0:n);return i.placeholder=e.placeholder,i},Pn.debounce=xo,Pn.defaults=ps,Pn.defaultsDeep=ms,Pn.defer=Do,Pn.delay=_o,Pn.difference=Pa,Pn.differenceBy=ja,Pn.differenceWith=Aa,Pn.drop=function(e,t,n){var r=null==e?0:e.length;return r?Vr(e,(t=n||void 0===t?1:rs(t))<0?0:t,r):[]},Pn.dropRight=function(e,t,n){var r=null==e?0:e.length;return r?Vr(e,0,(t=r-(t=n||void 0===t?1:rs(t)))<0?0:t):[]},Pn.dropRightWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3),!0,!0):[]},Pn.dropWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3),!0):[]},Pn.fill=function(e,t,n,r){var i=null==e?0:e.length;return i?(n&&\"number\"!=typeof n&&sa(e,t,n)&&(n=0,r=i),function(e,t,n,r){var i=e.length;for((n=rs(n))<0&&(n=-n>i?0:i+n),(r=void 0===r||r>i?i:rs(r))<0&&(r+=i),r=n>r?0:is(r);n<r;)e[n++]=t;return e}(e,t,n,r)):[]},Pn.filter=function(e,t){return(To(e)?ct:ir)(e,Xi(t,3))},Pn.flatMap=function(e,t){return ar(fo(e,t),1)},Pn.flatMapDeep=function(e,t){return ar(fo(e,t),1/0)},Pn.flatMapDepth=function(e,t,n){return n=void 0===n?1:rs(n),ar(fo(e,t),n)},Pn.flatten=Ta,Pn.flattenDeep=function(e){return(null==e?0:e.length)?ar(e,1/0):[]},Pn.flattenDepth=function(e,t){return(null==e?0:e.length)?ar(e,t=void 0===t?1:rs(t)):[]},Pn.flip=function(e){return qi(e,512)},Pn.flow=Zs,Pn.flowRight=Vs,Pn.fromPairs=function(e){for(var t=-1,n=null==e?0:e.length,r={};++t<n;){var i=e[t];r[i[0]]=i[1]}return r},Pn.functions=function(e){return null==e?[]:lr(e,xs(e))},Pn.functionsIn=function(e){return null==e?[]:lr(e,Ds(e))},Pn.groupBy=co,Pn.initial=function(e){return(null==e?0:e.length)?Vr(e,0,-1):[]},Pn.intersection=Ia,Pn.intersectionBy=Ba,Pn.intersectionWith=za,Pn.invert=vs,Pn.invertBy=gs,Pn.invokeMap=uo,Pn.iteratee=Gs,Pn.keyBy=lo,Pn.keys=xs,Pn.keysIn=Ds,Pn.map=fo,Pn.mapKeys=function(e,t){var n={};return t=Xi(t,3),cr(e,(function(e,r,i){Gn(n,t(e,r,i),e)})),n},Pn.mapValues=function(e,t){var n={};return t=Xi(t,3),cr(e,(function(e,r,i){Gn(n,r,t(e,r,i))})),n},Pn.matches=function(e){return Pr(Xn(e,1))},Pn.matchesProperty=function(e,t){return jr(e,Xn(t,1))},Pn.memoize=wo,Pn.merge=_s,Pn.mergeWith=ws,Pn.method=$s,Pn.methodOf=Qs,Pn.mixin=Xs,Pn.negate=No,Pn.nthArg=function(e){return e=rs(e),Rr((function(t){return Er(t,e)}))},Pn.omit=Ns,Pn.omitBy=function(e,t){return Os(e,No(Xi(t)))},Pn.once=function(e){return vo(2,e)},Pn.orderBy=function(e,t,n,r){return null==e?[]:(To(t)||(t=null==t?[]:[t]),To(n=r?void 0:n)||(n=null==n?[]:[n]),Cr(e,t,n))},Pn.over=Js,Pn.overArgs=Mo,Pn.overEvery=Ks,Pn.overSome=ec,Pn.partial=Oo,Pn.partialRight=So,Pn.partition=po,Pn.pick=Ms,Pn.pickBy=Os,Pn.property=tc,Pn.propertyOf=function(e){return function(t){return null==e?void 0:dr(e,t)}},Pn.pull=qa,Pn.pullAll=Fa,Pn.pullAllBy=function(e,t,n){return e&&e.length&&t&&t.length?kr(e,t,Xi(n,2)):e},Pn.pullAllWith=function(e,t,n){return e&&e.length&&t&&t.length?kr(e,t,void 0,n):e},Pn.pullAt=Ua,Pn.range=nc,Pn.rangeRight=rc,Pn.rearg=Po,Pn.reject=function(e,t){return(To(e)?ct:ir)(e,No(Xi(t,3)))},Pn.remove=function(e,t){var n=[];if(!e||!e.length)return n;var r=-1,i=[],a=e.length;for(t=Xi(t,3);++r<a;){var o=e[r];t(o,r,e)&&(n.push(o),i.push(r))}return Ir(e,i),n},Pn.rest=function(e,t){if(\"function\"!=typeof e)throw new ge(r);return Rr(e,t=void 0===t?t:rs(t))},Pn.reverse=La,Pn.sampleSize=function(e,t,n){return t=(n?sa(e,t,n):void 0===t)?1:rs(t),(To(e)?Fn:Fr)(e,t)},Pn.set=function(e,t,n){return null==e?e:Ur(e,t,n)},Pn.setWith=function(e,t,n,r){return r=\"function\"==typeof r?r:void 0,null==e?e:Ur(e,t,n,r)},Pn.shuffle=function(e){return(To(e)?Un:Zr)(e)},Pn.slice=function(e,t,n){var r=null==e?0:e.length;return r?(n&&\"number\"!=typeof n&&sa(e,t,n)?(t=0,n=r):(t=null==t?0:rs(t),n=void 0===n?r:rs(n)),Vr(e,t,n)):[]},Pn.sortBy=mo,Pn.sortedUniq=function(e){return e&&e.length?Qr(e):[]},Pn.sortedUniqBy=function(e,t){return e&&e.length?Qr(e,Xi(t,2)):[]},Pn.split=function(e,t,n){return n&&\"number\"!=typeof n&&sa(e,t,n)&&(t=n=void 0),(n=void 0===n?4294967295:n>>>0)?(e=ss(e))&&(\"string\"==typeof t||null!=t&&!$o(t))&&!(t=Yr(t))&&zt(e)?ui(Zt(e),0,n):e.split(t,n):[]},Pn.spread=function(e,t){if(\"function\"!=typeof e)throw new ge(r);return t=null==t?0:on(rs(t),0),Rr((function(n){var r=n[t],i=ui(n,0,t);return r&&ft(i,r),rt(e,this,i)}))},Pn.tail=function(e){var t=null==e?0:e.length;return t?Vr(e,1,t):[]},Pn.take=function(e,t,n){return e&&e.length?Vr(e,0,(t=n||void 0===t?1:rs(t))<0?0:t):[]},Pn.takeRight=function(e,t,n){var r=null==e?0:e.length;return r?Vr(e,(t=r-(t=n||void 0===t?1:rs(t)))<0?0:t,r):[]},Pn.takeRightWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3),!1,!0):[]},Pn.takeWhile=function(e,t){return e&&e.length?ti(e,Xi(t,3)):[]},Pn.tap=function(e,t){return t(e),e},Pn.throttle=function(e,t,n){var i=!0,a=!0;if(\"function\"!=typeof e)throw new ge(r);return Ho(n)&&(i=\"leading\"in n?!!n.leading:i,a=\"trailing\"in n?!!n.trailing:a),xo(e,t,{leading:i,maxWait:t,trailing:a})},Pn.thru=to,Pn.toArray=ts,Pn.toPairs=Ss,Pn.toPairsIn=Ps,Pn.toPath=function(e){return To(e)?dt(e,Ma):Yo(e)?[e]:vi(Na(ss(e)))},Pn.toPlainObject=os,Pn.transform=function(e,t,n){var r=To(e),i=r||zo(e)||Jo(e);if(t=Xi(t,4),null==n){var a=e&&e.constructor;n=i?r?new a:[]:Ho(e)&&Fo(a)?jn(We(e)):{}}return(i?at:cr)(e,(function(e,r,i){return t(n,e,r,i)})),n},Pn.unary=function(e){return yo(e,1)},Pn.union=Ha,Pn.unionBy=Za,Pn.unionWith=Va,Pn.uniq=function(e){return e&&e.length?Jr(e):[]},Pn.uniqBy=function(e,t){return e&&e.length?Jr(e,Xi(t,2)):[]},Pn.uniqWith=function(e,t){return t=\"function\"==typeof t?t:void 0,e&&e.length?Jr(e,void 0,t):[]},Pn.unset=function(e,t){return null==e||Kr(e,t)},Pn.unzip=Wa,Pn.unzipWith=Ga,Pn.update=function(e,t,n){return null==e?e:ei(e,t,oi(n))},Pn.updateWith=function(e,t,n,r){return r=\"function\"==typeof r?r:void 0,null==e?e:ei(e,t,oi(n),r)},Pn.values=js,Pn.valuesIn=function(e){return null==e?[]:jt(e,Ds(e))},Pn.without=$a,Pn.words=Fs,Pn.wrap=function(e,t){return Oo(oi(t),e)},Pn.xor=Qa,Pn.xorBy=Xa,Pn.xorWith=Ya,Pn.zip=Ja,Pn.zipObject=function(e,t){return ii(e||[],t||[],Hn)},Pn.zipObjectDeep=function(e,t){return ii(e||[],t||[],Ur)},Pn.zipWith=Ka,Pn.entries=Ss,Pn.entriesIn=Ps,Pn.extend=us,Pn.extendWith=ls,Xs(Pn,Pn),Pn.add=oc,Pn.attempt=Us,Pn.camelCase=As,Pn.capitalize=Es,Pn.ceil=sc,Pn.clamp=function(e,t,n){return void 0===n&&(n=t,t=void 0),void 0!==n&&(n=(n=as(n))==n?n:0),void 0!==t&&(t=(t=as(t))==t?t:0),Qn(as(e),t,n)},Pn.clone=function(e){return Xn(e,4)},Pn.cloneDeep=function(e){return Xn(e,5)},Pn.cloneDeepWith=function(e,t){return Xn(e,5,t=\"function\"==typeof t?t:void 0)},Pn.cloneWith=function(e,t){return Xn(e,4,t=\"function\"==typeof t?t:void 0)},Pn.conformsTo=function(e,t){return null==t||Yn(e,t,xs(t))},Pn.deburr=Cs,Pn.defaultTo=function(e,t){return null==e||e!=e?t:e},Pn.divide=cc,Pn.endsWith=function(e,t,n){e=ss(e),t=Yr(t);var r=e.length,i=n=void 0===n?r:Qn(rs(n),0,r);return(n-=t.length)>=0&&e.slice(n,i)==t},Pn.eq=jo,Pn.escape=function(e){return(e=ss(e))&&z.test(e)?e.replace(I,It):e},Pn.escapeRegExp=function(e){return(e=ss(e))&&V.test(e)?e.replace(Z,\"\\\\$&\"):e},Pn.every=function(e,t,n){var r=To(e)?st:nr;return n&&sa(e,t,n)&&(t=void 0),r(e,Xi(t,3))},Pn.find=io,Pn.findIndex=Ea,Pn.findKey=function(e,t){return vt(e,Xi(t,3),cr)},Pn.findLast=ao,Pn.findLastIndex=Ca,Pn.findLastKey=function(e,t){return vt(e,Xi(t,3),ur)},Pn.floor=uc,Pn.forEach=oo,Pn.forEachRight=so,Pn.forIn=function(e,t){return null==e?e:or(e,Xi(t,3),Ds)},Pn.forInRight=function(e,t){return null==e?e:sr(e,Xi(t,3),Ds)},Pn.forOwn=function(e,t){return e&&cr(e,Xi(t,3))},Pn.forOwnRight=function(e,t){return e&&ur(e,Xi(t,3))},Pn.get=hs,Pn.gt=Ao,Pn.gte=Eo,Pn.has=function(e,t){return null!=e&&ra(e,t,hr)},Pn.hasIn=ys,Pn.head=ka,Pn.identity=Ws,Pn.includes=function(e,t,n,r){e=Io(e)?e:js(e),n=n&&!r?rs(n):0;var i=e.length;return n<0&&(n=on(i+n,0)),Xo(e)?n<=i&&e.indexOf(t,n)>-1:!!i&&bt(e,t,n)>-1},Pn.indexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=null==n?0:rs(n);return i<0&&(i=on(r+i,0)),bt(e,t,i)},Pn.inRange=function(e,t,n){return t=ns(t),void 0===n?(n=t,t=0):n=ns(n),function(e,t,n){return e>=sn(t,n)&&e<on(t,n)}(e=as(e),t,n)},Pn.invoke=bs,Pn.isArguments=Co,Pn.isArray=To,Pn.isArrayBuffer=ko,Pn.isArrayLike=Io,Pn.isArrayLikeObject=Bo,Pn.isBoolean=function(e){return!0===e||!1===e||Zo(e)&&pr(e)==c},Pn.isBuffer=zo,Pn.isDate=Ro,Pn.isElement=function(e){return Zo(e)&&1===e.nodeType&&!Go(e)},Pn.isEmpty=function(e){if(null==e)return!0;if(Io(e)&&(To(e)||\"string\"==typeof e||\"function\"==typeof e.splice||zo(e)||Jo(e)||Co(e)))return!e.length;var t=na(e);if(t==p||t==v)return!e.size;if(da(e))return!Nr(e).length;for(var n in e)if(Ne.call(e,n))return!1;return!0},Pn.isEqual=function(e,t){return xr(e,t)},Pn.isEqualWith=function(e,t,n){var r=(n=\"function\"==typeof n?n:void 0)?n(e,t):void 0;return void 0===r?xr(e,t,void 0,n):!!r},Pn.isError=qo,Pn.isFinite=function(e){return\"number\"==typeof e&&nn(e)},Pn.isFunction=Fo,Pn.isInteger=Uo,Pn.isLength=Lo,Pn.isMap=Vo,Pn.isMatch=function(e,t){return e===t||Dr(e,t,Ji(t))},Pn.isMatchWith=function(e,t,n){return n=\"function\"==typeof n?n:void 0,Dr(e,t,Ji(t),n)},Pn.isNaN=function(e){return Wo(e)&&e!=+e},Pn.isNative=function(e){if(la(e))throw new fe(\"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\");return _r(e)},Pn.isNil=function(e){return null==e},Pn.isNull=function(e){return null===e},Pn.isNumber=Wo,Pn.isObject=Ho,Pn.isObjectLike=Zo,Pn.isPlainObject=Go,Pn.isRegExp=$o,Pn.isSafeInteger=function(e){return Uo(e)&&e>=-9007199254740991&&e<=9007199254740991},Pn.isSet=Qo,Pn.isString=Xo,Pn.isSymbol=Yo,Pn.isTypedArray=Jo,Pn.isUndefined=function(e){return void 0===e},Pn.isWeakMap=function(e){return Zo(e)&&na(e)==x},Pn.isWeakSet=function(e){return Zo(e)&&\"[object WeakSet]\"==pr(e)},Pn.join=function(e,t){return null==e?\"\":rn.call(e,t)},Pn.kebabCase=Ts,Pn.last=Ra,Pn.lastIndexOf=function(e,t,n){var r=null==e?0:e.length;if(!r)return-1;var i=r;return void 0!==n&&(i=(i=rs(n))<0?on(r+i,0):sn(i,r-1)),t==t?function(e,t,n){for(var r=n+1;r--;)if(e[r]===t)return r;return r}(e,t,i):gt(e,Dt,i,!0)},Pn.lowerCase=ks,Pn.lowerFirst=Is,Pn.lt=Ko,Pn.lte=es,Pn.max=function(e){return e&&e.length?rr(e,Ws,mr):void 0},Pn.maxBy=function(e,t){return e&&e.length?rr(e,Xi(t,2),mr):void 0},Pn.mean=function(e){return _t(e,Ws)},Pn.meanBy=function(e,t){return _t(e,Xi(t,2))},Pn.min=function(e){return e&&e.length?rr(e,Ws,Or):void 0},Pn.minBy=function(e,t){return e&&e.length?rr(e,Xi(t,2),Or):void 0},Pn.stubArray=ic,Pn.stubFalse=ac,Pn.stubObject=function(){return{}},Pn.stubString=function(){return\"\"},Pn.stubTrue=function(){return!0},Pn.multiply=dc,Pn.nth=function(e,t){return e&&e.length?Er(e,rs(t)):void 0},Pn.noConflict=function(){return Ve._===this&&(Ve._=je),this},Pn.noop=Ys,Pn.now=ho,Pn.pad=function(e,t,n){e=ss(e);var r=(t=rs(t))?Ht(e):0;if(!t||r>=t)return e;var i=(t-r)/2;return Ci(Kt(i),n)+e+Ci(Jt(i),n)},Pn.padEnd=function(e,t,n){e=ss(e);var r=(t=rs(t))?Ht(e):0;return t&&r<t?e+Ci(t-r,n):e},Pn.padStart=function(e,t,n){e=ss(e);var r=(t=rs(t))?Ht(e):0;return t&&r<t?Ci(t-r,n)+e:e},Pn.parseInt=function(e,t,n){return n||null==t?t=0:t&&(t=+t),un(ss(e).replace(G,\"\"),t||0)},Pn.random=function(e,t,n){if(n&&\"boolean\"!=typeof n&&sa(e,t,n)&&(t=n=void 0),void 0===n&&(\"boolean\"==typeof t?(n=t,t=void 0):\"boolean\"==typeof e&&(n=e,e=void 0)),void 0===e&&void 0===t?(e=0,t=1):(e=ns(e),void 0===t?(t=e,e=0):t=ns(t)),e>t){var r=e;e=t,t=r}if(n||e%1||t%1){var i=ln();return sn(e+i*(t-e+Ue(\"1e-\"+((i+\"\").length-1))),t)}return Br(e,t)},Pn.reduce=function(e,t,n){var r=To(e)?pt:Mt,i=arguments.length<3;return r(e,Xi(t,4),n,i,er)},Pn.reduceRight=function(e,t,n){var r=To(e)?mt:Mt,i=arguments.length<3;return r(e,Xi(t,4),n,i,tr)},Pn.repeat=function(e,t,n){return t=(n?sa(e,t,n):void 0===t)?1:rs(t),zr(ss(e),t)},Pn.replace=function(){var e=arguments,t=ss(e[0]);return e.length<3?t:t.replace(e[1],e[2])},Pn.result=function(e,t,n){var r=-1,i=(t=si(t,e)).length;for(i||(i=1,e=void 0);++r<i;){var a=null==e?void 0:e[Ma(t[r])];void 0===a&&(r=i,a=n),e=Fo(a)?a.call(e):a}return e},Pn.round=fc,Pn.runInContext=e,Pn.sample=function(e){return(To(e)?qn:qr)(e)},Pn.size=function(e){if(null==e)return 0;if(Io(e))return Xo(e)?Ht(e):e.length;var t=na(e);return t==p||t==v?e.size:Nr(e).length},Pn.snakeCase=Bs,Pn.some=function(e,t,n){var r=To(e)?ht:Wr;return n&&sa(e,t,n)&&(t=void 0),r(e,Xi(t,3))},Pn.sortedIndex=function(e,t){return Gr(e,t)},Pn.sortedIndexBy=function(e,t,n){return $r(e,t,Xi(n,2))},Pn.sortedIndexOf=function(e,t){var n=null==e?0:e.length;if(n){var r=Gr(e,t);if(r<n&&jo(e[r],t))return r}return-1},Pn.sortedLastIndex=function(e,t){return Gr(e,t,!0)},Pn.sortedLastIndexBy=function(e,t,n){return $r(e,t,Xi(n,2),!0)},Pn.sortedLastIndexOf=function(e,t){if(null==e?0:e.length){var n=Gr(e,t,!0)-1;if(jo(e[n],t))return n}return-1},Pn.startCase=zs,Pn.startsWith=function(e,t,n){return e=ss(e),n=null==n?0:Qn(rs(n),0,e.length),t=Yr(t),e.slice(n,n+t.length)==t},Pn.subtract=pc,Pn.sum=function(e){return e&&e.length?Ot(e,Ws):0},Pn.sumBy=function(e,t){return e&&e.length?Ot(e,Xi(t,2)):0},Pn.template=function(e,t,n){var r=Pn.templateSettings;n&&sa(e,t,n)&&(t=void 0),e=ss(e),t=ls({},t,r,Fi);var i,a,o=ls({},t.imports,r.imports,Fi),s=xs(o),c=jt(o,s),u=0,l=t.interpolate||ce,d=\"__p += '\",f=ye((t.escape||ce).source+\"|\"+l.source+\"|\"+(l===F?ee:ce).source+\"|\"+(t.evaluate||ce).source+\"|$\",\"g\"),p=\"//# sourceURL=\"+(Ne.call(t,\"sourceURL\")?(t.sourceURL+\"\").replace(/\\s/g,\" \"):\"lodash.templateSources[\"+ ++ze+\"]\")+\"\\n\";e.replace(f,(function(t,n,r,o,s,c){return r||(r=o),d+=e.slice(u,c).replace(ue,Bt),n&&(i=!0,d+=\"' +\\n__e(\"+n+\") +\\n'\"),s&&(a=!0,d+=\"';\\n\"+s+\";\\n__p += '\"),r&&(d+=\"' +\\n((__t = (\"+r+\")) == null ? '' : __t) +\\n'\"),u=c+t.length,t})),d+=\"';\\n\";var m=Ne.call(t,\"variable\")&&t.variable;m||(d=\"with (obj) {\\n\"+d+\"\\n}\\n\"),d=(a?d.replace(E,\"\"):d).replace(C,\"$1\").replace(T,\"$1;\"),d=\"function(\"+(m||\"obj\")+\") {\\n\"+(m?\"\":\"obj || (obj = {});\\n\")+\"var __t, __p = ''\"+(i?\", __e = _.escape\":\"\")+(a?\", __j = Array.prototype.join;\\nfunction print() { __p += __j.call(arguments, '') }\\n\":\";\\n\")+d+\"return __p\\n}\";var h=Us((function(){return pe(s,p+\"return \"+d).apply(void 0,c)}));if(h.source=d,qo(h))throw h;return h},Pn.times=function(e,t){if((e=rs(e))<1||e>9007199254740991)return[];var n=4294967295,r=sn(e,4294967295);e-=4294967295;for(var i=St(r,t=Xi(t));++n<e;)t(n);return i},Pn.toFinite=ns,Pn.toInteger=rs,Pn.toLength=is,Pn.toLower=function(e){return ss(e).toLowerCase()},Pn.toNumber=as,Pn.toSafeInteger=function(e){return e?Qn(rs(e),-9007199254740991,9007199254740991):0===e?e:0},Pn.toString=ss,Pn.toUpper=function(e){return ss(e).toUpperCase()},Pn.trim=function(e,t,n){if((e=ss(e))&&(n||void 0===t))return e.replace(W,\"\");if(!e||!(t=Yr(t)))return e;var r=Zt(e),i=Zt(t);return ui(r,Et(r,i),Ct(r,i)+1).join(\"\")},Pn.trimEnd=function(e,t,n){if((e=ss(e))&&(n||void 0===t))return e.replace($,\"\");if(!e||!(t=Yr(t)))return e;var r=Zt(e);return ui(r,0,Ct(r,Zt(t))+1).join(\"\")},Pn.trimStart=function(e,t,n){if((e=ss(e))&&(n||void 0===t))return e.replace(G,\"\");if(!e||!(t=Yr(t)))return e;var r=Zt(e);return ui(r,Et(r,Zt(t))).join(\"\")},Pn.truncate=function(e,t){var n=30,r=\"...\";if(Ho(t)){var i=\"separator\"in t?t.separator:i;n=\"length\"in t?rs(t.length):n,r=\"omission\"in t?Yr(t.omission):r}var a=(e=ss(e)).length;if(zt(e)){var o=Zt(e);a=o.length}if(n>=a)return e;var s=n-Ht(r);if(s<1)return r;var c=o?ui(o,0,s).join(\"\"):e.slice(0,s);if(void 0===i)return c+r;if(o&&(s+=c.length-s),$o(i)){if(e.slice(s).search(i)){var u,l=c;for(i.global||(i=ye(i.source,ss(te.exec(i))+\"g\")),i.lastIndex=0;u=i.exec(l);)var d=u.index;c=c.slice(0,void 0===d?s:d)}}else if(e.indexOf(Yr(i),s)!=s){var f=c.lastIndexOf(i);f>-1&&(c=c.slice(0,f))}return c+r},Pn.unescape=function(e){return(e=ss(e))&&B.test(e)?e.replace(k,Vt):e},Pn.uniqueId=function(e){var t=++Me;return ss(e)+t},Pn.upperCase=Rs,Pn.upperFirst=qs,Pn.each=oo,Pn.eachRight=so,Pn.first=ka,Xs(Pn,(lc={},cr(Pn,(function(e,t){Ne.call(Pn.prototype,t)||(lc[t]=e)})),lc),{chain:!1}),Pn.VERSION=\"4.17.20\",at([\"bind\",\"bindKey\",\"curry\",\"curryRight\",\"partial\",\"partialRight\"],(function(e){Pn[e].placeholder=Pn})),at([\"drop\",\"take\"],(function(e,t){Cn.prototype[e]=function(n){n=void 0===n?1:on(rs(n),0);var r=this.__filtered__&&!t?new Cn(this):this.clone();return r.__filtered__?r.__takeCount__=sn(n,r.__takeCount__):r.__views__.push({size:sn(n,4294967295),type:e+(r.__dir__<0?\"Right\":\"\")}),r},Cn.prototype[e+\"Right\"]=function(t){return this.reverse()[e](t).reverse()}})),at([\"filter\",\"map\",\"takeWhile\"],(function(e,t){var n=t+1,r=1==n||3==n;Cn.prototype[e]=function(e){var t=this.clone();return t.__iteratees__.push({iteratee:Xi(e,3),type:n}),t.__filtered__=t.__filtered__||r,t}})),at([\"head\",\"last\"],(function(e,t){var n=\"take\"+(t?\"Right\":\"\");Cn.prototype[e]=function(){return this[n](1).value()[0]}})),at([\"initial\",\"tail\"],(function(e,t){var n=\"drop\"+(t?\"\":\"Right\");Cn.prototype[e]=function(){return this.__filtered__?new Cn(this):this[n](1)}})),Cn.prototype.compact=function(){return this.filter(Ws)},Cn.prototype.find=function(e){return this.filter(e).head()},Cn.prototype.findLast=function(e){return this.reverse().find(e)},Cn.prototype.invokeMap=Rr((function(e,t){return\"function\"==typeof e?new Cn(this):this.map((function(n){return gr(n,e,t)}))})),Cn.prototype.reject=function(e){return this.filter(No(Xi(e)))},Cn.prototype.slice=function(e,t){e=rs(e);var n=this;return n.__filtered__&&(e>0||t<0)?new Cn(n):(e<0?n=n.takeRight(-e):e&&(n=n.drop(e)),void 0!==t&&(n=(t=rs(t))<0?n.dropRight(-t):n.take(t-e)),n)},Cn.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Cn.prototype.toArray=function(){return this.take(4294967295)},cr(Cn.prototype,(function(e,t){var n=/^(?:filter|find|map|reject)|While$/.test(t),r=/^(?:head|last)$/.test(t),i=Pn[r?\"take\"+(\"last\"==t?\"Right\":\"\"):t],a=r||/^find/.test(t);i&&(Pn.prototype[t]=function(){var t=this.__wrapped__,o=r?[1]:arguments,s=t instanceof Cn,c=o[0],u=s||To(t),l=function(e){var t=i.apply(Pn,ft([e],o));return r&&d?t[0]:t};u&&n&&\"function\"==typeof c&&1!=c.length&&(s=u=!1);var d=this.__chain__,f=!!this.__actions__.length,p=a&&!d,m=s&&!f;if(!a&&u){t=m?t:new Cn(this);var h=e.apply(t,o);return h.__actions__.push({func:to,args:[l],thisArg:void 0}),new En(h,d)}return p&&m?e.apply(this,o):(h=this.thru(l),p?r?h.value()[0]:h.value():h)})})),at([\"pop\",\"push\",\"shift\",\"sort\",\"splice\",\"unshift\"],(function(e){var t=be[e],n=/^(?:push|sort|unshift)$/.test(e)?\"tap\":\"thru\",r=/^(?:pop|shift)$/.test(e);Pn.prototype[e]=function(){var e=arguments;if(r&&!this.__chain__){var i=this.value();return t.apply(To(i)?i:[],e)}return this[n]((function(n){return t.apply(To(n)?n:[],e)}))}})),cr(Cn.prototype,(function(e,t){var n=Pn[t];if(n){var r=n.name+\"\";Ne.call(bn,r)||(bn[r]=[]),bn[r].push({name:t,func:n})}})),bn[Pi(void 0,2).name]=[{name:\"wrapper\",func:void 0}],Cn.prototype.clone=function(){var e=new Cn(this.__wrapped__);return e.__actions__=vi(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=vi(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=vi(this.__views__),e},Cn.prototype.reverse=function(){if(this.__filtered__){var e=new Cn(this);e.__dir__=-1,e.__filtered__=!0}else(e=this.clone()).__dir__*=-1;return e},Cn.prototype.value=function(){var e=this.__wrapped__.value(),t=this.__dir__,n=To(e),r=t<0,i=n?e.length:0,a=function(e,t,n){var r=-1,i=n.length;for(;++r<i;){var a=n[r],o=a.size;switch(a.type){case\"drop\":e+=o;break;case\"dropRight\":t-=o;break;case\"take\":t=sn(t,e+o);break;case\"takeRight\":e=on(e,t-o)}}return{start:e,end:t}}(0,i,this.__views__),o=a.start,s=a.end,c=s-o,u=r?s:o-1,l=this.__iteratees__,d=l.length,f=0,p=sn(c,this.__takeCount__);if(!n||!r&&i==c&&p==c)return ni(e,this.__actions__);var m=[];e:for(;c--&&f<p;){for(var h=-1,y=e[u+=t];++h<d;){var v=l[h],g=v.iteratee,b=v.type,x=g(y);if(2==b)y=x;else if(!x){if(1==b)continue e;break e}}m[f++]=y}return m},Pn.prototype.at=no,Pn.prototype.chain=function(){return eo(this)},Pn.prototype.commit=function(){return new En(this.value(),this.__chain__)},Pn.prototype.next=function(){void 0===this.__values__&&(this.__values__=ts(this.value()));var e=this.__index__>=this.__values__.length;return{done:e,value:e?void 0:this.__values__[this.__index__++]}},Pn.prototype.plant=function(e){for(var t,n=this;n instanceof An;){var r=Sa(n);r.__index__=0,r.__values__=void 0,t?i.__wrapped__=r:t=r;var i=r;n=n.__wrapped__}return i.__wrapped__=e,t},Pn.prototype.reverse=function(){var e=this.__wrapped__;if(e instanceof Cn){var t=e;return this.__actions__.length&&(t=new Cn(this)),(t=t.reverse()).__actions__.push({func:to,args:[La],thisArg:void 0}),new En(t,this.__chain__)}return this.thru(La)},Pn.prototype.toJSON=Pn.prototype.valueOf=Pn.prototype.value=function(){return ni(this.__wrapped__,this.__actions__)},Pn.prototype.first=Pn.prototype.head,Nt&&(Pn.prototype[Nt]=function(){return this}),Pn}();Ge?((Ge.exports=Wt)._=Wt,We._=Wt):Ve._=Wt}).call(e)}));const iy=(e,t,n)=>{const r=Math.sqrt(e**2+t**2+n**2);if(0==r)return[0,0,0];return[ry.round(e/r,10),ry.round(t/r,10),ry.round(n/r,10)]},ay=(e,t,n,r,i,a)=>{e%=2*Math.PI,t%=2*Math.PI,n%=2*Math.PI,e=e<0?2*Math.PI+e:e,t=t<0?2*Math.PI+t:t,n=n<0?2*Math.PI+n:n;const o=ny.multiply(ny.multiply([[1,0,0],[0,Math.cos(e),-Math.sin(e)],[0,Math.sin(e),Math.cos(e)]],[[Math.cos(t),0,Math.sin(t)],[0,1,0],[-Math.sin(t),0,Math.cos(t)]]),[[Math.cos(n),-Math.sin(n),0],[Math.sin(n),Math.cos(n),0],[0,0,1]]);let s=ny.multiply(o,[r,i,a]);return s=s.map(e=>ry.round(e,10)),s},oy=(e,t,n,r,i,a,o,s,c)=>{const u=r-e,l=i-t,d=a-n,f=o-e,p=s-t,m=c-n,h=l*m-p*d,y=f*d-u*m,v=u*p-l*f;return{a:h,b:y,c:v,d:-(h*e+y*t+v*n)}},sy=(e,t,n,r)=>{const i={X:!0,Y:!0,Z:!0};if(0==e.a&&(i.X=!1),0==e.b&&(i.Y=!1),0==e.c&&(i.Z=!1),!i.X&&i.Y&&i.Z){return r==-e.b/e.c*n+e.d/e.c}if(i.X&&!i.Y&&i.Z){return r==-e.c/e.a*n+e.d/e.a}if(i.X&&i.Y&&!i.Z){return n==-e.a/e.b*t-e.d/e.b}return!i.X||i.Y||i.Z?i.X||!i.Y||i.Z?i.X||i.Y||!i.Z?e.a*t+e.b*n+e.c*r+e.d==0:r==-e.d/e.c:n==-e.d/e.b:t==-e.d/e.a},cy=e=>{const t=[];for(let n=0;n<e.length;n+=9){const r=oy(e[n],e[n+1],e[n+2],e[n+3],e[n+4],e[n+5],e[n+6],e[n+7],e[n+8]),[i,a,o]=iy(r.a,r.b,r.c);t.push(i,a,o)}return t},uy=e=>{if(e.vectors.length%3!=0)throw new Error(\"[Indice Utility] The provided vector array has an invalid length (Deindex)!\");const t=[];for(let n=0;n<e.indices.length;n++){const r=3*e.indices[n];t.push(e.vectors[r],e.vectors[r+1],e.vectors[r+2])}return t},ly=e=>{if(e.length%3!=0)throw new Error(\"[Indice Utility] The provided array has an invalid length (Index)!\");const t=[],n=[];for(let r=0;r<e.length;r+=3){let i=-1;for(let t=0;t<n.length;t+=3)if(e[r]==n[t]&&e[r+1]==n[t+1]&&e[r+2]==n[t+2]){i=t;break}-1==i?(n.push(e[r],e[r+1],e[r+2]),t.push((n.length-3)/3)):t.push(i/3)}return{indices:t,vectors:n}};var dy,fy=\"object\"==typeof Reflect?Reflect:null,py=fy&&\"function\"==typeof fy.apply?fy.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)};dy=fy&&\"function\"==typeof fy.ownKeys?fy.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var my=Number.isNaN||function(e){return e!=e};function hy(){hy.init.call(this)}var yy=hy,vy=function(e,t){return new Promise((function(n,r){function i(){void 0!==a&&e.removeListener(\"error\",a),n([].slice.call(arguments))}var a;\"error\"!==t&&(a=function(n){e.removeListener(t,i),r(n)},e.once(\"error\",a)),e.once(t,i)}))};hy.EventEmitter=hy,hy.prototype._events=void 0,hy.prototype._eventsCount=0,hy.prototype._maxListeners=void 0;var gy=10;function by(e){if(\"function\"!=typeof e)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e)}function xy(e){return void 0===e._maxListeners?hy.defaultMaxListeners:e._maxListeners}function Dy(e,t,n,r){var i,a,o,s;if(by(n),void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit(\"newListener\",t,n.listener?n.listener:n),a=e._events),o=a[t]),void 0===o)o=a[t]=n,++e._eventsCount;else if(\"function\"==typeof o?o=a[t]=r?[n,o]:[o,n]:r?o.unshift(n):o.push(n),(i=xy(e))>0&&o.length>i&&!o.warned){o.warned=!0;var c=new Error(\"Possible EventEmitter memory leak detected. \"+o.length+\" \"+String(t)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");c.name=\"MaxListenersExceededWarning\",c.emitter=e,c.type=t,c.count=o.length,s=c,console&&console.warn&&console.warn(s)}return e}function _y(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function wy(e,t,n){var r={fired:!1,wrapFn:void 0,target:e,type:t,listener:n},i=_y.bind(r);return i.listener=n,r.wrapFn=i,i}function Ny(e,t,n){var r=e._events;if(void 0===r)return[];var i=r[t];return void 0===i?[]:\"function\"==typeof i?n?[i.listener||i]:[i]:n?function(e){for(var t=new Array(e.length),n=0;n<t.length;++n)t[n]=e[n].listener||e[n];return t}(i):Oy(i,i.length)}function My(e){var t=this._events;if(void 0!==t){var n=t[e];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function Oy(e,t){for(var n=new Array(t),r=0;r<t;++r)n[r]=e[r];return n}Object.defineProperty(hy,\"defaultMaxListeners\",{enumerable:!0,get:function(){return gy},set:function(e){if(\"number\"!=typeof e||e<0||my(e))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+e+\".\");gy=e}}),hy.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},hy.prototype.setMaxListeners=function(e){if(\"number\"!=typeof e||e<0||my(e))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=e,this},hy.prototype.getMaxListeners=function(){return xy(this)},hy.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=\"error\"===e,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var o=new Error(\"Unhandled error.\"+(a?\" (\"+a.message+\")\":\"\"));throw o.context=a,o}var s=i[e];if(void 0===s)return!1;if(\"function\"==typeof s)py(s,this,t);else{var c=s.length,u=Oy(s,c);for(n=0;n<c;++n)py(u[n],this,t)}return!0},hy.prototype.addListener=function(e,t){return Dy(this,e,t,!1)},hy.prototype.on=hy.prototype.addListener,hy.prototype.prependListener=function(e,t){return Dy(this,e,t,!0)},hy.prototype.once=function(e,t){return by(t),this.on(e,wy(this,e,t)),this},hy.prototype.prependOnceListener=function(e,t){return by(t),this.prependListener(e,wy(this,e,t)),this},hy.prototype.removeListener=function(e,t){var n,r,i,a,o;if(by(t),void 0===(r=this._events))return this;if(void 0===(n=r[e]))return this;if(n===t||n.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit(\"removeListener\",e,n.listener||t));else if(\"function\"!=typeof n){for(i=-1,a=n.length-1;a>=0;a--)if(n[a]===t||n[a].listener===t){o=n[a].listener,i=a;break}if(i<0)return this;0===i?n.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(n,i),1===n.length&&(r[e]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",e,o||t)}return this},hy.prototype.off=hy.prototype.removeListener,hy.prototype.removeAllListeners=function(e){var t,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[e]),this;if(0===arguments.length){var i,a=Object.keys(n);for(r=0;r<a.length;++r)\"removeListener\"!==(i=a[r])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(t=n[e]))this.removeListener(e,t);else if(void 0!==t)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this},hy.prototype.listeners=function(e){return Ny(this,e,!0)},hy.prototype.rawListeners=function(e){return Ny(this,e,!1)},hy.listenerCount=function(e,t){return\"function\"==typeof e.listenerCount?e.listenerCount(t):My.call(e,t)},hy.prototype.listenerCount=My,hy.prototype.eventNames=function(){return this._eventsCount>0?dy(this._events):[]},yy.once=vy;const Sy={_3MF:{name:\"3D Manufacturing Format\",extensions:[\"3mf\"],mimes:[\"model/3mf\"]},AMF:{name:\"Additive Manufacturing Format\",extensions:[\"amf\"],mimes:[\"application/x-amf\"]},OBJ:{name:\"Wavefront OBJ Format\",extensions:[\"obj\"],mimes:[\"text/plain\"]},PLY:{name:\"Stanford Triangle Format\",extensions:[\"ply\"],mimes:[\"application/x-ply\"]},STL:{name:\"Stereolithography Format\",extensions:[\"stl\"],mimes:[\"model/stl\",\"model/x.stl-ascii\",\"model/x.stl-binary\"]}},Py=(e,t,n)=>{if(t.flags.includes(\"g\"))throw new Error('[Regex Utility] The passed regular expression is not local! (Try \"extractGlobal\" instead)');{const r=e.match(t);if(null==r&&null!=n)throw n;return null!=r?(r.shift(),Array.from(r)):[]}},jy=(e,t,n)=>{if(t.flags.includes(\"g\")){const r=Array.from(e.matchAll(t)||[]);if(0==r.length&&null!=n)throw n;if(r.length>0){const e=[];return r.forEach(t=>{e.push(t.slice(1))}),e}return[[]]}throw new Error('[Regex Utility] The passed regular expression is not global! (Try \"extractLocal\" instead)')},Ay=e=>{const t=e=>{const n={};if(Object.keys(e).length>0)for(const[r,i]of Object.entries(e))if(\"metadata\"==r)if(i instanceof Array)for(const e of i){const t=null!=e[\"@_name\"]?e[\"@_name\"]:e[\"@_type\"];null!=t&&null!=e[\"#text\"]&&e[\"#text\"].length>0&&(n[t]=e[\"#text\"])}else{const e=null!=i[\"@_name\"]?i[\"@_name\"]:i[\"@_type\"];null!=e&&null!=i[\"#text\"]&&i[\"#text\"].length>0&&(n[e]=i[\"#text\"])}else if(\"object\"==typeof i){const e=t(i);Object.keys(e).length>0&&(n[r]=e)}return n};return t(e)};var Ey=t((function(e,t){const n=\":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\",r=\"[\"+n+\"][:A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*\",i=new RegExp(\"^\"+r+\"$\");t.isExist=function(e){return void 0!==e},t.isEmptyObject=function(e){return 0===Object.keys(e).length},t.merge=function(e,t,n){if(t){const r=Object.keys(t),i=r.length;for(let a=0;a<i;a++)e[r[a]]=\"strict\"===n?[t[r[a]]]:t[r[a]]}},t.getValue=function(e){return t.isExist(e)?e:\"\"},t.buildOptions=function(e,t,n){var r={};if(!e)return t;for(let i=0;i<n.length;i++)void 0!==e[n[i]]?r[n[i]]=e[n[i]]:r[n[i]]=t[n[i]];return r},t.isName=function(e){const t=i.exec(e);return!(null==t)},t.getAllMatches=function(e,t){const n=[];let r=t.exec(e);for(;r;){const i=[],a=r.length;for(let e=0;e<a;e++)i.push(r[e]);n.push(i),r=t.exec(e)}return n},t.nameRegexp=r}));const Cy=function(e,t){const n={};if(!(e.child&&!Ey.isEmptyObject(e.child)||e.attrsMap&&!Ey.isEmptyObject(e.attrsMap)))return Ey.isExist(e.val)?e.val:\"\";Ey.isExist(e.val)&&(\"string\"!=typeof e.val||\"\"!==e.val&&e.val!==t.cdataPositionChar)&&(\"strict\"===t.arrayMode?n[t.textNodeName]=[e.val]:n[t.textNodeName]=e.val),Ey.merge(n,e.attrsMap,t.arrayMode);const r=Object.keys(e.child);for(let o=0;o<r.length;o++){var i=r[o];if(e.child[i]&&e.child[i].length>1)for(var a in n[i]=[],e.child[i])n[i].push(Cy(e.child[i][a],t));else if(!0===t.arrayMode){const r=Cy(e.child[i][0],t);n[i]=\"object\"==typeof r?[r]:r}else\"strict\"===t.arrayMode?n[i]=[Cy(e.child[i][0],t)]:n[i]=Cy(e.child[i][0],t)}return n};var Ty={convertToJson:Cy},ky=function(e,t,n){this.tagname=e,this.parent=t,this.child={},this.attrsMap={},this.val=n,this.addChild=function(e){Array.isArray(this.child[e.tagname])?this.child[e.tagname].push(e):this.child[e.tagname]=[e]}};const Iy=Ey.buildOptions;\"<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)\".replace(/NAME/g,Ey.nameRegexp);!Number.parseInt&&window.parseInt&&(Number.parseInt=window.parseInt),!Number.parseFloat&&window.parseFloat&&(Number.parseFloat=window.parseFloat);const By={attributeNamePrefix:\"@_\",attrNodeName:!1,textNodeName:\"#text\",ignoreAttributes:!0,ignoreNameSpace:!1,allowBooleanAttributes:!1,parseNodeValue:!0,parseAttributeValue:!1,arrayMode:!1,trimValues:!0,cdataTagName:!1,cdataPositionChar:\"\\\\c\",tagValueProcessor:function(e,t){return e},attrValueProcessor:function(e,t){return e},stopNodes:[]};var zy=By;const Ry=[\"attributeNamePrefix\",\"attrNodeName\",\"textNodeName\",\"ignoreAttributes\",\"ignoreNameSpace\",\"allowBooleanAttributes\",\"parseNodeValue\",\"parseAttributeValue\",\"arrayMode\",\"trimValues\",\"cdataTagName\",\"cdataPositionChar\",\"tagValueProcessor\",\"attrValueProcessor\",\"parseTrueNumberOnly\",\"stopNodes\"];var qy=Ry;function Fy(e,t,n){return t&&(n.trimValues&&(t=t.trim()),t=Ly(t=n.tagValueProcessor(t,e),n.parseNodeValue,n.parseTrueNumberOnly)),t}function Uy(e,t){if(t.ignoreNameSpace){const t=e.split(\":\"),n=\"/\"===e.charAt(0)?\"/\":\"\";if(\"xmlns\"===t[0])return\"\";2===t.length&&(e=n+t[1])}return e}function Ly(e,t,n){if(t&&\"string\"==typeof e){let t;return\"\"===e.trim()||isNaN(e)?t=\"true\"===e||\"false\"!==e&&e:(-1!==e.indexOf(\"0x\")?t=Number.parseInt(e,16):-1!==e.indexOf(\".\")?(t=Number.parseFloat(e),e=e.replace(/\\.?0+$/,\"\")):t=Number.parseInt(e,10),n&&(t=String(t)===e?t:e)),t}return Ey.isExist(e)?e:\"\"}const Hy=new RegExp(\"([^\\\\s=]+)\\\\s*(=\\\\s*(['\\\"])(.*?)\\\\3)?\",\"g\");function Zy(e,t){if(!t.ignoreAttributes&&\"string\"==typeof e){e=e.replace(/\\r?\\n/g,\" \");const n=Ey.getAllMatches(e,Hy),r=n.length,i={};for(let e=0;e<r;e++){const r=Uy(n[e][1],t);r.length&&(void 0!==n[e][4]?(t.trimValues&&(n[e][4]=n[e][4].trim()),n[e][4]=t.attrValueProcessor(n[e][4],r),i[t.attributeNamePrefix+r]=Ly(n[e][4],t.parseAttributeValue,t.parseTrueNumberOnly)):t.allowBooleanAttributes&&(i[t.attributeNamePrefix+r]=!0))}if(!Object.keys(i).length)return;if(t.attrNodeName){const e={};return e[t.attrNodeName]=i,e}return i}}function Vy(e,t){let n,r=\"\";for(let i=t;i<e.length;i++){let t=e[i];if(n)t===n&&(n=\"\");else if('\"'===t||\"'\"===t)n=t;else{if(\">\"===t)return{data:r,index:i};\"\\t\"===t&&(t=\" \")}r+=t}}function Wy(e,t,n,r){const i=e.indexOf(t,n);if(-1===i)throw new Error(r);return i+t.length-1}var Gy={defaultOptions:zy,props:qy,getTraversalObj:function(e,t){e=e.replace(/(\\r\\n)|\\n/,\" \"),t=Iy(t,By,Ry);const n=new ky(\"!xml\");let r=n,i=\"\";for(let n=0;n<e.length;n++){if(\"<\"===e[n])if(\"/\"===e[n+1]){const a=Wy(e,\">\",n,\"Closing Tag is not closed.\");let o=e.substring(n+2,a).trim();if(t.ignoreNameSpace){const e=o.indexOf(\":\");-1!==e&&(o=o.substr(e+1))}r&&(r.val?r.val=Ey.getValue(r.val)+\"\"+Fy(o,i,t):r.val=Fy(o,i,t)),t.stopNodes.length&&t.stopNodes.includes(r.tagname)&&(r.child=[],null==r.attrsMap&&(r.attrsMap={}),r.val=e.substr(r.startIndex+1,n-r.startIndex-1)),r=r.parent,i=\"\",n=a}else if(\"?\"===e[n+1])n=Wy(e,\"?>\",n,\"Pi Tag is not closed.\");else if(\"!--\"===e.substr(n+1,3))n=Wy(e,\"--\\x3e\",n,\"Comment is not closed.\");else if(\"!D\"===e.substr(n+1,2)){const t=Wy(e,\">\",n,\"DOCTYPE is not closed.\");n=e.substring(n,t).indexOf(\"[\")>=0?e.indexOf(\"]>\",n)+1:t}else if(\"![\"===e.substr(n+1,2)){const a=Wy(e,\"]]>\",n,\"CDATA is not closed.\")-2,o=e.substring(n+9,a);if(i&&(r.val=Ey.getValue(r.val)+\"\"+Fy(r.tagname,i,t),i=\"\"),t.cdataTagName){const e=new ky(t.cdataTagName,r,o);r.addChild(e),r.val=Ey.getValue(r.val)+t.cdataPositionChar,o&&(e.val=o)}else r.val=(r.val||\"\")+(o||\"\");n=a+2}else{const a=Vy(e,n+1);let o=a.data;const s=a.index,c=o.indexOf(\" \");let u=o;if(-1!==c&&(u=o.substr(0,c).trimRight(),o=o.substr(c+1)),t.ignoreNameSpace){const e=u.indexOf(\":\");-1!==e&&(u=u.substr(e+1))}if(r&&i&&\"!xml\"!==r.tagname&&(r.val=Ey.getValue(r.val)+\"\"+Fy(r.tagname,i,t)),o.length>0&&o.lastIndexOf(\"/\")===o.length-1){\"/\"===u[u.length-1]?(u=u.substr(0,u.length-1),o=u):o=o.substr(0,o.length-1);const e=new ky(u,r,\"\");u!==o&&(e.attrsMap=Zy(o,t)),r.addChild(e)}else{const e=new ky(u,r);t.stopNodes.length&&t.stopNodes.includes(e.tagname)&&(e.startIndex=s),u!==o&&(e.attrsMap=Zy(o,t)),r.addChild(e),r=e}i=\"\",n=s}else i+=e[n]}return n}};const $y={allowBooleanAttributes:!1},Qy=[\"allowBooleanAttributes\"];function Xy(e,t){for(var n=t;t<e.length;t++)if(\"?\"!=e[t]&&\" \"!=e[t]);else{var r=e.substr(n,t-n);if(t>5&&\"xml\"===r)return nv(\"InvalidXml\",\"XML declaration allowed only at the start of the document.\",iv(e,t));if(\"?\"==e[t]&&\">\"==e[t+1]){t++;break}}return t}function Yy(e,t){if(e.length>t+5&&\"-\"===e[t+1]&&\"-\"===e[t+2]){for(t+=3;t<e.length;t++)if(\"-\"===e[t]&&\"-\"===e[t+1]&&\">\"===e[t+2]){t+=2;break}}else if(e.length>t+8&&\"D\"===e[t+1]&&\"O\"===e[t+2]&&\"C\"===e[t+3]&&\"T\"===e[t+4]&&\"Y\"===e[t+5]&&\"P\"===e[t+6]&&\"E\"===e[t+7]){let n=1;for(t+=8;t<e.length;t++)if(\"<\"===e[t])n++;else if(\">\"===e[t]&&(n--,0===n))break}else if(e.length>t+9&&\"[\"===e[t+1]&&\"C\"===e[t+2]&&\"D\"===e[t+3]&&\"A\"===e[t+4]&&\"T\"===e[t+5]&&\"A\"===e[t+6]&&\"[\"===e[t+7])for(t+=8;t<e.length;t++)if(\"]\"===e[t]&&\"]\"===e[t+1]&&\">\"===e[t+2]){t+=2;break}return t}function Jy(e,t){let n=\"\",r=\"\",i=!1;for(;t<e.length;t++){if('\"'===e[t]||\"'\"===e[t])if(\"\"===r)r=e[t];else{if(r!==e[t])continue;r=\"\"}else if(\">\"===e[t]&&\"\"===r){i=!0;break}n+=e[t]}return\"\"===r&&{value:n,index:t,tagClosed:i}}const Ky=new RegExp(\"(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*(['\\\"])(([\\\\s\\\\S])*?)\\\\5)?\",\"g\");function ev(e,t){const n=Ey.getAllMatches(e,Ky),r={};for(let i=0;i<n.length;i++){if(0===n[i][1].length)return nv(\"InvalidAttr\",\"Attribute '\"+n[i][2]+\"' has no space in starting.\",av(e,n[i][0]));if(void 0===n[i][3]&&!t.allowBooleanAttributes)return nv(\"InvalidAttr\",\"boolean attribute '\"+n[i][2]+\"' is not allowed.\",av(e,n[i][0]));const a=n[i][2];if(!rv(a))return nv(\"InvalidAttr\",\"Attribute '\"+a+\"' is an invalid name.\",av(e,n[i][0]));if(r.hasOwnProperty(a))return nv(\"InvalidAttr\",\"Attribute '\"+a+\"' is repeated.\",av(e,n[i][0]));r[a]=1}return!0}function tv(e,t){if(\";\"===e[++t])return-1;if(\"#\"===e[t])return function(e,t){let n=/\\d/;for(\"x\"===e[t]&&(t++,n=/[\\da-fA-F]/);t<e.length;t++){if(\";\"===e[t])return t;if(!e[t].match(n))break}return-1}(e,++t);let n=0;for(;t<e.length;t++,n++)if(!(e[t].match(/\\w/)&&n<20)){if(\";\"===e[t])break;return-1}return t}function nv(e,t,n){return{err:{code:e,msg:t,line:n}}}function rv(e){return Ey.isName(e)}function iv(e,t){return e.substring(0,t).split(/\\r?\\n/).length}function av(e,t){return e.indexOf(t)+t.length}var ov=function(e,t){t=Ey.buildOptions(t,$y,Qy);const n=[];let r=!1,i=!1;\"\\ufeff\"===e[0]&&(e=e.substr(1));for(let o=0;o<e.length;o++){if(\"<\"!==e[o]){if(\" \"===e[o]||\"\\t\"===e[o]||\"\\n\"===e[o]||\"\\r\"===e[o])continue;return nv(\"InvalidChar\",\"char '\"+e[o]+\"' is not expected.\",iv(e,o))}if(o++,\"?\"===e[o]){if(o=Xy(e,++o),o.err)return o}else{if(\"!\"===e[o]){o=Yy(e,o);continue}{let s=!1;\"/\"===e[o]&&(s=!0,o++);let c=\"\";for(;o<e.length&&\">\"!==e[o]&&\" \"!==e[o]&&\"\\t\"!==e[o]&&\"\\n\"!==e[o]&&\"\\r\"!==e[o];o++)c+=e[o];if(c=c.trim(),\"/\"===c[c.length-1]&&(c=c.substring(0,c.length-1),o--),a=c,!Ey.isName(a)){let t;return t=0===c.trim().length?\"There is an unnecessary space between tag name and backward slash '</ ..'.\":\"Tag '\"+c+\"' is an invalid name.\",nv(\"InvalidTag\",t,iv(e,o))}const u=Jy(e,o);if(!1===u)return nv(\"InvalidAttr\",\"Attributes for '\"+c+\"' have open quote.\",iv(e,o));let l=u.value;if(o=u.index,\"/\"===l[l.length-1]){l=l.substring(0,l.length-1);const n=ev(l,t);if(!0!==n)return nv(n.err.code,n.err.msg,iv(e,o-l.length+n.err.line));r=!0}else if(s){if(!u.tagClosed)return nv(\"InvalidTag\",\"Closing tag '\"+c+\"' doesn't have proper closing.\",iv(e,o));if(l.trim().length>0)return nv(\"InvalidTag\",\"Closing tag '\"+c+\"' can't have attributes or invalid starting.\",iv(e,o));{const t=n.pop();if(c!==t)return nv(\"InvalidTag\",\"Closing tag '\"+t+\"' is expected inplace of '\"+c+\"'.\",iv(e,o));0==n.length&&(i=!0)}}else{const a=ev(l,t);if(!0!==a)return nv(a.err.code,a.err.msg,iv(e,o-l.length+a.err.line));if(!0===i)return nv(\"InvalidXml\",\"Multiple possible root nodes found.\",iv(e,o));n.push(c),r=!0}for(o++;o<e.length;o++){if(\"<\"===e[o]){if(\"!\"===e[o+1]){o++,o=Yy(e,o);continue}break}if(\"&\"===e[o]){const t=tv(e,o);if(-1==t)return nv(\"InvalidChar\",\"char '&' is not expected.\",iv(e,o));o=t}}\"<\"===e[o]&&o--}}}var a;return r?!(n.length>0)||nv(\"InvalidXml\",\"Invalid '\"+JSON.stringify(n,null,4).replace(/\\r?\\n/g,\"\")+\"' found.\",1):nv(\"InvalidXml\",\"Start tag expected.\",1)};const sv=function(e){return String.fromCharCode(e)},cv={nilChar:sv(176),missingChar:sv(201),nilPremitive:sv(175),missingPremitive:sv(200),emptyChar:sv(178),emptyValue:sv(177),boundryChar:sv(179),objStart:sv(198),arrStart:sv(204),arrayEnd:sv(185)},uv=[cv.nilChar,cv.nilPremitive,cv.missingChar,cv.missingPremitive,cv.boundryChar,cv.emptyChar,cv.emptyValue,cv.arrayEnd,cv.objStart,cv.arrStart],lv=function(e,t,n){if(\"string\"==typeof t)return e&&e[0]&&void 0!==e[0].val?dv(e[0].val):dv(e);{const i=void 0===(r=e)?cv.missingChar:null===r?cv.nilChar:!(r.child&&0===Object.keys(r.child).length&&(!r.attrsMap||0===Object.keys(r.attrsMap).length))||cv.emptyChar;if(!0===i){let r=\"\";if(Array.isArray(t)){r+=cv.arrStart;const i=t[0],a=e.length;if(\"string\"==typeof i)for(let t=0;t<a;t++){const n=dv(e[t].val);r=fv(r,n)}else for(let t=0;t<a;t++){const a=lv(e[t],i,n);r=fv(r,a)}r+=cv.arrayEnd}else{r+=cv.objStart;const i=Object.keys(t);Array.isArray(e)&&(e=e[0]);for(let a in i){const o=i[a];let s;s=!n.ignoreAttributes&&e.attrsMap&&e.attrsMap[o]?lv(e.attrsMap[o],t[o],n):o===n.textNodeName?lv(e.val,t[o],n):lv(e.child[o],t[o],n),r=fv(r,s)}}return r}return i}var r},dv=function(e){switch(e){case void 0:return cv.missingPremitive;case null:return cv.nilPremitive;case\"\":return cv.emptyValue;default:return e}},fv=function(e,t){return pv(t[0])||pv(e[e.length-1])||(e+=cv.boundryChar),e+t},pv=function(e){return-1!==uv.indexOf(e)};const mv=Ey.buildOptions;var hv={convert2nimn:function(e,t,n){return n=mv(n,Gy.defaultOptions,Gy.props),lv(e,t,n)}};const yv=Ey.buildOptions,vv=function(e,t,n){let r=\"{\";const i=Object.keys(e.child);for(let n=0;n<i.length;n++){var a=i[n];if(e.child[a]&&e.child[a].length>1){for(var o in r+='\"'+a+'\" : [ ',e.child[a])r+=vv(e.child[a][o],t)+\" , \";r=r.substr(0,r.length-1)+\" ] \"}else r+='\"'+a+'\" : '+vv(e.child[a][0],t)+\" ,\"}return Ey.merge(r,e.attrsMap),Ey.isEmptyObject(r)?Ey.isExist(e.val)?e.val:\"\":(Ey.isExist(e.val)&&(\"string\"!=typeof e.val||\"\"!==e.val&&e.val!==t.cdataPositionChar)&&(r+='\"'+t.textNodeName+'\" : '+(!0!==(s=e.val)&&!1!==s&&isNaN(s)?'\"'+s+'\"':s)),\",\"===r[r.length-1]&&(r=r.substr(0,r.length-2)),r+\"}\");var s};var gv={convertToJsonString:function(e,t){return(t=yv(t,Gy.defaultOptions,Gy.props)).indentBy=t.indentBy||\"\",vv(e,t)}};const bv=Ey.buildOptions,xv={attributeNamePrefix:\"@_\",attrNodeName:!1,textNodeName:\"#text\",ignoreAttributes:!0,cdataTagName:!1,cdataPositionChar:\"\\\\c\",format:!1,indentBy:\"  \",supressEmptyNode:!1,tagValueProcessor:function(e){return e},attrValueProcessor:function(e){return e}},Dv=[\"attributeNamePrefix\",\"attrNodeName\",\"textNodeName\",\"ignoreAttributes\",\"cdataTagName\",\"cdataPositionChar\",\"format\",\"indentBy\",\"supressEmptyNode\",\"tagValueProcessor\",\"attrValueProcessor\"];function _v(e){this.options=bv(e,xv,Dv),this.options.ignoreAttributes||this.options.attrNodeName?this.isAttribute=function(){return!1}:(this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=Av),this.options.cdataTagName?this.isCDATA=Ev:this.isCDATA=function(){return!1},this.replaceCDATAstr=wv,this.replaceCDATAarr=Nv,this.options.format?(this.indentate=jv,this.tagEndChar=\">\\n\",this.newLine=\"\\n\"):(this.indentate=function(){return\"\"},this.tagEndChar=\">\",this.newLine=\"\"),this.options.supressEmptyNode?(this.buildTextNode=Pv,this.buildObjNode=Ov):(this.buildTextNode=Sv,this.buildObjNode=Mv),this.buildTextValNode=Sv,this.buildObjectNode=Mv}function wv(e,t){return e=this.options.tagValueProcessor(\"\"+e),\"\"===this.options.cdataPositionChar||\"\"===e?e+\"<![CDATA[\"+t+\"]]\"+this.tagEndChar:e.replace(this.options.cdataPositionChar,\"<![CDATA[\"+t+\"]]\"+this.tagEndChar)}function Nv(e,t){if(e=this.options.tagValueProcessor(\"\"+e),\"\"===this.options.cdataPositionChar||\"\"===e)return e+\"<![CDATA[\"+t.join(\"]]><![CDATA[\")+\"]]\"+this.tagEndChar;for(let n in t)e=e.replace(this.options.cdataPositionChar,\"<![CDATA[\"+t[n]+\"]]>\");return e+this.newLine}function Mv(e,t,n,r){return n&&!e.includes(\"<\")?this.indentate(r)+\"<\"+t+n+\">\"+e+\"</\"+t+this.tagEndChar:this.indentate(r)+\"<\"+t+n+this.tagEndChar+e+this.indentate(r)+\"</\"+t+this.tagEndChar}function Ov(e,t,n,r){return\"\"!==e?this.buildObjectNode(e,t,n,r):this.indentate(r)+\"<\"+t+n+\"/\"+this.tagEndChar}function Sv(e,t,n,r){return this.indentate(r)+\"<\"+t+n+\">\"+this.options.tagValueProcessor(e)+\"</\"+t+this.tagEndChar}function Pv(e,t,n,r){return\"\"!==e?this.buildTextValNode(e,t,n,r):this.indentate(r)+\"<\"+t+n+\"/\"+this.tagEndChar}function jv(e){return this.options.indentBy.repeat(e)}function Av(e){return!!e.startsWith(this.options.attributeNamePrefix)&&e.substr(this.attrPrefixLen)}function Ev(e){return e===this.options.cdataTagName}_v.prototype.parse=function(e){return this.j2x(e,0).val},_v.prototype.j2x=function(e,t){let n=\"\",r=\"\";const i=Object.keys(e),a=i.length;for(let o=0;o<a;o++){const a=i[o];if(void 0===e[a]);else if(null===e[a])r+=this.indentate(t)+\"<\"+a+\"/\"+this.tagEndChar;else if(e[a]instanceof Date)r+=this.buildTextNode(e[a],a,\"\",t);else if(\"object\"!=typeof e[a]){const i=this.isAttribute(a);i?n+=\" \"+i+'=\"'+this.options.attrValueProcessor(\"\"+e[a])+'\"':this.isCDATA(a)?e[this.options.textNodeName]?r+=this.replaceCDATAstr(e[this.options.textNodeName],e[a]):r+=this.replaceCDATAstr(\"\",e[a]):a===this.options.textNodeName?e[this.options.cdataTagName]||(r+=this.options.tagValueProcessor(\"\"+e[a])):r+=this.buildTextNode(e[a],a,\"\",t)}else if(Array.isArray(e[a]))if(this.isCDATA(a))r+=this.indentate(t),e[this.options.textNodeName]?r+=this.replaceCDATAarr(e[this.options.textNodeName],e[a]):r+=this.replaceCDATAarr(\"\",e[a]);else{const n=e[a].length;for(let i=0;i<n;i++){const n=e[a][i];if(void 0===n);else if(null===n)r+=this.indentate(t)+\"<\"+a+\"/\"+this.tagEndChar;else if(\"object\"==typeof n){const e=this.j2x(n,t+1);r+=this.buildObjNode(e.val,a,e.attrStr,t)}else r+=this.buildTextNode(n,a,\"\",t)}}else if(this.options.attrNodeName&&a===this.options.attrNodeName){const t=Object.keys(e[a]),r=t.length;for(let i=0;i<r;i++)n+=\" \"+t[i]+'=\"'+this.options.attrValueProcessor(\"\"+e[a][t[i]])+'\"'}else{const n=this.j2x(e[a],t+1);r+=this.buildObjNode(n.val,a,n.attrStr,t)}}return{attrStr:n,val:r}};var Cv=_v,Tv=t((function(e,t){const n=Gy,r=Ey.buildOptions;t.parse=function(e,t,i){if(i){!0===i&&(i={});const t=ov(e,i);if(!0!==t)throw Error(t.err.msg)}t=r(t,n.defaultOptions,n.props);const a=Gy.getTraversalObj(e,t);return Ty.convertToJson(a,t)},t.convertTonimn=hv.convert2nimn,t.getTraversalObj=Gy.getTraversalObj,t.convertToJson=Ty.convertToJson,t.convertToJsonString=gv.convertToJsonString,t.validate=ov,t.j2xParser=Cv,t.parseToNimn=function(e,n,r){return t.convertTonimn(t.getTraversalObj(e,r),n,r)}})),kv=t((function(t,r){\n/*!\n\nJSZip v3.5.0 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\nt.exports=function e(t,r,i){function a(s,c){if(!r[s]){if(!t[s]){if(!c&&n)return n();if(o)return o(s,!0);var u=new Error(\"Cannot find module '\"+s+\"'\");throw u.code=\"MODULE_NOT_FOUND\",u}var l=r[s]={exports:{}};t[s][0].call(l.exports,(function(e){var n=t[s][1][e];return a(n||e)}),l,l.exports,e,t,r,i)}return r[s].exports}for(var o=n,s=0;s<i.length;s++)a(i[s]);return a}({1:[function(e,t,n){var r=e(\"./utils\"),i=e(\"./support\"),a=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";n.encode=function(e){for(var t,n,i,o,s,c,u,l=[],d=0,f=e.length,p=f,m=\"string\"!==r.getTypeOf(e);d<e.length;)p=f-d,m?(t=e[d++],n=d<f?e[d++]:0,i=d<f?e[d++]:0):(t=e.charCodeAt(d++),n=d<f?e.charCodeAt(d++):0,i=d<f?e.charCodeAt(d++):0),o=t>>2,s=(3&t)<<4|n>>4,c=p>1?(15&n)<<2|i>>6:64,u=p>2?63&i:64,l.push(a.charAt(o)+a.charAt(s)+a.charAt(c)+a.charAt(u));return l.join(\"\")},n.decode=function(e){var t,n,r,o,s,c,u=0,l=0;if(\"data:\"===e.substr(0,\"data:\".length))throw new Error(\"Invalid base64 input, it looks like a data url.\");var d,f=3*(e=e.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\")).length/4;if(e.charAt(e.length-1)===a.charAt(64)&&f--,e.charAt(e.length-2)===a.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(d=i.uint8array?new Uint8Array(0|f):new Array(0|f);u<e.length;)t=a.indexOf(e.charAt(u++))<<2|(o=a.indexOf(e.charAt(u++)))>>4,n=(15&o)<<4|(s=a.indexOf(e.charAt(u++)))>>2,r=(3&s)<<6|(c=a.indexOf(e.charAt(u++))),d[l++]=t,64!==s&&(d[l++]=n),64!==c&&(d[l++]=r);return d}},{\"./support\":30,\"./utils\":32}],2:[function(e,t,n){var r=e(\"./external\"),i=e(\"./stream/DataWorker\"),a=e(\"./stream/DataLengthProbe\"),o=e(\"./stream/Crc32Probe\");function s(e,t,n,r,i){this.compressedSize=e,this.uncompressedSize=t,this.crc32=n,this.compression=r,this.compressedContent=i}a=e(\"./stream/DataLengthProbe\"),s.prototype={getContentWorker:function(){var e=new i(r.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),t=this;return e.on(\"end\",(function(){if(this.streamInfo.data_length!==t.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")})),e},getCompressedWorker:function(){return new i(r.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},s.createWorkerFrom=function(e,t,n){return e.pipe(new o).pipe(new a(\"uncompressedSize\")).pipe(t.compressWorker(n)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",t)},t.exports=s},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(e,t,n){var r=e(\"./stream/GenericWorker\");n.STORE={magic:\"\\0\\0\",compressWorker:function(e){return new r(\"STORE compression\")},uncompressWorker:function(){return new r(\"STORE decompression\")}},n.DEFLATE=e(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(e,t,n){var r=e(\"./utils\"),i=function(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t}();t.exports=function(e,t){return void 0!==e&&e.length?\"string\"!==r.getTypeOf(e)?function(e,t,n,r){var a=i,o=r+n;e^=-1;for(var s=r;s<o;s++)e=e>>>8^a[255&(e^t[s])];return-1^e}(0|t,e,e.length,0):function(e,t,n,r){var a=i,o=r+n;e^=-1;for(var s=r;s<o;s++)e=e>>>8^a[255&(e^t.charCodeAt(s))];return-1^e}(0|t,e,e.length,0):0}},{\"./utils\":32}],5:[function(e,t,n){n.base64=!1,n.binary=!1,n.dir=!1,n.createFolders=!0,n.date=null,n.compression=null,n.compressionOptions=null,n.comment=null,n.unixPermissions=null,n.dosPermissions=null},{}],6:[function(e,t,n){var r=null;r=\"undefined\"!=typeof Promise?Promise:e(\"lie\"),t.exports={Promise:r}},{lie:37}],7:[function(e,t,n){var r=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,i=e(\"pako\"),a=e(\"./utils\"),o=e(\"./stream/GenericWorker\"),s=r?\"uint8array\":\"array\";function c(e,t){o.call(this,\"FlateWorker/\"+e),this._pako=null,this._pakoAction=e,this._pakoOptions=t,this.meta={}}n.magic=\"\\b\\0\",a.inherits(c,o),c.prototype.processChunk=function(e){this.meta=e.meta,null===this._pako&&this._createPako(),this._pako.push(a.transformTo(s,e.data),!1)},c.prototype.flush=function(){o.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},c.prototype.cleanUp=function(){o.prototype.cleanUp.call(this),this._pako=null},c.prototype._createPako=function(){this._pako=new i[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var e=this;this._pako.onData=function(t){e.push({data:t,meta:e.meta})}},n.compressWorker=function(e){return new c(\"Deflate\",e)},n.uncompressWorker=function(){return new c(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(e,t,n){var r=e(\"../utils\"),i=e(\"../stream/GenericWorker\"),a=e(\"../utf8\"),o=e(\"../crc32\"),s=e(\"../signature\"),c=function(e,t){var n,r=\"\";for(n=0;n<t;n++)r+=String.fromCharCode(255&e),e>>>=8;return r},u=function(e,t,n,i,u,l){var d,f,p=e.file,m=e.compression,h=l!==a.utf8encode,y=r.transformTo(\"string\",l(p.name)),v=r.transformTo(\"string\",a.utf8encode(p.name)),g=p.comment,b=r.transformTo(\"string\",l(g)),x=r.transformTo(\"string\",a.utf8encode(g)),D=v.length!==p.name.length,_=x.length!==g.length,w=\"\",N=\"\",M=\"\",O=p.dir,S=p.date,P={crc32:0,compressedSize:0,uncompressedSize:0};t&&!n||(P.crc32=e.crc32,P.compressedSize=e.compressedSize,P.uncompressedSize=e.uncompressedSize);var j=0;t&&(j|=8),h||!D&&!_||(j|=2048);var A,E,C,T=0,k=0;O&&(T|=16),\"UNIX\"===u?(k=798,T|=(A=p.unixPermissions,E=O,C=A,A||(C=E?16893:33204),(65535&C)<<16)):(k=20,T|=63&(p.dosPermissions||0)),d=S.getUTCHours(),d<<=6,d|=S.getUTCMinutes(),d<<=5,d|=S.getUTCSeconds()/2,f=S.getUTCFullYear()-1980,f<<=4,f|=S.getUTCMonth()+1,f<<=5,f|=S.getUTCDate(),D&&(N=c(1,1)+c(o(y),4)+v,w+=\"up\"+c(N.length,2)+N),_&&(M=c(1,1)+c(o(b),4)+x,w+=\"uc\"+c(M.length,2)+M);var I=\"\";return I+=\"\\n\\0\",I+=c(j,2),I+=m.magic,I+=c(d,2),I+=c(f,2),I+=c(P.crc32,4),I+=c(P.compressedSize,4),I+=c(P.uncompressedSize,4),I+=c(y.length,2),I+=c(w.length,2),{fileRecord:s.LOCAL_FILE_HEADER+I+y+w,dirRecord:s.CENTRAL_FILE_HEADER+c(k,2)+I+c(b.length,2)+\"\\0\\0\\0\\0\"+c(T,4)+c(i,4)+y+w+b}},l=function(e){return s.DATA_DESCRIPTOR+c(e.crc32,4)+c(e.compressedSize,4)+c(e.uncompressedSize,4)};function d(e,t,n,r){i.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=t,this.zipPlatform=n,this.encodeFileName=r,this.streamFiles=e,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}r.inherits(d,i),d.prototype.push=function(e){var t=e.meta.percent||0,n=this.entriesCount,r=this._sources.length;this.accumulate?this.contentBuffer.push(e):(this.bytesWritten+=e.data.length,i.prototype.push.call(this,{data:e.data,meta:{currentFile:this.currentFile,percent:n?(t+100*(n-r-1))/n:100}}))},d.prototype.openedSource=function(e){this.currentSourceOffset=this.bytesWritten,this.currentFile=e.file.name;var t=this.streamFiles&&!e.file.dir;if(t){var n=u(e,t,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:n.fileRecord,meta:{percent:0}})}else this.accumulate=!0},d.prototype.closedSource=function(e){this.accumulate=!1;var t=this.streamFiles&&!e.file.dir,n=u(e,t,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(n.dirRecord),t)this.push({data:l(e),meta:{percent:100}});else for(this.push({data:n.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},d.prototype.flush=function(){for(var e=this.bytesWritten,t=0;t<this.dirRecords.length;t++)this.push({data:this.dirRecords[t],meta:{percent:100}});var n=this.bytesWritten-e,i=function(e,t,n,i,a){var o=r.transformTo(\"string\",a(i));return s.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+c(e,2)+c(e,2)+c(t,4)+c(n,4)+c(o.length,2)+o}(this.dirRecords.length,n,e,this.zipComment,this.encodeFileName);this.push({data:i,meta:{percent:100}})},d.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},d.prototype.registerPrevious=function(e){this._sources.push(e);var t=this;return e.on(\"data\",(function(e){t.processChunk(e)})),e.on(\"end\",(function(){t.closedSource(t.previous.streamInfo),t._sources.length?t.prepareNextSource():t.end()})),e.on(\"error\",(function(e){t.error(e)})),this},d.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},d.prototype.error=function(e){var t=this._sources;if(!i.prototype.error.call(this,e))return!1;for(var n=0;n<t.length;n++)try{t[n].error(e)}catch(e){}return!0},d.prototype.lock=function(){i.prototype.lock.call(this);for(var e=this._sources,t=0;t<e.length;t++)e[t].lock()},t.exports=d},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(e,t,n){var r=e(\"../compressions\"),i=e(\"./ZipFileWorker\");n.generateWorker=function(e,t,n){var a=new i(t.streamFiles,n,t.platform,t.encodeFileName),o=0;try{e.forEach((function(e,n){o++;var i=function(e,t){var n=e||t,i=r[n];if(!i)throw new Error(n+\" is not a valid compression method !\");return i}(n.options.compression,t.compression),s=n.options.compressionOptions||t.compressionOptions||{},c=n.dir,u=n.date;n._compressWorker(i,s).withStreamInfo(\"file\",{name:e,dir:c,date:u,comment:n.comment||\"\",unixPermissions:n.unixPermissions,dosPermissions:n.dosPermissions}).pipe(a)})),a.entriesCount=o}catch(e){a.error(e)}return a}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(e,t,n){function r(){if(!(this instanceof r))return new r;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files={},this.comment=null,this.root=\"\",this.clone=function(){var e=new r;for(var t in this)\"function\"!=typeof this[t]&&(e[t]=this[t]);return e}}r.prototype=e(\"./object\"),r.prototype.loadAsync=e(\"./load\"),r.support=e(\"./support\"),r.defaults=e(\"./defaults\"),r.version=\"3.5.0\",r.loadAsync=function(e,t){return(new r).loadAsync(e,t)},r.external=e(\"./external\"),t.exports=r},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(e,t,n){var r=e(\"./utils\"),i=e(\"./external\"),a=e(\"./utf8\"),o=(r=e(\"./utils\"),e(\"./zipEntries\")),s=e(\"./stream/Crc32Probe\"),c=e(\"./nodejsUtils\");function u(e){return new i.Promise((function(t,n){var r=e.decompressed.getContentWorker().pipe(new s);r.on(\"error\",(function(e){n(e)})).on(\"end\",(function(){r.streamInfo.crc32!==e.decompressed.crc32?n(new Error(\"Corrupted zip : CRC32 mismatch\")):t()})).resume()}))}t.exports=function(e,t){var n=this;return t=r.extend(t||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:a.utf8decode}),c.isNode&&c.isStream(e)?i.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):r.prepareContent(\"the loaded zip file\",e,!0,t.optimizedBinaryString,t.base64).then((function(e){var n=new o(t);return n.load(e),n})).then((function(e){var n=[i.Promise.resolve(e)],r=e.files;if(t.checkCRC32)for(var a=0;a<r.length;a++)n.push(u(r[a]));return i.Promise.all(n)})).then((function(e){for(var r=e.shift(),i=r.files,a=0;a<i.length;a++){var o=i[a];n.file(o.fileNameStr,o.decompressed,{binary:!0,optimizedBinaryString:!0,date:o.date,dir:o.dir,comment:o.fileCommentStr.length?o.fileCommentStr:null,unixPermissions:o.unixPermissions,dosPermissions:o.dosPermissions,createFolders:t.createFolders})}return r.zipComment.length&&(n.comment=r.zipComment),n}))}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(e,t,n){var r=e(\"../utils\"),i=e(\"../stream/GenericWorker\");function a(e,t){i.call(this,\"Nodejs stream input adapter for \"+e),this._upstreamEnded=!1,this._bindStream(t)}r.inherits(a,i),a.prototype._bindStream=function(e){var t=this;this._stream=e,e.pause(),e.on(\"data\",(function(e){t.push({data:e,meta:{percent:0}})})).on(\"error\",(function(e){t.isPaused?this.generatedError=e:t.error(e)})).on(\"end\",(function(){t.isPaused?t._upstreamEnded=!0:t.end()}))},a.prototype.pause=function(){return!!i.prototype.pause.call(this)&&(this._stream.pause(),!0)},a.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},t.exports=a},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(e,t,n){var r=e(\"readable-stream\").Readable;function i(e,t,n){r.call(this,t),this._helper=e;var i=this;e.on(\"data\",(function(e,t){i.push(e)||i._helper.pause(),n&&n(t)})).on(\"error\",(function(e){i.emit(\"error\",e)})).on(\"end\",(function(){i.push(null)}))}e(\"../utils\").inherits(i,r),i.prototype._read=function(){this._helper.resume()},t.exports=i},{\"../utils\":32,\"readable-stream\":16}],14:[function(e,t,n){t.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(e,t){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(e,t);if(\"number\"==typeof e)throw new Error('The \"data\" argument must not be a number');return new Buffer(e,t)},allocBuffer:function(e){if(Buffer.alloc)return Buffer.alloc(e);var t=new Buffer(e);return t.fill(0),t},isBuffer:function(e){return Buffer.isBuffer(e)},isStream:function(e){return e&&\"function\"==typeof e.on&&\"function\"==typeof e.pause&&\"function\"==typeof e.resume}}},{}],15:[function(e,t,n){var r=e(\"./utf8\"),i=e(\"./utils\"),a=e(\"./stream/GenericWorker\"),o=e(\"./stream/StreamHelper\"),s=e(\"./defaults\"),c=e(\"./compressedObject\"),u=e(\"./zipObject\"),l=e(\"./generate\"),d=e(\"./nodejsUtils\"),f=e(\"./nodejs/NodejsStreamInputAdapter\"),p=function(e,t,n){var r,o=i.getTypeOf(t),l=i.extend(n||{},s);l.date=l.date||new Date,null!==l.compression&&(l.compression=l.compression.toUpperCase()),\"string\"==typeof l.unixPermissions&&(l.unixPermissions=parseInt(l.unixPermissions,8)),l.unixPermissions&&16384&l.unixPermissions&&(l.dir=!0),l.dosPermissions&&16&l.dosPermissions&&(l.dir=!0),l.dir&&(e=h(e)),l.createFolders&&(r=m(e))&&y.call(this,r,!0);var p=\"string\"===o&&!1===l.binary&&!1===l.base64;n&&void 0!==n.binary||(l.binary=!p),(t instanceof c&&0===t.uncompressedSize||l.dir||!t||0===t.length)&&(l.base64=!1,l.binary=!0,t=\"\",l.compression=\"STORE\",o=\"string\");var v=null;v=t instanceof c||t instanceof a?t:d.isNode&&d.isStream(t)?new f(e,t):i.prepareContent(e,t,l.binary,l.optimizedBinaryString,l.base64);var g=new u(e,v,l);this.files[e]=g},m=function(e){\"/\"===e.slice(-1)&&(e=e.substring(0,e.length-1));var t=e.lastIndexOf(\"/\");return t>0?e.substring(0,t):\"\"},h=function(e){return\"/\"!==e.slice(-1)&&(e+=\"/\"),e},y=function(e,t){return t=void 0!==t?t:s.createFolders,e=h(e),this.files[e]||p.call(this,e,null,{dir:!0,createFolders:t}),this.files[e]};function v(e){return\"[object RegExp]\"===Object.prototype.toString.call(e)}var g={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(e){var t,n,r;for(t in this.files)this.files.hasOwnProperty(t)&&(r=this.files[t],(n=t.slice(this.root.length,t.length))&&t.slice(0,this.root.length)===this.root&&e(n,r))},filter:function(e){var t=[];return this.forEach((function(n,r){e(n,r)&&t.push(r)})),t},file:function(e,t,n){if(1===arguments.length){if(v(e)){var r=e;return this.filter((function(e,t){return!t.dir&&r.test(e)}))}var i=this.files[this.root+e];return i&&!i.dir?i:null}return e=this.root+e,p.call(this,e,t,n),this},folder:function(e){if(!e)return this;if(v(e))return this.filter((function(t,n){return n.dir&&e.test(t)}));var t=this.root+e,n=y.call(this,t),r=this.clone();return r.root=n.name,r},remove:function(e){e=this.root+e;var t=this.files[e];if(t||(\"/\"!==e.slice(-1)&&(e+=\"/\"),t=this.files[e]),t&&!t.dir)delete this.files[e];else for(var n=this.filter((function(t,n){return n.name.slice(0,e.length)===e})),r=0;r<n.length;r++)delete this.files[n[r].name];return this},generate:function(e){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(e){var t,n={};try{if((n=i.extend(e||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:r.utf8encode})).type=n.type.toLowerCase(),n.compression=n.compression.toUpperCase(),\"binarystring\"===n.type&&(n.type=\"string\"),!n.type)throw new Error(\"No output type specified.\");i.checkSupport(n.type),\"darwin\"!==n.platform&&\"freebsd\"!==n.platform&&\"linux\"!==n.platform&&\"sunos\"!==n.platform||(n.platform=\"UNIX\"),\"win32\"===n.platform&&(n.platform=\"DOS\");var s=n.comment||this.comment||\"\";t=l.generateWorker(this,n,s)}catch(e){(t=new a(\"error\")).error(e)}return new o(t,n.type||\"string\",n.mimeType)},generateAsync:function(e,t){return this.generateInternalStream(e).accumulate(t)},generateNodeStream:function(e,t){return(e=e||{}).type||(e.type=\"nodebuffer\"),this.generateInternalStream(e).toNodejsStream(t)}};t.exports=g},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(e,t,n){t.exports=e(\"stream\")},{stream:void 0}],17:[function(e,t,n){var r=e(\"./DataReader\");function i(e){r.call(this,e);for(var t=0;t<this.data.length;t++)e[t]=255&e[t]}e(\"../utils\").inherits(i,r),i.prototype.byteAt=function(e){return this.data[this.zero+e]},i.prototype.lastIndexOfSignature=function(e){for(var t=e.charCodeAt(0),n=e.charCodeAt(1),r=e.charCodeAt(2),i=e.charCodeAt(3),a=this.length-4;a>=0;--a)if(this.data[a]===t&&this.data[a+1]===n&&this.data[a+2]===r&&this.data[a+3]===i)return a-this.zero;return-1},i.prototype.readAndCheckSignature=function(e){var t=e.charCodeAt(0),n=e.charCodeAt(1),r=e.charCodeAt(2),i=e.charCodeAt(3),a=this.readData(4);return t===a[0]&&n===a[1]&&r===a[2]&&i===a[3]},i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return[];var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],18:[function(e,t,n){var r=e(\"../utils\");function i(e){this.data=e,this.length=e.length,this.index=0,this.zero=0}i.prototype={checkOffset:function(e){this.checkIndex(this.index+e)},checkIndex:function(e){if(this.length<this.zero+e||e<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+e+\"). Corrupted zip ?\")},setIndex:function(e){this.checkIndex(e),this.index=e},skip:function(e){this.setIndex(this.index+e)},byteAt:function(e){},readInt:function(e){var t,n=0;for(this.checkOffset(e),t=this.index+e-1;t>=this.index;t--)n=(n<<8)+this.byteAt(t);return this.index+=e,n},readString:function(e){return r.transformTo(\"string\",this.readData(e))},readData:function(e){},lastIndexOfSignature:function(e){},readAndCheckSignature:function(e){},readDate:function(){var e=this.readInt(4);return new Date(Date.UTC(1980+(e>>25&127),(e>>21&15)-1,e>>16&31,e>>11&31,e>>5&63,(31&e)<<1))}},t.exports=i},{\"../utils\":32}],19:[function(e,t,n){var r=e(\"./Uint8ArrayReader\");function i(e){r.call(this,e)}e(\"../utils\").inherits(i,r),i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(e,t,n){var r=e(\"./DataReader\");function i(e){r.call(this,e)}e(\"../utils\").inherits(i,r),i.prototype.byteAt=function(e){return this.data.charCodeAt(this.zero+e)},i.prototype.lastIndexOfSignature=function(e){return this.data.lastIndexOf(e)-this.zero},i.prototype.readAndCheckSignature=function(e){return e===this.readData(4)},i.prototype.readData=function(e){this.checkOffset(e);var t=this.data.slice(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./DataReader\":18}],21:[function(e,t,n){var r=e(\"./ArrayReader\");function i(e){r.call(this,e)}e(\"../utils\").inherits(i,r),i.prototype.readData=function(e){if(this.checkOffset(e),0===e)return new Uint8Array(0);var t=this.data.subarray(this.zero+this.index,this.zero+this.index+e);return this.index+=e,t},t.exports=i},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(e,t,n){var r=e(\"../utils\"),i=e(\"../support\"),a=e(\"./ArrayReader\"),o=e(\"./StringReader\"),s=e(\"./NodeBufferReader\"),c=e(\"./Uint8ArrayReader\");t.exports=function(e){var t=r.getTypeOf(e);return r.checkSupport(t),\"string\"!==t||i.uint8array?\"nodebuffer\"===t?new s(e):i.uint8array?new c(r.transformTo(\"uint8array\",e)):new a(r.transformTo(\"array\",e)):new o(e)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(e,t,n){n.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",n.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",n.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",n.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",n.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",n.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(e,t,n){var r=e(\"./GenericWorker\"),i=e(\"../utils\");function a(e){r.call(this,\"ConvertWorker to \"+e),this.destType=e}i.inherits(a,r),a.prototype.processChunk=function(e){this.push({data:i.transformTo(this.destType,e.data),meta:e.meta})},t.exports=a},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(e,t,n){var r=e(\"./GenericWorker\"),i=e(\"../crc32\");function a(){r.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}e(\"../utils\").inherits(a,r),a.prototype.processChunk=function(e){this.streamInfo.crc32=i(e.data,this.streamInfo.crc32||0),this.push(e)},t.exports=a},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(e,t,n){var r=e(\"../utils\"),i=e(\"./GenericWorker\");function a(e){i.call(this,\"DataLengthProbe for \"+e),this.propName=e,this.withStreamInfo(e,0)}r.inherits(a,i),a.prototype.processChunk=function(e){if(e){var t=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=t+e.data.length}i.prototype.processChunk.call(this,e)},t.exports=a},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(e,t,n){var r=e(\"../utils\"),i=e(\"./GenericWorker\");function a(e){i.call(this,\"DataWorker\");var t=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,e.then((function(e){t.dataIsReady=!0,t.data=e,t.max=e&&e.length||0,t.type=r.getTypeOf(e),t.isPaused||t._tickAndRepeat()}),(function(e){t.error(e)}))}r.inherits(a,i),a.prototype.cleanUp=function(){i.prototype.cleanUp.call(this),this.data=null},a.prototype.resume=function(){return!!i.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,r.delay(this._tickAndRepeat,[],this)),!0)},a.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(r.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},a.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var e=null,t=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":e=this.data.substring(this.index,t);break;case\"uint8array\":e=this.data.subarray(this.index,t);break;case\"array\":case\"nodebuffer\":e=this.data.slice(this.index,t)}return this.index=t,this.push({data:e,meta:{percent:this.max?this.index/this.max*100:0}})},t.exports=a},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(e,t,n){function r(e){this.name=e||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}r.prototype={push:function(e){this.emit(\"data\",e)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(e){this.emit(\"error\",e)}return!0},error:function(e){return!this.isFinished&&(this.isPaused?this.generatedError=e:(this.isFinished=!0,this.emit(\"error\",e),this.previous&&this.previous.error(e),this.cleanUp()),!0)},on:function(e,t){return this._listeners[e].push(t),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(e,t){if(this._listeners[e])for(var n=0;n<this._listeners[e].length;n++)this._listeners[e][n].call(this,t)},pipe:function(e){return e.registerPrevious(this)},registerPrevious:function(e){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=e.streamInfo,this.mergeStreamInfo(),this.previous=e;var t=this;return e.on(\"data\",(function(e){t.processChunk(e)})),e.on(\"end\",(function(){t.end()})),e.on(\"error\",(function(e){t.error(e)})),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;this.isPaused=!1;var e=!1;return this.generatedError&&(this.error(this.generatedError),e=!0),this.previous&&this.previous.resume(),!e},flush:function(){},processChunk:function(e){this.push(e)},withStreamInfo:function(e,t){return this.extraStreamInfo[e]=t,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var e in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(e)&&(this.streamInfo[e]=this.extraStreamInfo[e])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var e=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+e:e}},t.exports=r},{}],29:[function(e,t,n){var r=e(\"../utils\"),i=e(\"./ConvertWorker\"),a=e(\"./GenericWorker\"),o=e(\"../base64\"),s=e(\"../support\"),c=e(\"../external\"),u=null;if(s.nodestream)try{u=e(\"../nodejs/NodejsStreamOutputAdapter\")}catch(e){}function l(e,t){return new c.Promise((function(n,i){var a=[],s=e._internalType,c=e._outputType,u=e._mimeType;e.on(\"data\",(function(e,n){a.push(e),t&&t(n)})).on(\"error\",(function(e){a=[],i(e)})).on(\"end\",(function(){try{var e=function(e,t,n){switch(e){case\"blob\":return r.newBlob(r.transformTo(\"arraybuffer\",t),n);case\"base64\":return o.encode(t);default:return r.transformTo(e,t)}}(c,function(e,t){var n,r=0,i=null,a=0;for(n=0;n<t.length;n++)a+=t[n].length;switch(e){case\"string\":return t.join(\"\");case\"array\":return Array.prototype.concat.apply([],t);case\"uint8array\":for(i=new Uint8Array(a),n=0;n<t.length;n++)i.set(t[n],r),r+=t[n].length;return i;case\"nodebuffer\":return Buffer.concat(t);default:throw new Error(\"concat : unsupported type '\"+e+\"'\")}}(s,a),u);n(e)}catch(e){i(e)}a=[]})).resume()}))}function d(e,t,n){var o=t;switch(t){case\"blob\":case\"arraybuffer\":o=\"uint8array\";break;case\"base64\":o=\"string\"}try{this._internalType=o,this._outputType=t,this._mimeType=n,r.checkSupport(o),this._worker=e.pipe(new i(o)),e.lock()}catch(e){this._worker=new a(\"error\"),this._worker.error(e)}}d.prototype={accumulate:function(e){return l(this,e)},on:function(e,t){var n=this;return\"data\"===e?this._worker.on(e,(function(e){t.call(n,e.data,e.meta)})):this._worker.on(e,(function(){r.delay(t,arguments,n)})),this},resume:function(){return r.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(e){if(r.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new u(this,{objectMode:\"nodebuffer\"!==this._outputType},e)}},t.exports=d},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(e,t,n){if(n.base64=!0,n.array=!0,n.string=!0,n.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,n.nodebuffer=\"undefined\"!=typeof Buffer,n.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)n.blob=!1;else{var r=new ArrayBuffer(0);try{n.blob=0===new Blob([r],{type:\"application/zip\"}).size}catch(e){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);i.append(r),n.blob=0===i.getBlob(\"application/zip\").size}catch(e){n.blob=!1}}}try{n.nodestream=!!e(\"readable-stream\").Readable}catch(e){n.nodestream=!1}},{\"readable-stream\":16}],31:[function(e,t,n){for(var r=e(\"./utils\"),i=e(\"./support\"),a=e(\"./nodejsUtils\"),o=e(\"./stream/GenericWorker\"),s=new Array(256),c=0;c<256;c++)s[c]=c>=252?6:c>=248?5:c>=240?4:c>=224?3:c>=192?2:1;function u(){o.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){o.call(this,\"utf-8 encode\")}s[254]=s[254]=1,n.utf8encode=function(e){return i.nodebuffer?a.newBufferFrom(e,\"utf-8\"):function(e){var t,n,r,a,o,s=e.length,c=0;for(a=0;a<s;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(r=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(r-56320),a++),c+=n<128?1:n<2048?2:n<65536?3:4;for(t=i.uint8array?new Uint8Array(c):new Array(c),o=0,a=0;o<c;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(r=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(r-56320),a++),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t}(e)},n.utf8decode=function(e){return i.nodebuffer?r.transformTo(\"nodebuffer\",e).toString(\"utf-8\"):function(e){var t,n,i,a,o=e.length,c=new Array(2*o);for(n=0,t=0;t<o;)if((i=e[t++])<128)c[n++]=i;else if((a=s[i])>4)c[n++]=65533,t+=a-1;else{for(i&=2===a?31:3===a?15:7;a>1&&t<o;)i=i<<6|63&e[t++],a--;a>1?c[n++]=65533:i<65536?c[n++]=i:(i-=65536,c[n++]=55296|i>>10&1023,c[n++]=56320|1023&i)}return c.length!==n&&(c.subarray?c=c.subarray(0,n):c.length=n),r.applyFromCharCode(c)}(e=r.transformTo(i.uint8array?\"uint8array\":\"array\",e))},r.inherits(u,o),u.prototype.processChunk=function(e){var t=r.transformTo(i.uint8array?\"uint8array\":\"array\",e.data);if(this.leftOver&&this.leftOver.length){if(i.uint8array){var a=t;(t=new Uint8Array(a.length+this.leftOver.length)).set(this.leftOver,0),t.set(a,this.leftOver.length)}else t=this.leftOver.concat(t);this.leftOver=null}var o=function(e,t){var n;for((t=t||e.length)>e.length&&(t=e.length),n=t-1;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+s[e[n]]>t?n:t}(t),c=t;o!==t.length&&(i.uint8array?(c=t.subarray(0,o),this.leftOver=t.subarray(o,t.length)):(c=t.slice(0,o),this.leftOver=t.slice(o,t.length))),this.push({data:n.utf8decode(c),meta:e.meta})},u.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:n.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},n.Utf8DecodeWorker=u,r.inherits(l,o),l.prototype.processChunk=function(e){this.push({data:n.utf8encode(e.data),meta:e.meta})},n.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(e,t,n){var r=e(\"./support\"),i=e(\"./base64\"),a=e(\"./nodejsUtils\"),o=e(\"set-immediate-shim\"),s=e(\"./external\");function c(e){return e}function u(e,t){for(var n=0;n<e.length;++n)t[n]=255&e.charCodeAt(n);return t}n.newBlob=function(e,t){n.checkSupport(\"blob\");try{return new Blob([e],{type:t})}catch(n){try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return r.append(e),r.getBlob(t)}catch(e){throw new Error(\"Bug : can't construct the Blob.\")}}};var l={stringifyByChunk:function(e,t,n){var r=[],i=0,a=e.length;if(a<=n)return String.fromCharCode.apply(null,e);for(;i<a;)\"array\"===t||\"nodebuffer\"===t?r.push(String.fromCharCode.apply(null,e.slice(i,Math.min(i+n,a)))):r.push(String.fromCharCode.apply(null,e.subarray(i,Math.min(i+n,a)))),i+=n;return r.join(\"\")},stringifyByChar:function(e){for(var t=\"\",n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return t},applyCanBeUsed:{uint8array:function(){try{return r.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(e){return!1}}(),nodebuffer:function(){try{return r.nodebuffer&&1===String.fromCharCode.apply(null,a.allocBuffer(1)).length}catch(e){return!1}}()}};function d(e){var t=65536,r=n.getTypeOf(e),i=!0;if(\"uint8array\"===r?i=l.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(i=l.applyCanBeUsed.nodebuffer),i)for(;t>1;)try{return l.stringifyByChunk(e,r,t)}catch(e){t=Math.floor(t/2)}return l.stringifyByChar(e)}function f(e,t){for(var n=0;n<e.length;n++)t[n]=e[n];return t}n.applyFromCharCode=d;var p={};p.string={string:c,array:function(e){return u(e,new Array(e.length))},arraybuffer:function(e){return p.string.uint8array(e).buffer},uint8array:function(e){return u(e,new Uint8Array(e.length))},nodebuffer:function(e){return u(e,a.allocBuffer(e.length))}},p.array={string:d,array:c,arraybuffer:function(e){return new Uint8Array(e).buffer},uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return a.newBufferFrom(e)}},p.arraybuffer={string:function(e){return d(new Uint8Array(e))},array:function(e){return f(new Uint8Array(e),new Array(e.byteLength))},arraybuffer:c,uint8array:function(e){return new Uint8Array(e)},nodebuffer:function(e){return a.newBufferFrom(new Uint8Array(e))}},p.uint8array={string:d,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return e.buffer},uint8array:c,nodebuffer:function(e){return a.newBufferFrom(e)}},p.nodebuffer={string:d,array:function(e){return f(e,new Array(e.length))},arraybuffer:function(e){return p.nodebuffer.uint8array(e).buffer},uint8array:function(e){return f(e,new Uint8Array(e.length))},nodebuffer:c},n.transformTo=function(e,t){if(t||(t=\"\"),!e)return t;n.checkSupport(e);var r=n.getTypeOf(t);return p[r][e](t)},n.getTypeOf=function(e){return\"string\"==typeof e?\"string\":\"[object Array]\"===Object.prototype.toString.call(e)?\"array\":r.nodebuffer&&a.isBuffer(e)?\"nodebuffer\":r.uint8array&&e instanceof Uint8Array?\"uint8array\":r.arraybuffer&&e instanceof ArrayBuffer?\"arraybuffer\":void 0},n.checkSupport=function(e){if(!r[e.toLowerCase()])throw new Error(e+\" is not supported by this platform\")},n.MAX_VALUE_16BITS=65535,n.MAX_VALUE_32BITS=-1,n.pretty=function(e){var t,n,r=\"\";for(n=0;n<(e||\"\").length;n++)r+=\"\\\\x\"+((t=e.charCodeAt(n))<16?\"0\":\"\")+t.toString(16).toUpperCase();return r},n.delay=function(e,t,n){o((function(){e.apply(n||null,t||[])}))},n.inherits=function(e,t){var n=function(){};n.prototype=t.prototype,e.prototype=new n},n.extend=function(){var e,t,n={};for(e=0;e<arguments.length;e++)for(t in arguments[e])arguments[e].hasOwnProperty(t)&&void 0===n[t]&&(n[t]=arguments[e][t]);return n},n.prepareContent=function(e,t,a,o,c){return s.Promise.resolve(t).then((function(e){return r.blob&&(e instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(e)))&&\"undefined\"!=typeof FileReader?new s.Promise((function(t,n){var r=new FileReader;r.onload=function(e){t(e.target.result)},r.onerror=function(e){n(e.target.error)},r.readAsArrayBuffer(e)})):e})).then((function(t){var l,d=n.getTypeOf(t);return d?(\"arraybuffer\"===d?t=n.transformTo(\"uint8array\",t):\"string\"===d&&(c?t=i.decode(t):a&&!0!==o&&(t=u(l=t,r.uint8array?new Uint8Array(l.length):new Array(l.length)))),t):s.Promise.reject(new Error(\"Can't read the data of '\"+e+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))}))}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,\"set-immediate-shim\":54}],33:[function(e,t,n){var r=e(\"./reader/readerFor\"),i=e(\"./utils\"),a=e(\"./signature\"),o=e(\"./zipEntry\"),s=(e(\"./utf8\"),e(\"./support\"));function c(e){this.files=[],this.loadOptions=e}c.prototype={checkSignature:function(e){if(!this.reader.readAndCheckSignature(e)){this.reader.index-=4;var t=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+i.pretty(t)+\", expected \"+i.pretty(e)+\")\")}},isSignature:function(e,t){var n=this.reader.index;this.reader.setIndex(e);var r=this.reader.readString(4)===t;return this.reader.setIndex(n),r},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var e=this.reader.readData(this.zipCommentLength),t=s.uint8array?\"uint8array\":\"array\",n=i.transformTo(t,e);this.zipComment=this.loadOptions.decodeFileName(n)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var e,t,n,r=this.zip64EndOfCentralSize-44;0<r;)e=this.reader.readInt(2),t=this.reader.readInt(4),n=this.reader.readData(t),this.zip64ExtensibleData[e]={id:e,length:t,value:n}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),this.disksCount>1)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var e,t;for(e=0;e<this.files.length;e++)t=this.files[e],this.reader.setIndex(t.localHeaderOffset),this.checkSignature(a.LOCAL_FILE_HEADER),t.readLocalPart(this.reader),t.handleUTF8(),t.processAttributes()},readCentralDir:function(){var e;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(a.CENTRAL_FILE_HEADER);)(e=new o({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(e);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var e=this.reader.lastIndexOfSignature(a.CENTRAL_DIRECTORY_END);if(e<0)throw this.isSignature(0,a.LOCAL_FILE_HEADER)?new Error(\"Corrupted zip: can't find end of central directory\"):new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\");this.reader.setIndex(e);var t=e;if(this.checkSignature(a.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===i.MAX_VALUE_16BITS||this.diskWithCentralDirStart===i.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===i.MAX_VALUE_16BITS||this.centralDirRecords===i.MAX_VALUE_16BITS||this.centralDirSize===i.MAX_VALUE_32BITS||this.centralDirOffset===i.MAX_VALUE_32BITS){if(this.zip64=!0,(e=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(e),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,a.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(a.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var n=this.centralDirOffset+this.centralDirSize;this.zip64&&(n+=20,n+=12+this.zip64EndOfCentralSize);var r=t-n;if(r>0)this.isSignature(t,a.CENTRAL_FILE_HEADER)||(this.reader.zero=r);else if(r<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(r)+\" bytes.\")},prepareReader:function(e){this.reader=r(e)},load:function(e){this.prepareReader(e),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},t.exports=c},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utf8\":31,\"./utils\":32,\"./zipEntry\":34}],34:[function(e,t,n){var r=e(\"./reader/readerFor\"),i=e(\"./utils\"),a=e(\"./compressedObject\"),o=e(\"./crc32\"),s=e(\"./utf8\"),c=e(\"./compressions\"),u=e(\"./support\");function l(e,t){this.options=e,this.loadOptions=t}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(e){var t,n;if(e.skip(22),this.fileNameLength=e.readInt(2),n=e.readInt(2),this.fileName=e.readData(this.fileNameLength),e.skip(n),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(t=function(e){for(var t in c)if(c.hasOwnProperty(t)&&c[t].magic===e)return c[t];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+i.pretty(this.compressionMethod)+\" unknown (inner file : \"+i.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new a(this.compressedSize,this.uncompressedSize,this.crc32,t,e.readData(this.compressedSize))},readCentralPart:function(e){this.versionMadeBy=e.readInt(2),e.skip(2),this.bitFlag=e.readInt(2),this.compressionMethod=e.readString(2),this.date=e.readDate(),this.crc32=e.readInt(4),this.compressedSize=e.readInt(4),this.uncompressedSize=e.readInt(4);var t=e.readInt(2);if(this.extraFieldsLength=e.readInt(2),this.fileCommentLength=e.readInt(2),this.diskNumberStart=e.readInt(2),this.internalFileAttributes=e.readInt(2),this.externalFileAttributes=e.readInt(4),this.localHeaderOffset=e.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");e.skip(t),this.readExtraFields(e),this.parseZIP64ExtraField(e),this.fileComment=e.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var e=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0===e&&(this.dosPermissions=63&this.externalFileAttributes),3===e&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(e){if(this.extraFields[1]){var t=r(this.extraFields[1].value);this.uncompressedSize===i.MAX_VALUE_32BITS&&(this.uncompressedSize=t.readInt(8)),this.compressedSize===i.MAX_VALUE_32BITS&&(this.compressedSize=t.readInt(8)),this.localHeaderOffset===i.MAX_VALUE_32BITS&&(this.localHeaderOffset=t.readInt(8)),this.diskNumberStart===i.MAX_VALUE_32BITS&&(this.diskNumberStart=t.readInt(4))}},readExtraFields:function(e){var t,n,r,i=e.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});e.index+4<i;)t=e.readInt(2),n=e.readInt(2),r=e.readData(n),this.extraFields[t]={id:t,length:n,value:r};e.setIndex(i)},handleUTF8:function(){var e=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=s.utf8decode(this.fileName),this.fileCommentStr=s.utf8decode(this.fileComment);else{var t=this.findExtraFieldUnicodePath();if(null!==t)this.fileNameStr=t;else{var n=i.transformTo(e,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(n)}var r=this.findExtraFieldUnicodeComment();if(null!==r)this.fileCommentStr=r;else{var a=i.transformTo(e,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(a)}}},findExtraFieldUnicodePath:function(){var e=this.extraFields[28789];if(e){var t=r(e.value);return 1!==t.readInt(1)||o(this.fileName)!==t.readInt(4)?null:s.utf8decode(t.readData(e.length-5))}return null},findExtraFieldUnicodeComment:function(){var e=this.extraFields[25461];if(e){var t=r(e.value);return 1!==t.readInt(1)||o(this.fileComment)!==t.readInt(4)?null:s.utf8decode(t.readData(e.length-5))}return null}},t.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(e,t,n){var r=e(\"./stream/StreamHelper\"),i=e(\"./stream/DataWorker\"),a=e(\"./utf8\"),o=e(\"./compressedObject\"),s=e(\"./stream/GenericWorker\"),c=function(e,t,n){this.name=e,this.dir=n.dir,this.date=n.date,this.comment=n.comment,this.unixPermissions=n.unixPermissions,this.dosPermissions=n.dosPermissions,this._data=t,this._dataBinary=n.binary,this.options={compression:n.compression,compressionOptions:n.compressionOptions}};c.prototype={internalStream:function(e){var t=null,n=\"string\";try{if(!e)throw new Error(\"No output type specified.\");var i=\"string\"===(n=e.toLowerCase())||\"text\"===n;\"binarystring\"!==n&&\"text\"!==n||(n=\"string\"),t=this._decompressWorker();var o=!this._dataBinary;o&&!i&&(t=t.pipe(new a.Utf8EncodeWorker)),!o&&i&&(t=t.pipe(new a.Utf8DecodeWorker))}catch(e){(t=new s(\"error\")).error(e)}return new r(t,n,\"\")},async:function(e,t){return this.internalStream(e).accumulate(t)},nodeStream:function(e,t){return this.internalStream(e||\"nodebuffer\").toNodejsStream(t)},_compressWorker:function(e,t){if(this._data instanceof o&&this._data.compression.magic===e.magic)return this._data.getCompressedWorker();var n=this._decompressWorker();return this._dataBinary||(n=n.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(n,e,t)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof s?this._data:new i(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},d=0;d<u.length;d++)c.prototype[u[d]]=l;t.exports=c},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(t,n,r){(function(e){var t,r,i=e.MutationObserver||e.WebKitMutationObserver;if(i){var a=0,o=new i(l),s=e.document.createTextNode(\"\");o.observe(s,{characterData:!0}),t=function(){s.data=a=++a%2}}else if(e.setImmediate||void 0===e.MessageChannel)t=\"document\"in e&&\"onreadystatechange\"in e.document.createElement(\"script\")?function(){var t=e.document.createElement(\"script\");t.onreadystatechange=function(){l(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(l,0)};else{var c=new e.MessageChannel;c.port1.onmessage=l,t=function(){c.port2.postMessage(0)}}var u=[];function l(){var e,t;r=!0;for(var n=u.length;n;){for(t=u,u=[],e=-1;++e<n;)t[e]();n=u.length}r=!1}n.exports=function(e){1!==u.push(e)||r||t()}}).call(this,void 0!==e?e:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(e,t,n){var r=e(\"immediate\");function i(){}var a={},o=[\"REJECTED\"],s=[\"FULFILLED\"],c=[\"PENDING\"];function u(e){if(\"function\"!=typeof e)throw new TypeError(\"resolver must be a function\");this.state=c,this.queue=[],this.outcome=void 0,e!==i&&p(this,e)}function l(e,t,n){this.promise=e,\"function\"==typeof t&&(this.onFulfilled=t,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof n&&(this.onRejected=n,this.callRejected=this.otherCallRejected)}function d(e,t,n){r((function(){var r;try{r=t(n)}catch(t){return a.reject(e,t)}r===e?a.reject(e,new TypeError(\"Cannot resolve promise with itself\")):a.resolve(e,r)}))}function f(e){var t=e&&e.then;if(e&&(\"object\"==typeof e||\"function\"==typeof e)&&\"function\"==typeof t)return function(){t.apply(e,arguments)}}function p(e,t){var n=!1;function r(t){n||(n=!0,a.reject(e,t))}function i(t){n||(n=!0,a.resolve(e,t))}var o=m((function(){t(i,r)}));\"error\"===o.status&&r(o.value)}function m(e,t){var n={};try{n.value=e(t),n.status=\"success\"}catch(e){n.status=\"error\",n.value=e}return n}t.exports=u,u.prototype.finally=function(e){if(\"function\"!=typeof e)return this;var t=this.constructor;return this.then((function(n){return t.resolve(e()).then((function(){return n}))}),(function(n){return t.resolve(e()).then((function(){throw n}))}))},u.prototype.catch=function(e){return this.then(null,e)},u.prototype.then=function(e,t){if(\"function\"!=typeof e&&this.state===s||\"function\"!=typeof t&&this.state===o)return this;var n=new this.constructor(i);return this.state!==c?d(n,this.state===s?e:t,this.outcome):this.queue.push(new l(n,e,t)),n},l.prototype.callFulfilled=function(e){a.resolve(this.promise,e)},l.prototype.otherCallFulfilled=function(e){d(this.promise,this.onFulfilled,e)},l.prototype.callRejected=function(e){a.reject(this.promise,e)},l.prototype.otherCallRejected=function(e){d(this.promise,this.onRejected,e)},a.resolve=function(e,t){var n=m(f,t);if(\"error\"===n.status)return a.reject(e,n.value);var r=n.value;if(r)p(e,r);else{e.state=s,e.outcome=t;for(var i=-1,o=e.queue.length;++i<o;)e.queue[i].callFulfilled(t)}return e},a.reject=function(e,t){e.state=o,e.outcome=t;for(var n=-1,r=e.queue.length;++n<r;)e.queue[n].callRejected(t);return e},u.resolve=function(e){return e instanceof this?e:a.resolve(new this(i),e)},u.reject=function(e){var t=new this(i);return a.reject(t,e)},u.all=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,r=!1;if(!n)return this.resolve([]);for(var o=new Array(n),s=0,c=-1,u=new this(i);++c<n;)l(e[c],c);return u;function l(e,i){t.resolve(e).then((function(e){o[i]=e,++s!==n||r||(r=!0,a.resolve(u,o))}),(function(e){r||(r=!0,a.reject(u,e))}))}},u.race=function(e){var t=this;if(\"[object Array]\"!==Object.prototype.toString.call(e))return this.reject(new TypeError(\"must be an array\"));var n=e.length,r=!1;if(!n)return this.resolve([]);for(var o,s=-1,c=new this(i);++s<n;)o=e[s],t.resolve(o).then((function(e){r||(r=!0,a.resolve(c,e))}),(function(e){r||(r=!0,a.reject(c,e))}));return c}},{immediate:36}],38:[function(e,t,n){var r={};(0,e(\"./lib/utils/common\").assign)(r,e(\"./lib/deflate\"),e(\"./lib/inflate\"),e(\"./lib/zlib/constants\")),t.exports=r},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(e,t,n){var r=e(\"./zlib/deflate\"),i=e(\"./utils/common\"),a=e(\"./utils/strings\"),o=e(\"./zlib/messages\"),s=e(\"./zlib/zstream\"),c=Object.prototype.toString;function u(e){if(!(this instanceof u))return new u(e);this.options=i.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:\"\"},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var n=r.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(0!==n)throw new Error(o[n]);if(t.header&&r.deflateSetHeader(this.strm,t.header),t.dictionary){var l;if(l=\"string\"==typeof t.dictionary?a.string2buf(t.dictionary):\"[object ArrayBuffer]\"===c.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,0!==(n=r.deflateSetDictionary(this.strm,l)))throw new Error(o[n]);this._dict_set=!0}}function l(e,t){var n=new u(t);if(n.push(e,!0),n.err)throw n.msg||o[n.err];return n.result}u.prototype.push=function(e,t){var n,o,s=this.strm,u=this.options.chunkSize;if(this.ended)return!1;o=t===~~t?t:!0===t?4:0,\"string\"==typeof e?s.input=a.string2buf(e):\"[object ArrayBuffer]\"===c.call(e)?s.input=new Uint8Array(e):s.input=e,s.next_in=0,s.avail_in=s.input.length;do{if(0===s.avail_out&&(s.output=new i.Buf8(u),s.next_out=0,s.avail_out=u),1!==(n=r.deflate(s,o))&&0!==n)return this.onEnd(n),this.ended=!0,!1;0!==s.avail_out&&(0!==s.avail_in||4!==o&&2!==o)||(\"string\"===this.options.to?this.onData(a.buf2binstring(i.shrinkBuf(s.output,s.next_out))):this.onData(i.shrinkBuf(s.output,s.next_out)))}while((s.avail_in>0||0===s.avail_out)&&1!==n);return 4===o?(n=r.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,0===n):2!==o||(this.onEnd(0),s.avail_out=0,!0)},u.prototype.onData=function(e){this.chunks.push(e)},u.prototype.onEnd=function(e){0===e&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},n.Deflate=u,n.deflate=l,n.deflateRaw=function(e,t){return(t=t||{}).raw=!0,l(e,t)},n.gzip=function(e,t){return(t=t||{}).gzip=!0,l(e,t)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(e,t,n){var r=e(\"./zlib/inflate\"),i=e(\"./utils/common\"),a=e(\"./utils/strings\"),o=e(\"./zlib/constants\"),s=e(\"./zlib/messages\"),c=e(\"./zlib/zstream\"),u=e(\"./zlib/gzheader\"),l=Object.prototype.toString;function d(e){if(!(this instanceof d))return new d(e);this.options=i.assign({chunkSize:16384,windowBits:0,to:\"\"},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new c,this.strm.avail_out=0;var n=r.inflateInit2(this.strm,t.windowBits);if(n!==o.Z_OK)throw new Error(s[n]);this.header=new u,r.inflateGetHeader(this.strm,this.header)}function f(e,t){var n=new d(t);if(n.push(e,!0),n.err)throw n.msg||s[n.err];return n.result}d.prototype.push=function(e,t){var n,s,c,u,d,f,p=this.strm,m=this.options.chunkSize,h=this.options.dictionary,y=!1;if(this.ended)return!1;s=t===~~t?t:!0===t?o.Z_FINISH:o.Z_NO_FLUSH,\"string\"==typeof e?p.input=a.binstring2buf(e):\"[object ArrayBuffer]\"===l.call(e)?p.input=new Uint8Array(e):p.input=e,p.next_in=0,p.avail_in=p.input.length;do{if(0===p.avail_out&&(p.output=new i.Buf8(m),p.next_out=0,p.avail_out=m),(n=r.inflate(p,o.Z_NO_FLUSH))===o.Z_NEED_DICT&&h&&(f=\"string\"==typeof h?a.string2buf(h):\"[object ArrayBuffer]\"===l.call(h)?new Uint8Array(h):h,n=r.inflateSetDictionary(this.strm,f)),n===o.Z_BUF_ERROR&&!0===y&&(n=o.Z_OK,y=!1),n!==o.Z_STREAM_END&&n!==o.Z_OK)return this.onEnd(n),this.ended=!0,!1;p.next_out&&(0!==p.avail_out&&n!==o.Z_STREAM_END&&(0!==p.avail_in||s!==o.Z_FINISH&&s!==o.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(c=a.utf8border(p.output,p.next_out),u=p.next_out-c,d=a.buf2string(p.output,c),p.next_out=u,p.avail_out=m-u,u&&i.arraySet(p.output,p.output,c,u,0),this.onData(d)):this.onData(i.shrinkBuf(p.output,p.next_out)))),0===p.avail_in&&0===p.avail_out&&(y=!0)}while((p.avail_in>0||0===p.avail_out)&&n!==o.Z_STREAM_END);return n===o.Z_STREAM_END&&(s=o.Z_FINISH),s===o.Z_FINISH?(n=r.inflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===o.Z_OK):s!==o.Z_SYNC_FLUSH||(this.onEnd(o.Z_OK),p.avail_out=0,!0)},d.prototype.onData=function(e){this.chunks.push(e)},d.prototype.onEnd=function(e){e===o.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=i.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},n.Inflate=d,n.inflate=f,n.inflateRaw=function(e,t){return(t=t||{}).raw=!0,f(e,t)},n.ungzip=f},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(e,t,n){var r=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;n.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var n=t.shift();if(n){if(\"object\"!=typeof n)throw new TypeError(n+\"must be non-object\");for(var r in n)n.hasOwnProperty(r)&&(e[r]=n[r])}}return e},n.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var i={arraySet:function(e,t,n,r,i){if(t.subarray&&e.subarray)e.set(t.subarray(n,n+r),i);else for(var a=0;a<r;a++)e[i+a]=t[n+a]},flattenChunks:function(e){var t,n,r,i,a,o;for(r=0,t=0,n=e.length;t<n;t++)r+=e[t].length;for(o=new Uint8Array(r),i=0,t=0,n=e.length;t<n;t++)a=e[t],o.set(a,i),i+=a.length;return o}},a={arraySet:function(e,t,n,r,i){for(var a=0;a<r;a++)e[i+a]=t[n+a]},flattenChunks:function(e){return[].concat.apply([],e)}};n.setTyped=function(e){e?(n.Buf8=Uint8Array,n.Buf16=Uint16Array,n.Buf32=Int32Array,n.assign(n,i)):(n.Buf8=Array,n.Buf16=Array,n.Buf32=Array,n.assign(n,a))},n.setTyped(r)},{}],42:[function(e,t,n){var r=e(\"./common\"),i=!0,a=!0;try{String.fromCharCode.apply(null,[0])}catch(e){i=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){a=!1}for(var o=new r.Buf8(256),s=0;s<256;s++)o[s]=s>=252?6:s>=248?5:s>=240?4:s>=224?3:s>=192?2:1;function c(e,t){if(t<65537&&(e.subarray&&a||!e.subarray&&i))return String.fromCharCode.apply(null,r.shrinkBuf(e,t));for(var n=\"\",o=0;o<t;o++)n+=String.fromCharCode(e[o]);return n}o[254]=o[254]=1,n.string2buf=function(e){var t,n,i,a,o,s=e.length,c=0;for(a=0;a<s;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(i=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(i-56320),a++),c+=n<128?1:n<2048?2:n<65536?3:4;for(t=new r.Buf8(c),o=0,a=0;o<c;a++)55296==(64512&(n=e.charCodeAt(a)))&&a+1<s&&56320==(64512&(i=e.charCodeAt(a+1)))&&(n=65536+(n-55296<<10)+(i-56320),a++),n<128?t[o++]=n:n<2048?(t[o++]=192|n>>>6,t[o++]=128|63&n):n<65536?(t[o++]=224|n>>>12,t[o++]=128|n>>>6&63,t[o++]=128|63&n):(t[o++]=240|n>>>18,t[o++]=128|n>>>12&63,t[o++]=128|n>>>6&63,t[o++]=128|63&n);return t},n.buf2binstring=function(e){return c(e,e.length)},n.binstring2buf=function(e){for(var t=new r.Buf8(e.length),n=0,i=t.length;n<i;n++)t[n]=e.charCodeAt(n);return t},n.buf2string=function(e,t){var n,r,i,a,s=t||e.length,u=new Array(2*s);for(r=0,n=0;n<s;)if((i=e[n++])<128)u[r++]=i;else if((a=o[i])>4)u[r++]=65533,n+=a-1;else{for(i&=2===a?31:3===a?15:7;a>1&&n<s;)i=i<<6|63&e[n++],a--;a>1?u[r++]=65533:i<65536?u[r++]=i:(i-=65536,u[r++]=55296|i>>10&1023,u[r++]=56320|1023&i)}return c(u,r)},n.utf8border=function(e,t){var n;for((t=t||e.length)>e.length&&(t=e.length),n=t-1;n>=0&&128==(192&e[n]);)n--;return n<0||0===n?t:n+o[e[n]]>t?n:t}},{\"./common\":41}],43:[function(e,t,n){t.exports=function(e,t,n,r){for(var i=65535&e|0,a=e>>>16&65535|0,o=0;0!==n;){n-=o=n>2e3?2e3:n;do{a=a+(i=i+t[r++]|0)|0}while(--o);i%=65521,a%=65521}return i|a<<16|0}},{}],44:[function(e,t,n){t.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(e,t,n){var r=function(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=1&e?3988292384^e>>>1:e>>>1;t[n]=e}return t}();t.exports=function(e,t,n,i){var a=r,o=i+n;e^=-1;for(var s=i;s<o;s++)e=e>>>8^a[255&(e^t[s])];return-1^e}},{}],46:[function(e,t,n){var r,i=e(\"../utils/common\"),a=e(\"./trees\"),o=e(\"./adler32\"),s=e(\"./crc32\"),c=e(\"./messages\");function u(e,t){return e.msg=c[t],t}function l(e){return(e<<1)-(e>4?9:0)}function d(e){for(var t=e.length;--t>=0;)e[t]=0}function f(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),0!==n&&(i.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,0===t.pending&&(t.pending_out=0))}function p(e,t){a._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,f(e.strm)}function m(e,t){e.pending_buf[e.pending++]=t}function h(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function y(e,t,n,r){var a=e.avail_in;return a>r&&(a=r),0===a?0:(e.avail_in-=a,i.arraySet(t,e.input,e.next_in,a,n),1===e.state.wrap?e.adler=o(e.adler,t,a,n):2===e.state.wrap&&(e.adler=s(e.adler,t,a,n)),e.next_in+=a,e.total_in+=a,a)}function v(e,t){var n,r,i=e.max_chain_length,a=e.strstart,o=e.prev_length,s=e.nice_match,c=e.strstart>e.w_size-262?e.strstart-(e.w_size-262):0,u=e.window,l=e.w_mask,d=e.prev,f=e.strstart+258,p=u[a+o-1],m=u[a+o];e.prev_length>=e.good_match&&(i>>=2),s>e.lookahead&&(s=e.lookahead);do{if(u[(n=t)+o]===m&&u[n+o-1]===p&&u[n]===u[a]&&u[++n]===u[a+1]){a+=2,n++;do{}while(u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&u[++a]===u[++n]&&a<f);if(r=258-(f-a),a=f-258,r>o){if(e.match_start=t,o=r,r>=s)break;p=u[a+o-1],m=u[a+o]}}}while((t=d[t&l])>c&&0!=--i);return o<=e.lookahead?o:e.lookahead}function g(e){var t,n,r,a,o,s=e.w_size;do{if(a=e.window_size-e.lookahead-e.strstart,e.strstart>=s+(s-262)){i.arraySet(e.window,e.window,s,s,0),e.match_start-=s,e.strstart-=s,e.block_start-=s,t=n=e.hash_size;do{r=e.head[--t],e.head[t]=r>=s?r-s:0}while(--n);t=n=s;do{r=e.prev[--t],e.prev[t]=r>=s?r-s:0}while(--n);a+=s}if(0===e.strm.avail_in)break;if(n=y(e.strm,e.window,e.strstart+e.lookahead,a),e.lookahead+=n,e.lookahead+e.insert>=3)for(o=e.strstart-e.insert,e.ins_h=e.window[o],e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[o+3-1])&e.hash_mask,e.prev[o&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=o,o++,e.insert--,!(e.lookahead+e.insert<3)););}while(e.lookahead<262&&0!==e.strm.avail_in)}function b(e,t){for(var n,r;;){if(e.lookahead<262){if(g(e),e.lookahead<262&&0===t)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==n&&e.strstart-n<=e.w_size-262&&(e.match_length=v(e,n)),e.match_length>=3)if(r=a._tr_tally(e,e.strstart-e.match_start,e.match_length-3),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=3){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=e.strstart<2?e.strstart:2,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}function x(e,t){for(var n,r,i;;){if(e.lookahead<262){if(g(e),e.lookahead<262&&0===t)return 1;if(0===e.lookahead)break}if(n=0,e.lookahead>=3&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=2,0!==n&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-262&&(e.match_length=v(e,n),e.match_length<=5&&(1===e.strategy||3===e.match_length&&e.strstart-e.match_start>4096)&&(e.match_length=2)),e.prev_length>=3&&e.match_length<=e.prev_length){i=e.strstart+e.lookahead-3,r=a._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-3),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=i&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+3-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=2,e.strstart++,r&&(p(e,!1),0===e.strm.avail_out))return 1}else if(e.match_available){if((r=a._tr_tally(e,0,e.window[e.strstart-1]))&&p(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return 1}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=a._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<2?e.strstart:2,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}function D(e,t,n,r,i){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=i}function _(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=8,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new i.Buf16(1146),this.dyn_dtree=new i.Buf16(122),this.bl_tree=new i.Buf16(78),d(this.dyn_ltree),d(this.dyn_dtree),d(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new i.Buf16(16),this.heap=new i.Buf16(573),d(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new i.Buf16(573),d(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function w(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=2,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?42:113,e.adler=2===t.wrap?0:1,t.last_flush=0,a._tr_init(t),0):u(e,-2)}function N(e){var t,n=w(e);return 0===n&&((t=e.state).window_size=2*t.w_size,d(t.head),t.max_lazy_match=r[t.level].max_lazy,t.good_match=r[t.level].good_length,t.nice_match=r[t.level].nice_length,t.max_chain_length=r[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0),n}function M(e,t,n,r,a,o){if(!e)return-2;var s=1;if(-1===t&&(t=6),r<0?(s=0,r=-r):r>15&&(s=2,r-=16),a<1||a>9||8!==n||r<8||r>15||t<0||t>9||o<0||o>4)return u(e,-2);8===r&&(r=9);var c=new _;return e.state=c,c.strm=e,c.wrap=s,c.gzhead=null,c.w_bits=r,c.w_size=1<<c.w_bits,c.w_mask=c.w_size-1,c.hash_bits=a+7,c.hash_size=1<<c.hash_bits,c.hash_mask=c.hash_size-1,c.hash_shift=~~((c.hash_bits+3-1)/3),c.window=new i.Buf8(2*c.w_size),c.head=new i.Buf16(c.hash_size),c.prev=new i.Buf16(c.w_size),c.lit_bufsize=1<<a+6,c.pending_buf_size=4*c.lit_bufsize,c.pending_buf=new i.Buf8(c.pending_buf_size),c.d_buf=1*c.lit_bufsize,c.l_buf=3*c.lit_bufsize,c.level=t,c.strategy=o,c.method=n,N(e)}r=[new D(0,0,0,0,(function(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(g(e),0===e.lookahead&&0===t)return 1;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((0===e.strstart||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,p(e,!1),0===e.strm.avail_out))return 1;if(e.strstart-e.block_start>=e.w_size-262&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(p(e,!0),0===e.strm.avail_out?3:4):(e.strstart>e.block_start&&(p(e,!1),e.strm.avail_out),1)})),new D(4,4,8,4,b),new D(4,5,16,8,b),new D(4,6,32,32,b),new D(4,4,16,16,x),new D(8,16,32,32,x),new D(8,16,128,128,x),new D(8,32,128,256,x),new D(32,128,258,1024,x),new D(32,258,258,4096,x)],n.deflateInit=function(e,t){return M(e,t,8,15,8,0)},n.deflateInit2=M,n.deflateReset=N,n.deflateResetKeep=w,n.deflateSetHeader=function(e,t){return e&&e.state?2!==e.state.wrap?-2:(e.state.gzhead=t,0):-2},n.deflate=function(e,t){var n,i,o,c;if(!e||!e.state||t>5||t<0)return e?u(e,-2):-2;if(i=e.state,!e.output||!e.input&&0!==e.avail_in||666===i.status&&4!==t)return u(e,0===e.avail_out?-5:-2);if(i.strm=e,n=i.last_flush,i.last_flush=t,42===i.status)if(2===i.wrap)e.adler=0,m(i,31),m(i,139),m(i,8),i.gzhead?(m(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),m(i,255&i.gzhead.time),m(i,i.gzhead.time>>8&255),m(i,i.gzhead.time>>16&255),m(i,i.gzhead.time>>24&255),m(i,9===i.level?2:i.strategy>=2||i.level<2?4:0),m(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(m(i,255&i.gzhead.extra.length),m(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(e.adler=s(e.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(m(i,0),m(i,0),m(i,0),m(i,0),m(i,0),m(i,9===i.level?2:i.strategy>=2||i.level<2?4:0),m(i,3),i.status=113);else{var y=8+(i.w_bits-8<<4)<<8;y|=(i.strategy>=2||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(y|=32),y+=31-y%31,i.status=113,h(i,y),0!==i.strstart&&(h(i,e.adler>>>16),h(i,65535&e.adler)),e.adler=1}if(69===i.status)if(i.gzhead.extra){for(o=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),f(e),o=i.pending,i.pending!==i.pending_buf_size));)m(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){o=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),f(e),o=i.pending,i.pending===i.pending_buf_size)){c=1;break}c=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,m(i,c)}while(0!==c);i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),0===c&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){o=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),f(e),o=i.pending,i.pending===i.pending_buf_size)){c=1;break}c=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,m(i,c)}while(0!==c);i.gzhead.hcrc&&i.pending>o&&(e.adler=s(e.adler,i.pending_buf,i.pending-o,o)),0===c&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&f(e),i.pending+2<=i.pending_buf_size&&(m(i,255&e.adler),m(i,e.adler>>8&255),e.adler=0,i.status=113)):i.status=113),0!==i.pending){if(f(e),0===e.avail_out)return i.last_flush=-1,0}else if(0===e.avail_in&&l(t)<=l(n)&&4!==t)return u(e,-5);if(666===i.status&&0!==e.avail_in)return u(e,-5);if(0!==e.avail_in||0!==i.lookahead||0!==t&&666!==i.status){var v=2===i.strategy?function(e,t){for(var n;;){if(0===e.lookahead&&(g(e),0===e.lookahead)){if(0===t)return 1;break}if(e.match_length=0,n=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}(i,t):3===i.strategy?function(e,t){for(var n,r,i,o,s=e.window;;){if(e.lookahead<=258){if(g(e),e.lookahead<=258&&0===t)return 1;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=3&&e.strstart>0&&(r=s[i=e.strstart-1])===s[++i]&&r===s[++i]&&r===s[++i]){o=e.strstart+258;do{}while(r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&r===s[++i]&&i<o);e.match_length=258-(o-i),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=3?(n=a._tr_tally(e,1,e.match_length-3),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=a._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(p(e,!1),0===e.strm.avail_out))return 1}return e.insert=0,4===t?(p(e,!0),0===e.strm.avail_out?3:4):e.last_lit&&(p(e,!1),0===e.strm.avail_out)?1:2}(i,t):r[i.level].func(i,t);if(3!==v&&4!==v||(i.status=666),1===v||3===v)return 0===e.avail_out&&(i.last_flush=-1),0;if(2===v&&(1===t?a._tr_align(i):5!==t&&(a._tr_stored_block(i,0,0,!1),3===t&&(d(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),f(e),0===e.avail_out))return i.last_flush=-1,0}return 4!==t?0:i.wrap<=0?1:(2===i.wrap?(m(i,255&e.adler),m(i,e.adler>>8&255),m(i,e.adler>>16&255),m(i,e.adler>>24&255),m(i,255&e.total_in),m(i,e.total_in>>8&255),m(i,e.total_in>>16&255),m(i,e.total_in>>24&255)):(h(i,e.adler>>>16),h(i,65535&e.adler)),f(e),i.wrap>0&&(i.wrap=-i.wrap),0!==i.pending?0:1)},n.deflateEnd=function(e){var t;return e&&e.state?42!==(t=e.state.status)&&69!==t&&73!==t&&91!==t&&103!==t&&113!==t&&666!==t?u(e,-2):(e.state=null,113===t?u(e,-3):0):-2},n.deflateSetDictionary=function(e,t){var n,r,a,s,c,u,l,f,p=t.length;if(!e||!e.state)return-2;if(2===(s=(n=e.state).wrap)||1===s&&42!==n.status||n.lookahead)return-2;for(1===s&&(e.adler=o(e.adler,t,p,0)),n.wrap=0,p>=n.w_size&&(0===s&&(d(n.head),n.strstart=0,n.block_start=0,n.insert=0),f=new i.Buf8(n.w_size),i.arraySet(f,t,p-n.w_size,n.w_size,0),t=f,p=n.w_size),c=e.avail_in,u=e.next_in,l=e.input,e.avail_in=p,e.next_in=0,e.input=t,g(n);n.lookahead>=3;){r=n.strstart,a=n.lookahead-2;do{n.ins_h=(n.ins_h<<n.hash_shift^n.window[r+3-1])&n.hash_mask,n.prev[r&n.w_mask]=n.head[n.ins_h],n.head[n.ins_h]=r,r++}while(--a);n.strstart=r,n.lookahead=2,g(n)}return n.strstart+=n.lookahead,n.block_start=n.strstart,n.insert=n.lookahead,n.lookahead=0,n.match_length=n.prev_length=2,n.match_available=0,e.next_in=u,e.input=l,e.avail_in=c,n.wrap=s,0},n.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(e,t,n){t.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(e,t,n){t.exports=function(e,t){var n,r,i,a,o,s,c,u,l,d,f,p,m,h,y,v,g,b,x,D,_,w,N,M,O;n=e.state,r=e.next_in,M=e.input,i=r+(e.avail_in-5),a=e.next_out,O=e.output,o=a-(t-e.avail_out),s=a+(e.avail_out-257),c=n.dmax,u=n.wsize,l=n.whave,d=n.wnext,f=n.window,p=n.hold,m=n.bits,h=n.lencode,y=n.distcode,v=(1<<n.lenbits)-1,g=(1<<n.distbits)-1;e:do{m<15&&(p+=M[r++]<<m,m+=8,p+=M[r++]<<m,m+=8),b=h[p&v];t:for(;;){if(p>>>=x=b>>>24,m-=x,0==(x=b>>>16&255))O[a++]=65535&b;else{if(!(16&x)){if(0==(64&x)){b=h[(65535&b)+(p&(1<<x)-1)];continue t}if(32&x){n.mode=12;break e}e.msg=\"invalid literal/length code\",n.mode=30;break e}D=65535&b,(x&=15)&&(m<x&&(p+=M[r++]<<m,m+=8),D+=p&(1<<x)-1,p>>>=x,m-=x),m<15&&(p+=M[r++]<<m,m+=8,p+=M[r++]<<m,m+=8),b=y[p&g];n:for(;;){if(p>>>=x=b>>>24,m-=x,!(16&(x=b>>>16&255))){if(0==(64&x)){b=y[(65535&b)+(p&(1<<x)-1)];continue n}e.msg=\"invalid distance code\",n.mode=30;break e}if(_=65535&b,m<(x&=15)&&(p+=M[r++]<<m,(m+=8)<x&&(p+=M[r++]<<m,m+=8)),(_+=p&(1<<x)-1)>c){e.msg=\"invalid distance too far back\",n.mode=30;break e}if(p>>>=x,m-=x,_>(x=a-o)){if((x=_-x)>l&&n.sane){e.msg=\"invalid distance too far back\",n.mode=30;break e}if(w=0,N=f,0===d){if(w+=u-x,x<D){D-=x;do{O[a++]=f[w++]}while(--x);w=a-_,N=O}}else if(d<x){if(w+=u+d-x,(x-=d)<D){D-=x;do{O[a++]=f[w++]}while(--x);if(w=0,d<D){D-=x=d;do{O[a++]=f[w++]}while(--x);w=a-_,N=O}}}else if(w+=d-x,x<D){D-=x;do{O[a++]=f[w++]}while(--x);w=a-_,N=O}for(;D>2;)O[a++]=N[w++],O[a++]=N[w++],O[a++]=N[w++],D-=3;D&&(O[a++]=N[w++],D>1&&(O[a++]=N[w++]))}else{w=a-_;do{O[a++]=O[w++],O[a++]=O[w++],O[a++]=O[w++],D-=3}while(D>2);D&&(O[a++]=O[w++],D>1&&(O[a++]=O[w++]))}break}}break}}while(r<i&&a<s);r-=D=m>>3,p&=(1<<(m-=D<<3))-1,e.next_in=r,e.next_out=a,e.avail_in=r<i?i-r+5:5-(r-i),e.avail_out=a<s?s-a+257:257-(a-s),n.hold=p,n.bits=m}},{}],49:[function(e,t,n){var r=e(\"../utils/common\"),i=e(\"./adler32\"),a=e(\"./crc32\"),o=e(\"./inffast\"),s=e(\"./inftrees\");function c(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function u(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function l(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg=\"\",t.wrap&&(e.adler=1&t.wrap),t.mode=1,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new r.Buf32(852),t.distcode=t.distdyn=new r.Buf32(592),t.sane=1,t.back=-1,0):-2}function d(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,l(e)):-2}function f(e,t){var n,r;return e&&e.state?(r=e.state,t<0?(n=0,t=-t):(n=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?-2:(null!==r.window&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,d(e))):-2}function p(e,t){var n,r;return e?(r=new u,e.state=r,r.window=null,0!==(n=f(e,t))&&(e.state=null),n):-2}var m,h,y=!0;function v(e){if(y){var t;for(m=new r.Buf32(512),h=new r.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(s(1,e.lens,0,288,m,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;s(2,e.lens,0,32,h,0,e.work,{bits:5}),y=!1}e.lencode=m,e.lenbits=9,e.distcode=h,e.distbits=5}function g(e,t,n,i){var a,o=e.state;return null===o.window&&(o.wsize=1<<o.wbits,o.wnext=0,o.whave=0,o.window=new r.Buf8(o.wsize)),i>=o.wsize?(r.arraySet(o.window,t,n-o.wsize,o.wsize,0),o.wnext=0,o.whave=o.wsize):((a=o.wsize-o.wnext)>i&&(a=i),r.arraySet(o.window,t,n-i,a,o.wnext),(i-=a)?(r.arraySet(o.window,t,n-i,i,0),o.wnext=i,o.whave=o.wsize):(o.wnext+=a,o.wnext===o.wsize&&(o.wnext=0),o.whave<o.wsize&&(o.whave+=a))),0}n.inflateReset=d,n.inflateReset2=f,n.inflateResetKeep=l,n.inflateInit=function(e){return p(e,15)},n.inflateInit2=p,n.inflate=function(e,t){var n,u,l,d,f,p,m,h,y,b,x,D,_,w,N,M,O,S,P,j,A,E,C,T,k=0,I=new r.Buf8(4),B=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return-2;12===(n=e.state).mode&&(n.mode=13),f=e.next_out,l=e.output,m=e.avail_out,d=e.next_in,u=e.input,p=e.avail_in,h=n.hold,y=n.bits,b=p,x=m,E=0;e:for(;;)switch(n.mode){case 1:if(0===n.wrap){n.mode=13;break}for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(2&n.wrap&&35615===h){n.check=0,I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0),h=0,y=0,n.mode=2;break}if(n.flags=0,n.head&&(n.head.done=!1),!(1&n.wrap)||(((255&h)<<8)+(h>>8))%31){e.msg=\"incorrect header check\",n.mode=30;break}if(8!=(15&h)){e.msg=\"unknown compression method\",n.mode=30;break}if(y-=4,A=8+(15&(h>>>=4)),0===n.wbits)n.wbits=A;else if(A>n.wbits){e.msg=\"invalid window size\",n.mode=30;break}n.dmax=1<<A,e.adler=n.check=1,n.mode=512&h?10:12,h=0,y=0;break;case 2:for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(n.flags=h,8!=(255&n.flags)){e.msg=\"unknown compression method\",n.mode=30;break}if(57344&n.flags){e.msg=\"unknown header flags set\",n.mode=30;break}n.head&&(n.head.text=h>>8&1),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0)),h=0,y=0,n.mode=3;case 3:for(;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.head&&(n.head.time=h),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,I[2]=h>>>16&255,I[3]=h>>>24&255,n.check=a(n.check,I,4,0)),h=0,y=0,n.mode=4;case 4:for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.head&&(n.head.xflags=255&h,n.head.os=h>>8),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0)),h=0,y=0,n.mode=5;case 5:if(1024&n.flags){for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.length=h,n.head&&(n.head.extra_len=h),512&n.flags&&(I[0]=255&h,I[1]=h>>>8&255,n.check=a(n.check,I,2,0)),h=0,y=0}else n.head&&(n.head.extra=null);n.mode=6;case 6:if(1024&n.flags&&((D=n.length)>p&&(D=p),D&&(n.head&&(A=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),r.arraySet(n.head.extra,u,d,D,A)),512&n.flags&&(n.check=a(n.check,u,D,d)),p-=D,d+=D,n.length-=D),n.length))break e;n.length=0,n.mode=7;case 7:if(2048&n.flags){if(0===p)break e;D=0;do{A=u[d+D++],n.head&&A&&n.length<65536&&(n.head.name+=String.fromCharCode(A))}while(A&&D<p);if(512&n.flags&&(n.check=a(n.check,u,D,d)),p-=D,d+=D,A)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=8;case 8:if(4096&n.flags){if(0===p)break e;D=0;do{A=u[d+D++],n.head&&A&&n.length<65536&&(n.head.comment+=String.fromCharCode(A))}while(A&&D<p);if(512&n.flags&&(n.check=a(n.check,u,D,d)),p-=D,d+=D,A)break e}else n.head&&(n.head.comment=null);n.mode=9;case 9:if(512&n.flags){for(;y<16;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(h!==(65535&n.check)){e.msg=\"header crc mismatch\",n.mode=30;break}h=0,y=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=12;break;case 10:for(;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}e.adler=n.check=c(h),h=0,y=0,n.mode=11;case 11:if(0===n.havedict)return e.next_out=f,e.avail_out=m,e.next_in=d,e.avail_in=p,n.hold=h,n.bits=y,2;e.adler=n.check=1,n.mode=12;case 12:if(5===t||6===t)break e;case 13:if(n.last){h>>>=7&y,y-=7&y,n.mode=27;break}for(;y<3;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}switch(n.last=1&h,y-=1,3&(h>>>=1)){case 0:n.mode=14;break;case 1:if(v(n),n.mode=20,6===t){h>>>=2,y-=2;break e}break;case 2:n.mode=17;break;case 3:e.msg=\"invalid block type\",n.mode=30}h>>>=2,y-=2;break;case 14:for(h>>>=7&y,y-=7&y;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if((65535&h)!=(h>>>16^65535)){e.msg=\"invalid stored block lengths\",n.mode=30;break}if(n.length=65535&h,h=0,y=0,n.mode=15,6===t)break e;case 15:n.mode=16;case 16:if(D=n.length){if(D>p&&(D=p),D>m&&(D=m),0===D)break e;r.arraySet(l,u,d,D,f),p-=D,d+=D,m-=D,f+=D,n.length-=D;break}n.mode=12;break;case 17:for(;y<14;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(n.nlen=257+(31&h),h>>>=5,y-=5,n.ndist=1+(31&h),h>>>=5,y-=5,n.ncode=4+(15&h),h>>>=4,y-=4,n.nlen>286||n.ndist>30){e.msg=\"too many length or distance symbols\",n.mode=30;break}n.have=0,n.mode=18;case 18:for(;n.have<n.ncode;){for(;y<3;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.lens[B[n.have++]]=7&h,h>>>=3,y-=3}for(;n.have<19;)n.lens[B[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,C={bits:n.lenbits},E=s(0,n.lens,0,19,n.lencode,0,n.work,C),n.lenbits=C.bits,E){e.msg=\"invalid code lengths set\",n.mode=30;break}n.have=0,n.mode=19;case 19:for(;n.have<n.nlen+n.ndist;){for(;M=(k=n.lencode[h&(1<<n.lenbits)-1])>>>16&255,O=65535&k,!((N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(O<16)h>>>=N,y-=N,n.lens[n.have++]=O;else{if(16===O){for(T=N+2;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(h>>>=N,y-=N,0===n.have){e.msg=\"invalid bit length repeat\",n.mode=30;break}A=n.lens[n.have-1],D=3+(3&h),h>>>=2,y-=2}else if(17===O){for(T=N+3;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}y-=N,A=0,D=3+(7&(h>>>=N)),h>>>=3,y-=3}else{for(T=N+7;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}y-=N,A=0,D=11+(127&(h>>>=N)),h>>>=7,y-=7}if(n.have+D>n.nlen+n.ndist){e.msg=\"invalid bit length repeat\",n.mode=30;break}for(;D--;)n.lens[n.have++]=A}}if(30===n.mode)break;if(0===n.lens[256]){e.msg=\"invalid code -- missing end-of-block\",n.mode=30;break}if(n.lenbits=9,C={bits:n.lenbits},E=s(1,n.lens,0,n.nlen,n.lencode,0,n.work,C),n.lenbits=C.bits,E){e.msg=\"invalid literal/lengths set\",n.mode=30;break}if(n.distbits=6,n.distcode=n.distdyn,C={bits:n.distbits},E=s(2,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,C),n.distbits=C.bits,E){e.msg=\"invalid distances set\",n.mode=30;break}if(n.mode=20,6===t)break e;case 20:n.mode=21;case 21:if(p>=6&&m>=258){e.next_out=f,e.avail_out=m,e.next_in=d,e.avail_in=p,n.hold=h,n.bits=y,o(e,x),f=e.next_out,l=e.output,m=e.avail_out,d=e.next_in,u=e.input,p=e.avail_in,h=n.hold,y=n.bits,12===n.mode&&(n.back=-1);break}for(n.back=0;M=(k=n.lencode[h&(1<<n.lenbits)-1])>>>16&255,O=65535&k,!((N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(M&&0==(240&M)){for(S=N,P=M,j=O;M=(k=n.lencode[j+((h&(1<<S+P)-1)>>S)])>>>16&255,O=65535&k,!(S+(N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}h>>>=S,y-=S,n.back+=S}if(h>>>=N,y-=N,n.back+=N,n.length=O,0===M){n.mode=26;break}if(32&M){n.back=-1,n.mode=12;break}if(64&M){e.msg=\"invalid literal/length code\",n.mode=30;break}n.extra=15&M,n.mode=22;case 22:if(n.extra){for(T=n.extra;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.length+=h&(1<<n.extra)-1,h>>>=n.extra,y-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=23;case 23:for(;M=(k=n.distcode[h&(1<<n.distbits)-1])>>>16&255,O=65535&k,!((N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(0==(240&M)){for(S=N,P=M,j=O;M=(k=n.distcode[j+((h&(1<<S+P)-1)>>S)])>>>16&255,O=65535&k,!(S+(N=k>>>24)<=y);){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}h>>>=S,y-=S,n.back+=S}if(h>>>=N,y-=N,n.back+=N,64&M){e.msg=\"invalid distance code\",n.mode=30;break}n.offset=O,n.extra=15&M,n.mode=24;case 24:if(n.extra){for(T=n.extra;y<T;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}n.offset+=h&(1<<n.extra)-1,h>>>=n.extra,y-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg=\"invalid distance too far back\",n.mode=30;break}n.mode=25;case 25:if(0===m)break e;if(D=x-m,n.offset>D){if((D=n.offset-D)>n.whave&&n.sane){e.msg=\"invalid distance too far back\",n.mode=30;break}D>n.wnext?(D-=n.wnext,_=n.wsize-D):_=n.wnext-D,D>n.length&&(D=n.length),w=n.window}else w=l,_=f-n.offset,D=n.length;D>m&&(D=m),m-=D,n.length-=D;do{l[f++]=w[_++]}while(--D);0===n.length&&(n.mode=21);break;case 26:if(0===m)break e;l[f++]=n.length,m--,n.mode=21;break;case 27:if(n.wrap){for(;y<32;){if(0===p)break e;p--,h|=u[d++]<<y,y+=8}if(x-=m,e.total_out+=x,n.total+=x,x&&(e.adler=n.check=n.flags?a(n.check,l,x,f-x):i(n.check,l,x,f-x)),x=m,(n.flags?h:c(h))!==n.check){e.msg=\"incorrect data check\",n.mode=30;break}h=0,y=0}n.mode=28;case 28:if(n.wrap&&n.flags){for(;y<32;){if(0===p)break e;p--,h+=u[d++]<<y,y+=8}if(h!==(4294967295&n.total)){e.msg=\"incorrect length check\",n.mode=30;break}h=0,y=0}n.mode=29;case 29:E=1;break e;case 30:E=-3;break e;case 31:return-4;case 32:default:return-2}return e.next_out=f,e.avail_out=m,e.next_in=d,e.avail_in=p,n.hold=h,n.bits=y,(n.wsize||x!==e.avail_out&&n.mode<30&&(n.mode<27||4!==t))&&g(e,e.output,e.next_out,x-e.avail_out),b-=e.avail_in,x-=e.avail_out,e.total_in+=b,e.total_out+=x,n.total+=x,n.wrap&&x&&(e.adler=n.check=n.flags?a(n.check,l,x,e.next_out-x):i(n.check,l,x,e.next_out-x)),e.data_type=n.bits+(n.last?64:0)+(12===n.mode?128:0)+(20===n.mode||15===n.mode?256:0),(0===b&&0===x||4===t)&&0===E&&(E=-5),E},n.inflateEnd=function(e){if(!e||!e.state)return-2;var t=e.state;return t.window&&(t.window=null),e.state=null,0},n.inflateGetHeader=function(e,t){var n;return e&&e.state?0==(2&(n=e.state).wrap)?-2:(n.head=t,t.done=!1,0):-2},n.inflateSetDictionary=function(e,t){var n,r=t.length;return e&&e.state?0!==(n=e.state).wrap&&11!==n.mode?-2:11===n.mode&&i(1,t,r,0)!==n.check?-3:g(e,t,r,r)?(n.mode=31,-4):(n.havedict=1,0):-2},n.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(e,t,n){var r=e(\"../utils/common\"),i=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],a=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],o=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],s=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];t.exports=function(e,t,n,c,u,l,d,f){var p,m,h,y,v,g,b,x,D,_=f.bits,w=0,N=0,M=0,O=0,S=0,P=0,j=0,A=0,E=0,C=0,T=null,k=0,I=new r.Buf16(16),B=new r.Buf16(16),z=null,R=0;for(w=0;w<=15;w++)I[w]=0;for(N=0;N<c;N++)I[t[n+N]]++;for(S=_,O=15;O>=1&&0===I[O];O--);if(S>O&&(S=O),0===O)return u[l++]=20971520,u[l++]=20971520,f.bits=1,0;for(M=1;M<O&&0===I[M];M++);for(S<M&&(S=M),A=1,w=1;w<=15;w++)if(A<<=1,(A-=I[w])<0)return-1;if(A>0&&(0===e||1!==O))return-1;for(B[1]=0,w=1;w<15;w++)B[w+1]=B[w]+I[w];for(N=0;N<c;N++)0!==t[n+N]&&(d[B[t[n+N]]++]=N);if(0===e?(T=z=d,g=19):1===e?(T=i,k-=257,z=a,R-=257,g=256):(T=o,z=s,g=-1),C=0,N=0,w=M,v=l,P=S,j=0,h=-1,y=(E=1<<S)-1,1===e&&E>852||2===e&&E>592)return 1;for(;;){b=w-j,d[N]<g?(x=0,D=d[N]):d[N]>g?(x=z[R+d[N]],D=T[k+d[N]]):(x=96,D=0),p=1<<w-j,M=m=1<<P;do{u[v+(C>>j)+(m-=p)]=b<<24|x<<16|D|0}while(0!==m);for(p=1<<w-1;C&p;)p>>=1;if(0!==p?(C&=p-1,C+=p):C=0,N++,0==--I[w]){if(w===O)break;w=t[n+d[N]]}if(w>S&&(C&y)!==h){for(0===j&&(j=S),v+=M,A=1<<(P=w-j);P+j<O&&!((A-=I[P+j])<=0);)P++,A<<=1;if(E+=1<<P,1===e&&E>852||2===e&&E>592)return 1;u[h=C&y]=S<<24|P<<16|v-l|0}}return 0!==C&&(u[v+C]=w-j<<24|64<<16|0),f.bits=S,0}},{\"../utils/common\":41}],51:[function(e,t,n){t.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(e,t,n){var r=e(\"../utils/common\");function i(e){for(var t=e.length;--t>=0;)e[t]=0}var a=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],o=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],c=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],u=new Array(576);i(u);var l=new Array(60);i(l);var d=new Array(512);i(d);var f=new Array(256);i(f);var p=new Array(29);i(p);var m,h,y,v=new Array(30);function g(e,t,n,r,i){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=i,this.has_stree=e&&e.length}function b(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function x(e){return e<256?d[e]:d[256+(e>>>7)]}function D(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function _(e,t,n){e.bi_valid>16-n?(e.bi_buf|=t<<e.bi_valid&65535,D(e,e.bi_buf),e.bi_buf=t>>16-e.bi_valid,e.bi_valid+=n-16):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function w(e,t,n){_(e,n[2*t],n[2*t+1])}function N(e,t){var n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}function M(e,t,n){var r,i,a=new Array(16),o=0;for(r=1;r<=15;r++)a[r]=o=o+n[r-1]<<1;for(i=0;i<=t;i++){var s=e[2*i+1];0!==s&&(e[2*i]=N(a[s]++,s))}}function O(e){var t;for(t=0;t<286;t++)e.dyn_ltree[2*t]=0;for(t=0;t<30;t++)e.dyn_dtree[2*t]=0;for(t=0;t<19;t++)e.bl_tree[2*t]=0;e.dyn_ltree[512]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function S(e){e.bi_valid>8?D(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function P(e,t,n,r){var i=2*t,a=2*n;return e[i]<e[a]||e[i]===e[a]&&r[t]<=r[n]}function j(e,t,n){for(var r=e.heap[n],i=n<<1;i<=e.heap_len&&(i<e.heap_len&&P(t,e.heap[i+1],e.heap[i],e.depth)&&i++,!P(t,r,e.heap[i],e.depth));)e.heap[n]=e.heap[i],n=i,i<<=1;e.heap[n]=r}function A(e,t,n){var r,i,s,c,u=0;if(0!==e.last_lit)do{r=e.pending_buf[e.d_buf+2*u]<<8|e.pending_buf[e.d_buf+2*u+1],i=e.pending_buf[e.l_buf+u],u++,0===r?w(e,i,t):(w(e,(s=f[i])+256+1,t),0!==(c=a[s])&&_(e,i-=p[s],c),w(e,s=x(--r),n),0!==(c=o[s])&&_(e,r-=v[s],c))}while(u<e.last_lit);w(e,256,t)}function E(e,t){var n,r,i,a=t.dyn_tree,o=t.stat_desc.static_tree,s=t.stat_desc.has_stree,c=t.stat_desc.elems,u=-1;for(e.heap_len=0,e.heap_max=573,n=0;n<c;n++)0!==a[2*n]?(e.heap[++e.heap_len]=u=n,e.depth[n]=0):a[2*n+1]=0;for(;e.heap_len<2;)a[2*(i=e.heap[++e.heap_len]=u<2?++u:0)]=1,e.depth[i]=0,e.opt_len--,s&&(e.static_len-=o[2*i+1]);for(t.max_code=u,n=e.heap_len>>1;n>=1;n--)j(e,a,n);i=c;do{n=e.heap[1],e.heap[1]=e.heap[e.heap_len--],j(e,a,1),r=e.heap[1],e.heap[--e.heap_max]=n,e.heap[--e.heap_max]=r,a[2*i]=a[2*n]+a[2*r],e.depth[i]=(e.depth[n]>=e.depth[r]?e.depth[n]:e.depth[r])+1,a[2*n+1]=a[2*r+1]=i,e.heap[1]=i++,j(e,a,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],function(e,t){var n,r,i,a,o,s,c=t.dyn_tree,u=t.max_code,l=t.stat_desc.static_tree,d=t.stat_desc.has_stree,f=t.stat_desc.extra_bits,p=t.stat_desc.extra_base,m=t.stat_desc.max_length,h=0;for(a=0;a<=15;a++)e.bl_count[a]=0;for(c[2*e.heap[e.heap_max]+1]=0,n=e.heap_max+1;n<573;n++)(a=c[2*c[2*(r=e.heap[n])+1]+1]+1)>m&&(a=m,h++),c[2*r+1]=a,r>u||(e.bl_count[a]++,o=0,r>=p&&(o=f[r-p]),s=c[2*r],e.opt_len+=s*(a+o),d&&(e.static_len+=s*(l[2*r+1]+o)));if(0!==h){do{for(a=m-1;0===e.bl_count[a];)a--;e.bl_count[a]--,e.bl_count[a+1]+=2,e.bl_count[m]--,h-=2}while(h>0);for(a=m;0!==a;a--)for(r=e.bl_count[a];0!==r;)(i=e.heap[--n])>u||(c[2*i+1]!==a&&(e.opt_len+=(a-c[2*i+1])*c[2*i],c[2*i+1]=a),r--)}}(e,t),M(a,u,e.bl_count)}function C(e,t,n){var r,i,a=-1,o=t[1],s=0,c=7,u=4;for(0===o&&(c=138,u=3),t[2*(n+1)+1]=65535,r=0;r<=n;r++)i=o,o=t[2*(r+1)+1],++s<c&&i===o||(s<u?e.bl_tree[2*i]+=s:0!==i?(i!==a&&e.bl_tree[2*i]++,e.bl_tree[32]++):s<=10?e.bl_tree[34]++:e.bl_tree[36]++,s=0,a=i,0===o?(c=138,u=3):i===o?(c=6,u=3):(c=7,u=4))}function T(e,t,n){var r,i,a=-1,o=t[1],s=0,c=7,u=4;for(0===o&&(c=138,u=3),r=0;r<=n;r++)if(i=o,o=t[2*(r+1)+1],!(++s<c&&i===o)){if(s<u)do{w(e,i,e.bl_tree)}while(0!=--s);else 0!==i?(i!==a&&(w(e,i,e.bl_tree),s--),w(e,16,e.bl_tree),_(e,s-3,2)):s<=10?(w(e,17,e.bl_tree),_(e,s-3,3)):(w(e,18,e.bl_tree),_(e,s-11,7));s=0,a=i,0===o?(c=138,u=3):i===o?(c=6,u=3):(c=7,u=4)}}i(v);var k=!1;function I(e,t,n,i){_(e,0+(i?1:0),3),function(e,t,n,i){S(e),i&&(D(e,n),D(e,~n)),r.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}(e,t,n,!0)}n._tr_init=function(e){k||(function(){var e,t,n,r,i,c=new Array(16);for(n=0,r=0;r<28;r++)for(p[r]=n,e=0;e<1<<a[r];e++)f[n++]=r;for(f[n-1]=r,i=0,r=0;r<16;r++)for(v[r]=i,e=0;e<1<<o[r];e++)d[i++]=r;for(i>>=7;r<30;r++)for(v[r]=i<<7,e=0;e<1<<o[r]-7;e++)d[256+i++]=r;for(t=0;t<=15;t++)c[t]=0;for(e=0;e<=143;)u[2*e+1]=8,e++,c[8]++;for(;e<=255;)u[2*e+1]=9,e++,c[9]++;for(;e<=279;)u[2*e+1]=7,e++,c[7]++;for(;e<=287;)u[2*e+1]=8,e++,c[8]++;for(M(u,287,c),e=0;e<30;e++)l[2*e+1]=5,l[2*e]=N(e,5);m=new g(u,a,257,286,15),h=new g(l,o,0,30,15),y=new g(new Array(0),s,0,19,7)}(),k=!0),e.l_desc=new b(e.dyn_ltree,m),e.d_desc=new b(e.dyn_dtree,h),e.bl_desc=new b(e.bl_tree,y),e.bi_buf=0,e.bi_valid=0,O(e)},n._tr_stored_block=I,n._tr_flush_block=function(e,t,n,r){var i,a,o=0;e.level>0?(2===e.strm.data_type&&(e.strm.data_type=function(e){var t,n=4093624447;for(t=0;t<=31;t++,n>>>=1)if(1&n&&0!==e.dyn_ltree[2*t])return 0;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return 1;for(t=32;t<256;t++)if(0!==e.dyn_ltree[2*t])return 1;return 0}(e)),E(e,e.l_desc),E(e,e.d_desc),o=function(e){var t;for(C(e,e.dyn_ltree,e.l_desc.max_code),C(e,e.dyn_dtree,e.d_desc.max_code),E(e,e.bl_desc),t=18;t>=3&&0===e.bl_tree[2*c[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(e),i=e.opt_len+3+7>>>3,(a=e.static_len+3+7>>>3)<=i&&(i=a)):i=a=n+5,n+4<=i&&-1!==t?I(e,t,n,r):4===e.strategy||a===i?(_(e,2+(r?1:0),3),A(e,u,l)):(_(e,4+(r?1:0),3),function(e,t,n,r){var i;for(_(e,t-257,5),_(e,n-1,5),_(e,r-4,4),i=0;i<r;i++)_(e,e.bl_tree[2*c[i]+1],3);T(e,e.dyn_ltree,t-1),T(e,e.dyn_dtree,n-1)}(e,e.l_desc.max_code+1,e.d_desc.max_code+1,o+1),A(e,e.dyn_ltree,e.dyn_dtree)),O(e),r&&S(e)},n._tr_tally=function(e,t,n){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&n,e.last_lit++,0===t?e.dyn_ltree[2*n]++:(e.matches++,t--,e.dyn_ltree[2*(f[n]+256+1)]++,e.dyn_dtree[2*x(t)]++),e.last_lit===e.lit_bufsize-1},n._tr_align=function(e){_(e,2,3),w(e,256,u),function(e){16===e.bi_valid?(D(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}(e)}},{\"../utils/common\":41}],53:[function(e,t,n){t.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(e,t,n){t.exports=\"function\"==typeof setImmediate?setImmediate:function(){var e=[].slice.apply(arguments);e.splice(1,0,0),setTimeout.apply(null,e)}},{}]},{},[10])(10)}));var Iv=zv,Bv=zv;function zv(e,t,n){n=n||2;var r,i,a,o,s,c,u,l=t&&t.length,d=l?t[0]*n:e.length,f=Rv(e,0,d,n,!0),p=[];if(!f||f.next===f.prev)return p;if(l&&(f=function(e,t,n,r){var i,a,o,s,c,u=[];for(i=0,a=t.length;i<a;i++)o=t[i]*r,s=i<a-1?t[i+1]*r:e.length,(c=Rv(e,o,s,r,!1))===c.next&&(c.steiner=!0),u.push(Qv(c));for(u.sort(Vv),i=0;i<u.length;i++)Wv(u[i],n),n=qv(n,n.next);return n}(e,t,f,n)),e.length>80*n){r=a=e[0],i=o=e[1];for(var m=n;m<d;m+=n)(s=e[m])<r&&(r=s),(c=e[m+1])<i&&(i=c),s>a&&(a=s),c>o&&(o=c);u=0!==(u=Math.max(a-r,o-i))?1/u:0}return Fv(f,p,n,r,i,u),p}function Rv(e,t,n,r,i){var a,o;if(i===cg(e,t,n,r)>0)for(a=t;a<n;a+=r)o=ag(a,e[a],e[a+1],o);else for(a=n-r;a>=t;a-=r)o=ag(a,e[a],e[a+1],o);return o&&Kv(o,o.next)&&(og(o),o=o.next),o}function qv(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!Kv(r,r.next)&&0!==Jv(r.prev,r,r.next))r=r.next;else{if(og(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function Fv(e,t,n,r,i,a,o){if(e){!o&&a&&function(e,t,n,r){var i=e;do{null===i.z&&(i.z=$v(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==e);i.prevZ.nextZ=null,i.prevZ=null,function(e){var t,n,r,i,a,o,s,c,u=1;do{for(n=e,e=null,a=null,o=0;n;){for(o++,r=n,s=0,t=0;t<u&&(s++,r=r.nextZ);t++);for(c=u;s>0||c>0&&r;)0!==s&&(0===c||!r||n.z<=r.z)?(i=n,n=n.nextZ,s--):(i=r,r=r.nextZ,c--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}a.nextZ=null,u*=2}while(o>1)}(i)}(e,r,i,a);for(var s,c,u=e;e.prev!==e.next;)if(s=e.prev,c=e.next,a?Lv(e,r,i,a):Uv(e))t.push(s.i/n),t.push(e.i/n),t.push(c.i/n),og(e),e=c.next,u=c.next;else if((e=c)===u){o?1===o?Fv(e=Hv(qv(e),t,n),t,n,r,i,a,2):2===o&&Zv(e,t,n,r,i,a):Fv(qv(e),t,n,r,i,a,1);break}}}function Uv(e){var t=e.prev,n=e,r=e.next;if(Jv(t,n,r)>=0)return!1;for(var i=e.next.next;i!==e.prev;){if(Xv(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&Jv(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Lv(e,t,n,r){var i=e.prev,a=e,o=e.next;if(Jv(i,a,o)>=0)return!1;for(var s=i.x<a.x?i.x<o.x?i.x:o.x:a.x<o.x?a.x:o.x,c=i.y<a.y?i.y<o.y?i.y:o.y:a.y<o.y?a.y:o.y,u=i.x>a.x?i.x>o.x?i.x:o.x:a.x>o.x?a.x:o.x,l=i.y>a.y?i.y>o.y?i.y:o.y:a.y>o.y?a.y:o.y,d=$v(s,c,t,n,r),f=$v(u,l,t,n,r),p=e.prevZ,m=e.nextZ;p&&p.z>=d&&m&&m.z<=f;){if(p!==e.prev&&p!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Jv(p.prev,p,p.next)>=0)return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,m.x,m.y)&&Jv(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;p&&p.z>=d;){if(p!==e.prev&&p!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,p.x,p.y)&&Jv(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=f;){if(m!==e.prev&&m!==e.next&&Xv(i.x,i.y,a.x,a.y,o.x,o.y,m.x,m.y)&&Jv(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function Hv(e,t,n){var r=e;do{var i=r.prev,a=r.next.next;!Kv(i,a)&&eg(i,r,r.next,a)&&rg(i,a)&&rg(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),og(r),og(r.next),r=e=a),r=r.next}while(r!==e);return qv(r)}function Zv(e,t,n,r,i,a){var o=e;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&Yv(o,s)){var c=ig(o,s);return o=qv(o,o.next),c=qv(c,c.next),Fv(o,t,n,r,i,a),void Fv(c,t,n,r,i,a)}s=s.next}o=o.next}while(o!==e)}function Vv(e,t){return e.x-t.x}function Wv(e,t){if(t=function(e,t){var n,r=t,i=e.x,a=e.y,o=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var s=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=i&&s>o){if(o=s,s===i){if(a===r.y)return r;if(a===r.next.y)return r.next}n=r.x<r.next.x?r:r.next}}r=r.next}while(r!==t);if(!n)return null;if(i===o)return n;var c,u=n,l=n.x,d=n.y,f=1/0;r=n;do{i>=r.x&&r.x>=l&&i!==r.x&&Xv(a<d?i:o,a,l,d,a<d?o:i,a,r.x,r.y)&&(c=Math.abs(a-r.y)/(i-r.x),rg(r,e)&&(c<f||c===f&&(r.x>n.x||r.x===n.x&&Gv(n,r)))&&(n=r,f=c)),r=r.next}while(r!==u);return n}(e,t)){var n=ig(t,e);qv(t,t.next),qv(n,n.next)}}function Gv(e,t){return Jv(e.prev,e,t.prev)<0&&Jv(t.next,e,e.next)<0}function $v(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Qv(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Xv(e,t,n,r,i,a,o,s){return(i-o)*(t-s)-(e-o)*(a-s)>=0&&(e-o)*(r-s)-(n-o)*(t-s)>=0&&(n-o)*(a-s)-(i-o)*(r-s)>=0}function Yv(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&eg(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(rg(e,t)&&rg(t,e)&&function(e,t){var n=e,r=!1,i=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Jv(e.prev,e,t.prev)||Jv(e,t.prev,t))||Kv(e,t)&&Jv(e.prev,e,e.next)>0&&Jv(t.prev,t,t.next)>0)}function Jv(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Kv(e,t){return e.x===t.x&&e.y===t.y}function eg(e,t,n,r){var i=ng(Jv(e,t,n)),a=ng(Jv(e,t,r)),o=ng(Jv(n,r,e)),s=ng(Jv(n,r,t));return i!==a&&o!==s||(!(0!==i||!tg(e,n,t))||(!(0!==a||!tg(e,r,t))||(!(0!==o||!tg(n,e,r))||!(0!==s||!tg(n,t,r)))))}function tg(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function ng(e){return e>0?1:e<0?-1:0}function rg(e,t){return Jv(e.prev,e,e.next)<0?Jv(e,t,e.next)>=0&&Jv(e,e.prev,t)>=0:Jv(e,t,e.prev)<0||Jv(e,e.next,t)<0}function ig(e,t){var n=new sg(e.i,e.x,e.y),r=new sg(t.i,t.x,t.y),i=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function ag(e,t,n,r){var i=new sg(e,t,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function og(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function sg(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function cg(e,t,n,r){for(var i=0,a=t,o=n-r;a<n;a+=r)i+=(e[o]-e[a])*(e[a+1]+e[o+1]),o=a;return i}zv.deviation=function(e,t,n,r){var i=t&&t.length,a=i?t[0]*n:e.length,o=Math.abs(cg(e,0,a,n));if(i)for(var s=0,c=t.length;s<c;s++){var u=t[s]*n,l=s<c-1?t[s+1]*n:e.length;o-=Math.abs(cg(e,u,l,n))}var d=0;for(s=0;s<r.length;s+=3){var f=r[s]*n,p=r[s+1]*n,m=r[s+2]*n;d+=Math.abs((e[f]-e[m])*(e[p+1]-e[f+1])-(e[f]-e[p])*(e[m+1]-e[f+1]))}return 0===o&&0===d?0:Math.abs((d-o)/o)},zv.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,i=0;i<e.length;i++){for(var a=0;a<e[i].length;a++)for(var o=0;o<t;o++)n.vertices.push(e[i][a][o]);i>0&&(r+=e[i-1].length,n.holes.push(r))}return n},Iv.default=Bv;var ug=e=>{const[t,n,r,i,a,o,s,c,u]=e,l=oy(t,n,r,i,a,o,s,c,u);for(let t=9;t<e.length;t+=3)if(!sy(l,e[t],e[t+1],e[t+2]))throw new Error(\"[NTP] Cannot interpret non-planar polygons!\");const d=Math.atan(l.b/l.c),f=Math.atan(l.a/l.c),p=Math.atan(l.a/l.b),m=[];for(let t=0;t<e.length;t+=3){const n=ay(d,f,p,e[t],e[t+1],e[t+2]);n.pop(),m.push(...n)}const h=Iv(m),y=[];for(let e=0;e<h.length;e+=3)y.push(h[e+2],h[e+1],h[e]);return y};const lg={element:/element (\\w+) (\\d+)([\\s\\S]+?)(?=element|end_header)/g,format:/format\\s+(\\w+)/,header:/(ply[\\s\\S]+end_header)/,property:/temporary/g,listProperty:/temporary/g,type:/(u?(?:char|short|int)|float|double)/};lg.property=new RegExp(`property ${lg.type.source} (\\\\w+)`,\"g\"),lg.listProperty=new RegExp(`property list ${lg.type.source} ${lg.type.source} (\\\\w+)`,\"g\");const dg={CHAR:{size:1,symbol:\"char\",dataView:{get:DataView.prototype.getInt8,set:DataView.prototype.setInt8}},UCHAR:{size:1,symbol:\"uchar\",dataView:{get:DataView.prototype.getUint8,set:DataView.prototype.setUint8}},SHORT:{size:2,symbol:\"short\",dataView:{get:DataView.prototype.getInt16,set:DataView.prototype.setInt16}},USHORT:{size:2,symbol:\"ushort\",dataView:{get:DataView.prototype.getUint16,set:DataView.prototype.setUint16}},INT:{size:4,symbol:\"int\",dataView:{get:DataView.prototype.getInt32,set:DataView.prototype.setInt32}},UINT:{size:4,symbol:\"uint\",dataView:{get:DataView.prototype.getUint32,set:DataView.prototype.setUint32}},FLOAT:{size:4,symbol:\"float\",dataView:{get:DataView.prototype.getFloat32,set:DataView.prototype.setFloat32}},DOUBLE:{size:8,symbol:\"double\",dataView:{get:DataView.prototype.getFloat64,set:DataView.prototype.setFloat64}}},fg=Object.values(dg).map(e=>e.symbol),pg=/end_header[\\r\\n]{1,2}([\\s\\S]+)/,mg=/(.+)/g,hg=/([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)/g,yg=(e,t)=>{const n={name:\"PLY\",normals:void 0,vertices:{indices:[],vectors:[]}},r=e=>{if(3==e.length)n.vertices.indices.push(...e);else{const t=uy({indices:e,vectors:n.vertices.vectors}),r=ug(t),i=uy({indices:r,vectors:t}),a=[...n.vertices.vectors,...i],{indices:o}=ly(a),s=o.slice(o.length-r.length);n.vertices.indices.push(...s)}},i=(new TextDecoder).decode(e),a=(e=>{const[t]=Py(e,lg.header,new Error(\"Failed to extract PLY header while categorizing the file!\")),[n]=Py(t,lg.format,new Error(\"Failed to detect PLY type!\"));switch(n){case\"ascii\":return\"ascii\";case\"binary_big_endian\":return\"binary-be\";case\"binary_little_endian\":return\"binary-le\";default:throw new Error(\"Invalid PLY format: \"+n)}})(i),o=(e=>{const[t]=Py(e,lg.header,new Error(\"Failed to extract PLY header while extracting face and vertice information!\")),n=jy(t,lg.element,new Error(\"Failed to extract PLY elements!\")),r=[];let i=0;for(const[e,t,a]of n){const n=[],o=jy(a,lg.property),s=jy(a,lg.listProperty);if(o.length>0&&o[0].length>0)for(const[e,t]of o){if(!fg.includes(e))throw new Error(`Unknown PLY header numeric type: \"${e}\"`);const r=Object.values(dg).find(t=>t.symbol==e);n.push({list:!1,name:t,type:r})}if(s.length>0&&s[0].length>0)for(const[e,t,r]of s){if(!fg.includes(e))throw new Error(`Unknown PLY header numeric type: \"${e}\"`);if(!fg.includes(t))throw new Error(`Unknown PLY header numeric type: \"${t}\"`);const i=Object.values(dg).find(e=>e.symbol==t),a=Object.values(dg).find(t=>t.symbol==e);n.push({countType:a,list:!0,name:r,type:i})}const c=parseInt(t);r.push({count:c,name:e,offset:i,properties:n}),i+=c}return r})(i),s=o.find(e=>\"vertex\"==e.name),c=null!=s?s.count:0;let u=null!=s?s.offset:0;const l=o.find(e=>\"face\"==e.name),d=null!=l?l.count:0;let f=null!=l?l.offset:0;const[p]=Py(i,pg,new Error(\"[PLY] Failed to extract file body!\"));switch(a){case\"ascii\":{const e=jy(p,mg,new Error(\"[PLY] Failed to parse file body!\")),i=Object.keys(e).length,a=i<100?1:Math.round(i/100);for(const[o,[s]]of e.entries()){if(u<=o&&o<u+c){const e=jy(s,hg,new Error(\"[PLY] Failed to parse vertice!\")).map(e=>parseFloat(e[0]));n.vertices.vectors.push(...e.slice(0,3))}else if(f<=o&&o<f+d){const e=jy(s,hg,new Error(\"[PLY] Failed to parse face!\")).map(e=>parseInt(e[0]));if(e[0]!=e.length-1)throw new Error(\"[PLY] Face list had incorrect vertice count!\");e.shift(),r(e)}o%a==0&&t((o+1)/i)}break}case\"binary-be\":case\"binary-le\":{const i=\"binary-le\"==a,s=e.slice(e.byteLength-p.length),l=e instanceof ArrayBuffer?new DataView(s):new DataView(new Uint8Array(s).buffer);let m=0;for(const e of o){switch(e.name){case\"vertex\":u=m;break;case\"face\":f=m}let t=0;for(const n of e.properties)if(n.list)for(let r=0;r<e.count;r++){const e=n.countType.dataView.get.call(l,m+t,i);t+=n.countType.size+e*n.type.size}else t+=e.count*n.type.size;m+=t}const h=u+12*c,y=c<100?12:12*Math.round(c/100);for(let e=u;e<h;e+=12){const r=l.getFloat32(e,i),a=l.getFloat32(e+4,i),o=l.getFloat32(e+8,i);n.vertices.vectors.push(r,a,o),e%y==0&&t((e-u)/(12*c)/2)}const v=d<100?1:Math.round(d/100);let g=f;for(let e=0;e<d;e++){const n=l.getUint8(g),a=[];for(let e=1+g;e<1+g+4*n;e+=4)a.push(l.getInt32(e,i));r(a),g+=1+4*n,e%v==0&&t((e+1)/d/2+.5)}break}}return t(1),[n]},vg=(e,t)=>{switch((e=>{const t=e instanceof ArrayBuffer?new DataView(e):new DataView(new Uint8Array(e).buffer);if(84+50*t.getUint32(80,!0)==t.byteLength)return\"binary\";const n=\"solid\".split(\"\").map(e=>e.charCodeAt(0));if(((e,t)=>{for(let n=0;n<e.length-t.length+1;n++){let r=!0;for(let i=0;i<t.length;i++)if(e[n+i]!=t[i]){r=!1;break}if(r)return!0}return!1})(Array.from(new Uint8Array(t.buffer.slice(0,n.length+5))),n))return\"ascii\";throw new Error(\"[STL] Failed to detect file type!\")})(e)){case\"ascii\":{const n=(new TextDecoder).decode(e),r=[],i={facet:/facet([\\s\\S]*?)endfacet/g,float:/([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)/,loop:/outer loop([\\s\\S]*?)endloop/g,normal:/temporary/g,number:/([+-]?\\d*(\\.\\d)?)/,solid:/solid (\\S+)\\s([\\s\\S]*?)\\sendsolid/g,vertice:/temporary/g};i.normal=new RegExp(\"normal\"+(\"\\\\s+\"+i.float.source).repeat(3)),i.vertice=new RegExp(\"vertex\"+(\"\\\\s+\"+i.float.source).repeat(3),\"g\");const a=jy(n,i.solid,new Error(\"[STL] Failed to parse solids!\"));for(const[e,n]of a){const a={name:e,vertices:[],normals:[]},o=jy(n,i.facet,new Error(\"[STL] Failed to parse facets!\")),s=o.length<100?1:Math.round(o.length/100);for(const[e,[n]]of o.entries()){const r=Py(n,i.normal,new Error(\"[STL] Failed to parse normal!\")),c=parseFloat(r[0]),u=parseFloat(r[1]),l=parseFloat(r[2]);a.normals.push(c,u,l);const d=jy(n,i.loop,new Error(\"[STL] Failed to parse loops!\"));for(const[e]of d){const t=jy(e,i.vertice,new Error(\"[STL] Failed to parse vertices!\"));for(const e of t){const t=parseFloat(e[0]),n=parseFloat(e[1]),r=parseFloat(e[2]);a.vertices.push(t,n,r)}}e%s==0&&t((e+1)/o.length)}r.push(a)}return t(1),r}case\"binary\":{const n={name:\"Binary STL\",vertices:[],normals:[]},r=(e.byteLength-84)/50,i=e instanceof ArrayBuffer?new DataView(e):new DataView(new Uint8Array(e).buffer),a=r<100?1:Math.round(r/100);for(let e=0;e<r;e++){const o=84+50*e;n.normals.push(i.getFloat32(o,!0),i.getFloat32(o+4,!0),i.getFloat32(o+8,!0)),n.vertices.push(i.getFloat32(o+12,!0),i.getFloat32(o+16,!0),i.getFloat32(o+20,!0)),n.vertices.push(i.getFloat32(o+24,!0),i.getFloat32(o+28,!0),i.getFloat32(o+32,!0)),n.vertices.push(i.getFloat32(o+36,!0),i.getFloat32(o+40,!0),i.getFloat32(o+44,!0)),e%a==0&&t((e+1)/r)}return t(1),[n]}}};class gg extends yy.EventEmitter{constructor(e){super(),this.config={objMode:\"group-only\",...e}}async load(e,t,n){const r=e=>{e=Math.round(.9*e*100),this.emit(\"progress\",e)},i=e=>{for(const[t,r]of e.entries()){if(null==r.normals||r.normals instanceof Array||(r.normals=uy(r.normals)),null==r.vertices||r.vertices instanceof Array||(r.vertices=uy(r.vertices)),null==r.normals&&null!=r.vertices&&(r.normals=cy(r.vertices)),null!=r.normals&&n.index.normals){const{indices:e,vectors:t}=ly(r.normals);r.normals={indices:e,vectors:t}}if(null!=r.vertices&&n.index.vertices){const{indices:e,vectors:t}=ly(r.vertices);r.vertices={indices:e,vectors:t}}this.emit(\"progress\",100*((t+1)/e.length*(1-.9)+.9))}return e};switch(t){case Sy._3MF:{let t=await(async(e,t)=>{const n=[],r=[];if(\"PK\"!=(new TextDecoder).decode(e).substring(0,2))throw new Error('[3MF] Invalid magic bytes! (Expected \"PK\")');{const t=await kv.loadAsync(e);for(const e in t.files)\"model\"==e.toLowerCase().substring(e.length-5)&&n.push(await t.files[e].async(\"text\"))}for(const e of n){const n=Tv.parse(e,{ignoreAttributes:!1},!0);if(null==n.model)throw new Error(\"[3MF] Expected root XML element!\");if(null==n.model.build||null==n.model.resources)throw new Error(\"[3MF] Expected root XML to have `build` and `resources` child elements!\");{let e,i=1;if(null!=n.model[\"@_unit\"])switch(n.model[\"@_unit\"]){case\"inch\":i=25.4;break;case\"feet\":i=304.8;break;case\"micron\":i=.001;break;default:case\"millimeter\":i=1;break;case\"centimeter\":i=10;break;case\"meter\":i=1e3}for(const[t,r]of Object.entries(n.model))if(\"build\"==t)for(const[t,n]of Object.entries(r))if(\"item\"==t&&null!=n[\"@_transform\"]){const t=jy(n[\"@_transform\"],/([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)/g,new Error(\"[3MF] Failed to parse transformation matrix!\"));if(12!=t.length)throw new Error(`[3MF] Transformation matrix had ${t.length} items! (Expected 12)`);{const n=t.map(e=>parseFloat(e[0]));e=[[n[0],n[1],n[2],0],[n[3],n[4],n[5],0],[n[6],n[7],n[8],0],[n[9],n[10],n[11],1]]}}for(const[a,o]of Object.entries(n.model))if(\"resources\"==a)for(const[n,a]of Object.entries(o))if(\"object\"==n){const n={name:\"3MF\",normals:void 0,vertices:{indices:[],vectors:[]}};for(const[r,o]of Object.entries(a))if(\"mesh\"==r)for(const[r,a]of Object.entries(o))if(\"vertices\"==r){for(const[r,o]of Object.entries(a))if(\"vertex\"==r){const r=o.length<100?1:Math.round(o.length/100);for(const[a,s]of o.entries()){const c=i*parseFloat(s[\"@_x\"]),u=i*parseFloat(s[\"@_y\"]),l=i*parseFloat(s[\"@_z\"]);if(null!=e){let t=ny.multiply(e,[c,u,l,1]);t.pop(),t=t.map(e=>ry.round(e,10)),n.vertices.vectors.push(...t)}else n.vertices.vectors.push(c,u,l);a%r==0&&t((a+1)/o.length/2)}}}else if(\"triangles\"==r)for(const[e,r]of Object.entries(a))if(\"triangle\"==e){const e=r.length<100?1:Math.round(r.length/100);for(const[i,a]of r.entries()){const o=parseInt(a[\"@_v1\"]),s=parseInt(a[\"@_v2\"]),c=parseInt(a[\"@_v3\"]);n.vertices.indices.push(o,s,c),i%e==0&&t((i+1)/r.length/2+.5)}}n.metadata=Ay(a),r.push(n)}}}return t(1),r})(e,r);return t=i(t),t}case Sy.AMF:{let t=await(async(e,t)=>{const n=[],r=[],i=(new TextDecoder).decode(e);if(\"PK\"==i.substring(0,2)){const t=await kv.loadAsync(e);for(const e in t.files)\"amf\"==e.toLowerCase().substring(e.length-3)&&n.push(await t.files[e].async(\"text\"))}else n.push(i);for(const e of n){const n=Tv.parse(e,{ignoreAttributes:!1},!0);if(null==n.amf)throw new Error(\"[AMF] Expected root XML element!\");if(null==n.amf.object)throw new Error(\"[AMF] Expected root XML to have `object` child element!\");{let e=1;if(null!=n.amf[\"@_unit\"])switch(n.amf[\"@_unit\"]){case\"inch\":e=25.4;break;case\"feet\":e=304.8;break;case\"micron\":e=.001;break;default:case\"millimeter\":e=1;break;case\"meter\":e=1e3}for(const[i,a]of Object.entries(n.amf))if(\"object\"==i){const n={name:\"AMF\",normals:void 0,vertices:{indices:[],vectors:[]},metadata:{}};for(const[r,i]of Object.entries(a))if(\"mesh\"==r)for(const[r,a]of Object.entries(i))if(\"vertices\"==r){for(const[r,i]of Object.entries(a))if(\"vertex\"==r){const r=i.length<100?1:Math.round(i.length/100);for(const[a,o]of i.entries()){if(null!=o.coordinates){const t=e*o.coordinates.x,r=e*o.coordinates.y,i=e*o.coordinates.z;n.vertices.vectors.push(t,r,i)}a%r==0&&t((a+1)/i.length/2)}}}else if(\"volume\"==r)for(const[e,r]of Object.entries(a))if(\"triangle\"==e){const e=r.length<100?1:Math.round(r.length/100);for(const[i,a]of r.entries()){const o=a.v1,s=a.v2,c=a.v3;n.vertices.indices.push(o,s,c),i%e==0&&t((i+1)/r.length/2+.5)}}n.metadata=Ay(a),r.push(n)}}}return t(1),r})(e,r);return t=i(t),t}case Sy.OBJ:{let t=((e,t,n)=>{const r=(new TextDecoder).decode(e),i=[],a={entity:/^[og] (\\w+)/,face:/(\\d+)\\/\\d*\\/\\d*/g,float:/([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)/,line:/^((f|g|o|v) [^\\r\\n]+)/gm,vertices:/temporary/};a.vertices=new RegExp(\"^v\"+(\"\\\\s+\"+a.float.source).repeat(3));const o={name:\"\",normals:void 0,vertices:{indices:[],vectors:[]}},s=jy(r,a.line,new Error(\"[OBJ] Failed to parse lines!\")),c=s.length<100?1:Math.round(s.length/100);for(const[e,[r,u]]of s.entries()){switch(u){case\"g\":case\"o\":if(\"group-only\"==t&&\"g\"==u||\"object-only\"==t&&\"o\"==u||\"hybrid\"==t){i.push(o);const e=Py(r,a.entity,new Error(\"[OBJ] Failed to parse object!\"));o.name=e[0],o.vertices={indices:[],vectors:[]}}break;case\"v\":{const e=Py(r,a.vertices,new Error(\"[OBJ] Failed to parse vertice!\")),t=parseFloat(e[0]),n=parseFloat(e[1]),i=parseFloat(e[2]);o.vertices.vectors.push(t,n,i);break}case\"f\":{const e=jy(r,a.face,new Error(\"[OBJ] Failed to parse face!\")).map(e=>parseInt(e[0])-1);if(3==e.length)o.vertices.indices.push(...e);else{const t=uy({indices:e,vectors:o.vertices.vectors}),n=ug(t),r=uy({indices:n,vectors:t}),i=[...o.vertices.vectors,...r],{indices:a}=ly(i),s=a.slice(a.length-n.length);o.vertices.indices.push(...s)}break}}e%c==0&&n((e+1)/s.length)}return n(1),i})(e,this.config.objMode,r);return t=i(t),t}case Sy.PLY:{let t=yg(e,r);return t=i(t),t}case Sy.STL:{let t=vg(e,r);return t=i(t),t}default:throw new Error(\"Invalid file format!\")}}}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(3), __webpack_require__(9).Buffer, __webpack_require__(13).setImmediate))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nconst symbolObservable = __webpack_require__(15).default;\n\nmodule.exports = value => Boolean(value && value[symbolObservable] && value === value[symbolObservable]());\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return symbolObservablePonyfill; });\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(10)\nvar ieee754 = __webpack_require__(11)\nvar isArray = __webpack_require__(12)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(3)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(14);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(3)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(3), __webpack_require__(6)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8);\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {}\n\nvar result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(root);\n/* harmony default export */ __webpack_exports__[\"default\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(3), __webpack_require__(16)(module)))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/threads/dist-esm/worker/index.js\nvar worker = __webpack_require__(20);\n\n// EXTERNAL MODULE: ./node_modules/unified-3d-loader/dist/es/index.js\nvar es = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/_symbols.js\nconst hasSymbols = () => typeof Symbol === \"function\";\nconst hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);\nconst getSymbol = (name) => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nfunction registerObservableSymbol() {\n    if (hasSymbols() && !hasSymbol(\"observable\")) {\n        Symbol.observable = Symbol(\"observable\");\n    }\n}\nif (!hasSymbol(\"asyncIterator\")) {\n    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}\n\n// CONCATENATED MODULE: ./node_modules/observable-fns/dist.esm/observable.js\n/**\n * Based on <https://raw.githubusercontent.com/zenparsing/zen-observable/master/src/Observable.js>\n * At commit: f63849a8c60af5d514efc8e9d6138d8273c49ad6\n */\n/// <reference path=\"../types/symbols.d.ts\" />\n\nconst SymbolIterator = getSymbol(\"iterator\");\nconst SymbolObservable = getSymbol(\"observable\");\nconst SymbolSpecies = getSymbol(\"species\");\n// === Abstract Operations ===\nfunction getMethod(obj, key) {\n    const value = obj[key];\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value !== \"function\") {\n        throw new TypeError(value + \" is not a function\");\n    }\n    return value;\n}\nfunction getSpecies(obj) {\n    let ctor = obj.constructor;\n    if (ctor !== undefined) {\n        ctor = ctor[SymbolSpecies];\n        if (ctor === null) {\n            ctor = undefined;\n        }\n    }\n    return ctor !== undefined ? ctor : observable_Observable;\n}\nfunction isObservable(x) {\n    return x instanceof observable_Observable; // SPEC: Brand check\n}\nfunction hostReportError(error) {\n    if (hostReportError.log) {\n        hostReportError.log(error);\n    }\n    else {\n        setTimeout(() => { throw error; }, 0);\n    }\n}\nfunction enqueue(fn) {\n    Promise.resolve().then(() => {\n        try {\n            fn();\n        }\n        catch (e) {\n            hostReportError(e);\n        }\n    });\n}\nfunction cleanupSubscription(subscription) {\n    const cleanup = subscription._cleanup;\n    if (cleanup === undefined) {\n        return;\n    }\n    subscription._cleanup = undefined;\n    if (!cleanup) {\n        return;\n    }\n    try {\n        if (typeof cleanup === \"function\") {\n            cleanup();\n        }\n        else {\n            const unsubscribe = getMethod(cleanup, \"unsubscribe\");\n            if (unsubscribe) {\n                unsubscribe.call(cleanup);\n            }\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n}\nfunction closeSubscription(subscription) {\n    subscription._observer = undefined;\n    subscription._queue = undefined;\n    subscription._state = \"closed\";\n}\nfunction flushSubscription(subscription) {\n    const queue = subscription._queue;\n    if (!queue) {\n        return;\n    }\n    subscription._queue = undefined;\n    subscription._state = \"ready\";\n    for (const item of queue) {\n        notifySubscription(subscription, item.type, item.value);\n        if (subscription._state === \"closed\") {\n            break;\n        }\n    }\n}\nfunction notifySubscription(subscription, type, value) {\n    subscription._state = \"running\";\n    const observer = subscription._observer;\n    try {\n        const m = observer ? getMethod(observer, type) : undefined;\n        switch (type) {\n            case \"next\":\n                if (m)\n                    m.call(observer, value);\n                break;\n            case \"error\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer, value);\n                else\n                    throw value;\n                break;\n            case \"complete\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer);\n                break;\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n    if (subscription._state === \"closed\") {\n        cleanupSubscription(subscription);\n    }\n    else if (subscription._state === \"running\") {\n        subscription._state = \"ready\";\n    }\n}\nfunction onNotify(subscription, type, value) {\n    if (subscription._state === \"closed\") {\n        return;\n    }\n    if (subscription._state === \"buffering\") {\n        subscription._queue = subscription._queue || [];\n        subscription._queue.push({ type, value });\n        return;\n    }\n    if (subscription._state !== \"ready\") {\n        subscription._state = \"buffering\";\n        subscription._queue = [{ type, value }];\n        enqueue(() => flushSubscription(subscription));\n        return;\n    }\n    notifySubscription(subscription, type, value);\n}\nclass Subscription {\n    constructor(observer, subscriber) {\n        // ASSERT: observer is an object\n        // ASSERT: subscriber is callable\n        this._cleanup = undefined;\n        this._observer = observer;\n        this._queue = undefined;\n        this._state = \"initializing\";\n        const subscriptionObserver = new SubscriptionObserver(this);\n        try {\n            this._cleanup = subscriber.call(undefined, subscriptionObserver);\n        }\n        catch (e) {\n            subscriptionObserver.error(e);\n        }\n        if (this._state === \"initializing\") {\n            this._state = \"ready\";\n        }\n    }\n    get closed() {\n        return this._state === \"closed\";\n    }\n    unsubscribe() {\n        if (this._state !== \"closed\") {\n            closeSubscription(this);\n            cleanupSubscription(this);\n        }\n    }\n}\nclass SubscriptionObserver {\n    constructor(subscription) { this._subscription = subscription; }\n    get closed() { return this._subscription._state === \"closed\"; }\n    next(value) { onNotify(this._subscription, \"next\", value); }\n    error(value) { onNotify(this._subscription, \"error\", value); }\n    complete() { onNotify(this._subscription, \"complete\"); }\n}\n/**\n * The basic Observable class. This primitive is used to wrap asynchronous\n * data streams in a common standardized data type that is interoperable\n * between libraries and can be composed to represent more complex processes.\n */\nclass observable_Observable {\n    constructor(subscriber) {\n        if (!(this instanceof observable_Observable)) {\n            throw new TypeError(\"Observable cannot be called as a function\");\n        }\n        if (typeof subscriber !== \"function\") {\n            throw new TypeError(\"Observable initializer must be a function\");\n        }\n        this._subscriber = subscriber;\n    }\n    subscribe(nextOrObserver, onError, onComplete) {\n        if (typeof nextOrObserver !== \"object\" || nextOrObserver === null) {\n            nextOrObserver = {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            };\n        }\n        return new Subscription(nextOrObserver, this._subscriber);\n    }\n    pipe(first, ...mappers) {\n        // tslint:disable-next-line no-this-assignment\n        let intermediate = this;\n        for (const mapper of [first, ...mappers]) {\n            intermediate = mapper(intermediate);\n        }\n        return intermediate;\n    }\n    tap(nextOrObserver, onError, onComplete) {\n        const tapObserver = typeof nextOrObserver !== \"object\" || nextOrObserver === null\n            ? {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            }\n            : nextOrObserver;\n        return new observable_Observable(observer => {\n            return this.subscribe({\n                next(value) {\n                    tapObserver.next && tapObserver.next(value);\n                    observer.next(value);\n                },\n                error(error) {\n                    tapObserver.error && tapObserver.error(error);\n                    observer.error(error);\n                },\n                complete() {\n                    tapObserver.complete && tapObserver.complete();\n                    observer.complete();\n                },\n                start(subscription) {\n                    tapObserver.start && tapObserver.start(subscription);\n                }\n            });\n        });\n    }\n    forEach(fn) {\n        return new Promise((resolve, reject) => {\n            if (typeof fn !== \"function\") {\n                reject(new TypeError(fn + \" is not a function\"));\n                return;\n            }\n            function done() {\n                subscription.unsubscribe();\n                resolve();\n            }\n            const subscription = this.subscribe({\n                next(value) {\n                    try {\n                        fn(value, done);\n                    }\n                    catch (e) {\n                        reject(e);\n                        subscription.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n        });\n    }\n    map(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                let propagatedValue = value;\n                try {\n                    propagatedValue = fn(value);\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(propagatedValue);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    filter(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                try {\n                    if (!fn(value))\n                        return;\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(value);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    reduce(fn, seed) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        const hasSeed = arguments.length > 1;\n        let hasValue = false;\n        let acc = seed;\n        return new C(observer => this.subscribe({\n            next(value) {\n                const first = !hasValue;\n                hasValue = true;\n                if (!first || hasSeed) {\n                    try {\n                        acc = fn(acc, value);\n                    }\n                    catch (e) {\n                        return observer.error(e);\n                    }\n                }\n                else {\n                    acc = value;\n                }\n            },\n            error(e) { observer.error(e); },\n            complete() {\n                if (!hasValue && !hasSeed) {\n                    return observer.error(new TypeError(\"Cannot reduce an empty sequence\"));\n                }\n                observer.next(acc);\n                observer.complete();\n            },\n        }));\n    }\n    concat(...sources) {\n        const C = getSpecies(this);\n        return new C(observer => {\n            let subscription;\n            let index = 0;\n            function startNext(next) {\n                subscription = next.subscribe({\n                    next(v) { observer.next(v); },\n                    error(e) { observer.error(e); },\n                    complete() {\n                        if (index === sources.length) {\n                            subscription = undefined;\n                            observer.complete();\n                        }\n                        else {\n                            startNext(C.from(sources[index++]));\n                        }\n                    },\n                });\n            }\n            startNext(this);\n            return () => {\n                if (subscription) {\n                    subscription.unsubscribe();\n                    subscription = undefined;\n                }\n            };\n        });\n    }\n    flatMap(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => {\n            const subscriptions = [];\n            const outer = this.subscribe({\n                next(value) {\n                    let normalizedValue;\n                    if (fn) {\n                        try {\n                            normalizedValue = fn(value);\n                        }\n                        catch (e) {\n                            return observer.error(e);\n                        }\n                    }\n                    else {\n                        normalizedValue = value;\n                    }\n                    const inner = C.from(normalizedValue).subscribe({\n                        next(innerValue) { observer.next(innerValue); },\n                        error(e) { observer.error(e); },\n                        complete() {\n                            const i = subscriptions.indexOf(inner);\n                            if (i >= 0)\n                                subscriptions.splice(i, 1);\n                            completeIfDone();\n                        },\n                    });\n                    subscriptions.push(inner);\n                },\n                error(e) { observer.error(e); },\n                complete() { completeIfDone(); },\n            });\n            function completeIfDone() {\n                if (outer.closed && subscriptions.length === 0) {\n                    observer.complete();\n                }\n            }\n            return () => {\n                subscriptions.forEach(s => s.unsubscribe());\n                outer.unsubscribe();\n            };\n        });\n    }\n    [SymbolObservable]() { return this; }\n    static from(x) {\n        const C = (typeof this === \"function\" ? this : observable_Observable);\n        if (x == null) {\n            throw new TypeError(x + \" is not an object\");\n        }\n        const observableMethod = getMethod(x, SymbolObservable);\n        if (observableMethod) {\n            const observable = observableMethod.call(x);\n            if (Object(observable) !== observable) {\n                throw new TypeError(observable + \" is not an object\");\n            }\n            if (isObservable(observable) && observable.constructor === C) {\n                return observable;\n            }\n            return new C(observer => observable.subscribe(observer));\n        }\n        if (hasSymbol(\"iterator\")) {\n            const iteratorMethod = getMethod(x, SymbolIterator);\n            if (iteratorMethod) {\n                return new C(observer => {\n                    enqueue(() => {\n                        if (observer.closed)\n                            return;\n                        for (const item of iteratorMethod.call(x)) {\n                            observer.next(item);\n                            if (observer.closed)\n                                return;\n                        }\n                        observer.complete();\n                    });\n                });\n            }\n        }\n        if (Array.isArray(x)) {\n            return new C(observer => {\n                enqueue(() => {\n                    if (observer.closed)\n                        return;\n                    for (const item of x) {\n                        observer.next(item);\n                        if (observer.closed)\n                            return;\n                    }\n                    observer.complete();\n                });\n            });\n        }\n        throw new TypeError(x + \" is not observable\");\n    }\n    static of(...items) {\n        const C = (typeof this === \"function\" ? this : observable_Observable);\n        return new C(observer => {\n            enqueue(() => {\n                if (observer.closed)\n                    return;\n                for (const item of items) {\n                    observer.next(item);\n                    if (observer.closed)\n                        return;\n                }\n                observer.complete();\n            });\n        });\n    }\n    static get [SymbolSpecies]() { return this; }\n}\nif (hasSymbols()) {\n    Object.defineProperty(observable_Observable, Symbol(\"extensions\"), {\n        value: {\n            symbol: SymbolObservable,\n            hostReportError,\n        },\n        configurable: true,\n    });\n}\n/* harmony default export */ var observable = (observable_Observable);\n\n// CONCATENATED MODULE: ./src/parsers/unified.worker.js\n/**\n * @fileoverview Unified 3D Loader Worker\n */\n\n//Imports\n\n\n\n\n//Instance variables\nlet proxyObserver;\n\n/**\n * Unified 3D Loader worker\n */\nconst unified_worker_worker = {\n  /**\n   * Observe the progress\n   * @returns {Observable}\n   */\n  observeProgress: () => new observable(observer =>\n  {\n    proxyObserver = observer;\n  }),\n  /**\n   * Parse the file\n   * @param file {ArrayBuffer}\n   * @param format {String}\n   * @returns {Promise<Array<Object>>}\n   */\n  parse: async (file, format) =>\n  {\n    //Convert file format\n    const scopedFormat = Object.values(es[\"a\" /* FileFormats */]).find(fileFormat => fileFormat.name == format.name);\n\n    //Load and parse the file\n    const loader = new es[\"b\" /* Unified3dLoader */]();\n\n    loader.on('progress', progress =>\n    {\n      proxyObserver.next(progress);\n    });\n\n    const files = await loader.load(file, scopedFormat, {\n      index: {\n        normals: false,\n        vertices: false\n      }\n    });\n\n    return files;\n  }\n}\n\n//Expose\nObject(worker[\"a\" /* expose */])(unified_worker_worker);\n\n/***/ }),\n/* 18 */,\n/* 19 */,\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export isWorkerRuntime */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return expose; });\n/* harmony import */ var is_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7);\n/* harmony import */ var is_observable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(is_observable__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var _transferable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(4);\n/* harmony import */ var _types_messages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2);\n/* harmony import */ var _implementation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(0);\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n/** Returns `true` if this code is currently running in a worker. */\nconst isWorkerRuntime = _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* MasterMessageType */ \"a\"].cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* MasterMessageType */ \"a\"].run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => is_observable__WEBPACK_IMPORTED_MODULE_0___default()(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return Object(_transferable__WEBPACK_IMPORTED_MODULE_2__[/* isTransferDescriptor */ \"a\"])(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].error,\n        uid,\n        error: Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error)\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].running,\n        uid,\n        resultType\n    };\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: _types_messages__WEBPACK_IMPORTED_MODULE_3__[/* WorkerMessageType */ \"b\"].uncaughtError,\n            error: Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error)\n        };\n        _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(value)), error => {\n                postJobErrorMessage(jobUID, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, Object(_common__WEBPACK_IMPORTED_MODULE_1__[/* serialize */ \"b\"])(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nfunction expose(exposed) {\n    if (!_implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(_common__WEBPACK_IMPORTED_MODULE_1__[/* deserialize */ \"a\"]));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(_common__WEBPACK_IMPORTED_MODULE_1__[/* deserialize */ \"a\"]));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && _implementation__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"].isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(6)))\n\n/***/ })\n/******/ ]);");
// CONCATENATED MODULE: ./src/parsers/unified.js




function cov_1uwv8m6dsm() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/parsers/unified.js";
  var hash = "4072691b5a2a0f9c140a882eea0f305c0f8f1103";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/parsers/unified.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 17
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "1": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "3": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 49
        }
      },
      "4": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "5": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 19
        }
      },
      "6": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 64,
          column: 3
        }
      },
      "7": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "8": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "9": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 18
        }
      },
      "10": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "11": {
        start: {
          line: 42,
          column: 6
        },
        end: {
          line: 42,
          column: 52
        }
      },
      "12": {
        start: {
          line: 46,
          column: 21
        },
        end: {
          line: 46,
          column: 41
        }
      },
      "13": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 76
        }
      },
      "14": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 84
        }
      },
      "15": {
        start: {
          line: 51,
          column: 21
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "16": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "17": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "18": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 22
        }
      },
      "19": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 66,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 0
          },
          end: {
            line: 67,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 27
          },
          end: {
            line: 17,
            column: 41
          }
        }, {
          start: {
            line: 17,
            column: 44
          },
          end: {
            line: 17,
            column: 48
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4072691b5a2a0f9c140a882eea0f305c0f8f1103"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uwv8m6dsm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1uwv8m6dsm();



/**
 * @fileoverview Unified File Parser
 */
//Imports


 //Export

/* harmony default export */ var unified = (/*#__PURE__*/(function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file, format, transfer, theme, progress) {
    var worker, bytes, files, meshes, _iterator, _step, _file, normals, i, vector, geometry, material, mesh;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cov_1uwv8m6dsm().f[0]++;
            cov_1uwv8m6dsm().s[0]++;
            _context.next = 4;
            return Object(spawn["a" /* spawn */])(master_BlobWorker.fromText(unified_worker));

          case 4:
            worker = _context.sent;
            //If the transfer option is true, convert the model to a ThreadJS transferable otherwise have ThreadsJS clone the arraybuffer
            bytes = (cov_1uwv8m6dsm().s[1]++, transfer ? (cov_1uwv8m6dsm().b[0][0]++, Object(transferable["a" /* Transfer */])(file)) : (cov_1uwv8m6dsm().b[0][1]++, file)); //Observe progress

            cov_1uwv8m6dsm().s[2]++;
            worker.observeProgress().subscribe(progress); //Parse

            cov_1uwv8m6dsm().s[3]++;
            _context.next = 11;
            return worker.parse(bytes, format);

          case 11:
            files = _context.sent;
            cov_1uwv8m6dsm().s[4]++;
            //Kill the worker
            Thread.terminate(worker); //Create meshes

            meshes = (cov_1uwv8m6dsm().s[5]++, []);
            cov_1uwv8m6dsm().s[6]++;
            _iterator = _createForOfIteratorHelper(files);

            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                _file = _step.value;
                //Triplicate normals
                normals = (cov_1uwv8m6dsm().s[7]++, []);
                cov_1uwv8m6dsm().s[8]++;

                for (i = (cov_1uwv8m6dsm().s[9]++, 0); i < _file.normals.length; i += 3) {
                  vector = (cov_1uwv8m6dsm().s[10]++, [_file.normals[i], _file.normals[i + 1], _file.normals[i + 2]]);
                  cov_1uwv8m6dsm().s[11]++;
                  normals.push.apply(normals, vector.concat(vector, vector));
                } //Create the geometry


                geometry = (cov_1uwv8m6dsm().s[12]++, new BufferGeometry());
                cov_1uwv8m6dsm().s[13]++;
                geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));
                cov_1uwv8m6dsm().s[14]++;
                geometry.setAttribute('position', new Float32BufferAttribute(_file.vertices, 3)); //Create the material

                material = (cov_1uwv8m6dsm().s[15]++, new MeshPhongMaterial({
                  color: new Color(theme.primary),
                  specular: 0x111111,
                  shininess: 200
                })); //Create the mesh

                mesh = (cov_1uwv8m6dsm().s[16]++, new Mesh(geometry, material)); //Metadata

                cov_1uwv8m6dsm().s[17]++;
                mesh.metadata = _objectSpread2(_objectSpread2({}, mesh.metadata), {}, {
                  color: 'primary'
                });
                cov_1uwv8m6dsm().s[18]++;
                meshes.push(mesh);
              }
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }

            cov_1uwv8m6dsm().s[19]++;
            return _context.abrupt("return", meshes);

          case 20:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
})());
// CONCATENATED MODULE: ./src/parsers/index.js


function cov_g92hdkcqk() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/parsers/index.js";
  var hash = "45b41fed72f43d2d4bf8e9ddb2d96b1830f22be4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/parsers/index.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "1": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "2": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 81
        }
      },
      "3": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "4": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "5": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "6": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 35,
          column: 3
        }
      },
      "7": {
        start: {
          line: 31,
          column: 18
        },
        end: {
          line: 31,
          column: 68
        }
      },
      "8": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 37
        }
      },
      "9": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "10": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 15
          },
          end: {
            line: 11,
            column: 16
          }
        },
        loc: {
          start: {
            line: 12,
            column: 0
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        }, {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 35,
            column: 3
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "45b41fed72f43d2d4bf8e9ddb2d96b1830f22be4"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_g92hdkcqk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_g92hdkcqk();






/**
 * @fileoverview File Parsers
 */
//Imports


 //Export

/* harmony default export */ var parsers = (/*#__PURE__*/(function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file, extension, transfer, theme, progress) {
    var _i, _Object$values, format, meshes, cutMesh, lines, cutLines;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cov_g92hdkcqk().f[0]++;
            cov_g92hdkcqk().s[0]++;
            _i = 0, _Object$values = Object.values(es["a" /* FileFormats */]);

          case 3:
            if (!(_i < _Object$values.length)) {
              _context.next = 23;
              break;
            }

            format = _Object$values[_i];
            cov_g92hdkcqk().s[1]++;

            if (!format.extensions.includes(extension)) {
              _context.next = 19;
              break;
            }

            cov_g92hdkcqk().b[0][0]++;
            cov_g92hdkcqk().s[2]++;
            _context.next = 11;
            return unified(file, format, transfer, theme, progress);

          case 11:
            meshes = _context.sent;
            cov_g92hdkcqk().s[3]++;
            console.log('meshes :>> ', meshes);
            cutMesh = (cov_g92hdkcqk().s[4]++, meshes.slice(0));
            cov_g92hdkcqk().s[5]++;
            return _context.abrupt("return", cutMesh);

          case 19:
            cov_g92hdkcqk().b[0][1]++;

          case 20:
            _i++;
            _context.next = 3;
            break;

          case 23:
            cov_g92hdkcqk().s[6]++;

            if (!(extension == 'gcode')) {
              _context.next = 37;
              break;
            }

            cov_g92hdkcqk().b[1][0]++;
            cov_g92hdkcqk().s[7]++;
            _context.next = 29;
            return gcode(file, transfer, theme, progress);

          case 29:
            lines = _context.sent;
            cov_g92hdkcqk().s[8]++;
            console.log('lines :>> ', lines);
            cutLines = (cov_g92hdkcqk().s[9]++, lines.slice(0));
            cov_g92hdkcqk().s[10]++;
            return _context.abrupt("return", cutLines);

          case 37:
            cov_g92hdkcqk().b[1][1]++;

          case 38:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function (_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
})());
// CONCATENATED MODULE: ./src/lib/state.js
function cov_2n14c99iyh() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/lib/state.js";
  var hash = "5dc92b3a9b32b9230c6d661f884160929a5c7d7b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/lib/state.js",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5dc92b3a9b32b9230c6d661f884160929a5c7d7b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2n14c99iyh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2n14c99iyh();

/**
 * @fileoverview Viewer State
 */
/* harmony default export */ var lib_state = ({
  camera: null,
  canvas: null,
  controls: null,
  light: null,
  meshes: null,
  plane: null,
  renderer: null,
  renderID: null,
  scene: null
});
// CONCATENATED MODULE: ./src/lib/update.js



function cov_1fyp0ucau1() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/lib/update.js";
  var hash = "6e71b62c207fa6ab960d3cc0cb32560e8d7f1648";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/lib/update.js",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "1": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "2": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "3": {
        start: {
          line: 16,
          column: 6
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "4": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 73
        }
      },
      "5": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "6": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "7": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "8": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "9": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "10": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 40,
          column: 1
        }
      },
      "11": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "12": {
        start: {
          line: 42,
          column: 24
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "13": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 50,
          column: 3
        }
      },
      "14": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "15": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 48,
          column: 33
        }
      },
      "16": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "17": {
        start: {
          line: 56,
          column: 17
        },
        end: {
          line: 56,
          column: 30
        }
      },
      "18": {
        start: {
          line: 57,
          column: 2
        },
        end: {
          line: 57,
          column: 14
        }
      },
      "19": {
        start: {
          line: 58,
          column: 2
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "20": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "21": {
        start: {
          line: 61,
          column: 2
        },
        end: {
          line: 67,
          column: 3
        }
      },
      "22": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "23": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 33
        }
      },
      "24": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 79,
          column: 1
        }
      },
      "25": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 78,
          column: 3
        }
      },
      "26": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "27": {
        start: {
          line: 76,
          column: 6
        },
        end: {
          line: 76,
          column: 30
        }
      },
      "28": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "29": {
        start: {
          line: 83,
          column: 2
        },
        end: {
          line: 83,
          column: 47
        }
      },
      "30": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 86,
          column: 46
        }
      },
      "31": {
        start: {
          line: 89,
          column: 2
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "32": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "33": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "34": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 47
        }
      },
      "35": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 20
          },
          end: {
            line: 9,
            column: 21
          }
        },
        loc: {
          start: {
            line: 10,
            column: 0
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 22
          }
        },
        loc: {
          start: {
            line: 38,
            column: 0
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 25
          }
        },
        loc: {
          start: {
            line: 43,
            column: 0
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 25
          }
        },
        loc: {
          start: {
            line: 54,
            column: 0
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 22
          }
        },
        loc: {
          start: {
            line: 71,
            column: 0
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 22
          }
        },
        loc: {
          start: {
            line: 81,
            column: 0
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 81
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        }, {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        }, {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 34,
            column: 3
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        }, {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }, {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 67,
            column: 3
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        }, {
          start: {
            line: 72,
            column: 2
          },
          end: {
            line: 78,
            column: 3
          }
        }],
        line: 72
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        }, {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }, {
          start: {
            line: 94,
            column: 6
          },
          end: {
            line: 102,
            column: 7
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 10
          },
          end: {
            line: 94,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 10
          },
          end: {
            line: 94,
            column: 37
          }
        }, {
          start: {
            line: 94,
            column: 41
          },
          end: {
            line: 94,
            column: 90
          }
        }],
        line: 94
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e71b62c207fa6ab960d3cc0cb32560e8d7f1648"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fyp0ucau1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1fyp0ucau1();





/**
 * @fileoverview State Updater
 */
//Imports


cov_1fyp0ucau1().s[0]++;
var update_file = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_file, extension, transfer, theme, progress) {
    var _iterator, _step, mesh, meshes, _iterator2, _step2, _mesh;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cov_1fyp0ucau1().f[0]++;
            cov_1fyp0ucau1().s[1]++;

            //Remove existing meshes
            if (lib_state.meshes != null) {
              cov_1fyp0ucau1().b[0][0]++;
              cov_1fyp0ucau1().s[2]++;
              _iterator = _createForOfIteratorHelper(lib_state.meshes);

              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  mesh = _step.value;
                  cov_1fyp0ucau1().s[3]++;
                  lib_state.scene.remove(mesh);
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
            } else {
              cov_1fyp0ucau1().b[0][1]++;
            } //Parse and load


            cov_1fyp0ucau1().s[4]++;
            _context.next = 6;
            return parsers(_file, extension, transfer, theme, progress);

          case 6:
            meshes = _context.sent;
            cov_1fyp0ucau1().s[5]++;
            console.log('meshes :>> ', meshes); //Save for later manipulation

            cov_1fyp0ucau1().s[6]++;
            lib_state.meshes = meshes; //Add to scene

            cov_1fyp0ucau1().s[7]++;

            if (lib_state.meshes != null) {
              cov_1fyp0ucau1().b[1][0]++;
              cov_1fyp0ucau1().s[8]++;
              _iterator2 = _createForOfIteratorHelper(lib_state.meshes);

              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                  _mesh = _step2.value;
                  cov_1fyp0ucau1().s[9]++;
                  lib_state.scene.add(_mesh);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
            } else {
              cov_1fyp0ucau1().b[1][1]++;
            }

          case 13:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function file(_x, _x2, _x3, _x4, _x5) {
    return _ref.apply(this, arguments);
  };
}();
cov_1fyp0ucau1().s[10]++;
var update_plane = function plane(_ref2) {
  var X = _ref2.X,
      Y = _ref2.Y;
  cov_1fyp0ucau1().f[1]++;
  cov_1fyp0ucau1().s[11]++;
  lib_state.plane.scale.set(X, Y, 1);
};
cov_1fyp0ucau1().s[12]++;
var update_position = function position(_ref3) {
  var X = _ref3.X,
      Y = _ref3.Y,
      Z = _ref3.Z;
  cov_1fyp0ucau1().f[2]++;
  cov_1fyp0ucau1().s[13]++;

  if (lib_state.meshes != null) {
    cov_1fyp0ucau1().b[2][0]++;
    cov_1fyp0ucau1().s[14]++;

    var _iterator3 = _createForOfIteratorHelper(lib_state.meshes),
        _step3;

    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var mesh = _step3.value;
        cov_1fyp0ucau1().s[15]++;
        mesh.position.set(X, Y, Z);
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
  } else {
    cov_1fyp0ucau1().b[2][1]++;
  }
};
cov_1fyp0ucau1().s[16]++;
var update_rotation = function rotation(_ref4) {
  var X = _ref4.X,
      Y = _ref4.Y,
      Z = _ref4.Z;
  cov_1fyp0ucau1().f[3]++;
  //Convert to radians
  var scalar = (cov_1fyp0ucau1().s[17]++, Math.PI / 180);
  cov_1fyp0ucau1().s[18]++;
  X *= scalar;
  cov_1fyp0ucau1().s[19]++;
  Y *= scalar;
  cov_1fyp0ucau1().s[20]++;
  Z *= scalar;
  cov_1fyp0ucau1().s[21]++;

  if (lib_state.meshes != null) {
    cov_1fyp0ucau1().b[3][0]++;
    cov_1fyp0ucau1().s[22]++;

    var _iterator4 = _createForOfIteratorHelper(lib_state.meshes),
        _step4;

    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var mesh = _step4.value;
        cov_1fyp0ucau1().s[23]++;
        mesh.rotation.set(X, Y, Z);
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }
  } else {
    cov_1fyp0ucau1().b[3][1]++;
  }
};
cov_1fyp0ucau1().s[24]++;
var update_scale = function scale(_ref5) {
  var X = _ref5.X,
      Y = _ref5.Y,
      Z = _ref5.Z;
  cov_1fyp0ucau1().f[4]++;
  cov_1fyp0ucau1().s[25]++;

  if (lib_state.meshes != null) {
    cov_1fyp0ucau1().b[4][0]++;
    cov_1fyp0ucau1().s[26]++;

    var _iterator5 = _createForOfIteratorHelper(lib_state.meshes),
        _step5;

    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var mesh = _step5.value;
        cov_1fyp0ucau1().s[27]++;
        mesh.scale.set(X, Y, Z);
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }
  } else {
    cov_1fyp0ucau1().b[4][1]++;
  }
};
cov_1fyp0ucau1().s[28]++;
var update_theme = function theme(_theme) {
  cov_1fyp0ucau1().f[5]++;
  cov_1fyp0ucau1().s[29]++;
  //Update background
  lib_state.scene.background.set(_theme.background); //Update plane

  cov_1fyp0ucau1().s[30]++;
  lib_state.plane.material.color.set(_theme.plane); //Update meshes

  cov_1fyp0ucau1().s[31]++;

  if (lib_state.meshes != null) {
    cov_1fyp0ucau1().b[5][0]++;
    cov_1fyp0ucau1().s[32]++;

    var _iterator6 = _createForOfIteratorHelper(lib_state.meshes),
        _step6;

    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
        var mesh = _step6.value;
        cov_1fyp0ucau1().s[33]++;

        //If the mesh lacks the color metadata property or the color doesn't exist, use the primary color
        if ((cov_1fyp0ucau1().b[7][0]++, mesh.metadata.color == null) || (cov_1fyp0ucau1().b[7][1]++, !Object.keys(_theme).includes(mesh.metadata.color))) {
          cov_1fyp0ucau1().b[6][0]++;
          cov_1fyp0ucau1().s[34]++;
          mesh.material.color.set(_theme.primary);
        } //Otherwise set the mesh color to the primary color
        else {
            cov_1fyp0ucau1().b[6][1]++;
            cov_1fyp0ucau1().s[35]++;
            mesh.material.color.set(_theme[mesh.metadata.color]);
          }
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }
  } else {
    cov_1fyp0ucau1().b[5][1]++;
  }
};
// CONCATENATED MODULE: ./node_modules/three/examples/jsm/controls/OrbitControls.js


// This set of controls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
//
//    Orbit - left mouse / touch: one-finger move
//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish
//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move

var OrbitControls = function ( object, domElement ) {

	if ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter "domElement" is now mandatory.' );
	if ( domElement === document ) console.error( 'THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.' );

	this.object = object;
	this.domElement = domElement;

	// Set to false to disable this control
	this.enabled = true;

	// "target" sets the location of focus, where the object orbits around
	this.target = new Vector3();

	// How far you can dolly in and out ( PerspectiveCamera only )
	this.minDistance = 0;
	this.maxDistance = Infinity;

	// How far you can zoom in and out ( OrthographicCamera only )
	this.minZoom = 0;
	this.maxZoom = Infinity;

	// How far you can orbit vertically, upper and lower limits.
	// Range is 0 to Math.PI radians.
	this.minPolarAngle = 0; // radians
	this.maxPolarAngle = Math.PI; // radians

	// How far you can orbit horizontally, upper and lower limits.
	// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )
	this.minAzimuthAngle = - Infinity; // radians
	this.maxAzimuthAngle = Infinity; // radians

	// Set to true to enable damping (inertia)
	// If damping is enabled, you must call controls.update() in your animation loop
	this.enableDamping = false;
	this.dampingFactor = 0.05;

	// This option actually enables dollying in and out; left as "zoom" for backwards compatibility.
	// Set to false to disable zooming
	this.enableZoom = true;
	this.zoomSpeed = 1.0;

	// Set to false to disable rotating
	this.enableRotate = true;
	this.rotateSpeed = 1.0;

	// Set to false to disable panning
	this.enablePan = true;
	this.panSpeed = 1.0;
	this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up
	this.keyPanSpeed = 7.0;	// pixels moved per arrow key push

	// Set to true to automatically rotate around the target
	// If auto-rotate is enabled, you must call controls.update() in your animation loop
	this.autoRotate = false;
	this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60

	// The four arrow keys
	this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };

	// Mouse buttons
	this.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };

	// Touch fingers
	this.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };

	// for reset
	this.target0 = this.target.clone();
	this.position0 = this.object.position.clone();
	this.zoom0 = this.object.zoom;

	// the target DOM element for key events
	this._domElementKeyEvents = null;

	//
	// public methods
	//

	this.getPolarAngle = function () {

		return spherical.phi;

	};

	this.getAzimuthalAngle = function () {

		return spherical.theta;

	};

	this.listenToKeyEvents = function ( domElement ) {

		domElement.addEventListener( 'keydown', onKeyDown );
		this._domElementKeyEvents = domElement;

	};

	this.saveState = function () {

		scope.target0.copy( scope.target );
		scope.position0.copy( scope.object.position );
		scope.zoom0 = scope.object.zoom;

	};

	this.reset = function () {

		scope.target.copy( scope.target0 );
		scope.object.position.copy( scope.position0 );
		scope.object.zoom = scope.zoom0;

		scope.object.updateProjectionMatrix();
		scope.dispatchEvent( changeEvent );

		scope.update();

		state = STATE.NONE;

	};

	// this method is exposed, but perhaps it would be better if we can make it private...
	this.update = function () {

		var offset = new Vector3();

		// so camera.up is the orbit axis
		var quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );
		var quatInverse = quat.clone().invert();

		var lastPosition = new Vector3();
		var lastQuaternion = new Quaternion();

		var twoPI = 2 * Math.PI;

		return function update() {

			var position = scope.object.position;

			offset.copy( position ).sub( scope.target );

			// rotate offset to "y-axis-is-up" space
			offset.applyQuaternion( quat );

			// angle from z-axis around y-axis
			spherical.setFromVector3( offset );

			if ( scope.autoRotate && state === STATE.NONE ) {

				rotateLeft( getAutoRotationAngle() );

			}

			if ( scope.enableDamping ) {

				spherical.theta += sphericalDelta.theta * scope.dampingFactor;
				spherical.phi += sphericalDelta.phi * scope.dampingFactor;

			} else {

				spherical.theta += sphericalDelta.theta;
				spherical.phi += sphericalDelta.phi;

			}

			// restrict theta to be between desired limits

			var min = scope.minAzimuthAngle;
			var max = scope.maxAzimuthAngle;

			if ( isFinite( min ) && isFinite( max ) ) {

				if ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;

				if ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;

				if ( min <= max ) {

					spherical.theta = Math.max( min, Math.min( max, spherical.theta ) );

				} else {

					spherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?
						Math.max( min, spherical.theta ) :
						Math.min( max, spherical.theta );

				}

			}

			// restrict phi to be between desired limits
			spherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );

			spherical.makeSafe();


			spherical.radius *= scale;

			// restrict radius to be between desired limits
			spherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );

			// move target to panned location

			if ( scope.enableDamping === true ) {

				scope.target.addScaledVector( panOffset, scope.dampingFactor );

			} else {

				scope.target.add( panOffset );

			}

			offset.setFromSpherical( spherical );

			// rotate offset back to "camera-up-vector-is-up" space
			offset.applyQuaternion( quatInverse );

			position.copy( scope.target ).add( offset );

			scope.object.lookAt( scope.target );

			if ( scope.enableDamping === true ) {

				sphericalDelta.theta *= ( 1 - scope.dampingFactor );
				sphericalDelta.phi *= ( 1 - scope.dampingFactor );

				panOffset.multiplyScalar( 1 - scope.dampingFactor );

			} else {

				sphericalDelta.set( 0, 0, 0 );

				panOffset.set( 0, 0, 0 );

			}

			scale = 1;

			// update condition is:
			// min(camera displacement, camera rotation in radians)^2 > EPS
			// using small-angle approximation cos(x/2) = 1 - x^2 / 8

			if ( zoomChanged ||
				lastPosition.distanceToSquared( scope.object.position ) > EPS ||
				8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {

				scope.dispatchEvent( changeEvent );

				lastPosition.copy( scope.object.position );
				lastQuaternion.copy( scope.object.quaternion );
				zoomChanged = false;

				return true;

			}

			return false;

		};

	}();

	this.dispose = function () {

		scope.domElement.removeEventListener( 'contextmenu', onContextMenu );

		scope.domElement.removeEventListener( 'pointerdown', onPointerDown );
		scope.domElement.removeEventListener( 'wheel', onMouseWheel );

		scope.domElement.removeEventListener( 'touchstart', onTouchStart );
		scope.domElement.removeEventListener( 'touchend', onTouchEnd );
		scope.domElement.removeEventListener( 'touchmove', onTouchMove );

		scope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );
		scope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );


		if ( scope._domElementKeyEvents !== null ) {

			scope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );

		}

		//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?

	};

	//
	// internals
	//

	var scope = this;

	var changeEvent = { type: 'change' };
	var startEvent = { type: 'start' };
	var endEvent = { type: 'end' };

	var STATE = {
		NONE: - 1,
		ROTATE: 0,
		DOLLY: 1,
		PAN: 2,
		TOUCH_ROTATE: 3,
		TOUCH_PAN: 4,
		TOUCH_DOLLY_PAN: 5,
		TOUCH_DOLLY_ROTATE: 6
	};

	var state = STATE.NONE;

	var EPS = 0.000001;

	// current position in spherical coordinates
	var spherical = new Spherical();
	var sphericalDelta = new Spherical();

	var scale = 1;
	var panOffset = new Vector3();
	var zoomChanged = false;

	var rotateStart = new Vector2();
	var rotateEnd = new Vector2();
	var rotateDelta = new Vector2();

	var panStart = new Vector2();
	var panEnd = new Vector2();
	var panDelta = new Vector2();

	var dollyStart = new Vector2();
	var dollyEnd = new Vector2();
	var dollyDelta = new Vector2();

	function getAutoRotationAngle() {

		return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;

	}

	function getZoomScale() {

		return Math.pow( 0.95, scope.zoomSpeed );

	}

	function rotateLeft( angle ) {

		sphericalDelta.theta -= angle;

	}

	function rotateUp( angle ) {

		sphericalDelta.phi -= angle;

	}

	var panLeft = function () {

		var v = new Vector3();

		return function panLeft( distance, objectMatrix ) {

			v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix
			v.multiplyScalar( - distance );

			panOffset.add( v );

		};

	}();

	var panUp = function () {

		var v = new Vector3();

		return function panUp( distance, objectMatrix ) {

			if ( scope.screenSpacePanning === true ) {

				v.setFromMatrixColumn( objectMatrix, 1 );

			} else {

				v.setFromMatrixColumn( objectMatrix, 0 );
				v.crossVectors( scope.object.up, v );

			}

			v.multiplyScalar( distance );

			panOffset.add( v );

		};

	}();

	// deltaX and deltaY are in pixels; right and down are positive
	var pan = function () {

		var offset = new Vector3();

		return function pan( deltaX, deltaY ) {

			var element = scope.domElement;

			if ( scope.object.isPerspectiveCamera ) {

				// perspective
				var position = scope.object.position;
				offset.copy( position ).sub( scope.target );
				var targetDistance = offset.length();

				// half of the fov is center to top of screen
				targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );

				// we use only clientHeight here so aspect ratio does not distort speed
				panLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );
				panUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );

			} else if ( scope.object.isOrthographicCamera ) {

				// orthographic
				panLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );
				panUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );

			} else {

				// camera neither orthographic nor perspective
				console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );
				scope.enablePan = false;

			}

		};

	}();

	function dollyOut( dollyScale ) {

		if ( scope.object.isPerspectiveCamera ) {

			scale /= dollyScale;

		} else if ( scope.object.isOrthographicCamera ) {

			scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );
			scope.object.updateProjectionMatrix();
			zoomChanged = true;

		} else {

			console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );
			scope.enableZoom = false;

		}

	}

	function dollyIn( dollyScale ) {

		if ( scope.object.isPerspectiveCamera ) {

			scale *= dollyScale;

		} else if ( scope.object.isOrthographicCamera ) {

			scope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );
			scope.object.updateProjectionMatrix();
			zoomChanged = true;

		} else {

			console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );
			scope.enableZoom = false;

		}

	}

	//
	// event callbacks - update the object state
	//

	function handleMouseDownRotate( event ) {

		rotateStart.set( event.clientX, event.clientY );

	}

	function handleMouseDownDolly( event ) {

		dollyStart.set( event.clientX, event.clientY );

	}

	function handleMouseDownPan( event ) {

		panStart.set( event.clientX, event.clientY );

	}

	function handleMouseMoveRotate( event ) {

		rotateEnd.set( event.clientX, event.clientY );

		rotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );

		var element = scope.domElement;

		rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height

		rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );

		rotateStart.copy( rotateEnd );

		scope.update();

	}

	function handleMouseMoveDolly( event ) {

		dollyEnd.set( event.clientX, event.clientY );

		dollyDelta.subVectors( dollyEnd, dollyStart );

		if ( dollyDelta.y > 0 ) {

			dollyOut( getZoomScale() );

		} else if ( dollyDelta.y < 0 ) {

			dollyIn( getZoomScale() );

		}

		dollyStart.copy( dollyEnd );

		scope.update();

	}

	function handleMouseMovePan( event ) {

		panEnd.set( event.clientX, event.clientY );

		panDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );

		pan( panDelta.x, panDelta.y );

		panStart.copy( panEnd );

		scope.update();

	}

	function handleMouseUp( /*event*/ ) {

		// no-op

	}

	function handleMouseWheel( event ) {

		if ( event.deltaY < 0 ) {

			dollyIn( getZoomScale() );

		} else if ( event.deltaY > 0 ) {

			dollyOut( getZoomScale() );

		}

		scope.update();

	}

	function handleKeyDown( event ) {

		var needsUpdate = false;

		switch ( event.keyCode ) {

			case scope.keys.UP:
				pan( 0, scope.keyPanSpeed );
				needsUpdate = true;
				break;

			case scope.keys.BOTTOM:
				pan( 0, - scope.keyPanSpeed );
				needsUpdate = true;
				break;

			case scope.keys.LEFT:
				pan( scope.keyPanSpeed, 0 );
				needsUpdate = true;
				break;

			case scope.keys.RIGHT:
				pan( - scope.keyPanSpeed, 0 );
				needsUpdate = true;
				break;

		}

		if ( needsUpdate ) {

			// prevent the browser from scrolling on cursor keys
			event.preventDefault();

			scope.update();

		}


	}

	function handleTouchStartRotate( event ) {

		if ( event.touches.length == 1 ) {

			rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );

		} else {

			var x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );
			var y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );

			rotateStart.set( x, y );

		}

	}

	function handleTouchStartPan( event ) {

		if ( event.touches.length == 1 ) {

			panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );

		} else {

			var x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );
			var y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );

			panStart.set( x, y );

		}

	}

	function handleTouchStartDolly( event ) {

		var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;
		var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;

		var distance = Math.sqrt( dx * dx + dy * dy );

		dollyStart.set( 0, distance );

	}

	function handleTouchStartDollyPan( event ) {

		if ( scope.enableZoom ) handleTouchStartDolly( event );

		if ( scope.enablePan ) handleTouchStartPan( event );

	}

	function handleTouchStartDollyRotate( event ) {

		if ( scope.enableZoom ) handleTouchStartDolly( event );

		if ( scope.enableRotate ) handleTouchStartRotate( event );

	}

	function handleTouchMoveRotate( event ) {

		if ( event.touches.length == 1 ) {

			rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );

		} else {

			var x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );
			var y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );

			rotateEnd.set( x, y );

		}

		rotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );

		var element = scope.domElement;

		rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height

		rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );

		rotateStart.copy( rotateEnd );

	}

	function handleTouchMovePan( event ) {

		if ( event.touches.length == 1 ) {

			panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );

		} else {

			var x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );
			var y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );

			panEnd.set( x, y );

		}

		panDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );

		pan( panDelta.x, panDelta.y );

		panStart.copy( panEnd );

	}

	function handleTouchMoveDolly( event ) {

		var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;
		var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;

		var distance = Math.sqrt( dx * dx + dy * dy );

		dollyEnd.set( 0, distance );

		dollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );

		dollyOut( dollyDelta.y );

		dollyStart.copy( dollyEnd );

	}

	function handleTouchMoveDollyPan( event ) {

		if ( scope.enableZoom ) handleTouchMoveDolly( event );

		if ( scope.enablePan ) handleTouchMovePan( event );

	}

	function handleTouchMoveDollyRotate( event ) {

		if ( scope.enableZoom ) handleTouchMoveDolly( event );

		if ( scope.enableRotate ) handleTouchMoveRotate( event );

	}

	function handleTouchEnd( /*event*/ ) {

		// no-op

	}

	//
	// event handlers - FSM: listen for events and reset state
	//

	function onPointerDown( event ) {

		if ( scope.enabled === false ) return;

		switch ( event.pointerType ) {

			case 'mouse':
			case 'pen':
				onMouseDown( event );
				break;

			// TODO touch

		}

	}

	function onPointerMove( event ) {

		if ( scope.enabled === false ) return;

		switch ( event.pointerType ) {

			case 'mouse':
			case 'pen':
				onMouseMove( event );
				break;

			// TODO touch

		}

	}

	function onPointerUp( event ) {

		switch ( event.pointerType ) {

			case 'mouse':
			case 'pen':
				onMouseUp( event );
				break;

			// TODO touch

		}

	}

	function onMouseDown( event ) {

		// Prevent the browser from scrolling.
		event.preventDefault();

		// Manually set the focus since calling preventDefault above
		// prevents the browser from setting it automatically.

		scope.domElement.focus ? scope.domElement.focus() : window.focus();

		var mouseAction;

		switch ( event.button ) {

			case 0:

				mouseAction = scope.mouseButtons.LEFT;
				break;

			case 1:

				mouseAction = scope.mouseButtons.MIDDLE;
				break;

			case 2:

				mouseAction = scope.mouseButtons.RIGHT;
				break;

			default:

				mouseAction = - 1;

		}

		switch ( mouseAction ) {

			case MOUSE.DOLLY:

				if ( scope.enableZoom === false ) return;

				handleMouseDownDolly( event );

				state = STATE.DOLLY;

				break;

			case MOUSE.ROTATE:

				if ( event.ctrlKey || event.metaKey || event.shiftKey ) {

					if ( scope.enablePan === false ) return;

					handleMouseDownPan( event );

					state = STATE.PAN;

				} else {

					if ( scope.enableRotate === false ) return;

					handleMouseDownRotate( event );

					state = STATE.ROTATE;

				}

				break;

			case MOUSE.PAN:

				if ( event.ctrlKey || event.metaKey || event.shiftKey ) {

					if ( scope.enableRotate === false ) return;

					handleMouseDownRotate( event );

					state = STATE.ROTATE;

				} else {

					if ( scope.enablePan === false ) return;

					handleMouseDownPan( event );

					state = STATE.PAN;

				}

				break;

			default:

				state = STATE.NONE;

		}

		if ( state !== STATE.NONE ) {

			scope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );
			scope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );

			scope.dispatchEvent( startEvent );

		}

	}

	function onMouseMove( event ) {

		if ( scope.enabled === false ) return;

		event.preventDefault();

		switch ( state ) {

			case STATE.ROTATE:

				if ( scope.enableRotate === false ) return;

				handleMouseMoveRotate( event );

				break;

			case STATE.DOLLY:

				if ( scope.enableZoom === false ) return;

				handleMouseMoveDolly( event );

				break;

			case STATE.PAN:

				if ( scope.enablePan === false ) return;

				handleMouseMovePan( event );

				break;

		}

	}

	function onMouseUp( event ) {

		scope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );
		scope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );

		if ( scope.enabled === false ) return;

		handleMouseUp( event );

		scope.dispatchEvent( endEvent );

		state = STATE.NONE;

	}

	function onMouseWheel( event ) {

		if ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;

		event.preventDefault();
		event.stopPropagation();

		scope.dispatchEvent( startEvent );

		handleMouseWheel( event );

		scope.dispatchEvent( endEvent );

	}

	function onKeyDown( event ) {

		if ( scope.enabled === false || scope.enablePan === false ) return;

		handleKeyDown( event );

	}

	function onTouchStart( event ) {

		if ( scope.enabled === false ) return;

		event.preventDefault(); // prevent scrolling

		switch ( event.touches.length ) {

			case 1:

				switch ( scope.touches.ONE ) {

					case TOUCH.ROTATE:

						if ( scope.enableRotate === false ) return;

						handleTouchStartRotate( event );

						state = STATE.TOUCH_ROTATE;

						break;

					case TOUCH.PAN:

						if ( scope.enablePan === false ) return;

						handleTouchStartPan( event );

						state = STATE.TOUCH_PAN;

						break;

					default:

						state = STATE.NONE;

				}

				break;

			case 2:

				switch ( scope.touches.TWO ) {

					case TOUCH.DOLLY_PAN:

						if ( scope.enableZoom === false && scope.enablePan === false ) return;

						handleTouchStartDollyPan( event );

						state = STATE.TOUCH_DOLLY_PAN;

						break;

					case TOUCH.DOLLY_ROTATE:

						if ( scope.enableZoom === false && scope.enableRotate === false ) return;

						handleTouchStartDollyRotate( event );

						state = STATE.TOUCH_DOLLY_ROTATE;

						break;

					default:

						state = STATE.NONE;

				}

				break;

			default:

				state = STATE.NONE;

		}

		if ( state !== STATE.NONE ) {

			scope.dispatchEvent( startEvent );

		}

	}

	function onTouchMove( event ) {

		if ( scope.enabled === false ) return;

		event.preventDefault(); // prevent scrolling
		event.stopPropagation();

		switch ( state ) {

			case STATE.TOUCH_ROTATE:

				if ( scope.enableRotate === false ) return;

				handleTouchMoveRotate( event );

				scope.update();

				break;

			case STATE.TOUCH_PAN:

				if ( scope.enablePan === false ) return;

				handleTouchMovePan( event );

				scope.update();

				break;

			case STATE.TOUCH_DOLLY_PAN:

				if ( scope.enableZoom === false && scope.enablePan === false ) return;

				handleTouchMoveDollyPan( event );

				scope.update();

				break;

			case STATE.TOUCH_DOLLY_ROTATE:

				if ( scope.enableZoom === false && scope.enableRotate === false ) return;

				handleTouchMoveDollyRotate( event );

				scope.update();

				break;

			default:

				state = STATE.NONE;

		}

	}

	function onTouchEnd( event ) {

		if ( scope.enabled === false ) return;

		handleTouchEnd( event );

		scope.dispatchEvent( endEvent );

		state = STATE.NONE;

	}

	function onContextMenu( event ) {

		if ( scope.enabled === false ) return;

		event.preventDefault();

	}

	//

	scope.domElement.addEventListener( 'contextmenu', onContextMenu );

	scope.domElement.addEventListener( 'pointerdown', onPointerDown );
	scope.domElement.addEventListener( 'wheel', onMouseWheel );

	scope.domElement.addEventListener( 'touchstart', onTouchStart );
	scope.domElement.addEventListener( 'touchend', onTouchEnd );
	scope.domElement.addEventListener( 'touchmove', onTouchMove );

	// force an update at start

	this.update();

};

OrbitControls.prototype = Object.create( EventDispatcher.prototype );
OrbitControls.prototype.constructor = OrbitControls;


// This set of controls performs orbiting, dollying (zooming), and panning.
// Unlike TrackballControls, it maintains the "up" direction object.up (+Y by default).
// This is very similar to OrbitControls, another set of touch behavior
//
//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate
//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish
//    Pan - left mouse, or arrow keys / touch: one-finger move

var MapControls = function ( object, domElement ) {

	OrbitControls.call( this, object, domElement );

	this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up

	this.mouseButtons.LEFT = MOUSE.PAN;
	this.mouseButtons.RIGHT = MOUSE.ROTATE;

	this.touches.ONE = TOUCH.PAN;
	this.touches.TWO = TOUCH.DOLLY_ROTATE;

};

MapControls.prototype = Object.create( EventDispatcher.prototype );
MapControls.prototype.constructor = MapControls;



// CONCATENATED MODULE: ./src/lib/scene.js



function cov_1p9id9jzpv() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/lib/scene.js";
  var hash = "924a1bf0ef84076b1ea93847aaafc821781413bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/lib/scene.js",
    statementMap: {
      "0": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "1": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 25,
          column: 78
        }
      },
      "2": {
        start: {
          line: 28,
          column: 2
        },
        end: {
          line: 28,
          column: 77
        }
      },
      "3": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "4": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 105,
          column: 1
        }
      },
      "5": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "6": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 39,
          column: 28
        }
      },
      "7": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 40,
          column: 55
        }
      },
      "8": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 43,
          column: 56
        }
      },
      "9": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "10": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 45,
          column: 31
        }
      },
      "11": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "12": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 45
        }
      },
      "13": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "14": {
        start: {
          line: 53,
          column: 2
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "15": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "16": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "17": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 60,
          column: 78
        }
      },
      "18": {
        start: {
          line: 61,
          column: 2
        },
        end: {
          line: 61,
          column: 54
        }
      },
      "19": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 64,
          column: 44
        }
      },
      "20": {
        start: {
          line: 67,
          column: 2
        },
        end: {
          line: 67,
          column: 107
        }
      },
      "21": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "22": {
        start: {
          line: 71,
          column: 2
        },
        end: {
          line: 71,
          column: 65
        }
      },
      "23": {
        start: {
          line: 72,
          column: 2
        },
        end: {
          line: 72,
          column: 35
        }
      },
      "24": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 73,
          column: 33
        }
      },
      "25": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 74,
          column: 35
        }
      },
      "26": {
        start: {
          line: 75,
          column: 2
        },
        end: {
          line: 75,
          column: 35
        }
      },
      "27": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "28": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 81,
          column: 4
        }
      },
      "29": {
        start: {
          line: 84,
          column: 18
        },
        end: {
          line: 94,
          column: 3
        }
      },
      "30": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 28
        }
      },
      "31": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 53
        }
      },
      "32": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 52
        }
      },
      "33": {
        start: {
          line: 95,
          column: 2
        },
        end: {
          line: 95,
          column: 12
        }
      },
      "34": {
        start: {
          line: 98,
          column: 2
        },
        end: {
          line: 104,
          column: 3
        }
      },
      "35": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "36": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 19
        }
      },
      "37": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 135,
          column: 1
        }
      },
      "38": {
        start: {
          line: 111,
          column: 2
        },
        end: {
          line: 111,
          column: 47
        }
      },
      "39": {
        start: {
          line: 114,
          column: 2
        },
        end: {
          line: 127,
          column: 3
        }
      },
      "40": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "41": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 30
        }
      },
      "42": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 126,
          column: 5
        }
      },
      "43": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 125,
          column: 30
        }
      },
      "44": {
        start: {
          line: 130,
          column: 2
        },
        end: {
          line: 130,
          column: 39
        }
      },
      "45": {
        start: {
          line: 133,
          column: 2
        },
        end: {
          line: 133,
          column: 27
        }
      },
      "46": {
        start: {
          line: 134,
          column: 2
        },
        end: {
          line: 134,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 16
          }
        },
        loc: {
          start: {
            line: 23,
            column: 0
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 21
          },
          end: {
            line: 33,
            column: 22
          }
        },
        loc: {
          start: {
            line: 34,
            column: 0
          },
          end: {
            line: 105,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 19
          }
        },
        loc: {
          start: {
            line: 85,
            column: 2
          },
          end: {
            line: 94,
            column: 3
          }
        },
        line: 85
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 33
          },
          end: {
            line: 100,
            column: 34
          }
        },
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 25
          }
        },
        loc: {
          start: {
            line: 109,
            column: 0
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 109
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        }, {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 104,
            column: 3
          }
        }],
        line: 98
      },
      "1": {
        loc: {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 43
          }
        }, {
          start: {
            line: 98,
            column: 47
          },
          end: {
            line: 98,
            column: 80
          }
        }],
        line: 98
      },
      "2": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }, {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        }],
        line: 117
      },
      "3": {
        loc: {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 117,
            column: 29
          }
        }, {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 117,
            column: 75
          }
        }],
        line: 117
      },
      "4": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        }, {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        }],
        line: 123
      },
      "5": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 29
          }
        }, {
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 123,
            column: 75
          }
        }],
        line: 123
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "924a1bf0ef84076b1ea93847aaafc821781413bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p9id9jzpv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1p9id9jzpv();


/**
 * @fileoverview ThreeJS Scene Management
 */
//Imports


 //Resize event handler

cov_1p9id9jzpv().s[0]++;

var scene_resize = function resize() {
  cov_1p9id9jzpv().f[0]++;
  cov_1p9id9jzpv().s[1]++;
  //Update renderer
  lib_state.renderer.setSize(lib_state.canvas.clientWidth, lib_state.canvas.clientHeight); //Update camera aspect ratio

  cov_1p9id9jzpv().s[2]++;
  lib_state.camera.aspect = lib_state.canvas.clientWidth / lib_state.canvas.clientHeight;
  cov_1p9id9jzpv().s[3]++;
  lib_state.camera.updateProjectionMatrix();
}; //Export


cov_1p9id9jzpv().s[4]++;
var setup = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(canvas, plane, theme) {
    var animate;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cov_1p9id9jzpv().f[1]++;
            cov_1p9id9jzpv().s[5]++;
            //Store variables
            lib_state.canvas = canvas; //Scene

            cov_1p9id9jzpv().s[6]++;
            lib_state.scene = new Scene();
            cov_1p9id9jzpv().s[7]++;
            lib_state.scene.background = new Color(theme.background); //Light

            cov_1p9id9jzpv().s[8]++;
            lib_state.light = new HemisphereLight(0xffffff, 0x505050);
            cov_1p9id9jzpv().s[9]++;
            lib_state.light.position.set(0, 10, 0);
            cov_1p9id9jzpv().s[10]++;
            lib_state.scene.add(lib_state.light); //Plane

            cov_1p9id9jzpv().s[11]++;
            lib_state.plane = new Mesh(new PlaneGeometry(), new MeshBasicMaterial({
              color: new Color(theme.plane)
            }));
            cov_1p9id9jzpv().s[12]++;
            lib_state.plane.scale.set(plane.X, plane.Y, 1);
            cov_1p9id9jzpv().s[13]++;
            lib_state.plane.rotateX(-Math.PI / 2);
            cov_1p9id9jzpv().s[14]++;
            lib_state.scene.add(lib_state.plane); //Renderer

            cov_1p9id9jzpv().s[15]++;
            lib_state.renderer = new WebGLRenderer({
              antialias: true
            });
            cov_1p9id9jzpv().s[16]++;
            lib_state.renderer.setPixelRatio(window.devicePixelRatio);
            cov_1p9id9jzpv().s[17]++;
            lib_state.renderer.setSize(lib_state.canvas.clientWidth, lib_state.canvas.clientHeight);
            cov_1p9id9jzpv().s[18]++;
            lib_state.canvas.appendChild(lib_state.renderer.domElement); //Resize

            cov_1p9id9jzpv().s[19]++;
            window.addEventListener('resize', scene_resize); //Camera

            cov_1p9id9jzpv().s[20]++;
            lib_state.camera = new PerspectiveCamera(50, lib_state.canvas.clientWidth / lib_state.canvas.clientHeight, 0.1, 200);
            cov_1p9id9jzpv().s[21]++;
            lib_state.camera.position.set(0, plane.X / 2, -plane.Y); //Orbit controls

            cov_1p9id9jzpv().s[22]++;
            lib_state.controls = new OrbitControls(lib_state.camera, lib_state.canvas);
            cov_1p9id9jzpv().s[23]++;
            lib_state.controls.rotateSpeed = 0.7;
            cov_1p9id9jzpv().s[24]++;
            lib_state.controls.minDistance = 1;
            cov_1p9id9jzpv().s[25]++;
            lib_state.controls.maxDistance = 100;
            cov_1p9id9jzpv().s[26]++;
            lib_state.controls.minPolarAngle = 0;
            cov_1p9id9jzpv().s[27]++;
            lib_state.controls.maxPolarAngle = Math.PI;
            cov_1p9id9jzpv().s[28]++;
            lib_state.controls.mouseButtons = {
              LEFT: MOUSE.PAN,
              MIDDLE: MOUSE.DOLLY,
              RIGHT: MOUSE.ROTATE
            }; //Animation loop

            cov_1p9id9jzpv().s[29]++;

            animate = function animate() {
              cov_1p9id9jzpv().f[2]++;
              cov_1p9id9jzpv().s[30]++;
              //Update orbit controls
              lib_state.controls.update(); //Render

              cov_1p9id9jzpv().s[31]++;
              lib_state.renderer.render(lib_state.scene, lib_state.camera); //Recur

              cov_1p9id9jzpv().s[32]++;
              lib_state.renderID = requestAnimationFrame(animate);
            };

            cov_1p9id9jzpv().s[33]++;
            animate(); //Environment

            cov_1p9id9jzpv().s[34]++;

            if ((cov_1p9id9jzpv().b[1][0]++, "production" == 'development') || (cov_1p9id9jzpv().b[1][1]++, "production" == 'testing')) {
              cov_1p9id9jzpv().b[0][0]++;
              cov_1p9id9jzpv().s[35]++;

              window.getVue3dViewerState = function () {
                cov_1p9id9jzpv().f[3]++;
                cov_1p9id9jzpv().s[36]++;
                return lib_state;
              };
            } else {
              cov_1p9id9jzpv().b[0][1]++;
            }

          case 55:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function setup(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}(); //Export

cov_1p9id9jzpv().s[37]++;
var scene_teardown = function teardown() {
  cov_1p9id9jzpv().f[4]++;
  cov_1p9id9jzpv().s[38]++;
  //Resize
  window.removeEventListener('resize', scene_resize); //Cleanup scene

  cov_1p9id9jzpv().s[39]++;

  var _iterator = _createForOfIteratorHelper(lib_state.scene.children),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var mesh = _step.value;
      cov_1p9id9jzpv().s[40]++;

      //Geometry
      if ((cov_1p9id9jzpv().b[3][0]++, mesh.geometry != null) && (cov_1p9id9jzpv().b[3][1]++, typeof mesh.geometry.dispose == 'function')) {
        cov_1p9id9jzpv().b[2][0]++;
        cov_1p9id9jzpv().s[41]++;
        mesh.geometry.dispose();
      } else {
        cov_1p9id9jzpv().b[2][1]++;
      } //Material


      cov_1p9id9jzpv().s[42]++;

      if ((cov_1p9id9jzpv().b[5][0]++, mesh.material != null) && (cov_1p9id9jzpv().b[5][1]++, typeof mesh.material.dispose == 'function')) {
        cov_1p9id9jzpv().b[4][0]++;
        cov_1p9id9jzpv().s[43]++;
        mesh.material.dispose();
      } else {
        cov_1p9id9jzpv().b[4][1]++;
      }
    } //Stop animation loop

  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }

  cov_1p9id9jzpv().s[44]++;
  cancelAnimationFrame(lib_state.renderID); //Cleanup controls and renderer

  cov_1p9id9jzpv().s[45]++;
  lib_state.controls.dispose();
  cov_1p9id9jzpv().s[46]++;
  lib_state.renderer.dispose();
};
// CONCATENATED MODULE: ./node_modules/cache-loader/dist/cjs.js??ref--13-0!./node_modules/thread-loader/dist/cjs.js!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/viewer.vue?vue&type=script&lang=js&




//
//
//
//
//Imports


/* harmony default export */ var viewervue_type_script_lang_js_ = ({
  props: {
    file: {
      type: ArrayBuffer,
      required: true
    },
    extension: {
      type: String,
      required: true
    },
    plane: {
      default: function _default() {
        return {
          X: 10,
          Y: 10
        };
      },
      type: Object
    },
    position: {
      default: function _default() {
        return {
          X: 5,
          Y: 0,
          Z: -5
        };
      },
      type: Object
    },
    rotation: {
      default: function _default() {
        return {
          X: -90,
          Y: 0,
          Z: 180
        };
      },
      type: Object
    },
    scale: {
      default: function _default() {
        return {
          X: 0.1,
          Y: 0.1,
          Z: 0.1
        };
      },
      type: Object
    },
    theme: {
      default: function _default() {
        return {
          background: '#dfe4ed',
          plane: '#586375',
          primary: '#4287f5',
          secondary: '#0a2f6b'
        };
      },
      type: Object
    },
    transfer: {
      default: true,
      type: Boolean
    }
  },
  mounted: function mounted() {
    //Setup the scene
    setup(this.$refs.canvas, this.plane, this.theme);
  },
  beforeDestroy: function beforeDestroy() {
    scene_teardown();
  },
  watch: {
    file: function () {
      var _file2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_file) {
        var _this = this;

        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return update_file(_file, this.extension, this.transfer, this.theme, function (percent) {
                  _this.$emit('progress', percent);
                });

              case 2:
                update_position(this.position);
                update_rotation(this.rotation);
                update_scale(this.scale);
                this.$emit('done');

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function file(_x) {
        return _file2.apply(this, arguments);
      }

      return file;
    }(),
    plane: {
      deep: true,
      handler: update_plane
    },
    position: {
      deep: true,
      handler: update_position
    },
    rotation: {
      deep: true,
      handler: update_rotation
    },
    scale: {
      deep: true,
      handler: update_scale
    },
    theme: {
      deep: true,
      handler: update_theme
    }
  }
});
// CONCATENATED MODULE: ./src/viewer.vue?vue&type=script&lang=js&
 /* harmony default export */ var src_viewervue_type_script_lang_js_ = (viewervue_type_script_lang_js_); 
// EXTERNAL MODULE: ./src/viewer.vue?vue&type=style&index=0&lang=css&
var viewervue_type_style_index_0_lang_css_ = __webpack_require__("019d");

// CONCATENATED MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}

// CONCATENATED MODULE: ./src/viewer.vue






/* normalize component */

var component = normalizeComponent(
  src_viewervue_type_script_lang_js_,
  render,
  staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* harmony default export */ var viewer = (component.exports);
// CONCATENATED MODULE: ./src/main.js
function cov_16xxibl3nm() {
  var path = "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/main.js";
  var hash = "6f033d9eb8ca307d35e64c06eae9ec4495832983";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/ivanhryshko/Documents/github/vue-3d-viewer/src/main.js",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 21,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 12
          }
        },
        loc: {
          start: {
            line: 15,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6f033d9eb8ca307d35e64c06eae9ec4495832983"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16xxibl3nm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_16xxibl3nm();

/**
 * @fileoverview Vue 3D Viewer
 */
//Imports
 //Export

/* harmony default export */ var main = ({
  /**
   * @function Install Vue 3D Viewer
   * @param vue Vue instance
   */
  install: function install(vue) {
    cov_16xxibl3nm().f[0]++;
    cov_16xxibl3nm().s[0]++;
    //Register component
    vue.mixin({
      components: {
        'three-d-viewer': viewer
      }
    });
  }
});
// CONCATENATED MODULE: ./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js


/* harmony default export */ var entry_lib = __webpack_exports__["default"] = (main);



/***/ }),

/***/ "fb6a":
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__("23e7");
var isObject = __webpack_require__("861d");
var isArray = __webpack_require__("e8b5");
var toAbsoluteIndex = __webpack_require__("23cb");
var toLength = __webpack_require__("50c4");
var toIndexedObject = __webpack_require__("fc6a");
var createProperty = __webpack_require__("8418");
var wellKnownSymbol = __webpack_require__("b622");
var arrayMethodHasSpeciesSupport = __webpack_require__("1dde");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "fc6a":
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__("44ad");
var requireObjectCoercible = __webpack_require__("1d80");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "fdbc":
/***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "fdbf":
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_SYMBOL = __webpack_require__("4930");

module.exports = NATIVE_SYMBOL
  /* global Symbol -- safe */
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "fea9":
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__("da84");

module.exports = global.Promise;


/***/ })

/******/ });
});
//# sourceMappingURL=vue-3d-viewer.umd.js.map